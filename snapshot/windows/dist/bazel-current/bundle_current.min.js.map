{"version":3,"sources":["src\\bundle_current.js"],"names":["__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","NG_COMPONENT_DEF","ngComponentDef","NG_INJECTABLE_DEF","ngDirectiveDef","ngInjectableDef","NG_BASE_DEF","ngInjectorDef","ngPipeDef","ngModuleDef","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","factory","value","undefined","getInjectableDef","type","InjectionToken","_desc","options","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","arguments","length","call","apply","concat","annotationInstance","bind","TypeDecorator","cls","defineProperty","push","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","annotation","ParamDecorator","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","attributeName","Query","ChangeDetectionStrategy","selector","data","assign","first","isViewQuery","descendants","OnPush","Default","__window","window","__self","self","WorkerGlobalScope","_global","global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol","iterator","keys","getOwnPropertyNames","Map","i","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","ViewEncapsulation","Emulated","Native","None","ShadowDom","NodeInjectorFactory","TVIEW","FLAGS","PARENT","NEXT","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","CONTAINER_INDEX","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","readElementValue","isArray","getNativeByTNode","tNode","hostView","getComponentViewByIndex","nodeIndex","slotValue","isComponentDef","def","template","readPatchedData","readPatchedLView","lView","getParentInjectorIndex","parentLocation","getParentInjectorView","location","startView","viewOffset","getParentInjectorViewOffset","parentView","defaultScheduler","requestAnimationFrame","setTimeout","findComponentView","rootTNode","Inject","Optional","Self","SkipSelf","InjectFlags","Host","_injectImplementation","previousOrParentTNode","isParent","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","j","queueContentHooks","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","onDestroy","destroyHooks","executeHooks","currentView","allHooks","checkHooks","checkNoChangesMode","hooksToCall","callHooks","arr","getLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","view","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","firstTemplatePass","getFirstTemplatePass","setFirstTemplatePass","enterView","newView","hostTNode","oldView","leaveView","bindingStartIndex","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","insertBloom","footer","getInjectorIndex","injectorIndex","parent","getParentInjectorLocation","NOT_FOUND","searchTokensOnInjector","previousTView","hostTElementNode","currentTView","injectableIdx","locateDirectiveOrProvider","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","isComponent","getNodeInjectable","tData","lData","isFactory","obj","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","savePreviousOrParentTNode","saveLView","bloomHasToken","bloomHash","injectorView","b6","b5","shouldSearchParent","isFirstHostTNode","NodeInjector","_tNode","_lView","getOrCreateInjectable","bloomHashBitOrFactory","charCodeAt","tokenId","instance","moduleInjector","attachPatchData","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","slice","e","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","next","item2","done","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","o","NO_CHANGE","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","projectionNodeStack","executeNodeAction","action","node","beforeNode","insertBefore","removeChild","getLViewChild","childIndex","getParentState","state","rootView","getLContainer","embeddedView","containerHostIndex","cleanUpView","viewOrContainer","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","removeListeners","tCleanup","lCleanup","listener","native","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","_CLEAN_PROMISE","refreshDescendantViews","checkNoChangesMode_1","executeInitHooks","initHooks","refreshDynamicEmbeddedViews","container","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","contentQueries","directiveDefIdx","setHostBindings","viewData","expandoInstructions","bindingRootIndex_1","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","components","viewAttached","syncViewWithBlueprint","componentView","componentTView","blueprint","checkView","createLView","parentLView","context","rendererFactory","sanitizer","createNodeAtIndex","attrs","adjustedIndex","createTNode","child","firstChild","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","getRootContext","viewOrComponent","getRootView","namespaceHTML","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","begin","end","_currentNamespace","createTView","viewIndex","consts","vars","directives","pipes","viewQuery","initialViewLength","createViewBlueprint","fill","id","cleanup","directiveRegistry","pipeRegistry","tagName","tViews","tParent","localNames","initialInputs","inputs","outputs","detached","stylingTemplate","projection","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","component","hostTView","createViewQuery","updateViewQuery","CLEAN_PROMISE","createRootContext","scheduler","playerHandler","clean","LifecycleHooksFeature","rootTView","dirIndex","queueInitHooks","onInit","doCheck","queueLifecycleHooks","noop","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","providers","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","text","charAt","substr","parts","JSON","replace","APP_ROOT","ComponentRef","ComponentFactory","noComponentFactoryError","error","ERROR_COMPONENT","ComponentFactoryResolver","_NullComponentFactoryResolver","resolveComponentFactory","R3ElementRef","ElementRef","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","RootViewRef","_view","detectChanges","checkNoChanges","checkNoChangesInRootView","enumerable","configurable","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","parentTNode","result","tNodeChild","_lookUpContext","detachView","detach","destroyLView","destroyNode","walkTNodeTree","viewToWalk","renderParent","projectionNodeIndex","nextTNode","nodeOrContainer","lContainer","head","destroyViewTree","callback","storeCleanupFn","getCleanup","getTViewCleanup","markForCheck","markViewDirty","scheduleTick","res_1","nothingScheduled","r","flushPlayers","reattach","getComponentViewByInstance","componentInstance","findViaComponent","componentIndices","elementComponentIndex","createLContext","localRefs","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","Renderer2","Renderer","RendererFactory2","RendererStyleFlags2","Important","DashCase","SWITCH_RENDERER2_FACTORY","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","Version","Sanitizer","VERSION","full","major","split","minor","patch","ComponentFactoryResolver$1","componentDef","getComponentDef","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","selectors","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","elementCreate","overriddenRenderer","rendererToUse","createElement","createElementNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","rootFlags","onPush","setAttribute","tElementNode","rootLView","oldLView","createRootComponentView","rNode","resetComponentState","getOrCreateTView","ngPrivateData","directiveDefs","pipeDefs","diPublicInInjector","bloomAdd","bloomBit","mask","getOrCreateNodeInjectorForNode","existingInjectorIndex","parentLoc","parentIndex","hasParentInjector","parentData","initNodeFlags","numberOfDirectives","queueComponentIndexForCheck","getTNode","projection$$1","nodeList","firstTNode","previousTNode","splice","createRootComponent","hostFeatures","instantiateRootComponent","providersResolver","generateExpandoInstructionBlock","directiveCount","elementIndex","baseResolveDirective","directiveFactory","nodeInjectorFactory","directive","postProcessBaseDirective","attributes","setUpAttributes","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttributeNS","setProperty","feature","hostBindings","addToViewTree","adjustedHostIndex","componentRef","ComponentRef$1","createElementRef","ElementRefToken","ElementRef_","_rootLView","destroyCbs","changeDetectorRef","createViewNode","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","appendChild","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","_a","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","merge","sets","sets_1","s","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","endElement","checkClobberedElement","element","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","getTemplateContent","isTemplateElement","content","isFunction","x","_enable_super_gross_mode_that_will_cause_bad_things","config","useDeprecatedSynchronousErrorHandling","stack","log","hostReportError","err","empty","closed","complete","isObject","tryCatchTarget","errorObject","tryCatcher","tryCatch","UnsubscriptionErrorImpl","errors","UnsubscriptionError","Subscription","_parents","_subscriptions","_unsubscribe","hasErrors","len","remove","flattenUnsubscriptionErrors","sub","add","teardown","subscription","_addParent","tmp","subscriptions","subscriptionIndex","reduce","errs","rxSubscriber","Math","random","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","_parentSubscription","destination","SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","_parentSubscriber","observerOrNext","__tryOrSetError","__tryOrUnsub","wrappedComplete","observable","noop$1","Observable","subscribe","_isScalar","_subscribe","lift","operator","observable$$1","sink","toSubscriber","nextOrObserver","_trySubscribe","canReportError","observer","promiseCtor","getPromiseCtor","reject","pipe","operations","pipeFromArray","fns","piped","input","prev","toPromise","ObjectUnsubscribedErrorImpl","ObjectUnsubscribedError","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","AnonymousSubject","copy","asObservable","refCount","refCountOperatorFunction","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","connectableProto","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","ConnectableSubscriber","connectableObservableDescriptor","writable","AsyncAction","work","pending","schedule","delay","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Action","QueueAction","Scheduler","SchedulerAction","now","Date","AsyncScheduler","delegate","active","scheduled","shift","QueueScheduler","subscribeToArray","fromArray","nextHandle","tasksByHandle","AsapAction","cb","handle","runIfPresent","AnimationFrameAction","AsapScheduler","count","cancelAnimationFrame","identity","AnimationFrameScheduler","MapOperator","project","thisArg","MapSubscriber","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","InnerSubscriber","subscribeToPromise","getSymbolIterator$1","subscribeToIterable","iterable","iterator$$1","return","subscribeToObservable","obs","TypeError","isArrayLike","isPromise","subscribeTo","TemplateRef","MergeMapOperator","concurrent","Number","POSITIVE_INFINITY","MergeMapSubscriber","hasCompleted","buffer","_tryNext","_innerSub","ish","innerSubscriber","subscribeToResult","outerSubscriber","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","schedulerFn","errorFn","completeFn","SWITCH_TEMPLATE_REF_FACTORY","SAFE_STYLE_VALUE","QueryList_","dirty","changes","_values","_valuesTree","filter","find","init","some","toArray","reset","flatten","list","notifyOnChanges","setDirty","RegExp","URL_RE","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","t","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","Component","c","changeDetection","dir","SWITCH_COMPILE_DIRECTIVE","SWITCH_COMPILE_COMPONENT","updateBaseDefFromIOProp","pure","SWITCH_COMPILE_PIPE","getProp","inheritedBaseDef","baseDef","declaredInputs","initializeBaseDef","bindingPropertyName","hostPropertyName","eventName","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","NgModule","SWITCH_COMPILE_NGMODULE","preR3NgModuleCompile","moduleType","metadata","imports","exports","defineInjector","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","MulticastOperator","shareSubjectFactory","isPromise$1","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","runInitializers","asyncInitPromises","initResult","all","catch","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","Console","_throwError","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","trace","events","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","returnValue","leaveScope","NgZone","_c","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$2","cancelTask","runGuarded","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","clear","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_platform","_NoopGetTestability","registry","ALLOW_MULTIPLE_PLATFORMS","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","createPlatform","destroyed","PlatformRef","inits","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","_bootstrapComponents","f","bootstrap","ngDoBootstrap","module","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","stableSub","unstableSub","merge$1","observables","last","isScheduler","mergeAll","mergeMap","resultSelector","isInteropObservable","fromObservable","fromPromise","isIterable","fromIterable","mapOperation","share","multicast","subjectOrSubjectFactory","multicastOperatorFunction","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","viewRef","ngOnDestroy","ViewContainerRef","QueryList$1","_results","flatten$2","flat","flatItem","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","listeners","DebugElement__PRE_R3__","addChild","references","providerTokens","classes","styles","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","parentNode","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","getPreviousIndex","adjPreviousIndex","currentIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","iterator_1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","iterableDiff","platformCore","LOCALE_ID","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","queryId","valueType","filterQueryId","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","encapsulation","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","visitSiblingRenderNodes","startIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","elDef","selectorOrNode","ns","createComment","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","addClass","removeClass","setElementStyle","unit","suffix","setStyle","removeStyle","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","moduleProvideDef","resolveNgModuleDep","depDef","tokenKey$$1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","ComponentFactory_","viewDefFactory","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","parentNodeDef","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Set","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","searchView","findCompView","viewContainer","allProviders","publicProviders","providerData","updateProp","callLifecycleHooksChildrenFirst","parent_2","callProviderLifecycles","directChildFlags","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","elementDef_1","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","childMatchedQueries","dvc","projectedView","queryValueType","appendNgContent","prefix","_addInterpolationPart","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","lastRenderRootNode","validateNode","isComponent_1","componentProvider","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentEnd","anchorDef$$1","createView","initView","createViewNodes","compRenderer","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdatePureExpressionInline","transform","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","callViewAction","viewState","execProjectedViewsAction","queryFlags","staticDynamicQueryFlag","checkType","createProdRootView","elInjector","createRootData","debugCreateRootView","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","debugCreateEmbeddedView","anchorDef","viewDef$$1","debugCreateComponentView","viewDefOverrides","debugCreateNgModuleRef","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","debugOverrideProvider","debugOverrideComponentView","comp","compFactory","getComponentViewDefinitionFactory","debugClearOverrides","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","prodCheckAndUpdateNode","checkIndex","prodCheckNoChangesNode","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","_currentAction","_currentView","_currentNodeIndex","debugSetCurrentNode","debugHandleEvent","debugUpdateDirectives","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","debugUpdateRenderer","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","m","attr","DebugContext_","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","initServicesIfNeeded","services","createDebugServices","createProdServices","cloneNgModuleDefinition","PlatformLocation","digitModifier","inner","date","locale","hourExtractor","intlDateFormat","Intl","DateTimeFormat","format","timeZoneGetter$1","timezone","hour","hour12","timeZoneName","hour12Modify","digitCondition","nameCondition","combine","merged","opt","datePartGetterFactory","ret","DOCUMENT","PLATFORM_SERVER_ID","BrowserViewportScroller","setOffset","getScrollPosition","supportScrollRestoration","scrollX","scrollY","scrollToPosition","position","scrollTo","scrollToAnchor","anchor","elSelectedById","scrollToElement","elSelectedByName","setHistoryScrollRestoration","scrollRestoration","history_1","history","rect","getBoundingClientRect","left","pageXOffset","top","pageYOffset","_DOM","getDOM","nodeContains","GenericBrowserDomAdapter","_animationPrefix","_transitionEnd","element_1","getStyle","domPrefixes","transEndEventNames_1","WebkitTransition","MozTransition","OTransition","transition","getDistributedNodes","resolveAndSetHref","baseUrl","href","supportsDOMEvents","supportsNativeShadowDOM","createShadowRoot","getAnimationPrefix","getTransitionEnd","supportsAnimation","DomAdapter","resourceLoaderType","_attrToPropMap","class","innerHtml","readonly","tabindex","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","_chromeNumKeyPadMap","A","B","C","D","E","F","G","H","I","J","K","M","N","O","`","","contains","urlParsingNode","BrowserDomAdapter","parse","templateHtml","makeCurrent","setRootDomAdapter","adapter","hasProperty","element$$1","getProperty","logGroup","group","logGroupEnd","groupEnd","nodeA","nodeB","querySelectorAll","on","evt","listener$$1","addEventListener","onAndCancel","createMouseEvent","eventType","getDefaultDocument","createEvent","initEvent","preventDefault","isPrevented","defaultPrevented","getInnerHTML","getOuterHTML","nodeValue","childNodesAsList","clearNodes","replaceChild","insertAllBefore","n","insertAfter","setInnerHTML","getText","textContent","getValue","getChecked","checked","setChecked","text$$1","createTemplate","doc","createTextNode","createScriptTag","attrValue","createStyleElement","css","getShadowRoot","shadowRoot","getHost","host","clone","cloneNode","getElementsByClassName","getElementsByTagName","classList","hasClass","stylename","hasStyle","attributeMap","attrib","hasAttribute","attribute","hasAttributeNS","getAttribute","getAttributeNS","removeAttributeNS","templateAwareRoot","createHtmlDocument","bottom","right","width","height","getTitle","title","setTitle","newTitle","elementMatches","isElementNode","msMatchesSelector","webkitMatchesSelector","isTextNode","isCommentNode","COMMENT_NODE","hasShadowRoot","HTMLElement","isShadowRoot","DocumentFragment","importIntoDoc","importNode","adoptNode","getHref","getEventKey","keyIdentifier","startsWith","fromCharCode","parseInt","getGlobalEventTarget","getHistory","getLocation","getBaseHref","getBaseElementHref","baseElement","relativePath","pathname","resetBaseElement","getUserAgent","navigator","userAgent","setData","getData","getComputedStyle","supportsWebAnimation","performanceNow","performance","getTime","supportsCookies","getCookie","parseCookieValue","cookieStr","encodeURIComponent","cookie","eqIndex","cookieValue","decodeURIComponent","setCookie","DOCUMENT$1","supportsState","pushState","BrowserPlatformLocation","_doc","_init","_history","getBaseHrefFromDOM","onPopState","onHashChange","newPath","search","hash","replaceState","forward","back","BrowserGetTestability","setTestabilityGetter","testabilities","didWork","decrement","didWork_","EVENT_MANAGER_PLUGINS","EventManager","plugins","_eventNameToPlugin","manager","_plugins","handler","_findPluginFor","addGlobalEventListener","getZone","plugin","plugin_1","EventManagerPlugin","SharedStylesHost","_stylesSet","addStyles","additions","onStylesAdded","getAllStyles","DomSharedStylesHost","_hostNodes","_styleNodes","_addStylesToHost","styleEl","addHost","hostNode","removeHost","styleNode","NAMESPACE_URIS","svg","xhtml","xlink","xml","xmlns","COMPONENT_REGEX","HOST_ATTR","CONTENT_ATTR","flattenStyles","compId","decoratePreventDefault","eventHandler","DomRendererFactory2","eventManager","sharedStylesHost","rendererByCompId","DefaultDomRenderer2","EmulatedEncapsulationDomRenderer2","applyToHost","ShadowDomRenderer","namespaceUri","removeProperty","checkNoSyntheticProp","AT_CHARCODE","nameKind","blackListedMap","contentAttr","shimContentAttribute","componentShortId","hostAttr","shimHostAttribute","hostEl","attachShadow","nodeOrShadowRoot","__symbol__","ADD_EVENT_LISTENER","REMOVE_EVENT_LISTENER","symbolNames","stopSymbol","blackListedEvents","isBlackListedEvent","globalListener","symbolName","taskDatas","taskData","copiedTasks","DomEventsPlugin","platformId","isPlatformServer","patchEvent","Event","stopImmediatePropagation","globalListenerRegistered","callbackRegistered","underlyingRemove","found","EVENT_NAMES","pan","panstart","panmove","panend","pancancel","panleft","panright","panup","pandown","pinch","pinchstart","pinchmove","pinchend","pinchcancel","pinchin","pinchout","press","pressup","rotate","rotatestart","rotatemove","rotateend","rotatecancel","swipe","swipeleft","swiperight","swipeup","swipedown","tap","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","overrides","buildHammer","mc","enable","HammerGesturesPlugin","_config","loader","isCustomEvent","Hammer","cancelRegistration_1","deregister_1","off","MODIFIER_KEYS","MODIFIER_KEY_GETTERS","alt","altKey","control","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","domEventName","_normalizeKey","fullKey","modifierName","getEventFullKey","modifierGetter","keyName","DomSanitizerImpl","ctx","SafeHtmlImpl","changingThisBreaksApplicationSecurity","checkNotSafeValue","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","parent_1","SafeStyleImpl","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","SafeScriptImpl","SafeResourceUrlImpl","SafeUrlImpl","expectedType","SafeValueImpl","getTypeName","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","DomSanitizer","platformBrowser","initDomAdapter","_document","createMeta","Meta","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","getTag","attrSelector","getTags","updateTag","_parseSelector","_setMetaElementAttributes","removeTag","removeTagElement","_containsAttributes","every","createTitle","Title","AppComponent","AppModule","declarations","AppModuleNgFactory","createNgModuleFactory","ngModuleType","defFactory","_l","moduleDef","AppComponentNgFactory","RenderType_AppComponent","createRendererType2","View_AppComponent_0","textDef","staticText","nonMinifiedName","ngContent","createComponentFactory","View_AppComponent_Host_0","elementDef","fixedAttrs","bindingDefs","_d","suffixOrSecurityContext","_e","ns_1","name_1","outputDefs","_f","resolveRendererType2","isFilled","directiveDef","depDefs","enableProdMode"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n(function () {\r\n    'use strict';\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * @template T\r\n     * @param {?} objWithPropertyToExtract\r\n     * @return {?}\r\n     */\r\n    function getClosureSafeProperty(objWithPropertyToExtract) {\r\n        for (var key in objWithPropertyToExtract) {\r\n            if (objWithPropertyToExtract[key] === ((getClosureSafeProperty))) {\r\n                return key;\r\n            }\r\n        }\r\n        throw Error('Could not find renamed property on target object.');\r\n    }\r\n    /**\r\n     * Sets properties on a target object from a source object, but only if\r\n     * the property doesn't already exist on the target object.\r\n     * @param {?} target The target to set properties on\r\n     * @param {?} source The source of the property keys and values to set\r\n     * @return {?}\r\n     */\r\n    function fillProperties(target, source) {\r\n        for (var key in source) {\r\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\r\n    /** @type {?} */\r\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\r\n    /** @type {?} */\r\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\r\n    /** @type {?} */\r\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\r\n    /** @type {?} */\r\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\r\n    /** @type {?} */\r\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\r\n    /** @type {?} */\r\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\r\n    /**\r\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\r\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\r\n     * bloom filter bit for DI.\r\n     * @type {?}\r\n     */\r\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\r\n     * in which injectors (if any) it will be available.\r\n     *\r\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\r\n     * `InjectableType`.\r\n     *\r\n     * Options:\r\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\r\n     *   with an `\\@NgModule` or other `InjectorType`, or by specifying that this injectable should be\r\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\r\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\r\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\r\n     *\r\n     * \\@publicApi\r\n     * @template T\r\n     * @param {?} opts\r\n     * @return {?}\r\n     */\r\n    function defineInjectable(opts) {\r\n        return ((((({\r\n            providedIn: ((opts.providedIn)) || null, factory: opts.factory, value: undefined,\r\n        })))));\r\n    }\r\n    /**\r\n     * Construct an `InjectorDef` which configures an injector.\r\n     *\r\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\r\n     * `InjectorType`.\r\n     *\r\n     * Options:\r\n     *\r\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\r\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\r\n     *   use the `inject` function.\r\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\r\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\r\n     *   type must be an `InjectableType`).\r\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\r\n     *   whose providers will also be added to the injector. Locally provided types will override\r\n     *   providers from imports.\r\n     *\r\n     * \\@publicApi\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    function defineInjector(options) {\r\n        return ((((({\r\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\r\n        })))));\r\n    }\r\n    /**\r\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\r\n     *\r\n     * @template T\r\n     * @param {?} type type which may have `ngInjectableDef`\r\n     * @return {?}\r\n     */\r\n    function getInjectableDef(type) {\r\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? (((type)))[NG_INJECTABLE_DEF] : null;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Creates a token that can be used in a DI Provider.\r\n     *\r\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\r\n     * runtime representation) such as when injecting an interface, callable type, array or\r\n     * parametrized type.\r\n     *\r\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\r\n     * the `Injector`. This provides additional level of type safety.\r\n     *\r\n     * ```\r\n     * interface MyInterface {...}\r\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\r\n     * // myInterface is inferred to be MyInterface.\r\n     * ```\r\n     *\r\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\r\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\r\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\r\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\r\n     * dependencies, it can do so using the `inject` function. See below for an example.\r\n     *\r\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\r\n     * overrides the above behavior and marks the token as belonging to a particular `\\@NgModule`. As\r\n     * mentioned above, `'root'` is the default value for `providedIn`.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Basic Example\r\n     *\r\n     * ### Plain InjectionToken\r\n     *\r\n     * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\r\n     *\r\n     * ### Tree-shakable InjectionToken\r\n     *\r\n     * {\\@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\r\n     *\r\n     *\r\n     * \\@publicApi\r\n     * @template T\r\n     */\r\n    var InjectionToken = /** @class */ (function () {\r\n        /**\r\n         * @param {?} _desc\r\n         * @param {?=} options\r\n         */\r\n        function InjectionToken(_desc, options) {\r\n            this._desc = _desc;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this.ngMetadataName = 'InjectionToken';\r\n            if (options !== undefined) {\r\n                /** @nocollapse */ this.ngInjectableDef = defineInjectable({\r\n                    providedIn: options.providedIn || 'root',\r\n                    factory: options.factory,\r\n                });\r\n            }\r\n            else {\r\n                /** @nocollapse */ this.ngInjectableDef = undefined;\r\n            }\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\r\n        return InjectionToken;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var ANNOTATIONS = '__annotations__';\r\n    /** @type {?} */\r\n    var PARAMETERS = '__parameters__';\r\n    /** @type {?} */\r\n    var PROP_METADATA = '__prop__metadata__';\r\n    /**\r\n     * @suppress {globalThis}\r\n     * @template T\r\n     * @param {?} name\r\n     * @param {?=} props\r\n     * @param {?=} parentClass\r\n     * @param {?=} additionalProcessing\r\n     * @param {?=} typeFn\r\n     * @return {?}\r\n     */\r\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\r\n        /** @type {?} */\r\n        var metaCtor = makeMetadataCtor(props);\r\n        /**\r\n         * @param {...?} args\r\n         * @return {?}\r\n         */\r\n        function DecoratorFactory() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            if (this instanceof DecoratorFactory) {\r\n                metaCtor.call.apply(metaCtor, [this].concat(args));\r\n                return this;\r\n            }\r\n            /** @type {?} */\r\n            var annotationInstance = new ((((DecoratorFactory))).bind.apply((((DecoratorFactory))), [void 0].concat(args)))();\r\n            return function TypeDecorator(cls) {\r\n                if (typeFn)\r\n                    typeFn.apply(void 0, [cls].concat(args));\r\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\r\n                // prevents the property is copied during subclassing.\r\n                /** @type {?} */\r\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\r\n                    (((cls)))[ANNOTATIONS] :\r\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\r\n                annotations.push(annotationInstance);\r\n                if (additionalProcessing)\r\n                    additionalProcessing(cls);\r\n                return cls;\r\n            };\r\n        }\r\n        if (parentClass) {\r\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\r\n        }\r\n        DecoratorFactory.prototype.ngMetadataName = name;\r\n        (((DecoratorFactory))).annotationCls = DecoratorFactory;\r\n        return ((DecoratorFactory));\r\n    }\r\n    /**\r\n     * @param {?=} props\r\n     * @return {?}\r\n     */\r\n    function makeMetadataCtor(props) {\r\n        return function ctor() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            if (props) {\r\n                /** @type {?} */\r\n                var values = props.apply(void 0, args);\r\n                for (var propName in values) {\r\n                    this[propName] = values[propName];\r\n                }\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} name\r\n     * @param {?=} props\r\n     * @param {?=} parentClass\r\n     * @return {?}\r\n     */\r\n    function makeParamDecorator(name, props, parentClass) {\r\n        /** @type {?} */\r\n        var metaCtor = makeMetadataCtor(props);\r\n        /**\r\n         * @param {...?} args\r\n         * @return {?}\r\n         */\r\n        function ParamDecoratorFactory() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            if (this instanceof ParamDecoratorFactory) {\r\n                metaCtor.apply(this, args);\r\n                return this;\r\n            }\r\n            /** @type {?} */\r\n            var annotationInstance = new ((((ParamDecoratorFactory))).bind.apply((((ParamDecoratorFactory))), [void 0].concat(args)))();\r\n            (((ParamDecorator))).annotation = annotationInstance;\r\n            return ParamDecorator;\r\n            /**\r\n             * @param {?} cls\r\n             * @param {?} unusedKey\r\n             * @param {?} index\r\n             * @return {?}\r\n             */\r\n            function ParamDecorator(cls, unusedKey, index) {\r\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\r\n                // prevents the property is copied during subclassing.\r\n                /** @type {?} */\r\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\r\n                    (((cls)))[PARAMETERS] :\r\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\r\n                // there might be gaps if some in between parameters do not have annotations.\r\n                // we pad with nulls.\r\n                while (parameters.length <= index) {\r\n                    parameters.push(null);\r\n                }\r\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\r\n                return cls;\r\n            }\r\n        }\r\n        if (parentClass) {\r\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\r\n        }\r\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\r\n        (((ParamDecoratorFactory))).annotationCls = ParamDecoratorFactory;\r\n        return ParamDecoratorFactory;\r\n    }\r\n    /**\r\n     * @param {?} name\r\n     * @param {?=} props\r\n     * @param {?=} parentClass\r\n     * @param {?=} additionalProcessing\r\n     * @return {?}\r\n     */\r\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\r\n        /** @type {?} */\r\n        var metaCtor = makeMetadataCtor(props);\r\n        /**\r\n         * @param {...?} args\r\n         * @return {?}\r\n         */\r\n        function PropDecoratorFactory() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            if (this instanceof PropDecoratorFactory) {\r\n                metaCtor.apply(this, args);\r\n                return this;\r\n            }\r\n            /** @type {?} */\r\n            var decoratorInstance = new ((((PropDecoratorFactory))).bind.apply((((PropDecoratorFactory))), [void 0].concat(args)))();\r\n            /**\r\n             * @param {?} target\r\n             * @param {?} name\r\n             * @return {?}\r\n             */\r\n            function PropDecorator(target, name) {\r\n                /** @type {?} */\r\n                var constructor = target.constructor;\r\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\r\n                // prevents the property is copied during subclassing.\r\n                /** @type {?} */\r\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\r\n                    (((constructor)))[PROP_METADATA] :\r\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\r\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\r\n                meta[name].unshift(decoratorInstance);\r\n                if (additionalProcessing)\r\n                    additionalProcessing.apply(void 0, [target, name].concat(args));\r\n            }\r\n            return PropDecorator;\r\n        }\r\n        if (parentClass) {\r\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\r\n        }\r\n        PropDecoratorFactory.prototype.ngMetadataName = name;\r\n        (((PropDecoratorFactory))).annotationCls = PropDecoratorFactory;\r\n        return PropDecoratorFactory;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * This token can be used to create a virtual provider that will populate the\r\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\r\n     * All components that are referenced in the `useValue` value (either directly\r\n     * or in a nested array or map) will be added to the `entryComponents` property.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     * The following example shows how the router can populate the `entryComponents`\r\n     * field of an NgModule based on the router configuration which refers\r\n     * to components.\r\n     *\r\n     * ```typescript\r\n     * // helper function inside the router\r\n     * function provideRoutes(routes) {\r\n     *   return [\r\n     *     {provide: ROUTES, useValue: routes},\r\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\r\n     *   ];\r\n     * }\r\n     *\r\n     * // user code\r\n     * let routes = [\r\n     *   {path: '/root', component: RootComp},\r\n     *   {path: '/teams', component: TeamsComp}\r\n     * ];\r\n     *\r\n     * \\@NgModule({\r\n     *   providers: [provideRoutes(routes)]\r\n     * })\r\n     * class ModuleWithRoutes {}\r\n     * ```\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * Attribute decorator and metadata.\r\n     *\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * Base class for query metadata.\r\n     *\r\n     * @see `ContentChildren`.\r\n     * @see `ContentChild`.\r\n     * @see `ViewChildren`.\r\n     * @see `ViewChild`.\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var Query = /** @class */ (function () {\r\n        function Query() {\r\n        }\r\n        return Query;\r\n    }());\r\n    /**\r\n     * ContentChildren decorator and metadata.\r\n     *\r\n     *\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\r\n        if (data === void 0) { data = {}; }\r\n        return (Object.assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\r\n    }, Query);\r\n    /**\r\n     * ContentChild decorator and metadata.\r\n     *\r\n     *\r\n     * \\@Annotation\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\r\n        if (data === void 0) { data = {}; }\r\n        return (Object.assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\r\n    }, Query);\r\n    /**\r\n     * ViewChildren decorator and metadata.\r\n     *\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\r\n        if (data === void 0) { data = {}; }\r\n        return (Object.assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\r\n    }, Query);\r\n    /**\r\n     * ViewChild decorator and metadata.\r\n     *\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) { return (Object.assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data)); }, Query);\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /** @enum {number} */\r\n    var ChangeDetectionStrategy = {\r\n        /**\r\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\r\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\r\n         * Change detection can still be explicitly invoked.\r\n         */\r\n        OnPush: 0,\r\n        /**\r\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\r\n         * explicitly deactivated.\r\n         */\r\n        Default: 1,\r\n    };\r\n    ChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = 'OnPush';\r\n    ChangeDetectionStrategy[ChangeDetectionStrategy.Default] = 'Default';\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /** @type {?} */\r\n    var __window = typeof window !== 'undefined' && window;\r\n    /** @type {?} */\r\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\r\n        self instanceof WorkerGlobalScope && self;\r\n    /** @type {?} */\r\n    var __global = typeof global !== 'undefined' && global;\r\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\r\n    // should be __global in that case.\r\n    /** @type {?} */\r\n    var _global = __global || __window || __self;\r\n    /** @type {?} */\r\n    var promise = Promise.resolve(0);\r\n    /** @type {?} */\r\n    var _symbolIterator = null;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function getSymbolIterator() {\r\n        if (!_symbolIterator) {\r\n            /** @type {?} */\r\n            var Symbol = _global['Symbol'];\r\n            if (Symbol && Symbol.iterator) {\r\n                _symbolIterator = Symbol.iterator;\r\n            }\r\n            else {\r\n                // es6-shim specific logic\r\n                /** @type {?} */\r\n                var keys = Object.getOwnPropertyNames(Map.prototype);\r\n                for (var i = 0; i < keys.length; ++i) {\r\n                    /** @type {?} */\r\n                    var key = keys[i];\r\n                    if (key !== 'entries' && key !== 'size' &&\r\n                        (((Map))).prototype[key] === Map.prototype['entries']) {\r\n                        _symbolIterator = key;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return _symbolIterator;\r\n    }\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function scheduleMicroTask(fn) {\r\n        if (typeof Zone === 'undefined') {\r\n            // use promise to schedule microTask instead of use Zone\r\n            promise.then(function () { fn && fn.apply(null, null); });\r\n        }\r\n        else {\r\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\r\n        }\r\n    }\r\n    // JS has NaN !== NaN\r\n    /**\r\n     * @param {?} a\r\n     * @param {?} b\r\n     * @return {?}\r\n     */\r\n    function looseIdentical(a, b) {\r\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\r\n    }\r\n    /**\r\n     * @param {?} token\r\n     * @return {?}\r\n     */\r\n    function stringify(token) {\r\n        if (typeof token === 'string') {\r\n            return token;\r\n        }\r\n        if (token instanceof Array) {\r\n            return '[' + token.map(stringify).join(', ') + ']';\r\n        }\r\n        if (token == null) {\r\n            return '' + token;\r\n        }\r\n        if (token.overriddenName) {\r\n            return \"\" + token.overriddenName;\r\n        }\r\n        if (token.name) {\r\n            return \"\" + token.name;\r\n        }\r\n        /** @type {?} */\r\n        var res = token.toString();\r\n        if (res == null) {\r\n            return '' + res;\r\n        }\r\n        /** @type {?} */\r\n        var newLineIndex = res.indexOf('\\n');\r\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\r\n    /**\r\n     * Allows to refer to references which are not yet defined.\r\n     *\r\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\r\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\r\n     * a query is not yet defined.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\r\n     * \\@publicApi\r\n     * @param {?} forwardRefFn\r\n     * @return {?}\r\n     */\r\n    function forwardRef(forwardRefFn) {\r\n        (((forwardRefFn))).__forward_ref__ = forwardRef;\r\n        (((forwardRefFn))).toString = function () { return stringify(this()); };\r\n        return (((((forwardRefFn)))));\r\n    }\r\n    /**\r\n     * Lazily retrieves the reference value from a forwardRef.\r\n     *\r\n     * Acts as the identity function when given a non-forward-ref value.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\r\n     *\r\n     * @see `forwardRef`\r\n     * \\@publicApi\r\n     * @template T\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    function resolveForwardRef(type) {\r\n        /** @type {?} */\r\n        var fn = type;\r\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\r\n            fn.__forward_ref__ === forwardRef) {\r\n            return fn();\r\n        }\r\n        else {\r\n            return type;\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /** @enum {number} */\r\n    var ViewEncapsulation = {\r\n        /**\r\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\r\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\r\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\r\n         * selectors.\r\n         *\r\n         * This is the default option.\r\n         */\r\n        Emulated: 0,\r\n        /**\r\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\r\n         * Use the native encapsulation mechanism of the renderer.\r\n         *\r\n         * For the DOM this means using the deprecated [Shadow DOM\r\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\r\n         * creating a ShadowRoot for Component's Host Element.\r\n         */\r\n        Native: 1,\r\n        /**\r\n         * Don't provide any template or style encapsulation.\r\n         */\r\n        None: 2,\r\n        /**\r\n         * Use Shadow DOM to encapsulate styles.\r\n         *\r\n         * For the DOM this means using modern [Shadow\r\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\r\n         * creating a ShadowRoot for Component's Host Element.\r\n         */\r\n        ShadowDom: 3,\r\n    };\r\n    ViewEncapsulation[ViewEncapsulation.Emulated] = 'Emulated';\r\n    ViewEncapsulation[ViewEncapsulation.Native] = 'Native';\r\n    ViewEncapsulation[ViewEncapsulation.None] = 'None';\r\n    ViewEncapsulation[ViewEncapsulation.ShadowDom] = 'ShadowDom';\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function ngDevModeResetPerfCounters() {\r\n        /** @type {?} */\r\n        var newCounters = {\r\n            firstTemplatePass: 0,\r\n            tNode: 0,\r\n            tView: 0,\r\n            rendererCreateTextNode: 0,\r\n            rendererSetText: 0,\r\n            rendererCreateElement: 0,\r\n            rendererAddEventListener: 0,\r\n            rendererSetAttribute: 0,\r\n            rendererRemoveAttribute: 0,\r\n            rendererSetProperty: 0,\r\n            rendererSetClassName: 0,\r\n            rendererAddClass: 0,\r\n            rendererRemoveClass: 0,\r\n            rendererSetStyle: 0,\r\n            rendererRemoveStyle: 0,\r\n            rendererDestroy: 0,\r\n            rendererDestroyNode: 0,\r\n            rendererMoveNode: 0,\r\n            rendererRemoveNode: 0,\r\n            rendererCreateComment: 0,\r\n        };\r\n        // NOTE: Under Ivy we may have both window & global defined in the Node\r\n        //    environment since ensureDocument() in render3.ts sets global.window.\r\n        if (typeof window != 'undefined') {\r\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\r\n            (((window)))['ngDevMode'] = newCounters;\r\n        }\r\n        if (typeof global != 'undefined') {\r\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\r\n            (((global)))['ngDevMode'] = newCounters;\r\n        }\r\n        if (typeof self != 'undefined') {\r\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\r\n            (((self)))['ngDevMode'] = newCounters;\r\n        }\r\n        return newCounters;\r\n    }\r\n    /**\r\n     * This checks to see if the `ngDevMode` has been set. If yes,\r\n     * than we honor it, otherwise we default to dev mode with additional checks.\r\n     *\r\n     * The idea is that unless we are doing production build where we explicitly\r\n     * set `ngDevMode == false` we should be helping the developer by providing\r\n     * as much early warning and errors as possible.\r\n     */\r\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\r\n        ngDevModeResetPerfCounters();\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\r\n     * in different parts of the rendering code. Because the same symbols are returned, this\r\n     * allows for identity checks against these values to be consistently used by the framework\r\n     * code.\r\n     * @type {?}\r\n     */\r\n    var EMPTY_OBJ = {};\r\n    /** @type {?} */\r\n    var EMPTY_ARRAY = [];\r\n    // freezing the values prevents any code from accidentally inserting new values in\r\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\r\n        Object.freeze(EMPTY_OBJ);\r\n        Object.freeze(EMPTY_ARRAY);\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\r\n     * honors inheritance, but in the future we may change the rule to require that definitions are\r\n     * explicit. This would require some sort of migration strategy.\r\n     * @template T\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    function getComponentDef(type) {\r\n        return (((type)))[NG_COMPONENT_DEF] || null;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @template T\r\n     * @param {?} actual\r\n     * @param {?} expected\r\n     * @param {?} msg\r\n     * @return {?}\r\n     */\r\n    function assertEqual(actual, expected, msg) {\r\n        if (actual != expected) {\r\n            throwError(msg);\r\n        }\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} actual\r\n     * @param {?} expected\r\n     * @param {?} msg\r\n     * @return {?}\r\n     */\r\n    function assertNotEqual(actual, expected, msg) {\r\n        if (actual == expected) {\r\n            throwError(msg);\r\n        }\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} actual\r\n     * @param {?} expected\r\n     * @param {?} msg\r\n     * @return {?}\r\n     */\r\n    function assertLessThan(actual, expected, msg) {\r\n        if (actual >= expected) {\r\n            throwError(msg);\r\n        }\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} actual\r\n     * @param {?} expected\r\n     * @param {?} msg\r\n     * @return {?}\r\n     */\r\n    function assertGreaterThan(actual, expected, msg) {\r\n        if (actual <= expected) {\r\n            throwError(msg);\r\n        }\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} actual\r\n     * @param {?} msg\r\n     * @return {?}\r\n     */\r\n    function assertDefined(actual, msg) {\r\n        if (actual == null) {\r\n            throwError(msg);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} actual\r\n     * @param {?=} msg\r\n     * @return {?}\r\n     */\r\n    function assertComponentType(actual, msg) {\r\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\r\n        if (!getComponentDef(actual)) {\r\n            throwError(msg);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} msg\r\n     * @return {?}\r\n     */\r\n    function throwError(msg) {\r\n        // tslint:disable-next-line\r\n        debugger; // Left intentionally for better debugger experience.\r\n        throw new Error(\"ASSERTION ERROR: \" + msg);\r\n    }\r\n    /**\r\n     * @param {?} isParent\r\n     * @return {?}\r\n     */\r\n    function assertPreviousIsParent(isParent) {\r\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\r\n    }\r\n    /**\r\n     * @param {?} arr\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function assertDataInRange(arr, index) {\r\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    // Below are constants for LView indices to help us look up LView members\r\n    // without having to remember the specific indices.\r\n    // Uglify will inline these when minifying so there shouldn't be a cost.\r\n    /** @type {?} */\r\n    var TVIEW = 0;\r\n    /** @type {?} */\r\n    var FLAGS = 1;\r\n    /** @type {?} */\r\n    var PARENT = 2;\r\n    /** @type {?} */\r\n    var NEXT = 3;\r\n    /** @type {?} */\r\n    var HOST = 5;\r\n    /** @type {?} */\r\n    var HOST_NODE = 6;\r\n    // Rename to `T_HOST`?\r\n    /** @type {?} */\r\n    var BINDING_INDEX = 7;\r\n    /** @type {?} */\r\n    var CLEANUP = 8;\r\n    /** @type {?} */\r\n    var CONTEXT = 9;\r\n    /** @type {?} */\r\n    var INJECTOR = 10;\r\n    /** @type {?} */\r\n    var RENDERER_FACTORY = 11;\r\n    /** @type {?} */\r\n    var RENDERER = 12;\r\n    /** @type {?} */\r\n    var SANITIZER = 13;\r\n    /** @type {?} */\r\n    var TAIL = 14;\r\n    /** @type {?} */\r\n    var CONTAINER_INDEX = 15;\r\n    /** @type {?} */\r\n    var DECLARATION_VIEW = 17;\r\n    /**\r\n     * Size of LView's header. Necessary to adjust for it when setting slots.\r\n     * @type {?}\r\n     */\r\n    var HEADER_OFFSET = 18;\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Below are constants for LContainer indices to help us look up LContainer members\r\n     * without having to remember the specific indices.\r\n     * Uglify will inline these when minifying so there shouldn't be a cost.\r\n     * @type {?}\r\n     */\r\n    var ACTIVE_INDEX = 0;\r\n    /** @type {?} */\r\n    var VIEWS = 1;\r\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\r\n    // As we already have these constants in LView, we don't need to re-create them.\r\n    /** @type {?} */\r\n    var NATIVE = 6;\r\n    /** @type {?} */\r\n    var RENDER_PARENT = 7;\r\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\r\n    // need to rely on predictable characteristics of data-structures to check if they\r\n    // are what we expect for them to be. The `LContainer` interface code below has a\r\n    // fixed length and the constant value below references that. Using the length value\r\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\r\n    // This value MUST be kept up to date with the length of the `LContainer` array\r\n    // interface below so that runtime type checking can work.\r\n    /** @type {?} */\r\n    var LCONTAINER_LENGTH = 8;\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * This property will be monkey-patched on elements, components and directives\r\n     * @type {?}\r\n     */\r\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /** @type {?} */\r\n    var TNODE = 8;\r\n    /** @type {?} */\r\n    var PARENT_INJECTOR = 8;\r\n    /** @type {?} */\r\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\r\n    /** @type {?} */\r\n    var NO_PARENT_INJECTOR = ((-1));\r\n    /**\r\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\r\n     * `TView.data`. This allows us to store information about the current node's tokens (which\r\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\r\n     * shared, so they live in `LView`).\r\n     *\r\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\r\n     * determines whether a directive is available on the associated node or not. This prevents us\r\n     * from searching the directives array at this level unless it's probable the directive is in it.\r\n     *\r\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\r\n     *\r\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\r\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\r\n     * will differ based on where it is flattened into the main array, so it's not possible to know\r\n     * the indices ahead of time and save their types here. The interfaces are still included here\r\n     * for documentation purposes.\r\n     *\r\n     * export interface LInjector extends Array<any> {\r\n     *\r\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\r\n     *    [0]: number;\r\n     *\r\n     *    // Cumulative bloom for directive IDs 32-63\r\n     *    [1]: number;\r\n     *\r\n     *    // Cumulative bloom for directive IDs 64-95\r\n     *    [2]: number;\r\n     *\r\n     *    // Cumulative bloom for directive IDs 96-127\r\n     *    [3]: number;\r\n     *\r\n     *    // Cumulative bloom for directive IDs 128-159\r\n     *    [4]: number;\r\n     *\r\n     *    // Cumulative bloom for directive IDs 160 - 191\r\n     *    [5]: number;\r\n     *\r\n     *    // Cumulative bloom for directive IDs 192 - 223\r\n     *    [6]: number;\r\n     *\r\n     *    // Cumulative bloom for directive IDs 224 - 255\r\n     *    [7]: number;\r\n     *\r\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\r\n     *    // the injector tree until it finds the dependency it's looking for.\r\n     *    [PARENT_INJECTOR]: number;\r\n     * }\r\n     *\r\n     * export interface TInjector extends Array<any> {\r\n     *\r\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\r\n     *    [0]: number;\r\n     *\r\n     *    // Shared node bloom for directive IDs 32-63\r\n     *    [1]: number;\r\n     *\r\n     *    // Shared node bloom for directive IDs 64-95\r\n     *    [2]: number;\r\n     *\r\n     *    // Shared node bloom for directive IDs 96-127\r\n     *    [3]: number;\r\n     *\r\n     *    // Shared node bloom for directive IDs 128-159\r\n     *    [4]: number;\r\n     *\r\n     *    // Shared node bloom for directive IDs 160 - 191\r\n     *    [5]: number;\r\n     *\r\n     *    // Shared node bloom for directive IDs 192 - 223\r\n     *    [6]: number;\r\n     *\r\n     *    // Shared node bloom for directive IDs 224 - 255\r\n     *    [7]: number;\r\n     *\r\n     *    // Necessary to find directive indices for a particular node.\r\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\r\n     *  }\r\n     */\r\n    /**\r\n     * Factory for creating instances of injectors in the NodeInjector.\r\n     *\r\n     * This factory is complicated by the fact that it can resolve `multi` factories as well.\r\n     *\r\n     * NOTE: Some of the fields are optional which means that this class has two hidden classes.\r\n     * - One without `multi` support (most common)\r\n     * - One with `multi` values, (rare).\r\n     *\r\n     * Since VMs can cache up to 4 inline hidden classes this is OK.\r\n     *\r\n     * - Single factory: Only `resolving` and `factory` is defined.\r\n     * - `providers` factory: `componentProviders` is a number and `index = -1`.\r\n     * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\r\n     */\r\n    var NodeInjectorFactory = /** @class */ (function () {\r\n        /**\r\n         * @param {?} factory\r\n         * @param {?} isViewProvider\r\n         * @param {?} injectImplementation\r\n         */\r\n        function NodeInjectorFactory(factory, \r\n            /**\r\n             * Set to `true` if the token is declared in `viewProviders` (or if it is component).\r\n             */\r\n            isViewProvider, injectImplementation) {\r\n            this.factory = factory;\r\n            /**\r\n             * Marker set to true during factory invocation to see if we get into recursive loop.\r\n             * Recursive loop causes an error to be displayed.\r\n             */\r\n            this.resolving = false;\r\n            this.canSeeViewProviders = isViewProvider;\r\n            this.injectImpl = injectImplementation;\r\n        }\r\n        return NodeInjectorFactory;\r\n    }());\r\n    /** @type {?} */\r\n    var FactoryPrototype = NodeInjectorFactory.prototype;\r\n    /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function isFactory(obj) {\r\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\r\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function stringify$1(value) {\r\n        if (typeof value == 'function')\r\n            return value.name || value;\r\n        if (typeof value == 'string')\r\n            return value;\r\n        if (value == null)\r\n            return '';\r\n        if (typeof value == 'object' && typeof value.type == 'function')\r\n            return value.type.name || value.type;\r\n        return '' + value;\r\n    }\r\n    /**\r\n     * Flattens an array in non-recursive way. Input arrays are not modified.\r\n     * @param {?} list\r\n     * @return {?}\r\n     */\r\n    function flatten(list) {\r\n        /** @type {?} */\r\n        var result = [];\r\n        /** @type {?} */\r\n        var i = 0;\r\n        while (i < list.length) {\r\n            /** @type {?} */\r\n            var item = list[i];\r\n            if (Array.isArray(item)) {\r\n                if (item.length > 0) {\r\n                    list = item.concat(list.slice(i + 1));\r\n                    i = 0;\r\n                }\r\n                else {\r\n                    i++;\r\n                }\r\n            }\r\n            else {\r\n                result.push(item);\r\n                i++;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Takes the value of a slot in `LView` and returns the element node.\r\n     *\r\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\r\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\r\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\r\n     * it will be wrapped in LView. It could even have all three, so we keep looping\r\n     * until we find something that isn't an array.\r\n     *\r\n     * @param {?} value The initial value in `LView`\r\n     * @return {?}\r\n     */\r\n    function readElementValue(value) {\r\n        while (Array.isArray(value)) {\r\n            value = ((value[HOST]));\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * @param {?} tNode\r\n     * @param {?} hostView\r\n     * @return {?}\r\n     */\r\n    function getNativeByTNode(tNode, hostView) {\r\n        return readElementValue(hostView[tNode.index]);\r\n    }\r\n    /**\r\n     * @param {?} index\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function getTNode(index, view) {\r\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\r\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\r\n        return ((view[TVIEW].data[index + HEADER_OFFSET]));\r\n    }\r\n    /**\r\n     * @param {?} nodeIndex\r\n     * @param {?} hostView\r\n     * @return {?}\r\n     */\r\n    function getComponentViewByIndex(nodeIndex, hostView) {\r\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\r\n        /** @type {?} */\r\n        var slotValue = hostView[nodeIndex];\r\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\r\n    }\r\n    /**\r\n     * @param {?} tNode\r\n     * @return {?}\r\n     */\r\n    function isComponent(tNode) {\r\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function isComponentDef(def) {\r\n        return (((def))).template !== null;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function isLContainer(value) {\r\n        // Styling contexts are also arrays, but their first index contains an element node\r\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\r\n    }\r\n    /**\r\n     * Retrieve the root view from any component by walking the parent `LView` until\r\n     * reaching the root `LView`.\r\n     *\r\n     * @param {?} target\r\n     * @return {?}\r\n     */\r\n    function getRootView(target) {\r\n        ngDevMode && assertDefined(target, 'component');\r\n        /** @type {?} */\r\n        var lView = Array.isArray(target) ? (((target))) : ((readPatchedLView(target)));\r\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\r\n            lView = ((lView[PARENT]));\r\n        }\r\n        return lView;\r\n    }\r\n    /**\r\n     * @param {?} viewOrComponent\r\n     * @return {?}\r\n     */\r\n    function getRootContext(viewOrComponent) {\r\n        /** @type {?} */\r\n        var rootView = getRootView(viewOrComponent);\r\n        ngDevMode &&\r\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\r\n        return ((rootView[CONTEXT]));\r\n    }\r\n    /**\r\n     * Returns the monkey-patch value data present on the target (which could be\r\n     * a component, directive or a DOM node).\r\n     * @param {?} target\r\n     * @return {?}\r\n     */\r\n    function readPatchedData(target) {\r\n        ngDevMode && assertDefined(target, 'Target expected');\r\n        return target[MONKEY_PATCH_KEY_NAME];\r\n    }\r\n    /**\r\n     * @param {?} target\r\n     * @return {?}\r\n     */\r\n    function readPatchedLView(target) {\r\n        /** @type {?} */\r\n        var value = readPatchedData(target);\r\n        if (value) {\r\n            return Array.isArray(value) ? value : (((value))).lView;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * @param {?} parentLocation\r\n     * @return {?}\r\n     */\r\n    function hasParentInjector(parentLocation) {\r\n        return parentLocation !== NO_PARENT_INJECTOR;\r\n    }\r\n    /**\r\n     * @param {?} parentLocation\r\n     * @return {?}\r\n     */\r\n    function getParentInjectorIndex(parentLocation) {\r\n        return (((((parentLocation))))) & 32767 /* InjectorIndexMask */;\r\n    }\r\n    /**\r\n     * @param {?} parentLocation\r\n     * @return {?}\r\n     */\r\n    function getParentInjectorViewOffset(parentLocation) {\r\n        return (((((parentLocation))))) >> 16 /* ViewOffsetShift */;\r\n    }\r\n    /**\r\n     * Unwraps a parent injector location number to find the view offset from the current injector,\r\n     * then walks up the declaration view tree until the view is found that contains the parent\r\n     * injector.\r\n     *\r\n     * @param {?} location The location of the parent injector, which contains the view offset\r\n     * @param {?} startView The LView instance from which to start walking up the view tree\r\n     * @return {?} The LView instance that contains the parent injector\r\n     */\r\n    function getParentInjectorView(location, startView) {\r\n        /** @type {?} */\r\n        var viewOffset = getParentInjectorViewOffset(location);\r\n        /** @type {?} */\r\n        var parentView = startView;\r\n        // For most cases, the parent injector can be found on the host node (e.g. for component\r\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\r\n        // <ng-template> tags or inline views, where the parent injector might live many views\r\n        // above the child injector.\r\n        while (viewOffset > 0) {\r\n            parentView = ((parentView[DECLARATION_VIEW]));\r\n            viewOffset--;\r\n        }\r\n        return parentView;\r\n    }\r\n    /** @type {?} */\r\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\r\n        setTimeout // everything else\r\n    ).bind(_global);\r\n    /**\r\n     * Given a current view, finds the nearest component's host (LElement).\r\n     *\r\n     * @param {?} lView LView for which we want a host element node\r\n     * @return {?} The host node\r\n     */\r\n    function findComponentView(lView) {\r\n        /** @type {?} */\r\n        var rootTNode = lView[HOST_NODE];\r\n        while (rootTNode && rootTNode.type === 2 /* View */) {\r\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\r\n            lView = ((lView[DECLARATION_VIEW]));\r\n            rootTNode = lView[HOST_NODE];\r\n        }\r\n        return lView;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * Inject decorator and metadata.\r\n     *\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * Optional decorator and metadata.\r\n     *\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var Optional = makeParamDecorator('Optional');\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * Self decorator and metadata.\r\n     *\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var Self = makeParamDecorator('Self');\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * SkipSelf decorator and metadata.\r\n     *\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var SkipSelf = makeParamDecorator('SkipSelf');\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * Host decorator and metadata.\r\n     *\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var Host = makeParamDecorator('Host');\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @enum {number} */\r\n    var InjectFlags = {\r\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\r\n        Default: 0,\r\n        /**\r\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\r\n         * host element of the current component. (Only used with Element Injector)\r\n         */\r\n        Host: 1,\r\n        /** Don't descend into ancestors of the node requesting injection. */\r\n        Self: 2,\r\n        /** Skip the node that is requesting injection. */\r\n        SkipSelf: 4,\r\n        /** Inject `defaultValue` instead if token not found. */\r\n        Optional: 8,\r\n    };\r\n    InjectFlags[InjectFlags.Default] = 'Default';\r\n    InjectFlags[InjectFlags.Host] = 'Host';\r\n    InjectFlags[InjectFlags.Self] = 'Self';\r\n    InjectFlags[InjectFlags.SkipSelf] = 'SkipSelf';\r\n    InjectFlags[InjectFlags.Optional] = 'Optional';\r\n    /**\r\n     * Current injector value used by `inject`.\r\n     * - `undefined`: it is an error to call `inject`\r\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\r\n     * - Injector instance: Use the injector for resolution.\r\n     * @type {?}\r\n     */\r\n    var _currentInjector = undefined;\r\n    /**\r\n     * @param {?} injector\r\n     * @return {?}\r\n     */\r\n    function setCurrentInjector(injector) {\r\n        /** @type {?} */\r\n        var former = _currentInjector;\r\n        _currentInjector = injector;\r\n        return former;\r\n    }\r\n    /**\r\n     * Current implementation of inject.\r\n     *\r\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\r\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\r\n     * way for two reasons:\r\n     *  1. `Injector` should not depend on ivy logic.\r\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\r\n     * @type {?}\r\n     */\r\n    var _injectImplementation;\r\n    /**\r\n     * Sets the current inject implementation.\r\n     * @param {?} impl\r\n     * @return {?}\r\n     */\r\n    function setInjectImplementation(impl) {\r\n        /** @type {?} */\r\n        var previous = _injectImplementation;\r\n        _injectImplementation = impl;\r\n        return previous;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} token\r\n     * @param {?=} flags\r\n     * @return {?}\r\n     */\r\n    function injectInjectorOnly(token, flags) {\r\n        if (flags === void 0) { flags = InjectFlags.Default; }\r\n        if (_currentInjector === undefined) {\r\n            throw new Error(\"inject() must be called from an injection context\");\r\n        }\r\n        else if (_currentInjector === null) {\r\n            return injectRootLimpMode(token, undefined, flags);\r\n        }\r\n        else {\r\n            return _currentInjector.get(token, flags & InjectFlags.Optional ? null : undefined, flags);\r\n        }\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} token\r\n     * @param {?=} flags\r\n     * @return {?}\r\n     */\r\n    function inject(token, flags) {\r\n        if (flags === void 0) { flags = InjectFlags.Default; }\r\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\r\n    }\r\n    /**\r\n     * Injects `root` tokens in limp mode.\r\n     *\r\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\r\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\r\n     * `InjectableDef`.\r\n     * @template T\r\n     * @param {?} token\r\n     * @param {?} notFoundValue\r\n     * @param {?} flags\r\n     * @return {?}\r\n     */\r\n    function injectRootLimpMode(token, notFoundValue, flags) {\r\n        /** @type {?} */\r\n        var injectableDef = getInjectableDef(token);\r\n        if (injectableDef && injectableDef.providedIn == 'root') {\r\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\r\n                injectableDef.value;\r\n        }\r\n        if (flags & InjectFlags.Optional)\r\n            return null;\r\n        if (notFoundValue !== undefined)\r\n            return notFoundValue;\r\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\r\n    }\r\n    /**\r\n     * @param {?} types\r\n     * @return {?}\r\n     */\r\n    function injectArgs(types) {\r\n        /** @type {?} */\r\n        var args = [];\r\n        for (var i = 0; i < types.length; i++) {\r\n            /** @type {?} */\r\n            var arg = types[i];\r\n            if (Array.isArray(arg)) {\r\n                if (arg.length === 0) {\r\n                    throw new Error('Arguments array must have arguments.');\r\n                }\r\n                /** @type {?} */\r\n                var type = undefined;\r\n                /** @type {?} */\r\n                var flags = InjectFlags.Default;\r\n                for (var j = 0; j < arg.length; j++) {\r\n                    /** @type {?} */\r\n                    var meta = arg[j];\r\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\r\n                        flags |= InjectFlags.Optional;\r\n                    }\r\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\r\n                        flags |= InjectFlags.SkipSelf;\r\n                    }\r\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\r\n                        flags |= InjectFlags.Self;\r\n                    }\r\n                    else if (meta instanceof Inject) {\r\n                        type = meta.token;\r\n                    }\r\n                    else {\r\n                        type = meta;\r\n                    }\r\n                }\r\n                args.push(inject(((type)), flags));\r\n            }\r\n            else {\r\n                args.push(inject(arg));\r\n            }\r\n        }\r\n        return args;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} tNode\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    function assertNodeType(tNode, type) {\r\n        assertDefined(tNode, 'should be called with a TNode');\r\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\r\n    }\r\n    /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    function typeName(type) {\r\n        if (type == 1 /* Projection */)\r\n            return 'Projection';\r\n        if (type == 0 /* Container */)\r\n            return 'Container';\r\n        if (type == 2 /* View */)\r\n            return 'View';\r\n        if (type == 3 /* Element */)\r\n            return 'Element';\r\n        if (type == 4 /* ElementContainer */)\r\n            return 'ElementContainer';\r\n        return '<unknown>';\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\r\n     * TView.initHooks during directiveCreate.\r\n     *\r\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\r\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\r\n     * hold the hook functions themselves.\r\n     *\r\n     * @param {?} index The index of the directive in LView\r\n     * @param {?} onInit\r\n     * @param {?} doCheck\r\n     * @param {?} tView The current TView\r\n     * @return {?}\r\n     */\r\n    function queueInitHooks(index, onInit, doCheck, tView) {\r\n        ngDevMode &&\r\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\r\n        if (onInit) {\r\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\r\n        }\r\n        if (doCheck) {\r\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\r\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\r\n        }\r\n    }\r\n    /**\r\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\r\n     * and ngDoCheck, which are queued separately in directiveCreate.\r\n     * @param {?} tView\r\n     * @param {?} tNode\r\n     * @return {?}\r\n     */\r\n    function queueLifecycleHooks(tView, tNode) {\r\n        if (tView.firstTemplatePass) {\r\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\r\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\r\n            // hooks for projected components and directives must be called *before* their hosts.\r\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\r\n                /** @type {?} */\r\n                var def = ((tView.data[i]));\r\n                queueContentHooks(def, tView, i);\r\n                queueViewHooks(def, tView, i);\r\n                queueDestroyHooks(def, tView, i);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Queues afterContentInit and afterContentChecked hooks on TView\r\n     * @param {?} def\r\n     * @param {?} tView\r\n     * @param {?} i\r\n     * @return {?}\r\n     */\r\n    function queueContentHooks(def, tView, i) {\r\n        if (def.afterContentInit) {\r\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\r\n        }\r\n        if (def.afterContentChecked) {\r\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\r\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\r\n        }\r\n    }\r\n    /**\r\n     * Queues afterViewInit and afterViewChecked hooks on TView\r\n     * @param {?} def\r\n     * @param {?} tView\r\n     * @param {?} i\r\n     * @return {?}\r\n     */\r\n    function queueViewHooks(def, tView, i) {\r\n        if (def.afterViewInit) {\r\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\r\n        }\r\n        if (def.afterViewChecked) {\r\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\r\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\r\n        }\r\n    }\r\n    /**\r\n     * Queues onDestroy hooks on TView\r\n     * @param {?} def\r\n     * @param {?} tView\r\n     * @param {?} i\r\n     * @return {?}\r\n     */\r\n    function queueDestroyHooks(def, tView, i) {\r\n        if (def.onDestroy != null) {\r\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\r\n        }\r\n    }\r\n    /**\r\n     * Calls onInit and doCheck calls if they haven't already been called.\r\n     *\r\n     * @param {?} currentView The current view\r\n     * @param {?} tView\r\n     * @param {?} checkNoChangesMode\r\n     * @return {?}\r\n     */\r\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\r\n        if (!checkNoChangesMode && currentView[FLAGS] & 32 /* RunInit */) {\r\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\r\n            currentView[FLAGS] &= ~32 /* RunInit */;\r\n        }\r\n    }\r\n    /**\r\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\r\n     *\r\n     * @param {?} currentView The current view\r\n     * @param {?} allHooks\r\n     * @param {?} checkHooks\r\n     * @param {?} checkNoChangesMode\r\n     * @return {?}\r\n     */\r\n    function executeHooks(currentView, allHooks, checkHooks, checkNoChangesMode) {\r\n        if (checkNoChangesMode)\r\n            return;\r\n        /** @type {?} */\r\n        var hooksToCall = currentView[FLAGS] & 2 /* FirstLViewPass */ ? allHooks : checkHooks;\r\n        if (hooksToCall) {\r\n            callHooks(currentView, hooksToCall);\r\n        }\r\n    }\r\n    /**\r\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\r\n     * the first LView pass.\r\n     *\r\n     * @param {?} currentView The current view\r\n     * @param {?} arr The array in which the hooks are found\r\n     * @return {?}\r\n     */\r\n    function callHooks(currentView, arr) {\r\n        for (var i = 0; i < arr.length; i += 2) {\r\n            (((arr[i + 1]))).call(currentView[((arr[i]))]);\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function getLView() {\r\n        return lView;\r\n    }\r\n    /**\r\n     * Used to set the parent property when nodes are created and track query results.\r\n     * @type {?}\r\n     */\r\n    var previousOrParentTNode;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function getPreviousOrParentTNode() {\r\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\r\n        return previousOrParentTNode;\r\n    }\r\n    /**\r\n     * @param {?} tNode\r\n     * @return {?}\r\n     */\r\n    function setPreviousOrParentTNode(tNode) {\r\n        previousOrParentTNode = tNode;\r\n    }\r\n    /**\r\n     * @param {?} tNode\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function setTNodeAndViewData(tNode, view) {\r\n        previousOrParentTNode = tNode;\r\n        lView = view;\r\n    }\r\n    /**\r\n     * If `isParent` is:\r\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\r\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\r\n     * @type {?}\r\n     */\r\n    var isParent;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function getIsParent() {\r\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\r\n        return isParent;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function setIsParent(value) {\r\n        isParent = value;\r\n    }\r\n    /**\r\n     * Checks whether a given view is in creation mode\r\n     * @param {?=} view\r\n     * @return {?}\r\n     */\r\n    function isCreationMode(view) {\r\n        if (view === void 0) { view = lView; }\r\n        return (view[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\r\n    }\r\n    /**\r\n     * State of the current view being processed.\r\n     *\r\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\r\n     * any local variables that need to be stored between invocations.\r\n     * @type {?}\r\n     */\r\n    var lView;\r\n    /**\r\n     * The last viewData retrieved by nextContext().\r\n     * Allows building nextContext() and reference() calls.\r\n     *\r\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\r\n     * @type {?}\r\n     */\r\n    var contextLView = ((null));\r\n    /**\r\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\r\n     *\r\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\r\n     * @type {?}\r\n     */\r\n    var checkNoChangesMode = false;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function getCheckNoChangesMode() {\r\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\r\n        return checkNoChangesMode;\r\n    }\r\n    /**\r\n     * @param {?} mode\r\n     * @return {?}\r\n     */\r\n    function setCheckNoChangesMode(mode) {\r\n        checkNoChangesMode = mode;\r\n    }\r\n    /**\r\n     * Whether or not this is the first time the current view has been processed.\r\n     * @type {?}\r\n     */\r\n    var firstTemplatePass = true;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function getFirstTemplatePass() {\r\n        return firstTemplatePass;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function setFirstTemplatePass(value) {\r\n        firstTemplatePass = value;\r\n    }\r\n    /**\r\n     * The root index from which pure function instructions should calculate their binding\r\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\r\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\r\n     * @type {?}\r\n     */\r\n    var bindingRootIndex = -1;\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function setBindingRoot(value) {\r\n        bindingRootIndex = value;\r\n    }\r\n    /**\r\n     * Swap the current state with a new state.\r\n     *\r\n     * For performance reasons we store the state in the top level of the module.\r\n     * This way we minimize the number of properties to read. Whenever a new view\r\n     * is entered we have to store the state for later, and when the view is\r\n     * exited the state has to be restored\r\n     *\r\n     * @param {?} newView New state to become active\r\n     * @param {?} hostTNode\r\n     * @return {?} the previous state;\r\n     */\r\n    function enterView(newView, hostTNode) {\r\n        /** @type {?} */\r\n        var oldView = lView;\r\n        if (newView) {\r\n            /** @type {?} */\r\n            var tView = newView[TVIEW];\r\n            firstTemplatePass = tView.firstTemplatePass;\r\n            bindingRootIndex = tView.bindingStartIndex;\r\n        }\r\n        previousOrParentTNode = ((hostTNode));\r\n        isParent = true;\r\n        lView = contextLView = newView;\r\n        return oldView;\r\n    }\r\n    /**\r\n     * Resets the application state.\r\n     * @return {?}\r\n     */\r\n    function resetComponentState() {\r\n        isParent = false;\r\n        previousOrParentTNode = ((null));\r\n    }\r\n    /**\r\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\r\n     * the direction of traversal (up or down the view tree) a bit clearer.\r\n     *\r\n     * @param {?} newView New state to become active\r\n     * @return {?}\r\n     */\r\n    function leaveView(newView) {\r\n        /** @type {?} */\r\n        var tView = lView[TVIEW];\r\n        if (isCreationMode(lView)) {\r\n            lView[FLAGS] &= ~1 /* CreationMode */;\r\n        }\r\n        else {\r\n            executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\r\n            // Views are clean and in update mode after being checked, so these bits are cleared\r\n            lView[FLAGS] &= ~(8 /* Dirty */ | 2 /* FirstLViewPass */);\r\n            lView[FLAGS] |= 32 /* RunInit */;\r\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\r\n        }\r\n        enterView(newView, null);\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\r\n     *\r\n     * This is set to true when we try to instantiate a component. This value is reset in\r\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\r\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\r\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```\r\n     * \\@Injectable()\r\n     * class MyService {\r\n     *   constructor(public value: String) {}\r\n     * }\r\n     *\r\n     * \\@Component({\r\n     *   providers: [\r\n     *     MyService,\r\n     *     {provide: String, value: 'providers' }\r\n     *   ]\r\n     *   viewProviders: [\r\n     *     {provide: String, value: 'viewProviders'}\r\n     *   ]\r\n     * })\r\n     * class MyComponent {\r\n     *   constructor(myService: MyService, value: String) {\r\n     *     // We expect that Component can see into `viewProviders`.\r\n     *     expect(value).toEqual('viewProviders');\r\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\r\n     *     expect(myService.value).toEqual('providers');\r\n     *   }\r\n     * }\r\n     *\r\n     * ```\r\n     * @type {?}\r\n     */\r\n    var includeViewProviders = true;\r\n    /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    function setIncludeViewProviders(v) {\r\n        /** @type {?} */\r\n        var oldValue = includeViewProviders;\r\n        includeViewProviders = v;\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\r\n     * directives that will share slots, and thus, the fewer false positives when checking for\r\n     * the existence of a directive.\r\n     * @type {?}\r\n     */\r\n    var BLOOM_SIZE = 256;\r\n    /** @type {?} */\r\n    var BLOOM_MASK = BLOOM_SIZE - 1;\r\n    /**\r\n     * Counter used to generate unique IDs for directives.\r\n     * @type {?}\r\n     */\r\n    var nextNgElementId = 0;\r\n    /**\r\n     * Registers this directive as present in its node's injector by flipping the directive's\r\n     * corresponding bit in the injector's bloom filter.\r\n     *\r\n     * @param {?} injectorIndex The index of the node injector where this token should be registered\r\n     * @param {?} tView The TView for the injector's bloom filters\r\n     * @param {?} type The directive token to register\r\n     * @return {?}\r\n     */\r\n    function bloomAdd(injectorIndex, tView, type) {\r\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\r\n        /** @type {?} */\r\n        var id = typeof type !== 'string' ? (((type)))[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\r\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\r\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\r\n        if (id == null) {\r\n            id = (((type)))[NG_ELEMENT_ID] = nextNgElementId++;\r\n        }\r\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\r\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\r\n        /** @type {?} */\r\n        var bloomBit = id & BLOOM_MASK;\r\n        // Create a mask that targets the specific bit associated with the directive.\r\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\r\n        // to bit positions 0 - 31 in a 32 bit integer.\r\n        /** @type {?} */\r\n        var mask = 1 << bloomBit;\r\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\r\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\r\n        /** @type {?} */\r\n        var b7 = bloomBit & 0x80;\r\n        /** @type {?} */\r\n        var b6 = bloomBit & 0x40;\r\n        /** @type {?} */\r\n        var b5 = bloomBit & 0x20;\r\n        /** @type {?} */\r\n        var tData = ((tView.data));\r\n        if (b7) {\r\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\r\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\r\n        }\r\n        else {\r\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\r\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\r\n        }\r\n    }\r\n    /**\r\n     * Creates (or gets an existing) injector for a given element or container.\r\n     *\r\n     * @param {?} tNode for which an injector should be retrieved / created.\r\n     * @param {?} hostView View where the node is stored\r\n     * @return {?} Node injector\r\n     */\r\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\r\n        /** @type {?} */\r\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\r\n        if (existingInjectorIndex !== -1) {\r\n            return existingInjectorIndex;\r\n        }\r\n        /** @type {?} */\r\n        var tView = hostView[TVIEW];\r\n        if (tView.firstTemplatePass) {\r\n            tNode.injectorIndex = hostView.length;\r\n            insertBloom(tView.data, tNode); // foundation for node bloom\r\n            insertBloom(hostView, null); // foundation for cumulative bloom\r\n            insertBloom(tView.blueprint, null);\r\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\r\n        }\r\n        /** @type {?} */\r\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\r\n        /** @type {?} */\r\n        var parentIndex = getParentInjectorIndex(parentLoc);\r\n        /** @type {?} */\r\n        var parentLView = getParentInjectorView(parentLoc, hostView);\r\n        /** @type {?} */\r\n        var injectorIndex = tNode.injectorIndex;\r\n        // If a parent injector can't be found, its location is set to -1.\r\n        // In that case, we don't need to set up a cumulative bloom\r\n        if (hasParentInjector(parentLoc)) {\r\n            /** @type {?} */\r\n            var parentData = ((parentLView[TVIEW].data));\r\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\r\n            // and its own cumulative bloom (which contains tokens for all ancestors)\r\n            for (var i = 0; i < 8; i++) {\r\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\r\n            }\r\n        }\r\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\r\n        return injectorIndex;\r\n    }\r\n    /**\r\n     * @param {?} arr\r\n     * @param {?} footer\r\n     * @return {?}\r\n     */\r\n    function insertBloom(arr, footer) {\r\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\r\n    }\r\n    /**\r\n     * @param {?} tNode\r\n     * @param {?} hostView\r\n     * @return {?}\r\n     */\r\n    function getInjectorIndex(tNode, hostView) {\r\n        if (tNode.injectorIndex === -1 ||\r\n            // If the injector index is the same as its parent's injector index, then the index has been\r\n            // copied down from the parent node. No injector has been created yet on this node.\r\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\r\n            // After the first template pass, the injector index might exist but the parent values\r\n            // might not have been calculated yet for this instance\r\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\r\n            return -1;\r\n        }\r\n        else {\r\n            return tNode.injectorIndex;\r\n        }\r\n    }\r\n    /**\r\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\r\n     * parent injector initially.\r\n     *\r\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\r\n     * @param {?} tNode\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function getParentInjectorLocation(tNode, view) {\r\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\r\n            return ((tNode.parent.injectorIndex)); // ViewOffset is 0\r\n        }\r\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\r\n        // or container), so this loop will be skipped, but we must keep the loop here to support\r\n        // the rarer case of deeply nested <ng-template> tags or inline views.\r\n        /** @type {?} */\r\n        var hostTNode = view[HOST_NODE];\r\n        /** @type {?} */\r\n        var viewOffset = 1;\r\n        while (hostTNode && hostTNode.injectorIndex === -1) {\r\n            view = ((view[DECLARATION_VIEW]));\r\n            hostTNode = view ? view[HOST_NODE] : null;\r\n            viewOffset++;\r\n        }\r\n        return hostTNode ?\r\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\r\n            ((-1));\r\n    }\r\n    /**\r\n     * Makes a type or an injection token public to the DI system by adding it to an\r\n     * injector's bloom filter.\r\n     *\r\n     * @param {?} injectorIndex\r\n     * @param {?} view\r\n     * @param {?} token The type or the injection token to be made public\r\n     * @return {?}\r\n     */\r\n    function diPublicInInjector(injectorIndex, view, token) {\r\n        bloomAdd(injectorIndex, view[TVIEW], token);\r\n    }\r\n    /**\r\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\r\n     *\r\n     * Look for the injector providing the token by walking up the node injector tree and then\r\n     * the module injector tree.\r\n     *\r\n     * @template T\r\n     * @param {?} tNode The Node where the search for the injector should start\r\n     * @param {?} lView The `LView` that contains the `tNode`\r\n     * @param {?} token The token to look for\r\n     * @param {?=} flags Injection flags\r\n     * @param {?=} notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\r\n     * @return {?} the value from the injector, `null` when not found, or `notFoundValue` if provided\r\n     */\r\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\r\n        if (flags === void 0) { flags = InjectFlags.Default; }\r\n        if (tNode) {\r\n            /** @type {?} */\r\n            var bloomHash = bloomHashBitOrFactory(token);\r\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\r\n            // so just call the factory function to create it.\r\n            if (typeof bloomHash === 'function') {\r\n                /** @type {?} */\r\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\r\n                /** @type {?} */\r\n                var saveLView = getLView();\r\n                setTNodeAndViewData(tNode, lView);\r\n                try {\r\n                    /** @type {?} */\r\n                    var value = bloomHash();\r\n                    if (value == null && !(flags & InjectFlags.Optional)) {\r\n                        throw new Error(\"No provider for \" + stringify$1(token) + \"!\");\r\n                    }\r\n                    else {\r\n                        return value;\r\n                    }\r\n                }\r\n                finally {\r\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\r\n                }\r\n            }\r\n            else if (typeof bloomHash == 'number') {\r\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\r\n                // A reference to the previous injector TView that was found while climbing the element\r\n                // injector tree. This is used to know if viewProviders can be accessed on the current\r\n                // injector.\r\n                /** @type {?} */\r\n                var previousTView = null;\r\n                /** @type {?} */\r\n                var injectorIndex = getInjectorIndex(tNode, lView);\r\n                /** @type {?} */\r\n                var parentLocation = NO_PARENT_INJECTOR;\r\n                /** @type {?} */\r\n                var hostTElementNode = flags & InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\r\n                // If we should skip this injector, or if there is no injector on this node, start by\r\n                // searching\r\n                // the parent injector.\r\n                if (injectorIndex === -1 || flags & InjectFlags.SkipSelf) {\r\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\r\n                        lView[injectorIndex + PARENT_INJECTOR];\r\n                    if (!shouldSearchParent(flags, false)) {\r\n                        injectorIndex = -1;\r\n                    }\r\n                    else {\r\n                        previousTView = lView[TVIEW];\r\n                        injectorIndex = getParentInjectorIndex(parentLocation);\r\n                        lView = getParentInjectorView(parentLocation, lView);\r\n                    }\r\n                }\r\n                // Traverse up the injector tree until we find a potential match or until we know there\r\n                // *isn't* a match.\r\n                while (injectorIndex !== -1) {\r\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\r\n                    // Check the current injector. If it matches, see if it contains token.\r\n                    /** @type {?} */\r\n                    var tView = lView[TVIEW];\r\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\r\n                        // At this point, we have an injector which *may* contain the token, so we step through\r\n                        // the providers and directives associated with the injector's corresponding node to get\r\n                        // the instance.\r\n                        /** @type {?} */\r\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\r\n                        if (instance !== NOT_FOUND) {\r\n                            return instance;\r\n                        }\r\n                    }\r\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\r\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\r\n                        // The def wasn't found anywhere on this node, so it was a false positive.\r\n                        // Traverse up the tree and continue searching.\r\n                        previousTView = tView;\r\n                        injectorIndex = getParentInjectorIndex(parentLocation);\r\n                        lView = getParentInjectorView(parentLocation, lView);\r\n                    }\r\n                    else {\r\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\r\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\r\n                        // injector.\r\n                        injectorIndex = -1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (flags & InjectFlags.Optional && notFoundValue === undefined) {\r\n            // This must be set or the NullInjector will throw for optional deps\r\n            notFoundValue = null;\r\n        }\r\n        if ((flags & (InjectFlags.Self | InjectFlags.Host)) === 0) {\r\n            /** @type {?} */\r\n            var moduleInjector = lView[INJECTOR];\r\n            if (moduleInjector) {\r\n                return moduleInjector.get(token, notFoundValue, flags & InjectFlags.Optional);\r\n            }\r\n            else {\r\n                return injectRootLimpMode(token, notFoundValue, flags & InjectFlags.Optional);\r\n            }\r\n        }\r\n        if (flags & InjectFlags.Optional) {\r\n            return notFoundValue;\r\n        }\r\n        else {\r\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\r\n        }\r\n    }\r\n    /** @type {?} */\r\n    var NOT_FOUND = {};\r\n    /**\r\n     * @template T\r\n     * @param {?} injectorIndex\r\n     * @param {?} lView\r\n     * @param {?} token\r\n     * @param {?} previousTView\r\n     * @param {?} flags\r\n     * @param {?} hostTElementNode\r\n     * @return {?}\r\n     */\r\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\r\n        /** @type {?} */\r\n        var currentTView = lView[TVIEW];\r\n        /** @type {?} */\r\n        var tNode = ((currentTView.data[injectorIndex + TNODE]));\r\n        // First, we need to determine if view providers can be accessed by the starting element.\r\n        // There are two possibities\r\n        /** @type {?} */\r\n        var canAccessViewProviders = previousTView == null ?\r\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\r\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\r\n            // to look into the ViewProviders is if:\r\n            // - we are on a component\r\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\r\n            // ViewProviders because it is the Component or a Service which itself was declared in\r\n            // ViewProviders)\r\n            (isComponent(tNode) && includeViewProviders) :\r\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\r\n            // In such a case we are only allowed to look into the ViewProviders if:\r\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\r\n            // - AND the parent TNode is an Element.\r\n            // This means that we just came from the Component's View and therefore are allowed to see\r\n            // into the ViewProviders.\r\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\r\n        // This special case happens when there is a @host on the inject and when we are searching\r\n        // on the host element node.\r\n        /** @type {?} */\r\n        var isHostSpecialCase = (flags & InjectFlags.Host) && hostTElementNode === tNode;\r\n        /** @type {?} */\r\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\r\n        if (injectableIdx !== null) {\r\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, ((tNode)));\r\n        }\r\n        else {\r\n            return NOT_FOUND;\r\n        }\r\n    }\r\n    /**\r\n     * Searches for the given token among the node's directives and providers.\r\n     *\r\n     * @template T\r\n     * @param {?} tNode TNode on which directives are present.\r\n     * @param {?} lView The view we are currently processing\r\n     * @param {?} token Provider token or type of a directive to look for.\r\n     * @param {?} canAccessViewProviders Whether view providers should be considered.\r\n     * @param {?} isHostSpecialCase Whether the host special case applies.\r\n     * @return {?} Index of a found directive or provider, or null when none found.\r\n     */\r\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\r\n        /** @type {?} */\r\n        var tView = lView[TVIEW];\r\n        /** @type {?} */\r\n        var nodeProviderIndexes = tNode.providerIndexes;\r\n        /** @type {?} */\r\n        var tInjectables = tView.data;\r\n        /** @type {?} */\r\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\r\n        /** @type {?} */\r\n        var directivesStart = tNode.directiveStart;\r\n        /** @type {?} */\r\n        var directiveEnd = tNode.directiveEnd;\r\n        /** @type {?} */\r\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\r\n        /** @type {?} */\r\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\r\n        // When the host special case applies, only the viewProviders and the component are visible\r\n        /** @type {?} */\r\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\r\n        for (var i = startingIndex; i < endIndex; i++) {\r\n            /** @type {?} */\r\n            var providerTokenOrDef = ((tInjectables[i]));\r\n            if (i < directivesStart && token === providerTokenOrDef ||\r\n                i >= directivesStart && (((providerTokenOrDef))).type === token) {\r\n                return i;\r\n            }\r\n        }\r\n        if (isHostSpecialCase) {\r\n            /** @type {?} */\r\n            var dirDef = ((tInjectables[directivesStart]));\r\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\r\n                return directivesStart;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Retrieve or instantiate the injectable from the `lData` at particular `index`.\r\n     *\r\n     * This function checks to see if the value has already been instantiated and if so returns the\r\n     * cached `injectable`. Otherwise if it detects that the value is still a factory it\r\n     * instantiates the `injectable` and caches the value.\r\n     * @param {?} tData\r\n     * @param {?} lData\r\n     * @param {?} index\r\n     * @param {?} tNode\r\n     * @return {?}\r\n     */\r\n    function getNodeInjectable(tData, lData, index, tNode) {\r\n        /** @type {?} */\r\n        var value = lData[index];\r\n        if (isFactory(value)) {\r\n            /** @type {?} */\r\n            var factory = value;\r\n            if (factory.resolving) {\r\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\r\n            }\r\n            /** @type {?} */\r\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\r\n            factory.resolving = true;\r\n            /** @type {?} */\r\n            var previousInjectImplementation = void 0;\r\n            if (factory.injectImpl) {\r\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\r\n            }\r\n            /** @type {?} */\r\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\r\n            /** @type {?} */\r\n            var saveLView = getLView();\r\n            setTNodeAndViewData(tNode, lData);\r\n            try {\r\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\r\n            }\r\n            finally {\r\n                if (factory.injectImpl)\r\n                    setInjectImplementation(previousInjectImplementation);\r\n                setIncludeViewProviders(previousIncludeViewProviders);\r\n                factory.resolving = false;\r\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\r\n     * the directive might be provided by the injector.\r\n     *\r\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\r\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\r\n     * is returned as the node injector can not possibly provide that token.\r\n     *\r\n     * @param {?} token the injection token\r\n     * @return {?} the matching bit to check in the bloom filter or `null` if the token is not known.\r\n     */\r\n    function bloomHashBitOrFactory(token) {\r\n        ngDevMode && assertDefined(token, 'token must be defined');\r\n        if (typeof token === 'string') {\r\n            return token.charCodeAt(0) || 0;\r\n        }\r\n        /** @type {?} */\r\n        var tokenId = (((token)))[NG_ELEMENT_ID];\r\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\r\n    }\r\n    /**\r\n     * @param {?} bloomHash\r\n     * @param {?} injectorIndex\r\n     * @param {?} injectorView\r\n     * @return {?}\r\n     */\r\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\r\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\r\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\r\n        // to bit positions 0 - 31 in a 32 bit integer.\r\n        /** @type {?} */\r\n        var mask = 1 << bloomHash;\r\n        /** @type {?} */\r\n        var b7 = bloomHash & 0x80;\r\n        /** @type {?} */\r\n        var b6 = bloomHash & 0x40;\r\n        /** @type {?} */\r\n        var b5 = bloomHash & 0x20;\r\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\r\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\r\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\r\n        /** @type {?} */\r\n        var value;\r\n        if (b7) {\r\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\r\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\r\n        }\r\n        else {\r\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\r\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\r\n        }\r\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\r\n        // this injector is a potential match.\r\n        return !!(value & mask);\r\n    }\r\n    /**\r\n     * Returns true if flags prevent parent injector from being searched for tokens\r\n     * @param {?} flags\r\n     * @param {?} isFirstHostTNode\r\n     * @return {?}\r\n     */\r\n    function shouldSearchParent(flags, isFirstHostTNode) {\r\n        return !(flags & InjectFlags.Self) && !(flags & InjectFlags.Host && isFirstHostTNode);\r\n    }\r\n    var NodeInjector = /** @class */ (function () {\r\n        /**\r\n         * @param {?} _tNode\r\n         * @param {?} _lView\r\n         */\r\n        function NodeInjector(_tNode, _lView) {\r\n            this._tNode = _tNode;\r\n            this._lView = _lView;\r\n        }\r\n        /**\r\n         * @param {?} token\r\n         * @param {?=} notFoundValue\r\n         * @return {?}\r\n         */\r\n        NodeInjector.prototype.get = function (token, notFoundValue) {\r\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\r\n        };\r\n        return NodeInjector;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Creates an empty instance of a `LContext` context\r\n     * @param {?} lView\r\n     * @param {?} nodeIndex\r\n     * @param {?} native\r\n     * @return {?}\r\n     */\r\n    function createLContext(lView, nodeIndex, native) {\r\n        return {\r\n            lView: lView,\r\n            nodeIndex: nodeIndex,\r\n            native: native,\r\n            component: undefined,\r\n            directives: undefined,\r\n            localRefs: undefined,\r\n        };\r\n    }\r\n    /**\r\n     * Takes a component instance and returns the view for that component.\r\n     *\r\n     * @param {?} componentInstance\r\n     * @return {?} The component's view\r\n     */\r\n    function getComponentViewByInstance(componentInstance) {\r\n        /** @type {?} */\r\n        var lView = readPatchedData(componentInstance);\r\n        /** @type {?} */\r\n        var view;\r\n        if (Array.isArray(lView)) {\r\n            /** @type {?} */\r\n            var nodeIndex = findViaComponent(lView, componentInstance);\r\n            view = getComponentViewByIndex(nodeIndex, lView);\r\n            /** @type {?} */\r\n            var context = createLContext(lView, nodeIndex, ((view[HOST])));\r\n            context.component = componentInstance;\r\n            attachPatchData(componentInstance, context);\r\n            attachPatchData(context.native, context);\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var context = ((((lView))));\r\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\r\n        }\r\n        return view;\r\n    }\r\n    /**\r\n     * Assigns the given data to the given target (which could be a component,\r\n     * directive or DOM node instance) using monkey-patching.\r\n     * @param {?} target\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function attachPatchData(target, data) {\r\n        target[MONKEY_PATCH_KEY_NAME] = data;\r\n    }\r\n    /**\r\n     * Locates the component within the given LView and returns the matching index\r\n     * @param {?} lView\r\n     * @param {?} componentInstance\r\n     * @return {?}\r\n     */\r\n    function findViaComponent(lView, componentInstance) {\r\n        /** @type {?} */\r\n        var componentIndices = lView[TVIEW].components;\r\n        if (componentIndices) {\r\n            for (var i = 0; i < componentIndices.length; i++) {\r\n                /** @type {?} */\r\n                var elementComponentIndex = componentIndices[i];\r\n                /** @type {?} */\r\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\r\n                if (componentView[CONTEXT] === componentInstance) {\r\n                    return elementComponentIndex;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\r\n            /** @type {?} */\r\n            var rootComponent = rootComponentView[CONTEXT];\r\n            if (rootComponent === componentInstance) {\r\n                // we are dealing with the root element here therefore we know that the\r\n                // element is the very first element after the HEADER data in the lView\r\n                return HEADER_OFFSET;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function normalizeDebugBindingName(name) {\r\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\r\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\r\n        return \"ng-reflect-\" + name;\r\n    }\r\n    /** @type {?} */\r\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\r\n    /**\r\n     * @param {?} input\r\n     * @return {?}\r\n     */\r\n    function camelCaseToDashCase(input) {\r\n        return input.replace(CAMEL_CASE_REGEXP, function () {\r\n            var m = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                m[_i] = arguments[_i];\r\n            }\r\n            return '-' + m[1].toLowerCase();\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function normalizeDebugBindingValue(value) {\r\n        try {\r\n            // Limit the size of the value as otherwise the DOM just gets polluted.\r\n            return value != null ? value.toString().slice(0, 30) : value;\r\n        }\r\n        catch (e) {\r\n            return '[ERROR] Exception while trying to serialize the value';\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} a\r\n     * @param {?} b\r\n     * @return {?}\r\n     */\r\n    function devModeEqual(a, b) {\r\n        /** @type {?} */\r\n        var isListLikeIterableA = isListLikeIterable(a);\r\n        /** @type {?} */\r\n        var isListLikeIterableB = isListLikeIterable(b);\r\n        if (isListLikeIterableA && isListLikeIterableB) {\r\n            return areIterablesEqual(a, b, devModeEqual);\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\r\n            /** @type {?} */\r\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\r\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\r\n                return true;\r\n            }\r\n            else {\r\n                return looseIdentical(a, b);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\r\n     * reference has not changed.\r\n     *\r\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\r\n     * is stored.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```\r\n     * if (this._latestValue === this._latestReturnedValue) {\r\n     *    return this._latestReturnedValue;\r\n     *  } else {\r\n     *    this._latestReturnedValue = this._latestValue;\r\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\r\n     *  }\r\n     * ```\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var WrappedValue = /** @class */ (function () {\r\n        /**\r\n         * @param {?} value\r\n         */\r\n        function WrappedValue(value) {\r\n            this.wrapped = value;\r\n        }\r\n        /**\r\n         * Creates a wrapped value.\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\r\n        /**\r\n         * Returns the underlying value of a wrapped value.\r\n         * Returns the given `value` when it is not wrapped.\r\n         *\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\r\n        /**\r\n         * Returns true if `value` is a wrapped value.\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\r\n        return WrappedValue;\r\n    }());\r\n    /**\r\n     * Represents a basic change from a previous to a new value.\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var SimpleChange = /** @class */ (function () {\r\n        /**\r\n         * @param {?} previousValue\r\n         * @param {?} currentValue\r\n         * @param {?} firstChange\r\n         */\r\n        function SimpleChange(previousValue, currentValue, firstChange) {\r\n            this.previousValue = previousValue;\r\n            this.currentValue = currentValue;\r\n            this.firstChange = firstChange;\r\n        }\r\n        /**\r\n         * Check whether the new value is the first value assigned.\r\n         * @return {?}\r\n         */\r\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\r\n        return SimpleChange;\r\n    }());\r\n    /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function isListLikeIterable(obj) {\r\n        if (!isJsObject(obj))\r\n            return false;\r\n        return Array.isArray(obj) ||\r\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\r\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\r\n    }\r\n    /**\r\n     * @param {?} a\r\n     * @param {?} b\r\n     * @param {?} comparator\r\n     * @return {?}\r\n     */\r\n    function areIterablesEqual(a, b, comparator) {\r\n        /** @type {?} */\r\n        var iterator1 = a[getSymbolIterator()]();\r\n        /** @type {?} */\r\n        var iterator2 = b[getSymbolIterator()]();\r\n        while (true) {\r\n            /** @type {?} */\r\n            var item1 = iterator1.next();\r\n            /** @type {?} */\r\n            var item2 = iterator2.next();\r\n            if (item1.done && item2.done)\r\n                return true;\r\n            if (item1.done || item2.done)\r\n                return false;\r\n            if (!comparator(item1.value, item2.value))\r\n                return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} obj\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function iterateListLike(obj, fn) {\r\n        if (Array.isArray(obj)) {\r\n            for (var i = 0; i < obj.length; i++) {\r\n                fn(obj[i]);\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var iterator_1 = obj[getSymbolIterator()]();\r\n            /** @type {?} */\r\n            var item = void 0;\r\n            while (!((item = iterator_1.next()).done)) {\r\n                fn(item.value);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} o\r\n     * @return {?}\r\n     */\r\n    function isJsObject(o) {\r\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * A special value which designates that a value has not changed.\r\n     * @type {?}\r\n     */\r\n    var NO_CHANGE = (({}));\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Returns whether the `renderer` is a `ProceduralRenderer3`\r\n     * @param {?} renderer\r\n     * @return {?}\r\n     */\r\n    function isProceduralRenderer(renderer) {\r\n        return !!((((renderer))).listen);\r\n    }\r\n    /** @type {?} */\r\n    var domRendererFactory3 = {\r\n        createRenderer: function (hostElement, rendererType) { return document; }\r\n    };\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} tNode\r\n     * @param {?} embeddedView\r\n     * @return {?}\r\n     */\r\n    function getLContainer(tNode, embeddedView) {\r\n        if (tNode.index === -1) {\r\n            // This is a dynamically created view inside a dynamic container.\r\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\r\n            /** @type {?} */\r\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\r\n            return containerHostIndex > -1 ? ((embeddedView[PARENT]))[containerHostIndex] : null;\r\n        }\r\n        else {\r\n            // This is a inline view node (e.g. embeddedViewStart)\r\n            return ((((embeddedView[PARENT]))[((tNode.parent)).index]));\r\n        }\r\n    }\r\n    /**\r\n     * Stack used to keep track of projection nodes in walkTNodeTree.\r\n     *\r\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\r\n     * a new array each time the function is called. Instead the array will be\r\n     * re-used by each invocation. This works because the function is not reentrant.\r\n     * @type {?}\r\n     */\r\n    var projectionNodeStack = [];\r\n    /**\r\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\r\n     * one found, or on all of them.\r\n     *\r\n     * @param {?} viewToWalk the view to walk\r\n     * @param {?} action identifies the action to be performed on the elements\r\n     * @param {?} renderer the current renderer.\r\n     * @param {?} renderParent Optional the render parent node to be set in all LContainers found,\r\n     * required for action modes Insert and Destroy.\r\n     * @param {?=} beforeNode Optional the node before which elements should be added, required for action\r\n     * Insert.\r\n     * @return {?}\r\n     */\r\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\r\n        /** @type {?} */\r\n        var rootTNode = ((viewToWalk[TVIEW].node));\r\n        /** @type {?} */\r\n        var projectionNodeIndex = -1;\r\n        /** @type {?} */\r\n        var currentView = viewToWalk;\r\n        /** @type {?} */\r\n        var tNode = ((rootTNode.child));\r\n        while (tNode) {\r\n            /** @type {?} */\r\n            var nextTNode = null;\r\n            if (tNode.type === 3 /* Element */) {\r\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\r\n                /** @type {?} */\r\n                var nodeOrContainer = currentView[tNode.index];\r\n                if (isLContainer(nodeOrContainer)) {\r\n                    // This element has an LContainer, and its comment needs to be handled\r\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\r\n                }\r\n            }\r\n            else if (tNode.type === 0 /* Container */) {\r\n                /** @type {?} */\r\n                var lContainer = ((((currentView))[tNode.index]));\r\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\r\n                if (renderParent)\r\n                    lContainer[RENDER_PARENT] = renderParent;\r\n                if (lContainer[VIEWS].length) {\r\n                    currentView = lContainer[VIEWS][0];\r\n                    nextTNode = currentView[TVIEW].node;\r\n                    // When the walker enters a container, then the beforeNode has to become the local native\r\n                    // comment node.\r\n                    beforeNode = lContainer[NATIVE];\r\n                }\r\n            }\r\n            else if (tNode.type === 1 /* Projection */) {\r\n                /** @type {?} */\r\n                var componentView = findComponentView(((currentView)));\r\n                /** @type {?} */\r\n                var componentHost = ((componentView[HOST_NODE]));\r\n                /** @type {?} */\r\n                var head = (((componentHost.projection)))[((tNode.projection))];\r\n                // Must store both the TNode and the view because this projection node could be nested\r\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\r\n                projectionNodeStack[++projectionNodeIndex] = tNode;\r\n                projectionNodeStack[++projectionNodeIndex] = ((currentView));\r\n                if (head) {\r\n                    currentView = ((componentView[PARENT]));\r\n                    nextTNode = ((currentView[TVIEW].data[head.index]));\r\n                }\r\n            }\r\n            else {\r\n                // Otherwise, this is a View or an ElementContainer\r\n                nextTNode = tNode.child;\r\n            }\r\n            if (nextTNode === null) {\r\n                // this last node was projected, we need to get back down to its projection node\r\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\r\n                    currentView = ((projectionNodeStack[projectionNodeIndex--]));\r\n                    tNode = ((projectionNodeStack[projectionNodeIndex--]));\r\n                }\r\n                nextTNode = tNode.next;\r\n                /**\r\n                 * Find the next node in the TNode tree, taking into account the place where a node is\r\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\r\n                 *\r\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\r\n                 * until it reaches rootNode (at which point null is returned).\r\n                 */\r\n                while (!nextTNode) {\r\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\r\n                    tNode = tNode.parent || currentView[TVIEW].node;\r\n                    if (tNode === null || tNode === rootTNode)\r\n                        return null;\r\n                    // When exiting a container, the beforeNode must be restored to the previous value\r\n                    if (tNode.type === 0 /* Container */) {\r\n                        currentView = ((currentView[PARENT]));\r\n                        beforeNode = currentView[tNode.index][NATIVE];\r\n                    }\r\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\r\n                        currentView = ((currentView[NEXT]));\r\n                        nextTNode = currentView[TVIEW].node;\r\n                    }\r\n                    else {\r\n                        nextTNode = tNode.next;\r\n                    }\r\n                }\r\n            }\r\n            tNode = nextTNode;\r\n        }\r\n    }\r\n    /**\r\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\r\n     * being passed as an argument.\r\n     * @param {?} action\r\n     * @param {?} renderer\r\n     * @param {?} parent\r\n     * @param {?} node\r\n     * @param {?=} beforeNode\r\n     * @return {?}\r\n     */\r\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\r\n        if (action === 0 /* Insert */) {\r\n            isProceduralRenderer(((renderer))) ?\r\n                (((renderer))).insertBefore(((parent)), node, ((beforeNode))) :\r\n                ((parent)).insertBefore(node, ((beforeNode)), true);\r\n        }\r\n        else if (action === 1 /* Detach */) {\r\n            isProceduralRenderer(((renderer))) ?\r\n                (((renderer))).removeChild(((parent)), node) :\r\n                ((parent)).removeChild(node);\r\n        }\r\n        else if (action === 2 /* Destroy */) {\r\n            ngDevMode && ngDevMode.rendererDestroyNode++;\r\n            (((((renderer))).destroyNode))(node);\r\n        }\r\n    }\r\n    /**\r\n     * Traverses down and up the tree of views and containers to remove listeners and\r\n     * call onDestroy callbacks.\r\n     *\r\n     * Notes:\r\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\r\n     *  - Must process containers instead of their views to avoid splicing\r\n     *  when views are destroyed and re-added.\r\n     *  - Using a while loop because it's faster than recursion\r\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\r\n     *\r\n     * @param {?} rootView The view to destroy\r\n     * @return {?}\r\n     */\r\n    function destroyViewTree(rootView) {\r\n        // If the view has no children, we can clean it up and return early.\r\n        if (rootView[TVIEW].childIndex === -1) {\r\n            return cleanUpView(rootView);\r\n        }\r\n        /** @type {?} */\r\n        var viewOrContainer = getLViewChild(rootView);\r\n        while (viewOrContainer) {\r\n            /** @type {?} */\r\n            var next = null;\r\n            if (viewOrContainer.length >= HEADER_OFFSET) {\r\n                // If LView, traverse down to child.\r\n                /** @type {?} */\r\n                var view = ((viewOrContainer));\r\n                if (view[TVIEW].childIndex > -1)\r\n                    next = getLViewChild(view);\r\n            }\r\n            else {\r\n                // If container, traverse down to its first LView.\r\n                /** @type {?} */\r\n                var container = ((viewOrContainer));\r\n                if (container[VIEWS].length)\r\n                    next = container[VIEWS][0];\r\n            }\r\n            if (next == null) {\r\n                // Only clean up view when moving to the side or up, as destroy hooks\r\n                // should be called in order from the bottom up.\r\n                while (viewOrContainer && !((viewOrContainer))[NEXT] && viewOrContainer !== rootView) {\r\n                    cleanUpView(viewOrContainer);\r\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\r\n                }\r\n                cleanUpView(viewOrContainer || rootView);\r\n                next = viewOrContainer && ((viewOrContainer))[NEXT];\r\n            }\r\n            viewOrContainer = next;\r\n        }\r\n    }\r\n    /**\r\n     * Gets the child of the given LView\r\n     * @param {?} lView\r\n     * @return {?}\r\n     */\r\n    function getLViewChild(lView) {\r\n        /** @type {?} */\r\n        var childIndex = lView[TVIEW].childIndex;\r\n        return childIndex === -1 ? null : lView[childIndex];\r\n    }\r\n    /**\r\n     * A standalone function which destroys an LView,\r\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\r\n     *\r\n     * @param {?} view The view to be destroyed.\r\n     * @return {?}\r\n     */\r\n    function destroyLView(view) {\r\n        /** @type {?} */\r\n        var renderer = view[RENDERER];\r\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\r\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\r\n        }\r\n        destroyViewTree(view);\r\n        // Sets the destroyed flag\r\n        view[FLAGS] |= 64 /* Destroyed */;\r\n    }\r\n    /**\r\n     * Determines which LViewOrLContainer to jump to when traversing back up the\r\n     * tree in destroyViewTree.\r\n     *\r\n     * Normally, the view's parent LView should be checked, but in the case of\r\n     * embedded views, the container (which is the view node's parent, but not the\r\n     * LView's parent) needs to be checked for a possible next property.\r\n     *\r\n     * @param {?} state The LViewOrLContainer for which we need a parent state\r\n     * @param {?} rootView The rootView, so we don't propagate too far up the view tree\r\n     * @return {?} The correct parent LViewOrLContainer\r\n     */\r\n    function getParentState(state, rootView) {\r\n        /** @type {?} */\r\n        var tNode;\r\n        if (state.length >= HEADER_OFFSET && (tNode = (((((state)))))[HOST_NODE]) &&\r\n            tNode.type === 2 /* View */) {\r\n            // if it's an embedded view, the state needs to go up to the container, in case the\r\n            // container has a next\r\n            return ((getLContainer(((tNode)), ((state)))));\r\n        }\r\n        else {\r\n            // otherwise, use parent view for containers or component views\r\n            return state[PARENT] === rootView ? null : state[PARENT];\r\n        }\r\n    }\r\n    /**\r\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\r\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\r\n     * can be propagated to \\@Output listeners.\r\n     *\r\n     * @param {?} viewOrContainer\r\n     * @return {?}\r\n     */\r\n    function cleanUpView(viewOrContainer) {\r\n        if ((((viewOrContainer))).length >= HEADER_OFFSET) {\r\n            /** @type {?} */\r\n            var view = ((viewOrContainer));\r\n            executeOnDestroys(view);\r\n            executePipeOnDestroys(view);\r\n            removeListeners(view);\r\n            /** @type {?} */\r\n            var hostTNode = view[HOST_NODE];\r\n            // For component views only, the local renderer is destroyed as clean up time.\r\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\r\n                ngDevMode && ngDevMode.rendererDestroy++;\r\n                (((view[RENDERER]))).destroy();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Removes listeners and unsubscribes from output subscriptions\r\n     * @param {?} lView\r\n     * @return {?}\r\n     */\r\n    function removeListeners(lView) {\r\n        /** @type {?} */\r\n        var tCleanup = ((lView[TVIEW].cleanup));\r\n        if (tCleanup != null) {\r\n            /** @type {?} */\r\n            var lCleanup = ((lView[CLEANUP]));\r\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\r\n                if (typeof tCleanup[i] === 'string') {\r\n                    // This is a listener with the native renderer\r\n                    /** @type {?} */\r\n                    var idx = tCleanup[i + 1];\r\n                    /** @type {?} */\r\n                    var listener = lCleanup[tCleanup[i + 2]];\r\n                    /** @type {?} */\r\n                    var native = readElementValue(lView[idx]);\r\n                    /** @type {?} */\r\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\r\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\r\n                        // DOM listener\r\n                        native.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\r\n                    }\r\n                    else {\r\n                        if (useCaptureOrSubIdx >= 0) {\r\n                            // unregister\r\n                            lCleanup[useCaptureOrSubIdx]();\r\n                        }\r\n                        else {\r\n                            // Subscription\r\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\r\n                        }\r\n                    }\r\n                    i += 2;\r\n                }\r\n                else if (typeof tCleanup[i] === 'number') {\r\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\r\n                    /** @type {?} */\r\n                    var cleanupFn = lCleanup[tCleanup[i]];\r\n                    cleanupFn();\r\n                }\r\n                else {\r\n                    // This is a cleanup function that is grouped with the index of its context\r\n                    /** @type {?} */\r\n                    var context = lCleanup[tCleanup[i + 1]];\r\n                    tCleanup[i].call(context);\r\n                }\r\n            }\r\n            lView[CLEANUP] = null;\r\n        }\r\n    }\r\n    /**\r\n     * Calls onDestroy hooks for this view\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function executeOnDestroys(view) {\r\n        /** @type {?} */\r\n        var tView = view[TVIEW];\r\n        /** @type {?} */\r\n        var destroyHooks;\r\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\r\n            callHooks(view, destroyHooks);\r\n        }\r\n    }\r\n    /**\r\n     * Calls pipe destroy hooks for this view\r\n     * @param {?} lView\r\n     * @return {?}\r\n     */\r\n    function executePipeOnDestroys(lView) {\r\n        /** @type {?} */\r\n        var pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\r\n        if (pipeDestroyHooks) {\r\n            callHooks(((lView)), pipeDestroyHooks);\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var ANIMATION_PROP_PREFIX = '@';\r\n    /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function isAnimationProp(name) {\r\n        return name[0] === ANIMATION_PROP_PREFIX;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * A permanent marker promise which signifies that the current CD tree is\r\n     * clean.\r\n     * @type {?}\r\n     */\r\n    var _CLEAN_PROMISE = Promise.resolve(null);\r\n    /**\r\n     * Refreshes the view, executing the following steps in that order:\r\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\r\n     * bindings, refreshes child components.\r\n     * Note: view hooks are triggered later when leaving the view.\r\n     * @param {?} lView\r\n     * @return {?}\r\n     */\r\n    function refreshDescendantViews(lView) {\r\n        /** @type {?} */\r\n        var tView = lView[TVIEW];\r\n        // This needs to be set before children are processed to support recursive components\r\n        tView.firstTemplatePass = false;\r\n        setFirstTemplatePass(false);\r\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\r\n        // This will be done in the update pass.\r\n        if (!isCreationMode(lView)) {\r\n            /** @type {?} */\r\n            var checkNoChangesMode_1 = getCheckNoChangesMode();\r\n            executeInitHooks(lView, tView, checkNoChangesMode_1);\r\n            refreshDynamicEmbeddedViews(lView);\r\n            // Content query results must be refreshed before content hooks are called.\r\n            refreshContentQueries(tView);\r\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode_1);\r\n            setHostBindings(tView, lView);\r\n        }\r\n        refreshChildComponents(tView.components);\r\n    }\r\n    /**\r\n     * Sets the host bindings for the current view.\r\n     * @param {?} tView\r\n     * @param {?} viewData\r\n     * @return {?}\r\n     */\r\n    function setHostBindings(tView, viewData) {\r\n        if (tView.expandoInstructions) {\r\n            /** @type {?} */\r\n            var bindingRootIndex_1 = viewData[BINDING_INDEX] = tView.expandoStartIndex;\r\n            setBindingRoot(bindingRootIndex_1);\r\n            /** @type {?} */\r\n            var currentDirectiveIndex = -1;\r\n            /** @type {?} */\r\n            var currentElementIndex = -1;\r\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\r\n                /** @type {?} */\r\n                var instruction = tView.expandoInstructions[i];\r\n                if (typeof instruction === 'number') {\r\n                    if (instruction <= 0) {\r\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\r\n                        // the current element and directive index.\r\n                        currentElementIndex = -instruction;\r\n                        // Injector block and providers are taken into account.\r\n                        /** @type {?} */\r\n                        var providerCount = (((tView.expandoInstructions[++i])));\r\n                        bindingRootIndex_1 += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\r\n                        currentDirectiveIndex = bindingRootIndex_1;\r\n                    }\r\n                    else {\r\n                        // This is either the injector size (so the binding root can skip over directives\r\n                        // and get to the first set of host bindings on this node) or the host var count\r\n                        // (to get to the next set of host bindings on this node).\r\n                        bindingRootIndex_1 += instruction;\r\n                    }\r\n                    setBindingRoot(bindingRootIndex_1);\r\n                }\r\n                else {\r\n                    // If it's not a number, it's a host binding function that needs to be executed.\r\n                    if (instruction !== null) {\r\n                        viewData[BINDING_INDEX] = bindingRootIndex_1;\r\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\r\n                    }\r\n                    currentDirectiveIndex++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Refreshes content queries for all directives in the given view.\r\n     * @param {?} tView\r\n     * @return {?}\r\n     */\r\n    function refreshContentQueries(tView) {\r\n        if (tView.contentQueries != null) {\r\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\r\n                /** @type {?} */\r\n                var directiveDefIdx = tView.contentQueries[i];\r\n                /** @type {?} */\r\n                var directiveDef_1 = ((tView.data[directiveDefIdx]));\r\n                ((directiveDef_1.contentQueriesRefresh))(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Refreshes child components in the current view.\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    function refreshChildComponents(components) {\r\n        if (components != null) {\r\n            for (var i = 0; i < components.length; i++) {\r\n                componentRefresh(components[i]);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} parentLView\r\n     * @param {?} tView\r\n     * @param {?} context\r\n     * @param {?} flags\r\n     * @param {?=} rendererFactory\r\n     * @param {?=} renderer\r\n     * @param {?=} sanitizer\r\n     * @param {?=} injector\r\n     * @return {?}\r\n     */\r\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\r\n        /** @type {?} */\r\n        var lView = ((tView.blueprint.slice()));\r\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 16 /* Attached */ | 32 /* RunInit */ |\r\n            2 /* FirstLViewPass */;\r\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\r\n        lView[CONTEXT] = context;\r\n        lView[RENDERER_FACTORY] = (((rendererFactory || parentLView && parentLView[RENDERER_FACTORY])));\r\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\r\n        lView[RENDERER] = (((renderer || parentLView && parentLView[RENDERER])));\r\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\r\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || ((null));\r\n        lView[((INJECTOR))] = injector || parentLView && parentLView[INJECTOR] || null;\r\n        return lView;\r\n    }\r\n    /**\r\n     * @param {?} index\r\n     * @param {?} type\r\n     * @param {?} native\r\n     * @param {?} name\r\n     * @param {?} attrs\r\n     * @return {?}\r\n     */\r\n    function createNodeAtIndex(index, type, native, name, attrs) {\r\n        /** @type {?} */\r\n        var lView = getLView();\r\n        /** @type {?} */\r\n        var tView = lView[TVIEW];\r\n        /** @type {?} */\r\n        var adjustedIndex = index + HEADER_OFFSET;\r\n        ngDevMode &&\r\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\r\n        lView[adjustedIndex] = native;\r\n        /** @type {?} */\r\n        var tNode = ((tView.data[adjustedIndex]));\r\n        if (tNode == null) {\r\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\r\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\r\n        }\r\n        // Now link ourselves into the tree.\r\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\r\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\r\n        /** @type {?} */\r\n        var previousOrParentTNode = getPreviousOrParentTNode();\r\n        /** @type {?} */\r\n        var isParent = getIsParent();\r\n        if (previousOrParentTNode) {\r\n            if (isParent && previousOrParentTNode.child == null &&\r\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\r\n                // We are in the same view, which means we are adding content node to the parent view.\r\n                previousOrParentTNode.child = tNode;\r\n            }\r\n            else if (!isParent) {\r\n                previousOrParentTNode.next = tNode;\r\n            }\r\n        }\r\n        if (tView.firstChild == null) {\r\n            tView.firstChild = tNode;\r\n        }\r\n        setPreviousOrParentTNode(tNode);\r\n        setIsParent(true);\r\n        return ((tNode));\r\n    }\r\n    /**\r\n     * @param {?} index\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function createViewNode(index, view) {\r\n        // View nodes are not stored in data because they can be added / removed at runtime (which\r\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\r\n        if (view[TVIEW].node == null) {\r\n            view[TVIEW].node = ((createTNode(view, 2 /* View */, index, null, null, null)));\r\n        }\r\n        return view[HOST_NODE] = ((view[TVIEW].node));\r\n    }\r\n    /**\r\n     * Used for rendering embedded views (e.g. dynamically created views)\r\n     *\r\n     * Dynamically created views must store/retrieve their TViews differently from component views\r\n     * because their template functions are nested in the template functions of their hosts, creating\r\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\r\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\r\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\r\n     * TView for dynamically created views on their host TNode, which only has one instance.\r\n     * @template T\r\n     * @param {?} viewToRender\r\n     * @param {?} tView\r\n     * @param {?} context\r\n     * @return {?}\r\n     */\r\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\r\n        /** @type {?} */\r\n        var _isParent = getIsParent();\r\n        /** @type {?} */\r\n        var _previousOrParentTNode = getPreviousOrParentTNode();\r\n        setIsParent(true);\r\n        setPreviousOrParentTNode(((null)));\r\n        /** @type {?} */\r\n        var oldView;\r\n        if (viewToRender[FLAGS] & 128 /* IsRoot */) {\r\n            // This is a root view inside the view tree\r\n            tickRootContext(getRootContext(viewToRender));\r\n        }\r\n        else {\r\n            try {\r\n                setIsParent(true);\r\n                setPreviousOrParentTNode(((null)));\r\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\r\n                namespaceHTML();\r\n                ((tView.template))(getRenderFlags(viewToRender), context);\r\n                // This must be set to false immediately after the first creation run because in an\r\n                // ngFor loop, all the views will be created together before update mode runs and turns\r\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\r\n                // matching, etc again and again.\r\n                viewToRender[TVIEW].firstTemplatePass = false;\r\n                setFirstTemplatePass(false);\r\n                refreshDescendantViews(viewToRender);\r\n            }\r\n            finally {\r\n                leaveView(((oldView)));\r\n                setIsParent(_isParent);\r\n                setPreviousOrParentTNode(_previousOrParentTNode);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} hostView\r\n     * @param {?} context\r\n     * @param {?=} templateFn\r\n     * @return {?}\r\n     */\r\n    function renderComponentOrTemplate(hostView, context, templateFn) {\r\n        /** @type {?} */\r\n        var rendererFactory = hostView[RENDERER_FACTORY];\r\n        /** @type {?} */\r\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\r\n        /** @type {?} */\r\n        var normalExecutionPath = !getCheckNoChangesMode();\r\n        try {\r\n            if (normalExecutionPath && rendererFactory.begin) {\r\n                rendererFactory.begin();\r\n            }\r\n            if (isCreationMode(hostView)) {\r\n                // creation mode pass\r\n                if (templateFn) {\r\n                    namespaceHTML();\r\n                    templateFn(1 /* Create */, ((context)));\r\n                }\r\n                refreshDescendantViews(hostView);\r\n                hostView[FLAGS] &= ~1 /* CreationMode */;\r\n            }\r\n            // update mode pass\r\n            templateFn && templateFn(2 /* Update */, ((context)));\r\n            refreshDescendantViews(hostView);\r\n        }\r\n        finally {\r\n            if (normalExecutionPath && rendererFactory.end) {\r\n                rendererFactory.end();\r\n            }\r\n            leaveView(oldView);\r\n        }\r\n    }\r\n    /**\r\n     * This function returns the default configuration of rendering flags depending on when the\r\n     * template is in creation mode or update mode. Update block and create block are\r\n     * always run separately.\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function getRenderFlags(view) {\r\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\r\n    }\r\n    //////////////////////////\r\n    //// Namespace\r\n    //////////////////////////\r\n    /** @type {?} */\r\n    var _currentNamespace = null;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function namespaceHTML() {\r\n        _currentNamespace = null;\r\n    }\r\n    /**\r\n     * Creates a native element from a tag name, using a renderer.\r\n     * @param {?} name the tag name\r\n     * @param {?=} overriddenRenderer Optional A renderer to override the default one\r\n     * @return {?} the element created\r\n     */\r\n    function elementCreate(name, overriddenRenderer) {\r\n        /** @type {?} */\r\n        var native;\r\n        /** @type {?} */\r\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\r\n        if (isProceduralRenderer(rendererToUse)) {\r\n            native = rendererToUse.createElement(name, _currentNamespace);\r\n        }\r\n        else {\r\n            if (_currentNamespace === null) {\r\n                native = rendererToUse.createElement(name);\r\n            }\r\n            else {\r\n                native = rendererToUse.createElementNS(_currentNamespace, name);\r\n            }\r\n        }\r\n        return native;\r\n    }\r\n    /**\r\n     * Gets TView from a template function or creates a new TView\r\n     * if it doesn't already exist.\r\n     *\r\n     * @param {?} templateFn The template from which to get static data\r\n     * @param {?} consts The number of nodes, local refs, and pipes in this view\r\n     * @param {?} vars The number of bindings and pure function bindings in this view\r\n     * @param {?} directives Directive defs that should be saved on TView\r\n     * @param {?} pipes Pipe defs that should be saved on TView\r\n     * @param {?} viewQuery\r\n     * @return {?} TView\r\n     */\r\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\r\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\r\n        // 1. It is a megamorphic call on each invocation.\r\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\r\n        //    outer template invocation, which means that no such property will exist\r\n        // Correct solution is to only put `ngPrivateData` on the Component template\r\n        // and not on embedded templates.\r\n        return templateFn.ngPrivateData ||\r\n            (templateFn.ngPrivateData =\r\n                ((createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery))));\r\n    }\r\n    /**\r\n     * Creates a TView instance\r\n     *\r\n     * @param {?} viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\r\n     * @param {?} templateFn Template function\r\n     * @param {?} consts The number of nodes, local refs, and pipes in this template\r\n     * @param {?} vars\r\n     * @param {?} directives Registry of directives for this view\r\n     * @param {?} pipes Registry of pipes for this view\r\n     * @param {?} viewQuery\r\n     * @return {?}\r\n     */\r\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\r\n        ngDevMode && ngDevMode.tView++;\r\n        /** @type {?} */\r\n        var bindingStartIndex = HEADER_OFFSET + consts;\r\n        // This length does not yet contain host bindings from child directives because at this point,\r\n        // we don't know which directives are active on this template. As soon as a directive is matched\r\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\r\n        /** @type {?} */\r\n        var initialViewLength = bindingStartIndex + vars;\r\n        /** @type {?} */\r\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\r\n        return blueprint[((TVIEW))] = {\r\n            id: viewIndex,\r\n            blueprint: blueprint,\r\n            template: templateFn,\r\n            viewQuery: viewQuery,\r\n            node: ((null)),\r\n            data: blueprint.slice(),\r\n            // Fill in to match HEADER_OFFSET in LView\r\n            childIndex: -1,\r\n            // Children set in addToViewTree(), if any\r\n            bindingStartIndex: bindingStartIndex,\r\n            expandoStartIndex: initialViewLength,\r\n            expandoInstructions: null,\r\n            firstTemplatePass: true,\r\n            initHooks: null,\r\n            checkHooks: null,\r\n            contentHooks: null,\r\n            contentCheckHooks: null,\r\n            viewHooks: null,\r\n            viewCheckHooks: null,\r\n            destroyHooks: null,\r\n            pipeDestroyHooks: null,\r\n            cleanup: null,\r\n            contentQueries: null,\r\n            components: null,\r\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\r\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\r\n            firstChild: null,\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} bindingStartIndex\r\n     * @param {?} initialViewLength\r\n     * @return {?}\r\n     */\r\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\r\n        /** @type {?} */\r\n        var blueprint = ((new Array(initialViewLength)\r\n            .fill(null, 0, bindingStartIndex)\r\n            .fill(NO_CHANGE, bindingStartIndex)));\r\n        blueprint[CONTAINER_INDEX] = -1;\r\n        blueprint[BINDING_INDEX] = bindingStartIndex;\r\n        return blueprint;\r\n    }\r\n    /**\r\n     * @param {?} native\r\n     * @param {?} attrs\r\n     * @return {?}\r\n     */\r\n    function setUpAttributes(native, attrs) {\r\n        /** @type {?} */\r\n        var renderer = getLView()[RENDERER];\r\n        /** @type {?} */\r\n        var isProc = isProceduralRenderer(renderer);\r\n        /** @type {?} */\r\n        var i = 0;\r\n        while (i < attrs.length) {\r\n            /** @type {?} */\r\n            var attrName = attrs[i++];\r\n            if (typeof attrName == 'number') {\r\n                if (attrName === 0 /* NamespaceURI */) {\r\n                    // Namespaced attributes\r\n                    /** @type {?} */\r\n                    var namespaceURI = ((attrs[i++]));\r\n                    /** @type {?} */\r\n                    var attrName_1 = ((attrs[i++]));\r\n                    /** @type {?} */\r\n                    var attrVal = ((attrs[i++]));\r\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\r\n                    isProc ?\r\n                        (((renderer)))\r\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\r\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\r\n                }\r\n                else {\r\n                    // All other `AttributeMarker`s are ignored here.\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                /// attrName is string;\r\n                /** @type {?} */\r\n                var attrVal = attrs[i++];\r\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\r\n                    // Standard attributes\r\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\r\n                    if (isAnimationProp(attrName)) {\r\n                        if (isProc) {\r\n                            (((renderer))).setProperty(native, attrName, attrVal);\r\n                        }\r\n                    }\r\n                    else {\r\n                        isProc ?\r\n                            (((renderer)))\r\n                                .setAttribute(native, ((attrName)), ((attrVal))) :\r\n                            native.setAttribute(((attrName)), ((attrVal)));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} text\r\n     * @param {?} token\r\n     * @return {?}\r\n     */\r\n    function createError(text, token) {\r\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\r\n    }\r\n    /**\r\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\r\n     *\r\n     * @param {?} factory\r\n     * @param {?} elementOrSelector Render element or CSS selector to locate the element.\r\n     * @return {?}\r\n     */\r\n    function locateHostElement(factory, elementOrSelector) {\r\n        /** @type {?} */\r\n        var defaultRenderer = factory.createRenderer(null, null);\r\n        /** @type {?} */\r\n        var rNode = typeof elementOrSelector === 'string' ?\r\n            (isProceduralRenderer(defaultRenderer) ?\r\n                defaultRenderer.selectRootElement(elementOrSelector) :\r\n                defaultRenderer.querySelector(elementOrSelector)) :\r\n            elementOrSelector;\r\n        if (ngDevMode && !rNode) {\r\n            if (typeof elementOrSelector === 'string') {\r\n                throw createError('Host node with selector not found:', elementOrSelector);\r\n            }\r\n            else {\r\n                throw createError('Host node is required:', elementOrSelector);\r\n            }\r\n        }\r\n        return rNode;\r\n    }\r\n    /**\r\n     * Saves the cleanup function itself in LView.cleanupInstances.\r\n     *\r\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\r\n     * listeners.\r\n     *\r\n     * On the first template pass, the index of the cleanup function is saved in TView.\r\n     * @param {?} view\r\n     * @param {?} cleanupFn\r\n     * @return {?}\r\n     */\r\n    function storeCleanupFn(view, cleanupFn) {\r\n        getCleanup(view).push(cleanupFn);\r\n        if (view[TVIEW].firstTemplatePass) {\r\n            getTViewCleanup(view).push(((view[CLEANUP])).length - 1, null);\r\n        }\r\n    }\r\n    /**\r\n     * Constructs a TNode object from the arguments.\r\n     *\r\n     * @param {?} lView\r\n     * @param {?} type The type of the node\r\n     * @param {?} adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\r\n     * @param {?} tagName The tag name of the node\r\n     * @param {?} attrs The attributes defined on this node\r\n     * @param {?} tViews Any TViews attached to this node\r\n     * @return {?} the TNode object\r\n     */\r\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\r\n        /** @type {?} */\r\n        var previousOrParentTNode = getPreviousOrParentTNode();\r\n        ngDevMode && ngDevMode.tNode++;\r\n        /** @type {?} */\r\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\r\n        // Parents cannot cross component boundaries because components will be used in multiple places,\r\n        // so it's only set if the view is the same.\r\n        /** @type {?} */\r\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\r\n        /** @type {?} */\r\n        var tParent = parentInSameView ? ((parent)) : null;\r\n        return {\r\n            type: type,\r\n            index: adjustedIndex,\r\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\r\n            directiveStart: -1,\r\n            directiveEnd: -1,\r\n            flags: 0,\r\n            providerIndexes: 0,\r\n            tagName: tagName,\r\n            attrs: attrs,\r\n            localNames: null,\r\n            initialInputs: undefined,\r\n            inputs: undefined,\r\n            outputs: undefined,\r\n            tViews: tViews,\r\n            next: null,\r\n            child: null,\r\n            parent: tParent,\r\n            detached: null,\r\n            stylingTemplate: null,\r\n            projection: null\r\n        };\r\n    }\r\n    //////////////////////////\r\n    //// Directive\r\n    //////////////////////////\r\n    /**\r\n     * Instantiate a root component.\r\n     * @template T\r\n     * @param {?} tView\r\n     * @param {?} viewData\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function instantiateRootComponent(tView, viewData, def) {\r\n        /** @type {?} */\r\n        var rootTNode = getPreviousOrParentTNode();\r\n        if (tView.firstTemplatePass) {\r\n            if (def.providersResolver)\r\n                def.providersResolver(def);\r\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\r\n            baseResolveDirective(tView, viewData, def, def.factory);\r\n        }\r\n        /** @type {?} */\r\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, ((rootTNode)));\r\n        postProcessBaseDirective(viewData, rootTNode, directive, ((def)));\r\n        return directive;\r\n    }\r\n    /**\r\n     * Generates a new block in TView.expandoInstructions for this node.\r\n     *\r\n     * Each expando block starts with the element index (turned negative so we can distinguish\r\n     * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\r\n     * @param {?} tView\r\n     * @param {?} tNode\r\n     * @param {?} directiveCount\r\n     * @return {?}\r\n     */\r\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\r\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\r\n        /** @type {?} */\r\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\r\n        /** @type {?} */\r\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\r\n        /** @type {?} */\r\n        var providerCount = tView.data.length - providerStartIndex;\r\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\r\n    }\r\n    /**\r\n     * A lighter version of postProcessDirective() that is used for the root component.\r\n     * @template T\r\n     * @param {?} lView\r\n     * @param {?} previousOrParentTNode\r\n     * @param {?} directive\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\r\n        /** @type {?} */\r\n        var native = getNativeByTNode(previousOrParentTNode, lView);\r\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\r\n        ngDevMode && assertPreviousIsParent(getIsParent());\r\n        attachPatchData(directive, lView);\r\n        if (native) {\r\n            attachPatchData(native, lView);\r\n        }\r\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\r\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\r\n            setUpAttributes(((native)), ((def.attributes)));\r\n        }\r\n    }\r\n    /**\r\n     * Stores index of component's host element so it will be queued for view refresh during CD.\r\n     * @param {?} previousOrParentTNode\r\n     * @return {?}\r\n     */\r\n    function queueComponentIndexForCheck(previousOrParentTNode) {\r\n        ngDevMode &&\r\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\r\n        /** @type {?} */\r\n        var tView = getLView()[TVIEW];\r\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\r\n    }\r\n    /**\r\n     * Initializes the flags on the current node, setting all indices to the initial index,\r\n     * the directive count to 0, and adding the isComponent flag.\r\n     * @param {?} tNode\r\n     * @param {?} index the initial index\r\n     * @param {?} numberOfDirectives\r\n     * @return {?}\r\n     */\r\n    function initNodeFlags(tNode, index, numberOfDirectives) {\r\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\r\n        /** @type {?} */\r\n        var flags = tNode.flags;\r\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\r\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\r\n        // When the first directive is created on a node, save the index\r\n        tNode.flags = flags & 1 /* isComponent */;\r\n        tNode.directiveStart = index;\r\n        tNode.directiveEnd = index + numberOfDirectives;\r\n        tNode.providerIndexes = index;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} tView\r\n     * @param {?} viewData\r\n     * @param {?} def\r\n     * @param {?} directiveFactory\r\n     * @return {?}\r\n     */\r\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\r\n        tView.data.push(def);\r\n        /** @type {?} */\r\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\r\n        tView.blueprint.push(nodeInjectorFactory);\r\n        viewData.push(nodeInjectorFactory);\r\n    }\r\n    /**\r\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\r\n     * by executing an associated template function.\r\n     * @param {?} lView\r\n     * @return {?}\r\n     */\r\n    function refreshDynamicEmbeddedViews(lView) {\r\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\r\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\r\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\r\n            // header.\r\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\r\n                /** @type {?} */\r\n                var container = ((current));\r\n                for (var i = 0; i < container[VIEWS].length; i++) {\r\n                    /** @type {?} */\r\n                    var dynamicViewData = container[VIEWS][i];\r\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\r\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\r\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], ((dynamicViewData[CONTEXT])));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /////////////\r\n    /**\r\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\r\n     *\r\n     * @template T\r\n     * @param {?} adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\r\n     * @return {?}\r\n     */\r\n    function componentRefresh(adjustedElementIndex) {\r\n        /** @type {?} */\r\n        var lView = getLView();\r\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\r\n        /** @type {?} */\r\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\r\n        ngDevMode && assertNodeType(((lView[TVIEW].data[adjustedElementIndex])), 3 /* Element */);\r\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\r\n        if (viewAttached(hostView) && hostView[FLAGS] & (4 /* CheckAlways */ | 8 /* Dirty */)) {\r\n            syncViewWithBlueprint(hostView);\r\n            checkView(hostView, hostView[CONTEXT]);\r\n        }\r\n    }\r\n    /**\r\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\r\n     *\r\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\r\n     * will be skipped. However, consider this case of two components side-by-side:\r\n     *\r\n     * App template:\r\n     * ```\r\n     * <comp></comp>\r\n     * <comp></comp>\r\n     * ```\r\n     *\r\n     * The following will happen:\r\n     * 1. App template begins processing.\r\n     * 2. First <comp> is matched as a component and its LView is created.\r\n     * 3. Second <comp> is matched as a component and its LView is created.\r\n     * 4. App template completes processing, so it's time to check child templates.\r\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\r\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\r\n     * <comp> template, but its LView was created before this update, so it is out of sync.\r\n     *\r\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\r\n     * are processed as soon as they are created.\r\n     *\r\n     * @param {?} componentView The view to sync\r\n     * @return {?}\r\n     */\r\n    function syncViewWithBlueprint(componentView) {\r\n        /** @type {?} */\r\n        var componentTView = componentView[TVIEW];\r\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\r\n            componentView[i] = componentTView.blueprint[i];\r\n        }\r\n    }\r\n    /**\r\n     * Returns a boolean for whether the view is attached\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function viewAttached(view) {\r\n        return (view[FLAGS] & 16 /* Attached */) === 16 /* Attached */;\r\n    }\r\n    /**\r\n     * Adds LView or LContainer to the end of the current view tree.\r\n     *\r\n     * This structure will be used to traverse through nested views to remove listeners\r\n     * and call onDestroy callbacks.\r\n     *\r\n     * @template T\r\n     * @param {?} lView The view where LView or LContainer should be added\r\n     * @param {?} adjustedHostIndex Index of the view's host node in LView[], adjusted for header\r\n     * @param {?} state The LView or LContainer to add to the view tree\r\n     * @return {?} The state passed in\r\n     */\r\n    function addToViewTree(lView, adjustedHostIndex, state) {\r\n        /** @type {?} */\r\n        var tView = lView[TVIEW];\r\n        /** @type {?} */\r\n        var firstTemplatePass = getFirstTemplatePass();\r\n        if (lView[TAIL]) {\r\n            ((lView[TAIL]))[NEXT] = state;\r\n        }\r\n        else if (firstTemplatePass) {\r\n            tView.childIndex = adjustedHostIndex;\r\n        }\r\n        lView[TAIL] = state;\r\n        return state;\r\n    }\r\n    /**\r\n     * Marks current view and all ancestors dirty\r\n     * @param {?} lView\r\n     * @return {?}\r\n     */\r\n    function markViewDirty(lView) {\r\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\r\n            lView[FLAGS] |= 8 /* Dirty */;\r\n            lView = ((lView[PARENT]));\r\n        }\r\n        lView[FLAGS] |= 8 /* Dirty */;\r\n        ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\r\n        /** @type {?} */\r\n        var rootContext = ((lView[CONTEXT]));\r\n        scheduleTick(rootContext, 1 /* DetectChanges */);\r\n    }\r\n    /**\r\n     * Used to schedule change detection on the whole application.\r\n     *\r\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\r\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\r\n     * re-rendered.\r\n     *\r\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\r\n     * `scheduleTick` requests. The scheduling function can be overridden in\r\n     * `renderComponent`'s `scheduler` option.\r\n     * @template T\r\n     * @param {?} rootContext\r\n     * @param {?} flags\r\n     * @return {?}\r\n     */\r\n    function scheduleTick(rootContext, flags) {\r\n        /** @type {?} */\r\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\r\n        rootContext.flags |= flags;\r\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\r\n            /** @type {?} */\r\n            var res_1;\r\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\r\n            rootContext.scheduler(function () {\r\n                if (rootContext.flags & 1 /* DetectChanges */) {\r\n                    rootContext.flags &= ~1 /* DetectChanges */;\r\n                    tickRootContext(rootContext);\r\n                }\r\n                if (rootContext.flags & 2 /* FlushPlayers */) {\r\n                    rootContext.flags &= ~2 /* FlushPlayers */;\r\n                    /** @type {?} */\r\n                    var playerHandler = rootContext.playerHandler;\r\n                    if (playerHandler) {\r\n                        playerHandler.flushPlayers();\r\n                    }\r\n                }\r\n                rootContext.clean = _CLEAN_PROMISE;\r\n                ((res_1))(null);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} rootContext\r\n     * @return {?}\r\n     */\r\n    function tickRootContext(rootContext) {\r\n        for (var i = 0; i < rootContext.components.length; i++) {\r\n            /** @type {?} */\r\n            var rootComponent = rootContext.components[i];\r\n            renderComponentOrTemplate(((readPatchedLView(rootComponent))), rootComponent);\r\n        }\r\n    }\r\n    /**\r\n     * Synchronously perform change detection on a component (and possibly its sub-components).\r\n     *\r\n     * This function triggers change detection in a synchronous way on a component. There should\r\n     * be very little reason to call this function directly since a preferred way to do change\r\n     * detection is to {\\@link markDirty} the component and wait for the scheduler to call this method\r\n     * at some future point in time. This is because a single user action often results in many\r\n     * components being invalidated and calling change detection on each component synchronously\r\n     * would be inefficient. It is better to wait until all components are marked as dirty and\r\n     * then perform single change detection across all of the components\r\n     *\r\n     * @template T\r\n     * @param {?} component The component which the change detection should be performed on.\r\n     * @return {?}\r\n     */\r\n    function detectChanges(component) {\r\n        /** @type {?} */\r\n        var view = ((getComponentViewByInstance(component)));\r\n        detectChangesInternal(view, component);\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} view\r\n     * @param {?} context\r\n     * @return {?}\r\n     */\r\n    function detectChangesInternal(view, context) {\r\n        /** @type {?} */\r\n        var rendererFactory = view[RENDERER_FACTORY];\r\n        if (rendererFactory.begin)\r\n            rendererFactory.begin();\r\n        if (isCreationMode(view)) {\r\n            checkView(view, context); // creation mode pass\r\n        }\r\n        checkView(view, context); // update mode pass\r\n        if (rendererFactory.end)\r\n            rendererFactory.end();\r\n    }\r\n    /**\r\n     * Synchronously perform change detection on a root view and its components.\r\n     *\r\n     * @param {?} lView The view which the change detection should be performed on.\r\n     * @return {?}\r\n     */\r\n    function detectChangesInRootView(lView) {\r\n        tickRootContext(((lView[CONTEXT])));\r\n    }\r\n    /**\r\n     * Checks the change detector and its children, and throws if any changes are detected.\r\n     *\r\n     * This is used in development mode to verify that running change detection doesn't\r\n     * introduce other changes.\r\n     * @template T\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function checkNoChanges(component) {\r\n        setCheckNoChangesMode(true);\r\n        try {\r\n            detectChanges(component);\r\n        }\r\n        finally {\r\n            setCheckNoChangesMode(false);\r\n        }\r\n    }\r\n    /**\r\n     * Checks the change detector on a root view and its components, and throws if any changes are\r\n     * detected.\r\n     *\r\n     * This is used in development mode to verify that running change detection doesn't\r\n     * introduce other changes.\r\n     *\r\n     * @param {?} lView The view which the change detection should be checked on.\r\n     * @return {?}\r\n     */\r\n    function checkNoChangesInRootView(lView) {\r\n        setCheckNoChangesMode(true);\r\n        try {\r\n            detectChangesInRootView(lView);\r\n        }\r\n        finally {\r\n            setCheckNoChangesMode(false);\r\n        }\r\n    }\r\n    /**\r\n     * Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\r\n     * @template T\r\n     * @param {?} hostView\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function checkView(hostView, component) {\r\n        /** @type {?} */\r\n        var hostTView = hostView[TVIEW];\r\n        /** @type {?} */\r\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\r\n        /** @type {?} */\r\n        var templateFn = ((hostTView.template));\r\n        /** @type {?} */\r\n        var viewQuery = hostTView.viewQuery;\r\n        try {\r\n            namespaceHTML();\r\n            createViewQuery(viewQuery, hostView, component);\r\n            templateFn(getRenderFlags(hostView), component);\r\n            refreshDescendantViews(hostView);\r\n            updateViewQuery(viewQuery, hostView, component);\r\n        }\r\n        finally {\r\n            leaveView(oldView);\r\n        }\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} viewQuery\r\n     * @param {?} view\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function createViewQuery(viewQuery, view, component) {\r\n        if (viewQuery && isCreationMode(view)) {\r\n            viewQuery(1 /* Create */, component);\r\n        }\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} viewQuery\r\n     * @param {?} view\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function updateViewQuery(viewQuery, view, component) {\r\n        if (viewQuery && !isCreationMode(view)) {\r\n            viewQuery(2 /* Update */, component);\r\n        }\r\n    }\r\n    /** @type {?} */\r\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function getCleanup(view) {\r\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\r\n        return view[CLEANUP] || (view[CLEANUP] = []);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function getTViewCleanup(view) {\r\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Creates the root component view and the root component node.\r\n     *\r\n     * @param {?} rNode Render host element.\r\n     * @param {?} def ComponentDef\r\n     * @param {?} rootView The parent view where the host node is stored\r\n     * @param {?} rendererFactory\r\n     * @param {?} renderer The current renderer\r\n     * @param {?=} sanitizer The sanitizer, if provided\r\n     *\r\n     * @return {?} Component view created\r\n     */\r\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\r\n        resetComponentState();\r\n        /** @type {?} */\r\n        var tView = rootView[TVIEW];\r\n        /** @type {?} */\r\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, renderer, sanitizer);\r\n        /** @type {?} */\r\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\r\n        if (tView.firstTemplatePass) {\r\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\r\n            tNode.flags = 1 /* isComponent */;\r\n            initNodeFlags(tNode, rootView.length, 1);\r\n            queueComponentIndexForCheck(tNode);\r\n        }\r\n        // Store component view at node index, with node as the HOST\r\n        componentView[HOST] = rootView[HEADER_OFFSET];\r\n        componentView[HOST_NODE] = ((tNode));\r\n        return rootView[HEADER_OFFSET] = componentView;\r\n    }\r\n    /**\r\n     * Creates a root component and sets it up with features and host bindings. Shared by\r\n     * renderComponent() and ViewContainerRef.createComponent().\r\n     * @template T\r\n     * @param {?} componentView\r\n     * @param {?} componentDef\r\n     * @param {?} rootView\r\n     * @param {?} rootContext\r\n     * @param {?} hostFeatures\r\n     * @return {?}\r\n     */\r\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\r\n        /** @type {?} */\r\n        var tView = rootView[TVIEW];\r\n        // Create directive instance with factory() and store at next index in viewData\r\n        /** @type {?} */\r\n        var component = instantiateRootComponent(tView, rootView, componentDef);\r\n        rootContext.components.push(component);\r\n        componentView[CONTEXT] = component;\r\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\r\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\r\n            /** @type {?} */\r\n            var rootTNode = getPreviousOrParentTNode();\r\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\r\n        }\r\n        return component;\r\n    }\r\n    /**\r\n     * @param {?=} scheduler\r\n     * @param {?=} playerHandler\r\n     * @return {?}\r\n     */\r\n    function createRootContext(scheduler, playerHandler) {\r\n        return {\r\n            components: [],\r\n            scheduler: scheduler || defaultScheduler,\r\n            clean: CLEAN_PROMISE,\r\n            playerHandler: playerHandler || null,\r\n            flags: 0 /* Empty */\r\n        };\r\n    }\r\n    /**\r\n     * Used to enable lifecycle hooks on the root component.\r\n     *\r\n     * Include this feature when calling `renderComponent` if the root component\r\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\r\n     * be called properly.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```\r\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\r\n     * ```\r\n     * @param {?} component\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function LifecycleHooksFeature(component, def) {\r\n        /** @type {?} */\r\n        var rootTView = ((readPatchedLView(component)))[TVIEW];\r\n        /** @type {?} */\r\n        var dirIndex = rootTView.data.length - 1;\r\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\r\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\r\n        // LNode).\r\n        queueLifecycleHooks(rootTView, (({ directiveStart: dirIndex, directiveEnd: dirIndex + 1 })));\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * @param {...?} args\r\n     * @return {?}\r\n     */\r\n    function noop() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        // Do nothing.\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var SOURCE = '__source';\r\n    /** @type {?} */\r\n    var _THROW_IF_NOT_FOUND = new Object();\r\n    /** @type {?} */\r\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\r\n    /**\r\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\r\n     *\r\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\r\n     * project.\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\r\n    var NullInjector = /** @class */ (function () {\r\n        function NullInjector() {\r\n        }\r\n        /**\r\n         * @param {?} token\r\n         * @param {?=} notFoundValue\r\n         * @return {?}\r\n         */\r\n        NullInjector.prototype.get = function (token, notFoundValue) {\r\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\r\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\r\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\r\n                // reason why correctly written application should cause this exception.\r\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\r\n                // if(ngDevMode) debugger;\r\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\r\n            }\r\n            return notFoundValue;\r\n        };\r\n        return NullInjector;\r\n    }());\r\n    /**\r\n     * Concrete injectors implement this interface.\r\n     *\r\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * {\\@example core/di/ts/injector_spec.ts region='Injector'}\r\n     *\r\n     * `Injector` returns itself when given `Injector` as a token:\r\n     *\r\n     * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var Injector = /** @class */ (function () {\r\n        function Injector() {\r\n        }\r\n        /**\r\n         * Create a new Injector which is configure using `StaticProvider`s.\r\n         *\r\n         * \\@usageNotes\r\n         * ### Example\r\n         *\r\n         * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\r\n         * @param {?} options\r\n         * @param {?=} parent\r\n         * @return {?}\r\n         */\r\n        Injector.create = function (options, parent) {\r\n            if (Array.isArray(options)) {\r\n                return new StaticInjector(options, parent);\r\n            }\r\n            else {\r\n                return new StaticInjector(options.providers, options.parent, options.name || null);\r\n            }\r\n        };\r\n        return Injector;\r\n    }());\r\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\r\n    Injector.NULL = new NullInjector();\r\n    /** @nocollapse */\r\n    /** @nocollapse */ Injector.ngInjectableDef = defineInjectable({\r\n        providedIn: (('any')),\r\n        factory: function () { return inject(INJECTOR$1); },\r\n    });\r\n    /**\r\n     * \\@internal\r\n     */\r\n    Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\r\n    /** @type {?} */\r\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\r\n    /** @type {?} */\r\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\r\n    /** @type {?} */\r\n    var IDENT = function (value) {\r\n        return value;\r\n    };\r\n    /** @type {?} */\r\n    var EMPTY = (([]));\r\n    /** @type {?} */\r\n    var CIRCULAR = IDENT;\r\n    /** @type {?} */\r\n    var MULTI_PROVIDER_FN = function () {\r\n        return Array.prototype.slice.call(arguments);\r\n    };\r\n    /** @type {?} */\r\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\r\n    /** @type {?} */\r\n    var NG_TOKEN_PATH = 'ngTokenPath';\r\n    /** @type {?} */\r\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\r\n    /** @type {?} */\r\n    var NULL_INJECTOR$1 = Injector.NULL;\r\n    /** @type {?} */\r\n    var NEW_LINE = /\\n/gm;\r\n    /** @type {?} */\r\n    var NO_NEW_LINE = 'ɵ';\r\n    var StaticInjector = /** @class */ (function () {\r\n        /**\r\n         * @param {?} providers\r\n         * @param {?=} parent\r\n         * @param {?=} source\r\n         */\r\n        function StaticInjector(providers, parent, source) {\r\n            if (parent === void 0) { parent = NULL_INJECTOR$1; }\r\n            if (source === void 0) { source = null; }\r\n            this.parent = parent;\r\n            this.source = source;\r\n            /** @type {?} */\r\n            var records = this._records = new Map();\r\n            records.set(Injector, (({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false })));\r\n            records.set(INJECTOR$1, (({ token: INJECTOR$1, fn: IDENT, deps: EMPTY, value: this, useNew: false })));\r\n            recursivelyProcessProviders(records, providers);\r\n        }\r\n        /**\r\n         * @param {?} token\r\n         * @param {?=} notFoundValue\r\n         * @param {?=} flags\r\n         * @return {?}\r\n         */\r\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\r\n            if (flags === void 0) { flags = InjectFlags.Default; }\r\n            /** @type {?} */\r\n            var record = this._records.get(token);\r\n            try {\r\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\r\n            }\r\n            catch (e) {\r\n                /** @type {?} */\r\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\r\n                if (token[SOURCE]) {\r\n                    tokenPath.unshift(token[SOURCE]);\r\n                }\r\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\r\n                e[NG_TOKEN_PATH] = tokenPath;\r\n                e[NG_TEMP_TOKEN_PATH] = null;\r\n                throw e;\r\n            }\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        StaticInjector.prototype.toString = function () {\r\n            /** @type {?} */\r\n            var tokens = (([]));\r\n            /** @type {?} */\r\n            var records = this._records;\r\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\r\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\r\n        };\r\n        return StaticInjector;\r\n    }());\r\n    /**\r\n     * @param {?} provider\r\n     * @return {?}\r\n     */\r\n    function resolveProvider(provider) {\r\n        /** @type {?} */\r\n        var deps = computeDeps(provider);\r\n        /** @type {?} */\r\n        var fn = IDENT;\r\n        /** @type {?} */\r\n        var value = EMPTY;\r\n        /** @type {?} */\r\n        var useNew = false;\r\n        /** @type {?} */\r\n        var provide = resolveForwardRef(provider.provide);\r\n        if (USE_VALUE in provider) {\r\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\r\n            value = (((provider))).useValue;\r\n        }\r\n        else if ((((provider))).useFactory) {\r\n            fn = (((provider))).useFactory;\r\n        }\r\n        else if ((((provider))).useExisting)\r\n            ;\r\n        else if ((((provider))).useClass) {\r\n            useNew = true;\r\n            fn = resolveForwardRef((((provider))).useClass);\r\n        }\r\n        else if (typeof provide == 'function') {\r\n            useNew = true;\r\n            fn = provide;\r\n        }\r\n        else {\r\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\r\n        }\r\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\r\n    }\r\n    /**\r\n     * @param {?} token\r\n     * @return {?}\r\n     */\r\n    function multiProviderMixError(token) {\r\n        return staticError('Cannot mix multi providers and regular providers', token);\r\n    }\r\n    /**\r\n     * @param {?} records\r\n     * @param {?} provider\r\n     * @return {?}\r\n     */\r\n    function recursivelyProcessProviders(records, provider) {\r\n        if (provider) {\r\n            provider = resolveForwardRef(provider);\r\n            if (provider instanceof Array) {\r\n                // if we have an array recurse into the array\r\n                for (var i = 0; i < provider.length; i++) {\r\n                    recursivelyProcessProviders(records, provider[i]);\r\n                }\r\n            }\r\n            else if (typeof provider === 'function') {\r\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\r\n                // error messages\r\n                throw staticError('Function/Class not supported', provider);\r\n            }\r\n            else if (provider && typeof provider === 'object' && provider.provide) {\r\n                // At this point we have what looks like a provider: {provide: ?, ....}\r\n                /** @type {?} */\r\n                var token = resolveForwardRef(provider.provide);\r\n                /** @type {?} */\r\n                var resolvedProvider = resolveProvider(provider);\r\n                if (provider.multi === true) {\r\n                    // This is a multi provider.\r\n                    /** @type {?} */\r\n                    var multiProvider = records.get(token);\r\n                    if (multiProvider) {\r\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\r\n                            throw multiProviderMixError(token);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\r\n                        records.set(token, multiProvider = (({\r\n                            token: provider.provide,\r\n                            deps: [],\r\n                            useNew: false,\r\n                            fn: MULTI_PROVIDER_FN,\r\n                            value: EMPTY\r\n                        })));\r\n                    }\r\n                    // Treat the provider as the token.\r\n                    token = provider;\r\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\r\n                }\r\n                /** @type {?} */\r\n                var record = records.get(token);\r\n                if (record && record.fn == MULTI_PROVIDER_FN) {\r\n                    throw multiProviderMixError(token);\r\n                }\r\n                records.set(token, resolvedProvider);\r\n            }\r\n            else {\r\n                throw staticError('Unexpected provider', provider);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} token\r\n     * @param {?} record\r\n     * @param {?} records\r\n     * @param {?} parent\r\n     * @param {?} notFoundValue\r\n     * @param {?} flags\r\n     * @return {?}\r\n     */\r\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\r\n        try {\r\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\r\n        }\r\n        catch (e) {\r\n            // ensure that 'e' is of type Error.\r\n            if (!(e instanceof Error)) {\r\n                e = new Error(e);\r\n            }\r\n            /** @type {?} */\r\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\r\n            path.unshift(token);\r\n            if (record && record.value == CIRCULAR) {\r\n                // Reset the Circular flag.\r\n                record.value = EMPTY;\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} token\r\n     * @param {?} record\r\n     * @param {?} records\r\n     * @param {?} parent\r\n     * @param {?} notFoundValue\r\n     * @param {?} flags\r\n     * @return {?}\r\n     */\r\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\r\n        /** @type {?} */\r\n        var value;\r\n        if (record && !(flags & InjectFlags.SkipSelf)) {\r\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\r\n            // to resolve it.\r\n            value = record.value;\r\n            if (value == CIRCULAR) {\r\n                throw Error(NO_NEW_LINE + 'Circular dependency');\r\n            }\r\n            else if (value === EMPTY) {\r\n                record.value = CIRCULAR;\r\n                /** @type {?} */\r\n                var obj = undefined;\r\n                /** @type {?} */\r\n                var useNew = record.useNew;\r\n                /** @type {?} */\r\n                var fn = record.fn;\r\n                /** @type {?} */\r\n                var depRecords = record.deps;\r\n                /** @type {?} */\r\n                var deps = EMPTY;\r\n                if (depRecords.length) {\r\n                    deps = [];\r\n                    for (var i = 0; i < depRecords.length; i++) {\r\n                        /** @type {?} */\r\n                        var depRecord = depRecords[i];\r\n                        /** @type {?} */\r\n                        var options = depRecord.options;\r\n                        /** @type {?} */\r\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\r\n                        deps.push(tryResolveToken(\r\n                        // Current Token to resolve\r\n                        depRecord.token, \r\n                        // A record which describes how to resolve the token.\r\n                        // If undefined, this means we don't have such a record\r\n                        childRecord, \r\n                        // Other records we know about.\r\n                        records, \r\n                        // If we don't know how to resolve dependency and we should not check parent for it,\r\n                        // than pass in Null injector.\r\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, InjectFlags.Default));\r\n                    }\r\n                }\r\n                record.value = value = useNew ? new ((((fn))).bind.apply((((fn))), [void 0].concat(deps)))() : fn.apply(obj, deps);\r\n            }\r\n        }\r\n        else if (!(flags & InjectFlags.Self)) {\r\n            value = parent.get(token, notFoundValue, InjectFlags.Default);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * @param {?} provider\r\n     * @return {?}\r\n     */\r\n    function computeDeps(provider) {\r\n        /** @type {?} */\r\n        var deps = EMPTY;\r\n        /** @type {?} */\r\n        var providerDeps = (((provider))).deps;\r\n        if (providerDeps && providerDeps.length) {\r\n            deps = [];\r\n            for (var i = 0; i < providerDeps.length; i++) {\r\n                /** @type {?} */\r\n                var options = 6 /* Default */;\r\n                /** @type {?} */\r\n                var token = resolveForwardRef(providerDeps[i]);\r\n                if (token instanceof Array) {\r\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\r\n                        /** @type {?} */\r\n                        var annotation = annotations[j];\r\n                        if (annotation instanceof Optional || annotation == Optional) {\r\n                            options = options | 1 /* Optional */;\r\n                        }\r\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\r\n                            options = options & ~2 /* CheckSelf */;\r\n                        }\r\n                        else if (annotation instanceof Self || annotation == Self) {\r\n                            options = options & ~4 /* CheckParent */;\r\n                        }\r\n                        else if (annotation instanceof Inject) {\r\n                            token = (((annotation))).token;\r\n                        }\r\n                        else {\r\n                            token = resolveForwardRef(annotation);\r\n                        }\r\n                    }\r\n                }\r\n                deps.push({ token: token, options: options });\r\n            }\r\n        }\r\n        else if ((((provider))).useExisting) {\r\n            /** @type {?} */\r\n            var token = resolveForwardRef((((provider))).useExisting);\r\n            deps = [{ token: token, options: 6 /* Default */ }];\r\n        }\r\n        else if (!providerDeps && !(USE_VALUE in provider)) {\r\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\r\n            throw staticError('\\'deps\\' required', provider);\r\n        }\r\n        return deps;\r\n    }\r\n    /**\r\n     * @param {?} text\r\n     * @param {?} obj\r\n     * @param {?=} source\r\n     * @return {?}\r\n     */\r\n    function formatError(text, obj, source) {\r\n        if (source === void 0) { source = null; }\r\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\r\n        /** @type {?} */\r\n        var context = stringify(obj);\r\n        if (obj instanceof Array) {\r\n            context = obj.map(stringify).join(' -> ');\r\n        }\r\n        else if (typeof obj === 'object') {\r\n            /** @type {?} */\r\n            var parts = (([]));\r\n            for (var key in obj) {\r\n                if (obj.hasOwnProperty(key)) {\r\n                    /** @type {?} */\r\n                    var value = obj[key];\r\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\r\n                }\r\n            }\r\n            context = \"{\" + parts.join(', ') + \"}\";\r\n        }\r\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\r\n    }\r\n    /**\r\n     * @param {?} text\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function staticError(text, obj) {\r\n        return new Error(formatError(text, obj));\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * An internal token whose presence in an injector indicates that the injector should treat itself\r\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\r\n     * they are provided in the root scope.\r\n     * @type {?}\r\n     */\r\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * Represents a component created by a `ComponentFactory`.\r\n     * Provides access to the component instance and related objects,\r\n     * and provides the means of destroying the instance.\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     * @template C\r\n     */\r\n    var ComponentRef = /** @class */ (function () {\r\n        function ComponentRef() {\r\n        }\r\n        return ComponentRef;\r\n    }());\r\n    /**\r\n     * \\@publicApi\r\n     * @abstract\r\n     * @template C\r\n     */\r\n    var ComponentFactory = /** @class */ (function () {\r\n        function ComponentFactory() {\r\n        }\r\n        return ComponentFactory;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function noComponentFactoryError(component) {\r\n        /** @type {?} */\r\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\r\n        (((error)))[ERROR_COMPONENT] = component;\r\n        return error;\r\n    }\r\n    /** @type {?} */\r\n    var ERROR_COMPONENT = 'ngComponent';\r\n    var _NullComponentFactoryResolver = /** @class */ (function () {\r\n        function _NullComponentFactoryResolver() {\r\n        }\r\n        /**\r\n         * @template T\r\n         * @param {?} component\r\n         * @return {?}\r\n         */\r\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\r\n            throw noComponentFactoryError(component);\r\n        };\r\n        return _NullComponentFactoryResolver;\r\n    }());\r\n    /**\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var ComponentFactoryResolver = /** @class */ (function () {\r\n        function ComponentFactoryResolver() {\r\n        }\r\n        return ComponentFactoryResolver;\r\n    }());\r\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\r\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\r\n        /**\r\n         * @param {?} factories\r\n         * @param {?} _parent\r\n         * @param {?} _ngModule\r\n         */\r\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\r\n            this._parent = _parent;\r\n            this._ngModule = _ngModule;\r\n            this._factories = new Map();\r\n            for (var i = 0; i < factories.length; i++) {\r\n                /** @type {?} */\r\n                var factory = factories[i];\r\n                this._factories.set(factory.componentType, factory);\r\n            }\r\n        }\r\n        /**\r\n         * @template T\r\n         * @param {?} component\r\n         * @return {?}\r\n         */\r\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\r\n            /** @type {?} */\r\n            var factory = this._factories.get(component);\r\n            if (!factory && this._parent) {\r\n                factory = this._parent.resolveComponentFactory(component);\r\n            }\r\n            if (!factory) {\r\n                throw noComponentFactoryError(component);\r\n            }\r\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\r\n        };\r\n        return CodegenComponentFactoryResolver;\r\n    }());\r\n    /**\r\n     * @template C\r\n     */\r\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\r\n        __extends(ComponentFactoryBoundToModule, _super);\r\n        /**\r\n         * @param {?} factory\r\n         * @param {?} ngModule\r\n         */\r\n        function ComponentFactoryBoundToModule(factory, ngModule) {\r\n            var _this = _super.call(this) || this;\r\n            _this.factory = factory;\r\n            _this.ngModule = ngModule;\r\n            _this.selector = factory.selector;\r\n            _this.componentType = factory.componentType;\r\n            _this.ngContentSelectors = factory.ngContentSelectors;\r\n            _this.inputs = factory.inputs;\r\n            _this.outputs = factory.outputs;\r\n            return _this;\r\n        }\r\n        /**\r\n         * @param {?} injector\r\n         * @param {?=} projectableNodes\r\n         * @param {?=} rootSelectorOrNode\r\n         * @param {?=} ngModule\r\n         * @return {?}\r\n         */\r\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\r\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\r\n        };\r\n        return ComponentFactoryBoundToModule;\r\n    }(ComponentFactory));\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\r\n     *\r\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\r\n     * NgModule Instance.\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     * @template T\r\n     */\r\n    var NgModuleRef = /** @class */ (function () {\r\n        function NgModuleRef() {\r\n        }\r\n        return NgModuleRef;\r\n    }());\r\n    /**\r\n     * \\@publicApi\r\n     * @abstract\r\n     * @template T\r\n     */\r\n    var NgModuleFactory = /** @class */ (function () {\r\n        function NgModuleFactory() {\r\n        }\r\n        return NgModuleFactory;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @template T\r\n     */\r\n    var ViewRef = /** @class */ (function () {\r\n        /**\r\n         * @param {?} _lView\r\n         * @param {?} _context\r\n         * @param {?} _componentIndex\r\n         */\r\n        function ViewRef(_lView, _context, _componentIndex) {\r\n            this._context = _context;\r\n            this._componentIndex = _componentIndex;\r\n            this._appRef = null;\r\n            this._viewContainerRef = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._tViewNode = null;\r\n            this._lView = _lView;\r\n        }\r\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                if (this._lView[HOST] == null) {\r\n                    /** @type {?} */\r\n                    var tView = ((this._lView[HOST_NODE]));\r\n                    return collectNativeNodes(this._lView, tView, []);\r\n                }\r\n                return [];\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ViewRef.prototype, \"context\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                return (this._lView[FLAGS] & 64 /* Destroyed */) === 64 /* Destroyed */;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ViewRef.prototype.destroy = function () {\r\n            if (this._appRef) {\r\n                this._appRef.detachView(this);\r\n            }\r\n            else if (this._viewContainerRef) {\r\n                /** @type {?} */\r\n                var index = this._viewContainerRef.indexOf(this);\r\n                if (index > -1) {\r\n                    this._viewContainerRef.detach(index);\r\n                }\r\n                this._viewContainerRef = null;\r\n            }\r\n            destroyLView(this._lView);\r\n        };\r\n        /**\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\r\n        /**\r\n         * Marks a view and all of its ancestors dirty.\r\n         *\r\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\r\n         * multiple `markForCheck` calls to into one change detection run.\r\n         *\r\n         * This can be used to ensure an {\\@link ChangeDetectionStrategy#OnPush OnPush} component is\r\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\r\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\r\n         *\r\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\r\n         *\r\n         * \\@usageNotes\r\n         * ### Example\r\n         *\r\n         * ```typescript\r\n         * \\@Component({\r\n         *   selector: 'my-app',\r\n         *   template: `Number of ticks: {{numberOfTicks}}`\r\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\r\n         * })\r\n         * class AppComponent {\r\n         *   numberOfTicks = 0;\r\n         *\r\n         *   constructor(private ref: ChangeDetectorRef) {\r\n         *     setInterval(() => {\r\n         *       this.numberOfTicks++;\r\n         *       // the following is required, otherwise the view will not be updated\r\n         *       this.ref.markForCheck();\r\n         *     }, 1000);\r\n         *   }\r\n         * }\r\n         * ```\r\n         * @return {?}\r\n         */\r\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\r\n        /**\r\n         * Detaches the view from the change detection tree.\r\n         *\r\n         * Detached views will not be checked during change detection runs until they are\r\n         * re-attached, even if they are dirty. `detach` can be used in combination with\r\n         * {\\@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\r\n         * detection checks.\r\n         *\r\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\r\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\r\n         *\r\n         * \\@usageNotes\r\n         * ### Example\r\n         *\r\n         * The following example defines a component with a large list of readonly data.\r\n         * Imagine the data changes constantly, many times per second. For performance reasons,\r\n         * we want to check and update the list every five seconds. We can do that by detaching\r\n         * the component's change detector and doing a local check every five seconds.\r\n         *\r\n         * ```typescript\r\n         * class DataProvider {\r\n         *   // in a real application the returned data will be different every time\r\n         *   get data() {\r\n         *     return [1,2,3,4,5];\r\n         *   }\r\n         * }\r\n         *\r\n         * \\@Component({\r\n         *   selector: 'giant-list',\r\n         *   template: `\r\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\r\n         *   `,\r\n         * })\r\n         * class GiantList {\r\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\r\n         *     ref.detach();\r\n         *     setInterval(() => {\r\n         *       this.ref.detectChanges();\r\n         *     }, 5000);\r\n         *   }\r\n         * }\r\n         *  /\r\n         *   selector: 'app',\r\n         *   providers: [DataProvider],\r\n         *   template: `\r\n         *     <giant-list><giant-list>\r\n         *   `,\r\n         * })\r\n         * class App {\r\n         * }\r\n         * ```\r\n         * @return {?}\r\n         */\r\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~16 /* Attached */; };\r\n        /**\r\n         * Re-attaches a view to the change detection tree.\r\n         *\r\n         * This can be used to re-attach views that were previously detached from the tree\r\n         * using {\\@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\r\n         *\r\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\r\n         *\r\n         * \\@usageNotes\r\n         * ### Example\r\n         *\r\n         * The following example creates a component displaying `live` data. The component will detach\r\n         * its change detector from the main change detector tree when the component's live property\r\n         * is set to false.\r\n         *\r\n         * ```typescript\r\n         * class DataProvider {\r\n         *   data = 1;\r\n         *\r\n         *   constructor() {\r\n         *     setInterval(() => {\r\n         *       this.data = this.data * 2;\r\n         *     }, 500);\r\n         *   }\r\n         * }\r\n         *\r\n         * \\@Component({\r\n         *   selector: 'live-data',\r\n         *   inputs: ['live'],\r\n         *   template: 'Data: {{dataProvider.data}}'\r\n         * })\r\n         * class LiveData {\r\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\r\n         *\r\n         *   set live(value) {\r\n         *     if (value) {\r\n         *       this.ref.reattach();\r\n         *     } else {\r\n         *       this.ref.detach();\r\n         *     }\r\n         *   }\r\n         * }\r\n         *  /\r\n         *   selector: 'my-app',\r\n         *   providers: [DataProvider],\r\n         *   template: `\r\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\r\n         *     <live-data [live]=\"live\"><live-data>\r\n         *   `,\r\n         * })\r\n         * class AppComponent {\r\n         *   live = true;\r\n         * }\r\n         * ```\r\n         * @return {?}\r\n         */\r\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 16 /* Attached */; };\r\n        /**\r\n         * Checks the view and its children.\r\n         *\r\n         * This can also be used in combination with {\\@link ChangeDetectorRef#detach detach} to implement\r\n         * local change detection checks.\r\n         *\r\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\r\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\r\n         *\r\n         * \\@usageNotes\r\n         * ### Example\r\n         *\r\n         * The following example defines a component with a large list of readonly data.\r\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\r\n         * we want to check and update the list every five seconds.\r\n         *\r\n         * We can do that by detaching the component's change detector and doing a local change detection\r\n         * check every five seconds.\r\n         *\r\n         * See {\\@link ChangeDetectorRef#detach detach} for more information.\r\n         * @return {?}\r\n         */\r\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\r\n        /**\r\n         * Checks the change detector and its children, and throws if any changes are detected.\r\n         *\r\n         * This is used in development mode to verify that running change detection doesn't\r\n         * introduce other changes.\r\n         * @return {?}\r\n         */\r\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\r\n        /**\r\n         * @param {?} vcRef\r\n         * @return {?}\r\n         */\r\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\r\n            if (this._appRef) {\r\n                throw new Error('This view is already attached directly to the ApplicationRef!');\r\n            }\r\n            this._viewContainerRef = vcRef;\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\r\n        /**\r\n         * @param {?} appRef\r\n         * @return {?}\r\n         */\r\n        ViewRef.prototype.attachToAppRef = function (appRef) {\r\n            if (this._viewContainerRef) {\r\n                throw new Error('This view is already attached to a ViewContainer!');\r\n            }\r\n            this._appRef = appRef;\r\n        };\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        ViewRef.prototype._lookUpContext = function () {\r\n            return this._context = ((((this._lView[PARENT]))[this._componentIndex]));\r\n        };\r\n        return ViewRef;\r\n    }());\r\n    /**\r\n     * \\@internal\r\n     * @template T\r\n     */\r\n    var RootViewRef = /** @class */ (function (_super) {\r\n        __extends(RootViewRef, _super);\r\n        /**\r\n         * @param {?} _view\r\n         */\r\n        function RootViewRef(_view) {\r\n            var _this = _super.call(this, _view, null, -1) || this;\r\n            _this._view = _view;\r\n            return _this;\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\r\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return ((null)); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return RootViewRef;\r\n    }(ViewRef));\r\n    /**\r\n     * @param {?} lView\r\n     * @param {?} parentTNode\r\n     * @param {?} result\r\n     * @return {?}\r\n     */\r\n    function collectNativeNodes(lView, parentTNode, result) {\r\n        /** @type {?} */\r\n        var tNodeChild = parentTNode.child;\r\n        while (tNodeChild) {\r\n            result.push(getNativeByTNode(tNodeChild, lView));\r\n            if (tNodeChild.type === 4 /* ElementContainer */) {\r\n                collectNativeNodes(lView, tNodeChild, result);\r\n            }\r\n            tNodeChild = tNodeChild.next;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var R3ElementRef;\r\n    /**\r\n     * Creates an ElementRef given a node.\r\n     *\r\n     * @param {?} ElementRefToken The ElementRef type\r\n     * @param {?} tNode The node for which you'd like an ElementRef\r\n     * @param {?} view The view to which the node belongs\r\n     * @return {?} The ElementRef instance to use\r\n     */\r\n    function createElementRef(ElementRefToken, tNode, view) {\r\n        if (!R3ElementRef) {\r\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\r\n            R3ElementRef = /** @class */ (function (_super) {\r\n                __extends(ElementRef_, _super);\r\n                function ElementRef_() {\r\n                    return _super !== null && _super.apply(this, arguments) || this;\r\n                }\r\n                return ElementRef_;\r\n            }(ElementRefToken));\r\n        }\r\n        return new R3ElementRef(getNativeByTNode(tNode, view));\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * A wrapper around a native element inside of a View.\r\n     *\r\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\r\n     * element.\r\n     *\r\n     * \\@security Permitting direct access to the DOM can make your application more vulnerable to\r\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\r\n     * [Security Guide](http://g.co/ng/security).\r\n     *\r\n     * \\@publicApi\r\n     * @template T\r\n     */\r\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\r\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\r\n    // and could do better codegen in the future.\r\n    var ElementRef = /** @class */ (function () {\r\n        /**\r\n         * @param {?} nativeElement\r\n         */\r\n        function ElementRef(nativeElement) {\r\n            this.nativeElement = nativeElement;\r\n        }\r\n        return ElementRef;\r\n    }());\r\n    /**\r\n     * \\@internal\r\n     */\r\n    ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\r\n    /** @type {?} */\r\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\r\n    /** @type {?} */\r\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @deprecated Use the `Renderer2` instead.\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var Renderer = /** @class */ (function () {\r\n        function Renderer() {\r\n        }\r\n        return Renderer;\r\n    }());\r\n    /** @type {?} */\r\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\r\n    /**\r\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var RendererFactory2 = /** @class */ (function () {\r\n        function RendererFactory2() {\r\n        }\r\n        return RendererFactory2;\r\n    }());\r\n    /** @enum {number} */\r\n    var RendererStyleFlags2 = {\r\n        /**\r\n         * Marks a style as important.\r\n         */\r\n        Important: 1,\r\n        /**\r\n         * Marks a style as using dash case naming (this-is-dash-case).\r\n         */\r\n        DashCase: 2,\r\n    };\r\n    RendererStyleFlags2[RendererStyleFlags2.Important] = 'Important';\r\n    RendererStyleFlags2[RendererStyleFlags2.DashCase] = 'DashCase';\r\n    /**\r\n     * Extend this base class to implement custom rendering. By default, Angular\r\n     * renders a template into DOM. You can use custom rendering to intercept\r\n     * rendering calls, or to render to something other than DOM.\r\n     *\r\n     * Create your custom renderer using `RendererFactory2`.\r\n     *\r\n     * Use a custom renderer to bypass Angular's templating and\r\n     * make custom UI changes that can't be expressed declaratively.\r\n     * For example if you need to set a property or an attribute whose name is\r\n     * not statically known, use the `setProperty()` or\r\n     * `setAttribute()` method.\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var Renderer2 = /** @class */ (function () {\r\n        function Renderer2() {\r\n        }\r\n        return Renderer2;\r\n    }());\r\n    /**\r\n     * \\@internal\r\n     */\r\n    Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\r\n    /** @type {?} */\r\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\r\n    /** @type {?} */\r\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /** @enum {number} */\r\n    var SecurityContext = {\r\n        NONE: 0,\r\n        HTML: 1,\r\n        STYLE: 2,\r\n        SCRIPT: 3,\r\n        URL: 4,\r\n        RESOURCE_URL: 5,\r\n    };\r\n    SecurityContext[SecurityContext.NONE] = 'NONE';\r\n    SecurityContext[SecurityContext.HTML] = 'HTML';\r\n    SecurityContext[SecurityContext.STYLE] = 'STYLE';\r\n    SecurityContext[SecurityContext.SCRIPT] = 'SCRIPT';\r\n    SecurityContext[SecurityContext.URL] = 'URL';\r\n    SecurityContext[SecurityContext.RESOURCE_URL] = 'RESOURCE_URL';\r\n    /**\r\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var Sanitizer = /** @class */ (function () {\r\n        function Sanitizer() {\r\n        }\r\n        return Sanitizer;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * \\@description Represents the version of Angular\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var Version = /** @class */ (function () {\r\n        /**\r\n         * @param {?} full\r\n         */\r\n        function Version(full) {\r\n            this.full = full;\r\n            this.major = full.split('.')[0];\r\n            this.minor = full.split('.')[1];\r\n            this.patch = full.split('.').slice(2).join('.');\r\n        }\r\n        return Version;\r\n    }());\r\n    /**\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var VERSION = new Version('0.0.0-PLACEHOLDER');\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\r\n        __extends(ComponentFactoryResolver$1, _super);\r\n        /**\r\n         * @param {?=} ngModule The NgModuleRef to which all resolved factories are bound.\r\n         */\r\n        function ComponentFactoryResolver$1(ngModule) {\r\n            var _this = _super.call(this) || this;\r\n            _this.ngModule = ngModule;\r\n            return _this;\r\n        }\r\n        /**\r\n         * @template T\r\n         * @param {?} component\r\n         * @return {?}\r\n         */\r\n        ComponentFactoryResolver$1.prototype.resolveComponentFactory = function (component) {\r\n            ngDevMode && assertComponentType(component);\r\n            /** @type {?} */\r\n            var componentDef = ((getComponentDef(component)));\r\n            return new ComponentFactory$1(componentDef, this.ngModule);\r\n        };\r\n        return ComponentFactoryResolver$1;\r\n    }(ComponentFactoryResolver));\r\n    /**\r\n     * @param {?} map\r\n     * @return {?}\r\n     */\r\n    function toRefArray(map) {\r\n        /** @type {?} */\r\n        var array = [];\r\n        for (var nonMinified in map) {\r\n            if (map.hasOwnProperty(nonMinified)) {\r\n                /** @type {?} */\r\n                var minified = map[nonMinified];\r\n                array.push({ propName: minified, templateName: nonMinified });\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n    /**\r\n     * Default {\\@link RootContext} for all components rendered with {\\@link renderComponent}.\r\n     * @type {?}\r\n     */\r\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\r\n    /**\r\n     * A change detection scheduler token for {\\@link RootContext}. This token is the default value used\r\n     * for the default `RootContext` found in the {\\@link ROOT_CONTEXT} token.\r\n     * @type {?}\r\n     */\r\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\r\n        providedIn: 'root',\r\n        factory: function () { return defaultScheduler; },\r\n    });\r\n    /** @type {?} */\r\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\r\n    /**\r\n     * @param {?} rootViewInjector\r\n     * @param {?} moduleInjector\r\n     * @return {?}\r\n     */\r\n    function createChainedInjector(rootViewInjector, moduleInjector) {\r\n        return {\r\n            get: function (token, notFoundValue) {\r\n                /** @type {?} */\r\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\r\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\r\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\r\n                    // Return the value from the root element injector when\r\n                    // - it provides it\r\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\r\n                    // - the module injector should not be checked\r\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\r\n                    return value;\r\n                }\r\n                return moduleInjector.get(token, notFoundValue);\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * Render3 implementation of {\\@link viewEngine_ComponentFactory}.\r\n     * @template T\r\n     */\r\n    var ComponentFactory$1 = /** @class */ (function (_super) {\r\n        __extends(ComponentFactory$1, _super);\r\n        /**\r\n         * @param {?} componentDef The component definition.\r\n         * @param {?=} ngModule The NgModuleRef to which the factory is bound.\r\n         */\r\n        function ComponentFactory$1(componentDef, ngModule) {\r\n            var _this = _super.call(this) || this;\r\n            _this.componentDef = componentDef;\r\n            _this.ngModule = ngModule;\r\n            _this.componentType = componentDef.type;\r\n            _this.selector = ((componentDef.selectors[0][0]));\r\n            _this.ngContentSelectors = [];\r\n            return _this;\r\n        }\r\n        Object.defineProperty(ComponentFactory$1.prototype, \"inputs\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                return toRefArray(this.componentDef.inputs);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ComponentFactory$1.prototype, \"outputs\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                return toRefArray(this.componentDef.outputs);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {?} injector\r\n         * @param {?=} projectableNodes\r\n         * @param {?=} rootSelectorOrNode\r\n         * @param {?=} ngModule\r\n         * @return {?}\r\n         */\r\n        ComponentFactory$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\r\n            /** @type {?} */\r\n            var isInternalRootView = rootSelectorOrNode === undefined;\r\n            ngModule = ngModule || this.ngModule;\r\n            /** @type {?} */\r\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\r\n            /** @type {?} */\r\n            var rendererFactory = ((rootViewInjector.get(RendererFactory2, domRendererFactory3)));\r\n            /** @type {?} */\r\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\r\n            /** @type {?} */\r\n            var hostRNode = isInternalRootView ?\r\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\r\n                locateHostElement(rendererFactory, rootSelectorOrNode);\r\n            /** @type {?} */\r\n            var rootFlags = this.componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\r\n                4 /* CheckAlways */ | 128 /* IsRoot */;\r\n            /** @type {?} */\r\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\r\n            /** @type {?} */\r\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\r\n            if (rootSelectorOrNode && hostRNode) {\r\n                ngDevMode && ngDevMode.rendererSetAttribute++;\r\n                isProceduralRenderer(renderer) ?\r\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\r\n                    hostRNode.setAttribute('ng-version', VERSION.full);\r\n            }\r\n            // Create the root view. Uses empty TView and ContentTemplate.\r\n            /** @type {?} */\r\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\r\n            // rootView is the parent when bootstrapping\r\n            /** @type {?} */\r\n            var oldLView = enterView(rootLView, null);\r\n            /** @type {?} */\r\n            var component;\r\n            /** @type {?} */\r\n            var tElementNode;\r\n            try {\r\n                if (rendererFactory.begin)\r\n                    rendererFactory.begin();\r\n                /** @type {?} */\r\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\r\n                tElementNode = ((getTNode(0, rootLView)));\r\n                // Transform the arrays of native nodes into a structure that can be consumed by the\r\n                // projection instruction. This is needed to support the reprojection of these nodes.\r\n                if (projectableNodes) {\r\n                    /** @type {?} */\r\n                    var index = 0;\r\n                    /** @type {?} */\r\n                    var tView = rootLView[TVIEW];\r\n                    /** @type {?} */\r\n                    var projection$$1 = tElementNode.projection = [];\r\n                    for (var i = 0; i < projectableNodes.length; i++) {\r\n                        /** @type {?} */\r\n                        var nodeList = projectableNodes[i];\r\n                        /** @type {?} */\r\n                        var firstTNode = null;\r\n                        /** @type {?} */\r\n                        var previousTNode = null;\r\n                        for (var j = 0; j < nodeList.length; j++) {\r\n                            if (tView.firstTemplatePass) {\r\n                                // For dynamically created components such as ComponentRef, we create a new TView for\r\n                                // each insert. This is not ideal since we should be sharing the TViews.\r\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\r\n                                // method.\r\n                                tView.expandoStartIndex++;\r\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\r\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\r\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\r\n                            }\r\n                            /** @type {?} */\r\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, ((nodeList[j])), null, null);\r\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\r\n                            previousTNode = tNode;\r\n                        }\r\n                        projection$$1.push(((firstTNode)));\r\n                    }\r\n                }\r\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\r\n                // executed here?\r\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\r\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\r\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\r\n                refreshDescendantViews(rootLView);\r\n            }\r\n            finally {\r\n                leaveView(oldLView);\r\n                if (rendererFactory.end)\r\n                    rendererFactory.end();\r\n            }\r\n            /** @type {?} */\r\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\r\n            if (isInternalRootView) {\r\n                // The host element of the internal root view is attached to the component's host view node\r\n                ((componentRef.hostView._tViewNode)).child = tElementNode;\r\n            }\r\n            return componentRef;\r\n        };\r\n        return ComponentFactory$1;\r\n    }(ComponentFactory));\r\n    /** @type {?} */\r\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\r\n    /**\r\n     * Represents an instance of a Component created via a {\\@link ComponentFactory}.\r\n     *\r\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\r\n     * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\r\n     * method.\r\n     *\r\n     * @template T\r\n     */\r\n    var ComponentRef$1 = /** @class */ (function (_super) {\r\n        __extends(ComponentRef$1, _super);\r\n        /**\r\n         * @param {?} componentType\r\n         * @param {?} instance\r\n         * @param {?} location\r\n         * @param {?} _rootLView\r\n         * @param {?} _tNode\r\n         */\r\n        function ComponentRef$1(componentType, instance, location, _rootLView, _tNode) {\r\n            var _this = _super.call(this) || this;\r\n            _this.location = location;\r\n            _this._rootLView = _rootLView;\r\n            _this._tNode = _tNode;\r\n            _this.destroyCbs = [];\r\n            _this.instance = instance;\r\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\r\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\r\n            _this.componentType = componentType;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(ComponentRef$1.prototype, \"injector\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ComponentRef$1.prototype.destroy = function () {\r\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\r\n            ((this.destroyCbs)).forEach(function (fn) { return fn(); });\r\n            this.destroyCbs = null;\r\n            this.hostView.destroy();\r\n        };\r\n        /**\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        ComponentRef$1.prototype.onDestroy = function (callback) {\r\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\r\n            ((this.destroyCbs)).push(callback);\r\n        };\r\n        return ComponentRef$1;\r\n    }(ComponentRef));\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\r\n     *\r\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\r\n     * please see [BAZEL.md](./docs/BAZEL.md).\r\n     */\r\n    /** @type {?} */\r\n    var _devMode = true;\r\n    /** @type {?} */\r\n    var _runModeLocked = false;\r\n    /**\r\n     * Returns whether Angular is in development mode. After called once,\r\n     * the value is locked and won't change any more.\r\n     *\r\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\r\n     *\r\n     * \\@publicApi\r\n     * @return {?}\r\n     */\r\n    function isDevMode() {\r\n        _runModeLocked = true;\r\n        return _devMode;\r\n    }\r\n    /**\r\n     * Disable Angular's development mode, which turns off assertions and other\r\n     * checks within the framework.\r\n     *\r\n     * One important assertion this disables verifies that a change detection pass\r\n     * does not result in additional changes to any bindings (also known as\r\n     * unidirectional data flow).\r\n     *\r\n     * \\@publicApi\r\n     * @return {?}\r\n     */\r\n    function enableProdMode() {\r\n        if (_runModeLocked) {\r\n            throw new Error('Cannot enable prod mode after platform setup.');\r\n        }\r\n        _devMode = false;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\r\n     * that needs sanitizing.\r\n     * Depending upon browser support we must use one of three strategies for doing this.\r\n     * Support: Safari 10.x -> XHR strategy\r\n     * Support: Firefox -> DomParser strategy\r\n     * Default: InertDocument strategy\r\n     */\r\n    var InertBodyHelper = /** @class */ (function () {\r\n        /**\r\n         * @param {?} defaultDoc\r\n         */\r\n        function InertBodyHelper(defaultDoc) {\r\n            this.defaultDoc = defaultDoc;\r\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\r\n            this.inertBodyElement = this.inertDocument.body;\r\n            if (this.inertBodyElement == null) {\r\n                // usually there should be only one body element in the document, but IE doesn't have any, so\r\n                // we need to create one.\r\n                /** @type {?} */\r\n                var inertHtml = this.inertDocument.createElement('html');\r\n                this.inertDocument.appendChild(inertHtml);\r\n                this.inertBodyElement = this.inertDocument.createElement('body');\r\n                inertHtml.appendChild(this.inertBodyElement);\r\n            }\r\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\r\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\r\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\r\n                // so use the XHR strategy.\r\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\r\n                return;\r\n            }\r\n            this.inertBodyElement.innerHTML =\r\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\r\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\r\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\r\n                // so use the DOMParser strategy, if it is available.\r\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\r\n                // fall through to the default strategy below.\r\n                if (isDOMParserAvailable()) {\r\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\r\n                    return;\r\n                }\r\n            }\r\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\r\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\r\n        }\r\n        /**\r\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\r\n         * See\r\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\r\n         * @private\r\n         * @param {?} html\r\n         * @return {?}\r\n         */\r\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\r\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\r\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\r\n            // `<head>` tag.\r\n            html = '<body><remove></remove>' + html + '</body>';\r\n            try {\r\n                html = encodeURI(html);\r\n            }\r\n            catch (_a) {\r\n                return null;\r\n            }\r\n            /** @type {?} */\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.responseType = 'document';\r\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\r\n            xhr.send(undefined);\r\n            /** @type {?} */\r\n            var body = xhr.response.body;\r\n            body.removeChild(((body.firstChild)));\r\n            return body;\r\n        };\r\n        /**\r\n         * Use DOMParser to create and fill an inert body element (on Firefox)\r\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\r\n         *\r\n         * @private\r\n         * @param {?} html\r\n         * @return {?}\r\n         */\r\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\r\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\r\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\r\n            // `<head>` tag.\r\n            html = '<body><remove></remove>' + html + '</body>';\r\n            try {\r\n                /** @type {?} */\r\n                var body = ((new (((window)))\r\n                    .DOMParser()\r\n                    .parseFromString(html, 'text/html')\r\n                    .body));\r\n                body.removeChild(((body.firstChild)));\r\n                return body;\r\n            }\r\n            catch (_a) {\r\n                return null;\r\n            }\r\n        };\r\n        /**\r\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\r\n         * `createHtmlDocument` to create and fill an inert DOM element.\r\n         * This is the default sane strategy to use if the browser does not require one of the specialised\r\n         * strategies above.\r\n         * @private\r\n         * @param {?} html\r\n         * @return {?}\r\n         */\r\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\r\n            // Prefer using <template> element if supported.\r\n            /** @type {?} */\r\n            var templateEl = this.inertDocument.createElement('template');\r\n            if ('content' in templateEl) {\r\n                templateEl.innerHTML = html;\r\n                return templateEl;\r\n            }\r\n            this.inertBodyElement.innerHTML = html;\r\n            // Support: IE 9-11 only\r\n            // strip custom-namespaced attributes on IE<=11\r\n            if ((((this.defaultDoc))).documentMode) {\r\n                this.stripCustomNsAttrs(this.inertBodyElement);\r\n            }\r\n            return this.inertBodyElement;\r\n        };\r\n        /**\r\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\r\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\r\n         * 'ns1:xlink:foo').\r\n         *\r\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\r\n         * strips them all.\r\n         * @private\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\r\n            /** @type {?} */\r\n            var elAttrs = el.attributes;\r\n            // loop backwards so that we can support removals.\r\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\r\n                /** @type {?} */\r\n                var attrib = elAttrs.item(i);\r\n                /** @type {?} */\r\n                var attrName = ((attrib)).name;\r\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\r\n                    el.removeAttribute(attrName);\r\n                }\r\n            }\r\n            /** @type {?} */\r\n            var childNode = ((el.firstChild));\r\n            while (childNode) {\r\n                if (childNode.nodeType === Node.ELEMENT_NODE)\r\n                    this.stripCustomNsAttrs(((childNode)));\r\n                childNode = childNode.nextSibling;\r\n            }\r\n        };\r\n        return InertBodyHelper;\r\n    }());\r\n    /**\r\n     * We need to determine whether the DOMParser exists in the global context.\r\n     * The try-catch is because, on some browsers, trying to access this property\r\n     * on window can actually throw an error.\r\n     *\r\n     * @suppress {uselessCode}\r\n     * @return {?}\r\n     */\r\n    function isDOMParserAvailable() {\r\n        try {\r\n            return !!(((window))).DOMParser;\r\n        }\r\n        catch (_a) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\r\n     *\r\n     * This regular expression matches a subset of URLs that will not cause script\r\n     * execution if used in URL context within a HTML document. Specifically, this\r\n     * regular expression matches if (comment from here on and regex copied from\r\n     * Soy's EscapingConventions):\r\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\r\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\r\n     *     allows that by allowing colons only after one of the characters [/?#].\r\n     *     A colon after a hash (#) must be in the fragment.\r\n     *     Otherwise, a colon after a (?) must be in a query.\r\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\r\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\r\n     *     (before port).\r\n     *\r\n     * The pattern disallows &, used in HTML entity declarations before\r\n     * one of the characters in [/?#]. This disallows HTML entities used in the\r\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\r\n     * It also disallows HTML entities in the first path part of a relative path,\r\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\r\n     * that. More importantly, it disallows masking of a colon,\r\n     * e.g. \"javascript&#58;...\".\r\n     *\r\n     * This regular expression was taken from the Closure sanitization library.\r\n     * @type {?}\r\n     */\r\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\r\n    /**\r\n     * A pattern that matches safe data URLs. Only matches image, video and audio types.\r\n     * @type {?}\r\n     */\r\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\r\n    /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    function _sanitizeUrl(url) {\r\n        url = String(url);\r\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\r\n            return url;\r\n        if (isDevMode()) {\r\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\r\n        }\r\n        return 'unsafe:' + url;\r\n    }\r\n    /**\r\n     * @param {?} srcset\r\n     * @return {?}\r\n     */\r\n    function sanitizeSrcset(srcset) {\r\n        srcset = String(srcset);\r\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} tags\r\n     * @return {?}\r\n     */\r\n    function tagSet(tags) {\r\n        /** @type {?} */\r\n        var res = {};\r\n        for (var _i = 0, _b = tags.split(','); _i < _b.length; _i++) {\r\n            var t = _b[_i];\r\n            res[t] = true;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * @param {...?} sets\r\n     * @return {?}\r\n     */\r\n    function merge() {\r\n        var sets = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            sets[_i] = arguments[_i];\r\n        }\r\n        /** @type {?} */\r\n        var res = {};\r\n        for (var _b = 0, sets_1 = sets; _b < sets_1.length; _b++) {\r\n            var s = sets_1[_b];\r\n            for (var v in s) {\r\n                if (s.hasOwnProperty(v))\r\n                    res[v] = true;\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    // Good source of info about elements and attributes\r\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\r\n    // http://simon.html5.org/html-elements\r\n    // Safe Void Elements - HTML5\r\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\r\n    /** @type {?} */\r\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\r\n    // Elements that you can, intentionally, leave open (and which close themselves)\r\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\r\n    /** @type {?} */\r\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\r\n    /** @type {?} */\r\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\r\n    /** @type {?} */\r\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\r\n    // Safe Block Elements - HTML5\r\n    /** @type {?} */\r\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\r\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\r\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\r\n    // Inline Elements - HTML5\r\n    /** @type {?} */\r\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\r\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\r\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\r\n    /** @type {?} */\r\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\r\n    // Attributes that have href and hence need to be sanitized\r\n    /** @type {?} */\r\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\r\n    // Attributes that have special href set hence need to be sanitized\r\n    /** @type {?} */\r\n    var SRCSET_ATTRS = tagSet('srcset');\r\n    /** @type {?} */\r\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\r\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\r\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\r\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\r\n        'valign,value,vspace,width');\r\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\r\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\r\n    // innerHTML is required, SVG attributes should be added here.\r\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\r\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\r\n    // are left out here.\r\n    /** @type {?} */\r\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\r\n    /**\r\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\r\n     * attributes.\r\n     */\r\n    var SanitizingHtmlSerializer = /** @class */ (function () {\r\n        function SanitizingHtmlSerializer() {\r\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\r\n            // because characters were re-encoded.\r\n            this.sanitizedSomething = false;\r\n            this.buf = [];\r\n        }\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\r\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\r\n            // However this code never accesses properties off of `document` before deleting its contents\r\n            // again, so it shouldn't be vulnerable to DOM clobbering.\r\n            /** @type {?} */\r\n            var current = ((el.firstChild));\r\n            /** @type {?} */\r\n            var elementValid = true;\r\n            while (current) {\r\n                if (current.nodeType === Node.ELEMENT_NODE) {\r\n                    elementValid = this.startElement(((current)));\r\n                }\r\n                else if (current.nodeType === Node.TEXT_NODE) {\r\n                    this.chars(((current.nodeValue)));\r\n                }\r\n                else {\r\n                    // Strip non-element, non-text nodes.\r\n                    this.sanitizedSomething = true;\r\n                }\r\n                if (elementValid && current.firstChild) {\r\n                    current = ((current.firstChild));\r\n                    continue;\r\n                }\r\n                while (current) {\r\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\r\n                    if (current.nodeType === Node.ELEMENT_NODE) {\r\n                        this.endElement(((current)));\r\n                    }\r\n                    /** @type {?} */\r\n                    var next = this.checkClobberedElement(current, ((current.nextSibling)));\r\n                    if (next) {\r\n                        current = next;\r\n                        break;\r\n                    }\r\n                    current = this.checkClobberedElement(current, ((current.parentNode)));\r\n                }\r\n            }\r\n            return this.buf.join('');\r\n        };\r\n        /**\r\n         * Outputs only valid Elements.\r\n         *\r\n         * Invalid elements are skipped.\r\n         *\r\n         * @private\r\n         * @param {?} element element to sanitize\r\n         * Returns true if the element is valid.\r\n         * @return {?}\r\n         */\r\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\r\n            /** @type {?} */\r\n            var tagName = element.nodeName.toLowerCase();\r\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\r\n                this.sanitizedSomething = true;\r\n                return false;\r\n            }\r\n            this.buf.push('<');\r\n            this.buf.push(tagName);\r\n            /** @type {?} */\r\n            var elAttrs = element.attributes;\r\n            for (var i = 0; i < elAttrs.length; i++) {\r\n                /** @type {?} */\r\n                var elAttr = elAttrs.item(i);\r\n                /** @type {?} */\r\n                var attrName = ((elAttr)).name;\r\n                /** @type {?} */\r\n                var lower = attrName.toLowerCase();\r\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\r\n                    this.sanitizedSomething = true;\r\n                    continue;\r\n                }\r\n                /** @type {?} */\r\n                var value = ((elAttr)).value;\r\n                // TODO(martinprobst): Special case image URIs for data:image/...\r\n                if (URI_ATTRS[lower])\r\n                    value = _sanitizeUrl(value);\r\n                if (SRCSET_ATTRS[lower])\r\n                    value = sanitizeSrcset(value);\r\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\r\n            }\r\n            this.buf.push('>');\r\n            return true;\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} current\r\n         * @return {?}\r\n         */\r\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\r\n            /** @type {?} */\r\n            var tagName = current.nodeName.toLowerCase();\r\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\r\n                this.buf.push('</');\r\n                this.buf.push(tagName);\r\n                this.buf.push('>');\r\n            }\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} chars\r\n         * @return {?}\r\n         */\r\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\r\n        /**\r\n         * @param {?} node\r\n         * @param {?} nextNode\r\n         * @return {?}\r\n         */\r\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\r\n            if (nextNode &&\r\n                (node.compareDocumentPosition(nextNode) &\r\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\r\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + (((node))).outerHTML);\r\n            }\r\n            return nextNode;\r\n        };\r\n        return SanitizingHtmlSerializer;\r\n    }());\r\n    // Regular Expressions for parsing tags and attributes\r\n    /** @type {?} */\r\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\r\n    // ! to ~ is the ASCII range.\r\n    /** @type {?} */\r\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\r\n    /**\r\n     * Escapes all potentially dangerous characters, so that the\r\n     * resulting string can be safely inserted into attribute or\r\n     * element text.\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function encodeEntities(value) {\r\n        return value.replace(/&/g, '&amp;')\r\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\r\n            /** @type {?} */\r\n            var hi = match.charCodeAt(0);\r\n            /** @type {?} */\r\n            var low = match.charCodeAt(1);\r\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\r\n        })\r\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\r\n            .replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;');\r\n    }\r\n    /** @type {?} */\r\n    var inertBodyHelper;\r\n    /**\r\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\r\n     * the DOM in a browser environment.\r\n     * @param {?} defaultDoc\r\n     * @param {?} unsafeHtmlInput\r\n     * @return {?}\r\n     */\r\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\r\n        /** @type {?} */\r\n        var inertBodyElement = null;\r\n        try {\r\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\r\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\r\n            /** @type {?} */\r\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\r\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\r\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\r\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\r\n            /** @type {?} */\r\n            var mXSSAttempts = 5;\r\n            /** @type {?} */\r\n            var parsedHtml = unsafeHtml;\r\n            do {\r\n                if (mXSSAttempts === 0) {\r\n                    throw new Error('Failed to sanitize html because the input is unstable');\r\n                }\r\n                mXSSAttempts--;\r\n                unsafeHtml = parsedHtml;\r\n                parsedHtml = ((inertBodyElement)).innerHTML;\r\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\r\n            } while (unsafeHtml !== parsedHtml);\r\n            /** @type {?} */\r\n            var sanitizer = new SanitizingHtmlSerializer();\r\n            /** @type {?} */\r\n            var safeHtml = sanitizer.sanitizeChildren(((getTemplateContent(((inertBodyElement))))) || inertBodyElement);\r\n            if (isDevMode() && sanitizer.sanitizedSomething) {\r\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\r\n            }\r\n            return safeHtml;\r\n        }\r\n        finally {\r\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\r\n            if (inertBodyElement) {\r\n                /** @type {?} */\r\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\r\n                while (parent_1.firstChild) {\r\n                    parent_1.removeChild(parent_1.firstChild);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} el\r\n     * @return {?}\r\n     */\r\n    function getTemplateContent(el) {\r\n        return 'content' in (((el))) && isTemplateElement(el) ?\r\n            el.content :\r\n            null;\r\n    }\r\n    /**\r\n     * @param {?} el\r\n     * @return {?}\r\n     */\r\n    function isTemplateElement(el) {\r\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    function isFunction(x) {\r\n        return typeof x === 'function';\r\n    }\r\n    var _enable_super_gross_mode_that_will_cause_bad_things = false;\r\n    var config = {\r\n        Promise: undefined,\r\n        set useDeprecatedSynchronousErrorHandling(value) {\r\n            if (value) {\r\n                var error = new Error();\r\n                console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\r\n            }\r\n            else if (_enable_super_gross_mode_that_will_cause_bad_things) {\r\n                console.log('RxJS: Back to a better error behavior. Thank you. <3');\r\n            }\r\n            _enable_super_gross_mode_that_will_cause_bad_things = value;\r\n        },\r\n        get useDeprecatedSynchronousErrorHandling() {\r\n            return _enable_super_gross_mode_that_will_cause_bad_things;\r\n        },\r\n    };\r\n    function hostReportError(err) {\r\n        setTimeout(function () { throw err; });\r\n    }\r\n    var empty = {\r\n        closed: true,\r\n        next: function (value) { },\r\n        error: function (err) {\r\n            if (config.useDeprecatedSynchronousErrorHandling) {\r\n                throw err;\r\n            }\r\n            else {\r\n                hostReportError(err);\r\n            }\r\n        },\r\n        complete: function () { }\r\n    };\r\n    var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\r\n    function isObject(x) {\r\n        return x != null && typeof x === 'object';\r\n    }\r\n    var errorObject = { e: {} };\r\n    var tryCatchTarget;\r\n    function tryCatcher() {\r\n        try {\r\n            return tryCatchTarget.apply(this, arguments);\r\n        }\r\n        catch (e) {\r\n            errorObject.e = e;\r\n            return errorObject;\r\n        }\r\n    }\r\n    function tryCatch(fn) {\r\n        tryCatchTarget = fn;\r\n        return tryCatcher;\r\n    }\r\n    function UnsubscriptionErrorImpl(errors) {\r\n        Error.call(this);\r\n        this.message = errors ?\r\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\r\n        this.name = 'UnsubscriptionError';\r\n        this.errors = errors;\r\n        return this;\r\n    }\r\n    UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\r\n    var UnsubscriptionError = UnsubscriptionErrorImpl;\r\n    var Subscription = /** @class */ (function () {\r\n        function Subscription(unsubscribe) {\r\n            this.closed = false;\r\n            this._parent = null;\r\n            this._parents = null;\r\n            this._subscriptions = null;\r\n            if (unsubscribe) {\r\n                this._unsubscribe = unsubscribe;\r\n            }\r\n        }\r\n        Subscription.prototype.unsubscribe = function () {\r\n            var hasErrors = false;\r\n            var errors;\r\n            if (this.closed) {\r\n                return;\r\n            }\r\n            var _b = this, _parent = _b._parent, _parents = _b._parents, _unsubscribe = _b._unsubscribe, _subscriptions = _b._subscriptions;\r\n            this.closed = true;\r\n            this._parent = null;\r\n            this._parents = null;\r\n            this._subscriptions = null;\r\n            var index = -1;\r\n            var len = _parents ? _parents.length : 0;\r\n            while (_parent) {\r\n                _parent.remove(this);\r\n                _parent = ++index < len && _parents[index] || null;\r\n            }\r\n            if (isFunction(_unsubscribe)) {\r\n                var trial = tryCatch(_unsubscribe).call(this);\r\n                if (trial === errorObject) {\r\n                    hasErrors = true;\r\n                    errors = errors || (errorObject.e instanceof UnsubscriptionError ?\r\n                        flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\r\n                }\r\n            }\r\n            if (isArray(_subscriptions)) {\r\n                index = -1;\r\n                len = _subscriptions.length;\r\n                while (++index < len) {\r\n                    var sub = _subscriptions[index];\r\n                    if (isObject(sub)) {\r\n                        var trial = tryCatch(sub.unsubscribe).call(sub);\r\n                        if (trial === errorObject) {\r\n                            hasErrors = true;\r\n                            errors = errors || [];\r\n                            var err = errorObject.e;\r\n                            if (err instanceof UnsubscriptionError) {\r\n                                errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\r\n                            }\r\n                            else {\r\n                                errors.push(err);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (hasErrors) {\r\n                throw new UnsubscriptionError(errors);\r\n            }\r\n        };\r\n        Subscription.prototype.add = function (teardown) {\r\n            if (!teardown || (teardown === Subscription.EMPTY)) {\r\n                return Subscription.EMPTY;\r\n            }\r\n            if (teardown === this) {\r\n                return this;\r\n            }\r\n            var subscription = teardown;\r\n            switch (typeof teardown) {\r\n                case 'function':\r\n                    subscription = new Subscription(teardown);\r\n                case 'object':\r\n                    if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\r\n                        return subscription;\r\n                    }\r\n                    else if (this.closed) {\r\n                        subscription.unsubscribe();\r\n                        return subscription;\r\n                    }\r\n                    else if (typeof subscription._addParent !== 'function') {\r\n                        var tmp = subscription;\r\n                        subscription = new Subscription();\r\n                        subscription._subscriptions = [tmp];\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\r\n            }\r\n            var subscriptions = this._subscriptions || (this._subscriptions = []);\r\n            subscriptions.push(subscription);\r\n            subscription._addParent(this);\r\n            return subscription;\r\n        };\r\n        Subscription.prototype.remove = function (subscription) {\r\n            var subscriptions = this._subscriptions;\r\n            if (subscriptions) {\r\n                var subscriptionIndex = subscriptions.indexOf(subscription);\r\n                if (subscriptionIndex !== -1) {\r\n                    subscriptions.splice(subscriptionIndex, 1);\r\n                }\r\n            }\r\n        };\r\n        Subscription.prototype._addParent = function (parent) {\r\n            var _b = this, _parent = _b._parent, _parents = _b._parents;\r\n            if (!_parent || _parent === parent) {\r\n                this._parent = parent;\r\n            }\r\n            else if (!_parents) {\r\n                this._parents = [parent];\r\n            }\r\n            else if (_parents.indexOf(parent) === -1) {\r\n                _parents.push(parent);\r\n            }\r\n        };\r\n        return Subscription;\r\n    }());\r\n    Subscription.EMPTY = (function (empty) {\r\n        empty.closed = true;\r\n        return empty;\r\n    }(new Subscription()));\r\n    function flattenUnsubscriptionErrors(errors) {\r\n        return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\r\n    }\r\n    var rxSubscriber = typeof Symbol === 'function'\r\n        ? Symbol('rxSubscriber')\r\n        : '@@rxSubscriber_' + Math.random();\r\n    var Subscriber = /** @class */ (function (_super) {\r\n        __extends(Subscriber, _super);\r\n        function Subscriber(destinationOrNext, error, complete) {\r\n            var _this = _super.call(this) || this;\r\n            _this.syncErrorValue = null;\r\n            _this.syncErrorThrown = false;\r\n            _this.syncErrorThrowable = false;\r\n            _this.isStopped = false;\r\n            _this._parentSubscription = null;\r\n            switch (arguments.length) {\r\n                case 0:\r\n                    _this.destination = empty;\r\n                    break;\r\n                case 1:\r\n                    if (!destinationOrNext) {\r\n                        _this.destination = empty;\r\n                        break;\r\n                    }\r\n                    if (typeof destinationOrNext === 'object') {\r\n                        if (destinationOrNext instanceof Subscriber) {\r\n                            _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\r\n                            _this.destination = destinationOrNext;\r\n                            destinationOrNext.add(_this);\r\n                        }\r\n                        else {\r\n                            _this.syncErrorThrowable = true;\r\n                            _this.destination = new SafeSubscriber(_this, destinationOrNext);\r\n                        }\r\n                        break;\r\n                    }\r\n                default:\r\n                    _this.syncErrorThrowable = true;\r\n                    _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\r\n                    break;\r\n            }\r\n            return _this;\r\n        }\r\n        Subscriber.prototype[rxSubscriber] = function () { return this; };\r\n        Subscriber.create = function (next, error, complete) {\r\n            var subscriber = new Subscriber(next, error, complete);\r\n            subscriber.syncErrorThrowable = false;\r\n            return subscriber;\r\n        };\r\n        Subscriber.prototype.next = function (value) {\r\n            if (!this.isStopped) {\r\n                this._next(value);\r\n            }\r\n        };\r\n        Subscriber.prototype.error = function (err) {\r\n            if (!this.isStopped) {\r\n                this.isStopped = true;\r\n                this._error(err);\r\n            }\r\n        };\r\n        Subscriber.prototype.complete = function () {\r\n            if (!this.isStopped) {\r\n                this.isStopped = true;\r\n                this._complete();\r\n            }\r\n        };\r\n        Subscriber.prototype.unsubscribe = function () {\r\n            if (this.closed) {\r\n                return;\r\n            }\r\n            this.isStopped = true;\r\n            _super.prototype.unsubscribe.call(this);\r\n        };\r\n        Subscriber.prototype._next = function (value) {\r\n            this.destination.next(value);\r\n        };\r\n        Subscriber.prototype._error = function (err) {\r\n            this.destination.error(err);\r\n            this.unsubscribe();\r\n        };\r\n        Subscriber.prototype._complete = function () {\r\n            this.destination.complete();\r\n            this.unsubscribe();\r\n        };\r\n        Subscriber.prototype._unsubscribeAndRecycle = function () {\r\n            var _b = this, _parent = _b._parent, _parents = _b._parents;\r\n            this._parent = null;\r\n            this._parents = null;\r\n            this.unsubscribe();\r\n            this.closed = false;\r\n            this.isStopped = false;\r\n            this._parent = _parent;\r\n            this._parents = _parents;\r\n            this._parentSubscription = null;\r\n            return this;\r\n        };\r\n        return Subscriber;\r\n    }(Subscription));\r\n    var SafeSubscriber = /** @class */ (function (_super) {\r\n        __extends(SafeSubscriber, _super);\r\n        function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\r\n            var _this = _super.call(this) || this;\r\n            _this._parentSubscriber = _parentSubscriber;\r\n            var next;\r\n            var context = _this;\r\n            if (isFunction(observerOrNext)) {\r\n                next = observerOrNext;\r\n            }\r\n            else if (observerOrNext) {\r\n                next = observerOrNext.next;\r\n                error = observerOrNext.error;\r\n                complete = observerOrNext.complete;\r\n                if (observerOrNext !== empty) {\r\n                    context = Object.create(observerOrNext);\r\n                    if (isFunction(context.unsubscribe)) {\r\n                        _this.add(context.unsubscribe.bind(context));\r\n                    }\r\n                    context.unsubscribe = _this.unsubscribe.bind(_this);\r\n                }\r\n            }\r\n            _this._context = context;\r\n            _this._next = next;\r\n            _this._error = error;\r\n            _this._complete = complete;\r\n            return _this;\r\n        }\r\n        SafeSubscriber.prototype.next = function (value) {\r\n            if (!this.isStopped && this._next) {\r\n                var _parentSubscriber = this._parentSubscriber;\r\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\r\n                    this.__tryOrUnsub(this._next, value);\r\n                }\r\n                else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\r\n                    this.unsubscribe();\r\n                }\r\n            }\r\n        };\r\n        SafeSubscriber.prototype.error = function (err) {\r\n            if (!this.isStopped) {\r\n                var _parentSubscriber = this._parentSubscriber;\r\n                var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\r\n                if (this._error) {\r\n                    if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\r\n                        this.__tryOrUnsub(this._error, err);\r\n                        this.unsubscribe();\r\n                    }\r\n                    else {\r\n                        this.__tryOrSetError(_parentSubscriber, this._error, err);\r\n                        this.unsubscribe();\r\n                    }\r\n                }\r\n                else if (!_parentSubscriber.syncErrorThrowable) {\r\n                    this.unsubscribe();\r\n                    if (useDeprecatedSynchronousErrorHandling) {\r\n                        throw err;\r\n                    }\r\n                    hostReportError(err);\r\n                }\r\n                else {\r\n                    if (useDeprecatedSynchronousErrorHandling) {\r\n                        _parentSubscriber.syncErrorValue = err;\r\n                        _parentSubscriber.syncErrorThrown = true;\r\n                    }\r\n                    else {\r\n                        hostReportError(err);\r\n                    }\r\n                    this.unsubscribe();\r\n                }\r\n            }\r\n        };\r\n        SafeSubscriber.prototype.complete = function () {\r\n            var _this = this;\r\n            if (!this.isStopped) {\r\n                var _parentSubscriber = this._parentSubscriber;\r\n                if (this._complete) {\r\n                    var wrappedComplete = function () { return _this._complete.call(_this._context); };\r\n                    if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\r\n                        this.__tryOrUnsub(wrappedComplete);\r\n                        this.unsubscribe();\r\n                    }\r\n                    else {\r\n                        this.__tryOrSetError(_parentSubscriber, wrappedComplete);\r\n                        this.unsubscribe();\r\n                    }\r\n                }\r\n                else {\r\n                    this.unsubscribe();\r\n                }\r\n            }\r\n        };\r\n        SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\r\n            try {\r\n                fn.call(this._context, value);\r\n            }\r\n            catch (err) {\r\n                this.unsubscribe();\r\n                if (config.useDeprecatedSynchronousErrorHandling) {\r\n                    throw err;\r\n                }\r\n                else {\r\n                    hostReportError(err);\r\n                }\r\n            }\r\n        };\r\n        SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\r\n            if (!config.useDeprecatedSynchronousErrorHandling) {\r\n                throw new Error('bad call');\r\n            }\r\n            try {\r\n                fn.call(this._context, value);\r\n            }\r\n            catch (err) {\r\n                if (config.useDeprecatedSynchronousErrorHandling) {\r\n                    parent.syncErrorValue = err;\r\n                    parent.syncErrorThrown = true;\r\n                    return true;\r\n                }\r\n                else {\r\n                    hostReportError(err);\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        SafeSubscriber.prototype._unsubscribe = function () {\r\n            var _parentSubscriber = this._parentSubscriber;\r\n            this._context = null;\r\n            this._parentSubscriber = null;\r\n            _parentSubscriber.unsubscribe();\r\n        };\r\n        return SafeSubscriber;\r\n    }(Subscriber));\r\n    function canReportError(observer) {\r\n        while (observer) {\r\n            var closed_1 = observer.closed, destination = observer.destination, isStopped = observer.isStopped;\r\n            if (closed_1 || isStopped) {\r\n                return false;\r\n            }\r\n            else if (destination && destination instanceof Subscriber) {\r\n                observer = destination;\r\n            }\r\n            else {\r\n                observer = null;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    function toSubscriber(nextOrObserver, error, complete) {\r\n        if (nextOrObserver) {\r\n            if (nextOrObserver instanceof Subscriber) {\r\n                return nextOrObserver;\r\n            }\r\n            if (nextOrObserver[rxSubscriber]) {\r\n                return nextOrObserver[rxSubscriber]();\r\n            }\r\n        }\r\n        if (!nextOrObserver && !error && !complete) {\r\n            return new Subscriber(empty);\r\n        }\r\n        return new Subscriber(nextOrObserver, error, complete);\r\n    }\r\n    var observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\r\n    function noop$1() { }\r\n    function pipeFromArray(fns) {\r\n        if (!fns) {\r\n            return noop$1;\r\n        }\r\n        if (fns.length === 1) {\r\n            return fns[0];\r\n        }\r\n        return function piped(input) {\r\n            return fns.reduce(function (prev, fn) { return fn(prev); }, input);\r\n        };\r\n    }\r\n    var Observable = /** @class */ (function () {\r\n        function Observable(subscribe) {\r\n            this._isScalar = false;\r\n            if (subscribe) {\r\n                this._subscribe = subscribe;\r\n            }\r\n        }\r\n        Observable.prototype.lift = function (operator) {\r\n            var observable$$1 = new Observable();\r\n            observable$$1.source = this;\r\n            observable$$1.operator = operator;\r\n            return observable$$1;\r\n        };\r\n        Observable.prototype.subscribe = function (observerOrNext, error, complete) {\r\n            var operator = this.operator;\r\n            var sink = toSubscriber(observerOrNext, error, complete);\r\n            if (operator) {\r\n                operator.call(sink, this.source);\r\n            }\r\n            else {\r\n                sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\r\n                    this._subscribe(sink) :\r\n                    this._trySubscribe(sink));\r\n            }\r\n            if (config.useDeprecatedSynchronousErrorHandling) {\r\n                if (sink.syncErrorThrowable) {\r\n                    sink.syncErrorThrowable = false;\r\n                    if (sink.syncErrorThrown) {\r\n                        throw sink.syncErrorValue;\r\n                    }\r\n                }\r\n            }\r\n            return sink;\r\n        };\r\n        Observable.prototype._trySubscribe = function (sink) {\r\n            try {\r\n                return this._subscribe(sink);\r\n            }\r\n            catch (err) {\r\n                if (config.useDeprecatedSynchronousErrorHandling) {\r\n                    sink.syncErrorThrown = true;\r\n                    sink.syncErrorValue = err;\r\n                }\r\n                if (canReportError(sink)) {\r\n                    sink.error(err);\r\n                }\r\n                else {\r\n                    console.warn(err);\r\n                }\r\n            }\r\n        };\r\n        Observable.prototype.forEach = function (next, promiseCtor) {\r\n            var _this = this;\r\n            promiseCtor = getPromiseCtor(promiseCtor);\r\n            return new promiseCtor(function (resolve, reject) {\r\n                var subscription;\r\n                subscription = _this.subscribe(function (value) {\r\n                    try {\r\n                        next(value);\r\n                    }\r\n                    catch (err) {\r\n                        reject(err);\r\n                        if (subscription) {\r\n                            subscription.unsubscribe();\r\n                        }\r\n                    }\r\n                }, reject, resolve);\r\n            });\r\n        };\r\n        Observable.prototype._subscribe = function (subscriber) {\r\n            var source = this.source;\r\n            return source && source.subscribe(subscriber);\r\n        };\r\n        Observable.prototype[observable] = function () {\r\n            return this;\r\n        };\r\n        Observable.prototype.pipe = function () {\r\n            var operations = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                operations[_i] = arguments[_i];\r\n            }\r\n            if (operations.length === 0) {\r\n                return this;\r\n            }\r\n            return pipeFromArray(operations)(this);\r\n        };\r\n        Observable.prototype.toPromise = function (promiseCtor) {\r\n            var _this = this;\r\n            promiseCtor = getPromiseCtor(promiseCtor);\r\n            return new promiseCtor(function (resolve, reject) {\r\n                var value;\r\n                _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\r\n            });\r\n        };\r\n        return Observable;\r\n    }());\r\n    Observable.create = function (subscribe) {\r\n        return new Observable(subscribe);\r\n    };\r\n    function getPromiseCtor(promiseCtor) {\r\n        if (!promiseCtor) {\r\n            promiseCtor = Promise;\r\n        }\r\n        if (!promiseCtor) {\r\n            throw new Error('no Promise impl found');\r\n        }\r\n        return promiseCtor;\r\n    }\r\n    function ObjectUnsubscribedErrorImpl() {\r\n        Error.call(this);\r\n        this.message = 'object unsubscribed';\r\n        this.name = 'ObjectUnsubscribedError';\r\n        return this;\r\n    }\r\n    ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\r\n    var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\r\n    var SubjectSubscription = /** @class */ (function (_super) {\r\n        __extends(SubjectSubscription, _super);\r\n        function SubjectSubscription(subject, subscriber) {\r\n            var _this = _super.call(this) || this;\r\n            _this.subject = subject;\r\n            _this.subscriber = subscriber;\r\n            _this.closed = false;\r\n            return _this;\r\n        }\r\n        SubjectSubscription.prototype.unsubscribe = function () {\r\n            if (this.closed) {\r\n                return;\r\n            }\r\n            this.closed = true;\r\n            var subject = this.subject;\r\n            var observers = subject.observers;\r\n            this.subject = null;\r\n            if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\r\n                return;\r\n            }\r\n            var subscriberIndex = observers.indexOf(this.subscriber);\r\n            if (subscriberIndex !== -1) {\r\n                observers.splice(subscriberIndex, 1);\r\n            }\r\n        };\r\n        return SubjectSubscription;\r\n    }(Subscription));\r\n    var SubjectSubscriber = /** @class */ (function (_super) {\r\n        __extends(SubjectSubscriber, _super);\r\n        function SubjectSubscriber(destination) {\r\n            var _this = _super.call(this, destination) || this;\r\n            _this.destination = destination;\r\n            return _this;\r\n        }\r\n        return SubjectSubscriber;\r\n    }(Subscriber));\r\n    var Subject = /** @class */ (function (_super) {\r\n        __extends(Subject, _super);\r\n        function Subject() {\r\n            var _this = _super.call(this) || this;\r\n            _this.observers = [];\r\n            _this.closed = false;\r\n            _this.isStopped = false;\r\n            _this.hasError = false;\r\n            _this.thrownError = null;\r\n            return _this;\r\n        }\r\n        Subject.prototype[rxSubscriber] = function () {\r\n            return new SubjectSubscriber(this);\r\n        };\r\n        Subject.prototype.lift = function (operator) {\r\n            var subject = new AnonymousSubject(this, this);\r\n            subject.operator = operator;\r\n            return subject;\r\n        };\r\n        Subject.prototype.next = function (value) {\r\n            if (this.closed) {\r\n                throw new ObjectUnsubscribedError();\r\n            }\r\n            if (!this.isStopped) {\r\n                var observers = this.observers;\r\n                var len = observers.length;\r\n                var copy = observers.slice();\r\n                for (var i = 0; i < len; i++) {\r\n                    copy[i].next(value);\r\n                }\r\n            }\r\n        };\r\n        Subject.prototype.error = function (err) {\r\n            if (this.closed) {\r\n                throw new ObjectUnsubscribedError();\r\n            }\r\n            this.hasError = true;\r\n            this.thrownError = err;\r\n            this.isStopped = true;\r\n            var observers = this.observers;\r\n            var len = observers.length;\r\n            var copy = observers.slice();\r\n            for (var i = 0; i < len; i++) {\r\n                copy[i].error(err);\r\n            }\r\n            this.observers.length = 0;\r\n        };\r\n        Subject.prototype.complete = function () {\r\n            if (this.closed) {\r\n                throw new ObjectUnsubscribedError();\r\n            }\r\n            this.isStopped = true;\r\n            var observers = this.observers;\r\n            var len = observers.length;\r\n            var copy = observers.slice();\r\n            for (var i = 0; i < len; i++) {\r\n                copy[i].complete();\r\n            }\r\n            this.observers.length = 0;\r\n        };\r\n        Subject.prototype.unsubscribe = function () {\r\n            this.isStopped = true;\r\n            this.closed = true;\r\n            this.observers = null;\r\n        };\r\n        Subject.prototype._trySubscribe = function (subscriber) {\r\n            if (this.closed) {\r\n                throw new ObjectUnsubscribedError();\r\n            }\r\n            else {\r\n                return _super.prototype._trySubscribe.call(this, subscriber);\r\n            }\r\n        };\r\n        Subject.prototype._subscribe = function (subscriber) {\r\n            if (this.closed) {\r\n                throw new ObjectUnsubscribedError();\r\n            }\r\n            else if (this.hasError) {\r\n                subscriber.error(this.thrownError);\r\n                return Subscription.EMPTY;\r\n            }\r\n            else if (this.isStopped) {\r\n                subscriber.complete();\r\n                return Subscription.EMPTY;\r\n            }\r\n            else {\r\n                this.observers.push(subscriber);\r\n                return new SubjectSubscription(this, subscriber);\r\n            }\r\n        };\r\n        Subject.prototype.asObservable = function () {\r\n            var observable = new Observable();\r\n            observable.source = this;\r\n            return observable;\r\n        };\r\n        return Subject;\r\n    }(Observable));\r\n    Subject.create = function (destination, source) {\r\n        return new AnonymousSubject(destination, source);\r\n    };\r\n    var AnonymousSubject = /** @class */ (function (_super) {\r\n        __extends(AnonymousSubject, _super);\r\n        function AnonymousSubject(destination, source) {\r\n            var _this = _super.call(this) || this;\r\n            _this.destination = destination;\r\n            _this.source = source;\r\n            return _this;\r\n        }\r\n        AnonymousSubject.prototype.next = function (value) {\r\n            var destination = this.destination;\r\n            if (destination && destination.next) {\r\n                destination.next(value);\r\n            }\r\n        };\r\n        AnonymousSubject.prototype.error = function (err) {\r\n            var destination = this.destination;\r\n            if (destination && destination.error) {\r\n                this.destination.error(err);\r\n            }\r\n        };\r\n        AnonymousSubject.prototype.complete = function () {\r\n            var destination = this.destination;\r\n            if (destination && destination.complete) {\r\n                this.destination.complete();\r\n            }\r\n        };\r\n        AnonymousSubject.prototype._subscribe = function (subscriber) {\r\n            var source = this.source;\r\n            if (source) {\r\n                return this.source.subscribe(subscriber);\r\n            }\r\n            else {\r\n                return Subscription.EMPTY;\r\n            }\r\n        };\r\n        return AnonymousSubject;\r\n    }(Subject));\r\n    function refCount() {\r\n        return function refCountOperatorFunction(source) {\r\n            return source.lift(new RefCountOperator(source));\r\n        };\r\n    }\r\n    var RefCountOperator = /** @class */ (function () {\r\n        function RefCountOperator(connectable) {\r\n            this.connectable = connectable;\r\n        }\r\n        RefCountOperator.prototype.call = function (subscriber, source) {\r\n            var connectable = this.connectable;\r\n            connectable._refCount++;\r\n            var refCounter = new RefCountSubscriber(subscriber, connectable);\r\n            var subscription = source.subscribe(refCounter);\r\n            if (!refCounter.closed) {\r\n                refCounter.connection = connectable.connect();\r\n            }\r\n            return subscription;\r\n        };\r\n        return RefCountOperator;\r\n    }());\r\n    var RefCountSubscriber = /** @class */ (function (_super) {\r\n        __extends(RefCountSubscriber, _super);\r\n        function RefCountSubscriber(destination, connectable) {\r\n            var _this = _super.call(this, destination) || this;\r\n            _this.connectable = connectable;\r\n            return _this;\r\n        }\r\n        RefCountSubscriber.prototype._unsubscribe = function () {\r\n            var connectable = this.connectable;\r\n            if (!connectable) {\r\n                this.connection = null;\r\n                return;\r\n            }\r\n            this.connectable = null;\r\n            var refCount = connectable._refCount;\r\n            if (refCount <= 0) {\r\n                this.connection = null;\r\n                return;\r\n            }\r\n            connectable._refCount = refCount - 1;\r\n            if (refCount > 1) {\r\n                this.connection = null;\r\n                return;\r\n            }\r\n            var connection = this.connection;\r\n            var sharedConnection = connectable._connection;\r\n            this.connection = null;\r\n            if (sharedConnection && (!connection || sharedConnection === connection)) {\r\n                sharedConnection.unsubscribe();\r\n            }\r\n        };\r\n        return RefCountSubscriber;\r\n    }(Subscriber));\r\n    var ConnectableObservable = /** @class */ (function (_super) {\r\n        __extends(ConnectableObservable, _super);\r\n        function ConnectableObservable(source, subjectFactory) {\r\n            var _this = _super.call(this) || this;\r\n            _this.source = source;\r\n            _this.subjectFactory = subjectFactory;\r\n            _this._refCount = 0;\r\n            _this._isComplete = false;\r\n            return _this;\r\n        }\r\n        ConnectableObservable.prototype._subscribe = function (subscriber) {\r\n            return this.getSubject().subscribe(subscriber);\r\n        };\r\n        ConnectableObservable.prototype.getSubject = function () {\r\n            var subject = this._subject;\r\n            if (!subject || subject.isStopped) {\r\n                this._subject = this.subjectFactory();\r\n            }\r\n            return this._subject;\r\n        };\r\n        ConnectableObservable.prototype.connect = function () {\r\n            var connection = this._connection;\r\n            if (!connection) {\r\n                this._isComplete = false;\r\n                connection = this._connection = new Subscription();\r\n                connection.add(this.source\r\n                    .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\r\n                if (connection.closed) {\r\n                    this._connection = null;\r\n                    connection = Subscription.EMPTY;\r\n                }\r\n                else {\r\n                    this._connection = connection;\r\n                }\r\n            }\r\n            return connection;\r\n        };\r\n        ConnectableObservable.prototype.refCount = function () {\r\n            return refCount()(this);\r\n        };\r\n        return ConnectableObservable;\r\n    }(Observable));\r\n    var connectableProto = ConnectableObservable.prototype;\r\n    var connectableObservableDescriptor = {\r\n        operator: { value: null },\r\n        _refCount: { value: 0, writable: true },\r\n        _subject: { value: null, writable: true },\r\n        _connection: { value: null, writable: true },\r\n        _subscribe: { value: connectableProto._subscribe },\r\n        _isComplete: { value: connectableProto._isComplete, writable: true },\r\n        getSubject: { value: connectableProto.getSubject },\r\n        connect: { value: connectableProto.connect },\r\n        refCount: { value: connectableProto.refCount }\r\n    };\r\n    var ConnectableSubscriber = /** @class */ (function (_super) {\r\n        __extends(ConnectableSubscriber, _super);\r\n        function ConnectableSubscriber(destination, connectable) {\r\n            var _this = _super.call(this, destination) || this;\r\n            _this.connectable = connectable;\r\n            return _this;\r\n        }\r\n        ConnectableSubscriber.prototype._error = function (err) {\r\n            this._unsubscribe();\r\n            _super.prototype._error.call(this, err);\r\n        };\r\n        ConnectableSubscriber.prototype._complete = function () {\r\n            this.connectable._isComplete = true;\r\n            this._unsubscribe();\r\n            _super.prototype._complete.call(this);\r\n        };\r\n        ConnectableSubscriber.prototype._unsubscribe = function () {\r\n            var connectable = this.connectable;\r\n            if (connectable) {\r\n                this.connectable = null;\r\n                var connection = connectable._connection;\r\n                connectable._refCount = 0;\r\n                connectable._subject = null;\r\n                connectable._connection = null;\r\n                if (connection) {\r\n                    connection.unsubscribe();\r\n                }\r\n            }\r\n        };\r\n        return ConnectableSubscriber;\r\n    }(SubjectSubscriber));\r\n    var Action = /** @class */ (function (_super) {\r\n        __extends(Action, _super);\r\n        function Action(scheduler, work) {\r\n            return _super.call(this) || this;\r\n        }\r\n        Action.prototype.schedule = function (state, delay) {\r\n            if (delay === void 0) { delay = 0; }\r\n            return this;\r\n        };\r\n        return Action;\r\n    }(Subscription));\r\n    var AsyncAction = /** @class */ (function (_super) {\r\n        __extends(AsyncAction, _super);\r\n        function AsyncAction(scheduler, work) {\r\n            var _this = _super.call(this, scheduler, work) || this;\r\n            _this.scheduler = scheduler;\r\n            _this.work = work;\r\n            _this.pending = false;\r\n            return _this;\r\n        }\r\n        AsyncAction.prototype.schedule = function (state, delay) {\r\n            if (delay === void 0) { delay = 0; }\r\n            if (this.closed) {\r\n                return this;\r\n            }\r\n            this.state = state;\r\n            var id = this.id;\r\n            var scheduler = this.scheduler;\r\n            if (id != null) {\r\n                this.id = this.recycleAsyncId(scheduler, id, delay);\r\n            }\r\n            this.pending = true;\r\n            this.delay = delay;\r\n            this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\r\n            return this;\r\n        };\r\n        AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\r\n            if (delay === void 0) { delay = 0; }\r\n            return setInterval(scheduler.flush.bind(scheduler, this), delay);\r\n        };\r\n        AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\r\n            if (delay === void 0) { delay = 0; }\r\n            if (delay !== null && this.delay === delay && this.pending === false) {\r\n                return id;\r\n            }\r\n            clearInterval(id);\r\n        };\r\n        AsyncAction.prototype.execute = function (state, delay) {\r\n            if (this.closed) {\r\n                return new Error('executing a cancelled action');\r\n            }\r\n            this.pending = false;\r\n            var error = this._execute(state, delay);\r\n            if (error) {\r\n                return error;\r\n            }\r\n            else if (this.pending === false && this.id != null) {\r\n                this.id = this.recycleAsyncId(this.scheduler, this.id, null);\r\n            }\r\n        };\r\n        AsyncAction.prototype._execute = function (state, delay) {\r\n            var errored = false;\r\n            var errorValue = undefined;\r\n            try {\r\n                this.work(state);\r\n            }\r\n            catch (e) {\r\n                errored = true;\r\n                errorValue = !!e && e || new Error(e);\r\n            }\r\n            if (errored) {\r\n                this.unsubscribe();\r\n                return errorValue;\r\n            }\r\n        };\r\n        AsyncAction.prototype._unsubscribe = function () {\r\n            var id = this.id;\r\n            var scheduler = this.scheduler;\r\n            var actions = scheduler.actions;\r\n            var index = actions.indexOf(this);\r\n            this.work = null;\r\n            this.state = null;\r\n            this.pending = false;\r\n            this.scheduler = null;\r\n            if (index !== -1) {\r\n                actions.splice(index, 1);\r\n            }\r\n            if (id != null) {\r\n                this.id = this.recycleAsyncId(scheduler, id, null);\r\n            }\r\n            this.delay = null;\r\n        };\r\n        return AsyncAction;\r\n    }(Action));\r\n    var QueueAction = /** @class */ (function (_super) {\r\n        __extends(QueueAction, _super);\r\n        function QueueAction(scheduler, work) {\r\n            var _this = _super.call(this, scheduler, work) || this;\r\n            _this.scheduler = scheduler;\r\n            _this.work = work;\r\n            return _this;\r\n        }\r\n        QueueAction.prototype.schedule = function (state, delay) {\r\n            if (delay === void 0) { delay = 0; }\r\n            if (delay > 0) {\r\n                return _super.prototype.schedule.call(this, state, delay);\r\n            }\r\n            this.delay = delay;\r\n            this.state = state;\r\n            this.scheduler.flush(this);\r\n            return this;\r\n        };\r\n        QueueAction.prototype.execute = function (state, delay) {\r\n            return (delay > 0 || this.closed) ?\r\n                _super.prototype.execute.call(this, state, delay) :\r\n                this._execute(state, delay);\r\n        };\r\n        QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\r\n            if (delay === void 0) { delay = 0; }\r\n            if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\r\n                return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\r\n            }\r\n            return scheduler.flush(this);\r\n        };\r\n        return QueueAction;\r\n    }(AsyncAction));\r\n    var Scheduler = /** @class */ (function () {\r\n        function Scheduler(SchedulerAction, now) {\r\n            if (now === void 0) { now = Scheduler.now; }\r\n            this.SchedulerAction = SchedulerAction;\r\n            this.now = now;\r\n        }\r\n        Scheduler.prototype.schedule = function (work, delay, state) {\r\n            if (delay === void 0) { delay = 0; }\r\n            return new this.SchedulerAction(this, work).schedule(state, delay);\r\n        };\r\n        return Scheduler;\r\n    }());\r\n    Scheduler.now = function () { return Date.now(); };\r\n    var AsyncScheduler = /** @class */ (function (_super) {\r\n        __extends(AsyncScheduler, _super);\r\n        function AsyncScheduler(SchedulerAction, now) {\r\n            if (now === void 0) { now = Scheduler.now; }\r\n            var _this = _super.call(this, SchedulerAction, function () {\r\n                if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\r\n                    return AsyncScheduler.delegate.now();\r\n                }\r\n                else {\r\n                    return now();\r\n                }\r\n            }) || this;\r\n            _this.actions = [];\r\n            _this.active = false;\r\n            _this.scheduled = undefined;\r\n            return _this;\r\n        }\r\n        AsyncScheduler.prototype.schedule = function (work, delay, state) {\r\n            if (delay === void 0) { delay = 0; }\r\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\r\n                return AsyncScheduler.delegate.schedule(work, delay, state);\r\n            }\r\n            else {\r\n                return _super.prototype.schedule.call(this, work, delay, state);\r\n            }\r\n        };\r\n        AsyncScheduler.prototype.flush = function (action) {\r\n            var actions = this.actions;\r\n            if (this.active) {\r\n                actions.push(action);\r\n                return;\r\n            }\r\n            var error;\r\n            this.active = true;\r\n            do {\r\n                if (error = action.execute(action.state, action.delay)) {\r\n                    break;\r\n                }\r\n            } while (action = actions.shift());\r\n            this.active = false;\r\n            if (error) {\r\n                while (action = actions.shift()) {\r\n                    action.unsubscribe();\r\n                }\r\n                throw error;\r\n            }\r\n        };\r\n        return AsyncScheduler;\r\n    }(Scheduler));\r\n    var QueueScheduler = /** @class */ (function (_super) {\r\n        __extends(QueueScheduler, _super);\r\n        function QueueScheduler() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        return QueueScheduler;\r\n    }(AsyncScheduler));\r\n    var queue = new QueueScheduler(QueueAction);\r\n    function isScheduler(value) {\r\n        return value && typeof value.schedule === 'function';\r\n    }\r\n    var subscribeToArray = function (array) { return function (subscriber) {\r\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\r\n            subscriber.next(array[i]);\r\n        }\r\n        if (!subscriber.closed) {\r\n            subscriber.complete();\r\n        }\r\n    }; };\r\n    function fromArray(input, scheduler) {\r\n        if (!scheduler) {\r\n            return new Observable(subscribeToArray(input));\r\n        }\r\n        else {\r\n            return new Observable(function (subscriber) {\r\n                var sub = new Subscription();\r\n                var i = 0;\r\n                sub.add(scheduler.schedule(function () {\r\n                    if (i === input.length) {\r\n                        subscriber.complete();\r\n                        return;\r\n                    }\r\n                    subscriber.next(input[i++]);\r\n                    if (!subscriber.closed) {\r\n                        sub.add(this.schedule());\r\n                    }\r\n                }));\r\n                return sub;\r\n            });\r\n        }\r\n    }\r\n    var nextHandle = 1;\r\n    var tasksByHandle = {};\r\n    function runIfPresent(handle) {\r\n        var cb = tasksByHandle[handle];\r\n        if (cb) {\r\n            cb();\r\n        }\r\n    }\r\n    var Immediate = {\r\n        setImmediate: function (cb) {\r\n            var handle = nextHandle++;\r\n            tasksByHandle[handle] = cb;\r\n            Promise.resolve().then(function () { return runIfPresent(handle); });\r\n            return handle;\r\n        },\r\n        clearImmediate: function (handle) {\r\n            delete tasksByHandle[handle];\r\n        },\r\n    };\r\n    var AsapAction = /** @class */ (function (_super) {\r\n        __extends(AsapAction, _super);\r\n        function AsapAction(scheduler, work) {\r\n            var _this = _super.call(this, scheduler, work) || this;\r\n            _this.scheduler = scheduler;\r\n            _this.work = work;\r\n            return _this;\r\n        }\r\n        AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\r\n            if (delay === void 0) { delay = 0; }\r\n            if (delay !== null && delay > 0) {\r\n                return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\r\n            }\r\n            scheduler.actions.push(this);\r\n            return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\r\n        };\r\n        AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\r\n            if (delay === void 0) { delay = 0; }\r\n            if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\r\n                return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\r\n            }\r\n            if (scheduler.actions.length === 0) {\r\n                Immediate.clearImmediate(id);\r\n                scheduler.scheduled = undefined;\r\n            }\r\n            return undefined;\r\n        };\r\n        return AsapAction;\r\n    }(AsyncAction));\r\n    var AsapScheduler = /** @class */ (function (_super) {\r\n        __extends(AsapScheduler, _super);\r\n        function AsapScheduler() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        AsapScheduler.prototype.flush = function (action) {\r\n            this.active = true;\r\n            this.scheduled = undefined;\r\n            var actions = this.actions;\r\n            var error;\r\n            var index = -1;\r\n            var count = actions.length;\r\n            action = action || actions.shift();\r\n            do {\r\n                if (error = action.execute(action.state, action.delay)) {\r\n                    break;\r\n                }\r\n            } while (++index < count && (action = actions.shift()));\r\n            this.active = false;\r\n            if (error) {\r\n                while (++index < count && (action = actions.shift())) {\r\n                    action.unsubscribe();\r\n                }\r\n                throw error;\r\n            }\r\n        };\r\n        return AsapScheduler;\r\n    }(AsyncScheduler));\r\n    var asap = new AsapScheduler(AsapAction);\r\n    var async = new AsyncScheduler(AsyncAction);\r\n    var AnimationFrameAction = /** @class */ (function (_super) {\r\n        __extends(AnimationFrameAction, _super);\r\n        function AnimationFrameAction(scheduler, work) {\r\n            var _this = _super.call(this, scheduler, work) || this;\r\n            _this.scheduler = scheduler;\r\n            _this.work = work;\r\n            return _this;\r\n        }\r\n        AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\r\n            if (delay === void 0) { delay = 0; }\r\n            if (delay !== null && delay > 0) {\r\n                return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\r\n            }\r\n            scheduler.actions.push(this);\r\n            return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));\r\n        };\r\n        AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\r\n            if (delay === void 0) { delay = 0; }\r\n            if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\r\n                return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\r\n            }\r\n            if (scheduler.actions.length === 0) {\r\n                cancelAnimationFrame(id);\r\n                scheduler.scheduled = undefined;\r\n            }\r\n            return undefined;\r\n        };\r\n        return AnimationFrameAction;\r\n    }(AsyncAction));\r\n    var AnimationFrameScheduler = /** @class */ (function (_super) {\r\n        __extends(AnimationFrameScheduler, _super);\r\n        function AnimationFrameScheduler() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        AnimationFrameScheduler.prototype.flush = function (action) {\r\n            this.active = true;\r\n            this.scheduled = undefined;\r\n            var actions = this.actions;\r\n            var error;\r\n            var index = -1;\r\n            var count = actions.length;\r\n            action = action || actions.shift();\r\n            do {\r\n                if (error = action.execute(action.state, action.delay)) {\r\n                    break;\r\n                }\r\n            } while (++index < count && (action = actions.shift()));\r\n            this.active = false;\r\n            if (error) {\r\n                while (++index < count && (action = actions.shift())) {\r\n                    action.unsubscribe();\r\n                }\r\n                throw error;\r\n            }\r\n        };\r\n        return AnimationFrameScheduler;\r\n    }(AsyncScheduler));\r\n    var animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\r\n    function identity(x) {\r\n        return x;\r\n    }\r\n    function map(project, thisArg) {\r\n        return function mapOperation(source) {\r\n            if (typeof project !== 'function') {\r\n                throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\r\n            }\r\n            return source.lift(new MapOperator(project, thisArg));\r\n        };\r\n    }\r\n    var MapOperator = /** @class */ (function () {\r\n        function MapOperator(project, thisArg) {\r\n            this.project = project;\r\n            this.thisArg = thisArg;\r\n        }\r\n        MapOperator.prototype.call = function (subscriber, source) {\r\n            return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\r\n        };\r\n        return MapOperator;\r\n    }());\r\n    var MapSubscriber = /** @class */ (function (_super) {\r\n        __extends(MapSubscriber, _super);\r\n        function MapSubscriber(destination, project, thisArg) {\r\n            var _this = _super.call(this, destination) || this;\r\n            _this.project = project;\r\n            _this.count = 0;\r\n            _this.thisArg = thisArg || _this;\r\n            return _this;\r\n        }\r\n        MapSubscriber.prototype._next = function (value) {\r\n            var result;\r\n            try {\r\n                result = this.project.call(this.thisArg, value, this.count++);\r\n            }\r\n            catch (err) {\r\n                this.destination.error(err);\r\n                return;\r\n            }\r\n            this.destination.next(result);\r\n        };\r\n        return MapSubscriber;\r\n    }(Subscriber));\r\n    var OuterSubscriber = /** @class */ (function (_super) {\r\n        __extends(OuterSubscriber, _super);\r\n        function OuterSubscriber() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n            this.destination.next(innerValue);\r\n        };\r\n        OuterSubscriber.prototype.notifyError = function (error, innerSub) {\r\n            this.destination.error(error);\r\n        };\r\n        OuterSubscriber.prototype.notifyComplete = function (innerSub) {\r\n            this.destination.complete();\r\n        };\r\n        return OuterSubscriber;\r\n    }(Subscriber));\r\n    var InnerSubscriber = /** @class */ (function (_super) {\r\n        __extends(InnerSubscriber, _super);\r\n        function InnerSubscriber(parent, outerValue, outerIndex) {\r\n            var _this = _super.call(this) || this;\r\n            _this.parent = parent;\r\n            _this.outerValue = outerValue;\r\n            _this.outerIndex = outerIndex;\r\n            _this.index = 0;\r\n            return _this;\r\n        }\r\n        InnerSubscriber.prototype._next = function (value) {\r\n            this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\r\n        };\r\n        InnerSubscriber.prototype._error = function (error) {\r\n            this.parent.notifyError(error, this);\r\n            this.unsubscribe();\r\n        };\r\n        InnerSubscriber.prototype._complete = function () {\r\n            this.parent.notifyComplete(this);\r\n            this.unsubscribe();\r\n        };\r\n        return InnerSubscriber;\r\n    }(Subscriber));\r\n    var subscribeToPromise = function (promise) { return function (subscriber) {\r\n        promise.then(function (value) {\r\n            if (!subscriber.closed) {\r\n                subscriber.next(value);\r\n                subscriber.complete();\r\n            }\r\n        }, function (err) { return subscriber.error(err); })\r\n            .then(null, hostReportError);\r\n        return subscriber;\r\n    }; };\r\n    function getSymbolIterator$1() {\r\n        if (typeof Symbol !== 'function' || !Symbol.iterator) {\r\n            return '@@iterator';\r\n        }\r\n        return Symbol.iterator;\r\n    }\r\n    var iterator = getSymbolIterator$1();\r\n    var subscribeToIterable = function (iterable) { return function (subscriber) {\r\n        var iterator$$1 = iterable[iterator]();\r\n        do {\r\n            var item = iterator$$1.next();\r\n            if (item.done) {\r\n                subscriber.complete();\r\n                break;\r\n            }\r\n            subscriber.next(item.value);\r\n            if (subscriber.closed) {\r\n                break;\r\n            }\r\n        } while (true);\r\n        if (typeof iterator$$1.return === 'function') {\r\n            subscriber.add(function () {\r\n                if (iterator$$1.return) {\r\n                    iterator$$1.return();\r\n                }\r\n            });\r\n        }\r\n        return subscriber;\r\n    }; };\r\n    var subscribeToObservable = function (obj) { return function (subscriber) {\r\n        var obs = obj[observable]();\r\n        if (typeof obs.subscribe !== 'function') {\r\n            throw new TypeError('Provided object does not correctly implement Symbol.observable');\r\n        }\r\n        else {\r\n            return obs.subscribe(subscriber);\r\n        }\r\n    }; };\r\n    var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\r\n    function isPromise(value) {\r\n        return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\r\n    }\r\n    var subscribeTo = function (result) {\r\n        if (result instanceof Observable) {\r\n            return function (subscriber) {\r\n                if (result._isScalar) {\r\n                    subscriber.next(result.value);\r\n                    subscriber.complete();\r\n                    return undefined;\r\n                }\r\n                else {\r\n                    return result.subscribe(subscriber);\r\n                }\r\n            };\r\n        }\r\n        else if (result && typeof result[observable] === 'function') {\r\n            return subscribeToObservable(result);\r\n        }\r\n        else if (isArrayLike(result)) {\r\n            return subscribeToArray(result);\r\n        }\r\n        else if (isPromise(result)) {\r\n            return subscribeToPromise(result);\r\n        }\r\n        else if (result && typeof result[iterator] === 'function') {\r\n            return subscribeToIterable(result);\r\n        }\r\n        else {\r\n            var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\r\n            var msg = \"You provided \" + value + \" where a stream was expected.\"\r\n                + ' You can provide an Observable, Promise, Array, or Iterable.';\r\n            throw new TypeError(msg);\r\n        }\r\n    };\r\n    function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, destination) {\r\n        if (destination === void 0) { destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex); }\r\n        if (destination.closed) {\r\n            return;\r\n        }\r\n        return subscribeTo(result)(destination);\r\n    }\r\n    function isInteropObservable(input) {\r\n        return input && typeof input[observable] === 'function';\r\n    }\r\n    function isIterable(input) {\r\n        return input && typeof input[iterator] === 'function';\r\n    }\r\n    function fromPromise(input, scheduler) {\r\n        if (!scheduler) {\r\n            return new Observable(subscribeToPromise(input));\r\n        }\r\n        else {\r\n            return new Observable(function (subscriber) {\r\n                var sub = new Subscription();\r\n                sub.add(scheduler.schedule(function () { return input.then(function (value) {\r\n                    sub.add(scheduler.schedule(function () {\r\n                        subscriber.next(value);\r\n                        sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\r\n                    }));\r\n                }, function (err) {\r\n                    sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\r\n                }); }));\r\n                return sub;\r\n            });\r\n        }\r\n    }\r\n    function fromIterable(input, scheduler) {\r\n        if (!input) {\r\n            throw new Error('Iterable cannot be null');\r\n        }\r\n        if (!scheduler) {\r\n            return new Observable(subscribeToIterable(input));\r\n        }\r\n        else {\r\n            return new Observable(function (subscriber) {\r\n                var sub = new Subscription();\r\n                var iterator$$1;\r\n                sub.add(function () {\r\n                    if (iterator$$1 && typeof iterator$$1.return === 'function') {\r\n                        iterator$$1.return();\r\n                    }\r\n                });\r\n                sub.add(scheduler.schedule(function () {\r\n                    iterator$$1 = input[iterator]();\r\n                    sub.add(scheduler.schedule(function () {\r\n                        if (subscriber.closed) {\r\n                            return;\r\n                        }\r\n                        var value;\r\n                        var done;\r\n                        try {\r\n                            var result = iterator$$1.next();\r\n                            value = result.value;\r\n                            done = result.done;\r\n                        }\r\n                        catch (err) {\r\n                            subscriber.error(err);\r\n                            return;\r\n                        }\r\n                        if (done) {\r\n                            subscriber.complete();\r\n                        }\r\n                        else {\r\n                            subscriber.next(value);\r\n                            this.schedule();\r\n                        }\r\n                    }));\r\n                }));\r\n                return sub;\r\n            });\r\n        }\r\n    }\r\n    function fromObservable(input, scheduler) {\r\n        if (!scheduler) {\r\n            return new Observable(subscribeToObservable(input));\r\n        }\r\n        else {\r\n            return new Observable(function (subscriber) {\r\n                var sub = new Subscription();\r\n                sub.add(scheduler.schedule(function () {\r\n                    var observable$$1 = input[observable]();\r\n                    sub.add(observable$$1.subscribe({\r\n                        next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\r\n                        error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\r\n                        complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\r\n                    }));\r\n                }));\r\n                return sub;\r\n            });\r\n        }\r\n    }\r\n    function from(input, scheduler) {\r\n        if (!scheduler) {\r\n            if (input instanceof Observable) {\r\n                return input;\r\n            }\r\n            return new Observable(subscribeTo(input));\r\n        }\r\n        if (input != null) {\r\n            if (isInteropObservable(input)) {\r\n                return fromObservable(input, scheduler);\r\n            }\r\n            else if (isPromise(input)) {\r\n                return fromPromise(input, scheduler);\r\n            }\r\n            else if (isArrayLike(input)) {\r\n                return fromArray(input, scheduler);\r\n            }\r\n            else if (isIterable(input) || typeof input === 'string') {\r\n                return fromIterable(input, scheduler);\r\n            }\r\n        }\r\n        throw new TypeError((input !== null && typeof input || input) + ' is not observable');\r\n    }\r\n    function mergeMap(project, resultSelector, concurrent) {\r\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\r\n        if (typeof resultSelector === 'function') {\r\n            return function (source) { return source.pipe(mergeMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };\r\n        }\r\n        else if (typeof resultSelector === 'number') {\r\n            concurrent = resultSelector;\r\n        }\r\n        return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };\r\n    }\r\n    var MergeMapOperator = /** @class */ (function () {\r\n        function MergeMapOperator(project, concurrent) {\r\n            if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\r\n            this.project = project;\r\n            this.concurrent = concurrent;\r\n        }\r\n        MergeMapOperator.prototype.call = function (observer, source) {\r\n            return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\r\n        };\r\n        return MergeMapOperator;\r\n    }());\r\n    var MergeMapSubscriber = /** @class */ (function (_super) {\r\n        __extends(MergeMapSubscriber, _super);\r\n        function MergeMapSubscriber(destination, project, concurrent) {\r\n            if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\r\n            var _this = _super.call(this, destination) || this;\r\n            _this.project = project;\r\n            _this.concurrent = concurrent;\r\n            _this.hasCompleted = false;\r\n            _this.buffer = [];\r\n            _this.active = 0;\r\n            _this.index = 0;\r\n            return _this;\r\n        }\r\n        MergeMapSubscriber.prototype._next = function (value) {\r\n            if (this.active < this.concurrent) {\r\n                this._tryNext(value);\r\n            }\r\n            else {\r\n                this.buffer.push(value);\r\n            }\r\n        };\r\n        MergeMapSubscriber.prototype._tryNext = function (value) {\r\n            var result;\r\n            var index = this.index++;\r\n            try {\r\n                result = this.project(value, index);\r\n            }\r\n            catch (err) {\r\n                this.destination.error(err);\r\n                return;\r\n            }\r\n            this.active++;\r\n            this._innerSub(result, value, index);\r\n        };\r\n        MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\r\n            var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\r\n            var destination = this.destination;\r\n            destination.add(innerSubscriber);\r\n            subscribeToResult(this, ish, value, index, innerSubscriber);\r\n        };\r\n        MergeMapSubscriber.prototype._complete = function () {\r\n            this.hasCompleted = true;\r\n            if (this.active === 0 && this.buffer.length === 0) {\r\n                this.destination.complete();\r\n            }\r\n            this.unsubscribe();\r\n        };\r\n        MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n            this.destination.next(innerValue);\r\n        };\r\n        MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\r\n            var buffer = this.buffer;\r\n            this.remove(innerSub);\r\n            this.active--;\r\n            if (buffer.length > 0) {\r\n                this._next(buffer.shift());\r\n            }\r\n            else if (this.active === 0 && this.hasCompleted) {\r\n                this.destination.complete();\r\n            }\r\n        };\r\n        return MergeMapSubscriber;\r\n    }(OuterSubscriber));\r\n    function mergeAll(concurrent) {\r\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\r\n        return mergeMap(identity, concurrent);\r\n    }\r\n    function merge$1() {\r\n        var observables = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            observables[_i] = arguments[_i];\r\n        }\r\n        var concurrent = Number.POSITIVE_INFINITY;\r\n        var scheduler = null;\r\n        var last = observables[observables.length - 1];\r\n        if (isScheduler(last)) {\r\n            scheduler = observables.pop();\r\n            if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\r\n                concurrent = observables.pop();\r\n            }\r\n        }\r\n        else if (typeof last === 'number') {\r\n            concurrent = observables.pop();\r\n        }\r\n        if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\r\n            return observables[0];\r\n        }\r\n        return mergeAll(concurrent)(fromArray(observables, scheduler));\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Use in directives and components to emit custom events synchronously\r\n     * or asynchronously, and register handlers for those events by subscribing\r\n     * to an instance.\r\n     *\r\n     * \\@usageNotes\r\n     *\r\n     * In the following example, a component defines two output properties\r\n     * that create event emitters. When the title is clicked, the emitter\r\n     * emits an open or close event to toggle the current visibility state.\r\n     *\r\n     * ```\r\n     * \\@Component({\r\n     *   selector: 'zippy',\r\n     *   template: `\r\n     *   <div class=\"zippy\">\r\n     *     <div (click)=\"toggle()\">Toggle</div>\r\n     *     <div [hidden]=\"!visible\">\r\n     *       <ng-content></ng-content>\r\n     *     </div>\r\n     *  </div>`})\r\n     * export class Zippy {\r\n     *   visible: boolean = true;\r\n     * \\@Output() open: EventEmitter<any> = new EventEmitter();\r\n     * \\@Output() close: EventEmitter<any> = new EventEmitter();\r\n     *\r\n     *   toggle() {\r\n     *     this.visible = !this.visible;\r\n     *     if (this.visible) {\r\n     *       this.open.emit(null);\r\n     *     } else {\r\n     *       this.close.emit(null);\r\n     *     }\r\n     *   }\r\n     * }\r\n     * ```\r\n     *\r\n     * Access the event object with the `$event` argument passed to the output event\r\n     * handler:\r\n     *\r\n     * ```\r\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\r\n     * ```\r\n     *\r\n     * ### Notes\r\n     *\r\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\r\n     * https://github.com/jhusain/observable-spec\r\n     *\r\n     * Once a reference implementation of the spec is available, switch to it.\r\n     *\r\n     * \\@publicApi\r\n     * @template T\r\n     */\r\n    var EventEmitter = /** @class */ (function (_super) {\r\n        __extends(EventEmitter, _super);\r\n        // tslint:disable-line\r\n        /**\r\n         * Creates an instance of this class that can\r\n         * deliver events synchronously or asynchronously.\r\n         *\r\n         * @param {?=} isAsync When true, deliver events asynchronously.\r\n         *\r\n         */\r\n        function EventEmitter(isAsync) {\r\n            if (isAsync === void 0) { isAsync = false; }\r\n            var _this = _super.call(this) || this;\r\n            _this.__isAsync = isAsync;\r\n            return _this;\r\n        }\r\n        /**\r\n         * Emits an event containing a given value.\r\n         * @param {?=} value The value to emit.\r\n         * @return {?}\r\n         */\r\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\r\n        /**\r\n         * Registers handlers for events emitted by this instance.\r\n         * @param {?=} generatorOrNext When supplied, a custom handler for emitted events.\r\n         * @param {?=} error When supplied, a custom handler for an error notification\r\n         * from this emitter.\r\n         * @param {?=} complete When supplied, a custom handler for a completion\r\n         * notification from this emitter.\r\n         * @return {?}\r\n         */\r\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\r\n            /** @type {?} */\r\n            var schedulerFn;\r\n            /** @type {?} */\r\n            var errorFn = function (err) { return null; };\r\n            /** @type {?} */\r\n            var completeFn = function () { return null; };\r\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\r\n                schedulerFn = this.__isAsync ? function (value) {\r\n                    setTimeout(function () { return generatorOrNext.next(value); });\r\n                } : function (value) { generatorOrNext.next(value); };\r\n                if (generatorOrNext.error) {\r\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\r\n                        function (err) { generatorOrNext.error(err); };\r\n                }\r\n                if (generatorOrNext.complete) {\r\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\r\n                        function () { generatorOrNext.complete(); };\r\n                }\r\n            }\r\n            else {\r\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\r\n                    function (value) { generatorOrNext(value); };\r\n                if (error) {\r\n                    errorFn =\r\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\r\n                }\r\n                if (complete) {\r\n                    completeFn =\r\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\r\n                }\r\n            }\r\n            /** @type {?} */\r\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\r\n            if (generatorOrNext instanceof Subscription) {\r\n                generatorOrNext.add(sink);\r\n            }\r\n            return sink;\r\n        };\r\n        return EventEmitter;\r\n    }(Subject));\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Represents an embedded template that can be used to instantiate embedded views.\r\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\r\n     * method `createEmbeddedView()`.\r\n     *\r\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\r\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\r\n     * is injected into the constructor of the directive,\r\n     * using the `TemplateRef` token.\r\n     *\r\n     * You can also use a `Query` to find a `TemplateRef` associated with\r\n     * a component or a directive.\r\n     *\r\n     * @see `ViewContainerRef`\r\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     * @template C\r\n     */\r\n    var TemplateRef = /** @class */ (function () {\r\n        function TemplateRef() {\r\n        }\r\n        return TemplateRef;\r\n    }());\r\n    /**\r\n     * \\@internal\r\n     */\r\n    TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\r\n    /** @type {?} */\r\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\r\n    /** @type {?} */\r\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @template T\r\n     */\r\n    var QueryList_ = /** @class */ (function () {\r\n        function QueryList_() {\r\n            this.dirty = true;\r\n            this.changes = new EventEmitter();\r\n            this._values = [];\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._valuesTree = [];\r\n        }\r\n        Object.defineProperty(QueryList_.prototype, \"length\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._values.length; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(QueryList_.prototype, \"first\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                /** @type {?} */\r\n                var values = this._values;\r\n                return values.length ? values[0] : null;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(QueryList_.prototype, \"last\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                /** @type {?} */\r\n                var values = this._values;\r\n                return values.length ? values[values.length - 1] : null;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * See\r\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\r\n         * @template U\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\r\n        /**\r\n         * See\r\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        QueryList_.prototype.filter = function (fn) {\r\n            return this._values.filter(fn);\r\n        };\r\n        /**\r\n         * See\r\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        QueryList_.prototype.find = function (fn) {\r\n            return this._values.find(fn);\r\n        };\r\n        /**\r\n         * See\r\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\r\n         * @template U\r\n         * @param {?} fn\r\n         * @param {?} init\r\n         * @return {?}\r\n         */\r\n        QueryList_.prototype.reduce = function (fn, init) {\r\n            return this._values.reduce(fn, init);\r\n        };\r\n        /**\r\n         * See\r\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\r\n        /**\r\n         * See\r\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        QueryList_.prototype.some = function (fn) {\r\n            return this._values.some(fn);\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        QueryList_.prototype[getSymbolIterator()] = function () { return (((this._values)))[getSymbolIterator()](); };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\r\n        /**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        QueryList_.prototype.reset = function (res) {\r\n            this._values = flatten(res);\r\n            (((this))).dirty = false;\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        QueryList_.prototype.notifyOnChanges = function () { (((this.changes))).emit(this); };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        QueryList_.prototype.setDirty = function () { (((this))).dirty = true; };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        QueryList_.prototype.destroy = function () {\r\n            (((this.changes))).complete();\r\n            (((this.changes))).unsubscribe();\r\n        };\r\n        return QueryList_;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Regular expression for safe style values.\r\n     *\r\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\r\n     *\r\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\r\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\r\n     * of XSS.\r\n     *\r\n     * The function expression checks only for XSS safety, not for CSS validity.\r\n     *\r\n     * This regular expression was taken from the Closure sanitization library, and augmented for\r\n     * transformation values.\r\n     * @type {?}\r\n     */\r\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\r\n    /** @type {?} */\r\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\r\n    /** @type {?} */\r\n    var COLOR_FNS = '(?:rgb|hsl)a?';\r\n    /** @type {?} */\r\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\r\n    /** @type {?} */\r\n    var CSS3_FNS = '(?:calc|attr)';\r\n    /** @type {?} */\r\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\r\n    /** @type {?} */\r\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\r\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\r\n        (FN_ARGS + \")$\"), 'g');\r\n    /**\r\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\r\n     * not contain parentheses.\r\n     *\r\n     * The URL value still needs to be sanitized separately.\r\n     *\r\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\r\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\r\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\r\n     * definition.\r\n     *\r\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\r\n     * binding a URL value without further cooperation from the page will cause an information leak, and\r\n     * if so, it is just a leak, not a full blown XSS vulnerability.\r\n     *\r\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\r\n     * code is permissive and allows URLs that sanitize otherwise.\r\n     * @type {?}\r\n     */\r\n    var URL_RE = /^url\\(([^)]+)\\)$/;\r\n    /**\r\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\r\n     * that neither escape (\\) nor any other character that could result in\r\n     * breaking out of a string parsing context are allowed;\r\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\r\n     *\r\n     * This code was taken from the Closure sanitization library.\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function hasBalancedQuotes(value) {\r\n        /** @type {?} */\r\n        var outsideSingle = true;\r\n        /** @type {?} */\r\n        var outsideDouble = true;\r\n        for (var i = 0; i < value.length; i++) {\r\n            /** @type {?} */\r\n            var c = value.charAt(i);\r\n            if (c === '\\'' && outsideDouble) {\r\n                outsideSingle = !outsideSingle;\r\n            }\r\n            else if (c === '\"' && outsideSingle) {\r\n                outsideDouble = !outsideDouble;\r\n            }\r\n        }\r\n        return outsideSingle && outsideDouble;\r\n    }\r\n    /**\r\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\r\n     * value) and returns a value that is safe to use in a browser environment.\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function _sanitizeStyle(value) {\r\n        value = String(value).trim(); // Make sure it's actually a string.\r\n        if (!value)\r\n            return '';\r\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\r\n        // reasoning behind this.\r\n        /** @type {?} */\r\n        var urlMatch = value.match(URL_RE);\r\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\r\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\r\n            return value; // Safe style values.\r\n        }\r\n        if (isDevMode()) {\r\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\r\n        }\r\n        return 'unsafe';\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * \\@description\r\n     *\r\n     * Represents a type that a Component or other object is instances of.\r\n     *\r\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\r\n     * the `MyCustomComponent` constructor function.\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var Type = Function;\r\n    /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    function isType(v) {\r\n        return typeof v === 'function';\r\n    }\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Attention: These regex has to hold even if the code is minified!\r\n     * @type {?}\r\n     */\r\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\r\n    /** @type {?} */\r\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\r\n    /** @type {?} */\r\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\r\n    var ReflectionCapabilities = /** @class */ (function () {\r\n        /**\r\n         * @param {?=} reflect\r\n         */\r\n        function ReflectionCapabilities(reflect) {\r\n            this._reflect = reflect || _global['Reflect'];\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\r\n        /**\r\n         * @template T\r\n         * @param {?} t\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return new (t.bind.apply(t, [void 0].concat(args)))();\r\n        }; };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} paramTypes\r\n         * @param {?} paramAnnotations\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\r\n            /** @type {?} */\r\n            var result;\r\n            if (typeof paramTypes === 'undefined') {\r\n                result = new Array(paramAnnotations.length);\r\n            }\r\n            else {\r\n                result = new Array(paramTypes.length);\r\n            }\r\n            for (var i = 0; i < result.length; i++) {\r\n                // TS outputs Object for parameters without types, while Traceur omits\r\n                // the annotations. For now we preserve the Traceur behavior to aid\r\n                // migration, but this can be revisited.\r\n                if (typeof paramTypes === 'undefined') {\r\n                    result[i] = [];\r\n                }\r\n                else if (paramTypes[i] != Object) {\r\n                    result[i] = [paramTypes[i]];\r\n                }\r\n                else {\r\n                    result[i] = [];\r\n                }\r\n                if (paramAnnotations && paramAnnotations[i] != null) {\r\n                    result[i] = result[i].concat(paramAnnotations[i]);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} type\r\n         * @param {?} parentCtor\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\r\n            /** @type {?} */\r\n            var typeStr = type.toString();\r\n            // If we have no decorators, we only have function.length as metadata.\r\n            // In that case, to detect whether a child class declared an own constructor or not,\r\n            // we need to look inside of that constructor to check whether it is\r\n            // just calling the parent.\r\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\r\n            // that sets 'design:paramtypes' to []\r\n            // if a class inherits from another class but has no ctor declared itself.\r\n            if (DELEGATE_CTOR.exec(typeStr) ||\r\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\r\n                return null;\r\n            }\r\n            // Prefer the direct API.\r\n            if ((((type))).parameters && (((type))).parameters !== parentCtor.parameters) {\r\n                return (((type))).parameters;\r\n            }\r\n            // API of tsickle for lowering decorators to properties on the class.\r\n            /** @type {?} */\r\n            var tsickleCtorParams = (((type))).ctorParameters;\r\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\r\n                // Newer tsickle uses a function closure\r\n                // Retain the non-function case for compatibility with older tsickle\r\n                /** @type {?} */\r\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\r\n                /** @type {?} */\r\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\r\n                /** @type {?} */\r\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) { return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators); });\r\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\r\n            }\r\n            // API for metadata created by invoking the decorators.\r\n            /** @type {?} */\r\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && (((type)))[PARAMETERS];\r\n            /** @type {?} */\r\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\r\n                this._reflect.getOwnMetadata('design:paramtypes', type);\r\n            if (paramTypes || paramAnnotations) {\r\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\r\n            }\r\n            // If a class has no decorators, at least create metadata\r\n            // based on function.length.\r\n            // Note: We know that this is a real constructor as we checked\r\n            // the content of the constructor above.\r\n            return new Array((((type.length)))).fill(undefined);\r\n        };\r\n        /**\r\n         * @param {?} type\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.parameters = function (type) {\r\n            // Note: only report metadata if we have at least one class decorator\r\n            // to stay in sync with the static reflector.\r\n            if (!isType(type)) {\r\n                return [];\r\n            }\r\n            /** @type {?} */\r\n            var parentCtor = getParentCtor(type);\r\n            /** @type {?} */\r\n            var parameters = this._ownParameters(type, parentCtor);\r\n            if (!parameters && parentCtor !== Object) {\r\n                parameters = this.parameters(parentCtor);\r\n            }\r\n            return parameters || [];\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} typeOrFunc\r\n         * @param {?} parentCtor\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\r\n            // Prefer the direct API.\r\n            if ((((typeOrFunc))).annotations && (((typeOrFunc))).annotations !== parentCtor.annotations) {\r\n                /** @type {?} */\r\n                var annotations = (((typeOrFunc))).annotations;\r\n                if (typeof annotations === 'function' && annotations.annotations) {\r\n                    annotations = annotations.annotations;\r\n                }\r\n                return annotations;\r\n            }\r\n            // API of tsickle for lowering decorators to properties on the class.\r\n            if ((((typeOrFunc))).decorators && (((typeOrFunc))).decorators !== parentCtor.decorators) {\r\n                return convertTsickleDecoratorIntoMetadata((((typeOrFunc))).decorators);\r\n            }\r\n            // API for metadata created by invoking the decorators.\r\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\r\n                return (((typeOrFunc)))[ANNOTATIONS];\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * @param {?} typeOrFunc\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\r\n            if (!isType(typeOrFunc)) {\r\n                return [];\r\n            }\r\n            /** @type {?} */\r\n            var parentCtor = getParentCtor(typeOrFunc);\r\n            /** @type {?} */\r\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\r\n            /** @type {?} */\r\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\r\n            return parentAnnotations.concat(ownAnnotations);\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} typeOrFunc\r\n         * @param {?} parentCtor\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\r\n            // Prefer the direct API.\r\n            if ((((typeOrFunc))).propMetadata &&\r\n                (((typeOrFunc))).propMetadata !== parentCtor.propMetadata) {\r\n                /** @type {?} */\r\n                var propMetadata = (((typeOrFunc))).propMetadata;\r\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\r\n                    propMetadata = propMetadata.propMetadata;\r\n                }\r\n                return propMetadata;\r\n            }\r\n            // API of tsickle for lowering decorators to properties on the class.\r\n            if ((((typeOrFunc))).propDecorators &&\r\n                (((typeOrFunc))).propDecorators !== parentCtor.propDecorators) {\r\n                /** @type {?} */\r\n                var propDecorators_1 = (((typeOrFunc))).propDecorators;\r\n                /** @type {?} */\r\n                var propMetadata_1 = (({}));\r\n                Object.keys(propDecorators_1).forEach(function (prop) {\r\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\r\n                });\r\n                return propMetadata_1;\r\n            }\r\n            // API for metadata created by invoking the decorators.\r\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\r\n                return (((typeOrFunc)))[PROP_METADATA];\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * @param {?} typeOrFunc\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\r\n            if (!isType(typeOrFunc)) {\r\n                return {};\r\n            }\r\n            /** @type {?} */\r\n            var parentCtor = getParentCtor(typeOrFunc);\r\n            /** @type {?} */\r\n            var propMetadata = {};\r\n            if (parentCtor !== Object) {\r\n                /** @type {?} */\r\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\r\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\r\n                    propMetadata[propName] = parentPropMetadata_1[propName];\r\n                });\r\n            }\r\n            /** @type {?} */\r\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\r\n            if (ownPropMetadata) {\r\n                Object.keys(ownPropMetadata).forEach(function (propName) {\r\n                    /** @type {?} */\r\n                    var decorators = [];\r\n                    if (propMetadata.hasOwnProperty(propName)) {\r\n                        decorators.push.apply(decorators, propMetadata[propName]);\r\n                    }\r\n                    decorators.push.apply(decorators, ownPropMetadata[propName]);\r\n                    propMetadata[propName] = decorators;\r\n                });\r\n            }\r\n            return propMetadata;\r\n        };\r\n        /**\r\n         * @param {?} type\r\n         * @param {?} lcProperty\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\r\n            return type instanceof Type && lcProperty in type.prototype;\r\n        };\r\n        /**\r\n         * @param {?} type\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\r\n        /**\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.getter = function (name) { return ((new Function('o', 'return o.' + name + ';'))); };\r\n        /**\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.setter = function (name) {\r\n            return ((new Function('o', 'v', 'return o.' + name + ' = v;')));\r\n        };\r\n        /**\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.method = function (name) {\r\n            /** @type {?} */\r\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\r\n            return ((new Function('o', 'args', functionBody)));\r\n        };\r\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\r\n        /**\r\n         * @param {?} type\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.importUri = function (type) {\r\n            // StaticSymbol\r\n            if (typeof type === 'object' && type['filePath']) {\r\n                return type['filePath'];\r\n            }\r\n            // Runtime type\r\n            return \"./\" + stringify(type);\r\n        };\r\n        /**\r\n         * @param {?} type\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\r\n        /**\r\n         * @param {?} name\r\n         * @param {?} moduleUrl\r\n         * @param {?} members\r\n         * @param {?} runtime\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\r\n            return runtime;\r\n        };\r\n        /**\r\n         * @param {?} enumIdentifier\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\r\n        return ReflectionCapabilities;\r\n    }());\r\n    /**\r\n     * @param {?} decoratorInvocations\r\n     * @return {?}\r\n     */\r\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\r\n        if (!decoratorInvocations) {\r\n            return [];\r\n        }\r\n        return decoratorInvocations.map(function (decoratorInvocation) {\r\n            /** @type {?} */\r\n            var decoratorType = decoratorInvocation.type;\r\n            /** @type {?} */\r\n            var annotationCls = decoratorType.annotationCls;\r\n            /** @type {?} */\r\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\r\n            return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} ctor\r\n     * @return {?}\r\n     */\r\n    function getParentCtor(ctor) {\r\n        /** @type {?} */\r\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\r\n        /** @type {?} */\r\n        var parentCtor = parentProto ? parentProto.constructor : null;\r\n        // Note: We always use `Object` as the null value\r\n        // to simplify checking later on.\r\n        return parentCtor || Object;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * Type of the Directive metadata.\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var Directive = makeDecorator('Directive', function (dir) {\r\n        if (dir === void 0) { dir = {}; }\r\n        return dir;\r\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * Component decorator and metadata.\r\n     *\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var Component = makeDecorator('Component', function (c) {\r\n        if (c === void 0) { c = {}; }\r\n        return (Object.assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\r\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var Pipe = makeDecorator('Pipe', function (p) { return (Object.assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /** @type {?} */\r\n    var initializeBaseDef = function (target) {\r\n        /** @type {?} */\r\n        var constructor = target.constructor;\r\n        /** @nocollapse @type {?} */\r\n        var inheritedBaseDef = constructor.ngBaseDef;\r\n        /** @type {?} */\r\n        var baseDef = constructor.ngBaseDef = {\r\n            inputs: {},\r\n            outputs: {},\r\n            declaredInputs: {},\r\n        };\r\n        if (inheritedBaseDef) {\r\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\r\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\r\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\r\n        }\r\n    };\r\n    /**\r\n     * Does the work of creating the `ngBaseDef` property for the \\@Input and \\@Output decorators.\r\n     * \\@param key \"inputs\" or \"outputs\"\r\n     * @type {?}\r\n     */\r\n    var updateBaseDefFromIOProp = function (getProp) { return function (target, name) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        /** @type {?} */\r\n        var constructor = target.constructor;\r\n        if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\r\n            initializeBaseDef(target);\r\n        }\r\n        /** @nocollapse @type {?} */\r\n        var baseDef = constructor.ngBaseDef;\r\n        /** @type {?} */\r\n        var defProp = getProp(baseDef);\r\n        defProp[name] = args[0];\r\n    }; };\r\n    /**\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * Binds a CSS event to a host listener and supplies configuration metadata.\r\n     * Angular invokes the supplied handler method when the host element emits the specified event,\r\n     * and updates the bound element with the result.\r\n     * If the handler method returns false, applies `preventDefault` on the bound element.\r\n     *\r\n     * \\@usageNotes\r\n     *\r\n     * The following example declares a directive\r\n     * that attaches a click listener to a button and counts clicks.\r\n     *\r\n     * ```\r\n     * \\@Directive({selector: 'button[counting]'})\r\n     * class CountClicks {\r\n     *   numberOfClicks = 0;\r\n     *\r\n     * \\@HostListener('click', ['$event.target'])\r\n     *   onClick(btn) {\r\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\r\n     *  }\r\n     * }\r\n     *\r\n     * \\@Component({\r\n     *   selector: 'app',\r\n     *   template: '<button counting>Increment</button>',\r\n     * })\r\n     * class App {}\r\n     * ```\r\n     *\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\r\n    /** @type {?} */\r\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\r\n    /** @type {?} */\r\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\r\n    /** @type {?} */\r\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\r\n    /** @type {?} */\r\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\r\n    /** @type {?} */\r\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\r\n    /** @type {?} */\r\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    var ɵ0$2 = getClosureSafeProperty;\r\n    /** @type {?} */\r\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\r\n    /** @type {?} */\r\n    var EMPTY_ARRAY$3 = [];\r\n    /**\r\n     * @param {?} type\r\n     * @param {?=} provider\r\n     * @return {?}\r\n     */\r\n    function convertInjectableProviderToFactory(type, provider) {\r\n        if (!provider) {\r\n            /** @type {?} */\r\n            var reflectionCapabilities = new ReflectionCapabilities();\r\n            /** @type {?} */\r\n            var deps_1 = reflectionCapabilities.parameters(type);\r\n            // TODO - convert to flags.\r\n            return function () { return new (type.bind.apply(type, [void 0].concat(injectArgs(((deps_1))))))(); };\r\n        }\r\n        if (USE_VALUE$1 in provider) {\r\n            /** @type {?} */\r\n            var valueProvider_1 = (((provider)));\r\n            return function () { return valueProvider_1.useValue; };\r\n        }\r\n        else if ((((provider))).useExisting) {\r\n            /** @type {?} */\r\n            var existingProvider_1 = (((provider)));\r\n            return function () { return inject(existingProvider_1.useExisting); };\r\n        }\r\n        else if ((((provider))).useFactory) {\r\n            /** @type {?} */\r\n            var factoryProvider_1 = (((provider)));\r\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3)); };\r\n        }\r\n        else if ((((provider))).useClass) {\r\n            /** @type {?} */\r\n            var classProvider_1 = (((provider)));\r\n            /** @type {?} */\r\n            var deps_2 = (((provider))).deps;\r\n            if (!deps_2) {\r\n                /** @type {?} */\r\n                var reflectionCapabilities = new ReflectionCapabilities();\r\n                deps_2 = reflectionCapabilities.parameters(type);\r\n            }\r\n            return function () {\r\n                return new ((_b = classProvider_1.useClass).bind.apply(_b, [void 0].concat(injectArgs(deps_2))))();\r\n                var _b;\r\n            };\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var deps_3 = (((provider))).deps;\r\n            if (!deps_3) {\r\n                /** @type {?} */\r\n                var reflectionCapabilities = new ReflectionCapabilities();\r\n                deps_3 = reflectionCapabilities.parameters(type);\r\n            }\r\n            return function () { return new (type.bind.apply(type, [void 0].concat(injectArgs(((deps_3))))))(); };\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \r\n    /**\r\n     * Decorator that marks the following class as an NgModule, and supplies\r\n     * configuration metadata for it.\r\n     *\r\n     * * The `declarations` and `entryComponents` options configure the compiler\r\n     * with information about what belongs to the NgModule.\r\n     * * The `providers` options configures the NgModule's injector to provide\r\n     * dependencies the NgModule members.\r\n     * * The `imports` and `exports` options bring in members from other modules, and make\r\n     * this module's members available to others.\r\n     */\r\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\r\n    /**\r\n     * @param {?} moduleType\r\n     * @param {?} metadata\r\n     * @return {?}\r\n     */\r\n    function preR3NgModuleCompile(moduleType, metadata) {\r\n        /** @type {?} */\r\n        var imports = (metadata && metadata.imports) || [];\r\n        if (metadata && metadata.exports) {\r\n            imports = imports.concat([metadata.exports]);\r\n        }\r\n        /** @nocollapse */ moduleType.ngInjectorDef = defineInjector({\r\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\r\n            providers: metadata && metadata.providers,\r\n            imports: imports,\r\n        });\r\n    }\r\n    /** @type {?} */\r\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\r\n    /** @type {?} */\r\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    var ɵ0$3 = getClosureSafeProperty;\r\n    /** @type {?} */\r\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * Injectable decorator and metadata.\r\n     *\r\n     * \\@Annotation\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(((type)), meta); });\r\n    /**\r\n     * Supports \\@Injectable() in JIT mode for Render2.\r\n     * @param {?} injectableType\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    function render2CompileInjectable(injectableType, options) {\r\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\r\n            /** @nocollapse */ injectableType.ngInjectableDef = defineInjectable({\r\n                providedIn: options.providedIn,\r\n                factory: convertInjectableProviderToFactory(injectableType, options),\r\n            });\r\n        }\r\n    }\r\n    /** @type {?} */\r\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\r\n    /** @type {?} */\r\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\r\n    /** @type {?} */\r\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\r\n    /** @type {?} */\r\n    var ERROR_LOGGER = 'ngErrorLogger';\r\n    /**\r\n     * @param {?} error\r\n     * @return {?}\r\n     */\r\n    function getDebugContext(error) {\r\n        return (((error)))[ERROR_DEBUG_CONTEXT];\r\n    }\r\n    /**\r\n     * @param {?} error\r\n     * @return {?}\r\n     */\r\n    function getOriginalError(error) {\r\n        return (((error)))[ERROR_ORIGINAL_ERROR];\r\n    }\r\n    /**\r\n     * @param {?} error\r\n     * @return {?}\r\n     */\r\n    function getErrorLogger(error) {\r\n        return (((error)))[ERROR_LOGGER] || defaultErrorLogger;\r\n    }\r\n    /**\r\n     * @param {?} console\r\n     * @param {...?} values\r\n     * @return {?}\r\n     */\r\n    function defaultErrorLogger(console) {\r\n        var values = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            values[_i - 1] = arguments[_i];\r\n        }\r\n        console.error.apply(console, values);\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Provides a hook for centralized exception handling.\r\n     *\r\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\r\n     * intercept error handling, write a custom exception handler that replaces this default as\r\n     * appropriate for your app.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * ```\r\n     * class MyErrorHandler implements ErrorHandler {\r\n     *   handleError(error) {\r\n     *     // do something with the exception\r\n     *   }\r\n     * }\r\n     *\r\n     * \\@NgModule({\r\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\r\n     * })\r\n     * class MyModule {}\r\n     * ```\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var ErrorHandler = /** @class */ (function () {\r\n        function ErrorHandler() {\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._console = console;\r\n        }\r\n        /**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        ErrorHandler.prototype.handleError = function (error) {\r\n            /** @type {?} */\r\n            var originalError = this._findOriginalError(error);\r\n            /** @type {?} */\r\n            var context = this._findContext(error);\r\n            // Note: Browser consoles show the place from where console.error was called.\r\n            // We can use this to give users additional information about the error.\r\n            /** @type {?} */\r\n            var errorLogger = getErrorLogger(error);\r\n            errorLogger(this._console, \"ERROR\", error);\r\n            if (originalError) {\r\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\r\n            }\r\n            if (context) {\r\n                errorLogger(this._console, 'ERROR CONTEXT', context);\r\n            }\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        ErrorHandler.prototype._findContext = function (error) {\r\n            if (error) {\r\n                return getDebugContext(error) ? getDebugContext(error) :\r\n                    this._findContext(getOriginalError(error));\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        ErrorHandler.prototype._findOriginalError = function (error) {\r\n            /** @type {?} */\r\n            var e = getOriginalError(error);\r\n            while (e && getOriginalError(e)) {\r\n                e = getOriginalError(e);\r\n            }\r\n            return e;\r\n        };\r\n        return ErrorHandler;\r\n    }());\r\n    /**\r\n     * @param {?} message\r\n     * @param {?} originalError\r\n     * @return {?}\r\n     */\r\n    function wrappedError(message, originalError) {\r\n        /** @type {?} */\r\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\r\n        /** @type {?} */\r\n        var error = Error(msg);\r\n        (((error)))[ERROR_ORIGINAL_ERROR] = originalError;\r\n        return error;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} keys\r\n     * @return {?}\r\n     */\r\n    function findFirstClosedCycle(keys) {\r\n        /** @type {?} */\r\n        var res = [];\r\n        for (var i = 0; i < keys.length; ++i) {\r\n            if (res.indexOf(keys[i]) > -1) {\r\n                res.push(keys[i]);\r\n                return res;\r\n            }\r\n            res.push(keys[i]);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * @param {?} keys\r\n     * @return {?}\r\n     */\r\n    function constructResolvingPath(keys) {\r\n        if (keys.length > 1) {\r\n            /** @type {?} */\r\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\r\n            /** @type {?} */\r\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\r\n            return ' (' + tokenStrs.join(' -> ') + ')';\r\n        }\r\n        return '';\r\n    }\r\n    /**\r\n     * @param {?} injector\r\n     * @param {?} key\r\n     * @param {?} constructResolvingMessage\r\n     * @param {?=} originalError\r\n     * @return {?}\r\n     */\r\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\r\n        /** @type {?} */\r\n        var keys = [key];\r\n        /** @type {?} */\r\n        var errMsg = constructResolvingMessage(keys);\r\n        /** @type {?} */\r\n        var error = (((originalError ? wrappedError(errMsg, originalError) : Error(errMsg))));\r\n        error.addKey = addKey;\r\n        error.keys = keys;\r\n        error.injectors = [injector];\r\n        error.constructResolvingMessage = constructResolvingMessage;\r\n        (((error)))[ERROR_ORIGINAL_ERROR] = originalError;\r\n        return error;\r\n    }\r\n    /**\r\n     * @this {?}\r\n     * @param {?} injector\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function addKey(injector, key) {\r\n        this.injectors.push(injector);\r\n        this.keys.push(key);\r\n        // Note: This updated message won't be reflected in the `.stack` property\r\n        this.message = this.constructResolvingMessage(this.keys);\r\n    }\r\n    /**\r\n     * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\r\n     * {\\@link Injector} does not have a {\\@link Provider} for the given key.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * ```typescript\r\n     * class A {\r\n     *   constructor(b:B) {}\r\n     * }\r\n     *\r\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\r\n     * ```\r\n     * @param {?} injector\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function noProviderError(injector, key) {\r\n        return injectionError(injector, key, function (keys) {\r\n            /** @type {?} */\r\n            var first = stringify(keys[0].token);\r\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\r\n        });\r\n    }\r\n    /**\r\n     * Thrown when dependencies form a cycle.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * ```typescript\r\n     * var injector = Injector.resolveAndCreate([\r\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\r\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\r\n     * ]);\r\n     *\r\n     * expect(() => injector.get(\"one\")).toThrowError();\r\n     * ```\r\n     *\r\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\r\n     * @param {?} injector\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function cyclicDependencyError(injector, key) {\r\n        return injectionError(injector, key, function (keys) {\r\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\r\n        });\r\n    }\r\n    /**\r\n     * Thrown when a constructing type returns with an Error.\r\n     *\r\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\r\n     * this object to be instantiated.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * ```typescript\r\n     * class A {\r\n     *   constructor() {\r\n     *     throw new Error('message');\r\n     *   }\r\n     * }\r\n     *\r\n     * var injector = Injector.resolveAndCreate([A]);\r\n     * try {\r\n     *   injector.get(A);\r\n     * } catch (e) {\r\n     *   expect(e instanceof InstantiationError).toBe(true);\r\n     *   expect(e.originalException.message).toEqual(\"message\");\r\n     *   expect(e.originalStack).toBeDefined();\r\n     * }\r\n     * ```\r\n     * @param {?} injector\r\n     * @param {?} originalException\r\n     * @param {?} originalStack\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function instantiationError(injector, originalException, originalStack, key) {\r\n        return injectionError(injector, key, function (keys) {\r\n            /** @type {?} */\r\n            var first = stringify(keys[0].token);\r\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\r\n        }, originalException);\r\n    }\r\n    /**\r\n     * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\r\n     * creation.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * ```typescript\r\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\r\n     * ```\r\n     * @param {?} provider\r\n     * @return {?}\r\n     */\r\n    function invalidProviderError(provider) {\r\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\r\n    }\r\n    /**\r\n     * Thrown when the class has no annotation information.\r\n     *\r\n     * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\r\n     * need to be injected into the constructor.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * ```typescript\r\n     * class A {\r\n     *   constructor(b) {}\r\n     * }\r\n     *\r\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\r\n     * ```\r\n     *\r\n     * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\r\n     *\r\n     * ```typescript\r\n     * class B {}\r\n     *\r\n     * class A {\r\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\r\n     * }\r\n     *\r\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\r\n     * ```\r\n     *\r\n     * @param {?} typeOrFunc\r\n     * @param {?} params\r\n     * @return {?}\r\n     */\r\n    function noAnnotationError(typeOrFunc, params) {\r\n        /** @type {?} */\r\n        var signature = [];\r\n        for (var i = 0, ii = params.length; i < ii; i++) {\r\n            /** @type {?} */\r\n            var parameter = params[i];\r\n            if (!parameter || parameter.length == 0) {\r\n                signature.push('?');\r\n            }\r\n            else {\r\n                signature.push(parameter.map(stringify).join(' '));\r\n            }\r\n        }\r\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\r\n            signature.join(', ') + '). ' +\r\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\r\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\r\n    }\r\n    /**\r\n     * Thrown when getting an object by index.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * ```typescript\r\n     * class A {}\r\n     *\r\n     * var injector = Injector.resolveAndCreate([A]);\r\n     *\r\n     * expect(() => injector.getAt(100)).toThrowError();\r\n     * ```\r\n     *\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function outOfBoundsError(index) {\r\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\r\n    }\r\n    // TODO: add a working example after alpha38 is released\r\n    /**\r\n     * Thrown when a multi provider and a regular provider are bound to the same token.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * ```typescript\r\n     * expect(() => Injector.resolveAndCreate([\r\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\r\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\r\n     * ])).toThrowError();\r\n     * ```\r\n     * @param {?} provider1\r\n     * @param {?} provider2\r\n     * @return {?}\r\n     */\r\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\r\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\r\n     *\r\n     * Keys have:\r\n     * - a system-wide unique `id`.\r\n     * - a `token`.\r\n     *\r\n     * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\r\n     * the\r\n     * injector to store created objects in a more efficient way.\r\n     *\r\n     * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\r\n     * resolving\r\n     * providers.\r\n     *\r\n     * @deprecated No replacement\r\n     * \\@publicApi\r\n     */\r\n    var ReflectiveKey = /** @class */ (function () {\r\n        /**\r\n         * Private\r\n         * @param {?} token\r\n         * @param {?} id\r\n         */\r\n        function ReflectiveKey(token, id) {\r\n            this.token = token;\r\n            this.id = id;\r\n            if (!token) {\r\n                throw new Error('Token must be defined!');\r\n            }\r\n            this.displayName = stringify(this.token);\r\n        }\r\n        /**\r\n         * Retrieves a `Key` for a token.\r\n         * @param {?} token\r\n         * @return {?}\r\n         */\r\n        ReflectiveKey.get = function (token) {\r\n            return _globalKeyRegistry.get(resolveForwardRef(token));\r\n        };\r\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\r\n            /**\r\n             * @return {?} the number of keys registered in the system.\r\n             */\r\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return ReflectiveKey;\r\n    }());\r\n    var KeyRegistry = /** @class */ (function () {\r\n        function KeyRegistry() {\r\n            this._allKeys = new Map();\r\n        }\r\n        /**\r\n         * @param {?} token\r\n         * @return {?}\r\n         */\r\n        KeyRegistry.prototype.get = function (token) {\r\n            if (token instanceof ReflectiveKey)\r\n                return token;\r\n            if (this._allKeys.has(token)) {\r\n                return ((this._allKeys.get(token)));\r\n            }\r\n            /** @type {?} */\r\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\r\n            this._allKeys.set(token, newKey);\r\n            return newKey;\r\n        };\r\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._allKeys.size; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return KeyRegistry;\r\n    }());\r\n    /** @type {?} */\r\n    var _globalKeyRegistry = new KeyRegistry();\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * Provides access to reflection data about symbols. Used internally by Angular\r\n     * to power dependency injection and compilation.\r\n     */\r\n    var Reflector = /** @class */ (function () {\r\n        /**\r\n         * @param {?} reflectionCapabilities\r\n         */\r\n        function Reflector(reflectionCapabilities) {\r\n            this.reflectionCapabilities = reflectionCapabilities;\r\n        }\r\n        /**\r\n         * @param {?} caps\r\n         * @return {?}\r\n         */\r\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\r\n        /**\r\n         * @param {?} type\r\n         * @return {?}\r\n         */\r\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\r\n        /**\r\n         * @param {?} typeOrFunc\r\n         * @return {?}\r\n         */\r\n        Reflector.prototype.parameters = function (typeOrFunc) {\r\n            return this.reflectionCapabilities.parameters(typeOrFunc);\r\n        };\r\n        /**\r\n         * @param {?} typeOrFunc\r\n         * @return {?}\r\n         */\r\n        Reflector.prototype.annotations = function (typeOrFunc) {\r\n            return this.reflectionCapabilities.annotations(typeOrFunc);\r\n        };\r\n        /**\r\n         * @param {?} typeOrFunc\r\n         * @return {?}\r\n         */\r\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\r\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\r\n        };\r\n        /**\r\n         * @param {?} type\r\n         * @param {?} lcProperty\r\n         * @return {?}\r\n         */\r\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\r\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\r\n        };\r\n        /**\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\r\n        /**\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\r\n        /**\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\r\n        /**\r\n         * @param {?} type\r\n         * @return {?}\r\n         */\r\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\r\n        /**\r\n         * @param {?} type\r\n         * @return {?}\r\n         */\r\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\r\n        /**\r\n         * @param {?} name\r\n         * @param {?} moduleUrl\r\n         * @param {?} members\r\n         * @param {?} runtime\r\n         * @return {?}\r\n         */\r\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\r\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\r\n        };\r\n        /**\r\n         * @param {?} identifier\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        Reflector.prototype.resolveEnum = function (identifier, name) {\r\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\r\n        };\r\n        return Reflector;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * The {\\@link Reflector} used internally in Angular to access metadata\r\n     * about symbols.\r\n     * @type {?}\r\n     */\r\n    var reflector = new Reflector(new ReflectionCapabilities());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * `Dependency` is used by the framework to extend DI.\r\n     * This is internal to Angular and should not be used directly.\r\n     */\r\n    var ReflectiveDependency = /** @class */ (function () {\r\n        /**\r\n         * @param {?} key\r\n         * @param {?} optional\r\n         * @param {?} visibility\r\n         */\r\n        function ReflectiveDependency(key, optional, visibility) {\r\n            this.key = key;\r\n            this.optional = optional;\r\n            this.visibility = visibility;\r\n        }\r\n        /**\r\n         * @param {?} key\r\n         * @return {?}\r\n         */\r\n        ReflectiveDependency.fromKey = function (key) {\r\n            return new ReflectiveDependency(key, false, null);\r\n        };\r\n        return ReflectiveDependency;\r\n    }());\r\n    /** @type {?} */\r\n    var _EMPTY_LIST = [];\r\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\r\n        /**\r\n         * @param {?} key\r\n         * @param {?} resolvedFactories\r\n         * @param {?} multiProvider\r\n         */\r\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\r\n            this.key = key;\r\n            this.resolvedFactories = resolvedFactories;\r\n            this.multiProvider = multiProvider;\r\n            this.resolvedFactory = this.resolvedFactories[0];\r\n        }\r\n        return ResolvedReflectiveProvider_;\r\n    }());\r\n    /**\r\n     * An internal resolved representation of a factory function created by resolving `Provider`.\r\n     * \\@publicApi\r\n     */\r\n    var ResolvedReflectiveFactory = /** @class */ (function () {\r\n        /**\r\n         * @param {?} factory\r\n         * @param {?} dependencies\r\n         */\r\n        function ResolvedReflectiveFactory(factory, dependencies) {\r\n            this.factory = factory;\r\n            this.dependencies = dependencies;\r\n        }\r\n        return ResolvedReflectiveFactory;\r\n    }());\r\n    /**\r\n     * Resolve a single provider.\r\n     * @param {?} provider\r\n     * @return {?}\r\n     */\r\n    function resolveReflectiveFactory(provider) {\r\n        /** @type {?} */\r\n        var factoryFn;\r\n        /** @type {?} */\r\n        var resolvedDeps;\r\n        if (provider.useClass) {\r\n            /** @type {?} */\r\n            var useClass = resolveForwardRef(provider.useClass);\r\n            factoryFn = reflector.factory(useClass);\r\n            resolvedDeps = _dependenciesFor(useClass);\r\n        }\r\n        else if (provider.useExisting) {\r\n            factoryFn = function (aliasInstance) { return aliasInstance; };\r\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\r\n        }\r\n        else if (provider.useFactory) {\r\n            factoryFn = provider.useFactory;\r\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\r\n        }\r\n        else {\r\n            factoryFn = function () { return provider.useValue; };\r\n            resolvedDeps = _EMPTY_LIST;\r\n        }\r\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\r\n    }\r\n    /**\r\n     * Converts the `Provider` into `ResolvedProvider`.\r\n     *\r\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\r\n     * syntax.\r\n     * @param {?} provider\r\n     * @return {?}\r\n     */\r\n    function resolveReflectiveProvider(provider) {\r\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\r\n    }\r\n    /**\r\n     * Resolve a list of Providers.\r\n     * @param {?} providers\r\n     * @return {?}\r\n     */\r\n    function resolveReflectiveProviders(providers) {\r\n        /** @type {?} */\r\n        var normalized = _normalizeProviders(providers, []);\r\n        /** @type {?} */\r\n        var resolved = normalized.map(resolveReflectiveProvider);\r\n        /** @type {?} */\r\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\r\n        return Array.from(resolvedProviderMap.values());\r\n    }\r\n    /**\r\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\r\n     * multi providers have been merged.\r\n     * @param {?} providers\r\n     * @param {?} normalizedProvidersMap\r\n     * @return {?}\r\n     */\r\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\r\n        for (var i = 0; i < providers.length; i++) {\r\n            /** @type {?} */\r\n            var provider = providers[i];\r\n            /** @type {?} */\r\n            var existing = normalizedProvidersMap.get(provider.key.id);\r\n            if (existing) {\r\n                if (provider.multiProvider !== existing.multiProvider) {\r\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\r\n                }\r\n                if (provider.multiProvider) {\r\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\r\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\r\n                    }\r\n                }\r\n                else {\r\n                    normalizedProvidersMap.set(provider.key.id, provider);\r\n                }\r\n            }\r\n            else {\r\n                /** @type {?} */\r\n                var resolvedProvider = void 0;\r\n                if (provider.multiProvider) {\r\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\r\n                }\r\n                else {\r\n                    resolvedProvider = provider;\r\n                }\r\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\r\n            }\r\n        }\r\n        return normalizedProvidersMap;\r\n    }\r\n    /**\r\n     * @param {?} providers\r\n     * @param {?} res\r\n     * @return {?}\r\n     */\r\n    function _normalizeProviders(providers, res) {\r\n        providers.forEach(function (b) {\r\n            if (b instanceof Type) {\r\n                res.push({ provide: b, useClass: b });\r\n            }\r\n            else if (b && typeof b == 'object' && (((b))).provide !== undefined) {\r\n                res.push(((b)));\r\n            }\r\n            else if (b instanceof Array) {\r\n                _normalizeProviders(b, res);\r\n            }\r\n            else {\r\n                throw invalidProviderError(b);\r\n            }\r\n        });\r\n        return res;\r\n    }\r\n    /**\r\n     * @param {?} typeOrFunc\r\n     * @param {?=} dependencies\r\n     * @return {?}\r\n     */\r\n    function constructDependencies(typeOrFunc, dependencies) {\r\n        if (!dependencies) {\r\n            return _dependenciesFor(typeOrFunc);\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var params_1 = dependencies.map(function (t) { return [t]; });\r\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} typeOrFunc\r\n     * @return {?}\r\n     */\r\n    function _dependenciesFor(typeOrFunc) {\r\n        /** @type {?} */\r\n        var params = reflector.parameters(typeOrFunc);\r\n        if (!params)\r\n            return [];\r\n        if (params.some(function (p) { return p == null; })) {\r\n            throw noAnnotationError(typeOrFunc, params);\r\n        }\r\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\r\n    }\r\n    /**\r\n     * @param {?} typeOrFunc\r\n     * @param {?} metadata\r\n     * @param {?} params\r\n     * @return {?}\r\n     */\r\n    function _extractToken(typeOrFunc, metadata, params) {\r\n        /** @type {?} */\r\n        var token = null;\r\n        /** @type {?} */\r\n        var optional = false;\r\n        if (!Array.isArray(metadata)) {\r\n            if (metadata instanceof Inject) {\r\n                return _createDependency(metadata.token, optional, null);\r\n            }\r\n            else {\r\n                return _createDependency(metadata, optional, null);\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var visibility = null;\r\n        for (var i = 0; i < metadata.length; ++i) {\r\n            /** @type {?} */\r\n            var paramMetadata = metadata[i];\r\n            if (paramMetadata instanceof Type) {\r\n                token = paramMetadata;\r\n            }\r\n            else if (paramMetadata instanceof Inject) {\r\n                token = paramMetadata.token;\r\n            }\r\n            else if (paramMetadata instanceof Optional) {\r\n                optional = true;\r\n            }\r\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\r\n                visibility = paramMetadata;\r\n            }\r\n            else if (paramMetadata instanceof InjectionToken) {\r\n                token = paramMetadata;\r\n            }\r\n        }\r\n        token = resolveForwardRef(token);\r\n        if (token != null) {\r\n            return _createDependency(token, optional, visibility);\r\n        }\r\n        else {\r\n            throw noAnnotationError(typeOrFunc, params);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} token\r\n     * @param {?} optional\r\n     * @param {?} visibility\r\n     * @return {?}\r\n     */\r\n    function _createDependency(token, optional, visibility) {\r\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    // Threshold for the dynamic version\r\n    /** @type {?} */\r\n    var UNDEFINED = new Object();\r\n    /**\r\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\r\n     * dependencies.\r\n     *\r\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\r\n     * constructor dependencies.\r\n     *\r\n     * In typical use, application code asks for the dependencies in the constructor and they are\r\n     * resolved by the `Injector`.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\r\n     *\r\n     * ```typescript\r\n     * \\@Injectable()\r\n     * class Engine {\r\n     * }\r\n     *\r\n     * \\@Injectable()\r\n     * class Car {\r\n     *   constructor(public engine:Engine) {}\r\n     * }\r\n     *\r\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\r\n     * var car = injector.get(Car);\r\n     * expect(car instanceof Car).toBe(true);\r\n     * expect(car.engine instanceof Engine).toBe(true);\r\n     * ```\r\n     *\r\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\r\n     * resolve all of the object's dependencies automatically.\r\n     *\r\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var ReflectiveInjector = /** @class */ (function () {\r\n        function ReflectiveInjector() {\r\n        }\r\n        /**\r\n         * Turns an array of provider definitions into an array of resolved providers.\r\n         *\r\n         * A resolution is a process of flattening multiple nested arrays and converting individual\r\n         * providers into an array of `ResolvedReflectiveProvider`s.\r\n         *\r\n         * \\@usageNotes\r\n         * ### Example\r\n         *\r\n         * ```typescript\r\n         * \\@Injectable()\r\n         * class Engine {\r\n         * }\r\n         *  /\r\n         * class Car {\r\n         *   constructor(public engine:Engine) {}\r\n         * }\r\n         *\r\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\r\n         *\r\n         * expect(providers.length).toEqual(2);\r\n         *\r\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\r\n         * expect(providers[0].key.displayName).toBe(\"Car\");\r\n         * expect(providers[0].dependencies.length).toEqual(1);\r\n         * expect(providers[0].factory).toBeDefined();\r\n         *\r\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\r\n         * });\r\n         * ```\r\n         *\r\n         * @param {?} providers\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector.resolve = function (providers) {\r\n            return resolveReflectiveProviders(providers);\r\n        };\r\n        /**\r\n         * Resolves an array of providers and creates an injector from those providers.\r\n         *\r\n         * The passed-in providers can be an array of `Type`, `Provider`,\r\n         * or a recursive array of more providers.\r\n         *\r\n         * \\@usageNotes\r\n         * ### Example\r\n         *\r\n         * ```typescript\r\n         * \\@Injectable()\r\n         * class Engine {\r\n         * }\r\n         *  /\r\n         * class Car {\r\n         *   constructor(public engine:Engine) {}\r\n         * }\r\n         *\r\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\r\n         * expect(injector.get(Car) instanceof Car).toBe(true);\r\n         * ```\r\n         * @param {?} providers\r\n         * @param {?=} parent\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\r\n            /** @type {?} */\r\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\r\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\r\n        };\r\n        /**\r\n         * Creates an injector from previously resolved providers.\r\n         *\r\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\r\n         *\r\n         * \\@usageNotes\r\n         * ### Example\r\n         *\r\n         * ```typescript\r\n         * \\@Injectable()\r\n         * class Engine {\r\n         * }\r\n         *  /\r\n         * class Car {\r\n         *   constructor(public engine:Engine) {}\r\n         * }\r\n         *\r\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\r\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\r\n         * expect(injector.get(Car) instanceof Car).toBe(true);\r\n         * ```\r\n         * @param {?} providers\r\n         * @param {?=} parent\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\r\n            return new ReflectiveInjector_(providers, parent);\r\n        };\r\n        return ReflectiveInjector;\r\n    }());\r\n    var ReflectiveInjector_ = /** @class */ (function () {\r\n        /**\r\n         * Private\r\n         * @param {?} _providers\r\n         * @param {?=} _parent\r\n         */\r\n        function ReflectiveInjector_(_providers, _parent) {\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._constructionCounter = 0;\r\n            this._providers = _providers;\r\n            this.parent = _parent || null;\r\n            /** @type {?} */\r\n            var len = _providers.length;\r\n            this.keyIds = new Array(len);\r\n            this.objs = new Array(len);\r\n            for (var i = 0; i < len; i++) {\r\n                this.keyIds[i] = _providers[i].key.id;\r\n                this.objs[i] = UNDEFINED;\r\n            }\r\n        }\r\n        /**\r\n         * @param {?} token\r\n         * @param {?=} notFoundValue\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\r\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\r\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\r\n        };\r\n        /**\r\n         * @param {?} providers\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\r\n            /** @type {?} */\r\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\r\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\r\n        };\r\n        /**\r\n         * @param {?} providers\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\r\n            /** @type {?} */\r\n            var inj = new ReflectiveInjector_(providers);\r\n            (((inj))).parent = this;\r\n            return inj;\r\n        };\r\n        /**\r\n         * @param {?} provider\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\r\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\r\n        };\r\n        /**\r\n         * @param {?} provider\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\r\n            return this._instantiateProvider(provider);\r\n        };\r\n        /**\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\r\n            if (index < 0 || index >= this._providers.length) {\r\n                throw outOfBoundsError(index);\r\n            }\r\n            return this._providers[index];\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} provider\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype._new = function (provider) {\r\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\r\n                throw cyclicDependencyError(this, provider.key);\r\n            }\r\n            return this._instantiateProvider(provider);\r\n        };\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\r\n        /**\r\n         * @private\r\n         * @param {?} provider\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\r\n            if (provider.multiProvider) {\r\n                /** @type {?} */\r\n                var res = new Array(provider.resolvedFactories.length);\r\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\r\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\r\n                }\r\n                return res;\r\n            }\r\n            else {\r\n                return this._instantiate(provider, provider.resolvedFactories[0]);\r\n            }\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} provider\r\n         * @param {?} ResolvedReflectiveFactory\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\r\n            var _this = this;\r\n            /** @type {?} */\r\n            var factory = ResolvedReflectiveFactory$$1.factory;\r\n            /** @type {?} */\r\n            var deps;\r\n            try {\r\n                deps =\r\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\r\n            }\r\n            catch (e) {\r\n                if (e.addKey) {\r\n                    e.addKey(this, provider.key);\r\n                }\r\n                throw e;\r\n            }\r\n            /** @type {?} */\r\n            var obj;\r\n            try {\r\n                obj = factory.apply(void 0, deps);\r\n            }\r\n            catch (e) {\r\n                throw instantiationError(this, e, e.stack, provider.key);\r\n            }\r\n            return obj;\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} dep\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\r\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} key\r\n         * @param {?} visibility\r\n         * @param {?} notFoundValue\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\r\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\r\n                return this;\r\n            }\r\n            if (visibility instanceof Self) {\r\n                return this._getByKeySelf(key, notFoundValue);\r\n            }\r\n            else {\r\n                return this._getByKeyDefault(key, notFoundValue, visibility);\r\n            }\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} keyId\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\r\n            for (var i = 0; i < this.keyIds.length; i++) {\r\n                if (this.keyIds[i] === keyId) {\r\n                    if (this.objs[i] === UNDEFINED) {\r\n                        this.objs[i] = this._new(this._providers[i]);\r\n                    }\r\n                    return this.objs[i];\r\n                }\r\n            }\r\n            return UNDEFINED;\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} key\r\n         * @param {?} notFoundValue\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\r\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\r\n                return notFoundValue;\r\n            }\r\n            else {\r\n                throw noProviderError(this, key);\r\n            }\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} key\r\n         * @param {?} notFoundValue\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\r\n            /** @type {?} */\r\n            var obj = this._getObjByKeyId(key.id);\r\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} key\r\n         * @param {?} notFoundValue\r\n         * @param {?} visibility\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\r\n            /** @type {?} */\r\n            var inj;\r\n            if (visibility instanceof SkipSelf) {\r\n                inj = this.parent;\r\n            }\r\n            else {\r\n                inj = this;\r\n            }\r\n            while (inj instanceof ReflectiveInjector_) {\r\n                /** @type {?} */\r\n                var inj_ = ((inj));\r\n                /** @type {?} */\r\n                var obj = inj_._getObjByKeyId(key.id);\r\n                if (obj !== UNDEFINED)\r\n                    return obj;\r\n                inj = inj_.parent;\r\n            }\r\n            if (inj !== null) {\r\n                return inj.get(key.token, notFoundValue);\r\n            }\r\n            else {\r\n                return this._throwOrNull(key, notFoundValue);\r\n            }\r\n        };\r\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                /** @type {?} */\r\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\r\n                    .join(', ');\r\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\r\n        return ReflectiveInjector_;\r\n    }());\r\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\r\n    /**\r\n     * @param {?} injector\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function _mapProviders(injector, fn) {\r\n        /** @type {?} */\r\n        var res = new Array(injector._providers.length);\r\n        for (var i = 0; i < injector._providers.length; ++i) {\r\n            res[i] = fn(injector.getProviderAtIndex(i));\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    function multicast(subjectOrSubjectFactory, selector) {\r\n        return function multicastOperatorFunction(source) {\r\n            var subjectFactory;\r\n            if (typeof subjectOrSubjectFactory === 'function') {\r\n                subjectFactory = subjectOrSubjectFactory;\r\n            }\r\n            else {\r\n                subjectFactory = function subjectFactory() {\r\n                    return subjectOrSubjectFactory;\r\n                };\r\n            }\r\n            if (typeof selector === 'function') {\r\n                return source.lift(new MulticastOperator(subjectFactory, selector));\r\n            }\r\n            var connectable = Object.create(source, connectableObservableDescriptor);\r\n            connectable.source = source;\r\n            connectable.subjectFactory = subjectFactory;\r\n            return connectable;\r\n        };\r\n    }\r\n    var MulticastOperator = /** @class */ (function () {\r\n        function MulticastOperator(subjectFactory, selector) {\r\n            this.subjectFactory = subjectFactory;\r\n            this.selector = selector;\r\n        }\r\n        MulticastOperator.prototype.call = function (subscriber, source) {\r\n            var selector = this.selector;\r\n            var subject = this.subjectFactory();\r\n            var subscription = selector(subject).subscribe(subscriber);\r\n            subscription.add(source.subscribe(subject));\r\n            return subscription;\r\n        };\r\n        return MulticastOperator;\r\n    }());\r\n    function shareSubjectFactory() {\r\n        return new Subject();\r\n    }\r\n    function share() {\r\n        return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * Determine if the argument is shaped like a Promise\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function isPromise$1(obj) {\r\n        // allow any Promise/A+ compliant thenable.\r\n        // It's up to the caller to ensure that obj.then conforms to the spec\r\n        return !!obj && typeof obj.then === 'function';\r\n    }\r\n    /**\r\n     * Determine if the argument is an Observable\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function isObservable$1(obj) {\r\n        // TODO: use isObservable once we update pass rxjs 6.1\r\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\r\n        return !!obj && typeof obj.subscribe === 'function';\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * A function that will be executed when an application is initialized.\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\r\n    /**\r\n     * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var ApplicationInitStatus = /** @class */ (function () {\r\n        /**\r\n         * @param {?} appInits\r\n         */\r\n        function ApplicationInitStatus(appInits) {\r\n            var _this = this;\r\n            this.appInits = appInits;\r\n            this.initialized = false;\r\n            this.done = false;\r\n            this.donePromise = new Promise(function (res, rej) {\r\n                _this.resolve = res;\r\n                _this.reject = rej;\r\n            });\r\n        }\r\n        /**\r\n         * \\@internal\r\n         * @return {?}\r\n         */\r\n        ApplicationInitStatus.prototype.runInitializers = function () {\r\n            var _this = this;\r\n            if (this.initialized) {\r\n                return;\r\n            }\r\n            /** @type {?} */\r\n            var asyncInitPromises = [];\r\n            /** @type {?} */\r\n            var complete = function () {\r\n                (((_this))).done = true;\r\n                _this.resolve();\r\n            };\r\n            if (this.appInits) {\r\n                for (var i = 0; i < this.appInits.length; i++) {\r\n                    /** @type {?} */\r\n                    var initResult = this.appInits[i]();\r\n                    if (isPromise$1(initResult)) {\r\n                        asyncInitPromises.push(initResult);\r\n                    }\r\n                }\r\n            }\r\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\r\n            if (asyncInitPromises.length === 0) {\r\n                complete();\r\n            }\r\n            this.initialized = true;\r\n        };\r\n        return ApplicationInitStatus;\r\n    }());\r\n    ApplicationInitStatus.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    ApplicationInitStatus.ctorParameters = function () { return [\r\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional }] }\r\n    ]; };\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * A DI Token representing a unique string id assigned to the application by Angular and used\r\n     * primarily for prefixing application attributes and CSS styles when\r\n     * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\r\n     *\r\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\r\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\r\n     * using this token.\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var APP_ID = new InjectionToken('AppId');\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function _appIdRandomProviderFactory() {\r\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\r\n    }\r\n    /**\r\n     * Providers that will generate a random APP_ID_TOKEN.\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var APP_ID_RANDOM_PROVIDER = {\r\n        provide: APP_ID,\r\n        useFactory: _appIdRandomProviderFactory,\r\n        deps: (([])),\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function _randomChar() {\r\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\r\n    }\r\n    /**\r\n     * A function that will be executed when a platform is initialized.\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\r\n    /**\r\n     * A token that indicates an opaque platform id.\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var PLATFORM_ID = new InjectionToken('Platform ID');\r\n    /**\r\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\r\n     * Signature of the callback:\r\n     *\r\n     * `(componentRef: ComponentRef) => void`.\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\r\n    /**\r\n     * A token which indicates the root directory of the application\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    var Console = /** @class */ (function () {\r\n        function Console() {\r\n        }\r\n        /**\r\n         * @param {?} message\r\n         * @return {?}\r\n         */\r\n        Console.prototype.log = function (message) {\r\n            // tslint:disable-next-line:no-console\r\n            console.log(message);\r\n        };\r\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\r\n        /**\r\n         * @param {?} message\r\n         * @return {?}\r\n         */\r\n        Console.prototype.warn = function (message) {\r\n            // tslint:disable-next-line:no-console\r\n            console.warn(message);\r\n        };\r\n        return Console;\r\n    }());\r\n    Console.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function _throwError() {\r\n        throw new Error(\"Runtime compiler is not loaded\");\r\n    }\r\n    /** @type {?} */\r\n    var Compiler_compileModuleSync__PRE_R3__ = ((_throwError));\r\n    /** @type {?} */\r\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\r\n    /** @type {?} */\r\n    var Compiler_compileModuleAsync__PRE_R3__ = ((_throwError));\r\n    /** @type {?} */\r\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\r\n    /** @type {?} */\r\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = ((_throwError));\r\n    /** @type {?} */\r\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\r\n    /** @type {?} */\r\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = ((_throwError));\r\n    /** @type {?} */\r\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\r\n    /**\r\n     * Low-level service for running the angular compiler during runtime\r\n     * to create {\\@link ComponentFactory}s, which\r\n     * can later be used to create and render a Component instance.\r\n     *\r\n     * Each `\\@NgModule` provides an own `Compiler` to its injector,\r\n     * that will use the directives/pipes of the ng module for compilation\r\n     * of components.\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var Compiler = /** @class */ (function () {\r\n        function Compiler() {\r\n            /**\r\n             * Compiles the given NgModule and all of its components. All templates of the components listed\r\n             * in `entryComponents` have to be inlined.\r\n             */\r\n            this.compileModuleSync = Compiler_compileModuleSync;\r\n            /**\r\n             * Compiles the given NgModule and all of its components\r\n             */\r\n            this.compileModuleAsync = Compiler_compileModuleAsync;\r\n            /**\r\n             * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\r\n             */\r\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\r\n            /**\r\n             * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\r\n             */\r\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\r\n        }\r\n        /**\r\n         * Clears all caches.\r\n         * @return {?}\r\n         */\r\n        Compiler.prototype.clearCache = function () { };\r\n        /**\r\n         * Clears the cache for the given component/ngModule.\r\n         * @param {?} type\r\n         * @return {?}\r\n         */\r\n        Compiler.prototype.clearCacheFor = function (type) { };\r\n        /**\r\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\r\n         * @param {?} moduleType\r\n         * @return {?}\r\n         */\r\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\r\n        return Compiler;\r\n    }());\r\n    Compiler.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /**\r\n     * Token to provide CompilerOptions in the platform injector.\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\r\n    /**\r\n     * A factory for creating a Compiler\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var CompilerFactory = /** @class */ (function () {\r\n        function CompilerFactory() {\r\n        }\r\n        return CompilerFactory;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var trace;\r\n    /** @type {?} */\r\n    var events;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function detectWTF() {\r\n        /** @type {?} */\r\n        var wtf = (((_global)))['wtf'];\r\n        if (wtf) {\r\n            trace = wtf['trace'];\r\n            if (trace) {\r\n                events = trace['events'];\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @param {?} signature\r\n     * @param {?=} flags\r\n     * @return {?}\r\n     */\r\n    function createScope(signature, flags) {\r\n        if (flags === void 0) { flags = null; }\r\n        return events.createScope(signature, flags);\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} scope\r\n     * @param {?=} returnValue\r\n     * @return {?}\r\n     */\r\n    function leave(scope, returnValue) {\r\n        trace.leaveScope(scope, returnValue);\r\n        return returnValue;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * True if WTF is enabled.\r\n     * @type {?}\r\n     */\r\n    var wtfEnabled = detectWTF();\r\n    /**\r\n     * @param {?=} arg0\r\n     * @param {?=} arg1\r\n     * @return {?}\r\n     */\r\n    function noopScope(arg0, arg1) {\r\n        return null;\r\n    }\r\n    /**\r\n     * Create trace scope.\r\n     *\r\n     * Scopes must be strictly nested and are analogous to stack frames, but\r\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\r\n     * nesting. You may want to use\r\n     * [Event\r\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\r\n     * as they are defined in WTF.\r\n     *\r\n     * Used to mark scope entry. The return value is used to leave the scope.\r\n     *\r\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\r\n     *\r\n     *     someMethod() {\r\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\r\n     *        // DO SOME WORK HERE\r\n     *        return wtfLeave(s, 123); // Return value 123\r\n     *     }\r\n     *\r\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\r\n     * negatively impact the performance of your application. For this reason we recommend that\r\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\r\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\r\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\r\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\r\n     * an exception is expected during normal execution while profiling.\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\r\n    /**\r\n     * Used to mark end of Scope.\r\n     *\r\n     * - `scope` to end.\r\n     * - `returnValue` (optional) to be passed to the WTF.\r\n     *\r\n     * Returns the `returnValue for easy chaining.\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * An injectable service for executing work inside or outside of the Angular zone.\r\n     *\r\n     * The most common use of this service is to optimize performance when starting a work consisting of\r\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\r\n     * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\r\n     * can reenter the Angular zone via {\\@link #run}.\r\n     *\r\n     * <!-- TODO: add/fix links to:\r\n     *   - docs explaining zones and the use of zones in Angular and change-detection\r\n     *   - link to runOutsideAngular/run (throughout this file!)\r\n     *   -->\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * ```\r\n     * import {Component, NgZone} from '\\@angular/core';\r\n     * import {NgIf} from '\\@angular/common';\r\n     *\r\n     * \\@Component({\r\n     *   selector: 'ng-zone-demo',\r\n     *   template: `\r\n     *     <h2>Demo: NgZone</h2>\r\n     *\r\n     *     <p>Progress: {{progress}}%</p>\r\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\r\n     *\r\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\r\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\r\n     *   `,\r\n     * })\r\n     * export class NgZoneDemo {\r\n     *   progress: number = 0;\r\n     *   label: string;\r\n     *\r\n     *   constructor(private _ngZone: NgZone) {}\r\n     *\r\n     *   // Loop inside the Angular zone\r\n     *   // so the UI DOES refresh after each setTimeout cycle\r\n     *   processWithinAngularZone() {\r\n     *     this.label = 'inside';\r\n     *     this.progress = 0;\r\n     *     this._increaseProgress(() => console.log('Inside Done!'));\r\n     *   }\r\n     *\r\n     *   // Loop outside of the Angular zone\r\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\r\n     *   processOutsideOfAngularZone() {\r\n     *     this.label = 'outside';\r\n     *     this.progress = 0;\r\n     *     this._ngZone.runOutsideAngular(() => {\r\n     *       this._increaseProgress(() => {\r\n     *         // reenter the Angular zone and display done\r\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\r\n     *       });\r\n     *     });\r\n     *   }\r\n     *\r\n     *   _increaseProgress(doneCallback: () => void) {\r\n     *     this.progress += 1;\r\n     *     console.log(`Current progress: ${this.progress}%`);\r\n     *\r\n     *     if (this.progress < 100) {\r\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\r\n     *     } else {\r\n     *       doneCallback();\r\n     *     }\r\n     *   }\r\n     * }\r\n     * ```\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var NgZone = /** @class */ (function () {\r\n        /**\r\n         * @param {?} __0\r\n         */\r\n        function NgZone(_b) {\r\n            var _c = _b.enableLongStackTrace, enableLongStackTrace = _c === void 0 ? false : _c;\r\n            this.hasPendingMicrotasks = false;\r\n            this.hasPendingMacrotasks = false;\r\n            /**\r\n             * Whether there are no outstanding microtasks or macrotasks.\r\n             */\r\n            this.isStable = true;\r\n            /**\r\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\r\n             */\r\n            this.onUnstable = new EventEmitter(false);\r\n            /**\r\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\r\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\r\n             * For this reason this event can fire multiple times per VM Turn.\r\n             */\r\n            this.onMicrotaskEmpty = new EventEmitter(false);\r\n            /**\r\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\r\n             * implies we are about to relinquish VM turn.\r\n             * This event gets called just once.\r\n             */\r\n            this.onStable = new EventEmitter(false);\r\n            /**\r\n             * Notifies that an error has been delivered.\r\n             */\r\n            this.onError = new EventEmitter(false);\r\n            if (typeof Zone == 'undefined') {\r\n                throw new Error(\"In this configuration Angular requires Zone.js\");\r\n            }\r\n            Zone.assertZonePatched();\r\n            /** @type {?} */\r\n            var self = ((((this))));\r\n            self._nesting = 0;\r\n            self._outer = self._inner = Zone.current;\r\n            if ((((Zone)))['wtfZoneSpec']) {\r\n                self._inner = self._inner.fork((((Zone)))['wtfZoneSpec']);\r\n            }\r\n            if ((((Zone)))['TaskTrackingZoneSpec']) {\r\n                self._inner = self._inner.fork(new ((((((Zone)))['TaskTrackingZoneSpec']))));\r\n            }\r\n            if (enableLongStackTrace && (((Zone)))['longStackTraceZoneSpec']) {\r\n                self._inner = self._inner.fork((((Zone)))['longStackTraceZoneSpec']);\r\n            }\r\n            forkInnerZoneWithAngularBehavior(self);\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        NgZone.assertInAngularZone = function () {\r\n            if (!NgZone.isInAngularZone()) {\r\n                throw new Error('Expected to be in Angular Zone, but it is not!');\r\n            }\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        NgZone.assertNotInAngularZone = function () {\r\n            if (NgZone.isInAngularZone()) {\r\n                throw new Error('Expected to not be in Angular Zone, but it is!');\r\n            }\r\n        };\r\n        /**\r\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\r\n         * the function.\r\n         *\r\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\r\n         * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\r\n         *\r\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\r\n         * within the Angular zone.\r\n         *\r\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\r\n         * @template T\r\n         * @param {?} fn\r\n         * @param {?=} applyThis\r\n         * @param {?=} applyArgs\r\n         * @return {?}\r\n         */\r\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\r\n            return (((((((this)))))._inner.run(fn, applyThis, applyArgs)));\r\n        };\r\n        /**\r\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\r\n         * returned by the function.\r\n         *\r\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\r\n         * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\r\n         *\r\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\r\n         * within the Angular zone.\r\n         *\r\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\r\n         * @template T\r\n         * @param {?} fn\r\n         * @param {?=} applyThis\r\n         * @param {?=} applyArgs\r\n         * @param {?=} name\r\n         * @return {?}\r\n         */\r\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\r\n            /** @type {?} */\r\n            var zone = (((((this)))))._inner;\r\n            /** @type {?} */\r\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$2, noop$2);\r\n            try {\r\n                return ((zone.runTask(task, applyThis, applyArgs)));\r\n            }\r\n            finally {\r\n                zone.cancelTask(task);\r\n            }\r\n        };\r\n        /**\r\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\r\n         * rethrown.\r\n         * @template T\r\n         * @param {?} fn\r\n         * @param {?=} applyThis\r\n         * @param {?=} applyArgs\r\n         * @return {?}\r\n         */\r\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\r\n            return (((((((this)))))._inner.runGuarded(fn, applyThis, applyArgs)));\r\n        };\r\n        /**\r\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\r\n         * the function.\r\n         *\r\n         * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\r\n         * work that\r\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\r\n         *\r\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\r\n         * outside of the Angular zone.\r\n         *\r\n         * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\r\n         * @template T\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        NgZone.prototype.runOutsideAngular = function (fn) {\r\n            return (((((((this)))))._outer.run(fn)));\r\n        };\r\n        return NgZone;\r\n    }());\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function noop$2() { }\r\n    /** @type {?} */\r\n    var EMPTY_PAYLOAD = {};\r\n    /**\r\n     * @param {?} zone\r\n     * @return {?}\r\n     */\r\n    function checkStable(zone) {\r\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\r\n            try {\r\n                zone._nesting++;\r\n                zone.onMicrotaskEmpty.emit(null);\r\n            }\r\n            finally {\r\n                zone._nesting--;\r\n                if (!zone.hasPendingMicrotasks) {\r\n                    try {\r\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\r\n                    }\r\n                    finally {\r\n                        zone.isStable = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} zone\r\n     * @return {?}\r\n     */\r\n    function forkInnerZoneWithAngularBehavior(zone) {\r\n        zone._inner = zone._inner.fork({\r\n            name: 'angular',\r\n            properties: (({ 'isAngularZone': true })),\r\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\r\n                try {\r\n                    onEnter(zone);\r\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\r\n                }\r\n                finally {\r\n                    onLeave(zone);\r\n                }\r\n            },\r\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\r\n                try {\r\n                    onEnter(zone);\r\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\r\n                }\r\n                finally {\r\n                    onLeave(zone);\r\n                }\r\n            },\r\n            onHasTask: function (delegate, current, target, hasTaskState) {\r\n                delegate.hasTask(target, hasTaskState);\r\n                if (current === target) {\r\n                    // We are only interested in hasTask events which originate from our zone\r\n                    // (A child hasTask event is not interesting to us)\r\n                    if (hasTaskState.change == 'microTask') {\r\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\r\n                        checkStable(zone);\r\n                    }\r\n                    else if (hasTaskState.change == 'macroTask') {\r\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\r\n                    }\r\n                }\r\n            },\r\n            onHandleError: function (delegate, current, target, error) {\r\n                delegate.handleError(target, error);\r\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} zone\r\n     * @return {?}\r\n     */\r\n    function onEnter(zone) {\r\n        zone._nesting++;\r\n        if (zone.isStable) {\r\n            zone.isStable = false;\r\n            zone.onUnstable.emit(null);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} zone\r\n     * @return {?}\r\n     */\r\n    function onLeave(zone) {\r\n        zone._nesting--;\r\n        checkStable(zone);\r\n    }\r\n    /**\r\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\r\n     * to framework to perform rendering.\r\n     */\r\n    var NoopNgZone = /** @class */ (function () {\r\n        function NoopNgZone() {\r\n            this.hasPendingMicrotasks = false;\r\n            this.hasPendingMacrotasks = false;\r\n            this.isStable = true;\r\n            this.onUnstable = new EventEmitter();\r\n            this.onMicrotaskEmpty = new EventEmitter();\r\n            this.onStable = new EventEmitter();\r\n            this.onError = new EventEmitter();\r\n        }\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\r\n        /**\r\n         * @template T\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\r\n        return NoopNgZone;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * The Testability service provides testing hooks that can be accessed from\r\n     * the browser and by services such as Protractor. Each bootstrapped Angular\r\n     * application on the page will have an instance of Testability.\r\n     * \\@publicApi\r\n     */\r\n    var Testability = /** @class */ (function () {\r\n        /**\r\n         * @param {?} _ngZone\r\n         */\r\n        function Testability(_ngZone) {\r\n            var _this = this;\r\n            this._ngZone = _ngZone;\r\n            this._pendingCount = 0;\r\n            this._isZoneStable = true;\r\n            /**\r\n             * Whether any work was done since the last 'whenStable' callback. This is\r\n             * useful to detect if this could have potentially destabilized another\r\n             * component while it is stabilizing.\r\n             * \\@internal\r\n             */\r\n            this._didWork = false;\r\n            this._callbacks = [];\r\n            this.taskTrackingZone = null;\r\n            this._watchAngularEvents();\r\n            _ngZone.run(function () {\r\n                _this.taskTrackingZone =\r\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\r\n            });\r\n        }\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        Testability.prototype._watchAngularEvents = function () {\r\n            var _this = this;\r\n            this._ngZone.onUnstable.subscribe({\r\n                next: function () {\r\n                    _this._didWork = true;\r\n                    _this._isZoneStable = false;\r\n                }\r\n            });\r\n            this._ngZone.runOutsideAngular(function () {\r\n                _this._ngZone.onStable.subscribe({\r\n                    next: function () {\r\n                        NgZone.assertNotInAngularZone();\r\n                        scheduleMicroTask(function () {\r\n                            _this._isZoneStable = true;\r\n                            _this._runCallbacksIfReady();\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Increases the number of pending request\r\n         * @deprecated pending requests are now tracked with zones.\r\n         * @return {?}\r\n         */\r\n        Testability.prototype.increasePendingRequestCount = function () {\r\n            this._pendingCount += 1;\r\n            this._didWork = true;\r\n            return this._pendingCount;\r\n        };\r\n        /**\r\n         * Decreases the number of pending request\r\n         * @deprecated pending requests are now tracked with zones\r\n         * @return {?}\r\n         */\r\n        Testability.prototype.decreasePendingRequestCount = function () {\r\n            this._pendingCount -= 1;\r\n            if (this._pendingCount < 0) {\r\n                throw new Error('pending async requests below zero');\r\n            }\r\n            this._runCallbacksIfReady();\r\n            return this._pendingCount;\r\n        };\r\n        /**\r\n         * Whether an associated application is stable\r\n         * @return {?}\r\n         */\r\n        Testability.prototype.isStable = function () {\r\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\r\n        };\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        Testability.prototype._runCallbacksIfReady = function () {\r\n            var _this = this;\r\n            if (this.isStable()) {\r\n                // Schedules the call backs in a new frame so that it is always async.\r\n                scheduleMicroTask(function () {\r\n                    while (_this._callbacks.length !== 0) {\r\n                        /** @type {?} */\r\n                        var cb = ((_this._callbacks.pop()));\r\n                        clearTimeout(cb.timeoutId);\r\n                        cb.doneCb(_this._didWork);\r\n                    }\r\n                    _this._didWork = false;\r\n                });\r\n            }\r\n            else {\r\n                // Still not stable, send updates.\r\n                /** @type {?} */\r\n                var pending_1 = this.getPendingTasks();\r\n                this._callbacks = this._callbacks.filter(function (cb) {\r\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\r\n                        clearTimeout(cb.timeoutId);\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                this._didWork = true;\r\n            }\r\n        };\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        Testability.prototype.getPendingTasks = function () {\r\n            if (!this.taskTrackingZone) {\r\n                return [];\r\n            }\r\n            // Copy the tasks data so that we don't leak tasks.\r\n            return this.taskTrackingZone.macroTasks.map(function (t) {\r\n                return {\r\n                    source: t.source,\r\n                    // From TaskTrackingZone:\r\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\r\n                    creationLocation: (((((t))).creationLocation)),\r\n                    data: t.data\r\n                };\r\n            });\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} cb\r\n         * @param {?=} timeout\r\n         * @param {?=} updateCb\r\n         * @return {?}\r\n         */\r\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\r\n            var _this = this;\r\n            /** @type {?} */\r\n            var timeoutId = -1;\r\n            if (timeout && timeout > 0) {\r\n                timeoutId = setTimeout(function () {\r\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\r\n                    cb(_this._didWork, _this.getPendingTasks());\r\n                }, timeout);\r\n            }\r\n            this._callbacks.push((({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb })));\r\n        };\r\n        /**\r\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\r\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\r\n         *\r\n         * @param {?} doneCb The callback to invoke when Angular is stable or the timeout expires\r\n         *    whichever comes first.\r\n         * @param {?=} timeout Optional. The maximum time to wait for Angular to become stable. If not\r\n         *    specified, whenStable() will wait forever.\r\n         * @param {?=} updateCb Optional. If specified, this callback will be invoked whenever the set of\r\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\r\n         *    and no further updates will be issued.\r\n         * @return {?}\r\n         */\r\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\r\n            if (updateCb && !this.taskTrackingZone) {\r\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\r\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\r\n            }\r\n            // These arguments are 'Function' above to keep the public API simple.\r\n            this.addCallback(((doneCb)), timeout, ((updateCb)));\r\n            this._runCallbacksIfReady();\r\n        };\r\n        /**\r\n         * Get the number of pending requests\r\n         * @deprecated pending requests are now tracked with zones\r\n         * @return {?}\r\n         */\r\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\r\n        /**\r\n         * Find providers by name\r\n         * @param {?} using The root element to search from\r\n         * @param {?} provider The name of binding variable\r\n         * @param {?} exactMatch Whether using exactMatch\r\n         * @return {?}\r\n         */\r\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\r\n            // TODO(juliemr): implement.\r\n            return [];\r\n        };\r\n        return Testability;\r\n    }());\r\n    Testability.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    Testability.ctorParameters = function () { return [\r\n        { type: NgZone }\r\n    ]; };\r\n    /**\r\n     * A global registry of {\\@link Testability} instances for specific elements.\r\n     * \\@publicApi\r\n     */\r\n    var TestabilityRegistry = /** @class */ (function () {\r\n        function TestabilityRegistry() {\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._applications = new Map();\r\n            _testabilityGetter.addToWindow(this);\r\n        }\r\n        /**\r\n         * Registers an application with a testability hook so that it can be tracked\r\n         * @param {?} token token of application, root element\r\n         * @param {?} testability Testability hook\r\n         * @return {?}\r\n         */\r\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\r\n            this._applications.set(token, testability);\r\n        };\r\n        /**\r\n         * Unregisters an application.\r\n         * @param {?} token token of application, root element\r\n         * @return {?}\r\n         */\r\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\r\n        /**\r\n         * Unregisters all applications\r\n         * @return {?}\r\n         */\r\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\r\n        /**\r\n         * Get a testability hook associated with the application\r\n         * @param {?} elem root element\r\n         * @return {?}\r\n         */\r\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\r\n        /**\r\n         * Get all registered testabilities\r\n         * @return {?}\r\n         */\r\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\r\n        /**\r\n         * Get all registered applications(root elements)\r\n         * @return {?}\r\n         */\r\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\r\n        /**\r\n         * Find testability of a node in the Tree\r\n         * @param {?} elem node\r\n         * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\r\n         * current node\r\n         * @return {?}\r\n         */\r\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\r\n            if (findInAncestors === void 0) { findInAncestors = true; }\r\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\r\n        };\r\n        return TestabilityRegistry;\r\n    }());\r\n    TestabilityRegistry.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    TestabilityRegistry.ctorParameters = function () { return []; };\r\n    var _NoopGetTestability = /** @class */ (function () {\r\n        function _NoopGetTestability() {\r\n        }\r\n        /**\r\n         * @param {?} registry\r\n         * @return {?}\r\n         */\r\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\r\n        /**\r\n         * @param {?} registry\r\n         * @param {?} elem\r\n         * @param {?} findInAncestors\r\n         * @return {?}\r\n         */\r\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\r\n            return null;\r\n        };\r\n        return _NoopGetTestability;\r\n    }());\r\n    /**\r\n     * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\r\n     * \\@publicApi\r\n     * @param {?} getter\r\n     * @return {?}\r\n     */\r\n    function setTestabilityGetter(getter) {\r\n        _testabilityGetter = getter;\r\n    }\r\n    /** @type {?} */\r\n    var _testabilityGetter = new _NoopGetTestability();\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var _platform;\r\n    /** @type {?} */\r\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\r\n    /**\r\n     * @template M\r\n     * @param {?} injector\r\n     * @param {?} options\r\n     * @param {?} moduleType\r\n     * @return {?}\r\n     */\r\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\r\n        /** @type {?} */\r\n        var compilerFactory = injector.get(CompilerFactory);\r\n        /** @type {?} */\r\n        var compiler = compilerFactory.createCompiler([options]);\r\n        return compiler.compileModuleAsync(moduleType);\r\n    }\r\n    /** @type {?} */\r\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\r\n    /**\r\n     * A token for third-party components that can register themselves with NgProbe.\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var NgProbeToken = /** @class */ (function () {\r\n        /**\r\n         * @param {?} name\r\n         * @param {?} token\r\n         */\r\n        function NgProbeToken(name, token) {\r\n            this.name = name;\r\n            this.token = token;\r\n        }\r\n        return NgProbeToken;\r\n    }());\r\n    /**\r\n     * Creates a platform.\r\n     * Platforms have to be eagerly created via this function.\r\n     *\r\n     * \\@publicApi\r\n     * @param {?} injector\r\n     * @return {?}\r\n     */\r\n    function createPlatform(injector) {\r\n        if (_platform && !_platform.destroyed &&\r\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\r\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\r\n        }\r\n        _platform = injector.get(PlatformRef);\r\n        /** @type {?} */\r\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\r\n        if (inits)\r\n            inits.forEach(function (init) { return init(); });\r\n        return _platform;\r\n    }\r\n    /**\r\n     * Creates a factory for a platform\r\n     *\r\n     * \\@publicApi\r\n     * @param {?} parentPlatformFactory\r\n     * @param {?} name\r\n     * @param {?=} providers\r\n     * @return {?}\r\n     */\r\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\r\n        if (providers === void 0) { providers = []; }\r\n        /** @type {?} */\r\n        var desc = \"Platform: \" + name;\r\n        /** @type {?} */\r\n        var marker = new InjectionToken(desc);\r\n        return function (extraProviders) {\r\n            if (extraProviders === void 0) { extraProviders = []; }\r\n            /** @type {?} */\r\n            var platform = getPlatform();\r\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\r\n                if (parentPlatformFactory) {\r\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\r\n                }\r\n                else {\r\n                    /** @type {?} */\r\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\r\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\r\n                }\r\n            }\r\n            return assertPlatform(marker);\r\n        };\r\n    }\r\n    /**\r\n     * Checks that there currently is a platform which contains the given token as a provider.\r\n     *\r\n     * \\@publicApi\r\n     * @param {?} requiredToken\r\n     * @return {?}\r\n     */\r\n    function assertPlatform(requiredToken) {\r\n        /** @type {?} */\r\n        var platform = getPlatform();\r\n        if (!platform) {\r\n            throw new Error('No platform exists!');\r\n        }\r\n        if (!platform.injector.get(requiredToken, null)) {\r\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\r\n        }\r\n        return platform;\r\n    }\r\n    /**\r\n     * Returns the current platform.\r\n     *\r\n     * \\@publicApi\r\n     * @return {?}\r\n     */\r\n    function getPlatform() {\r\n        return _platform && !_platform.destroyed ? _platform : null;\r\n    }\r\n    /**\r\n     * The Angular platform is the entry point for Angular on a web page. Each page\r\n     * has exactly one platform, and services (such as reflection) which are common\r\n     * to every Angular application running on the page are bound in its scope.\r\n     *\r\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\r\n     * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var PlatformRef = /** @class */ (function () {\r\n        /**\r\n         * \\@internal\r\n         * @param {?} _injector\r\n         */\r\n        function PlatformRef(_injector) {\r\n            this._injector = _injector;\r\n            this._modules = [];\r\n            this._destroyListeners = [];\r\n            this._destroyed = false;\r\n        }\r\n        /**\r\n         * Creates an instance of an `\\@NgModule` for the given platform\r\n         * for offline compilation.\r\n         *\r\n         * \\@usageNotes\r\n         * ### Simple Example\r\n         *\r\n         * ```typescript\r\n         * my_module.ts:\r\n         *\r\n         * \\@NgModule({\r\n         *   imports: [BrowserModule]\r\n         * })\r\n         * class MyModule {}\r\n         *\r\n         * main.ts:\r\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\r\n         * import {platformBrowser} from '\\@angular/platform-browser';\r\n         *\r\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\r\n         * ```\r\n         * @template M\r\n         * @param {?} moduleFactory\r\n         * @param {?=} options\r\n         * @return {?}\r\n         */\r\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\r\n            var _this = this;\r\n            // Note: We need to create the NgZone _before_ we instantiate the module,\r\n            // as instantiating the module creates some providers eagerly.\r\n            // So we create a mini parent injector that just contains the new NgZone and\r\n            // pass that as parent to the NgModuleFactory.\r\n            /** @type {?} */\r\n            var ngZoneOption = options ? options.ngZone : undefined;\r\n            /** @type {?} */\r\n            var ngZone = getNgZone(ngZoneOption);\r\n            /** @type {?} */\r\n            var providers = [{ provide: NgZone, useValue: ngZone }];\r\n            // Attention: Don't use ApplicationRef.run here,\r\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\r\n            return ngZone.run(function () {\r\n                /** @type {?} */\r\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\r\n                /** @type {?} */\r\n                var moduleRef = ((moduleFactory.create(ngZoneInjector)));\r\n                /** @type {?} */\r\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\r\n                if (!exceptionHandler) {\r\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\r\n                }\r\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\r\n                ((ngZone)).runOutsideAngular(function () { return ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\r\n                return _callAndReportToErrorHandler(exceptionHandler, ((ngZone)), function () {\r\n                    /** @type {?} */\r\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\r\n                    initStatus.runInitializers();\r\n                    return initStatus.donePromise.then(function () {\r\n                        _this._moduleDoBootstrap(moduleRef);\r\n                        return moduleRef;\r\n                    });\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\r\n         *\r\n         * \\@usageNotes\r\n         * ### Simple Example\r\n         *\r\n         * ```typescript\r\n         * \\@NgModule({\r\n         *   imports: [BrowserModule]\r\n         * })\r\n         * class MyModule {}\r\n         *\r\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\r\n         * ```\r\n         *\r\n         * @template M\r\n         * @param {?} moduleType\r\n         * @param {?=} compilerOptions\r\n         * @return {?}\r\n         */\r\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\r\n            var _this = this;\r\n            if (compilerOptions === void 0) { compilerOptions = []; }\r\n            /** @type {?} */\r\n            var options = optionsReducer({}, compilerOptions);\r\n            return compileNgModuleFactory(this.injector, options, moduleType)\r\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} moduleRef\r\n         * @return {?}\r\n         */\r\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\r\n            /** @type {?} */\r\n            var appRef = ((moduleRef.injector.get(ApplicationRef)));\r\n            if (moduleRef._bootstrapComponents.length > 0) {\r\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\r\n            }\r\n            else if (moduleRef.instance.ngDoBootstrap) {\r\n                moduleRef.instance.ngDoBootstrap(appRef);\r\n            }\r\n            else {\r\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\r\n                    \"Please define one of these.\");\r\n            }\r\n            this._modules.push(moduleRef);\r\n        };\r\n        /**\r\n         * Register a listener to be called when the platform is disposed.\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\r\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\r\n            /**\r\n             * Retrieve the platform {\\@link Injector}, which is the parent injector for\r\n             * every Angular application on the page and provides singleton providers.\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._injector; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Destroy the Angular platform and all Angular applications on the page.\r\n         * @return {?}\r\n         */\r\n        PlatformRef.prototype.destroy = function () {\r\n            if (this._destroyed) {\r\n                throw new Error('The platform has already been destroyed!');\r\n            }\r\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\r\n            this._destroyListeners.forEach(function (listener) { return listener(); });\r\n            this._destroyed = true;\r\n        };\r\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._destroyed; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return PlatformRef;\r\n    }());\r\n    PlatformRef.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    PlatformRef.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    /**\r\n     * @param {?=} ngZoneOption\r\n     * @return {?}\r\n     */\r\n    function getNgZone(ngZoneOption) {\r\n        /** @type {?} */\r\n        var ngZone;\r\n        if (ngZoneOption === 'noop') {\r\n            ngZone = new NoopNgZone();\r\n        }\r\n        else {\r\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\r\n                new NgZone({ enableLongStackTrace: isDevMode() });\r\n        }\r\n        return ngZone;\r\n    }\r\n    /**\r\n     * @param {?} errorHandler\r\n     * @param {?} ngZone\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\r\n        try {\r\n            /** @type {?} */\r\n            var result = callback();\r\n            if (isPromise$1(result)) {\r\n                return result.catch(function (e) {\r\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\r\n                    // rethrow as the exception handler might not do it\r\n                    throw e;\r\n                });\r\n            }\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\r\n            // rethrow as the exception handler might not do it\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} dst\r\n     * @param {?} objs\r\n     * @return {?}\r\n     */\r\n    function optionsReducer(dst, objs) {\r\n        if (Array.isArray(objs)) {\r\n            dst = objs.reduce(optionsReducer, dst);\r\n        }\r\n        else {\r\n            dst = Object.assign({}, dst, (((objs))));\r\n        }\r\n        return dst;\r\n    }\r\n    /**\r\n     * A reference to an Angular application running on a page.\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var ApplicationRef = /** @class */ (function () {\r\n        /**\r\n         * \\@internal\r\n         * @param {?} _zone\r\n         * @param {?} _console\r\n         * @param {?} _injector\r\n         * @param {?} _exceptionHandler\r\n         * @param {?} _componentFactoryResolver\r\n         * @param {?} _initStatus\r\n         */\r\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\r\n            var _this = this;\r\n            this._zone = _zone;\r\n            this._console = _console;\r\n            this._injector = _injector;\r\n            this._exceptionHandler = _exceptionHandler;\r\n            this._componentFactoryResolver = _componentFactoryResolver;\r\n            this._initStatus = _initStatus;\r\n            this._bootstrapListeners = [];\r\n            this._views = [];\r\n            this._runningTick = false;\r\n            this._enforceNoNewChanges = false;\r\n            this._stable = true;\r\n            /**\r\n             * Get a list of component types registered to this application.\r\n             * This list is populated even before the component is created.\r\n             */\r\n            this.componentTypes = [];\r\n            /**\r\n             * Get a list of components registered to this application.\r\n             */\r\n            this.components = [];\r\n            this._enforceNoNewChanges = isDevMode();\r\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\r\n            /** @type {?} */\r\n            var isCurrentlyStable = new Observable(function (observer) {\r\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\r\n                    !_this._zone.hasPendingMicrotasks;\r\n                _this._zone.runOutsideAngular(function () {\r\n                    observer.next(_this._stable);\r\n                    observer.complete();\r\n                });\r\n            });\r\n            /** @type {?} */\r\n            var isStable = new Observable(function (observer) {\r\n                // Create the subscription to onStable outside the Angular Zone so that\r\n                // the callback is run outside the Angular Zone.\r\n                /** @type {?} */\r\n                var stableSub;\r\n                _this._zone.runOutsideAngular(function () {\r\n                    stableSub = _this._zone.onStable.subscribe(function () {\r\n                        NgZone.assertNotInAngularZone();\r\n                        // Check whether there are no pending macro/micro tasks in the next tick\r\n                        // to allow for NgZone to update the state.\r\n                        scheduleMicroTask(function () {\r\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\r\n                                !_this._zone.hasPendingMicrotasks) {\r\n                                _this._stable = true;\r\n                                observer.next(true);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                /** @type {?} */\r\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\r\n                    NgZone.assertInAngularZone();\r\n                    if (_this._stable) {\r\n                        _this._stable = false;\r\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\r\n                    }\r\n                });\r\n                return function () {\r\n                    stableSub.unsubscribe();\r\n                    unstableSub.unsubscribe();\r\n                };\r\n            });\r\n            (((this))).isStable =\r\n                merge$1(isCurrentlyStable, isStable.pipe(share()));\r\n        }\r\n        /**\r\n         * Bootstrap a new component at the root level of the application.\r\n         *\r\n         * \\@usageNotes\r\n         * ### Bootstrap process\r\n         *\r\n         * When bootstrapping a new root component into an application, Angular mounts the\r\n         * specified application component onto DOM elements identified by the componentType's\r\n         * selector and kicks off automatic change detection to finish initializing the component.\r\n         *\r\n         * Optionally, a component can be mounted onto a DOM element that does not match the\r\n         * componentType's selector.\r\n         *\r\n         * ### Example\r\n         * {\\@example core/ts/platform/platform.ts region='longform'}\r\n         * @template C\r\n         * @param {?} componentOrFactory\r\n         * @param {?=} rootSelectorOrNode\r\n         * @return {?}\r\n         */\r\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\r\n            var _this = this;\r\n            if (!this._initStatus.done) {\r\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\r\n            }\r\n            /** @type {?} */\r\n            var componentFactory;\r\n            if (componentOrFactory instanceof ComponentFactory) {\r\n                componentFactory = componentOrFactory;\r\n            }\r\n            else {\r\n                componentFactory =\r\n                    ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\r\n            }\r\n            this.componentTypes.push(componentFactory.componentType);\r\n            // Create a factory associated with the current module if it's not bound to some other\r\n            /** @type {?} */\r\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\r\n                null :\r\n                this._injector.get(NgModuleRef);\r\n            /** @type {?} */\r\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\r\n            /** @type {?} */\r\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\r\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\r\n            /** @type {?} */\r\n            var testability = compRef.injector.get(Testability, null);\r\n            if (testability) {\r\n                compRef.injector.get(TestabilityRegistry)\r\n                    .registerApplication(compRef.location.nativeElement, testability);\r\n            }\r\n            this._loadComponent(compRef);\r\n            if (isDevMode()) {\r\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\r\n            }\r\n            return compRef;\r\n        };\r\n        /**\r\n         * Invoke this method to explicitly process change detection and its side-effects.\r\n         *\r\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\r\n         * further changes are detected. If additional changes are picked up during this second cycle,\r\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\r\n         * pass.\r\n         * In this case, Angular throws an error, since an Angular application can only have one change\r\n         * detection pass during which all change detection must complete.\r\n         * @return {?}\r\n         */\r\n        ApplicationRef.prototype.tick = function () {\r\n            var _this = this;\r\n            if (this._runningTick) {\r\n                throw new Error('ApplicationRef.tick is called recursively');\r\n            }\r\n            /** @type {?} */\r\n            var scope = ApplicationRef._tickScope();\r\n            try {\r\n                this._runningTick = true;\r\n                this._views.forEach(function (view) { return view.detectChanges(); });\r\n                if (this._enforceNoNewChanges) {\r\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\r\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\r\n            }\r\n            finally {\r\n                this._runningTick = false;\r\n                wtfLeave(scope);\r\n            }\r\n        };\r\n        /**\r\n         * Attaches a view so that it will be dirty checked.\r\n         * The view will be automatically detached when it is destroyed.\r\n         * This will throw if the view is already attached to a ViewContainer.\r\n         * @param {?} viewRef\r\n         * @return {?}\r\n         */\r\n        ApplicationRef.prototype.attachView = function (viewRef) {\r\n            /** @type {?} */\r\n            var view = (((viewRef)));\r\n            this._views.push(view);\r\n            view.attachToAppRef(this);\r\n        };\r\n        /**\r\n         * Detaches a view from dirty checking again.\r\n         * @param {?} viewRef\r\n         * @return {?}\r\n         */\r\n        ApplicationRef.prototype.detachView = function (viewRef) {\r\n            /** @type {?} */\r\n            var view = (((viewRef)));\r\n            remove(this._views, view);\r\n            view.detachFromAppRef();\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} componentRef\r\n         * @return {?}\r\n         */\r\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\r\n            this.attachView(componentRef.hostView);\r\n            this.tick();\r\n            this.components.push(componentRef);\r\n            // Get the listeners lazily to prevent DI cycles.\r\n            /** @type {?} */\r\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\r\n            listeners.forEach(function (listener) { return listener(componentRef); });\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} componentRef\r\n         * @return {?}\r\n         */\r\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\r\n            this.detachView(componentRef.hostView);\r\n            remove(this.components, componentRef);\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @return {?}\r\n         */\r\n        ApplicationRef.prototype.ngOnDestroy = function () {\r\n            // TODO(alxhub): Dispose of the NgZone.\r\n            this._views.slice().forEach(function (view) { return view.destroy(); });\r\n        };\r\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\r\n            /**\r\n             * Returns the number of attached views.\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._views.length; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return ApplicationRef;\r\n    }());\r\n    /**\r\n     * \\@internal\r\n     */\r\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\r\n    ApplicationRef.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    ApplicationRef.ctorParameters = function () { return [\r\n        { type: NgZone },\r\n        { type: Console },\r\n        { type: Injector },\r\n        { type: ErrorHandler },\r\n        { type: ComponentFactoryResolver },\r\n        { type: ApplicationInitStatus }\r\n    ]; };\r\n    /**\r\n     * @template T\r\n     * @param {?} list\r\n     * @param {?} el\r\n     * @return {?}\r\n     */\r\n    function remove(list, el) {\r\n        /** @type {?} */\r\n        var index = list.indexOf(el);\r\n        if (index > -1) {\r\n            list.splice(index, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * An unmodifiable list of items that Angular keeps up to date when the state\r\n     * of the application changes.\r\n     *\r\n     * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\r\n     * provide.\r\n     *\r\n     * Implements an iterable interface, therefore it can be used in both ES6\r\n     * javascript `for (var i of items)` loops as well as in Angular templates with\r\n     * `*ngFor=\"let i of myList\"`.\r\n     *\r\n     * Changes can be observed by subscribing to the changes `Observable`.\r\n     *\r\n     * NOTE: In the future this class will implement an `Observable` interface.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     * ```typescript\r\n     * \\@Component({...})\r\n     * class Container {\r\n     * \\@ViewChildren(Item) items:QueryList<Item>;\r\n     * }\r\n     * ```\r\n     *\r\n     * \\@publicApi\r\n     * @template T\r\n     */\r\n    var QueryList$1 = /** @class */ (function () {\r\n        function QueryList$1() {\r\n            this.dirty = true;\r\n            this._results = [];\r\n            this.changes = new EventEmitter();\r\n            this.length = 0;\r\n        }\r\n        /**\r\n         * See\r\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\r\n         * @template U\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        QueryList$1.prototype.map = function (fn) { return this._results.map(fn); };\r\n        /**\r\n         * See\r\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        QueryList$1.prototype.filter = function (fn) {\r\n            return this._results.filter(fn);\r\n        };\r\n        /**\r\n         * See\r\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        QueryList$1.prototype.find = function (fn) {\r\n            return this._results.find(fn);\r\n        };\r\n        /**\r\n         * See\r\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\r\n         * @template U\r\n         * @param {?} fn\r\n         * @param {?} init\r\n         * @return {?}\r\n         */\r\n        QueryList$1.prototype.reduce = function (fn, init) {\r\n            return this._results.reduce(fn, init);\r\n        };\r\n        /**\r\n         * See\r\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        QueryList$1.prototype.forEach = function (fn) { this._results.forEach(fn); };\r\n        /**\r\n         * See\r\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        QueryList$1.prototype.some = function (fn) {\r\n            return this._results.some(fn);\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        QueryList$1.prototype.toArray = function () { return this._results.slice(); };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        QueryList$1.prototype[getSymbolIterator()] = function () { return (((this._results)))[getSymbolIterator()](); };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        QueryList$1.prototype.toString = function () { return this._results.toString(); };\r\n        /**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        QueryList$1.prototype.reset = function (res) {\r\n            this._results = flatten$2(res);\r\n            (((this))).dirty = false;\r\n            (((this))).length = this._results.length;\r\n            (((this))).last = this._results[this.length - 1];\r\n            (((this))).first = this._results[0];\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        QueryList$1.prototype.notifyOnChanges = function () { (((this.changes))).emit(this); };\r\n        /**\r\n         * internal\r\n         * @return {?}\r\n         */\r\n        QueryList$1.prototype.setDirty = function () { (((this))).dirty = true; };\r\n        /**\r\n         * internal\r\n         * @return {?}\r\n         */\r\n        QueryList$1.prototype.destroy = function () {\r\n            (((this.changes))).complete();\r\n            (((this.changes))).unsubscribe();\r\n        };\r\n        return QueryList$1;\r\n    }());\r\n    /**\r\n     * @template T\r\n     * @param {?} list\r\n     * @return {?}\r\n     */\r\n    function flatten$2(list) {\r\n        return list.reduce(function (flat, item) {\r\n            /** @type {?} */\r\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\r\n            return (((flat))).concat(flatItem);\r\n        }, []);\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Represents a container where one or more views can be attached to a component.\r\n     *\r\n     * Can contain *host views* (created by instantiating a\r\n     * component with the `createComponent()` method), and *embedded views*\r\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\r\n     *\r\n     * A view container instance can contain other view containers,\r\n     * creating a [view hierarchy](guide/glossary#view-tree).\r\n     *\r\n     * @see `ComponentRef`\r\n     * @see `EmbeddedViewRef`\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var ViewContainerRef = /** @class */ (function () {\r\n        function ViewContainerRef() {\r\n        }\r\n        return ViewContainerRef;\r\n    }());\r\n    /**\r\n     * \\@internal\r\n     */\r\n    ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\r\n    /** @type {?} */\r\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\r\n    /** @type {?} */\r\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Base class for Angular Views, provides change detection functionality.\r\n     * A change-detection tree collects all views that are to be checked for changes.\r\n     * Use the methods to add and remove views from the tree, initiate change-detection,\r\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\r\n     *\r\n     * \\@usageNotes\r\n     *\r\n     * The following examples demonstrate how to modify default change-detection behavior\r\n     * to perform explicit detection when needed.\r\n     *\r\n     * ### Use `markForCheck()` with `CheckOnce` strategy\r\n     *\r\n     * The following example sets the `OnPush` change-detection strategy for a component\r\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\r\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\r\n     *\r\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\r\n     * region=\"mark-for-check\"></code-example>\r\n     *\r\n     * ### Detach change detector to limit how often check occurs\r\n     *\r\n     * The following example defines a component with a large list of read-only data\r\n     * that is expected to change constantly, many times per second.\r\n     * To improve performance, we want to check and update the list\r\n     * less often than the changes actually occur. To do that, we detach\r\n     * the component's change detector and perform an explicit local check every five seconds.\r\n     *\r\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\r\n     *\r\n     *\r\n     * ### Reattaching a detached component\r\n     *\r\n     * The following example creates a component displaying live data.\r\n     * The component detaches its change detector from the main change detector tree\r\n     * when the `live` property is set to false, and reattaches it when the property\r\n     * becomes true.\r\n     *\r\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var ChangeDetectorRef = /** @class */ (function () {\r\n        function ChangeDetectorRef() {\r\n        }\r\n        return ChangeDetectorRef;\r\n    }());\r\n    /**\r\n     * \\@internal\r\n     */\r\n    ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\r\n    /** @type {?} */\r\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n    };\r\n    /** @type {?} */\r\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    var EventListener = /** @class */ (function () {\r\n        /**\r\n         * @param {?} name\r\n         * @param {?} callback\r\n         */\r\n        function EventListener(name, callback) {\r\n            this.name = name;\r\n            this.callback = callback;\r\n        }\r\n        return EventListener;\r\n    }());\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\r\n        /**\r\n         * @param {?} nativeNode\r\n         * @param {?} parent\r\n         * @param {?} _debugContext\r\n         */\r\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\r\n            this.listeners = [];\r\n            this.parent = null;\r\n            this._debugContext = _debugContext;\r\n            this.nativeNode = nativeNode;\r\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\r\n                parent.addChild(this);\r\n            }\r\n        }\r\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._debugContext.injector; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._debugContext.component; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._debugContext.context; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._debugContext.references; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._debugContext.providerTokens; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return DebugNode__PRE_R3__;\r\n    }());\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\r\n        __extends(DebugElement__PRE_R3__, _super);\r\n        /**\r\n         * @param {?} nativeNode\r\n         * @param {?} parent\r\n         * @param {?} _debugContext\r\n         */\r\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\r\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\r\n            _this.properties = {};\r\n            _this.attributes = {};\r\n            _this.classes = {};\r\n            _this.styles = {};\r\n            _this.childNodes = [];\r\n            _this.nativeElement = nativeNode;\r\n            return _this;\r\n        }\r\n        /**\r\n         * @param {?} child\r\n         * @return {?}\r\n         */\r\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\r\n            if (child) {\r\n                this.childNodes.push(child);\r\n                (((child))).parent = this;\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} child\r\n         * @return {?}\r\n         */\r\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\r\n            /** @type {?} */\r\n            var childIndex = this.childNodes.indexOf(child);\r\n            if (childIndex !== -1) {\r\n                (((child))).parent = null;\r\n                this.childNodes.splice(childIndex, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} child\r\n         * @param {?} newChildren\r\n         * @return {?}\r\n         */\r\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\r\n            var _this = this;\r\n            /** @type {?} */\r\n            var siblingIndex = this.childNodes.indexOf(child);\r\n            if (siblingIndex !== -1) {\r\n                (_b = this.childNodes).splice.apply(_b, [siblingIndex + 1, 0].concat(newChildren));\r\n                newChildren.forEach(function (c) {\r\n                    if (c.parent) {\r\n                        (((c.parent))).removeChild(c);\r\n                    }\r\n                    (((child))).parent = _this;\r\n                });\r\n            }\r\n            var _b;\r\n        };\r\n        /**\r\n         * @param {?} refChild\r\n         * @param {?} newChild\r\n         * @return {?}\r\n         */\r\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\r\n            /** @type {?} */\r\n            var refIndex = this.childNodes.indexOf(refChild);\r\n            if (refIndex === -1) {\r\n                this.addChild(newChild);\r\n            }\r\n            else {\r\n                if (newChild.parent) {\r\n                    (((newChild.parent))).removeChild(newChild);\r\n                }\r\n                (((newChild))).parent = this;\r\n                this.childNodes.splice(refIndex, 0, newChild);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} predicate\r\n         * @return {?}\r\n         */\r\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\r\n            /** @type {?} */\r\n            var results = this.queryAll(predicate);\r\n            return results[0] || null;\r\n        };\r\n        /**\r\n         * @param {?} predicate\r\n         * @return {?}\r\n         */\r\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\r\n            /** @type {?} */\r\n            var matches = [];\r\n            _queryElementChildren(this, predicate, matches);\r\n            return matches;\r\n        };\r\n        /**\r\n         * @param {?} predicate\r\n         * @return {?}\r\n         */\r\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\r\n            /** @type {?} */\r\n            var matches = [];\r\n            _queryNodeChildren(this, predicate, matches);\r\n            return matches;\r\n        };\r\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                return ((this\r\n                    .childNodes //\r\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; })));\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {?} eventName\r\n         * @param {?} eventObj\r\n         * @return {?}\r\n         */\r\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\r\n            this.listeners.forEach(function (listener) {\r\n                if (listener.name == eventName) {\r\n                    listener.callback(eventObj);\r\n                }\r\n            });\r\n        };\r\n        return DebugElement__PRE_R3__;\r\n    }(DebugNode__PRE_R3__));\r\n    /**\r\n     * @param {?} element\r\n     * @param {?} predicate\r\n     * @param {?} matches\r\n     * @return {?}\r\n     */\r\n    function _queryElementChildren(element, predicate, matches) {\r\n        element.childNodes.forEach(function (node) {\r\n            if (node instanceof DebugElement__PRE_R3__) {\r\n                if (predicate(node)) {\r\n                    matches.push(node);\r\n                }\r\n                _queryElementChildren(node, predicate, matches);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} parentNode\r\n     * @param {?} predicate\r\n     * @param {?} matches\r\n     * @return {?}\r\n     */\r\n    function _queryNodeChildren(parentNode, predicate, matches) {\r\n        if (parentNode instanceof DebugElement__PRE_R3__) {\r\n            parentNode.childNodes.forEach(function (node) {\r\n                if (predicate(node)) {\r\n                    matches.push(node);\r\n                }\r\n                if (node instanceof DebugElement__PRE_R3__) {\r\n                    _queryNodeChildren(node, predicate, matches);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\r\n    /** @type {?} */\r\n    var _nativeNodeToDebugNode = new Map();\r\n    /**\r\n     * @param {?} nativeNode\r\n     * @return {?}\r\n     */\r\n    function getDebugNode__PRE_R3__(nativeNode) {\r\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\r\n    }\r\n    /**\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var getDebugNode = getDebugNode__PRE_R3__;\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    function indexDebugNode(node) {\r\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    function removeDebugNodeFromIndex(node) {\r\n        _nativeNodeToDebugNode.delete(node.nativeNode);\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    var DefaultIterableDifferFactory = /** @class */ (function () {\r\n        function DefaultIterableDifferFactory() {\r\n        }\r\n        /**\r\n         * @param {?} obj\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\r\n        /**\r\n         * @template V\r\n         * @param {?=} trackByFn\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\r\n            return new DefaultIterableDiffer(trackByFn);\r\n        };\r\n        return DefaultIterableDifferFactory;\r\n    }());\r\n    /** @type {?} */\r\n    var trackByIdentity = function (index, item) { return item; };\r\n    /**\r\n     * @deprecated v4.0.0 - Should not be part of public API.\r\n     * \\@publicApi\r\n     * @template V\r\n     */\r\n    var DefaultIterableDiffer = /** @class */ (function () {\r\n        /**\r\n         * @param {?=} trackByFn\r\n         */\r\n        function DefaultIterableDiffer(trackByFn) {\r\n            this.length = 0;\r\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\r\n            this._linkedRecords = null;\r\n            // Keeps track of the removed records at any point in time during `_check()` calls.\r\n            this._unlinkedRecords = null;\r\n            this._previousItHead = null;\r\n            this._itHead = null;\r\n            this._itTail = null;\r\n            this._additionsHead = null;\r\n            this._additionsTail = null;\r\n            this._movesHead = null;\r\n            this._movesTail = null;\r\n            this._removalsHead = null;\r\n            this._removalsTail = null;\r\n            // Keeps track of records where custom track by is the same, but item identity has changed\r\n            this._identityChangesHead = null;\r\n            this._identityChangesTail = null;\r\n            this._trackByFn = trackByFn || trackByIdentity;\r\n        }\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\r\n            /** @type {?} */\r\n            var record;\r\n            for (record = this._itHead; record !== null; record = record._next) {\r\n                fn(record);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\r\n            /** @type {?} */\r\n            var nextIt = this._itHead;\r\n            /** @type {?} */\r\n            var nextRemove = this._removalsHead;\r\n            /** @type {?} */\r\n            var addRemoveOffset = 0;\r\n            /** @type {?} */\r\n            var moveOffsets = null;\r\n            while (nextIt || nextRemove) {\r\n                // Figure out which is the next record to process\r\n                // Order: remove, add, move\r\n                /** @type {?} */\r\n                var record = !nextRemove ||\r\n                    nextIt &&\r\n                        ((nextIt.currentIndex)) <\r\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\r\n                    ((nextIt)) :\r\n                    nextRemove;\r\n                /** @type {?} */\r\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\r\n                /** @type {?} */\r\n                var currentIndex = record.currentIndex;\r\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\r\n                if (record === nextRemove) {\r\n                    addRemoveOffset--;\r\n                    nextRemove = nextRemove._nextRemoved;\r\n                }\r\n                else {\r\n                    nextIt = ((nextIt))._next;\r\n                    if (record.previousIndex == null) {\r\n                        addRemoveOffset++;\r\n                    }\r\n                    else {\r\n                        // INVARIANT:  currentIndex < previousIndex\r\n                        if (!moveOffsets)\r\n                            moveOffsets = [];\r\n                        /** @type {?} */\r\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\r\n                        /** @type {?} */\r\n                        var localCurrentIndex = ((currentIndex)) - addRemoveOffset;\r\n                        if (localMovePreviousIndex != localCurrentIndex) {\r\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\r\n                                /** @type {?} */\r\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\r\n                                /** @type {?} */\r\n                                var index = offset + i;\r\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\r\n                                    moveOffsets[i] = offset + 1;\r\n                                }\r\n                            }\r\n                            /** @type {?} */\r\n                            var previousIndex = record.previousIndex;\r\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\r\n                        }\r\n                    }\r\n                }\r\n                if (adjPreviousIndex !== currentIndex) {\r\n                    fn(record, adjPreviousIndex, currentIndex);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\r\n            /** @type {?} */\r\n            var record;\r\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\r\n                fn(record);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\r\n            /** @type {?} */\r\n            var record;\r\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\r\n                fn(record);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\r\n            /** @type {?} */\r\n            var record;\r\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\r\n                fn(record);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\r\n            /** @type {?} */\r\n            var record;\r\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\r\n                fn(record);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\r\n            /** @type {?} */\r\n            var record;\r\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\r\n                fn(record);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} collection\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype.diff = function (collection) {\r\n            if (collection == null)\r\n                collection = [];\r\n            if (!isListLikeIterable(collection)) {\r\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\r\n            }\r\n            if (this.check(collection)) {\r\n                return this;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\r\n        /**\r\n         * @param {?} collection\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype.check = function (collection) {\r\n            var _this = this;\r\n            this._reset();\r\n            /** @type {?} */\r\n            var record = this._itHead;\r\n            /** @type {?} */\r\n            var mayBeDirty = false;\r\n            /** @type {?} */\r\n            var index;\r\n            /** @type {?} */\r\n            var item;\r\n            /** @type {?} */\r\n            var itemTrackBy;\r\n            if (Array.isArray(collection)) {\r\n                (((this))).length = collection.length;\r\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\r\n                    item = collection[index_1];\r\n                    itemTrackBy = this._trackByFn(index_1, item);\r\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\r\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\r\n                        mayBeDirty = true;\r\n                    }\r\n                    else {\r\n                        if (mayBeDirty) {\r\n                            // TODO(misko): can we limit this to duplicates only?\r\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\r\n                        }\r\n                        if (!looseIdentical(record.item, item))\r\n                            this._addIdentityChange(record, item);\r\n                    }\r\n                    record = record._next;\r\n                }\r\n            }\r\n            else {\r\n                index = 0;\r\n                iterateListLike(collection, function (item) {\r\n                    itemTrackBy = _this._trackByFn(index, item);\r\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\r\n                        record = _this._mismatch(record, item, itemTrackBy, index);\r\n                        mayBeDirty = true;\r\n                    }\r\n                    else {\r\n                        if (mayBeDirty) {\r\n                            // TODO(misko): can we limit this to duplicates only?\r\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\r\n                        }\r\n                        if (!looseIdentical(record.item, item))\r\n                            _this._addIdentityChange(record, item);\r\n                    }\r\n                    record = record._next;\r\n                    index++;\r\n                });\r\n                (((this))).length = index;\r\n            }\r\n            this._truncate(record);\r\n            (((this))).collection = collection;\r\n            return this.isDirty;\r\n        };\r\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\r\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\r\n               * changes.\r\n               */\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                return this._additionsHead !== null || this._movesHead !== null ||\r\n                    this._removalsHead !== null || this._identityChangesHead !== null;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Reset the state of the change objects to show no changes. This means set previousKey to\r\n         * currentKey, and clear all of the queues (additions, moves, removals).\r\n         * Set the previousIndexes of moved and added items to their currentIndexes\r\n         * Reset the list of additions, moves and removals\r\n         *\r\n         * \\@internal\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype._reset = function () {\r\n            if (this.isDirty) {\r\n                /** @type {?} */\r\n                var record = void 0;\r\n                /** @type {?} */\r\n                var nextRecord = void 0;\r\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\r\n                    record._nextPrevious = record._next;\r\n                }\r\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\r\n                    record.previousIndex = record.currentIndex;\r\n                }\r\n                this._additionsHead = this._additionsTail = null;\r\n                for (record = this._movesHead; record !== null; record = nextRecord) {\r\n                    record.previousIndex = record.currentIndex;\r\n                    nextRecord = record._nextMoved;\r\n                }\r\n                this._movesHead = this._movesTail = null;\r\n                this._removalsHead = this._removalsTail = null;\r\n                this._identityChangesHead = this._identityChangesTail = null;\r\n                // TODO(vicb): when assert gets supported\r\n                // assert(!this.isDirty);\r\n            }\r\n        };\r\n        /**\r\n         * This is the core function which handles differences between collections.\r\n         *\r\n         * - `record` is the record which we saw at this position last time. If null then it is a new\r\n         *   item.\r\n         * - `item` is the current item in the collection\r\n         * - `index` is the position of the item in the collection\r\n         *\r\n         * \\@internal\r\n         * @param {?} record\r\n         * @param {?} item\r\n         * @param {?} itemTrackBy\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\r\n            // The previous record after which we will append the current one.\r\n            /** @type {?} */\r\n            var previousRecord;\r\n            if (record === null) {\r\n                previousRecord = this._itTail;\r\n            }\r\n            else {\r\n                previousRecord = record._prev;\r\n                // Remove the record from the collection since we know it does not match the item.\r\n                this._remove(record);\r\n            }\r\n            // Attempt to see if we have seen the item before.\r\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\r\n            if (record !== null) {\r\n                // We have seen this before, we need to move it forward in the collection.\r\n                // But first we need to check if identity changed, so we can update in view if necessary\r\n                if (!looseIdentical(record.item, item))\r\n                    this._addIdentityChange(record, item);\r\n                this._moveAfter(record, previousRecord, index);\r\n            }\r\n            else {\r\n                // Never seen it, check evicted list.\r\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\r\n                if (record !== null) {\r\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\r\n                    // But first we need to check if identity changed, so we can update in view if necessary\r\n                    if (!looseIdentical(record.item, item))\r\n                        this._addIdentityChange(record, item);\r\n                    this._reinsertAfter(record, previousRecord, index);\r\n                }\r\n                else {\r\n                    // It is a new item: add it.\r\n                    record =\r\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\r\n                }\r\n            }\r\n            return record;\r\n        };\r\n        /**\r\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\r\n         *\r\n         * Use case: `[a, a]` => `[b, a, a]`\r\n         *\r\n         * If we did not have this check then the insertion of `b` would:\r\n         *   1) evict first `a`\r\n         *   2) insert `b` at `0` index.\r\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\r\n         *   3) reinsert `a` at index 2. <-- this is wrong!\r\n         *\r\n         * The correct behavior is:\r\n         *   1) evict first `a`\r\n         *   2) insert `b` at `0` index.\r\n         *   3) reinsert `a` at index 1.\r\n         *   3) move `a` at from `1` to `2`.\r\n         *\r\n         *\r\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\r\n         * have already been removed:\r\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\r\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\r\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\r\n         * at the end.\r\n         *\r\n         * \\@internal\r\n         * @param {?} record\r\n         * @param {?} item\r\n         * @param {?} itemTrackBy\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\r\n            /** @type {?} */\r\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\r\n            if (reinsertRecord !== null) {\r\n                record = this._reinsertAfter(reinsertRecord, ((record._prev)), index);\r\n            }\r\n            else if (record.currentIndex != index) {\r\n                record.currentIndex = index;\r\n                this._addToMoves(record, index);\r\n            }\r\n            return record;\r\n        };\r\n        /**\r\n         * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\r\n         *\r\n         * - `record` The first excess {\\@link IterableChangeRecord_}.\r\n         *\r\n         * \\@internal\r\n         * @param {?} record\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype._truncate = function (record) {\r\n            // Anything after that needs to be removed;\r\n            while (record !== null) {\r\n                /** @type {?} */\r\n                var nextRecord = record._next;\r\n                this._addToRemovals(this._unlink(record));\r\n                record = nextRecord;\r\n            }\r\n            if (this._unlinkedRecords !== null) {\r\n                this._unlinkedRecords.clear();\r\n            }\r\n            if (this._additionsTail !== null) {\r\n                this._additionsTail._nextAdded = null;\r\n            }\r\n            if (this._movesTail !== null) {\r\n                this._movesTail._nextMoved = null;\r\n            }\r\n            if (this._itTail !== null) {\r\n                this._itTail._next = null;\r\n            }\r\n            if (this._removalsTail !== null) {\r\n                this._removalsTail._nextRemoved = null;\r\n            }\r\n            if (this._identityChangesTail !== null) {\r\n                this._identityChangesTail._nextIdentityChange = null;\r\n            }\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} record\r\n         * @param {?} prevRecord\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\r\n            if (this._unlinkedRecords !== null) {\r\n                this._unlinkedRecords.remove(record);\r\n            }\r\n            /** @type {?} */\r\n            var prev = record._prevRemoved;\r\n            /** @type {?} */\r\n            var next = record._nextRemoved;\r\n            if (prev === null) {\r\n                this._removalsHead = next;\r\n            }\r\n            else {\r\n                prev._nextRemoved = next;\r\n            }\r\n            if (next === null) {\r\n                this._removalsTail = prev;\r\n            }\r\n            else {\r\n                next._prevRemoved = prev;\r\n            }\r\n            this._insertAfter(record, prevRecord, index);\r\n            this._addToMoves(record, index);\r\n            return record;\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} record\r\n         * @param {?} prevRecord\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\r\n            this._unlink(record);\r\n            this._insertAfter(record, prevRecord, index);\r\n            this._addToMoves(record, index);\r\n            return record;\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} record\r\n         * @param {?} prevRecord\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\r\n            this._insertAfter(record, prevRecord, index);\r\n            if (this._additionsTail === null) {\r\n                // TODO(vicb):\r\n                // assert(this._additionsHead === null);\r\n                this._additionsTail = this._additionsHead = record;\r\n            }\r\n            else {\r\n                // TODO(vicb):\r\n                // assert(_additionsTail._nextAdded === null);\r\n                // assert(record._nextAdded === null);\r\n                this._additionsTail = this._additionsTail._nextAdded = record;\r\n            }\r\n            return record;\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} record\r\n         * @param {?} prevRecord\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\r\n            // TODO(vicb):\r\n            // assert(record != prevRecord);\r\n            // assert(record._next === null);\r\n            // assert(record._prev === null);\r\n            // TODO(vicb):\r\n            // assert(record != prevRecord);\r\n            // assert(record._next === null);\r\n            // assert(record._prev === null);\r\n            /** @type {?} */\r\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\r\n            // TODO(vicb):\r\n            // assert(next != record);\r\n            // assert(prevRecord != record);\r\n            record._next = next;\r\n            record._prev = prevRecord;\r\n            if (next === null) {\r\n                this._itTail = record;\r\n            }\r\n            else {\r\n                next._prev = record;\r\n            }\r\n            if (prevRecord === null) {\r\n                this._itHead = record;\r\n            }\r\n            else {\r\n                prevRecord._next = record;\r\n            }\r\n            if (this._linkedRecords === null) {\r\n                this._linkedRecords = new _DuplicateMap();\r\n            }\r\n            this._linkedRecords.put(record);\r\n            record.currentIndex = index;\r\n            return record;\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} record\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype._remove = function (record) {\r\n            return this._addToRemovals(this._unlink(record));\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} record\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype._unlink = function (record) {\r\n            if (this._linkedRecords !== null) {\r\n                this._linkedRecords.remove(record);\r\n            }\r\n            /** @type {?} */\r\n            var prev = record._prev;\r\n            /** @type {?} */\r\n            var next = record._next;\r\n            // TODO(vicb):\r\n            // assert((record._prev = null) === null);\r\n            // assert((record._next = null) === null);\r\n            if (prev === null) {\r\n                this._itHead = next;\r\n            }\r\n            else {\r\n                prev._next = next;\r\n            }\r\n            if (next === null) {\r\n                this._itTail = prev;\r\n            }\r\n            else {\r\n                next._prev = prev;\r\n            }\r\n            return record;\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} record\r\n         * @param {?} toIndex\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\r\n            // TODO(vicb):\r\n            // assert(record._nextMoved === null);\r\n            if (record.previousIndex === toIndex) {\r\n                return record;\r\n            }\r\n            if (this._movesTail === null) {\r\n                // TODO(vicb):\r\n                // assert(_movesHead === null);\r\n                this._movesTail = this._movesHead = record;\r\n            }\r\n            else {\r\n                // TODO(vicb):\r\n                // assert(_movesTail._nextMoved === null);\r\n                this._movesTail = this._movesTail._nextMoved = record;\r\n            }\r\n            return record;\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} record\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\r\n            if (this._unlinkedRecords === null) {\r\n                this._unlinkedRecords = new _DuplicateMap();\r\n            }\r\n            this._unlinkedRecords.put(record);\r\n            record.currentIndex = null;\r\n            record._nextRemoved = null;\r\n            if (this._removalsTail === null) {\r\n                // TODO(vicb):\r\n                // assert(_removalsHead === null);\r\n                this._removalsTail = this._removalsHead = record;\r\n                record._prevRemoved = null;\r\n            }\r\n            else {\r\n                // TODO(vicb):\r\n                // assert(_removalsTail._nextRemoved === null);\r\n                // assert(record._nextRemoved === null);\r\n                record._prevRemoved = this._removalsTail;\r\n                this._removalsTail = this._removalsTail._nextRemoved = record;\r\n            }\r\n            return record;\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} record\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\r\n            record.item = item;\r\n            if (this._identityChangesTail === null) {\r\n                this._identityChangesTail = this._identityChangesHead = record;\r\n            }\r\n            else {\r\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\r\n            }\r\n            return record;\r\n        };\r\n        return DefaultIterableDiffer;\r\n    }());\r\n    /**\r\n     * @template V\r\n     */\r\n    var IterableChangeRecord_ = /** @class */ (function () {\r\n        /**\r\n         * @param {?} item\r\n         * @param {?} trackById\r\n         */\r\n        function IterableChangeRecord_(item, trackById) {\r\n            this.item = item;\r\n            this.trackById = trackById;\r\n            this.currentIndex = null;\r\n            this.previousIndex = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._nextPrevious = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._prev = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._next = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._prevDup = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._nextDup = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._prevRemoved = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._nextRemoved = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._nextAdded = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._nextMoved = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._nextIdentityChange = null;\r\n        }\r\n        return IterableChangeRecord_;\r\n    }());\r\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\r\n    /**\r\n     * @template V\r\n     */\r\n    var _DuplicateItemRecordList = /** @class */ (function () {\r\n        function _DuplicateItemRecordList() {\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._head = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._tail = null;\r\n        }\r\n        /**\r\n         * Append the record to the list of duplicates.\r\n         *\r\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\r\n         * @param {?} record\r\n         * @return {?}\r\n         */\r\n        _DuplicateItemRecordList.prototype.add = function (record) {\r\n            if (this._head === null) {\r\n                this._head = this._tail = record;\r\n                record._nextDup = null;\r\n                record._prevDup = null;\r\n            }\r\n            else {\r\n                // TODO(vicb):\r\n                // assert(record.item ==  _head.item ||\r\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\r\n                ((this._tail))._nextDup = record;\r\n                record._prevDup = this._tail;\r\n                record._nextDup = null;\r\n                this._tail = record;\r\n            }\r\n        };\r\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\r\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\r\n        /**\r\n         * @param {?} trackById\r\n         * @param {?} atOrAfterIndex\r\n         * @return {?}\r\n         */\r\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\r\n            /** @type {?} */\r\n            var record;\r\n            for (record = this._head; record !== null; record = record._nextDup) {\r\n                if ((atOrAfterIndex === null || atOrAfterIndex <= ((record.currentIndex))) &&\r\n                    looseIdentical(record.trackById, trackById)) {\r\n                    return record;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\r\n         *\r\n         * Returns whether the list of duplicates is empty.\r\n         * @param {?} record\r\n         * @return {?}\r\n         */\r\n        _DuplicateItemRecordList.prototype.remove = function (record) {\r\n            // TODO(vicb):\r\n            // assert(() {\r\n            //  // verify that the record being removed is in the list.\r\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\r\n            //    if (identical(cursor, record)) return true;\r\n            //  }\r\n            //  return false;\r\n            //});\r\n            // TODO(vicb):\r\n            // assert(() {\r\n            //  // verify that the record being removed is in the list.\r\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\r\n            //    if (identical(cursor, record)) return true;\r\n            //  }\r\n            //  return false;\r\n            //});\r\n            /** @type {?} */\r\n            var prev = record._prevDup;\r\n            /** @type {?} */\r\n            var next = record._nextDup;\r\n            if (prev === null) {\r\n                this._head = next;\r\n            }\r\n            else {\r\n                prev._nextDup = next;\r\n            }\r\n            if (next === null) {\r\n                this._tail = prev;\r\n            }\r\n            else {\r\n                next._prevDup = prev;\r\n            }\r\n            return this._head === null;\r\n        };\r\n        return _DuplicateItemRecordList;\r\n    }());\r\n    /**\r\n     * @template V\r\n     */\r\n    var _DuplicateMap = /** @class */ (function () {\r\n        function _DuplicateMap() {\r\n            this.map = new Map();\r\n        }\r\n        /**\r\n         * @param {?} record\r\n         * @return {?}\r\n         */\r\n        _DuplicateMap.prototype.put = function (record) {\r\n            /** @type {?} */\r\n            var key = record.trackById;\r\n            /** @type {?} */\r\n            var duplicates = this.map.get(key);\r\n            if (!duplicates) {\r\n                duplicates = new _DuplicateItemRecordList();\r\n                this.map.set(key, duplicates);\r\n            }\r\n            duplicates.add(record);\r\n        };\r\n        /**\r\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\r\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\r\n         *\r\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\r\n         * have any more `a`s needs to return the second `a`.\r\n         * @param {?} trackById\r\n         * @param {?} atOrAfterIndex\r\n         * @return {?}\r\n         */\r\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\r\n            /** @type {?} */\r\n            var key = trackById;\r\n            /** @type {?} */\r\n            var recordList = this.map.get(key);\r\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\r\n        };\r\n        /**\r\n         * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\r\n         *\r\n         * The list of duplicates also is removed from the map if it gets empty.\r\n         * @param {?} record\r\n         * @return {?}\r\n         */\r\n        _DuplicateMap.prototype.remove = function (record) {\r\n            /** @type {?} */\r\n            var key = record.trackById;\r\n            /** @type {?} */\r\n            var recordList = ((this.map.get(key)));\r\n            // Remove the list of duplicates when it gets empty\r\n            if (recordList.remove(record)) {\r\n                this.map.delete(key);\r\n            }\r\n            return record;\r\n        };\r\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this.map.size === 0; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @return {?}\r\n         */\r\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\r\n        return _DuplicateMap;\r\n    }());\r\n    /**\r\n     * @param {?} item\r\n     * @param {?} addRemoveOffset\r\n     * @param {?} moveOffsets\r\n     * @return {?}\r\n     */\r\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\r\n        /** @type {?} */\r\n        var previousIndex = item.previousIndex;\r\n        if (previousIndex === null)\r\n            return previousIndex;\r\n        /** @type {?} */\r\n        var moveOffset = 0;\r\n        if (moveOffsets && previousIndex < moveOffsets.length) {\r\n            moveOffset = moveOffsets[previousIndex];\r\n        }\r\n        return previousIndex + addRemoveOffset + moveOffset;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @template K, V\r\n     */\r\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\r\n        function DefaultKeyValueDifferFactory() {\r\n        }\r\n        /**\r\n         * @param {?} obj\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\r\n        /**\r\n         * @template K, V\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\r\n        return DefaultKeyValueDifferFactory;\r\n    }());\r\n    /**\r\n     * @template K, V\r\n     */\r\n    var DefaultKeyValueDiffer = /** @class */ (function () {\r\n        function DefaultKeyValueDiffer() {\r\n            this._records = new Map();\r\n            this._mapHead = null;\r\n            // _appendAfter is used in the check loop\r\n            this._appendAfter = null;\r\n            this._previousMapHead = null;\r\n            this._changesHead = null;\r\n            this._changesTail = null;\r\n            this._additionsHead = null;\r\n            this._additionsTail = null;\r\n            this._removalsHead = null;\r\n            this._removalsTail = null;\r\n        }\r\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                return this._additionsHead !== null || this._changesHead !== null ||\r\n                    this._removalsHead !== null;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\r\n            /** @type {?} */\r\n            var record;\r\n            for (record = this._mapHead; record !== null; record = record._next) {\r\n                fn(record);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\r\n            /** @type {?} */\r\n            var record;\r\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\r\n                fn(record);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\r\n            /** @type {?} */\r\n            var record;\r\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\r\n                fn(record);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\r\n            /** @type {?} */\r\n            var record;\r\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\r\n                fn(record);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\r\n            /** @type {?} */\r\n            var record;\r\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\r\n                fn(record);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?=} map\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\r\n            if (!map) {\r\n                map = new Map();\r\n            }\r\n            else if (!(map instanceof Map || isJsObject(map))) {\r\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\r\n            }\r\n            return this.check(map) ? this : null;\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\r\n        /**\r\n         * Check the current state of the map vs the previous.\r\n         * The algorithm is optimised for when the keys do no change.\r\n         * @param {?} map\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype.check = function (map) {\r\n            var _this = this;\r\n            this._reset();\r\n            /** @type {?} */\r\n            var insertBefore = this._mapHead;\r\n            this._appendAfter = null;\r\n            this._forEach(map, function (value, key) {\r\n                if (insertBefore && insertBefore.key === key) {\r\n                    _this._maybeAddToChanges(insertBefore, value);\r\n                    _this._appendAfter = insertBefore;\r\n                    insertBefore = insertBefore._next;\r\n                }\r\n                else {\r\n                    /** @type {?} */\r\n                    var record = _this._getOrCreateRecordForKey(key, value);\r\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\r\n                }\r\n            });\r\n            // Items remaining at the end of the list have been deleted\r\n            if (insertBefore) {\r\n                if (insertBefore._prev) {\r\n                    insertBefore._prev._next = null;\r\n                }\r\n                this._removalsHead = insertBefore;\r\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\r\n                    if (record === this._mapHead) {\r\n                        this._mapHead = null;\r\n                    }\r\n                    this._records.delete(record.key);\r\n                    record._nextRemoved = record._next;\r\n                    record.previousValue = record.currentValue;\r\n                    record.currentValue = null;\r\n                    record._prev = null;\r\n                    record._next = null;\r\n                }\r\n            }\r\n            // Make sure tails have no next records from previous runs\r\n            if (this._changesTail)\r\n                this._changesTail._nextChanged = null;\r\n            if (this._additionsTail)\r\n                this._additionsTail._nextAdded = null;\r\n            return this.isDirty;\r\n        };\r\n        /**\r\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\r\n         *\r\n         * Notes:\r\n         * - This method appends at `this._appendAfter`,\r\n         * - This method updates `this._appendAfter`,\r\n         * - The return value is the new value for the insertion pointer.\r\n         * @private\r\n         * @param {?} before\r\n         * @param {?} record\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\r\n            if (before) {\r\n                /** @type {?} */\r\n                var prev = before._prev;\r\n                record._next = before;\r\n                record._prev = prev;\r\n                before._prev = record;\r\n                if (prev) {\r\n                    prev._next = record;\r\n                }\r\n                if (before === this._mapHead) {\r\n                    this._mapHead = record;\r\n                }\r\n                this._appendAfter = before;\r\n                return before;\r\n            }\r\n            if (this._appendAfter) {\r\n                this._appendAfter._next = record;\r\n                record._prev = this._appendAfter;\r\n            }\r\n            else {\r\n                this._mapHead = record;\r\n            }\r\n            this._appendAfter = record;\r\n            return null;\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} key\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\r\n            if (this._records.has(key)) {\r\n                /** @type {?} */\r\n                var record_1 = ((this._records.get(key)));\r\n                this._maybeAddToChanges(record_1, value);\r\n                /** @type {?} */\r\n                var prev = record_1._prev;\r\n                /** @type {?} */\r\n                var next = record_1._next;\r\n                if (prev) {\r\n                    prev._next = next;\r\n                }\r\n                if (next) {\r\n                    next._prev = prev;\r\n                }\r\n                record_1._next = null;\r\n                record_1._prev = null;\r\n                return record_1;\r\n            }\r\n            /** @type {?} */\r\n            var record = new KeyValueChangeRecord_(key);\r\n            this._records.set(key, record);\r\n            record.currentValue = value;\r\n            this._addToAdditions(record);\r\n            return record;\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype._reset = function () {\r\n            if (this.isDirty) {\r\n                /** @type {?} */\r\n                var record = void 0;\r\n                // let `_previousMapHead` contain the state of the map before the changes\r\n                this._previousMapHead = this._mapHead;\r\n                for (record = this._previousMapHead; record !== null; record = record._next) {\r\n                    record._nextPrevious = record._next;\r\n                }\r\n                // Update `record.previousValue` with the value of the item before the changes\r\n                // We need to update all changed items (that's those which have been added and changed)\r\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\r\n                    record.previousValue = record.currentValue;\r\n                }\r\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\r\n                    record.previousValue = record.currentValue;\r\n                }\r\n                this._changesHead = this._changesTail = null;\r\n                this._additionsHead = this._additionsTail = null;\r\n                this._removalsHead = null;\r\n            }\r\n        };\r\n        // Add the record or a given key to the list of changes only when the value has actually changed\r\n        /**\r\n         * @private\r\n         * @param {?} record\r\n         * @param {?} newValue\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\r\n            if (!looseIdentical(newValue, record.currentValue)) {\r\n                record.previousValue = record.currentValue;\r\n                record.currentValue = newValue;\r\n                this._addToChanges(record);\r\n            }\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} record\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\r\n            if (this._additionsHead === null) {\r\n                this._additionsHead = this._additionsTail = record;\r\n            }\r\n            else {\r\n                ((this._additionsTail))._nextAdded = record;\r\n                this._additionsTail = record;\r\n            }\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} record\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\r\n            if (this._changesHead === null) {\r\n                this._changesHead = this._changesTail = record;\r\n            }\r\n            else {\r\n                ((this._changesTail))._nextChanged = record;\r\n                this._changesTail = record;\r\n            }\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @private\r\n         * @template K, V\r\n         * @param {?} obj\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\r\n            if (obj instanceof Map) {\r\n                obj.forEach(fn);\r\n            }\r\n            else {\r\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\r\n            }\r\n        };\r\n        return DefaultKeyValueDiffer;\r\n    }());\r\n    /**\r\n     * @template K, V\r\n     */\r\n    var KeyValueChangeRecord_ = /** @class */ (function () {\r\n        /**\r\n         * @param {?} key\r\n         */\r\n        function KeyValueChangeRecord_(key) {\r\n            this.key = key;\r\n            this.previousValue = null;\r\n            this.currentValue = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._nextPrevious = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._next = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._prev = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._nextAdded = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._nextRemoved = null;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._nextChanged = null;\r\n        }\r\n        return KeyValueChangeRecord_;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var IterableDiffers = /** @class */ (function () {\r\n        /**\r\n         * @param {?} factories\r\n         */\r\n        function IterableDiffers(factories) {\r\n            this.factories = factories;\r\n        }\r\n        /**\r\n         * @param {?} factories\r\n         * @param {?=} parent\r\n         * @return {?}\r\n         */\r\n        IterableDiffers.create = function (factories, parent) {\r\n            if (parent != null) {\r\n                /** @type {?} */\r\n                var copied = parent.factories.slice();\r\n                factories = factories.concat(copied);\r\n            }\r\n            return new IterableDiffers(factories);\r\n        };\r\n        /**\r\n         * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\r\n         * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\r\n         * {\\@link IterableDiffers} instance.\r\n         *\r\n         * \\@usageNotes\r\n         * ### Example\r\n         *\r\n         * The following example shows how to extend an existing list of factories,\r\n         * which will only be applied to the injector for this component and its children.\r\n         * This step is all that's required to make a new {\\@link IterableDiffer} available.\r\n         *\r\n         * ```\r\n         * \\@Component({\r\n         *   viewProviders: [\r\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\r\n         *   ]\r\n         * })\r\n         * ```\r\n         * @param {?} factories\r\n         * @return {?}\r\n         */\r\n        IterableDiffers.extend = function (factories) {\r\n            return {\r\n                provide: IterableDiffers,\r\n                useFactory: function (parent) {\r\n                    if (!parent) {\r\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\r\n                        // to\r\n                        // bootstrap(), which would override default pipes instead of extending them.\r\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\r\n                    }\r\n                    return IterableDiffers.create(factories, parent);\r\n                },\r\n                // Dependency technically isn't optional, but we can provide a better error message this way.\r\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\r\n            };\r\n        };\r\n        /**\r\n         * @param {?} iterable\r\n         * @return {?}\r\n         */\r\n        IterableDiffers.prototype.find = function (iterable) {\r\n            /** @type {?} */\r\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\r\n            if (factory != null) {\r\n                return factory;\r\n            }\r\n            else {\r\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\r\n            }\r\n        };\r\n        return IterableDiffers;\r\n    }());\r\n    /** @nocollapse */\r\n    /** @nocollapse */ IterableDiffers.ngInjectableDef = defineInjectable({\r\n        providedIn: 'root',\r\n        factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\r\n    });\r\n    /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    function getTypeNameForDebugging(type) {\r\n        return type['name'] || typeof type;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var KeyValueDiffers = /** @class */ (function () {\r\n        /**\r\n         * @param {?} factories\r\n         */\r\n        function KeyValueDiffers(factories) {\r\n            this.factories = factories;\r\n        }\r\n        /**\r\n         * @template S\r\n         * @param {?} factories\r\n         * @param {?=} parent\r\n         * @return {?}\r\n         */\r\n        KeyValueDiffers.create = function (factories, parent) {\r\n            if (parent) {\r\n                /** @type {?} */\r\n                var copied = parent.factories.slice();\r\n                factories = factories.concat(copied);\r\n            }\r\n            return new KeyValueDiffers(factories);\r\n        };\r\n        /**\r\n         * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\r\n         * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\r\n         * {\\@link KeyValueDiffers} instance.\r\n         *\r\n         * \\@usageNotes\r\n         * ### Example\r\n         *\r\n         * The following example shows how to extend an existing list of factories,\r\n         * which will only be applied to the injector for this component and its children.\r\n         * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\r\n         *\r\n         * ```\r\n         * \\@Component({\r\n         *   viewProviders: [\r\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\r\n         *   ]\r\n         * })\r\n         * ```\r\n         * @template S\r\n         * @param {?} factories\r\n         * @return {?}\r\n         */\r\n        KeyValueDiffers.extend = function (factories) {\r\n            return {\r\n                provide: KeyValueDiffers,\r\n                useFactory: function (parent) {\r\n                    if (!parent) {\r\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\r\n                        // to bootstrap(), which would override default pipes instead of extending them.\r\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\r\n                    }\r\n                    return KeyValueDiffers.create(factories, parent);\r\n                },\r\n                // Dependency technically isn't optional, but we can provide a better error message this way.\r\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\r\n            };\r\n        };\r\n        /**\r\n         * @param {?} kv\r\n         * @return {?}\r\n         */\r\n        KeyValueDiffers.prototype.find = function (kv) {\r\n            /** @type {?} */\r\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\r\n            if (factory) {\r\n                return factory;\r\n            }\r\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\r\n        };\r\n        return KeyValueDiffers;\r\n    }());\r\n    /** @nocollapse */\r\n    /** @nocollapse */ KeyValueDiffers.ngInjectableDef = defineInjectable({\r\n        providedIn: 'root',\r\n        factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\r\n    });\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Structural diffing for `Object`s and `Map`s.\r\n     * @type {?}\r\n     */\r\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\r\n    /**\r\n     * Structural diffing for `Iterable` types such as `Array`s.\r\n     * @type {?}\r\n     */\r\n    var iterableDiff = [new DefaultIterableDifferFactory()];\r\n    /** @type {?} */\r\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\r\n    /** @type {?} */\r\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var _CORE_PLATFORM_PROVIDERS = [\r\n        // Set a default platform name for platforms that don't set it explicitly.\r\n        { provide: PLATFORM_ID, useValue: 'unknown' },\r\n        { provide: PlatformRef, deps: [Injector] },\r\n        { provide: TestabilityRegistry, deps: [] },\r\n        { provide: Console, deps: [] },\r\n    ];\r\n    /**\r\n     * This platform has to be included in any other platform\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Provide this token to set the locale of your application.\r\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\r\n     * DecimalPipe and PercentPipe) and by ICU expressions.\r\n     *\r\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * ```typescript\r\n     * import { LOCALE_ID } from '\\@angular/core';\r\n     * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\r\n     * import { AppModule } from './app/app.module';\r\n     *\r\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\r\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\r\n     * });\r\n     * ```\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var LOCALE_ID = new InjectionToken('LocaleId');\r\n    /**\r\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\r\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\r\n     *\r\n     * See the [i18n guide](guide/i18n#merge) for more information.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * ```typescript\r\n     * import { TRANSLATIONS } from '\\@angular/core';\r\n     * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\r\n     * import { AppModule } from './app/app.module';\r\n     *\r\n     * // content of your translation file\r\n     * const translations = '....';\r\n     *\r\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\r\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\r\n     * });\r\n     * ```\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var TRANSLATIONS = new InjectionToken('Translations');\r\n    /**\r\n     * Provide this token at bootstrap to set the format of your {\\@link TRANSLATIONS}: `xtb`,\r\n     * `xlf` or `xlf2`.\r\n     *\r\n     * See the [i18n guide](guide/i18n#merge) for more information.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * ```typescript\r\n     * import { TRANSLATIONS_FORMAT } from '\\@angular/core';\r\n     * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\r\n     * import { AppModule } from './app/app.module';\r\n     *\r\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\r\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\r\n     * });\r\n     * ```\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function _iterableDiffersFactory() {\r\n        return defaultIterableDiffers;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function _keyValueDiffersFactory() {\r\n        return defaultKeyValueDiffers;\r\n    }\r\n    /**\r\n     * @param {?=} locale\r\n     * @return {?}\r\n     */\r\n    function _localeFactory(locale) {\r\n        return locale || 'en-US';\r\n    }\r\n    /**\r\n     * A built-in [dependency injection token](guide/glossary#di-token)\r\n     * that is used to configure the root injector for bootstrapping.\r\n     * @type {?}\r\n     */\r\n    var APPLICATION_MODULE_PROVIDERS = [\r\n        {\r\n            provide: ApplicationRef,\r\n            useClass: ApplicationRef,\r\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\r\n        },\r\n        {\r\n            provide: ApplicationInitStatus,\r\n            useClass: ApplicationInitStatus,\r\n            deps: [[new Optional(), APP_INITIALIZER]]\r\n        },\r\n        { provide: Compiler, useClass: Compiler, deps: [] },\r\n        APP_ID_RANDOM_PROVIDER,\r\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\r\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\r\n        {\r\n            provide: LOCALE_ID,\r\n            useFactory: _localeFactory,\r\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\r\n        },\r\n    ];\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    // Called before each cycle of a view's check to detect whether this is in the\r\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\r\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\r\n    // methods.\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} priorInitState\r\n     * @param {?} newInitState\r\n     * @return {?}\r\n     */\r\n    function shiftInitState(view, priorInitState, newInitState) {\r\n        // Only update the InitState if we are currently in the prior state.\r\n        // For example, only move into CallingInit if we are in BeforeInit. Only\r\n        // move into CallingContentInit if we are in CallingInit. Normally this will\r\n        // always be true because of how checkCycle is called in checkAndUpdateView.\r\n        // However, if checkAndUpdateView is called recursively or if an exception is\r\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\r\n        // from the beginning. This ensures the state is monotonically increasing,\r\n        // terminating in the AfterInit state, which ensures the Init methods are called\r\n        // at least once and only once.\r\n        /** @type {?} */\r\n        var state = view.state;\r\n        /** @type {?} */\r\n        var initState = state & 1792 /* InitState_Mask */;\r\n        if (initState === priorInitState) {\r\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\r\n            view.initIndex = -1;\r\n            return true;\r\n        }\r\n        return initState === newInitState;\r\n    }\r\n    // Returns true if the lifecycle init method should be called for the node with\r\n    // the given init index.\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} initState\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function shouldCallLifecycleInitHook(view, initState, index) {\r\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\r\n            view.initIndex = index + 1;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\r\n     * @param {?} view\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function asTextData(view, index) {\r\n        return ((view.nodes[index]));\r\n    }\r\n    /**\r\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\r\n     * @param {?} view\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function asElementData(view, index) {\r\n        return ((view.nodes[index]));\r\n    }\r\n    /**\r\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\r\n     * @param {?} view\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function asProviderData(view, index) {\r\n        return ((view.nodes[index]));\r\n    }\r\n    /**\r\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\r\n     * @param {?} view\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function asPureExpressionData(view, index) {\r\n        return ((view.nodes[index]));\r\n    }\r\n    /**\r\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\r\n     * @param {?} view\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function asQueryList(view, index) {\r\n        return ((view.nodes[index]));\r\n    }\r\n    // WARNING: interface has both a type and a value, skipping emit\r\n    /**\r\n     * This object is used to prevent cycles in the source files and to have a place where\r\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\r\n     * @type {?}\r\n     */\r\n    var Services = {\r\n        setCurrentNode: ((undefined)),\r\n        createRootView: ((undefined)),\r\n        createEmbeddedView: ((undefined)),\r\n        createComponentView: ((undefined)),\r\n        createNgModuleRef: ((undefined)),\r\n        overrideProvider: ((undefined)),\r\n        overrideComponentView: ((undefined)),\r\n        clearOverrides: ((undefined)),\r\n        checkAndUpdateView: ((undefined)),\r\n        checkNoChangesView: ((undefined)),\r\n        destroyView: ((undefined)),\r\n        resolveDep: ((undefined)),\r\n        createDebugContext: ((undefined)),\r\n        handleEvent: ((undefined)),\r\n        updateDirectives: ((undefined)),\r\n        updateRenderer: ((undefined)),\r\n        dirtyParentQueries: ((undefined)),\r\n    };\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} context\r\n     * @param {?} oldValue\r\n     * @param {?} currValue\r\n     * @param {?} isFirstCheck\r\n     * @return {?}\r\n     */\r\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\r\n        /** @type {?} */\r\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\r\n        if (isFirstCheck) {\r\n            msg +=\r\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\r\n                    \" Has it been created in a change detection hook ?\";\r\n        }\r\n        return viewDebugError(msg, context);\r\n    }\r\n    /**\r\n     * @param {?} err\r\n     * @param {?} context\r\n     * @return {?}\r\n     */\r\n    function viewWrappedDebugError(err, context) {\r\n        if (!(err instanceof Error)) {\r\n            // errors that are not Error instances don't have a stack,\r\n            // so it is ok to wrap them into a new Error object...\r\n            err = new Error(err.toString());\r\n        }\r\n        _addDebugContext(err, context);\r\n        return err;\r\n    }\r\n    /**\r\n     * @param {?} msg\r\n     * @param {?} context\r\n     * @return {?}\r\n     */\r\n    function viewDebugError(msg, context) {\r\n        /** @type {?} */\r\n        var err = new Error(msg);\r\n        _addDebugContext(err, context);\r\n        return err;\r\n    }\r\n    /**\r\n     * @param {?} err\r\n     * @param {?} context\r\n     * @return {?}\r\n     */\r\n    function _addDebugContext(err, context) {\r\n        (((err)))[ERROR_DEBUG_CONTEXT] = context;\r\n        (((err)))[ERROR_LOGGER] = context.logError.bind(context);\r\n    }\r\n    /**\r\n     * @param {?} err\r\n     * @return {?}\r\n     */\r\n    function isViewDebugError(err) {\r\n        return !!getDebugContext(err);\r\n    }\r\n    /**\r\n     * @param {?} action\r\n     * @return {?}\r\n     */\r\n    function viewDestroyedError(action) {\r\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var NOOP = function () { };\r\n    /** @type {?} */\r\n    var _tokenKeyCache = new Map();\r\n    /**\r\n     * @param {?} token\r\n     * @return {?}\r\n     */\r\n    function tokenKey(token) {\r\n        /** @type {?} */\r\n        var key = _tokenKeyCache.get(token);\r\n        if (!key) {\r\n            key = stringify(token) + '_' + _tokenKeyCache.size;\r\n            _tokenKeyCache.set(token, key);\r\n        }\r\n        return key;\r\n    }\r\n    /** @type {?} */\r\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\r\n    /** @type {?} */\r\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\r\n    // Attention: this function is called as top level function.\r\n    // Putting any logic in here will destroy closure tree shaking!\r\n    /**\r\n     * @param {?} values\r\n     * @return {?}\r\n     */\r\n    function createRendererType2(values) {\r\n        return {\r\n            id: UNDEFINED_RENDERER_TYPE_ID,\r\n            styles: values.styles,\r\n            encapsulation: values.encapsulation,\r\n            data: values.data\r\n        };\r\n    }\r\n    /** @type {?} */\r\n    var _renderCompCount$1 = 0;\r\n    /**\r\n     * @param {?=} type\r\n     * @return {?}\r\n     */\r\n    function resolveRendererType2(type) {\r\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\r\n            // first time we see this RendererType2. Initialize it...\r\n            /** @type {?} */\r\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\r\n                type.styles.length || Object.keys(type.data).length);\r\n            if (isFilled) {\r\n                type.id = \"c\" + _renderCompCount$1++;\r\n            }\r\n            else {\r\n                type.id = EMPTY_RENDERER_TYPE_ID;\r\n            }\r\n        }\r\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\r\n            type = null;\r\n        }\r\n        return type || null;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @param {?} bindingIdx\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function checkBinding(view, def, bindingIdx, value) {\r\n        /** @type {?} */\r\n        var oldValues = view.oldValues;\r\n        if ((view.state & 2 /* FirstCheck */) ||\r\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @param {?} bindingIdx\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\r\n        if (checkBinding(view, def, bindingIdx, value)) {\r\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @param {?} bindingIdx\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\r\n        /** @type {?} */\r\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\r\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\r\n            /** @type {?} */\r\n            var bindingName = def.bindings[bindingIdx].name;\r\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function markParentViewsForCheck(view) {\r\n        /** @type {?} */\r\n        var currView = view;\r\n        while (currView) {\r\n            if (currView.def.flags & 2 /* OnPush */) {\r\n                currView.state |= 8 /* ChecksEnabled */;\r\n            }\r\n            currView = currView.viewContainerParent || currView.parent;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} endView\r\n     * @return {?}\r\n     */\r\n    function markParentViewsForCheckProjectedViews(view, endView) {\r\n        /** @type {?} */\r\n        var currView = view;\r\n        while (currView && currView !== endView) {\r\n            currView.state |= 64 /* CheckProjectedViews */;\r\n            currView = currView.viewContainerParent || currView.parent;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeIndex\r\n     * @param {?} eventName\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function dispatchEvent(view, nodeIndex, eventName, event) {\r\n        try {\r\n            /** @type {?} */\r\n            var nodeDef = view.def.nodes[nodeIndex];\r\n            /** @type {?} */\r\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\r\n                asElementData(view, nodeIndex).componentView :\r\n                view;\r\n            markParentViewsForCheck(startView);\r\n            return Services.handleEvent(view, nodeIndex, eventName, event);\r\n        }\r\n        catch (e) {\r\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\r\n            view.root.errorHandler.handleError(e);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function declaredViewContainer(view) {\r\n        if (view.parent) {\r\n            /** @type {?} */\r\n            var parentView = view.parent;\r\n            return asElementData(parentView, ((view.parentNodeDef)).nodeIndex);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * for component views, this is the host element.\r\n     * for embedded views, this is the index of the parent node\r\n     * that contains the view container.\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function viewParentEl(view) {\r\n        /** @type {?} */\r\n        var parentView = view.parent;\r\n        if (parentView) {\r\n            return ((view.parentNodeDef)).parent;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function renderNode(view, def) {\r\n        switch (def.flags & 201347067 /* Types */) {\r\n            case 1 /* TypeElement */:\r\n                return asElementData(view, def.nodeIndex).renderElement;\r\n            case 2 /* TypeText */:\r\n                return asTextData(view, def.nodeIndex).renderText;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} target\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function elementEventFullName(target, name) {\r\n        return target ? target + \":\" + name : name;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function isComponentView(view) {\r\n        return !!view.parent && !!(((view.parentNodeDef)).flags & 32768 /* Component */);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function isEmbeddedView(view) {\r\n        return !!view.parent && !(((view.parentNodeDef)).flags & 32768 /* Component */);\r\n    }\r\n    /**\r\n     * @param {?} queryId\r\n     * @return {?}\r\n     */\r\n    function filterQueryId(queryId) {\r\n        return 1 << (queryId % 32);\r\n    }\r\n    /**\r\n     * @param {?} matchedQueriesDsl\r\n     * @return {?}\r\n     */\r\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\r\n        /** @type {?} */\r\n        var matchedQueries = {};\r\n        /** @type {?} */\r\n        var matchedQueryIds = 0;\r\n        /** @type {?} */\r\n        var references = {};\r\n        if (matchedQueriesDsl) {\r\n            matchedQueriesDsl.forEach(function (_b) {\r\n                var queryId = _b[0], valueType = _b[1];\r\n                if (typeof queryId === 'number') {\r\n                    matchedQueries[queryId] = valueType;\r\n                    matchedQueryIds |= filterQueryId(queryId);\r\n                }\r\n                else {\r\n                    references[queryId] = valueType;\r\n                }\r\n            });\r\n        }\r\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\r\n    }\r\n    /**\r\n     * @param {?} deps\r\n     * @param {?=} sourceName\r\n     * @return {?}\r\n     */\r\n    function splitDepsDsl(deps, sourceName) {\r\n        return deps.map(function (value) {\r\n            /** @type {?} */\r\n            var token;\r\n            /** @type {?} */\r\n            var flags;\r\n            if (Array.isArray(value)) {\r\n                flags = value[0], token = value[1];\r\n            }\r\n            else {\r\n                flags = 0 /* None */;\r\n                token = value;\r\n            }\r\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\r\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\r\n            }\r\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} renderHost\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function getParentRenderElement(view, renderHost, def) {\r\n        /** @type {?} */\r\n        var renderParent = def.renderParent;\r\n        if (renderParent) {\r\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\r\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\r\n                (((renderParent.element)).componentRendererType &&\r\n                    ((((renderParent.element)).componentRendererType)).encapsulation ===\r\n                        ViewEncapsulation.Native)) {\r\n                // only children of non components, or children of components with native encapsulation should\r\n                // be attached.\r\n                return asElementData(view, ((def.renderParent)).nodeIndex).renderElement;\r\n            }\r\n        }\r\n        else {\r\n            return renderHost;\r\n        }\r\n    }\r\n    /** @type {?} */\r\n    var DEFINITION_CACHE = new WeakMap();\r\n    /**\r\n     * @template D\r\n     * @param {?} factory\r\n     * @return {?}\r\n     */\r\n    function resolveDefinition(factory) {\r\n        /** @type {?} */\r\n        var value = ((((DEFINITION_CACHE.get(factory)))));\r\n        if (!value) {\r\n            value = factory(function () { return NOOP; });\r\n            value.factory = factory;\r\n            DEFINITION_CACHE.set(factory, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function rootRenderNodes(view) {\r\n        /** @type {?} */\r\n        var renderNodes = [];\r\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\r\n        return renderNodes;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} action\r\n     * @param {?} parentNode\r\n     * @param {?} nextSibling\r\n     * @param {?=} target\r\n     * @return {?}\r\n     */\r\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\r\n        // We need to re-compute the parent node in case the nodes have been moved around manually\r\n        if (action === 3 /* RemoveChild */) {\r\n            parentNode = view.renderer.parentNode(renderNode(view, ((view.def.lastRenderRootNode))));\r\n        }\r\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} action\r\n     * @param {?} startIndex\r\n     * @param {?} endIndex\r\n     * @param {?} parentNode\r\n     * @param {?} nextSibling\r\n     * @param {?=} target\r\n     * @return {?}\r\n     */\r\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\r\n        for (var i = startIndex; i <= endIndex; i++) {\r\n            /** @type {?} */\r\n            var nodeDef = view.def.nodes[i];\r\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\r\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\r\n            }\r\n            // jump to next sibling\r\n            i += nodeDef.childCount;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} ngContentIndex\r\n     * @param {?} action\r\n     * @param {?} parentNode\r\n     * @param {?} nextSibling\r\n     * @param {?=} target\r\n     * @return {?}\r\n     */\r\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\r\n        /** @type {?} */\r\n        var compView = view;\r\n        while (compView && !isComponentView(compView)) {\r\n            compView = compView.parent;\r\n        }\r\n        /** @type {?} */\r\n        var hostView = ((compView)).parent;\r\n        /** @type {?} */\r\n        var hostElDef = viewParentEl(((compView)));\r\n        /** @type {?} */\r\n        var startIndex = ((hostElDef)).nodeIndex + 1;\r\n        /** @type {?} */\r\n        var endIndex = ((hostElDef)).nodeIndex + ((hostElDef)).childCount;\r\n        for (var i = startIndex; i <= endIndex; i++) {\r\n            /** @type {?} */\r\n            var nodeDef = ((hostView)).def.nodes[i];\r\n            if (nodeDef.ngContentIndex === ngContentIndex) {\r\n                visitRenderNode(((hostView)), nodeDef, action, parentNode, nextSibling, target);\r\n            }\r\n            // jump to next sibling\r\n            i += nodeDef.childCount;\r\n        }\r\n        if (!((hostView)).parent) {\r\n            // a root view\r\n            /** @type {?} */\r\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\r\n            if (projectedNodes) {\r\n                for (var i = 0; i < projectedNodes.length; i++) {\r\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeDef\r\n     * @param {?} action\r\n     * @param {?} parentNode\r\n     * @param {?} nextSibling\r\n     * @param {?=} target\r\n     * @return {?}\r\n     */\r\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\r\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\r\n            visitProjectedRenderNodes(view, ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var rn = renderNode(view, nodeDef);\r\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\r\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\r\n                // Note: we might need to do both actions.\r\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\r\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\r\n                }\r\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\r\n                    /** @type {?} */\r\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\r\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\r\n                }\r\n            }\r\n            else {\r\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\r\n            }\r\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\r\n                /** @type {?} */\r\n                var embeddedViews = ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\r\n                for (var k = 0; k < embeddedViews.length; k++) {\r\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\r\n                }\r\n            }\r\n            if (nodeDef.flags & 1 /* TypeElement */ && !((nodeDef.element)).name) {\r\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} renderNode\r\n     * @param {?} action\r\n     * @param {?} parentNode\r\n     * @param {?} nextSibling\r\n     * @param {?=} target\r\n     * @return {?}\r\n     */\r\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\r\n        /** @type {?} */\r\n        var renderer = view.renderer;\r\n        switch (action) {\r\n            case 1 /* AppendChild */:\r\n                renderer.appendChild(parentNode, renderNode);\r\n                break;\r\n            case 2 /* InsertBefore */:\r\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\r\n                break;\r\n            case 3 /* RemoveChild */:\r\n                renderer.removeChild(parentNode, renderNode);\r\n                break;\r\n            case 0 /* Collect */:\r\n                ((target)).push(renderNode);\r\n                break;\r\n        }\r\n    }\r\n    /** @type {?} */\r\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\r\n    /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function splitNamespace(name) {\r\n        if (name[0] === ':') {\r\n            /** @type {?} */\r\n            var match = ((name.match(NS_PREFIX_RE)));\r\n            return [match[1], match[2]];\r\n        }\r\n        return ['', name];\r\n    }\r\n    /**\r\n     * @param {?} bindings\r\n     * @return {?}\r\n     */\r\n    function calcBindingFlags(bindings) {\r\n        /** @type {?} */\r\n        var flags = 0;\r\n        for (var i = 0; i < bindings.length; i++) {\r\n            flags |= bindings[i].flags;\r\n        }\r\n        return flags;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} checkIndex\r\n     * @param {?} flags\r\n     * @param {?} matchedQueriesDsl\r\n     * @param {?} ngContentIndex\r\n     * @param {?} childCount\r\n     * @param {?} namespaceAndName\r\n     * @param {?=} fixedAttrs\r\n     * @param {?=} bindings\r\n     * @param {?=} outputs\r\n     * @param {?=} handleEvent\r\n     * @param {?=} componentView\r\n     * @param {?=} componentRendererType\r\n     * @return {?}\r\n     */\r\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\r\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\r\n        if (!handleEvent) {\r\n            handleEvent = NOOP;\r\n        }\r\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\r\n        /** @type {?} */\r\n        var ns = ((null));\r\n        /** @type {?} */\r\n        var name = ((null));\r\n        if (namespaceAndName) {\r\n            _c = splitNamespace(namespaceAndName), ns = _c[0], name = _c[1];\r\n        }\r\n        bindings = bindings || [];\r\n        /** @type {?} */\r\n        var bindingDefs = new Array(bindings.length);\r\n        for (var i = 0; i < bindings.length; i++) {\r\n            var _d = bindings[i], bindingFlags = _d[0], namespaceAndName_1 = _d[1], suffixOrSecurityContext = _d[2];\r\n            var _e = splitNamespace(namespaceAndName_1), ns_1 = _e[0], name_1 = _e[1];\r\n            /** @type {?} */\r\n            var securityContext = ((undefined));\r\n            /** @type {?} */\r\n            var suffix = ((undefined));\r\n            switch (bindingFlags & 15 /* Types */) {\r\n                case 4 /* TypeElementStyle */:\r\n                    suffix = ((suffixOrSecurityContext));\r\n                    break;\r\n                case 1 /* TypeElementAttribute */:\r\n                case 8 /* TypeProperty */:\r\n                    securityContext = ((suffixOrSecurityContext));\r\n                    break;\r\n            }\r\n            bindingDefs[i] =\r\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\r\n        }\r\n        outputs = outputs || [];\r\n        /** @type {?} */\r\n        var outputDefs = new Array(outputs.length);\r\n        for (var i = 0; i < outputs.length; i++) {\r\n            var _f = outputs[i], target = _f[0], eventName = _f[1];\r\n            outputDefs[i] = {\r\n                type: 0 /* ElementOutput */,\r\n                target: ((target)), eventName: eventName,\r\n                propName: null\r\n            };\r\n        }\r\n        fixedAttrs = fixedAttrs || [];\r\n        /** @type {?} */\r\n        var attrs = ((fixedAttrs.map(function (_b) {\r\n            var namespaceAndName = _b[0], value = _b[1];\r\n            var _c = splitNamespace(namespaceAndName), ns = _c[0], name = _c[1];\r\n            return [ns, name, value];\r\n        })));\r\n        componentRendererType = resolveRendererType2(componentRendererType);\r\n        if (componentView) {\r\n            flags |= 33554432 /* ComponentView */;\r\n        }\r\n        flags |= 1 /* TypeElement */;\r\n        return {\r\n            // will bet set by the view definition\r\n            nodeIndex: -1,\r\n            parent: null,\r\n            renderParent: null,\r\n            bindingIndex: -1,\r\n            outputIndex: -1,\r\n            // regular values\r\n            checkIndex: checkIndex,\r\n            flags: flags,\r\n            childFlags: 0,\r\n            directChildFlags: 0,\r\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\r\n            bindings: bindingDefs,\r\n            bindingFlags: calcBindingFlags(bindingDefs),\r\n            outputs: outputDefs,\r\n            element: {\r\n                ns: ns,\r\n                name: name,\r\n                attrs: attrs,\r\n                template: null,\r\n                // will bet set by the view definition\r\n                componentProvider: null,\r\n                componentView: componentView || null,\r\n                componentRendererType: componentRendererType,\r\n                publicProviders: null,\r\n                allProviders: null,\r\n                handleEvent: handleEvent || NOOP,\r\n            },\r\n            provider: null,\r\n            text: null,\r\n            query: null,\r\n            ngContent: null\r\n        };\r\n        var _c;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} renderHost\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function createElement(view, renderHost, def) {\r\n        /** @type {?} */\r\n        var elDef = ((def.element));\r\n        /** @type {?} */\r\n        var rootSelectorOrNode = view.root.selectorOrNode;\r\n        /** @type {?} */\r\n        var renderer = view.renderer;\r\n        /** @type {?} */\r\n        var el;\r\n        if (view.parent || !rootSelectorOrNode) {\r\n            if (elDef.name) {\r\n                el = renderer.createElement(elDef.name, elDef.ns);\r\n            }\r\n            else {\r\n                el = renderer.createComment('');\r\n            }\r\n            /** @type {?} */\r\n            var parentEl = getParentRenderElement(view, renderHost, def);\r\n            if (parentEl) {\r\n                renderer.appendChild(parentEl, el);\r\n            }\r\n        }\r\n        else {\r\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\r\n            /** @type {?} */\r\n            var preserveContent = (!!elDef.componentRendererType &&\r\n                elDef.componentRendererType.encapsulation === ViewEncapsulation.ShadowDom);\r\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\r\n        }\r\n        if (elDef.attrs) {\r\n            for (var i = 0; i < elDef.attrs.length; i++) {\r\n                var _b = elDef.attrs[i], ns = _b[0], name_2 = _b[1], value = _b[2];\r\n                renderer.setAttribute(el, name_2, value, ns);\r\n            }\r\n        }\r\n        return el;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} compView\r\n     * @param {?} def\r\n     * @param {?} el\r\n     * @return {?}\r\n     */\r\n    function listenToElementOutputs(view, compView, def, el) {\r\n        for (var i = 0; i < def.outputs.length; i++) {\r\n            /** @type {?} */\r\n            var output = def.outputs[i];\r\n            /** @type {?} */\r\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\r\n            /** @type {?} */\r\n            var listenTarget = output.target;\r\n            /** @type {?} */\r\n            var listenerView = view;\r\n            if (output.target === 'component') {\r\n                listenTarget = null;\r\n                listenerView = compView;\r\n            }\r\n            /** @type {?} */\r\n            var disposable = ((listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)));\r\n            ((view.disposables))[def.outputIndex + i] = disposable;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} index\r\n     * @param {?} eventName\r\n     * @return {?}\r\n     */\r\n    function renderEventHandlerClosure(view, index, eventName) {\r\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @param {?} v0\r\n     * @param {?} v1\r\n     * @param {?} v2\r\n     * @param {?} v3\r\n     * @param {?} v4\r\n     * @param {?} v5\r\n     * @param {?} v6\r\n     * @param {?} v7\r\n     * @param {?} v8\r\n     * @param {?} v9\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\r\n        /** @type {?} */\r\n        var bindLen = def.bindings.length;\r\n        /** @type {?} */\r\n        var changed = false;\r\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\r\n            changed = true;\r\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\r\n            changed = true;\r\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\r\n            changed = true;\r\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\r\n            changed = true;\r\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\r\n            changed = true;\r\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\r\n            changed = true;\r\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\r\n            changed = true;\r\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\r\n            changed = true;\r\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\r\n            changed = true;\r\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\r\n            changed = true;\r\n        return changed;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @param {?} values\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdateElementDynamic(view, def, values) {\r\n        /** @type {?} */\r\n        var changed = false;\r\n        for (var i = 0; i < values.length; i++) {\r\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\r\n                changed = true;\r\n        }\r\n        return changed;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @param {?} bindingIdx\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\r\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\r\n            return false;\r\n        }\r\n        /** @type {?} */\r\n        var binding = def.bindings[bindingIdx];\r\n        /** @type {?} */\r\n        var elData = asElementData(view, def.nodeIndex);\r\n        /** @type {?} */\r\n        var renderNode$$1 = elData.renderElement;\r\n        /** @type {?} */\r\n        var name = ((binding.name));\r\n        switch (binding.flags & 15 /* Types */) {\r\n            case 1 /* TypeElementAttribute */:\r\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\r\n                break;\r\n            case 2 /* TypeElementClass */:\r\n                setElementClass(view, renderNode$$1, name, value);\r\n                break;\r\n            case 4 /* TypeElementStyle */:\r\n                setElementStyle(view, binding, renderNode$$1, name, value);\r\n                break;\r\n            case 8 /* TypeProperty */:\r\n                /** @type {?} */\r\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\r\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\r\n                    elData.componentView :\r\n                    view;\r\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} binding\r\n     * @param {?} renderNode\r\n     * @param {?} ns\r\n     * @param {?} name\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\r\n        /** @type {?} */\r\n        var securityContext = binding.securityContext;\r\n        /** @type {?} */\r\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\r\n        renderValue = renderValue != null ? renderValue.toString() : null;\r\n        /** @type {?} */\r\n        var renderer = view.renderer;\r\n        if (value != null) {\r\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\r\n        }\r\n        else {\r\n            renderer.removeAttribute(renderNode$$1, name, ns);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} renderNode\r\n     * @param {?} name\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function setElementClass(view, renderNode$$1, name, value) {\r\n        /** @type {?} */\r\n        var renderer = view.renderer;\r\n        if (value) {\r\n            renderer.addClass(renderNode$$1, name);\r\n        }\r\n        else {\r\n            renderer.removeClass(renderNode$$1, name);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} binding\r\n     * @param {?} renderNode\r\n     * @param {?} name\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\r\n        /** @type {?} */\r\n        var renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, ((value)));\r\n        if (renderValue != null) {\r\n            renderValue = renderValue.toString();\r\n            /** @type {?} */\r\n            var unit = binding.suffix;\r\n            if (unit != null) {\r\n                renderValue = renderValue + unit;\r\n            }\r\n        }\r\n        else {\r\n            renderValue = null;\r\n        }\r\n        /** @type {?} */\r\n        var renderer = view.renderer;\r\n        if (renderValue != null) {\r\n            renderer.setStyle(renderNode$$1, name, renderValue);\r\n        }\r\n        else {\r\n            renderer.removeStyle(renderNode$$1, name);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} binding\r\n     * @param {?} renderNode\r\n     * @param {?} name\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\r\n        /** @type {?} */\r\n        var securityContext = binding.securityContext;\r\n        /** @type {?} */\r\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\r\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var UNDEFINED_VALUE = new Object();\r\n    /** @type {?} */\r\n    var InjectorRefTokenKey = tokenKey(Injector);\r\n    /** @type {?} */\r\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\r\n    /** @type {?} */\r\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\r\n    /**\r\n     * @param {?} flags\r\n     * @param {?} token\r\n     * @param {?} value\r\n     * @param {?} deps\r\n     * @return {?}\r\n     */\r\n    function moduleProvideDef(flags, token, value, deps) {\r\n        // Need to resolve forwardRefs as e.g. for `useValue` we\r\n        // lowered the expression and then stopped evaluating it,\r\n        // i.e. also didn't unwrap it.\r\n        value = resolveForwardRef(value);\r\n        /** @type {?} */\r\n        var depDefs = splitDepsDsl(deps, stringify(token));\r\n        return {\r\n            // will bet set by the module definition\r\n            index: -1,\r\n            deps: depDefs, flags: flags, token: token, value: value\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} providers\r\n     * @return {?}\r\n     */\r\n    function moduleDef(providers) {\r\n        /** @type {?} */\r\n        var providersByKey = {};\r\n        /** @type {?} */\r\n        var modules = [];\r\n        /** @type {?} */\r\n        var isRoot = false;\r\n        for (var i = 0; i < providers.length; i++) {\r\n            /** @type {?} */\r\n            var provider = providers[i];\r\n            if (provider.token === APP_ROOT && provider.value === true) {\r\n                isRoot = true;\r\n            }\r\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\r\n                modules.push(provider.token);\r\n            }\r\n            provider.index = i;\r\n            providersByKey[tokenKey(provider.token)] = provider;\r\n        }\r\n        return {\r\n            // Will be filled later...\r\n            factory: null,\r\n            providersByKey: providersByKey,\r\n            providers: providers,\r\n            modules: modules,\r\n            isRoot: isRoot,\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function initNgModule(data) {\r\n        /** @type {?} */\r\n        var def = data._def;\r\n        /** @type {?} */\r\n        var providers = data._providers = new Array(def.providers.length);\r\n        for (var i = 0; i < def.providers.length; i++) {\r\n            /** @type {?} */\r\n            var provDef = def.providers[i];\r\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\r\n                // Make sure the provider has not been already initialized outside this loop.\r\n                if (providers[i] === undefined) {\r\n                    providers[i] = _createProviderInstance(data, provDef);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} data\r\n     * @param {?} depDef\r\n     * @param {?=} notFoundValue\r\n     * @return {?}\r\n     */\r\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\r\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\r\n        /** @type {?} */\r\n        var former = setCurrentInjector(data);\r\n        try {\r\n            if (depDef.flags & 8 /* Value */) {\r\n                return depDef.token;\r\n            }\r\n            if (depDef.flags & 2 /* Optional */) {\r\n                notFoundValue = null;\r\n            }\r\n            if (depDef.flags & 1 /* SkipSelf */) {\r\n                return data._parent.get(depDef.token, notFoundValue);\r\n            }\r\n            /** @type {?} */\r\n            var tokenKey$$1 = depDef.tokenKey;\r\n            switch (tokenKey$$1) {\r\n                case InjectorRefTokenKey:\r\n                case INJECTORRefTokenKey:\r\n                case NgModuleRefTokenKey:\r\n                    return data;\r\n            }\r\n            /** @type {?} */\r\n            var providerDef = data._def.providersByKey[tokenKey$$1];\r\n            /** @type {?} */\r\n            var injectableDef = void 0;\r\n            if (providerDef) {\r\n                /** @type {?} */\r\n                var providerInstance = data._providers[providerDef.index];\r\n                if (providerInstance === undefined) {\r\n                    providerInstance = data._providers[providerDef.index] =\r\n                        _createProviderInstance(data, providerDef);\r\n                }\r\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\r\n            }\r\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\r\n                /** @type {?} */\r\n                var index = data._providers.length;\r\n                data._def.providersByKey[depDef.tokenKey] = {\r\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\r\n                    value: injectableDef.factory,\r\n                    deps: [], index: index,\r\n                    token: depDef.token,\r\n                };\r\n                data._providers[index] = UNDEFINED_VALUE;\r\n                return (data._providers[index] =\r\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\r\n            }\r\n            else if (depDef.flags & 4 /* Self */) {\r\n                return notFoundValue;\r\n            }\r\n            return data._parent.get(depDef.token, notFoundValue);\r\n        }\r\n        finally {\r\n            setCurrentInjector(former);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} ngModule\r\n     * @param {?} scope\r\n     * @return {?}\r\n     */\r\n    function moduleTransitivelyPresent(ngModule, scope) {\r\n        return ngModule._def.modules.indexOf(scope) > -1;\r\n    }\r\n    /**\r\n     * @param {?} ngModule\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function targetsModule(ngModule, def) {\r\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\r\n            def.providedIn === 'root' && ngModule._def.isRoot);\r\n    }\r\n    /**\r\n     * @param {?} ngModule\r\n     * @param {?} providerDef\r\n     * @return {?}\r\n     */\r\n    function _createProviderInstance(ngModule, providerDef) {\r\n        /** @type {?} */\r\n        var injectable;\r\n        switch (providerDef.flags & 201347067 /* Types */) {\r\n            case 512 /* TypeClassProvider */:\r\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\r\n                break;\r\n            case 1024 /* TypeFactoryProvider */:\r\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\r\n                break;\r\n            case 2048 /* TypeUseExistingProvider */:\r\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\r\n                break;\r\n            case 256 /* TypeValueProvider */:\r\n                injectable = providerDef.value;\r\n                break;\r\n        }\r\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\r\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\r\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\r\n        // set (ngOnDestroy was detected statically).\r\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\r\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\r\n            providerDef.flags |= 131072 /* OnDestroy */;\r\n        }\r\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\r\n    }\r\n    /**\r\n     * @param {?} ngModule\r\n     * @param {?} ctor\r\n     * @param {?} deps\r\n     * @return {?}\r\n     */\r\n    function _createClass(ngModule, ctor, deps) {\r\n        /** @type {?} */\r\n        var len = deps.length;\r\n        switch (len) {\r\n            case 0:\r\n                return new ctor();\r\n            case 1:\r\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\r\n            case 2:\r\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\r\n            case 3:\r\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\r\n            default:\r\n                /** @type {?} */\r\n                var depValues = new Array(len);\r\n                for (var i = 0; i < len; i++) {\r\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\r\n                }\r\n                return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} ngModule\r\n     * @param {?} factory\r\n     * @param {?} deps\r\n     * @return {?}\r\n     */\r\n    function _callFactory(ngModule, factory, deps) {\r\n        /** @type {?} */\r\n        var len = deps.length;\r\n        switch (len) {\r\n            case 0:\r\n                return factory();\r\n            case 1:\r\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\r\n            case 2:\r\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\r\n            case 3:\r\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\r\n            default:\r\n                /** @type {?} */\r\n                var depValues = Array(len);\r\n                for (var i = 0; i < len; i++) {\r\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\r\n                }\r\n                return factory.apply(void 0, depValues);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} ngModule\r\n     * @param {?} lifecycles\r\n     * @return {?}\r\n     */\r\n    function callNgModuleLifecycle(ngModule, lifecycles) {\r\n        /** @type {?} */\r\n        var def = ngModule._def;\r\n        /** @type {?} */\r\n        var destroyed = new Set();\r\n        for (var i = 0; i < def.providers.length; i++) {\r\n            /** @type {?} */\r\n            var provDef = def.providers[i];\r\n            if (provDef.flags & 131072 /* OnDestroy */) {\r\n                /** @type {?} */\r\n                var instance = ngModule._providers[i];\r\n                if (instance && instance !== UNDEFINED_VALUE) {\r\n                    /** @type {?} */\r\n                    var onDestroy = instance.ngOnDestroy;\r\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\r\n                        onDestroy.apply(instance);\r\n                        destroyed.add(instance);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} parentView\r\n     * @param {?} elementData\r\n     * @param {?} viewIndex\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\r\n        /** @type {?} */\r\n        var embeddedViews = ((elementData.viewContainer))._embeddedViews;\r\n        if (viewIndex === null || viewIndex === undefined) {\r\n            viewIndex = embeddedViews.length;\r\n        }\r\n        view.viewContainerParent = parentView;\r\n        addToArray(embeddedViews, ((viewIndex)), view);\r\n        attachProjectedView(elementData, view);\r\n        Services.dirtyParentQueries(view);\r\n        /** @type {?} */\r\n        var prevView = ((viewIndex)) > 0 ? embeddedViews[((viewIndex)) - 1] : null;\r\n        renderAttachEmbeddedView(elementData, prevView, view);\r\n    }\r\n    /**\r\n     * @param {?} vcElementData\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function attachProjectedView(vcElementData, view) {\r\n        /** @type {?} */\r\n        var dvcElementData = declaredViewContainer(view);\r\n        if (!dvcElementData || dvcElementData === vcElementData ||\r\n            view.state & 16 /* IsProjectedView */) {\r\n            return;\r\n        }\r\n        // Note: For performance reasons, we\r\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\r\n        //   and remove it not until the view is destroyed.\r\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\r\n        //    nested projected views as well, even across component boundaries).\r\n        // - don't track the insertion order of views in the projected views array\r\n        //   (hard, as when the views of the same template are inserted different view containers)\r\n        view.state |= 16 /* IsProjectedView */;\r\n        /** @type {?} */\r\n        var projectedViews = dvcElementData.template._projectedViews;\r\n        if (!projectedViews) {\r\n            projectedViews = dvcElementData.template._projectedViews = [];\r\n        }\r\n        projectedViews.push(view);\r\n        // Note: we are changing the NodeDef here as we cannot calculate\r\n        // the fact whether a template is used for projection during compilation.\r\n        markNodeAsProjectedTemplate(((view.parent)).def, ((view.parentNodeDef)));\r\n    }\r\n    /**\r\n     * @param {?} viewDef\r\n     * @param {?} nodeDef\r\n     * @return {?}\r\n     */\r\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\r\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\r\n            return;\r\n        }\r\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\r\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\r\n        /** @type {?} */\r\n        var parentNodeDef = nodeDef.parent;\r\n        while (parentNodeDef) {\r\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\r\n            parentNodeDef = parentNodeDef.parent;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} elementData\r\n     * @param {?=} viewIndex\r\n     * @return {?}\r\n     */\r\n    function detachEmbeddedView(elementData, viewIndex) {\r\n        /** @type {?} */\r\n        var embeddedViews = ((elementData.viewContainer))._embeddedViews;\r\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\r\n            viewIndex = embeddedViews.length - 1;\r\n        }\r\n        if (viewIndex < 0) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var view = embeddedViews[viewIndex];\r\n        view.viewContainerParent = null;\r\n        removeFromArray(embeddedViews, viewIndex);\r\n        // See attachProjectedView for why we don't update projectedViews here.\r\n        Services.dirtyParentQueries(view);\r\n        renderDetachView(view);\r\n        return view;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function detachProjectedView(view) {\r\n        if (!(view.state & 16 /* IsProjectedView */)) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var dvcElementData = declaredViewContainer(view);\r\n        if (dvcElementData) {\r\n            /** @type {?} */\r\n            var projectedViews = dvcElementData.template._projectedViews;\r\n            if (projectedViews) {\r\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\r\n                Services.dirtyParentQueries(view);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} elementData\r\n     * @param {?} oldViewIndex\r\n     * @param {?} newViewIndex\r\n     * @return {?}\r\n     */\r\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\r\n        /** @type {?} */\r\n        var embeddedViews = ((elementData.viewContainer))._embeddedViews;\r\n        /** @type {?} */\r\n        var view = embeddedViews[oldViewIndex];\r\n        removeFromArray(embeddedViews, oldViewIndex);\r\n        if (newViewIndex == null) {\r\n            newViewIndex = embeddedViews.length;\r\n        }\r\n        addToArray(embeddedViews, newViewIndex, view);\r\n        // Note: Don't need to change projectedViews as the order in there\r\n        // as always invalid...\r\n        Services.dirtyParentQueries(view);\r\n        renderDetachView(view);\r\n        /** @type {?} */\r\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\r\n        renderAttachEmbeddedView(elementData, prevView, view);\r\n        return view;\r\n    }\r\n    /**\r\n     * @param {?} elementData\r\n     * @param {?} prevView\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function renderAttachEmbeddedView(elementData, prevView, view) {\r\n        /** @type {?} */\r\n        var prevRenderNode = prevView ? renderNode(prevView, ((prevView.def.lastRenderRootNode))) :\r\n            elementData.renderElement;\r\n        /** @type {?} */\r\n        var parentNode = view.renderer.parentNode(prevRenderNode);\r\n        /** @type {?} */\r\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\r\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\r\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\r\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function renderDetachView(view) {\r\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\r\n    }\r\n    /**\r\n     * @param {?} arr\r\n     * @param {?} index\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function addToArray(arr, index, value) {\r\n        // perf: array.push is faster than array.splice!\r\n        if (index >= arr.length) {\r\n            arr.push(value);\r\n        }\r\n        else {\r\n            arr.splice(index, 0, value);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} arr\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function removeFromArray(arr, index) {\r\n        // perf: array.pop is faster than array.splice!\r\n        if (index >= arr.length - 1) {\r\n            arr.pop();\r\n        }\r\n        else {\r\n            arr.splice(index, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var EMPTY_CONTEXT = new Object();\r\n    // Attention: this function is called as top level function.\r\n    // Putting any logic in here will destroy closure tree shaking!\r\n    /**\r\n     * @param {?} selector\r\n     * @param {?} componentType\r\n     * @param {?} viewDefFactory\r\n     * @param {?} inputs\r\n     * @param {?} outputs\r\n     * @param {?} ngContentSelectors\r\n     * @return {?}\r\n     */\r\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\r\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\r\n    }\r\n    /**\r\n     * @param {?} componentFactory\r\n     * @return {?}\r\n     */\r\n    function getComponentViewDefinitionFactory(componentFactory) {\r\n        return (((componentFactory))).viewDefFactory;\r\n    }\r\n    var ComponentFactory_ = /** @class */ (function (_super) {\r\n        __extends(ComponentFactory_, _super);\r\n        /**\r\n         * @param {?} selector\r\n         * @param {?} componentType\r\n         * @param {?} viewDefFactory\r\n         * @param {?} _inputs\r\n         * @param {?} _outputs\r\n         * @param {?} ngContentSelectors\r\n         */\r\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\r\n            var _this = \r\n            // Attention: this ctor is called as top level function.\r\n            // Putting any logic in here will destroy closure tree shaking!\r\n            _super.call(this) || this;\r\n            _this.selector = selector;\r\n            _this.componentType = componentType;\r\n            _this._inputs = _inputs;\r\n            _this._outputs = _outputs;\r\n            _this.ngContentSelectors = ngContentSelectors;\r\n            _this.viewDefFactory = viewDefFactory;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                /** @type {?} */\r\n                var inputsArr = [];\r\n                /** @type {?} */\r\n                var inputs = ((this._inputs));\r\n                for (var propName in inputs) {\r\n                    /** @type {?} */\r\n                    var templateName = inputs[propName];\r\n                    inputsArr.push({ propName: propName, templateName: templateName });\r\n                }\r\n                return inputsArr;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                /** @type {?} */\r\n                var outputsArr = [];\r\n                for (var propName in this._outputs) {\r\n                    /** @type {?} */\r\n                    var templateName = this._outputs[propName];\r\n                    outputsArr.push({ propName: propName, templateName: templateName });\r\n                }\r\n                return outputsArr;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Creates a new component.\r\n         * @param {?} injector\r\n         * @param {?=} projectableNodes\r\n         * @param {?=} rootSelectorOrNode\r\n         * @param {?=} ngModule\r\n         * @return {?}\r\n         */\r\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\r\n            if (!ngModule) {\r\n                throw new Error('ngModule should be provided');\r\n            }\r\n            /** @type {?} */\r\n            var viewDef = resolveDefinition(this.viewDefFactory);\r\n            /** @type {?} */\r\n            var componentNodeIndex = ((((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\r\n            /** @type {?} */\r\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\r\n            /** @type {?} */\r\n            var component = asProviderData(view, componentNodeIndex).instance;\r\n            if (rootSelectorOrNode) {\r\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\r\n            }\r\n            return new ComponentRef_(view, new ViewRef_(view), component);\r\n        };\r\n        return ComponentFactory_;\r\n    }(ComponentFactory));\r\n    var ComponentRef_ = /** @class */ (function (_super) {\r\n        __extends(ComponentRef_, _super);\r\n        /**\r\n         * @param {?} _view\r\n         * @param {?} _viewRef\r\n         * @param {?} _component\r\n         */\r\n        function ComponentRef_(_view, _viewRef, _component) {\r\n            var _this = _super.call(this) || this;\r\n            _this._view = _view;\r\n            _this._viewRef = _viewRef;\r\n            _this._component = _component;\r\n            _this._elDef = _this._view.def.nodes[0];\r\n            _this.hostView = _viewRef;\r\n            _this.changeDetectorRef = _viewRef;\r\n            _this.instance = _component;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return new Injector_(this._view, this._elDef); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return ((this._component.constructor)); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\r\n        /**\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\r\n        return ComponentRef_;\r\n    }(ComponentRef));\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} elDef\r\n     * @param {?} elData\r\n     * @return {?}\r\n     */\r\n    function createViewContainerData(view, elDef, elData) {\r\n        return new ViewContainerRef_(view, elDef, elData);\r\n    }\r\n    var ViewContainerRef_ = /** @class */ (function () {\r\n        /**\r\n         * @param {?} _view\r\n         * @param {?} _elDef\r\n         * @param {?} _data\r\n         */\r\n        function ViewContainerRef_(_view, _elDef, _data) {\r\n            this._view = _view;\r\n            this._elDef = _elDef;\r\n            this._data = _data;\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._embeddedViews = [];\r\n        }\r\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return new ElementRef(this._data.renderElement); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return new Injector_(this._view, this._elDef); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\r\n            /**\r\n             * @deprecated No replacement\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                /** @type {?} */\r\n                var view = this._view;\r\n                /** @type {?} */\r\n                var elDef = this._elDef.parent;\r\n                while (!elDef && view) {\r\n                    elDef = viewParentEl(view);\r\n                    view = ((view.parent));\r\n                }\r\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ViewContainerRef_.prototype.clear = function () {\r\n            /** @type {?} */\r\n            var len = this._embeddedViews.length;\r\n            for (var i = len - 1; i >= 0; i--) {\r\n                /** @type {?} */\r\n                var view = ((detachEmbeddedView(this._data, i)));\r\n                Services.destroyView(view);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n        ViewContainerRef_.prototype.get = function (index) {\r\n            /** @type {?} */\r\n            var view = this._embeddedViews[index];\r\n            if (view) {\r\n                /** @type {?} */\r\n                var ref = new ViewRef_(view);\r\n                ref.attachToViewContainerRef(this);\r\n                return ref;\r\n            }\r\n            return null;\r\n        };\r\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._embeddedViews.length; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @template C\r\n         * @param {?} templateRef\r\n         * @param {?=} context\r\n         * @param {?=} index\r\n         * @return {?}\r\n         */\r\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\r\n            /** @type {?} */\r\n            var viewRef = templateRef.createEmbeddedView(context || (({})));\r\n            this.insert(viewRef, index);\r\n            return viewRef;\r\n        };\r\n        /**\r\n         * @template C\r\n         * @param {?} componentFactory\r\n         * @param {?=} index\r\n         * @param {?=} injector\r\n         * @param {?=} projectableNodes\r\n         * @param {?=} ngModuleRef\r\n         * @return {?}\r\n         */\r\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\r\n            /** @type {?} */\r\n            var contextInjector = injector || this.parentInjector;\r\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\r\n                ngModuleRef = contextInjector.get(NgModuleRef);\r\n            }\r\n            /** @type {?} */\r\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\r\n            this.insert(componentRef.hostView, index);\r\n            return componentRef;\r\n        };\r\n        /**\r\n         * @param {?} viewRef\r\n         * @param {?=} index\r\n         * @return {?}\r\n         */\r\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\r\n            if (viewRef.destroyed) {\r\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\r\n            }\r\n            /** @type {?} */\r\n            var viewRef_ = ((viewRef));\r\n            /** @type {?} */\r\n            var viewData = viewRef_._view;\r\n            attachEmbeddedView(this._view, this._data, index, viewData);\r\n            viewRef_.attachToViewContainerRef(this);\r\n            return viewRef;\r\n        };\r\n        /**\r\n         * @param {?} viewRef\r\n         * @param {?} currentIndex\r\n         * @return {?}\r\n         */\r\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\r\n            if (viewRef.destroyed) {\r\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\r\n            }\r\n            /** @type {?} */\r\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\r\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\r\n            return viewRef;\r\n        };\r\n        /**\r\n         * @param {?} viewRef\r\n         * @return {?}\r\n         */\r\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\r\n            return this._embeddedViews.indexOf((((viewRef)))._view);\r\n        };\r\n        /**\r\n         * @param {?=} index\r\n         * @return {?}\r\n         */\r\n        ViewContainerRef_.prototype.remove = function (index) {\r\n            /** @type {?} */\r\n            var viewData = detachEmbeddedView(this._data, index);\r\n            if (viewData) {\r\n                Services.destroyView(viewData);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?=} index\r\n         * @return {?}\r\n         */\r\n        ViewContainerRef_.prototype.detach = function (index) {\r\n            /** @type {?} */\r\n            var view = detachEmbeddedView(this._data, index);\r\n            return view ? new ViewRef_(view) : null;\r\n        };\r\n        return ViewContainerRef_;\r\n    }());\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function createChangeDetectorRef(view) {\r\n        return new ViewRef_(view);\r\n    }\r\n    var ViewRef_ = /** @class */ (function () {\r\n        /**\r\n         * @param {?} _view\r\n         */\r\n        function ViewRef_(_view) {\r\n            this._view = _view;\r\n            this._viewContainerRef = null;\r\n            this._appRef = null;\r\n        }\r\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return rootRenderNodes(this._view); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._view.context; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ViewRef_.prototype.detectChanges = function () {\r\n            /** @type {?} */\r\n            var fs = this._view.root.rendererFactory;\r\n            if (fs.begin) {\r\n                fs.begin();\r\n            }\r\n            try {\r\n                Services.checkAndUpdateView(this._view);\r\n            }\r\n            finally {\r\n                if (fs.end) {\r\n                    fs.end();\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\r\n        /**\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        ViewRef_.prototype.onDestroy = function (callback) {\r\n            if (!this._view.disposables) {\r\n                this._view.disposables = [];\r\n            }\r\n            this._view.disposables.push(((callback)));\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ViewRef_.prototype.destroy = function () {\r\n            if (this._appRef) {\r\n                this._appRef.detachView(this);\r\n            }\r\n            else if (this._viewContainerRef) {\r\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\r\n            }\r\n            Services.destroyView(this._view);\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ViewRef_.prototype.detachFromAppRef = function () {\r\n            this._appRef = null;\r\n            renderDetachView(this._view);\r\n            Services.dirtyParentQueries(this._view);\r\n        };\r\n        /**\r\n         * @param {?} appRef\r\n         * @return {?}\r\n         */\r\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\r\n            if (this._viewContainerRef) {\r\n                throw new Error('This view is already attached to a ViewContainer!');\r\n            }\r\n            this._appRef = appRef;\r\n        };\r\n        /**\r\n         * @param {?} vcRef\r\n         * @return {?}\r\n         */\r\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\r\n            if (this._appRef) {\r\n                throw new Error('This view is already attached directly to the ApplicationRef!');\r\n            }\r\n            this._viewContainerRef = vcRef;\r\n        };\r\n        return ViewRef_;\r\n    }());\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function createTemplateData(view, def) {\r\n        return new TemplateRef_(view, def);\r\n    }\r\n    var TemplateRef_ = /** @class */ (function (_super) {\r\n        __extends(TemplateRef_, _super);\r\n        /**\r\n         * @param {?} _parentView\r\n         * @param {?} _def\r\n         */\r\n        function TemplateRef_(_parentView, _def) {\r\n            var _this = _super.call(this) || this;\r\n            _this._parentView = _parentView;\r\n            _this._def = _def;\r\n            return _this;\r\n        }\r\n        /**\r\n         * @param {?} context\r\n         * @return {?}\r\n         */\r\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\r\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, ((((this._def.element)).template)), context));\r\n        };\r\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return TemplateRef_;\r\n    }(TemplateRef));\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} elDef\r\n     * @return {?}\r\n     */\r\n    function createInjector$1(view, elDef) {\r\n        return new Injector_(view, elDef);\r\n    }\r\n    var Injector_ = /** @class */ (function () {\r\n        /**\r\n         * @param {?} view\r\n         * @param {?} elDef\r\n         */\r\n        function Injector_(view, elDef) {\r\n            this.view = view;\r\n            this.elDef = elDef;\r\n        }\r\n        /**\r\n         * @param {?} token\r\n         * @param {?=} notFoundValue\r\n         * @return {?}\r\n         */\r\n        Injector_.prototype.get = function (token, notFoundValue) {\r\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\r\n            /** @type {?} */\r\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\r\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\r\n        };\r\n        return Injector_;\r\n    }());\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function createRendererV1(view) {\r\n        return new RendererAdapter(view.renderer);\r\n    }\r\n    var RendererAdapter = /** @class */ (function () {\r\n        /**\r\n         * @param {?} delegate\r\n         */\r\n        function RendererAdapter(delegate) {\r\n            this.delegate = delegate;\r\n        }\r\n        /**\r\n         * @param {?} selectorOrNode\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\r\n            return this.delegate.selectRootElement(selectorOrNode);\r\n        };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} namespaceAndName\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\r\n            var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\r\n            /** @type {?} */\r\n            var el = this.delegate.createElement(name, ns);\r\n            if (parent) {\r\n                this.delegate.appendChild(parent, el);\r\n            }\r\n            return el;\r\n        };\r\n        /**\r\n         * @param {?} hostElement\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\r\n        /**\r\n         * @param {?} parentElement\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\r\n            /** @type {?} */\r\n            var comment = this.delegate.createComment('');\r\n            if (parentElement) {\r\n                this.delegate.appendChild(parentElement, comment);\r\n            }\r\n            return comment;\r\n        };\r\n        /**\r\n         * @param {?} parentElement\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.createText = function (parentElement, value) {\r\n            /** @type {?} */\r\n            var node = this.delegate.createText(value);\r\n            if (parentElement) {\r\n                this.delegate.appendChild(parentElement, node);\r\n            }\r\n            return node;\r\n        };\r\n        /**\r\n         * @param {?} parentElement\r\n         * @param {?} nodes\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                this.delegate.appendChild(parentElement, nodes[i]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} node\r\n         * @param {?} viewRootNodes\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\r\n            /** @type {?} */\r\n            var parentElement = this.delegate.parentNode(node);\r\n            /** @type {?} */\r\n            var nextSibling = this.delegate.nextSibling(node);\r\n            for (var i = 0; i < viewRootNodes.length; i++) {\r\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} viewRootNodes\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\r\n            for (var i = 0; i < viewRootNodes.length; i++) {\r\n                /** @type {?} */\r\n                var node = viewRootNodes[i];\r\n                /** @type {?} */\r\n                var parentElement = this.delegate.parentNode(node);\r\n                this.delegate.removeChild(parentElement, node);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} hostElement\r\n         * @param {?} viewAllNodes\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\r\n            for (var i = 0; i < viewAllNodes.length; i++) {\r\n                ((this.delegate.destroyNode))(viewAllNodes[i]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} renderElement\r\n         * @param {?} name\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\r\n            return this.delegate.listen(renderElement, name, ((callback)));\r\n        };\r\n        /**\r\n         * @param {?} target\r\n         * @param {?} name\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\r\n            return this.delegate.listen(target, name, ((callback)));\r\n        };\r\n        /**\r\n         * @param {?} renderElement\r\n         * @param {?} propertyName\r\n         * @param {?} propertyValue\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\r\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\r\n        };\r\n        /**\r\n         * @param {?} renderElement\r\n         * @param {?} namespaceAndName\r\n         * @param {?=} attributeValue\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\r\n            var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\r\n            if (attributeValue != null) {\r\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\r\n            }\r\n            else {\r\n                this.delegate.removeAttribute(renderElement, name, ns);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} renderElement\r\n         * @param {?} propertyName\r\n         * @param {?} propertyValue\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\r\n        /**\r\n         * @param {?} renderElement\r\n         * @param {?} className\r\n         * @param {?} isAdd\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\r\n            if (isAdd) {\r\n                this.delegate.addClass(renderElement, className);\r\n            }\r\n            else {\r\n                this.delegate.removeClass(renderElement, className);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} renderElement\r\n         * @param {?} styleName\r\n         * @param {?=} styleValue\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\r\n            if (styleValue != null) {\r\n                this.delegate.setStyle(renderElement, styleName, styleValue);\r\n            }\r\n            else {\r\n                this.delegate.removeStyle(renderElement, styleName);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} renderElement\r\n         * @param {?} methodName\r\n         * @param {?} args\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\r\n            (((renderElement)))[methodName].apply(renderElement, args);\r\n        };\r\n        /**\r\n         * @param {?} renderNode\r\n         * @param {?} text\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\r\n        return RendererAdapter;\r\n    }());\r\n    /**\r\n     * @param {?} moduleType\r\n     * @param {?} parent\r\n     * @param {?} bootstrapComponents\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\r\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\r\n    }\r\n    var NgModuleRef_ = /** @class */ (function () {\r\n        /**\r\n         * @param {?} _moduleType\r\n         * @param {?} _parent\r\n         * @param {?} _bootstrapComponents\r\n         * @param {?} _def\r\n         */\r\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\r\n            this._moduleType = _moduleType;\r\n            this._parent = _parent;\r\n            this._bootstrapComponents = _bootstrapComponents;\r\n            this._def = _def;\r\n            this._destroyListeners = [];\r\n            this._destroyed = false;\r\n            this.injector = this;\r\n            initNgModule(this);\r\n        }\r\n        /**\r\n         * @param {?} token\r\n         * @param {?=} notFoundValue\r\n         * @param {?=} injectFlags\r\n         * @return {?}\r\n         */\r\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\r\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\r\n            if (injectFlags === void 0) { injectFlags = InjectFlags.Default; }\r\n            /** @type {?} */\r\n            var flags = 0 /* None */;\r\n            if (injectFlags & InjectFlags.SkipSelf) {\r\n                flags |= 1 /* SkipSelf */;\r\n            }\r\n            else if (injectFlags & InjectFlags.Self) {\r\n                flags |= 4 /* Self */;\r\n            }\r\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\r\n        };\r\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this.get(this._moduleType); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this.get(ComponentFactoryResolver); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @return {?}\r\n         */\r\n        NgModuleRef_.prototype.destroy = function () {\r\n            if (this._destroyed) {\r\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\r\n            }\r\n            this._destroyed = true;\r\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\r\n            this._destroyListeners.forEach(function (listener) { return listener(); });\r\n        };\r\n        /**\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\r\n        return NgModuleRef_;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var RendererV1TokenKey = tokenKey(Renderer);\r\n    /** @type {?} */\r\n    var Renderer2TokenKey = tokenKey(Renderer2);\r\n    /** @type {?} */\r\n    var ElementRefTokenKey = tokenKey(ElementRef);\r\n    /** @type {?} */\r\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\r\n    /** @type {?} */\r\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\r\n    /** @type {?} */\r\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\r\n    /** @type {?} */\r\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\r\n    /** @type {?} */\r\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\r\n    /**\r\n     * @param {?} checkIndex\r\n     * @param {?} flags\r\n     * @param {?} matchedQueries\r\n     * @param {?} childCount\r\n     * @param {?} ctor\r\n     * @param {?} deps\r\n     * @param {?=} props\r\n     * @param {?=} outputs\r\n     * @return {?}\r\n     */\r\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\r\n        /** @type {?} */\r\n        var bindings = [];\r\n        if (props) {\r\n            for (var prop in props) {\r\n                var _b = props[prop], bindingIndex = _b[0], nonMinifiedName = _b[1];\r\n                bindings[bindingIndex] = {\r\n                    flags: 8 /* TypeProperty */,\r\n                    name: prop, nonMinifiedName: nonMinifiedName,\r\n                    ns: null,\r\n                    securityContext: null,\r\n                    suffix: null\r\n                };\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var outputDefs = [];\r\n        if (outputs) {\r\n            for (var propName in outputs) {\r\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\r\n            }\r\n        }\r\n        flags |= 16384 /* TypeDirective */;\r\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\r\n    }\r\n    /**\r\n     * @param {?} checkIndex\r\n     * @param {?} flags\r\n     * @param {?} matchedQueriesDsl\r\n     * @param {?} childCount\r\n     * @param {?} token\r\n     * @param {?} value\r\n     * @param {?} deps\r\n     * @param {?=} bindings\r\n     * @param {?=} outputs\r\n     * @return {?}\r\n     */\r\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\r\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\r\n        if (!outputs) {\r\n            outputs = [];\r\n        }\r\n        if (!bindings) {\r\n            bindings = [];\r\n        }\r\n        // Need to resolve forwardRefs as e.g. for `useValue` we\r\n        // lowered the expression and then stopped evaluating it,\r\n        // i.e. also didn't unwrap it.\r\n        value = resolveForwardRef(value);\r\n        /** @type {?} */\r\n        var depDefs = splitDepsDsl(deps, stringify(token));\r\n        return {\r\n            // will bet set by the view definition\r\n            nodeIndex: -1,\r\n            parent: null,\r\n            renderParent: null,\r\n            bindingIndex: -1,\r\n            outputIndex: -1,\r\n            // regular values\r\n            checkIndex: checkIndex,\r\n            flags: flags,\r\n            childFlags: 0,\r\n            directChildFlags: 0,\r\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\r\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\r\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\r\n            element: null,\r\n            provider: { token: token, value: value, deps: depDefs },\r\n            text: null,\r\n            query: null,\r\n            ngContent: null\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function createProviderInstance(view, def) {\r\n        return _createProviderInstance$1(view, def);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function createPipeInstance(view, def) {\r\n        // deps are looked up from component.\r\n        /** @type {?} */\r\n        var compView = view;\r\n        while (compView.parent && !isComponentView(compView)) {\r\n            compView = compView.parent;\r\n        }\r\n        // pipes can see the private services of the component\r\n        /** @type {?} */\r\n        var allowPrivateServices = true;\r\n        // pipes are always eager and classes!\r\n        return createClass(((compView.parent)), ((viewParentEl(compView))), allowPrivateServices, ((def.provider)).value, ((def.provider)).deps);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function createDirectiveInstance(view, def) {\r\n        // components can see other private services, other directives can't.\r\n        /** @type {?} */\r\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\r\n        // directives are always eager and classes!\r\n        /** @type {?} */\r\n        var instance = createClass(view, ((def.parent)), allowPrivateServices, ((def.provider)).value, ((def.provider)).deps);\r\n        if (def.outputs.length) {\r\n            for (var i = 0; i < def.outputs.length; i++) {\r\n                /** @type {?} */\r\n                var output = def.outputs[i];\r\n                /** @type {?} */\r\n                var outputObservable = instance[((output.propName))];\r\n                if (isObservable$1(outputObservable)) {\r\n                    /** @type {?} */\r\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, ((def.parent)).nodeIndex, output.eventName));\r\n                    ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\r\n                }\r\n                else {\r\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\r\n                }\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} index\r\n     * @param {?} eventName\r\n     * @return {?}\r\n     */\r\n    function eventHandlerClosure(view, index, eventName) {\r\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @param {?} v0\r\n     * @param {?} v1\r\n     * @param {?} v2\r\n     * @param {?} v3\r\n     * @param {?} v4\r\n     * @param {?} v5\r\n     * @param {?} v6\r\n     * @param {?} v7\r\n     * @param {?} v8\r\n     * @param {?} v9\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\r\n        /** @type {?} */\r\n        var providerData = asProviderData(view, def.nodeIndex);\r\n        /** @type {?} */\r\n        var directive = providerData.instance;\r\n        /** @type {?} */\r\n        var changed = false;\r\n        /** @type {?} */\r\n        var changes = ((undefined));\r\n        /** @type {?} */\r\n        var bindLen = def.bindings.length;\r\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\r\n            changed = true;\r\n            changes = updateProp(view, providerData, def, 0, v0, changes);\r\n        }\r\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\r\n            changed = true;\r\n            changes = updateProp(view, providerData, def, 1, v1, changes);\r\n        }\r\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\r\n            changed = true;\r\n            changes = updateProp(view, providerData, def, 2, v2, changes);\r\n        }\r\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\r\n            changed = true;\r\n            changes = updateProp(view, providerData, def, 3, v3, changes);\r\n        }\r\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\r\n            changed = true;\r\n            changes = updateProp(view, providerData, def, 4, v4, changes);\r\n        }\r\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\r\n            changed = true;\r\n            changes = updateProp(view, providerData, def, 5, v5, changes);\r\n        }\r\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\r\n            changed = true;\r\n            changes = updateProp(view, providerData, def, 6, v6, changes);\r\n        }\r\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\r\n            changed = true;\r\n            changes = updateProp(view, providerData, def, 7, v7, changes);\r\n        }\r\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\r\n            changed = true;\r\n            changes = updateProp(view, providerData, def, 8, v8, changes);\r\n        }\r\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\r\n            changed = true;\r\n            changes = updateProp(view, providerData, def, 9, v9, changes);\r\n        }\r\n        if (changes) {\r\n            directive.ngOnChanges(changes);\r\n        }\r\n        if ((def.flags & 65536 /* OnInit */) &&\r\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\r\n            directive.ngOnInit();\r\n        }\r\n        if (def.flags & 262144 /* DoCheck */) {\r\n            directive.ngDoCheck();\r\n        }\r\n        return changed;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @param {?} values\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\r\n        /** @type {?} */\r\n        var providerData = asProviderData(view, def.nodeIndex);\r\n        /** @type {?} */\r\n        var directive = providerData.instance;\r\n        /** @type {?} */\r\n        var changed = false;\r\n        /** @type {?} */\r\n        var changes = ((undefined));\r\n        for (var i = 0; i < values.length; i++) {\r\n            if (checkBinding(view, def, i, values[i])) {\r\n                changed = true;\r\n                changes = updateProp(view, providerData, def, i, values[i], changes);\r\n            }\r\n        }\r\n        if (changes) {\r\n            directive.ngOnChanges(changes);\r\n        }\r\n        if ((def.flags & 65536 /* OnInit */) &&\r\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\r\n            directive.ngOnInit();\r\n        }\r\n        if (def.flags & 262144 /* DoCheck */) {\r\n            directive.ngDoCheck();\r\n        }\r\n        return changed;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function _createProviderInstance$1(view, def) {\r\n        // private services can see other private services\r\n        /** @type {?} */\r\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\r\n        /** @type {?} */\r\n        var providerDef = def.provider;\r\n        switch (def.flags & 201347067 /* Types */) {\r\n            case 512 /* TypeClassProvider */:\r\n                return createClass(view, ((def.parent)), allowPrivateServices, ((providerDef)).value, ((providerDef)).deps);\r\n            case 1024 /* TypeFactoryProvider */:\r\n                return callFactory(view, ((def.parent)), allowPrivateServices, ((providerDef)).value, ((providerDef)).deps);\r\n            case 2048 /* TypeUseExistingProvider */:\r\n                return resolveDep(view, ((def.parent)), allowPrivateServices, ((providerDef)).deps[0]);\r\n            case 256 /* TypeValueProvider */:\r\n                return ((providerDef)).value;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} elDef\r\n     * @param {?} allowPrivateServices\r\n     * @param {?} ctor\r\n     * @param {?} deps\r\n     * @return {?}\r\n     */\r\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\r\n        /** @type {?} */\r\n        var len = deps.length;\r\n        switch (len) {\r\n            case 0:\r\n                return new ctor();\r\n            case 1:\r\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\r\n            case 2:\r\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\r\n            case 3:\r\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\r\n            default:\r\n                /** @type {?} */\r\n                var depValues = new Array(len);\r\n                for (var i = 0; i < len; i++) {\r\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\r\n                }\r\n                return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} elDef\r\n     * @param {?} allowPrivateServices\r\n     * @param {?} factory\r\n     * @param {?} deps\r\n     * @return {?}\r\n     */\r\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\r\n        /** @type {?} */\r\n        var len = deps.length;\r\n        switch (len) {\r\n            case 0:\r\n                return factory();\r\n            case 1:\r\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\r\n            case 2:\r\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\r\n            case 3:\r\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\r\n            default:\r\n                /** @type {?} */\r\n                var depValues = Array(len);\r\n                for (var i = 0; i < len; i++) {\r\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\r\n                }\r\n                return factory.apply(void 0, depValues);\r\n        }\r\n    }\r\n    // This default value is when checking the hierarchy for a token.\r\n    //\r\n    // It means both:\r\n    // - the token is not provided by the current injector,\r\n    // - only the element injectors should be checked (ie do not check module injectors\r\n    //\r\n    //          mod1\r\n    //         /\r\n    //       el1   mod2\r\n    //         \\  /\r\n    //         el2\r\n    //\r\n    // When requesting el2.injector.get(token), we should check in the following order and return the\r\n    // first found value:\r\n    // - el2.injector.get(token, default)\r\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\r\n    // - mod2.injector.get(token, default)\r\n    /** @type {?} */\r\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} elDef\r\n     * @param {?} allowPrivateServices\r\n     * @param {?} depDef\r\n     * @param {?=} notFoundValue\r\n     * @return {?}\r\n     */\r\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\r\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\r\n        if (depDef.flags & 8 /* Value */) {\r\n            return depDef.token;\r\n        }\r\n        /** @type {?} */\r\n        var startView = view;\r\n        if (depDef.flags & 2 /* Optional */) {\r\n            notFoundValue = null;\r\n        }\r\n        /** @type {?} */\r\n        var tokenKey$$1 = depDef.tokenKey;\r\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\r\n            // directives on the same element as a component should be able to control the change detector\r\n            // of that component as well.\r\n            allowPrivateServices = !!(elDef && ((elDef.element)).componentView);\r\n        }\r\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\r\n            allowPrivateServices = false;\r\n            elDef = ((elDef.parent));\r\n        }\r\n        /** @type {?} */\r\n        var searchView = view;\r\n        while (searchView) {\r\n            if (elDef) {\r\n                switch (tokenKey$$1) {\r\n                    case RendererV1TokenKey: {\r\n                        /** @type {?} */\r\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\r\n                        return createRendererV1(compView);\r\n                    }\r\n                    case Renderer2TokenKey: {\r\n                        /** @type {?} */\r\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\r\n                        return compView.renderer;\r\n                    }\r\n                    case ElementRefTokenKey:\r\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\r\n                    case ViewContainerRefTokenKey:\r\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\r\n                    case TemplateRefTokenKey: {\r\n                        if (((elDef.element)).template) {\r\n                            return asElementData(searchView, elDef.nodeIndex).template;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case ChangeDetectorRefTokenKey: {\r\n                        /** @type {?} */\r\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\r\n                        return createChangeDetectorRef(cdView);\r\n                    }\r\n                    case InjectorRefTokenKey$1:\r\n                    case INJECTORRefTokenKey$1:\r\n                        return createInjector$1(searchView, elDef);\r\n                    default:\r\n                        /** @type {?} */\r\n                        var providerDef = (((allowPrivateServices ? ((elDef.element)).allProviders :\r\n                            ((elDef.element)).publicProviders)))[tokenKey$$1];\r\n                        if (providerDef) {\r\n                            /** @type {?} */\r\n                            var providerData = asProviderData(searchView, providerDef.nodeIndex);\r\n                            if (!providerData) {\r\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef) };\r\n                                searchView.nodes[providerDef.nodeIndex] = ((providerData));\r\n                            }\r\n                            return providerData.instance;\r\n                        }\r\n                }\r\n            }\r\n            allowPrivateServices = isComponentView(searchView);\r\n            elDef = ((viewParentEl(searchView)));\r\n            searchView = ((searchView.parent));\r\n            if (depDef.flags & 4 /* Self */) {\r\n                searchView = null;\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\r\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\r\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\r\n            // Return the value from the root element injector when\r\n            // - it provides it\r\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\r\n            // - the module injector should not be checked\r\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\r\n            return value;\r\n        }\r\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} elDef\r\n     * @param {?} allowPrivateServices\r\n     * @return {?}\r\n     */\r\n    function findCompView(view, elDef, allowPrivateServices) {\r\n        /** @type {?} */\r\n        var compView;\r\n        if (allowPrivateServices) {\r\n            compView = asElementData(view, elDef.nodeIndex).componentView;\r\n        }\r\n        else {\r\n            compView = view;\r\n            while (compView.parent && !isComponentView(compView)) {\r\n                compView = compView.parent;\r\n            }\r\n        }\r\n        return compView;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} providerData\r\n     * @param {?} def\r\n     * @param {?} bindingIdx\r\n     * @param {?} value\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\r\n        if (def.flags & 32768 /* Component */) {\r\n            /** @type {?} */\r\n            var compView = asElementData(view, ((def.parent)).nodeIndex).componentView;\r\n            if (compView.def.flags & 2 /* OnPush */) {\r\n                compView.state |= 8 /* ChecksEnabled */;\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var binding = def.bindings[bindingIdx];\r\n        /** @type {?} */\r\n        var propName = ((binding.name));\r\n        // Note: This is still safe with Closure Compiler as\r\n        // the user passed in the property name as an object has to `providerDef`,\r\n        // so Closure Compiler will have renamed the property correctly already.\r\n        providerData.instance[propName] = value;\r\n        if (def.flags & 524288 /* OnChanges */) {\r\n            changes = changes || {};\r\n            /** @type {?} */\r\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\r\n            /** @type {?} */\r\n            var binding_1 = def.bindings[bindingIdx];\r\n            changes[((binding_1.nonMinifiedName))] =\r\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\r\n        }\r\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\r\n        return changes;\r\n    }\r\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\r\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\r\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\r\n    // called during a pre-order traversal of the view tree (that is calling the\r\n    // parent hooks before the child hooks) these events are sent in using a\r\n    // post-order traversal of the tree (children before parents). This changes the\r\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\r\n    // expected nodeIndex which a ngOnInit should be called. When sending\r\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\r\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\r\n    // ensure that despite being called recursively or after picking up after an\r\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\r\n    // correct nodes. Consider for example, the following (where E is an element\r\n    // and D is a directive)\r\n    //  Tree:       pre-order index  post-order index\r\n    //    E1        0                6\r\n    //      E2      1                1\r\n    //       D3     2                0\r\n    //      E4      3                5\r\n    //       E5     4                4\r\n    //        E6    5                2\r\n    //        E7    6                3\r\n    // As can be seen, the post-order index has an unclear relationship to the\r\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\r\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\r\n    // are stable (will be the same for the same view regardless of exceptions or\r\n    // recursion) we just need to count them which will roughly correspond to the\r\n    // post-order index (it skips elements and directives that do not have\r\n    // lifecycle hooks).\r\n    //\r\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\r\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\r\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\r\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\r\n    // the view will begin getting ngAfterViewInit() called until a check and\r\n    // pass is complete.\r\n    //\r\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\r\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\r\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\r\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\r\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\r\n    // has already been called in the recursively called checkAnUpdateView().\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} lifecycles\r\n     * @return {?}\r\n     */\r\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\r\n        if (!(view.def.nodeFlags & lifecycles)) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var nodes = view.def.nodes;\r\n        /** @type {?} */\r\n        var initIndex = 0;\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            /** @type {?} */\r\n            var nodeDef = nodes[i];\r\n            /** @type {?} */\r\n            var parent_2 = nodeDef.parent;\r\n            if (!parent_2 && nodeDef.flags & lifecycles) {\r\n                // matching root node (e.g. a pipe)\r\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\r\n            }\r\n            if ((nodeDef.childFlags & lifecycles) === 0) {\r\n                // no child matches one of the lifecycles\r\n                i += nodeDef.childCount;\r\n            }\r\n            while (parent_2 && (parent_2.flags & 1 /* TypeElement */) &&\r\n                i === parent_2.nodeIndex + parent_2.childCount) {\r\n                // last child of an element\r\n                if (parent_2.directChildFlags & lifecycles) {\r\n                    initIndex = callElementProvidersLifecycles(view, parent_2, lifecycles, initIndex);\r\n                }\r\n                parent_2 = parent_2.parent;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} elDef\r\n     * @param {?} lifecycles\r\n     * @param {?} initIndex\r\n     * @return {?}\r\n     */\r\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\r\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\r\n            /** @type {?} */\r\n            var nodeDef = view.def.nodes[i];\r\n            if (nodeDef.flags & lifecycles) {\r\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\r\n            }\r\n            // only visit direct children\r\n            i += nodeDef.childCount;\r\n        }\r\n        return initIndex;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} index\r\n     * @param {?} lifecycles\r\n     * @param {?} initIndex\r\n     * @return {?}\r\n     */\r\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\r\n        /** @type {?} */\r\n        var providerData = asProviderData(view, index);\r\n        if (!providerData) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var provider = providerData.instance;\r\n        if (!provider) {\r\n            return;\r\n        }\r\n        Services.setCurrentNode(view, index);\r\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\r\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\r\n            provider.ngAfterContentInit();\r\n        }\r\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\r\n            provider.ngAfterContentChecked();\r\n        }\r\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\r\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\r\n            provider.ngAfterViewInit();\r\n        }\r\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\r\n            provider.ngAfterViewChecked();\r\n        }\r\n        if (lifecycles & 131072 /* OnDestroy */) {\r\n            provider.ngOnDestroy();\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function createQuery$1() {\r\n        return new QueryList$1();\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function dirtyParentQueries(view) {\r\n        /** @type {?} */\r\n        var queryIds = view.def.nodeMatchedQueries;\r\n        while (view.parent && isEmbeddedView(view)) {\r\n            /** @type {?} */\r\n            var tplDef = ((view.parentNodeDef));\r\n            view = view.parent;\r\n            // content queries\r\n            /** @type {?} */\r\n            var end = tplDef.nodeIndex + tplDef.childCount;\r\n            for (var i = 0; i <= end; i++) {\r\n                /** @type {?} */\r\n                var nodeDef = view.def.nodes[i];\r\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\r\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\r\n                    (((nodeDef.query)).filterId & queryIds) === ((nodeDef.query)).filterId) {\r\n                    asQueryList(view, i).setDirty();\r\n                }\r\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\r\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\r\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\r\n                    // skip elements that don't contain the template element or no query.\r\n                    i += nodeDef.childCount;\r\n                }\r\n            }\r\n        }\r\n        // view queries\r\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\r\n            for (var i = 0; i < view.def.nodes.length; i++) {\r\n                /** @type {?} */\r\n                var nodeDef = view.def.nodes[i];\r\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\r\n                    asQueryList(view, i).setDirty();\r\n                }\r\n                // only visit the root nodes\r\n                i += nodeDef.childCount;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeDef\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdateQuery(view, nodeDef) {\r\n        /** @type {?} */\r\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\r\n        if (!queryList.dirty) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var directiveInstance;\r\n        /** @type {?} */\r\n        var newValues = ((undefined));\r\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\r\n            /** @type {?} */\r\n            var elementDef_1 = ((((nodeDef.parent)).parent));\r\n            newValues = calcQueryValues(view, elementDef_1.nodeIndex, elementDef_1.nodeIndex + elementDef_1.childCount, ((nodeDef.query)), []);\r\n            directiveInstance = asProviderData(view, ((nodeDef.parent)).nodeIndex).instance;\r\n        }\r\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\r\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, ((nodeDef.query)), []);\r\n            directiveInstance = view.component;\r\n        }\r\n        queryList.reset(newValues);\r\n        /** @type {?} */\r\n        var bindings = ((nodeDef.query)).bindings;\r\n        /** @type {?} */\r\n        var notify = false;\r\n        for (var i = 0; i < bindings.length; i++) {\r\n            /** @type {?} */\r\n            var binding = bindings[i];\r\n            /** @type {?} */\r\n            var boundValue = void 0;\r\n            switch (binding.bindingType) {\r\n                case 0 /* First */:\r\n                    boundValue = queryList.first;\r\n                    break;\r\n                case 1 /* All */:\r\n                    boundValue = queryList;\r\n                    notify = true;\r\n                    break;\r\n            }\r\n            directiveInstance[binding.propName] = boundValue;\r\n        }\r\n        if (notify) {\r\n            queryList.notifyOnChanges();\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} startIndex\r\n     * @param {?} endIndex\r\n     * @param {?} queryDef\r\n     * @param {?} values\r\n     * @return {?}\r\n     */\r\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\r\n        for (var i = startIndex; i <= endIndex; i++) {\r\n            /** @type {?} */\r\n            var nodeDef = view.def.nodes[i];\r\n            /** @type {?} */\r\n            var valueType = nodeDef.matchedQueries[queryDef.id];\r\n            if (valueType != null) {\r\n                values.push(getQueryValue(view, nodeDef, valueType));\r\n            }\r\n            if (nodeDef.flags & 1 /* TypeElement */ && ((nodeDef.element)).template &&\r\n                (((((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\r\n                    queryDef.filterId) {\r\n                /** @type {?} */\r\n                var elementData = asElementData(view, i);\r\n                // check embedded views that were attached at the place of their template,\r\n                // but process child nodes first if some match the query (see issue #16568)\r\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\r\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\r\n                    i += nodeDef.childCount;\r\n                }\r\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\r\n                    /** @type {?} */\r\n                    var embeddedViews = ((elementData.viewContainer))._embeddedViews;\r\n                    for (var k = 0; k < embeddedViews.length; k++) {\r\n                        /** @type {?} */\r\n                        var embeddedView = embeddedViews[k];\r\n                        /** @type {?} */\r\n                        var dvc = declaredViewContainer(embeddedView);\r\n                        if (dvc && dvc === elementData) {\r\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\r\n                        }\r\n                    }\r\n                }\r\n                /** @type {?} */\r\n                var projectedViews = elementData.template._projectedViews;\r\n                if (projectedViews) {\r\n                    for (var k = 0; k < projectedViews.length; k++) {\r\n                        /** @type {?} */\r\n                        var projectedView = projectedViews[k];\r\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\r\n                    }\r\n                }\r\n            }\r\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\r\n                // if no child matches the query, skip the children.\r\n                i += nodeDef.childCount;\r\n            }\r\n        }\r\n        return values;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeDef\r\n     * @param {?} queryValueType\r\n     * @return {?}\r\n     */\r\n    function getQueryValue(view, nodeDef, queryValueType) {\r\n        if (queryValueType != null) {\r\n            // a match\r\n            switch (queryValueType) {\r\n                case 1 /* RenderElement */:\r\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\r\n                case 0 /* ElementRef */:\r\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\r\n                case 2 /* TemplateRef */:\r\n                    return asElementData(view, nodeDef.nodeIndex).template;\r\n                case 3 /* ViewContainerRef */:\r\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\r\n                case 4 /* Provider */:\r\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} renderHost\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function appendNgContent(view, renderHost, def) {\r\n        /** @type {?} */\r\n        var parentEl = getParentRenderElement(view, renderHost, def);\r\n        if (!parentEl) {\r\n            // Nothing to do if there is no parent element.\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var ngContentIndex = ((def.ngContent)).index;\r\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function createPureExpression(view, def) {\r\n        return { value: undefined };\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @param {?} v0\r\n     * @param {?} v1\r\n     * @param {?} v2\r\n     * @param {?} v3\r\n     * @param {?} v4\r\n     * @param {?} v5\r\n     * @param {?} v6\r\n     * @param {?} v7\r\n     * @param {?} v8\r\n     * @param {?} v9\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\r\n        /** @type {?} */\r\n        var bindings = def.bindings;\r\n        /** @type {?} */\r\n        var changed = false;\r\n        /** @type {?} */\r\n        var bindLen = bindings.length;\r\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\r\n            changed = true;\r\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\r\n            changed = true;\r\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\r\n            changed = true;\r\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\r\n            changed = true;\r\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\r\n            changed = true;\r\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\r\n            changed = true;\r\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\r\n            changed = true;\r\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\r\n            changed = true;\r\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\r\n            changed = true;\r\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\r\n            changed = true;\r\n        if (changed) {\r\n            /** @type {?} */\r\n            var data = asPureExpressionData(view, def.nodeIndex);\r\n            /** @type {?} */\r\n            var value = void 0;\r\n            switch (def.flags & 201347067 /* Types */) {\r\n                case 32 /* TypePureArray */:\r\n                    value = new Array(bindings.length);\r\n                    if (bindLen > 0)\r\n                        value[0] = v0;\r\n                    if (bindLen > 1)\r\n                        value[1] = v1;\r\n                    if (bindLen > 2)\r\n                        value[2] = v2;\r\n                    if (bindLen > 3)\r\n                        value[3] = v3;\r\n                    if (bindLen > 4)\r\n                        value[4] = v4;\r\n                    if (bindLen > 5)\r\n                        value[5] = v5;\r\n                    if (bindLen > 6)\r\n                        value[6] = v6;\r\n                    if (bindLen > 7)\r\n                        value[7] = v7;\r\n                    if (bindLen > 8)\r\n                        value[8] = v8;\r\n                    if (bindLen > 9)\r\n                        value[9] = v9;\r\n                    break;\r\n                case 64 /* TypePureObject */:\r\n                    value = {};\r\n                    if (bindLen > 0)\r\n                        value[((bindings[0].name))] = v0;\r\n                    if (bindLen > 1)\r\n                        value[((bindings[1].name))] = v1;\r\n                    if (bindLen > 2)\r\n                        value[((bindings[2].name))] = v2;\r\n                    if (bindLen > 3)\r\n                        value[((bindings[3].name))] = v3;\r\n                    if (bindLen > 4)\r\n                        value[((bindings[4].name))] = v4;\r\n                    if (bindLen > 5)\r\n                        value[((bindings[5].name))] = v5;\r\n                    if (bindLen > 6)\r\n                        value[((bindings[6].name))] = v6;\r\n                    if (bindLen > 7)\r\n                        value[((bindings[7].name))] = v7;\r\n                    if (bindLen > 8)\r\n                        value[((bindings[8].name))] = v8;\r\n                    if (bindLen > 9)\r\n                        value[((bindings[9].name))] = v9;\r\n                    break;\r\n                case 128 /* TypePurePipe */:\r\n                    /** @type {?} */\r\n                    var pipe = v0;\r\n                    switch (bindLen) {\r\n                        case 1:\r\n                            value = pipe.transform(v0);\r\n                            break;\r\n                        case 2:\r\n                            value = pipe.transform(v1);\r\n                            break;\r\n                        case 3:\r\n                            value = pipe.transform(v1, v2);\r\n                            break;\r\n                        case 4:\r\n                            value = pipe.transform(v1, v2, v3);\r\n                            break;\r\n                        case 5:\r\n                            value = pipe.transform(v1, v2, v3, v4);\r\n                            break;\r\n                        case 6:\r\n                            value = pipe.transform(v1, v2, v3, v4, v5);\r\n                            break;\r\n                        case 7:\r\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\r\n                            break;\r\n                        case 8:\r\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\r\n                            break;\r\n                        case 9:\r\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\r\n                            break;\r\n                        case 10:\r\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\r\n                            break;\r\n                    }\r\n                    break;\r\n            }\r\n            data.value = value;\r\n        }\r\n        return changed;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @param {?} values\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\r\n        /** @type {?} */\r\n        var bindings = def.bindings;\r\n        /** @type {?} */\r\n        var changed = false;\r\n        for (var i = 0; i < values.length; i++) {\r\n            // Note: We need to loop over all values, so that\r\n            // the old values are updates as well!\r\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\r\n                changed = true;\r\n            }\r\n        }\r\n        if (changed) {\r\n            /** @type {?} */\r\n            var data = asPureExpressionData(view, def.nodeIndex);\r\n            /** @type {?} */\r\n            var value = void 0;\r\n            switch (def.flags & 201347067 /* Types */) {\r\n                case 32 /* TypePureArray */:\r\n                    value = values;\r\n                    break;\r\n                case 64 /* TypePureObject */:\r\n                    value = {};\r\n                    for (var i = 0; i < values.length; i++) {\r\n                        value[((bindings[i].name))] = values[i];\r\n                    }\r\n                    break;\r\n                case 128 /* TypePurePipe */:\r\n                    /** @type {?} */\r\n                    var pipe = values[0];\r\n                    /** @type {?} */\r\n                    var params = values.slice(1);\r\n                    value = pipe.transform.apply(pipe, params);\r\n                    break;\r\n            }\r\n            data.value = value;\r\n        }\r\n        return changed;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} checkIndex\r\n     * @param {?} ngContentIndex\r\n     * @param {?} staticText\r\n     * @return {?}\r\n     */\r\n    function textDef(checkIndex, ngContentIndex, staticText) {\r\n        /** @type {?} */\r\n        var bindings = new Array(staticText.length - 1);\r\n        for (var i = 1; i < staticText.length; i++) {\r\n            bindings[i - 1] = {\r\n                flags: 8 /* TypeProperty */,\r\n                name: null,\r\n                ns: null,\r\n                nonMinifiedName: null,\r\n                securityContext: null,\r\n                suffix: staticText[i],\r\n            };\r\n        }\r\n        return {\r\n            // will bet set by the view definition\r\n            nodeIndex: -1,\r\n            parent: null,\r\n            renderParent: null,\r\n            bindingIndex: -1,\r\n            outputIndex: -1,\r\n            // regular values\r\n            checkIndex: checkIndex,\r\n            flags: 2 /* TypeText */,\r\n            childFlags: 0,\r\n            directChildFlags: 0,\r\n            childMatchedQueries: 0,\r\n            matchedQueries: {},\r\n            matchedQueryIds: 0,\r\n            references: {}, ngContentIndex: ngContentIndex,\r\n            childCount: 0, bindings: bindings,\r\n            bindingFlags: 8 /* TypeProperty */,\r\n            outputs: [],\r\n            element: null,\r\n            provider: null,\r\n            text: { prefix: staticText[0] },\r\n            query: null,\r\n            ngContent: null,\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} renderHost\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function createText(view, renderHost, def) {\r\n        /** @type {?} */\r\n        var renderNode$$1;\r\n        /** @type {?} */\r\n        var renderer = view.renderer;\r\n        renderNode$$1 = renderer.createText(((def.text)).prefix);\r\n        /** @type {?} */\r\n        var parentEl = getParentRenderElement(view, renderHost, def);\r\n        if (parentEl) {\r\n            renderer.appendChild(parentEl, renderNode$$1);\r\n        }\r\n        return { renderText: renderNode$$1 };\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @param {?} v0\r\n     * @param {?} v1\r\n     * @param {?} v2\r\n     * @param {?} v3\r\n     * @param {?} v4\r\n     * @param {?} v5\r\n     * @param {?} v6\r\n     * @param {?} v7\r\n     * @param {?} v8\r\n     * @param {?} v9\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\r\n        /** @type {?} */\r\n        var changed = false;\r\n        /** @type {?} */\r\n        var bindings = def.bindings;\r\n        /** @type {?} */\r\n        var bindLen = bindings.length;\r\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\r\n            changed = true;\r\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\r\n            changed = true;\r\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\r\n            changed = true;\r\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\r\n            changed = true;\r\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\r\n            changed = true;\r\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\r\n            changed = true;\r\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\r\n            changed = true;\r\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\r\n            changed = true;\r\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\r\n            changed = true;\r\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\r\n            changed = true;\r\n        if (changed) {\r\n            /** @type {?} */\r\n            var value = ((def.text)).prefix;\r\n            if (bindLen > 0)\r\n                value += _addInterpolationPart(v0, bindings[0]);\r\n            if (bindLen > 1)\r\n                value += _addInterpolationPart(v1, bindings[1]);\r\n            if (bindLen > 2)\r\n                value += _addInterpolationPart(v2, bindings[2]);\r\n            if (bindLen > 3)\r\n                value += _addInterpolationPart(v3, bindings[3]);\r\n            if (bindLen > 4)\r\n                value += _addInterpolationPart(v4, bindings[4]);\r\n            if (bindLen > 5)\r\n                value += _addInterpolationPart(v5, bindings[5]);\r\n            if (bindLen > 6)\r\n                value += _addInterpolationPart(v6, bindings[6]);\r\n            if (bindLen > 7)\r\n                value += _addInterpolationPart(v7, bindings[7]);\r\n            if (bindLen > 8)\r\n                value += _addInterpolationPart(v8, bindings[8]);\r\n            if (bindLen > 9)\r\n                value += _addInterpolationPart(v9, bindings[9]);\r\n            /** @type {?} */\r\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\r\n            view.renderer.setValue(renderNode$$1, value);\r\n        }\r\n        return changed;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} def\r\n     * @param {?} values\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdateTextDynamic(view, def, values) {\r\n        /** @type {?} */\r\n        var bindings = def.bindings;\r\n        /** @type {?} */\r\n        var changed = false;\r\n        for (var i = 0; i < values.length; i++) {\r\n            // Note: We need to loop over all values, so that\r\n            // the old values are updates as well!\r\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\r\n                changed = true;\r\n            }\r\n        }\r\n        if (changed) {\r\n            /** @type {?} */\r\n            var value = '';\r\n            for (var i = 0; i < values.length; i++) {\r\n                value = value + _addInterpolationPart(values[i], bindings[i]);\r\n            }\r\n            value = ((def.text)).prefix + value;\r\n            /** @type {?} */\r\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\r\n            view.renderer.setValue(renderNode$$1, value);\r\n        }\r\n        return changed;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} binding\r\n     * @return {?}\r\n     */\r\n    function _addInterpolationPart(value, binding) {\r\n        /** @type {?} */\r\n        var valueStr = value != null ? value.toString() : '';\r\n        return valueStr + binding.suffix;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @param {?} flags\r\n     * @param {?} nodes\r\n     * @param {?=} updateDirectives\r\n     * @param {?=} updateRenderer\r\n     * @return {?}\r\n     */\r\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\r\n        // clone nodes and set auto calculated values\r\n        /** @type {?} */\r\n        var viewBindingCount = 0;\r\n        /** @type {?} */\r\n        var viewDisposableCount = 0;\r\n        /** @type {?} */\r\n        var viewNodeFlags = 0;\r\n        /** @type {?} */\r\n        var viewRootNodeFlags = 0;\r\n        /** @type {?} */\r\n        var viewMatchedQueries = 0;\r\n        /** @type {?} */\r\n        var currentParent = null;\r\n        /** @type {?} */\r\n        var currentRenderParent = null;\r\n        /** @type {?} */\r\n        var currentElementHasPublicProviders = false;\r\n        /** @type {?} */\r\n        var currentElementHasPrivateProviders = false;\r\n        /** @type {?} */\r\n        var lastRenderRootNode = null;\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            /** @type {?} */\r\n            var node = nodes[i];\r\n            node.nodeIndex = i;\r\n            node.parent = currentParent;\r\n            node.bindingIndex = viewBindingCount;\r\n            node.outputIndex = viewDisposableCount;\r\n            node.renderParent = currentRenderParent;\r\n            viewNodeFlags |= node.flags;\r\n            viewMatchedQueries |= node.matchedQueryIds;\r\n            if (node.element) {\r\n                /** @type {?} */\r\n                var elDef = node.element;\r\n                elDef.publicProviders =\r\n                    currentParent ? ((currentParent.element)).publicProviders : Object.create(null);\r\n                elDef.allProviders = elDef.publicProviders;\r\n                // Note: We assume that all providers of an element are before any child element!\r\n                currentElementHasPublicProviders = false;\r\n                currentElementHasPrivateProviders = false;\r\n                if (node.element.template) {\r\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\r\n                }\r\n            }\r\n            validateNode(currentParent, node, nodes.length);\r\n            viewBindingCount += node.bindings.length;\r\n            viewDisposableCount += node.outputs.length;\r\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\r\n                lastRenderRootNode = node;\r\n            }\r\n            if (node.flags & 20224 /* CatProvider */) {\r\n                if (!currentElementHasPublicProviders) {\r\n                    currentElementHasPublicProviders = true;\r\n                    // Use prototypical inheritance to not get O(n^2) complexity...\r\n                    ((((currentParent)).element)).publicProviders =\r\n                        Object.create(((((currentParent)).element)).publicProviders);\r\n                    ((((currentParent)).element)).allProviders = ((((currentParent)).element)).publicProviders;\r\n                }\r\n                /** @type {?} */\r\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\r\n                /** @type {?} */\r\n                var isComponent_1 = (node.flags & 32768 /* Component */) !== 0;\r\n                if (!isPrivateService || isComponent_1) {\r\n                    ((((((currentParent)).element)).publicProviders))[tokenKey(((node.provider)).token)] = node;\r\n                }\r\n                else {\r\n                    if (!currentElementHasPrivateProviders) {\r\n                        currentElementHasPrivateProviders = true;\r\n                        // Use prototypical inheritance to not get O(n^2) complexity...\r\n                        ((((currentParent)).element)).allProviders =\r\n                            Object.create(((((currentParent)).element)).publicProviders);\r\n                    }\r\n                    ((((((currentParent)).element)).allProviders))[tokenKey(((node.provider)).token)] = node;\r\n                }\r\n                if (isComponent_1) {\r\n                    ((((currentParent)).element)).componentProvider = node;\r\n                }\r\n            }\r\n            if (currentParent) {\r\n                currentParent.childFlags |= node.flags;\r\n                currentParent.directChildFlags |= node.flags;\r\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\r\n                if (node.element && node.element.template) {\r\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\r\n                }\r\n            }\r\n            else {\r\n                viewRootNodeFlags |= node.flags;\r\n            }\r\n            if (node.childCount > 0) {\r\n                currentParent = node;\r\n                if (!isNgContainer(node)) {\r\n                    currentRenderParent = node;\r\n                }\r\n            }\r\n            else {\r\n                // When the current node has no children, check if it is the last children of its parent.\r\n                // When it is, propagate the flags up.\r\n                // The loop is required because an element could be the last transitive children of several\r\n                // elements. We loop to either the root or the highest opened element (= with remaining\r\n                // children)\r\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\r\n                    /** @type {?} */\r\n                    var newParent = currentParent.parent;\r\n                    if (newParent) {\r\n                        newParent.childFlags |= currentParent.childFlags;\r\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\r\n                    }\r\n                    currentParent = newParent;\r\n                    // We also need to update the render parent & account for ng-container\r\n                    if (currentParent && isNgContainer(currentParent)) {\r\n                        currentRenderParent = currentParent.renderParent;\r\n                    }\r\n                    else {\r\n                        currentRenderParent = currentParent;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var handleEvent = function (view, nodeIndex, eventName, event) { return ((((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\r\n        return {\r\n            // Will be filled later...\r\n            factory: null,\r\n            nodeFlags: viewNodeFlags,\r\n            rootNodeFlags: viewRootNodeFlags,\r\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\r\n            nodes: nodes,\r\n            updateDirectives: updateDirectives || NOOP,\r\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\r\n            bindingCount: viewBindingCount,\r\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    function isNgContainer(node) {\r\n        return (node.flags & 1 /* TypeElement */) !== 0 && ((node.element)).name === null;\r\n    }\r\n    /**\r\n     * @param {?} parent\r\n     * @param {?} node\r\n     * @param {?} nodeCount\r\n     * @return {?}\r\n     */\r\n    function validateNode(parent, node, nodeCount) {\r\n        /** @type {?} */\r\n        var template = node.element && node.element.template;\r\n        if (template) {\r\n            if (!template.lastRenderRootNode) {\r\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\r\n            }\r\n            if (template.lastRenderRootNode &&\r\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\r\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\r\n            }\r\n        }\r\n        if (node.flags & 20224 /* CatProvider */) {\r\n            /** @type {?} */\r\n            var parentFlags = parent ? parent.flags : 0;\r\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\r\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\r\n            }\r\n        }\r\n        if (node.query) {\r\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\r\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\r\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\r\n            }\r\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\r\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\r\n            }\r\n        }\r\n        if (node.childCount) {\r\n            /** @type {?} */\r\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\r\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\r\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} parent\r\n     * @param {?} anchorDef\r\n     * @param {?} viewDef\r\n     * @param {?=} context\r\n     * @return {?}\r\n     */\r\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\r\n        // embedded views are seen as siblings to the anchor, so we need\r\n        // to get the parent of the anchor and use it as parentIndex.\r\n        /** @type {?} */\r\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\r\n        initView(view, parent.component, context);\r\n        createViewNodes(view);\r\n        return view;\r\n    }\r\n    /**\r\n     * @param {?} root\r\n     * @param {?} def\r\n     * @param {?=} context\r\n     * @return {?}\r\n     */\r\n    function createRootView(root, def, context) {\r\n        /** @type {?} */\r\n        var view = createView(root, root.renderer, null, null, def);\r\n        initView(view, context, context);\r\n        createViewNodes(view);\r\n        return view;\r\n    }\r\n    /**\r\n     * @param {?} parentView\r\n     * @param {?} nodeDef\r\n     * @param {?} viewDef\r\n     * @param {?} hostElement\r\n     * @return {?}\r\n     */\r\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\r\n        /** @type {?} */\r\n        var rendererType = ((nodeDef.element)).componentRendererType;\r\n        /** @type {?} */\r\n        var compRenderer;\r\n        if (!rendererType) {\r\n            compRenderer = parentView.root.renderer;\r\n        }\r\n        else {\r\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\r\n        }\r\n        return createView(parentView.root, compRenderer, parentView, ((nodeDef.element)).componentProvider, viewDef);\r\n    }\r\n    /**\r\n     * @param {?} root\r\n     * @param {?} renderer\r\n     * @param {?} parent\r\n     * @param {?} parentNodeDef\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function createView(root, renderer, parent, parentNodeDef, def) {\r\n        /** @type {?} */\r\n        var nodes = new Array(def.nodes.length);\r\n        /** @type {?} */\r\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\r\n        /** @type {?} */\r\n        var view = {\r\n            def: def,\r\n            parent: parent,\r\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\r\n            context: null,\r\n            component: null, nodes: nodes,\r\n            state: 13 /* CatInit */, root: root, renderer: renderer,\r\n            oldValues: new Array(def.bindingCount), disposables: disposables,\r\n            initIndex: -1\r\n        };\r\n        return view;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} component\r\n     * @param {?} context\r\n     * @return {?}\r\n     */\r\n    function initView(view, component, context) {\r\n        view.component = component;\r\n        view.context = context;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function createViewNodes(view) {\r\n        /** @type {?} */\r\n        var renderHost;\r\n        if (isComponentView(view)) {\r\n            /** @type {?} */\r\n            var hostDef = view.parentNodeDef;\r\n            renderHost = asElementData(((view.parent)), ((((hostDef)).parent)).nodeIndex).renderElement;\r\n        }\r\n        /** @type {?} */\r\n        var def = view.def;\r\n        /** @type {?} */\r\n        var nodes = view.nodes;\r\n        for (var i = 0; i < def.nodes.length; i++) {\r\n            /** @type {?} */\r\n            var nodeDef = def.nodes[i];\r\n            Services.setCurrentNode(view, i);\r\n            /** @type {?} */\r\n            var nodeData = void 0;\r\n            switch (nodeDef.flags & 201347067 /* Types */) {\r\n                case 1 /* TypeElement */:\r\n                    /** @type {?} */\r\n                    var el = ((createElement(view, renderHost, nodeDef)));\r\n                    /** @type {?} */\r\n                    var componentView = ((undefined));\r\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\r\n                        /** @type {?} */\r\n                        var compViewDef = resolveDefinition(((((nodeDef.element)).componentView)));\r\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\r\n                    }\r\n                    listenToElementOutputs(view, componentView, nodeDef, el);\r\n                    nodeData = (({\r\n                        renderElement: el,\r\n                        componentView: componentView,\r\n                        viewContainer: null,\r\n                        template: ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\r\n                    }));\r\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\r\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\r\n                    }\r\n                    break;\r\n                case 2 /* TypeText */:\r\n                    nodeData = ((createText(view, renderHost, nodeDef)));\r\n                    break;\r\n                case 512 /* TypeClassProvider */:\r\n                case 1024 /* TypeFactoryProvider */:\r\n                case 2048 /* TypeUseExistingProvider */:\r\n                case 256 /* TypeValueProvider */: {\r\n                    nodeData = nodes[i];\r\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\r\n                        /** @type {?} */\r\n                        var instance = createProviderInstance(view, nodeDef);\r\n                        nodeData = (({ instance: instance }));\r\n                    }\r\n                    break;\r\n                }\r\n                case 16 /* TypePipe */: {\r\n                    /** @type {?} */\r\n                    var instance = createPipeInstance(view, nodeDef);\r\n                    nodeData = (({ instance: instance }));\r\n                    break;\r\n                }\r\n                case 16384 /* TypeDirective */: {\r\n                    nodeData = nodes[i];\r\n                    if (!nodeData) {\r\n                        /** @type {?} */\r\n                        var instance = createDirectiveInstance(view, nodeDef);\r\n                        nodeData = (({ instance: instance }));\r\n                    }\r\n                    if (nodeDef.flags & 32768 /* Component */) {\r\n                        /** @type {?} */\r\n                        var compView = asElementData(view, ((nodeDef.parent)).nodeIndex).componentView;\r\n                        initView(compView, nodeData.instance, nodeData.instance);\r\n                    }\r\n                    break;\r\n                }\r\n                case 32 /* TypePureArray */:\r\n                case 64 /* TypePureObject */:\r\n                case 128 /* TypePurePipe */:\r\n                    nodeData = ((createPureExpression(view, nodeDef)));\r\n                    break;\r\n                case 67108864 /* TypeContentQuery */:\r\n                case 134217728 /* TypeViewQuery */:\r\n                    nodeData = ((createQuery$1()));\r\n                    break;\r\n                case 8 /* TypeNgContent */:\r\n                    appendNgContent(view, renderHost, nodeDef);\r\n                    // no runtime data needed for NgContent...\r\n                    nodeData = undefined;\r\n                    break;\r\n            }\r\n            nodes[i] = nodeData;\r\n        }\r\n        // Create the ViewData.nodes of component views after we created everything else,\r\n        // so that e.g. ng-content works\r\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\r\n        // fill static content and view queries\r\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function checkNoChangesView(view) {\r\n        markProjectedViewsForCheck(view);\r\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\r\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\r\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\r\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\r\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\r\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\r\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdateView(view) {\r\n        if (view.state & 1 /* BeforeFirstCheck */) {\r\n            view.state &= ~1 /* BeforeFirstCheck */;\r\n            view.state |= 2 /* FirstCheck */;\r\n        }\r\n        else {\r\n            view.state &= ~2 /* FirstCheck */;\r\n        }\r\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\r\n        markProjectedViewsForCheck(view);\r\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\r\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\r\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\r\n        /** @type {?} */\r\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\r\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\r\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\r\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\r\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\r\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\r\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\r\n        if (view.def.flags & 2 /* OnPush */) {\r\n            view.state &= ~8 /* ChecksEnabled */;\r\n        }\r\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\r\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeDef\r\n     * @param {?} argStyle\r\n     * @param {?=} v0\r\n     * @param {?=} v1\r\n     * @param {?=} v2\r\n     * @param {?=} v3\r\n     * @param {?=} v4\r\n     * @param {?=} v5\r\n     * @param {?=} v6\r\n     * @param {?=} v7\r\n     * @param {?=} v8\r\n     * @param {?=} v9\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\r\n        if (argStyle === 0 /* Inline */) {\r\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\r\n        }\r\n        else {\r\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function markProjectedViewsForCheck(view) {\r\n        /** @type {?} */\r\n        var def = view.def;\r\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < def.nodes.length; i++) {\r\n            /** @type {?} */\r\n            var nodeDef = def.nodes[i];\r\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\r\n                /** @type {?} */\r\n                var projectedViews = asElementData(view, i).template._projectedViews;\r\n                if (projectedViews) {\r\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\r\n                        /** @type {?} */\r\n                        var projectedView = projectedViews[i_1];\r\n                        projectedView.state |= 32 /* CheckProjectedView */;\r\n                        markParentViewsForCheckProjectedViews(projectedView, view);\r\n                    }\r\n                }\r\n            }\r\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\r\n                // a parent with leafs\r\n                // no child is a component,\r\n                // then skip the children\r\n                i += nodeDef.childCount;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeDef\r\n     * @param {?=} v0\r\n     * @param {?=} v1\r\n     * @param {?=} v2\r\n     * @param {?=} v3\r\n     * @param {?=} v4\r\n     * @param {?=} v5\r\n     * @param {?=} v6\r\n     * @param {?=} v7\r\n     * @param {?=} v8\r\n     * @param {?=} v9\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\r\n        switch (nodeDef.flags & 201347067 /* Types */) {\r\n            case 1 /* TypeElement */:\r\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\r\n            case 2 /* TypeText */:\r\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\r\n            case 16384 /* TypeDirective */:\r\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\r\n            case 32 /* TypePureArray */:\r\n            case 64 /* TypePureObject */:\r\n            case 128 /* TypePurePipe */:\r\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\r\n            default:\r\n                throw 'unreachable';\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeDef\r\n     * @param {?} values\r\n     * @return {?}\r\n     */\r\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\r\n        switch (nodeDef.flags & 201347067 /* Types */) {\r\n            case 1 /* TypeElement */:\r\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\r\n            case 2 /* TypeText */:\r\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\r\n            case 16384 /* TypeDirective */:\r\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\r\n            case 32 /* TypePureArray */:\r\n            case 64 /* TypePureObject */:\r\n            case 128 /* TypePurePipe */:\r\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\r\n            default:\r\n                throw 'unreachable';\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeDef\r\n     * @param {?} argStyle\r\n     * @param {?=} v0\r\n     * @param {?=} v1\r\n     * @param {?=} v2\r\n     * @param {?=} v3\r\n     * @param {?=} v4\r\n     * @param {?=} v5\r\n     * @param {?=} v6\r\n     * @param {?=} v7\r\n     * @param {?=} v8\r\n     * @param {?=} v9\r\n     * @return {?}\r\n     */\r\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\r\n        if (argStyle === 0 /* Inline */) {\r\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\r\n        }\r\n        else {\r\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\r\n        }\r\n        // Returning false is ok here as we would have thrown in case of a change.\r\n        return false;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeDef\r\n     * @param {?} v0\r\n     * @param {?} v1\r\n     * @param {?} v2\r\n     * @param {?} v3\r\n     * @param {?} v4\r\n     * @param {?} v5\r\n     * @param {?} v6\r\n     * @param {?} v7\r\n     * @param {?} v8\r\n     * @param {?} v9\r\n     * @return {?}\r\n     */\r\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\r\n        /** @type {?} */\r\n        var bindLen = nodeDef.bindings.length;\r\n        if (bindLen > 0)\r\n            checkBindingNoChanges(view, nodeDef, 0, v0);\r\n        if (bindLen > 1)\r\n            checkBindingNoChanges(view, nodeDef, 1, v1);\r\n        if (bindLen > 2)\r\n            checkBindingNoChanges(view, nodeDef, 2, v2);\r\n        if (bindLen > 3)\r\n            checkBindingNoChanges(view, nodeDef, 3, v3);\r\n        if (bindLen > 4)\r\n            checkBindingNoChanges(view, nodeDef, 4, v4);\r\n        if (bindLen > 5)\r\n            checkBindingNoChanges(view, nodeDef, 5, v5);\r\n        if (bindLen > 6)\r\n            checkBindingNoChanges(view, nodeDef, 6, v6);\r\n        if (bindLen > 7)\r\n            checkBindingNoChanges(view, nodeDef, 7, v7);\r\n        if (bindLen > 8)\r\n            checkBindingNoChanges(view, nodeDef, 8, v8);\r\n        if (bindLen > 9)\r\n            checkBindingNoChanges(view, nodeDef, 9, v9);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeDef\r\n     * @param {?} values\r\n     * @return {?}\r\n     */\r\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\r\n        for (var i = 0; i < values.length; i++) {\r\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\r\n        }\r\n    }\r\n    /**\r\n     * Workaround https://github.com/angular/tsickle/issues/497\r\n     * @suppress {misplacedTypeAnnotation}\r\n     * @param {?} view\r\n     * @param {?} nodeDef\r\n     * @return {?}\r\n     */\r\n    function checkNoChangesQuery(view, nodeDef) {\r\n        /** @type {?} */\r\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\r\n        if (queryList.dirty) {\r\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + ((nodeDef.query)).id + \" not dirty\", \"Query \" + ((nodeDef.query)).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function destroyView(view) {\r\n        if (view.state & 128 /* Destroyed */) {\r\n            return;\r\n        }\r\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\r\n        execComponentViewsAction(view, ViewAction.Destroy);\r\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\r\n        if (view.disposables) {\r\n            for (var i = 0; i < view.disposables.length; i++) {\r\n                view.disposables[i]();\r\n            }\r\n        }\r\n        detachProjectedView(view);\r\n        if (view.renderer.destroyNode) {\r\n            destroyViewNodes(view);\r\n        }\r\n        if (isComponentView(view)) {\r\n            view.renderer.destroy();\r\n        }\r\n        view.state |= 128 /* Destroyed */;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function destroyViewNodes(view) {\r\n        /** @type {?} */\r\n        var len = view.def.nodes.length;\r\n        for (var i = 0; i < len; i++) {\r\n            /** @type {?} */\r\n            var def = view.def.nodes[i];\r\n            if (def.flags & 1 /* TypeElement */) {\r\n                ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\r\n            }\r\n            else if (def.flags & 2 /* TypeText */) {\r\n                ((view.renderer.destroyNode))(asTextData(view, i).renderText);\r\n            }\r\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\r\n                asQueryList(view, i).destroy();\r\n            }\r\n        }\r\n    }\r\n    /** @enum {number} */\r\n    var ViewAction = {\r\n        CreateViewNodes: 0,\r\n        CheckNoChanges: 1,\r\n        CheckNoChangesProjectedViews: 2,\r\n        CheckAndUpdate: 3,\r\n        CheckAndUpdateProjectedViews: 4,\r\n        Destroy: 5,\r\n    };\r\n    ViewAction[ViewAction.CreateViewNodes] = 'CreateViewNodes';\r\n    ViewAction[ViewAction.CheckNoChanges] = 'CheckNoChanges';\r\n    ViewAction[ViewAction.CheckNoChangesProjectedViews] = 'CheckNoChangesProjectedViews';\r\n    ViewAction[ViewAction.CheckAndUpdate] = 'CheckAndUpdate';\r\n    ViewAction[ViewAction.CheckAndUpdateProjectedViews] = 'CheckAndUpdateProjectedViews';\r\n    ViewAction[ViewAction.Destroy] = 'Destroy';\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} action\r\n     * @return {?}\r\n     */\r\n    function execComponentViewsAction(view, action) {\r\n        /** @type {?} */\r\n        var def = view.def;\r\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < def.nodes.length; i++) {\r\n            /** @type {?} */\r\n            var nodeDef = def.nodes[i];\r\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\r\n                // a leaf\r\n                callViewAction(asElementData(view, i).componentView, action);\r\n            }\r\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\r\n                // a parent with leafs\r\n                // no child is a component,\r\n                // then skip the children\r\n                i += nodeDef.childCount;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} action\r\n     * @return {?}\r\n     */\r\n    function execEmbeddedViewsAction(view, action) {\r\n        /** @type {?} */\r\n        var def = view.def;\r\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < def.nodes.length; i++) {\r\n            /** @type {?} */\r\n            var nodeDef = def.nodes[i];\r\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\r\n                // a leaf\r\n                /** @type {?} */\r\n                var embeddedViews = ((asElementData(view, i).viewContainer))._embeddedViews;\r\n                for (var k = 0; k < embeddedViews.length; k++) {\r\n                    callViewAction(embeddedViews[k], action);\r\n                }\r\n            }\r\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\r\n                // a parent with leafs\r\n                // no child is a component,\r\n                // then skip the children\r\n                i += nodeDef.childCount;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} action\r\n     * @return {?}\r\n     */\r\n    function callViewAction(view, action) {\r\n        /** @type {?} */\r\n        var viewState = view.state;\r\n        switch (action) {\r\n            case ViewAction.CheckNoChanges:\r\n                if ((viewState & 128 /* Destroyed */) === 0) {\r\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\r\n                        checkNoChangesView(view);\r\n                    }\r\n                    else if (viewState & 64 /* CheckProjectedViews */) {\r\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\r\n                    }\r\n                }\r\n                break;\r\n            case ViewAction.CheckNoChangesProjectedViews:\r\n                if ((viewState & 128 /* Destroyed */) === 0) {\r\n                    if (viewState & 32 /* CheckProjectedView */) {\r\n                        checkNoChangesView(view);\r\n                    }\r\n                    else if (viewState & 64 /* CheckProjectedViews */) {\r\n                        execProjectedViewsAction(view, action);\r\n                    }\r\n                }\r\n                break;\r\n            case ViewAction.CheckAndUpdate:\r\n                if ((viewState & 128 /* Destroyed */) === 0) {\r\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\r\n                        checkAndUpdateView(view);\r\n                    }\r\n                    else if (viewState & 64 /* CheckProjectedViews */) {\r\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\r\n                    }\r\n                }\r\n                break;\r\n            case ViewAction.CheckAndUpdateProjectedViews:\r\n                if ((viewState & 128 /* Destroyed */) === 0) {\r\n                    if (viewState & 32 /* CheckProjectedView */) {\r\n                        checkAndUpdateView(view);\r\n                    }\r\n                    else if (viewState & 64 /* CheckProjectedViews */) {\r\n                        execProjectedViewsAction(view, action);\r\n                    }\r\n                }\r\n                break;\r\n            case ViewAction.Destroy:\r\n                // Note: destroyView recurses over all views,\r\n                // so we don't need to special case projected views here.\r\n                destroyView(view);\r\n                break;\r\n            case ViewAction.CreateViewNodes:\r\n                createViewNodes(view);\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} action\r\n     * @return {?}\r\n     */\r\n    function execProjectedViewsAction(view, action) {\r\n        execEmbeddedViewsAction(view, action);\r\n        execComponentViewsAction(view, action);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} queryFlags\r\n     * @param {?} staticDynamicQueryFlag\r\n     * @param {?} checkType\r\n     * @return {?}\r\n     */\r\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\r\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var nodeCount = view.def.nodes.length;\r\n        for (var i = 0; i < nodeCount; i++) {\r\n            /** @type {?} */\r\n            var nodeDef = view.def.nodes[i];\r\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\r\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\r\n                switch (checkType) {\r\n                    case 0 /* CheckAndUpdate */:\r\n                        checkAndUpdateQuery(view, nodeDef);\r\n                        break;\r\n                    case 1 /* CheckNoChanges */:\r\n                        checkNoChangesQuery(view, nodeDef);\r\n                        break;\r\n                }\r\n            }\r\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\r\n                // no child has a matching query\r\n                // then skip the children\r\n                i += nodeDef.childCount;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var initialized = false;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function initServicesIfNeeded() {\r\n        if (initialized) {\r\n            return;\r\n        }\r\n        initialized = true;\r\n        /** @type {?} */\r\n        var services = isDevMode() ? createDebugServices() : createProdServices();\r\n        Services.setCurrentNode = services.setCurrentNode;\r\n        Services.createRootView = services.createRootView;\r\n        Services.createEmbeddedView = services.createEmbeddedView;\r\n        Services.createComponentView = services.createComponentView;\r\n        Services.createNgModuleRef = services.createNgModuleRef;\r\n        Services.overrideProvider = services.overrideProvider;\r\n        Services.overrideComponentView = services.overrideComponentView;\r\n        Services.clearOverrides = services.clearOverrides;\r\n        Services.checkAndUpdateView = services.checkAndUpdateView;\r\n        Services.checkNoChangesView = services.checkNoChangesView;\r\n        Services.destroyView = services.destroyView;\r\n        Services.resolveDep = resolveDep;\r\n        Services.createDebugContext = services.createDebugContext;\r\n        Services.handleEvent = services.handleEvent;\r\n        Services.updateDirectives = services.updateDirectives;\r\n        Services.updateRenderer = services.updateRenderer;\r\n        Services.dirtyParentQueries = dirtyParentQueries;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function createProdServices() {\r\n        return {\r\n            setCurrentNode: function () { },\r\n            createRootView: createProdRootView,\r\n            createEmbeddedView: createEmbeddedView,\r\n            createComponentView: createComponentView,\r\n            createNgModuleRef: createNgModuleRef,\r\n            overrideProvider: NOOP,\r\n            overrideComponentView: NOOP,\r\n            clearOverrides: NOOP,\r\n            checkAndUpdateView: checkAndUpdateView,\r\n            checkNoChangesView: checkNoChangesView,\r\n            destroyView: destroyView,\r\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\r\n            handleEvent: function (view, nodeIndex, eventName, event) { return view.def.handleEvent(view, nodeIndex, eventName, event); },\r\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\r\n                prodCheckNoChangesNode, view); },\r\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\r\n                prodCheckNoChangesNode, view); },\r\n        };\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function createDebugServices() {\r\n        return {\r\n            setCurrentNode: debugSetCurrentNode,\r\n            createRootView: debugCreateRootView,\r\n            createEmbeddedView: debugCreateEmbeddedView,\r\n            createComponentView: debugCreateComponentView,\r\n            createNgModuleRef: debugCreateNgModuleRef,\r\n            overrideProvider: debugOverrideProvider,\r\n            overrideComponentView: debugOverrideComponentView,\r\n            clearOverrides: debugClearOverrides,\r\n            checkAndUpdateView: debugCheckAndUpdateView,\r\n            checkNoChangesView: debugCheckNoChangesView,\r\n            destroyView: debugDestroyView,\r\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\r\n            handleEvent: debugHandleEvent,\r\n            updateDirectives: debugUpdateDirectives,\r\n            updateRenderer: debugUpdateRenderer,\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} elInjector\r\n     * @param {?} projectableNodes\r\n     * @param {?} rootSelectorOrNode\r\n     * @param {?} def\r\n     * @param {?} ngModule\r\n     * @param {?=} context\r\n     * @return {?}\r\n     */\r\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\r\n        /** @type {?} */\r\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\r\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\r\n    }\r\n    /**\r\n     * @param {?} elInjector\r\n     * @param {?} projectableNodes\r\n     * @param {?} rootSelectorOrNode\r\n     * @param {?} def\r\n     * @param {?} ngModule\r\n     * @param {?=} context\r\n     * @return {?}\r\n     */\r\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\r\n        /** @type {?} */\r\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\r\n        /** @type {?} */\r\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\r\n        /** @type {?} */\r\n        var defWithOverride = applyProviderOverridesToView(def);\r\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\r\n    }\r\n    /**\r\n     * @param {?} elInjector\r\n     * @param {?} ngModule\r\n     * @param {?} rendererFactory\r\n     * @param {?} projectableNodes\r\n     * @param {?} rootSelectorOrNode\r\n     * @return {?}\r\n     */\r\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\r\n        /** @type {?} */\r\n        var sanitizer = ngModule.injector.get(Sanitizer);\r\n        /** @type {?} */\r\n        var errorHandler = ngModule.injector.get(ErrorHandler);\r\n        /** @type {?} */\r\n        var renderer = rendererFactory.createRenderer(null, null);\r\n        return {\r\n            ngModule: ngModule,\r\n            injector: elInjector, projectableNodes: projectableNodes,\r\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} parentView\r\n     * @param {?} anchorDef\r\n     * @param {?} viewDef\r\n     * @param {?=} context\r\n     * @return {?}\r\n     */\r\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\r\n        /** @type {?} */\r\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\r\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\r\n    }\r\n    /**\r\n     * @param {?} parentView\r\n     * @param {?} nodeDef\r\n     * @param {?} viewDef\r\n     * @param {?} hostElement\r\n     * @return {?}\r\n     */\r\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\r\n        /** @type {?} */\r\n        var overrideComponentView = viewDefOverrides.get(((((((nodeDef.element)).componentProvider)).provider)).token);\r\n        if (overrideComponentView) {\r\n            viewDef$$1 = overrideComponentView;\r\n        }\r\n        else {\r\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\r\n        }\r\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\r\n    }\r\n    /**\r\n     * @param {?} moduleType\r\n     * @param {?} parentInjector\r\n     * @param {?} bootstrapComponents\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\r\n        /** @type {?} */\r\n        var defWithOverride = applyProviderOverridesToNgModule(def);\r\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\r\n    }\r\n    /** @type {?} */\r\n    var providerOverrides = new Map();\r\n    /** @type {?} */\r\n    var providerOverridesWithScope = new Map();\r\n    /** @type {?} */\r\n    var viewDefOverrides = new Map();\r\n    /**\r\n     * @param {?} override\r\n     * @return {?}\r\n     */\r\n    function debugOverrideProvider(override) {\r\n        providerOverrides.set(override.token, override);\r\n        /** @type {?} */\r\n        var injectableDef;\r\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\r\n            typeof injectableDef.providedIn === 'function') {\r\n            providerOverridesWithScope.set(((override.token)), override);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} comp\r\n     * @param {?} compFactory\r\n     * @return {?}\r\n     */\r\n    function debugOverrideComponentView(comp, compFactory) {\r\n        /** @type {?} */\r\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\r\n        /** @type {?} */\r\n        var compViewDef = resolveDefinition(((((hostViewDef.nodes[0].element)).componentView)));\r\n        viewDefOverrides.set(comp, compViewDef);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function debugClearOverrides() {\r\n        providerOverrides.clear();\r\n        providerOverridesWithScope.clear();\r\n        viewDefOverrides.clear();\r\n    }\r\n    // Notes about the algorithm:\r\n    // 1) Locate the providers of an element and check if one of them was overwritten\r\n    // 2) Change the providers of that element\r\n    //\r\n    // We only create new datastructures if we need to, to keep perf impact\r\n    // reasonable.\r\n    /**\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function applyProviderOverridesToView(def) {\r\n        if (providerOverrides.size === 0) {\r\n            return def;\r\n        }\r\n        /** @type {?} */\r\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\r\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\r\n            return def;\r\n        }\r\n        // clone the whole view definition,\r\n        // as it maintains references between the nodes that are hard to update.\r\n        def = ((def.factory))(function () { return NOOP; });\r\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\r\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\r\n        }\r\n        return def;\r\n        /**\r\n         * @param {?} def\r\n         * @return {?}\r\n         */\r\n        function findElementIndicesWithOverwrittenProviders(def) {\r\n            /** @type {?} */\r\n            var elIndicesWithOverwrittenProviders = [];\r\n            /** @type {?} */\r\n            var lastElementDef = null;\r\n            for (var i = 0; i < def.nodes.length; i++) {\r\n                /** @type {?} */\r\n                var nodeDef = def.nodes[i];\r\n                if (nodeDef.flags & 1 /* TypeElement */) {\r\n                    lastElementDef = nodeDef;\r\n                }\r\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\r\n                    providerOverrides.has(((nodeDef.provider)).token)) {\r\n                    elIndicesWithOverwrittenProviders.push(((lastElementDef)).nodeIndex);\r\n                    lastElementDef = null;\r\n                }\r\n            }\r\n            return elIndicesWithOverwrittenProviders;\r\n        }\r\n        /**\r\n         * @param {?} viewDef\r\n         * @param {?} elIndex\r\n         * @return {?}\r\n         */\r\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\r\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\r\n                /** @type {?} */\r\n                var nodeDef = viewDef$$1.nodes[i];\r\n                if (nodeDef.flags & 1 /* TypeElement */) {\r\n                    // stop at the next element\r\n                    return;\r\n                }\r\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\r\n                    /** @type {?} */\r\n                    var provider = ((nodeDef.provider));\r\n                    /** @type {?} */\r\n                    var override = providerOverrides.get(provider.token);\r\n                    if (override) {\r\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\r\n                        provider.deps = splitDepsDsl(override.deps);\r\n                        provider.value = override.value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Notes about the algorithm:\r\n    // We only create new datastructures if we need to, to keep perf impact\r\n    // reasonable.\r\n    /**\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function applyProviderOverridesToNgModule(def) {\r\n        var _b = calcHasOverrides(def), hasOverrides = _b.hasOverrides, hasDeprecatedOverrides = _b.hasDeprecatedOverrides;\r\n        if (!hasOverrides) {\r\n            return def;\r\n        }\r\n        // clone the whole view definition,\r\n        // as it maintains references between the nodes that are hard to update.\r\n        def = ((def.factory))(function () { return NOOP; });\r\n        applyProviderOverrides(def);\r\n        return def;\r\n        /**\r\n         * @param {?} def\r\n         * @return {?}\r\n         */\r\n        function calcHasOverrides(def) {\r\n            /** @type {?} */\r\n            var hasOverrides = false;\r\n            /** @type {?} */\r\n            var hasDeprecatedOverrides = false;\r\n            if (providerOverrides.size === 0) {\r\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\r\n            }\r\n            def.providers.forEach(function (node) {\r\n                /** @type {?} */\r\n                var override = providerOverrides.get(node.token);\r\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\r\n                    hasOverrides = true;\r\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\r\n                }\r\n            });\r\n            def.modules.forEach(function (module) {\r\n                providerOverridesWithScope.forEach(function (override, token) {\r\n                    if (((getInjectableDef(token))).providedIn === module) {\r\n                        hasOverrides = true;\r\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\r\n                    }\r\n                });\r\n            });\r\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\r\n        }\r\n        /**\r\n         * @param {?} def\r\n         * @return {?}\r\n         */\r\n        function applyProviderOverrides(def) {\r\n            for (var i = 0; i < def.providers.length; i++) {\r\n                /** @type {?} */\r\n                var provider = def.providers[i];\r\n                if (hasDeprecatedOverrides) {\r\n                    // We had a bug where me made\r\n                    // all providers lazy. Keep this logic behind a flag\r\n                    // for migrating existing users.\r\n                    provider.flags |= 4096 /* LazyProvider */;\r\n                }\r\n                /** @type {?} */\r\n                var override = providerOverrides.get(provider.token);\r\n                if (override) {\r\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\r\n                    provider.deps = splitDepsDsl(override.deps);\r\n                    provider.value = override.value;\r\n                }\r\n            }\r\n            if (providerOverridesWithScope.size > 0) {\r\n                /** @type {?} */\r\n                var moduleSet_1 = new Set(def.modules);\r\n                providerOverridesWithScope.forEach(function (override, token) {\r\n                    if (moduleSet_1.has(((getInjectableDef(token))).providedIn)) {\r\n                        /** @type {?} */\r\n                        var provider = {\r\n                            token: token,\r\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\r\n                            deps: splitDepsDsl(override.deps),\r\n                            value: override.value,\r\n                            index: def.providers.length,\r\n                        };\r\n                        def.providers.push(provider);\r\n                        def.providersByKey[tokenKey(token)] = provider;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} checkIndex\r\n     * @param {?} argStyle\r\n     * @param {?=} v0\r\n     * @param {?=} v1\r\n     * @param {?=} v2\r\n     * @param {?=} v3\r\n     * @param {?=} v4\r\n     * @param {?=} v5\r\n     * @param {?=} v6\r\n     * @param {?=} v7\r\n     * @param {?=} v8\r\n     * @param {?=} v9\r\n     * @return {?}\r\n     */\r\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\r\n        /** @type {?} */\r\n        var nodeDef = view.def.nodes[checkIndex];\r\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\r\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\r\n            asPureExpressionData(view, checkIndex).value :\r\n            undefined;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} checkIndex\r\n     * @param {?} argStyle\r\n     * @param {?=} v0\r\n     * @param {?=} v1\r\n     * @param {?=} v2\r\n     * @param {?=} v3\r\n     * @param {?=} v4\r\n     * @param {?=} v5\r\n     * @param {?=} v6\r\n     * @param {?=} v7\r\n     * @param {?=} v8\r\n     * @param {?=} v9\r\n     * @return {?}\r\n     */\r\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\r\n        /** @type {?} */\r\n        var nodeDef = view.def.nodes[checkIndex];\r\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\r\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\r\n            asPureExpressionData(view, checkIndex).value :\r\n            undefined;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function debugCheckAndUpdateView(view) {\r\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function debugCheckNoChangesView(view) {\r\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function debugDestroyView(view) {\r\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\r\n    }\r\n    /** @enum {number} */\r\n    var DebugAction = {\r\n        create: 0,\r\n        detectChanges: 1,\r\n        checkNoChanges: 2,\r\n        destroy: 3,\r\n        handleEvent: 4,\r\n    };\r\n    DebugAction[DebugAction.create] = 'create';\r\n    DebugAction[DebugAction.detectChanges] = 'detectChanges';\r\n    DebugAction[DebugAction.checkNoChanges] = 'checkNoChanges';\r\n    DebugAction[DebugAction.destroy] = 'destroy';\r\n    DebugAction[DebugAction.handleEvent] = 'handleEvent';\r\n    /** @type {?} */\r\n    var _currentAction;\r\n    /** @type {?} */\r\n    var _currentView;\r\n    /** @type {?} */\r\n    var _currentNodeIndex;\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeIndex\r\n     * @return {?}\r\n     */\r\n    function debugSetCurrentNode(view, nodeIndex) {\r\n        _currentView = view;\r\n        _currentNodeIndex = nodeIndex;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeIndex\r\n     * @param {?} eventName\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\r\n        debugSetCurrentNode(view, nodeIndex);\r\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} checkType\r\n     * @return {?}\r\n     */\r\n    function debugUpdateDirectives(view, checkType) {\r\n        if (view.state & 128 /* Destroyed */) {\r\n            throw viewDestroyedError(DebugAction[_currentAction]);\r\n        }\r\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\r\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\r\n        /**\r\n         * @param {?} view\r\n         * @param {?} nodeIndex\r\n         * @param {?} argStyle\r\n         * @param {...?} values\r\n         * @return {?}\r\n         */\r\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\r\n            var values = [];\r\n            for (var _i = 3; _i < arguments.length; _i++) {\r\n                values[_i - 3] = arguments[_i];\r\n            }\r\n            /** @type {?} */\r\n            var nodeDef = view.def.nodes[nodeIndex];\r\n            if (checkType === 0 /* CheckAndUpdate */) {\r\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\r\n            }\r\n            else {\r\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\r\n            }\r\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\r\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\r\n            }\r\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\r\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\r\n                undefined;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} checkType\r\n     * @return {?}\r\n     */\r\n    function debugUpdateRenderer(view, checkType) {\r\n        if (view.state & 128 /* Destroyed */) {\r\n            throw viewDestroyedError(DebugAction[_currentAction]);\r\n        }\r\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\r\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\r\n        /**\r\n         * @param {?} view\r\n         * @param {?} nodeIndex\r\n         * @param {?} argStyle\r\n         * @param {...?} values\r\n         * @return {?}\r\n         */\r\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\r\n            var values = [];\r\n            for (var _i = 3; _i < arguments.length; _i++) {\r\n                values[_i - 3] = arguments[_i];\r\n            }\r\n            /** @type {?} */\r\n            var nodeDef = view.def.nodes[nodeIndex];\r\n            if (checkType === 0 /* CheckAndUpdate */) {\r\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\r\n            }\r\n            else {\r\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\r\n            }\r\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\r\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\r\n            }\r\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\r\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\r\n                undefined;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeDef\r\n     * @param {?} argStyle\r\n     * @param {?} givenValues\r\n     * @return {?}\r\n     */\r\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\r\n        /** @type {?} */\r\n        var changed = (((checkAndUpdateNode))).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\r\n        if (changed) {\r\n            /** @type {?} */\r\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\r\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\r\n                /** @type {?} */\r\n                var bindingValues = {};\r\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\r\n                    /** @type {?} */\r\n                    var binding = nodeDef.bindings[i];\r\n                    /** @type {?} */\r\n                    var value = values[i];\r\n                    if (binding.flags & 8 /* TypeProperty */) {\r\n                        bindingValues[normalizeDebugBindingName(((binding.nonMinifiedName)))] =\r\n                            normalizeDebugBindingValue(value);\r\n                    }\r\n                }\r\n                /** @type {?} */\r\n                var elDef = ((nodeDef.parent));\r\n                /** @type {?} */\r\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\r\n                if (!((elDef.element)).name) {\r\n                    // a comment.\r\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\r\n                }\r\n                else {\r\n                    // a regular element.\r\n                    for (var attr in bindingValues) {\r\n                        /** @type {?} */\r\n                        var value = bindingValues[attr];\r\n                        if (value != null) {\r\n                            view.renderer.setAttribute(el, attr, value);\r\n                        }\r\n                        else {\r\n                            view.renderer.removeAttribute(el, attr);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeDef\r\n     * @param {?} argStyle\r\n     * @param {?} values\r\n     * @return {?}\r\n     */\r\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\r\n        (((checkNoChangesNode))).apply(void 0, [view, nodeDef, argStyle].concat(values));\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeIndex\r\n     * @return {?}\r\n     */\r\n    function nextDirectiveWithBinding(view, nodeIndex) {\r\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\r\n            /** @type {?} */\r\n            var nodeDef = view.def.nodes[i];\r\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\r\n                return i;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeIndex\r\n     * @return {?}\r\n     */\r\n    function nextRenderNodeWithBinding(view, nodeIndex) {\r\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\r\n            /** @type {?} */\r\n            var nodeDef = view.def.nodes[i];\r\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\r\n                return i;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    var DebugContext_ = /** @class */ (function () {\r\n        /**\r\n         * @param {?} view\r\n         * @param {?} nodeIndex\r\n         */\r\n        function DebugContext_(view, nodeIndex) {\r\n            this.view = view;\r\n            this.nodeIndex = nodeIndex;\r\n            if (nodeIndex == null) {\r\n                this.nodeIndex = nodeIndex = 0;\r\n            }\r\n            this.nodeDef = view.def.nodes[nodeIndex];\r\n            /** @type {?} */\r\n            var elDef = this.nodeDef;\r\n            /** @type {?} */\r\n            var elView = view;\r\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\r\n                elDef = ((elDef.parent));\r\n            }\r\n            if (!elDef) {\r\n                while (!elDef && elView) {\r\n                    elDef = ((viewParentEl(elView)));\r\n                    elView = ((elView.parent));\r\n                }\r\n            }\r\n            this.elDef = elDef;\r\n            this.elView = elView;\r\n        }\r\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\r\n            /**\r\n             * @private\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\r\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return createInjector$1(this.elView, this.elDef); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this.elOrCompView.component; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this.elOrCompView.context; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                /** @type {?} */\r\n                var tokens = [];\r\n                if (this.elDef) {\r\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\r\n                        /** @type {?} */\r\n                        var childDef = this.elView.def.nodes[i];\r\n                        if (childDef.flags & 20224 /* CatProvider */) {\r\n                            tokens.push(((childDef.provider)).token);\r\n                        }\r\n                        i += childDef.childCount;\r\n                    }\r\n                }\r\n                return tokens;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                /** @type {?} */\r\n                var references = {};\r\n                if (this.elDef) {\r\n                    collectReferences(this.elView, this.elDef, references);\r\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\r\n                        /** @type {?} */\r\n                        var childDef = this.elView.def.nodes[i];\r\n                        if (childDef.flags & 20224 /* CatProvider */) {\r\n                            collectReferences(this.elView, childDef, references);\r\n                        }\r\n                        i += childDef.childCount;\r\n                    }\r\n                }\r\n                return references;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                /** @type {?} */\r\n                var elData = findHostElement(this.elOrCompView);\r\n                return elData ? elData.renderElement : undefined;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () {\r\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\r\n                    renderNode(this.elView, this.elDef);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {?} console\r\n         * @param {...?} values\r\n         * @return {?}\r\n         */\r\n        DebugContext_.prototype.logError = function (console) {\r\n            var values = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                values[_i - 1] = arguments[_i];\r\n            }\r\n            /** @type {?} */\r\n            var logViewDef;\r\n            /** @type {?} */\r\n            var logNodeIndex;\r\n            if (this.nodeDef.flags & 2 /* TypeText */) {\r\n                logViewDef = this.view.def;\r\n                logNodeIndex = this.nodeDef.nodeIndex;\r\n            }\r\n            else {\r\n                logViewDef = this.elView.def;\r\n                logNodeIndex = this.elDef.nodeIndex;\r\n            }\r\n            // Note: we only generate a log function for text and element nodes\r\n            // to make the generated code as small as possible.\r\n            /** @type {?} */\r\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\r\n            /** @type {?} */\r\n            var currRenderNodeIndex = -1;\r\n            /** @type {?} */\r\n            var nodeLogger = function () {\r\n                currRenderNodeIndex++;\r\n                if (currRenderNodeIndex === renderNodeIndex) {\r\n                    return (_b = console.error).bind.apply(_b, [console].concat(values));\r\n                }\r\n                else {\r\n                    return NOOP;\r\n                }\r\n                var _b;\r\n            };\r\n            ((logViewDef.factory))(nodeLogger);\r\n            if (currRenderNodeIndex < renderNodeIndex) {\r\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\r\n                console.error.apply(console, values);\r\n            }\r\n        };\r\n        return DebugContext_;\r\n    }());\r\n    /**\r\n     * @param {?} viewDef\r\n     * @param {?} nodeIndex\r\n     * @return {?}\r\n     */\r\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\r\n        /** @type {?} */\r\n        var renderNodeIndex = -1;\r\n        for (var i = 0; i <= nodeIndex; i++) {\r\n            /** @type {?} */\r\n            var nodeDef = viewDef$$1.nodes[i];\r\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\r\n                renderNodeIndex++;\r\n            }\r\n        }\r\n        return renderNodeIndex;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @return {?}\r\n     */\r\n    function findHostElement(view) {\r\n        while (view && !isComponentView(view)) {\r\n            view = ((view.parent));\r\n        }\r\n        if (view.parent) {\r\n            return asElementData(view.parent, ((viewParentEl(view))).nodeIndex);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * @param {?} view\r\n     * @param {?} nodeDef\r\n     * @param {?} references\r\n     * @return {?}\r\n     */\r\n    function collectReferences(view, nodeDef, references) {\r\n        for (var refName in nodeDef.references) {\r\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} action\r\n     * @param {?} fn\r\n     * @param {?} self\r\n     * @param {?} args\r\n     * @return {?}\r\n     */\r\n    function callWithDebugContext(action, fn, self, args) {\r\n        /** @type {?} */\r\n        var oldAction = _currentAction;\r\n        /** @type {?} */\r\n        var oldView = _currentView;\r\n        /** @type {?} */\r\n        var oldNodeIndex = _currentNodeIndex;\r\n        try {\r\n            _currentAction = action;\r\n            /** @type {?} */\r\n            var result = fn.apply(self, args);\r\n            _currentView = oldView;\r\n            _currentNodeIndex = oldNodeIndex;\r\n            _currentAction = oldAction;\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            if (isViewDebugError(e) || !_currentView) {\r\n                throw e;\r\n            }\r\n            throw viewWrappedDebugError(e, ((getCurrentDebugContext())));\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function getCurrentDebugContext() {\r\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\r\n    }\r\n    var DebugRendererFactory2 = /** @class */ (function () {\r\n        /**\r\n         * @param {?} delegate\r\n         */\r\n        function DebugRendererFactory2(delegate) {\r\n            this.delegate = delegate;\r\n        }\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} renderData\r\n         * @return {?}\r\n         */\r\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\r\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        DebugRendererFactory2.prototype.begin = function () {\r\n            if (this.delegate.begin) {\r\n                this.delegate.begin();\r\n            }\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        DebugRendererFactory2.prototype.end = function () {\r\n            if (this.delegate.end) {\r\n                this.delegate.end();\r\n            }\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\r\n            if (this.delegate.whenRenderingDone) {\r\n                return this.delegate.whenRenderingDone();\r\n            }\r\n            return Promise.resolve(null);\r\n        };\r\n        return DebugRendererFactory2;\r\n    }());\r\n    var DebugRenderer2 = /** @class */ (function () {\r\n        /**\r\n         * @param {?} delegate\r\n         */\r\n        function DebugRenderer2(delegate) {\r\n            this.delegate = delegate;\r\n            /**\r\n             * Factory function used to create a `DebugContext` when a node is created.\r\n             *\r\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\r\n             *\r\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\r\n             * or a Render context.\r\n             */\r\n            this.debugContextFactory = getCurrentDebugContext;\r\n            this.data = this.delegate.data;\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} nativeElement\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.destroyNode = function (node) {\r\n            removeDebugNodeFromIndex(((getDebugNode(node))));\r\n            if (this.delegate.destroyNode) {\r\n                this.delegate.destroyNode(node);\r\n            }\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\r\n        /**\r\n         * @param {?} name\r\n         * @param {?=} namespace\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\r\n            /** @type {?} */\r\n            var el = this.delegate.createElement(name, namespace);\r\n            /** @type {?} */\r\n            var debugCtx = this.createDebugContext(el);\r\n            if (debugCtx) {\r\n                /** @type {?} */\r\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\r\n                (((debugEl))).name = name;\r\n                indexDebugNode(debugEl);\r\n            }\r\n            return el;\r\n        };\r\n        /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.createComment = function (value) {\r\n            /** @type {?} */\r\n            var comment = this.delegate.createComment(value);\r\n            /** @type {?} */\r\n            var debugCtx = this.createDebugContext(comment);\r\n            if (debugCtx) {\r\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\r\n            }\r\n            return comment;\r\n        };\r\n        /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.createText = function (value) {\r\n            /** @type {?} */\r\n            var text = this.delegate.createText(value);\r\n            /** @type {?} */\r\n            var debugCtx = this.createDebugContext(text);\r\n            if (debugCtx) {\r\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\r\n            }\r\n            return text;\r\n        };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} newChild\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\r\n            /** @type {?} */\r\n            var debugEl = getDebugNode(parent);\r\n            /** @type {?} */\r\n            var debugChildEl = getDebugNode(newChild);\r\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\r\n                debugEl.addChild(debugChildEl);\r\n            }\r\n            this.delegate.appendChild(parent, newChild);\r\n        };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} newChild\r\n         * @param {?} refChild\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\r\n            /** @type {?} */\r\n            var debugEl = getDebugNode(parent);\r\n            /** @type {?} */\r\n            var debugChildEl = getDebugNode(newChild);\r\n            /** @type {?} */\r\n            var debugRefEl = ((getDebugNode(refChild)));\r\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\r\n                debugEl.insertBefore(debugRefEl, debugChildEl);\r\n            }\r\n            this.delegate.insertBefore(parent, newChild, refChild);\r\n        };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} oldChild\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\r\n            /** @type {?} */\r\n            var debugEl = getDebugNode(parent);\r\n            /** @type {?} */\r\n            var debugChildEl = getDebugNode(oldChild);\r\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\r\n                debugEl.removeChild(debugChildEl);\r\n            }\r\n            this.delegate.removeChild(parent, oldChild);\r\n        };\r\n        /**\r\n         * @param {?} selectorOrNode\r\n         * @param {?=} preserveContent\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\r\n            /** @type {?} */\r\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\r\n            /** @type {?} */\r\n            var debugCtx = getCurrentDebugContext();\r\n            if (debugCtx) {\r\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\r\n            }\r\n            return el;\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} name\r\n         * @param {?} value\r\n         * @param {?=} namespace\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\r\n            /** @type {?} */\r\n            var debugEl = getDebugNode(el);\r\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\r\n                /** @type {?} */\r\n                var fullName = namespace ? namespace + ':' + name : name;\r\n                debugEl.attributes[fullName] = value;\r\n            }\r\n            this.delegate.setAttribute(el, name, value, namespace);\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} name\r\n         * @param {?=} namespace\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\r\n            /** @type {?} */\r\n            var debugEl = getDebugNode(el);\r\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\r\n                /** @type {?} */\r\n                var fullName = namespace ? namespace + ':' + name : name;\r\n                debugEl.attributes[fullName] = null;\r\n            }\r\n            this.delegate.removeAttribute(el, name, namespace);\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.addClass = function (el, name) {\r\n            /** @type {?} */\r\n            var debugEl = getDebugNode(el);\r\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\r\n                debugEl.classes[name] = true;\r\n            }\r\n            this.delegate.addClass(el, name);\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.removeClass = function (el, name) {\r\n            /** @type {?} */\r\n            var debugEl = getDebugNode(el);\r\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\r\n                debugEl.classes[name] = false;\r\n            }\r\n            this.delegate.removeClass(el, name);\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} style\r\n         * @param {?} value\r\n         * @param {?} flags\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\r\n            /** @type {?} */\r\n            var debugEl = getDebugNode(el);\r\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\r\n                debugEl.styles[style] = value;\r\n            }\r\n            this.delegate.setStyle(el, style, value, flags);\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} style\r\n         * @param {?} flags\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\r\n            /** @type {?} */\r\n            var debugEl = getDebugNode(el);\r\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\r\n                debugEl.styles[style] = null;\r\n            }\r\n            this.delegate.removeStyle(el, style, flags);\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} name\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\r\n            /** @type {?} */\r\n            var debugEl = getDebugNode(el);\r\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\r\n                debugEl.properties[name] = value;\r\n            }\r\n            this.delegate.setProperty(el, name, value);\r\n        };\r\n        /**\r\n         * @param {?} target\r\n         * @param {?} eventName\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\r\n            if (typeof target !== 'string') {\r\n                /** @type {?} */\r\n                var debugEl = getDebugNode(target);\r\n                if (debugEl) {\r\n                    debugEl.listeners.push(new EventListener(eventName, callback));\r\n                }\r\n            }\r\n            return this.delegate.listen(target, eventName, callback);\r\n        };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\r\n        /**\r\n         * @param {?} node\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\r\n        return DebugRenderer2;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    // Attention: this function is called as top level function.\r\n    // Putting any logic in here will destroy closure tree shaking!\r\n    /**\r\n     * @param {?} ngModuleType\r\n     * @param {?} bootstrapComponents\r\n     * @param {?} defFactory\r\n     * @return {?}\r\n     */\r\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\r\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\r\n    }\r\n    /**\r\n     * @param {?} def\r\n     * @return {?}\r\n     */\r\n    function cloneNgModuleDefinition(def) {\r\n        /** @type {?} */\r\n        var providers = Array.from(def.providers);\r\n        /** @type {?} */\r\n        var modules = Array.from(def.modules);\r\n        /** @type {?} */\r\n        var providersByKey = {};\r\n        for (var key in def.providersByKey) {\r\n            providersByKey[key] = def.providersByKey[key];\r\n        }\r\n        return {\r\n            factory: def.factory,\r\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\r\n        };\r\n    }\r\n    var NgModuleFactory_ = /** @class */ (function (_super) {\r\n        __extends(NgModuleFactory_, _super);\r\n        /**\r\n         * @param {?} moduleType\r\n         * @param {?} _bootstrapComponents\r\n         * @param {?} _ngModuleDefFactory\r\n         */\r\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\r\n            var _this = \r\n            // Attention: this ctor is called as top level function.\r\n            // Putting any logic in here will destroy closure tree shaking!\r\n            _super.call(this) || this;\r\n            _this.moduleType = moduleType;\r\n            _this._bootstrapComponents = _bootstrapComponents;\r\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\r\n            return _this;\r\n        }\r\n        /**\r\n         * @param {?} parentInjector\r\n         * @return {?}\r\n         */\r\n        NgModuleFactory_.prototype.create = function (parentInjector) {\r\n            initServicesIfNeeded();\r\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\r\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\r\n            // See https://github.com/angular/angular/issues/25018.\r\n            /** @type {?} */\r\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\r\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\r\n        };\r\n        return NgModuleFactory_;\r\n    }(NgModuleFactory));\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * This class should not be used directly by an application developer. Instead, use\r\n     * {\\@link Location}.\r\n     *\r\n     * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\r\n     * agnostic.\r\n     * This means that we can have different implementation of `PlatformLocation` for the different\r\n     * platforms that angular supports. For example, `\\@angular/platform-browser` provides an\r\n     * implementation specific to the browser environment, while `\\@angular/platform-webworker` provides\r\n     * one suitable for use with web workers.\r\n     *\r\n     * The `PlatformLocation` class is used directly by all implementations of {\\@link LocationStrategy}\r\n     * when they need to interact with the DOM apis like pushState, popState, etc...\r\n     *\r\n     * {\\@link LocationStrategy} in turn is used by the {\\@link Location} service which is used directly\r\n     * by the {\\@link Router} in order to navigate between routes. Since all interactions between {\\@link\r\n     * Router} /\r\n     * {\\@link Location} / {\\@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\r\n     * class they are all platform independent.\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var PlatformLocation = /** @class */ (function () {\r\n        function PlatformLocation() {\r\n        }\r\n        return PlatformLocation;\r\n    }());\r\n    /**\r\n     * \\@description\r\n     * Indicates when a location is initialized.\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var LOCATION_INITIALIZED = new InjectionToken('Location Initialized');\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * The `APP_BASE_HREF` token represents the base href to be used with the\r\n     * {\\@link PathLocationStrategy}.\r\n     *\r\n     * If you're using {\\@link PathLocationStrategy}, you must provide a provider to a string\r\n     * representing the URL prefix that should be preserved when generating and recognizing\r\n     * URLs.\r\n     *\r\n     * \\@usageNotes\r\n     *\r\n     * ### Example\r\n     *\r\n     * ```typescript\r\n     * import {Component, NgModule} from '\\@angular/core';\r\n     * import {APP_BASE_HREF} from '\\@angular/common';\r\n     *\r\n     * \\@NgModule({\r\n     *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\r\n     * })\r\n     * class AppModule {}\r\n     * ```\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var APP_BASE_HREF = new InjectionToken('appBaseHref');\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @deprecated from v5\r\n     * @type {?}\r\n     */\r\n    var DEPRECATED_PLURAL_FN = new InjectionToken('UseV4Plurals');\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * @param {?} cookieStr\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function parseCookieValue(cookieStr, name) {\r\n        name = encodeURIComponent(name);\r\n        for (var _i = 0, _b = cookieStr.split(';'); _i < _b.length; _i++) {\r\n            var cookie = _b[_i];\r\n            /** @type {?} */\r\n            var eqIndex = cookie.indexOf('=');\r\n            var _c = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], cookieName = _c[0], cookieValue = _c[1];\r\n            if (cookieName.trim() === name) {\r\n                return decodeURIComponent(cookieValue);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var PATTERN_ALIASES = {\r\n        // Keys are quoted so they do not get renamed during closure compilation.\r\n        'yMMMdjms': datePartGetterFactory(combine([\r\n            digitCondition('year', 1),\r\n            nameCondition('month', 3),\r\n            digitCondition('day', 1),\r\n            digitCondition('hour', 1),\r\n            digitCondition('minute', 1),\r\n            digitCondition('second', 1),\r\n        ])),\r\n        'yMdjm': datePartGetterFactory(combine([\r\n            digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\r\n            digitCondition('hour', 1), digitCondition('minute', 1)\r\n        ])),\r\n        'yMMMMEEEEd': datePartGetterFactory(combine([\r\n            digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\r\n            digitCondition('day', 1)\r\n        ])),\r\n        'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\r\n        'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\r\n        'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\r\n        'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\r\n        'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\r\n    };\r\n    /** @type {?} */\r\n    var DATE_FORMATS$1 = {\r\n        // Keys are quoted so they do not get renamed.\r\n        'yyyy': datePartGetterFactory(digitCondition('year', 4)),\r\n        'yy': datePartGetterFactory(digitCondition('year', 2)),\r\n        'y': datePartGetterFactory(digitCondition('year', 1)),\r\n        'MMMM': datePartGetterFactory(nameCondition('month', 4)),\r\n        'MMM': datePartGetterFactory(nameCondition('month', 3)),\r\n        'MM': datePartGetterFactory(digitCondition('month', 2)),\r\n        'M': datePartGetterFactory(digitCondition('month', 1)),\r\n        'LLLL': datePartGetterFactory(nameCondition('month', 4)),\r\n        'L': datePartGetterFactory(nameCondition('month', 1)),\r\n        'dd': datePartGetterFactory(digitCondition('day', 2)),\r\n        'd': datePartGetterFactory(digitCondition('day', 1)),\r\n        'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\r\n        'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\r\n        'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\r\n        'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\r\n        'jj': datePartGetterFactory(digitCondition('hour', 2)),\r\n        'j': datePartGetterFactory(digitCondition('hour', 1)),\r\n        'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\r\n        'm': datePartGetterFactory(digitCondition('minute', 1)),\r\n        'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\r\n        's': datePartGetterFactory(digitCondition('second', 1)),\r\n        // while ISO 8601 requires fractions to be prefixed with `.` or `,`\r\n        // we can be just safely rely on using `sss` since we currently don't support single or two digit\r\n        // fractions\r\n        'sss': datePartGetterFactory(digitCondition('second', 3)),\r\n        'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\r\n        'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\r\n        'EE': datePartGetterFactory(nameCondition('weekday', 2)),\r\n        'E': datePartGetterFactory(nameCondition('weekday', 1)),\r\n        'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\r\n        'Z': timeZoneGetter$1('short'),\r\n        'z': timeZoneGetter$1('long'),\r\n        'ww': datePartGetterFactory({}),\r\n        // Week of year, padded (00-53). Week 01 is the week with the\r\n        // first Thursday of the year. not support ?\r\n        'w': datePartGetterFactory({}),\r\n        // Week of year (0-53). Week 1 is the week with the first Thursday\r\n        // of the year not support ?\r\n        'G': datePartGetterFactory(nameCondition('era', 1)),\r\n        'GG': datePartGetterFactory(nameCondition('era', 2)),\r\n        'GGG': datePartGetterFactory(nameCondition('era', 3)),\r\n        'GGGG': datePartGetterFactory(nameCondition('era', 4))\r\n    };\r\n    /**\r\n     * @param {?} inner\r\n     * @return {?}\r\n     */\r\n    function digitModifier(inner) {\r\n        return function (date, locale) {\r\n            /** @type {?} */\r\n            var result = inner(date, locale);\r\n            return result.length == 1 ? '0' + result : result;\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} inner\r\n     * @return {?}\r\n     */\r\n    function hourClockExtractor(inner) {\r\n        return function (date, locale) { return inner(date, locale).split(' ')[1]; };\r\n    }\r\n    /**\r\n     * @param {?} inner\r\n     * @return {?}\r\n     */\r\n    function hourExtractor(inner) {\r\n        return function (date, locale) { return inner(date, locale).split(' ')[0]; };\r\n    }\r\n    /**\r\n     * @param {?} date\r\n     * @param {?} locale\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    function intlDateFormat(date, locale, options) {\r\n        return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\r\n    }\r\n    /**\r\n     * @param {?} timezone\r\n     * @return {?}\r\n     */\r\n    function timeZoneGetter$1(timezone) {\r\n        // To workaround `Intl` API restriction for single timezone let format with 24 hours\r\n        /** @type {?} */\r\n        var options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\r\n        return function (date, locale) {\r\n            /** @type {?} */\r\n            var result = intlDateFormat(date, locale, options);\r\n            // Then extract first 3 letters that related to hours\r\n            return result ? result.substring(3) : '';\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} options\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function hour12Modify(options, value) {\r\n        options.hour12 = value;\r\n        return options;\r\n    }\r\n    /**\r\n     * @param {?} prop\r\n     * @param {?} len\r\n     * @return {?}\r\n     */\r\n    function digitCondition(prop, len) {\r\n        /** @type {?} */\r\n        var result = {};\r\n        result[prop] = len === 2 ? '2-digit' : 'numeric';\r\n        return result;\r\n    }\r\n    /**\r\n     * @param {?} prop\r\n     * @param {?} len\r\n     * @return {?}\r\n     */\r\n    function nameCondition(prop, len) {\r\n        /** @type {?} */\r\n        var result = {};\r\n        if (len < 4) {\r\n            result[prop] = len > 1 ? 'short' : 'narrow';\r\n        }\r\n        else {\r\n            result[prop] = 'long';\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    function combine(options) {\r\n        return options.reduce(function (merged, opt) { return (Object.assign({}, merged, opt)); }, {});\r\n    }\r\n    /**\r\n     * @param {?} ret\r\n     * @return {?}\r\n     */\r\n    function datePartGetterFactory(ret) {\r\n        return function (date, locale) { return intlDateFormat(date, locale, ret); };\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * A DI Token representing the main rendering context. In a browser this is the DOM Document.\r\n     *\r\n     * Note: Document might not be available in the Application Context when Application and Rendering\r\n     * Contexts are not the same (e.g. when running the application into a Web Worker).\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var DOCUMENT = new InjectionToken('DocumentToken');\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /** @type {?} */\r\n    var PLATFORM_BROWSER_ID = 'browser';\r\n    /** @type {?} */\r\n    var PLATFORM_SERVER_ID = 'server';\r\n    /**\r\n     * Returns whether a platform id represents a server platform.\r\n     * \\@publicApi\r\n     * @param {?} platformId\r\n     * @return {?}\r\n     */\r\n    function isPlatformServer(platformId) {\r\n        return platformId === PLATFORM_SERVER_ID;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var VERSION$1 = new Version('0.0.0-PLACEHOLDER');\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Defines a scroll position manager. Implemented by `BrowserViewportScroller`.\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var ViewportScroller = /** @class */ (function () {\r\n        function ViewportScroller() {\r\n        }\r\n        return ViewportScroller;\r\n    }());\r\n    // De-sugared tree-shakable injection\r\n    // See #23917\r\n    /** @nocollapse */\r\n    /** @nocollapse */ ViewportScroller.ngInjectableDef = defineInjectable({ providedIn: 'root', factory: function () { return new BrowserViewportScroller(inject(DOCUMENT), window); } });\r\n    /**\r\n     * Manages the scroll position for a browser window.\r\n     */\r\n    var BrowserViewportScroller = /** @class */ (function () {\r\n        /**\r\n         * @param {?} document\r\n         * @param {?} window\r\n         */\r\n        function BrowserViewportScroller(document, window) {\r\n            this.document = document;\r\n            this.window = window;\r\n            this.offset = function () { return [0, 0]; };\r\n        }\r\n        /**\r\n         * Configures the top offset used when scrolling to an anchor.\r\n         * @param {?} offset A position in screen coordinates (a tuple with x and y values)\r\n         * or a function that returns the top offset position.\r\n         *\r\n         * @return {?}\r\n         */\r\n        BrowserViewportScroller.prototype.setOffset = function (offset) {\r\n            if (Array.isArray(offset)) {\r\n                this.offset = function () { return offset; };\r\n            }\r\n            else {\r\n                this.offset = offset;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the current scroll position.\r\n         * @return {?} The position in screen coordinates.\r\n         */\r\n        BrowserViewportScroller.prototype.getScrollPosition = function () {\r\n            if (this.supportScrollRestoration()) {\r\n                return [this.window.scrollX, this.window.scrollY];\r\n            }\r\n            else {\r\n                return [0, 0];\r\n            }\r\n        };\r\n        /**\r\n         * Sets the scroll position.\r\n         * @param {?} position The new position in screen coordinates.\r\n         * @return {?}\r\n         */\r\n        BrowserViewportScroller.prototype.scrollToPosition = function (position) {\r\n            if (this.supportScrollRestoration()) {\r\n                this.window.scrollTo(position[0], position[1]);\r\n            }\r\n        };\r\n        /**\r\n         * Scrolls to an anchor element.\r\n         * @param {?} anchor The ID of the anchor element.\r\n         * @return {?}\r\n         */\r\n        BrowserViewportScroller.prototype.scrollToAnchor = function (anchor) {\r\n            if (this.supportScrollRestoration()) {\r\n                /** @type {?} */\r\n                var elSelectedById = this.document.querySelector(\"#\" + anchor);\r\n                if (elSelectedById) {\r\n                    this.scrollToElement(elSelectedById);\r\n                    return;\r\n                }\r\n                /** @type {?} */\r\n                var elSelectedByName = this.document.querySelector(\"[name='\" + anchor + \"']\");\r\n                if (elSelectedByName) {\r\n                    this.scrollToElement(elSelectedByName);\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Disables automatic scroll restoration provided by the browser.\r\n         * @param {?} scrollRestoration\r\n         * @return {?}\r\n         */\r\n        BrowserViewportScroller.prototype.setHistoryScrollRestoration = function (scrollRestoration) {\r\n            if (this.supportScrollRestoration()) {\r\n                /** @type {?} */\r\n                var history_1 = this.window.history;\r\n                if (history_1 && history_1.scrollRestoration) {\r\n                    history_1.scrollRestoration = scrollRestoration;\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserViewportScroller.prototype.scrollToElement = function (el) {\r\n            /** @type {?} */\r\n            var rect = el.getBoundingClientRect();\r\n            /** @type {?} */\r\n            var left = rect.left + this.window.pageXOffset;\r\n            /** @type {?} */\r\n            var top = rect.top + this.window.pageYOffset;\r\n            /** @type {?} */\r\n            var offset = this.offset();\r\n            this.window.scrollTo(left - offset[0], top - offset[1]);\r\n        };\r\n        /**\r\n         * We only support scroll restoration when we can get a hold of window.\r\n         * This means that we do not support this behavior when running in a web worker.\r\n         *\r\n         * Lifting this restriction right now would require more changes in the dom adapter.\r\n         * Since webworkers aren't widely used, we will lift it once RouterScroller is\r\n         * battle-tested.\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        BrowserViewportScroller.prototype.supportScrollRestoration = function () {\r\n            try {\r\n                return !!this.window && !!this.window.scrollTo;\r\n            }\r\n            catch (_a) {\r\n                return false;\r\n            }\r\n        };\r\n        return BrowserViewportScroller;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /** @type {?} */\r\n    var _DOM = ((null));\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function getDOM() {\r\n        return _DOM;\r\n    }\r\n    /**\r\n     * @param {?} adapter\r\n     * @return {?}\r\n     */\r\n    function setRootDomAdapter(adapter) {\r\n        if (!_DOM) {\r\n            _DOM = adapter;\r\n        }\r\n    }\r\n    /* tslint:disable:requireParameterType */\r\n    /**\r\n     * Provides DOM operations in an environment-agnostic way.\r\n     *\r\n     * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\r\n     * can introduce XSS risks.\r\n     * @abstract\r\n     */\r\n    var DomAdapter = /** @class */ (function () {\r\n        function DomAdapter() {\r\n            this.resourceLoaderType = ((null));\r\n        }\r\n        Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\r\n            /**\r\n             * Maps attribute names to their corresponding property names for cases\r\n             * where attribute name doesn't match property name.\r\n             * @return {?}\r\n             */\r\n            get: function () { return this._attrToPropMap; },\r\n            /**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            set: function (value) { this._attrToPropMap = value; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return DomAdapter;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Provides DOM operations in any browser environment.\r\n     *\r\n     * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\r\n     * can introduce XSS risks.\r\n     * @abstract\r\n     */\r\n    var GenericBrowserDomAdapter = /** @class */ (function (_super) {\r\n        __extends(GenericBrowserDomAdapter, _super);\r\n        function GenericBrowserDomAdapter() {\r\n            var _this = _super.call(this) || this;\r\n            _this._animationPrefix = null;\r\n            _this._transitionEnd = null;\r\n            try {\r\n                /** @type {?} */\r\n                var element_1 = _this.createElement('div', document);\r\n                if (_this.getStyle(element_1, 'animationName') != null) {\r\n                    _this._animationPrefix = '';\r\n                }\r\n                else {\r\n                    /** @type {?} */\r\n                    var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\r\n                    for (var i = 0; i < domPrefixes.length; i++) {\r\n                        if (_this.getStyle(element_1, domPrefixes[i] + 'AnimationName') != null) {\r\n                            _this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                /** @type {?} */\r\n                var transEndEventNames_1 = {\r\n                    WebkitTransition: 'webkitTransitionEnd',\r\n                    MozTransition: 'transitionend',\r\n                    OTransition: 'oTransitionEnd otransitionend',\r\n                    transition: 'transitionend'\r\n                };\r\n                Object.keys(transEndEventNames_1).forEach(function (key) {\r\n                    if (_this.getStyle(element_1, key) != null) {\r\n                        _this._transitionEnd = transEndEventNames_1[key];\r\n                    }\r\n                });\r\n            }\r\n            catch (_a) {\r\n                _this._animationPrefix = null;\r\n                _this._transitionEnd = null;\r\n            }\r\n            return _this;\r\n        }\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return (((el))).getDistributedNodes(); };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} baseUrl\r\n         * @param {?} href\r\n         * @return {?}\r\n         */\r\n        GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\r\n            el.href = href == null ? baseUrl : baseUrl + '/../' + href;\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\r\n            return typeof (((document.body))).createShadowRoot === 'function';\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () { return this._animationPrefix ? this._animationPrefix : ''; };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return this._transitionEnd ? this._transitionEnd : ''; };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\r\n            return this._animationPrefix != null && this._transitionEnd != null;\r\n        };\r\n        return GenericBrowserDomAdapter;\r\n    }(DomAdapter));\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var _attrToPropMap = {\r\n        'class': 'className',\r\n        'innerHtml': 'innerHTML',\r\n        'readonly': 'readOnly',\r\n        'tabindex': 'tabIndex',\r\n    };\r\n    /** @type {?} */\r\n    var DOM_KEY_LOCATION_NUMPAD = 3;\r\n    // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\r\n    /** @type {?} */\r\n    var _keyMap = {\r\n        // The following values are here for cross-browser compatibility and to match the W3C standard\r\n        // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\r\n        '\\b': 'Backspace',\r\n        '\\t': 'Tab',\r\n        '\\x7F': 'Delete',\r\n        '\\x1B': 'Escape',\r\n        'Del': 'Delete',\r\n        'Esc': 'Escape',\r\n        'Left': 'ArrowLeft',\r\n        'Right': 'ArrowRight',\r\n        'Up': 'ArrowUp',\r\n        'Down': 'ArrowDown',\r\n        'Menu': 'ContextMenu',\r\n        'Scroll': 'ScrollLock',\r\n        'Win': 'OS'\r\n    };\r\n    // There is a bug in Chrome for numeric keypad keys:\r\n    // https://code.google.com/p/chromium/issues/detail?id=155654\r\n    // 1, 2, 3 ... are reported as A, B, C ...\r\n    /** @type {?} */\r\n    var _chromeNumKeyPadMap = {\r\n        'A': '1',\r\n        'B': '2',\r\n        'C': '3',\r\n        'D': '4',\r\n        'E': '5',\r\n        'F': '6',\r\n        'G': '7',\r\n        'H': '8',\r\n        'I': '9',\r\n        'J': '*',\r\n        'K': '+',\r\n        'M': '-',\r\n        'N': '.',\r\n        'O': '/',\r\n        '\\x60': '0',\r\n        '\\x90': 'NumLock'\r\n    };\r\n    /** @type {?} */\r\n    var nodeContains;\r\n    if (_global['Node']) {\r\n        nodeContains = _global['Node'].prototype.contains || function (node) {\r\n            return !!(this.compareDocumentPosition(node) & 16);\r\n        };\r\n    }\r\n    /**\r\n     * A `DomAdapter` powered by full browser DOM APIs.\r\n     *\r\n     * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\r\n     * can introduce XSS risks.\r\n     */\r\n    /* tslint:disable:requireParameterType no-console */\r\n    var BrowserDomAdapter = /** @class */ (function (_super) {\r\n        __extends(BrowserDomAdapter, _super);\r\n        function BrowserDomAdapter() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        /**\r\n         * @param {?} templateHtml\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error('parse not implemented'); };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.makeCurrent = function () { setRootDomAdapter(new BrowserDomAdapter()); };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.hasProperty = function (element$$1, name) { return name in element$$1; };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} name\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.setProperty = function (el, name, value) { (((el)))[name] = value; };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getProperty = function (el, name) { return (((el)))[name]; };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} methodName\r\n         * @param {?} args\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.invoke = function (el, methodName, args) { (((el)))[methodName].apply((((el))), args); };\r\n        // TODO(tbosch): move this into a separate environment class once we have it\r\n        /**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.logError = function (error) {\r\n            if (window.console) {\r\n                if (console.error) {\r\n                    console.error(error);\r\n                }\r\n                else {\r\n                    console.log(error);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.log = function (error) {\r\n            if (window.console) {\r\n                window.console.log && window.console.log(error);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.logGroup = function (error) {\r\n            if (window.console) {\r\n                window.console.group && window.console.group(error);\r\n            }\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.logGroupEnd = function () {\r\n            if (window.console) {\r\n                window.console.groupEnd && window.console.groupEnd();\r\n            }\r\n        };\r\n        Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return _attrToPropMap; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {?} nodeA\r\n         * @param {?} nodeB\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.contains = function (nodeA, nodeB) { return nodeContains.call(nodeA, nodeB); };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} selector\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.querySelector = function (el, selector) { return el.querySelector(selector); };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} selector\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} evt\r\n         * @param {?} listener\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.on = function (el, evt, listener$$1) { el.addEventListener(evt, listener$$1, false); };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} evt\r\n         * @param {?} listener\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener$$1) {\r\n            el.addEventListener(evt, listener$$1, false);\r\n            // Needed to follow Dart's subscription semantic, until fix of\r\n            // https://code.google.com/p/dart/issues/detail?id=17406\r\n            return function () { el.removeEventListener(evt, listener$$1, false); };\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\r\n        /**\r\n         * @param {?} eventType\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\r\n            /** @type {?} */\r\n            var evt = this.getDefaultDocument().createEvent('MouseEvent');\r\n            evt.initEvent(eventType, true, true);\r\n            return evt;\r\n        };\r\n        /**\r\n         * @param {?} eventType\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.createEvent = function (eventType) {\r\n            /** @type {?} */\r\n            var evt = this.getDefaultDocument().createEvent('Event');\r\n            evt.initEvent(eventType, true, true);\r\n            return evt;\r\n        };\r\n        /**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.preventDefault = function (evt) {\r\n            evt.preventDefault();\r\n            evt.returnValue = false;\r\n        };\r\n        /**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.isPrevented = function (evt) {\r\n            return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getTemplateContent = function (el) {\r\n            return 'content' in el && this.isTemplateElement(el) ? (((el))).content : null;\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.type = function (node) { return node.type; };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.content = function (node) {\r\n            if (this.hasProperty(node, 'content')) {\r\n                return (((node))).content;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.childNodesAsList = function (el) {\r\n            /** @type {?} */\r\n            var childNodes = el.childNodes;\r\n            /** @type {?} */\r\n            var res = new Array(childNodes.length);\r\n            for (var i = 0; i < childNodes.length; i++) {\r\n                res[i] = childNodes[i];\r\n            }\r\n            return res;\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.clearNodes = function (el) {\r\n            while (el.firstChild) {\r\n                el.removeChild(el.firstChild);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} newChild\r\n         * @param {?} oldChild\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.remove = function (node) {\r\n            if (node.parentNode) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n            return node;\r\n        };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} ref\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.insertBefore = function (parent, ref, node) { parent.insertBefore(node, ref); };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} ref\r\n         * @param {?} nodes\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.insertAllBefore = function (parent, ref, nodes) {\r\n            nodes.forEach(function (n) { return parent.insertBefore(n, ref); });\r\n        };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} ref\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.insertAfter = function (parent, ref, node) { parent.insertBefore(node, ref.nextSibling); };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\r\n        /**\r\n         * @param {?} text\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.createComment = function (text$$1) { return this.getDefaultDocument().createComment(text$$1); };\r\n        /**\r\n         * @param {?} html\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.createTemplate = function (html) {\r\n            /** @type {?} */\r\n            var t = this.getDefaultDocument().createElement('template');\r\n            t.innerHTML = html;\r\n            return t;\r\n        };\r\n        /**\r\n         * @param {?} tagName\r\n         * @param {?=} doc\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\r\n            doc = doc || this.getDefaultDocument();\r\n            return doc.createElement(tagName);\r\n        };\r\n        /**\r\n         * @param {?} ns\r\n         * @param {?} tagName\r\n         * @param {?=} doc\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\r\n            doc = doc || this.getDefaultDocument();\r\n            return doc.createElementNS(ns, tagName);\r\n        };\r\n        /**\r\n         * @param {?} text\r\n         * @param {?=} doc\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.createTextNode = function (text$$1, doc) {\r\n            doc = doc || this.getDefaultDocument();\r\n            return doc.createTextNode(text$$1);\r\n        };\r\n        /**\r\n         * @param {?} attrName\r\n         * @param {?} attrValue\r\n         * @param {?=} doc\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\r\n            doc = doc || this.getDefaultDocument();\r\n            /** @type {?} */\r\n            var el = ((doc.createElement('SCRIPT')));\r\n            el.setAttribute(attrName, attrValue);\r\n            return el;\r\n        };\r\n        /**\r\n         * @param {?} css\r\n         * @param {?=} doc\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\r\n            doc = doc || this.getDefaultDocument();\r\n            /** @type {?} */\r\n            var style = ((doc.createElement('style')));\r\n            this.appendChild(style, this.createTextNode(css, doc));\r\n            return style;\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.createShadowRoot = function (el) { return (((el))).createShadowRoot(); };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getShadowRoot = function (el) { return (((el))).shadowRoot; };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getHost = function (el) { return (((el))).host; };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getElementsByClassName = function (element$$1, name) {\r\n            return element$$1.getElementsByClassName(name);\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getElementsByTagName = function (element$$1, name) {\r\n            return element$$1.getElementsByTagName(name);\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.classList = function (element$$1) { return Array.prototype.slice.call(element$$1.classList, 0); };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} className\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.addClass = function (element$$1, className) { element$$1.classList.add(className); };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} className\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.removeClass = function (element$$1, className) { element$$1.classList.remove(className); };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} className\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.hasClass = function (element$$1, className) {\r\n            return element$$1.classList.contains(className);\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} styleName\r\n         * @param {?} styleValue\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.setStyle = function (element$$1, styleName, styleValue) {\r\n            element$$1.style[styleName] = styleValue;\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} stylename\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.removeStyle = function (element$$1, stylename) {\r\n            // IE requires '' instead of null\r\n            // see https://github.com/angular/angular/issues/7916\r\n            element$$1.style[stylename] = '';\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} stylename\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getStyle = function (element$$1, stylename) { return element$$1.style[stylename]; };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} styleName\r\n         * @param {?=} styleValue\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.hasStyle = function (element$$1, styleName, styleValue) {\r\n            /** @type {?} */\r\n            var value = this.getStyle(element$$1, styleName) || '';\r\n            return styleValue ? value == styleValue : value.length > 0;\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.tagName = function (element$$1) { return element$$1.tagName; };\r\n        /**\r\n         * @param {?} element\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.attributeMap = function (element$$1) {\r\n            /** @type {?} */\r\n            var res = new Map();\r\n            /** @type {?} */\r\n            var elAttrs = element$$1.attributes;\r\n            for (var i = 0; i < elAttrs.length; i++) {\r\n                /** @type {?} */\r\n                var attrib = elAttrs.item(i);\r\n                res.set(attrib.name, attrib.value);\r\n            }\r\n            return res;\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} attribute\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.hasAttribute = function (element$$1, attribute) {\r\n            return element$$1.hasAttribute(attribute);\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} ns\r\n         * @param {?} attribute\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.hasAttributeNS = function (element$$1, ns, attribute) {\r\n            return element$$1.hasAttributeNS(ns, attribute);\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} attribute\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getAttribute = function (element$$1, attribute) {\r\n            return element$$1.getAttribute(attribute);\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} ns\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getAttributeNS = function (element$$1, ns, name) {\r\n            return element$$1.getAttributeNS(ns, name);\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} name\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.setAttribute = function (element$$1, name, value) { element$$1.setAttribute(name, value); };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} ns\r\n         * @param {?} name\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.setAttributeNS = function (element$$1, ns, name, value) {\r\n            element$$1.setAttributeNS(ns, name, value);\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} attribute\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.removeAttribute = function (element$$1, attribute) { element$$1.removeAttribute(attribute); };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} ns\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.removeAttributeNS = function (element$$1, ns, name) {\r\n            element$$1.removeAttributeNS(ns, name);\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.createHtmlDocument = function () {\r\n            return document.implementation.createHTMLDocument('fakeTitle');\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getDefaultDocument = function () { return document; };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\r\n            try {\r\n                return el.getBoundingClientRect();\r\n            }\r\n            catch (_a) {\r\n                return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} doc\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getTitle = function (doc) { return doc.title; };\r\n        /**\r\n         * @param {?} doc\r\n         * @param {?} newTitle\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.setTitle = function (doc, newTitle) { doc.title = newTitle || ''; };\r\n        /**\r\n         * @param {?} n\r\n         * @param {?} selector\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\r\n            if (this.isElementNode(n)) {\r\n                return n.matches && n.matches(selector) ||\r\n                    n.msMatchesSelector && n.msMatchesSelector(selector) ||\r\n                    n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.isTemplateElement = function (el) {\r\n            return this.isElementNode(el) && el.nodeName === 'TEMPLATE';\r\n        };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.hasShadowRoot = function (node) {\r\n            return node.shadowRoot != null && node instanceof HTMLElement;\r\n        };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.importIntoDoc = function (node) { return document.importNode(this.templateAwareRoot(node), true); };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\r\n        /**\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getHref = function (el) { return ((el.getAttribute('href'))); };\r\n        /**\r\n         * @param {?} event\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getEventKey = function (event) {\r\n            /** @type {?} */\r\n            var key = event.key;\r\n            if (key == null) {\r\n                key = event.keyIdentifier;\r\n                // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\r\n                // Safari cf\r\n                // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\r\n                if (key == null) {\r\n                    return 'Unidentified';\r\n                }\r\n                if (key.startsWith('U+')) {\r\n                    key = String.fromCharCode(parseInt(key.substring(2), 16));\r\n                    if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\r\n                        // There is a bug in Chrome for numeric keypad keys:\r\n                        // https://code.google.com/p/chromium/issues/detail?id=155654\r\n                        // 1, 2, 3 ... are reported as A, B, C ...\r\n                        key = (((_chromeNumKeyPadMap)))[key];\r\n                    }\r\n                }\r\n            }\r\n            return _keyMap[key] || key;\r\n        };\r\n        /**\r\n         * @param {?} doc\r\n         * @param {?} target\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getGlobalEventTarget = function (doc, target) {\r\n            if (target === 'window') {\r\n                return window;\r\n            }\r\n            if (target === 'document') {\r\n                return doc;\r\n            }\r\n            if (target === 'body') {\r\n                return doc.body;\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\r\n        /**\r\n         * @param {?} doc\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getBaseHref = function (doc) {\r\n            /** @type {?} */\r\n            var href = getBaseElementHref();\r\n            return href == null ? null : relativePath(href);\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} name\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.setData = function (element$$1, name, value) {\r\n            this.setAttribute(element$$1, 'data-' + name, value);\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getData = function (element$$1, name) {\r\n            return this.getAttribute(element$$1, 'data-' + name);\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getComputedStyle = function (element$$1) { return getComputedStyle(element$$1); };\r\n        // TODO(tbosch): move this into a separate environment class once we have it\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.supportsWebAnimation = function () {\r\n            return typeof (((Element))).prototype['animate'] === 'function';\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.performanceNow = function () {\r\n            // performance.now() is not available in all browsers, see\r\n            // http://caniuse.com/#search=performance.now\r\n            return window.performance && window.performance.now ? window.performance.now() :\r\n                new Date().getTime();\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.supportsCookies = function () { return true; };\r\n        /**\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.getCookie = function (name) { return parseCookieValue(document.cookie, name); };\r\n        /**\r\n         * @param {?} name\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        BrowserDomAdapter.prototype.setCookie = function (name, value) {\r\n            // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\r\n            // not clear other cookies.\r\n            document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\r\n        };\r\n        return BrowserDomAdapter;\r\n    }(GenericBrowserDomAdapter));\r\n    /** @type {?} */\r\n    var baseElement = null;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function getBaseElementHref() {\r\n        if (!baseElement) {\r\n            baseElement = ((document.querySelector('base')));\r\n            if (!baseElement) {\r\n                return null;\r\n            }\r\n        }\r\n        return baseElement.getAttribute('href');\r\n    }\r\n    // based on urlUtils.js in AngularJS 1\r\n    /** @type {?} */\r\n    var urlParsingNode;\r\n    /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    function relativePath(url) {\r\n        if (!urlParsingNode) {\r\n            urlParsingNode = document.createElement('a');\r\n        }\r\n        urlParsingNode.setAttribute('href', url);\r\n        return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * A DI Token representing the main rendering context. In a browser this is the DOM Document.\r\n     *\r\n     * Note: Document might not be available in the Application Context when Application and Rendering\r\n     * Contexts are not the same (e.g. when running the application into a Web Worker).\r\n     *\r\n     * @deprecated import from `\\@angular/common` instead.\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var DOCUMENT$1 = DOCUMENT;\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function supportsState() {\r\n        return !!window.history.pushState;\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\r\n     * This class should not be used directly by an application developer. Instead, use\r\n     * {\\@link Location}.\r\n     */\r\n    var BrowserPlatformLocation = /** @class */ (function (_super) {\r\n        __extends(BrowserPlatformLocation, _super);\r\n        /**\r\n         * @param {?} _doc\r\n         */\r\n        function BrowserPlatformLocation(_doc) {\r\n            var _this = _super.call(this) || this;\r\n            _this._doc = _doc;\r\n            _this._init();\r\n            return _this;\r\n        }\r\n        // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\r\n        /**\r\n         * \\@internal\r\n         * @return {?}\r\n         */\r\n        BrowserPlatformLocation.prototype._init = function () {\r\n            (((this))).location = getDOM().getLocation();\r\n            this._history = getDOM().getHistory();\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () { return ((getDOM().getBaseHref(this._doc))); };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        BrowserPlatformLocation.prototype.onPopState = function (fn) {\r\n            getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\r\n        };\r\n        /**\r\n         * @param {?} fn\r\n         * @return {?}\r\n         */\r\n        BrowserPlatformLocation.prototype.onHashChange = function (fn) {\r\n            getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\r\n        };\r\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"pathname\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this.location.pathname; },\r\n            /**\r\n             * @param {?} newPath\r\n             * @return {?}\r\n             */\r\n            set: function (newPath) { this.location.pathname = newPath; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"search\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this.location.search; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"hash\", {\r\n            /**\r\n             * @return {?}\r\n             */\r\n            get: function () { return this.location.hash; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {?} state\r\n         * @param {?} title\r\n         * @param {?} url\r\n         * @return {?}\r\n         */\r\n        BrowserPlatformLocation.prototype.pushState = function (state, title, url) {\r\n            if (supportsState()) {\r\n                this._history.pushState(state, title, url);\r\n            }\r\n            else {\r\n                this.location.hash = url;\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} state\r\n         * @param {?} title\r\n         * @param {?} url\r\n         * @return {?}\r\n         */\r\n        BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {\r\n            if (supportsState()) {\r\n                this._history.replaceState(state, title, url);\r\n            }\r\n            else {\r\n                this.location.hash = url;\r\n            }\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserPlatformLocation.prototype.forward = function () { this._history.forward(); };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserPlatformLocation.prototype.back = function () { this._history.back(); };\r\n        return BrowserPlatformLocation;\r\n    }(PlatformLocation));\r\n    BrowserPlatformLocation.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    BrowserPlatformLocation.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] }\r\n    ]; };\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * An id that identifies a particular application being bootstrapped, that should\r\n     * match across the client/server boundary.\r\n     * @type {?}\r\n     */\r\n    var TRANSITION_ID = new InjectionToken('TRANSITION_ID');\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    var BrowserGetTestability = /** @class */ (function () {\r\n        function BrowserGetTestability() {\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BrowserGetTestability.init = function () { setTestabilityGetter(new BrowserGetTestability()); };\r\n        /**\r\n         * @param {?} registry\r\n         * @return {?}\r\n         */\r\n        BrowserGetTestability.prototype.addToWindow = function (registry) {\r\n            _global['getAngularTestability'] = function (elem, findInAncestors) {\r\n                if (findInAncestors === void 0) { findInAncestors = true; }\r\n                /** @type {?} */\r\n                var testability = registry.findTestabilityInTree(elem, findInAncestors);\r\n                if (testability == null) {\r\n                    throw new Error('Could not find testability for element.');\r\n                }\r\n                return testability;\r\n            };\r\n            _global['getAllAngularTestabilities'] = function () { return registry.getAllTestabilities(); };\r\n            _global['getAllAngularRootElements'] = function () { return registry.getAllRootElements(); };\r\n            /** @type {?} */\r\n            var whenAllStable = function (callback /** TODO #9100 */) {\r\n                /** @type {?} */\r\n                var testabilities = _global['getAllAngularTestabilities']();\r\n                /** @type {?} */\r\n                var count = testabilities.length;\r\n                /** @type {?} */\r\n                var didWork = false;\r\n                /** @type {?} */\r\n                var decrement = function (didWork_ /** TODO #9100 */) {\r\n                    didWork = didWork || didWork_;\r\n                    count--;\r\n                    if (count == 0) {\r\n                        callback(didWork);\r\n                    }\r\n                };\r\n                testabilities.forEach(function (testability /** TODO #9100 */) {\r\n                    testability.whenStable(decrement);\r\n                });\r\n            };\r\n            if (!_global['frameworkStabilizers']) {\r\n                _global['frameworkStabilizers'] = [];\r\n            }\r\n            _global['frameworkStabilizers'].push(whenAllStable);\r\n        };\r\n        /**\r\n         * @param {?} registry\r\n         * @param {?} elem\r\n         * @param {?} findInAncestors\r\n         * @return {?}\r\n         */\r\n        BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\r\n            if (elem == null) {\r\n                return null;\r\n            }\r\n            /** @type {?} */\r\n            var t = registry.getTestability(elem);\r\n            if (t != null) {\r\n                return t;\r\n            }\r\n            else if (!findInAncestors) {\r\n                return null;\r\n            }\r\n            if (getDOM().isShadowRoot(elem)) {\r\n                return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\r\n            }\r\n            return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\r\n        };\r\n        return BrowserGetTestability;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\r\n     * `name` is `'probe'`.\r\n     * @param {?} name Name under which it will be exported. Keep in mind this will be a property of the\r\n     * global `ng` object.\r\n     * @param {?} value The value to export.\r\n     * @return {?}\r\n     */\r\n    function exportNgVar(name, value) {\r\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\r\n            // Note: we can't export `ng` when using closure enhanced optimization as:\r\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\r\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\r\n            //   for typings for angularJS (via `goog.provide('ng....')`).\r\n            /** @type {?} */\r\n            var ng = _global['ng'] = (((_global['ng']))) || {};\r\n            ng[name] = value;\r\n        }\r\n    }\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var CORE_TOKENS = {\r\n        'ApplicationRef': ApplicationRef,\r\n        'NgZone': NgZone,\r\n    };\r\n    /** @type {?} */\r\n    var INSPECT_GLOBAL_NAME = 'probe';\r\n    /** @type {?} */\r\n    var CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\r\n    /**\r\n     * Returns a {\\@link DebugElement} for the given native DOM element, or\r\n     * null if the given native element does not have an Angular view associated\r\n     * with it.\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    function inspectNativeElement(element$$1) {\r\n        return getDebugNode(element$$1);\r\n    }\r\n    /**\r\n     * @param {?} coreTokens\r\n     * @return {?}\r\n     */\r\n    function _createNgProbe(coreTokens) {\r\n        exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\r\n        exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign({}, CORE_TOKENS, _ngProbeTokensToMap(coreTokens || [])));\r\n        return function () { return inspectNativeElement; };\r\n    }\r\n    /**\r\n     * @param {?} tokens\r\n     * @return {?}\r\n     */\r\n    function _ngProbeTokensToMap(tokens) {\r\n        return tokens.reduce(function (prev, t) { return (prev[t.name] = t.token, prev); }, {});\r\n    }\r\n    /**\r\n     * Providers which support debugging Angular applications (e.g. via `ng.probe`).\r\n     * @type {?}\r\n     */\r\n    var ELEMENT_PROBE_PROVIDERS = [\r\n        {\r\n            provide: APP_INITIALIZER,\r\n            useFactory: _createNgProbe,\r\n            deps: [\r\n                [NgProbeToken, new Optional()],\r\n            ],\r\n            multi: true,\r\n        },\r\n    ];\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * The injection token for the event-manager plug-in service.\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\r\n    /**\r\n     * An injectable service that provides event management for Angular\r\n     * through a browser plug-in.\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var EventManager = /** @class */ (function () {\r\n        /**\r\n         * Initializes an instance of the event-manager service.\r\n         * @param {?} plugins\r\n         * @param {?} _zone\r\n         */\r\n        function EventManager(plugins, _zone) {\r\n            var _this = this;\r\n            this._zone = _zone;\r\n            this._eventNameToPlugin = new Map();\r\n            plugins.forEach(function (p) { return p.manager = _this; });\r\n            this._plugins = plugins.slice().reverse();\r\n        }\r\n        /**\r\n         * Registers a handler for a specific element and event.\r\n         *\r\n         * @param {?} element The HTML element to receive event notifications.\r\n         * @param {?} eventName The name of the event to listen for.\r\n         * @param {?} handler A function to call when the notification occurs. Receives the\r\n         * event object as an argument.\r\n         * @return {?} A callback function that can be used to remove the handler.\r\n         */\r\n        EventManager.prototype.addEventListener = function (element$$1, eventName, handler) {\r\n            /** @type {?} */\r\n            var plugin = this._findPluginFor(eventName);\r\n            return plugin.addEventListener(element$$1, eventName, handler);\r\n        };\r\n        /**\r\n         * Registers a global handler for an event in a target view.\r\n         *\r\n         * @param {?} target A target for global event notifications. One of \"window\", \"document\", or \"body\".\r\n         * @param {?} eventName The name of the event to listen for.\r\n         * @param {?} handler A function to call when the notification occurs. Receives the\r\n         * event object as an argument.\r\n         * @return {?} A callback function that can be used to remove the handler.\r\n         */\r\n        EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\r\n            /** @type {?} */\r\n            var plugin = this._findPluginFor(eventName);\r\n            return plugin.addGlobalEventListener(target, eventName, handler);\r\n        };\r\n        /**\r\n         * Retrieves the compilation zone in which event listeners are registered.\r\n         * @return {?}\r\n         */\r\n        EventManager.prototype.getZone = function () { return this._zone; };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} eventName\r\n         * @return {?}\r\n         */\r\n        EventManager.prototype._findPluginFor = function (eventName) {\r\n            /** @type {?} */\r\n            var plugin = this._eventNameToPlugin.get(eventName);\r\n            if (plugin) {\r\n                return plugin;\r\n            }\r\n            /** @type {?} */\r\n            var plugins = this._plugins;\r\n            for (var i = 0; i < plugins.length; i++) {\r\n                /** @type {?} */\r\n                var plugin_1 = plugins[i];\r\n                if (plugin_1.supports(eventName)) {\r\n                    this._eventNameToPlugin.set(eventName, plugin_1);\r\n                    return plugin_1;\r\n                }\r\n            }\r\n            throw new Error(\"No event manager plugin found for event \" + eventName);\r\n        };\r\n        return EventManager;\r\n    }());\r\n    EventManager.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    EventManager.ctorParameters = function () { return [\r\n        { type: Array, decorators: [{ type: Inject, args: [EVENT_MANAGER_PLUGINS,] }] },\r\n        { type: NgZone }\r\n    ]; };\r\n    /**\r\n     * @abstract\r\n     */\r\n    var EventManagerPlugin = /** @class */ (function () {\r\n        /**\r\n         * @param {?} _doc\r\n         */\r\n        function EventManagerPlugin(_doc) {\r\n            this._doc = _doc;\r\n        }\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} eventName\r\n         * @param {?} handler\r\n         * @return {?}\r\n         */\r\n        EventManagerPlugin.prototype.addGlobalEventListener = function (element$$1, eventName, handler) {\r\n            /** @type {?} */\r\n            var target = getDOM().getGlobalEventTarget(this._doc, element$$1);\r\n            if (!target) {\r\n                throw new Error(\"Unsupported event target \" + target + \" for event \" + eventName);\r\n            }\r\n            return this.addEventListener(target, eventName, handler);\r\n        };\r\n        return EventManagerPlugin;\r\n    }());\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    var SharedStylesHost = /** @class */ (function () {\r\n        function SharedStylesHost() {\r\n            /**\r\n             * \\@internal\r\n             */\r\n            this._stylesSet = new Set();\r\n        }\r\n        /**\r\n         * @param {?} styles\r\n         * @return {?}\r\n         */\r\n        SharedStylesHost.prototype.addStyles = function (styles) {\r\n            var _this = this;\r\n            /** @type {?} */\r\n            var additions = new Set();\r\n            styles.forEach(function (style) {\r\n                if (!_this._stylesSet.has(style)) {\r\n                    _this._stylesSet.add(style);\r\n                    additions.add(style);\r\n                }\r\n            });\r\n            this.onStylesAdded(additions);\r\n        };\r\n        /**\r\n         * @param {?} additions\r\n         * @return {?}\r\n         */\r\n        SharedStylesHost.prototype.onStylesAdded = function (additions) { };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        SharedStylesHost.prototype.getAllStyles = function () { return Array.from(this._stylesSet); };\r\n        return SharedStylesHost;\r\n    }());\r\n    SharedStylesHost.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    var DomSharedStylesHost = /** @class */ (function (_super) {\r\n        __extends(DomSharedStylesHost, _super);\r\n        /**\r\n         * @param {?} _doc\r\n         */\r\n        function DomSharedStylesHost(_doc) {\r\n            var _this = _super.call(this) || this;\r\n            _this._doc = _doc;\r\n            _this._hostNodes = new Set();\r\n            _this._styleNodes = new Set();\r\n            _this._hostNodes.add(_doc.head);\r\n            return _this;\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} styles\r\n         * @param {?} host\r\n         * @return {?}\r\n         */\r\n        DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\r\n            var _this = this;\r\n            styles.forEach(function (style) {\r\n                /** @type {?} */\r\n                var styleEl = _this._doc.createElement('style');\r\n                styleEl.textContent = style;\r\n                _this._styleNodes.add(host.appendChild(styleEl));\r\n            });\r\n        };\r\n        /**\r\n         * @param {?} hostNode\r\n         * @return {?}\r\n         */\r\n        DomSharedStylesHost.prototype.addHost = function (hostNode) {\r\n            this._addStylesToHost(this._stylesSet, hostNode);\r\n            this._hostNodes.add(hostNode);\r\n        };\r\n        /**\r\n         * @param {?} hostNode\r\n         * @return {?}\r\n         */\r\n        DomSharedStylesHost.prototype.removeHost = function (hostNode) { this._hostNodes.delete(hostNode); };\r\n        /**\r\n         * @param {?} additions\r\n         * @return {?}\r\n         */\r\n        DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\r\n            var _this = this;\r\n            this._hostNodes.forEach(function (hostNode) { return _this._addStylesToHost(additions, hostNode); });\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        DomSharedStylesHost.prototype.ngOnDestroy = function () { this._styleNodes.forEach(function (styleNode) { return getDOM().remove(styleNode); }); };\r\n        return DomSharedStylesHost;\r\n    }(SharedStylesHost));\r\n    DomSharedStylesHost.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    DomSharedStylesHost.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] }\r\n    ]; };\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var NAMESPACE_URIS = {\r\n        'svg': 'http://www.w3.org/2000/svg',\r\n        'xhtml': 'http://www.w3.org/1999/xhtml',\r\n        'xlink': 'http://www.w3.org/1999/xlink',\r\n        'xml': 'http://www.w3.org/XML/1998/namespace',\r\n        'xmlns': 'http://www.w3.org/2000/xmlns/',\r\n    };\r\n    /** @type {?} */\r\n    var COMPONENT_REGEX = /%COMP%/g;\r\n    /** @type {?} */\r\n    var COMPONENT_VARIABLE = '%COMP%';\r\n    /** @type {?} */\r\n    var HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\r\n    /** @type {?} */\r\n    var CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\r\n    /**\r\n     * @param {?} componentShortId\r\n     * @return {?}\r\n     */\r\n    function shimContentAttribute(componentShortId) {\r\n        return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\r\n    }\r\n    /**\r\n     * @param {?} componentShortId\r\n     * @return {?}\r\n     */\r\n    function shimHostAttribute(componentShortId) {\r\n        return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\r\n    }\r\n    /**\r\n     * @param {?} compId\r\n     * @param {?} styles\r\n     * @param {?} target\r\n     * @return {?}\r\n     */\r\n    function flattenStyles(compId, styles, target) {\r\n        for (var i = 0; i < styles.length; i++) {\r\n            /** @type {?} */\r\n            var style = styles[i];\r\n            if (Array.isArray(style)) {\r\n                flattenStyles(compId, style, target);\r\n            }\r\n            else {\r\n                style = style.replace(COMPONENT_REGEX, compId);\r\n                target.push(style);\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    /**\r\n     * @param {?} eventHandler\r\n     * @return {?}\r\n     */\r\n    function decoratePreventDefault(eventHandler) {\r\n        return function (event) {\r\n            /** @type {?} */\r\n            var allowDefaultBehavior = eventHandler(event);\r\n            if (allowDefaultBehavior === false) {\r\n                // TODO(tbosch): move preventDefault into event plugins...\r\n                event.preventDefault();\r\n                event.returnValue = false;\r\n            }\r\n        };\r\n    }\r\n    var DomRendererFactory2 = /** @class */ (function () {\r\n        /**\r\n         * @param {?} eventManager\r\n         * @param {?} sharedStylesHost\r\n         */\r\n        function DomRendererFactory2(eventManager, sharedStylesHost) {\r\n            this.eventManager = eventManager;\r\n            this.sharedStylesHost = sharedStylesHost;\r\n            this.rendererByCompId = new Map();\r\n            this.defaultRenderer = new DefaultDomRenderer2(eventManager);\r\n        }\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} type\r\n         * @return {?}\r\n         */\r\n        DomRendererFactory2.prototype.createRenderer = function (element$$1, type) {\r\n            if (!element$$1 || !type) {\r\n                return this.defaultRenderer;\r\n            }\r\n            switch (type.encapsulation) {\r\n                case ViewEncapsulation.Emulated: {\r\n                    /** @type {?} */\r\n                    var renderer = this.rendererByCompId.get(type.id);\r\n                    if (!renderer) {\r\n                        renderer =\r\n                            new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type);\r\n                        this.rendererByCompId.set(type.id, renderer);\r\n                    }\r\n                    (((renderer))).applyToHost(element$$1);\r\n                    return renderer;\r\n                }\r\n                case ViewEncapsulation.Native:\r\n                case ViewEncapsulation.ShadowDom:\r\n                    return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element$$1, type);\r\n                default: {\r\n                    if (!this.rendererByCompId.has(type.id)) {\r\n                        /** @type {?} */\r\n                        var styles = flattenStyles(type.id, type.styles, []);\r\n                        this.sharedStylesHost.addStyles(styles);\r\n                        this.rendererByCompId.set(type.id, this.defaultRenderer);\r\n                    }\r\n                    return this.defaultRenderer;\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        DomRendererFactory2.prototype.begin = function () { };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        DomRendererFactory2.prototype.end = function () { };\r\n        return DomRendererFactory2;\r\n    }());\r\n    DomRendererFactory2.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    DomRendererFactory2.ctorParameters = function () { return [\r\n        { type: EventManager },\r\n        { type: DomSharedStylesHost }\r\n    ]; };\r\n    var DefaultDomRenderer2 = /** @class */ (function () {\r\n        /**\r\n         * @param {?} eventManager\r\n         */\r\n        function DefaultDomRenderer2(eventManager) {\r\n            this.eventManager = eventManager;\r\n            this.data = Object.create(null);\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.destroy = function () { };\r\n        /**\r\n         * @param {?} name\r\n         * @param {?=} namespace\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.createElement = function (name, namespace) {\r\n            if (namespace) {\r\n                return document.createElementNS(NAMESPACE_URIS[namespace], name);\r\n            }\r\n            return document.createElement(name);\r\n        };\r\n        /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.createComment = function (value) { return document.createComment(value); };\r\n        /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.createText = function (value) { return document.createTextNode(value); };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} newChild\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.appendChild = function (parent, newChild) { parent.appendChild(newChild); };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} newChild\r\n         * @param {?} refChild\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\r\n            if (parent) {\r\n                parent.insertBefore(newChild, refChild);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} oldChild\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.removeChild = function (parent, oldChild) {\r\n            if (parent) {\r\n                parent.removeChild(oldChild);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} selectorOrNode\r\n         * @param {?=} preserveContent\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\r\n            /** @type {?} */\r\n            var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\r\n                selectorOrNode;\r\n            if (!el) {\r\n                throw new Error(\"The selector \\\"\" + selectorOrNode + \"\\\" did not match any elements\");\r\n            }\r\n            if (!preserveContent) {\r\n                el.textContent = '';\r\n            }\r\n            return el;\r\n        };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.parentNode = function (node) { return node.parentNode; };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.nextSibling = function (node) { return node.nextSibling; };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} name\r\n         * @param {?} value\r\n         * @param {?=} namespace\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\r\n            if (namespace) {\r\n                name = namespace + \":\" + name;\r\n                /** @type {?} */\r\n                var namespaceUri = NAMESPACE_URIS[namespace];\r\n                if (namespaceUri) {\r\n                    el.setAttributeNS(namespaceUri, name, value);\r\n                }\r\n                else {\r\n                    el.setAttribute(name, value);\r\n                }\r\n            }\r\n            else {\r\n                el.setAttribute(name, value);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} name\r\n         * @param {?=} namespace\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.removeAttribute = function (el, name, namespace) {\r\n            if (namespace) {\r\n                /** @type {?} */\r\n                var namespaceUri = NAMESPACE_URIS[namespace];\r\n                if (namespaceUri) {\r\n                    el.removeAttributeNS(namespaceUri, name);\r\n                }\r\n                else {\r\n                    el.removeAttribute(namespace + \":\" + name);\r\n                }\r\n            }\r\n            else {\r\n                el.removeAttribute(name);\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.addClass = function (el, name) { el.classList.add(name); };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.removeClass = function (el, name) { el.classList.remove(name); };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} style\r\n         * @param {?} value\r\n         * @param {?} flags\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.setStyle = function (el, style, value, flags) {\r\n            if (flags & RendererStyleFlags2.DashCase) {\r\n                el.style.setProperty(style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\r\n            }\r\n            else {\r\n                el.style[style] = value;\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} style\r\n         * @param {?} flags\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.removeStyle = function (el, style, flags) {\r\n            if (flags & RendererStyleFlags2.DashCase) {\r\n                el.style.removeProperty(style);\r\n            }\r\n            else {\r\n                // IE requires '' instead of null\r\n                // see https://github.com/angular/angular/issues/7916\r\n                el.style[style] = '';\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} el\r\n         * @param {?} name\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.setProperty = function (el, name, value) {\r\n            checkNoSyntheticProp(name, 'property');\r\n            el[name] = value;\r\n        };\r\n        /**\r\n         * @param {?} node\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.setValue = function (node, value) { node.nodeValue = value; };\r\n        /**\r\n         * @param {?} target\r\n         * @param {?} event\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        DefaultDomRenderer2.prototype.listen = function (target, event, callback) {\r\n            checkNoSyntheticProp(event, 'listener');\r\n            if (typeof target === 'string') {\r\n                return ((this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback))));\r\n            }\r\n            return ((((this.eventManager.addEventListener(target, event, decoratePreventDefault(callback))))));\r\n        };\r\n        return DefaultDomRenderer2;\r\n    }());\r\n    /** @type {?} */\r\n    var AT_CHARCODE = '@'.charCodeAt(0);\r\n    /**\r\n     * @param {?} name\r\n     * @param {?} nameKind\r\n     * @return {?}\r\n     */\r\n    function checkNoSyntheticProp(name, nameKind) {\r\n        if (name.charCodeAt(0) === AT_CHARCODE) {\r\n            throw new Error(\"Found the synthetic \" + nameKind + \" \" + name + \". Please include either \\\"BrowserAnimationsModule\\\" or \\\"NoopAnimationsModule\\\" in your application.\");\r\n        }\r\n    }\r\n    var EmulatedEncapsulationDomRenderer2 = /** @class */ (function (_super) {\r\n        __extends(EmulatedEncapsulationDomRenderer2, _super);\r\n        /**\r\n         * @param {?} eventManager\r\n         * @param {?} sharedStylesHost\r\n         * @param {?} component\r\n         */\r\n        function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component) {\r\n            var _this = _super.call(this, eventManager) || this;\r\n            _this.component = component;\r\n            /** @type {?} */\r\n            var styles = flattenStyles(component.id, component.styles, []);\r\n            sharedStylesHost.addStyles(styles);\r\n            _this.contentAttr = shimContentAttribute(component.id);\r\n            _this.hostAttr = shimHostAttribute(component.id);\r\n            return _this;\r\n        }\r\n        /**\r\n         * @param {?} element\r\n         * @return {?}\r\n         */\r\n        EmulatedEncapsulationDomRenderer2.prototype.applyToHost = function (element$$1) { _super.prototype.setAttribute.call(this, element$$1, this.hostAttr, ''); };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} name\r\n         * @return {?}\r\n         */\r\n        EmulatedEncapsulationDomRenderer2.prototype.createElement = function (parent, name) {\r\n            /** @type {?} */\r\n            var el = _super.prototype.createElement.call(this, parent, name);\r\n            _super.prototype.setAttribute.call(this, el, this.contentAttr, '');\r\n            return el;\r\n        };\r\n        return EmulatedEncapsulationDomRenderer2;\r\n    }(DefaultDomRenderer2));\r\n    var ShadowDomRenderer = /** @class */ (function (_super) {\r\n        __extends(ShadowDomRenderer, _super);\r\n        /**\r\n         * @param {?} eventManager\r\n         * @param {?} sharedStylesHost\r\n         * @param {?} hostEl\r\n         * @param {?} component\r\n         */\r\n        function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {\r\n            var _this = _super.call(this, eventManager) || this;\r\n            _this.sharedStylesHost = sharedStylesHost;\r\n            _this.hostEl = hostEl;\r\n            _this.component = component;\r\n            if (component.encapsulation === ViewEncapsulation.ShadowDom) {\r\n                _this.shadowRoot = (((hostEl))).attachShadow({ mode: 'open' });\r\n            }\r\n            else {\r\n                _this.shadowRoot = (((hostEl))).createShadowRoot();\r\n            }\r\n            _this.sharedStylesHost.addHost(_this.shadowRoot);\r\n            /** @type {?} */\r\n            var styles = flattenStyles(component.id, component.styles, []);\r\n            for (var i = 0; i < styles.length; i++) {\r\n                /** @type {?} */\r\n                var styleEl = document.createElement('style');\r\n                styleEl.textContent = styles[i];\r\n                _this.shadowRoot.appendChild(styleEl);\r\n            }\r\n            return _this;\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        ShadowDomRenderer.prototype.nodeOrShadowRoot = function (node) { return node === this.hostEl ? this.shadowRoot : node; };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ShadowDomRenderer.prototype.destroy = function () { this.sharedStylesHost.removeHost(this.shadowRoot); };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} newChild\r\n         * @return {?}\r\n         */\r\n        ShadowDomRenderer.prototype.appendChild = function (parent, newChild) {\r\n            return _super.prototype.appendChild.call(this, this.nodeOrShadowRoot(parent), newChild);\r\n        };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} newChild\r\n         * @param {?} refChild\r\n         * @return {?}\r\n         */\r\n        ShadowDomRenderer.prototype.insertBefore = function (parent, newChild, refChild) {\r\n            return _super.prototype.insertBefore.call(this, this.nodeOrShadowRoot(parent), newChild, refChild);\r\n        };\r\n        /**\r\n         * @param {?} parent\r\n         * @param {?} oldChild\r\n         * @return {?}\r\n         */\r\n        ShadowDomRenderer.prototype.removeChild = function (parent, oldChild) {\r\n            return _super.prototype.removeChild.call(this, this.nodeOrShadowRoot(parent), oldChild);\r\n        };\r\n        /**\r\n         * @param {?} node\r\n         * @return {?}\r\n         */\r\n        ShadowDomRenderer.prototype.parentNode = function (node) {\r\n            return this.nodeOrShadowRoot(_super.prototype.parentNode.call(this, this.nodeOrShadowRoot(node)));\r\n        };\r\n        return ShadowDomRenderer;\r\n    }(DefaultDomRenderer2));\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    var ɵ0$7 = function (v) {\r\n        return '__zone_symbol__' + v;\r\n    };\r\n    /**\r\n     * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'\r\n     * since Angular can do much more\r\n     * efficient bookkeeping than Zone can, because we have additional information. This speeds up\r\n     * addEventListener by 3x.\r\n     * @type {?}\r\n     */\r\n    var __symbol__ = (typeof Zone !== 'undefined') && (((Zone)))['__symbol__'] || ɵ0$7;\r\n    /** @type {?} */\r\n    var ADD_EVENT_LISTENER = __symbol__('addEventListener');\r\n    /** @type {?} */\r\n    var REMOVE_EVENT_LISTENER = __symbol__('removeEventListener');\r\n    /** @type {?} */\r\n    var symbolNames = {};\r\n    /** @type {?} */\r\n    var FALSE = 'FALSE';\r\n    /** @type {?} */\r\n    var ANGULAR = 'ANGULAR';\r\n    /** @type {?} */\r\n    var NATIVE_ADD_LISTENER = 'addEventListener';\r\n    /** @type {?} */\r\n    var NATIVE_REMOVE_LISTENER = 'removeEventListener';\r\n    // use the same symbol string which is used in zone.js\r\n    /** @type {?} */\r\n    var stopSymbol = '__zone_symbol__propagationStopped';\r\n    /** @type {?} */\r\n    var stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';\r\n    /** @type {?} */\r\n    var blackListedEvents = (typeof Zone !== 'undefined') && (((Zone)))[__symbol__('BLACK_LISTED_EVENTS')];\r\n    /** @type {?} */\r\n    var blackListedMap;\r\n    if (blackListedEvents) {\r\n        blackListedMap = {};\r\n        blackListedEvents.forEach(function (eventName) { blackListedMap[eventName] = eventName; });\r\n    }\r\n    /** @type {?} */\r\n    var isBlackListedEvent = function (eventName) {\r\n        if (!blackListedMap) {\r\n            return false;\r\n        }\r\n        return blackListedMap.hasOwnProperty(eventName);\r\n    };\r\n    // a global listener to handle all dom event,\r\n    // so we do not need to create a closure every time\r\n    /** @type {?} */\r\n    var globalListener = function (event) {\r\n        /** @type {?} */\r\n        var symbolName = symbolNames[event.type];\r\n        if (!symbolName) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var taskDatas = this[symbolName];\r\n        if (!taskDatas) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var args = [event];\r\n        if (taskDatas.length === 1) {\r\n            // if taskDatas only have one element, just invoke it\r\n            /** @type {?} */\r\n            var taskData = taskDatas[0];\r\n            if (taskData.zone !== Zone.current) {\r\n                // only use Zone.run when Zone.current not equals to stored zone\r\n                return taskData.zone.run(taskData.handler, this, args);\r\n            }\r\n            else {\r\n                return taskData.handler.apply(this, args);\r\n            }\r\n        }\r\n        else {\r\n            // copy tasks as a snapshot to avoid event handlers remove\r\n            // itself or others\r\n            /** @type {?} */\r\n            var copiedTasks = taskDatas.slice();\r\n            for (var i = 0; i < copiedTasks.length; i++) {\r\n                // if other listener call event.stopImmediatePropagation\r\n                // just break\r\n                if ((((event)))[stopSymbol] === true) {\r\n                    break;\r\n                }\r\n                /** @type {?} */\r\n                var taskData = copiedTasks[i];\r\n                if (taskData.zone !== Zone.current) {\r\n                    // only use Zone.run when Zone.current not equals to stored zone\r\n                    taskData.zone.run(taskData.handler, this, args);\r\n                }\r\n                else {\r\n                    taskData.handler.apply(this, args);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    var DomEventsPlugin = /** @class */ (function (_super) {\r\n        __extends(DomEventsPlugin, _super);\r\n        /**\r\n         * @param {?} doc\r\n         * @param {?} ngZone\r\n         * @param {?} platformId\r\n         */\r\n        function DomEventsPlugin(doc, ngZone, platformId) {\r\n            var _this = _super.call(this, doc) || this;\r\n            _this.ngZone = ngZone;\r\n            if (!platformId || !isPlatformServer(platformId)) {\r\n                _this.patchEvent();\r\n            }\r\n            return _this;\r\n        }\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        DomEventsPlugin.prototype.patchEvent = function () {\r\n            if (typeof Event === 'undefined' || !Event || !Event.prototype) {\r\n                return;\r\n            }\r\n            if ((((Event.prototype)))[stopMethodSymbol]) {\r\n                // already patched by zone.js\r\n                return;\r\n            }\r\n            /** @type {?} */\r\n            var delegate = (((Event.prototype)))[stopMethodSymbol] =\r\n                Event.prototype.stopImmediatePropagation;\r\n            Event.prototype.stopImmediatePropagation = function () {\r\n                if (this) {\r\n                    this[stopSymbol] = true;\r\n                }\r\n                // should call native delegate in case\r\n                // in some environment part of the application\r\n                // will not use the patched Event\r\n                delegate && delegate.apply(this, arguments);\r\n            };\r\n        };\r\n        // This plugin should come last in the list of plugins, because it accepts all\r\n        // events.\r\n        /**\r\n         * @param {?} eventName\r\n         * @return {?}\r\n         */\r\n        DomEventsPlugin.prototype.supports = function (eventName) { return true; };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} eventName\r\n         * @param {?} handler\r\n         * @return {?}\r\n         */\r\n        DomEventsPlugin.prototype.addEventListener = function (element$$1, eventName, handler) {\r\n            var _this = this;\r\n            /** @type {?} */\r\n            var zoneJsLoaded = element$$1[ADD_EVENT_LISTENER];\r\n            /** @type {?} */\r\n            var callback = ((handler));\r\n            // if zonejs is loaded and current zone is not ngZone\r\n            // we keep Zone.current on target for later restoration.\r\n            if (zoneJsLoaded && (!NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {\r\n                /** @type {?} */\r\n                var symbolName = symbolNames[eventName];\r\n                if (!symbolName) {\r\n                    symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);\r\n                }\r\n                /** @type {?} */\r\n                var taskDatas = (((element$$1)))[symbolName];\r\n                /** @type {?} */\r\n                var globalListenerRegistered = taskDatas && taskDatas.length > 0;\r\n                if (!taskDatas) {\r\n                    taskDatas = (((element$$1)))[symbolName] = [];\r\n                }\r\n                /** @type {?} */\r\n                var zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;\r\n                if (taskDatas.length === 0) {\r\n                    taskDatas.push({ zone: zone, handler: callback });\r\n                }\r\n                else {\r\n                    /** @type {?} */\r\n                    var callbackRegistered = false;\r\n                    for (var i = 0; i < taskDatas.length; i++) {\r\n                        if (taskDatas[i].handler === callback) {\r\n                            callbackRegistered = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!callbackRegistered) {\r\n                        taskDatas.push({ zone: zone, handler: callback });\r\n                    }\r\n                }\r\n                if (!globalListenerRegistered) {\r\n                    element$$1[ADD_EVENT_LISTENER](eventName, globalListener, false);\r\n                }\r\n            }\r\n            else {\r\n                element$$1[NATIVE_ADD_LISTENER](eventName, callback, false);\r\n            }\r\n            return function () { return _this.removeEventListener(element$$1, eventName, callback); };\r\n        };\r\n        /**\r\n         * @param {?} target\r\n         * @param {?} eventName\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        DomEventsPlugin.prototype.removeEventListener = function (target, eventName, callback) {\r\n            /** @type {?} */\r\n            var underlyingRemove = target[REMOVE_EVENT_LISTENER];\r\n            // zone.js not loaded, use native removeEventListener\r\n            if (!underlyingRemove) {\r\n                return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\r\n            }\r\n            /** @type {?} */\r\n            var symbolName = symbolNames[eventName];\r\n            /** @type {?} */\r\n            var taskDatas = symbolName && target[symbolName];\r\n            if (!taskDatas) {\r\n                // addEventListener not using patched version\r\n                // just call native removeEventListener\r\n                return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\r\n            }\r\n            // fix issue 20532, should be able to remove\r\n            // listener which was added inside of ngZone\r\n            /** @type {?} */\r\n            var found = false;\r\n            for (var i = 0; i < taskDatas.length; i++) {\r\n                // remove listener from taskDatas if the callback equals\r\n                if (taskDatas[i].handler === callback) {\r\n                    found = true;\r\n                    taskDatas.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n            if (found) {\r\n                if (taskDatas.length === 0) {\r\n                    // all listeners are removed, we can remove the globalListener from target\r\n                    underlyingRemove.apply(target, [eventName, globalListener, false]);\r\n                }\r\n            }\r\n            else {\r\n                // not found in taskDatas, the callback may be added inside of ngZone\r\n                // use native remove listener to remove the callback\r\n                target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\r\n            }\r\n        };\r\n        return DomEventsPlugin;\r\n    }(EventManagerPlugin));\r\n    DomEventsPlugin.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    DomEventsPlugin.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] },\r\n        { type: NgZone },\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\r\n    ]; };\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Supported HammerJS recognizer event names.\r\n     * @type {?}\r\n     */\r\n    var EVENT_NAMES = {\r\n        // pan\r\n        'pan': true,\r\n        'panstart': true,\r\n        'panmove': true,\r\n        'panend': true,\r\n        'pancancel': true,\r\n        'panleft': true,\r\n        'panright': true,\r\n        'panup': true,\r\n        'pandown': true,\r\n        // pinch\r\n        'pinch': true,\r\n        'pinchstart': true,\r\n        'pinchmove': true,\r\n        'pinchend': true,\r\n        'pinchcancel': true,\r\n        'pinchin': true,\r\n        'pinchout': true,\r\n        // press\r\n        'press': true,\r\n        'pressup': true,\r\n        // rotate\r\n        'rotate': true,\r\n        'rotatestart': true,\r\n        'rotatemove': true,\r\n        'rotateend': true,\r\n        'rotatecancel': true,\r\n        // swipe\r\n        'swipe': true,\r\n        'swipeleft': true,\r\n        'swiperight': true,\r\n        'swipeup': true,\r\n        'swipedown': true,\r\n        // tap\r\n        'tap': true,\r\n    };\r\n    /**\r\n     * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.\r\n     * @see `HammerGestureConfig`\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\r\n    /**\r\n     * Injection token used to provide a {\\@link HammerLoader} to Angular.\r\n     *\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var HAMMER_LOADER = new InjectionToken('HammerLoader');\r\n    /**\r\n     * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\r\n     * for gesture recognition. Configures specific event recognition.\r\n     * \\@publicApi\r\n     */\r\n    var HammerGestureConfig = /** @class */ (function () {\r\n        function HammerGestureConfig() {\r\n            /**\r\n             * A set of supported event names for gestures to be used in Angular.\r\n             * Angular supports all built-in recognizers, as listed in\r\n             * [HammerJS documentation](http://hammerjs.github.io/).\r\n             */\r\n            this.events = [];\r\n            /**\r\n             * Maps gesture event names to a set of configuration options\r\n             * that specify overrides to the default values for specific properties.\r\n             *\r\n             * The key is a supported event name to be configured,\r\n             * and the options object contains a set of properties, with override values\r\n             * to be applied to the named recognizer event.\r\n             * For example, to disable recognition of the rotate event, specify\r\n             *  `{\"rotate\": {\"enable\": false}}`.\r\n             *\r\n             * Properties that are not present take the HammerJS default values.\r\n             * For information about which properties are supported for which events,\r\n             * and their allowed and default values, see\r\n             * [HammerJS documentation](http://hammerjs.github.io/).\r\n             *\r\n             */\r\n            this.overrides = {};\r\n        }\r\n        /**\r\n         * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\r\n         * and attaches it to a given HTML element.\r\n         * @param {?} element The element that will recognize gestures.\r\n         * @return {?} A HammerJS event-manager object.\r\n         */\r\n        HammerGestureConfig.prototype.buildHammer = function (element$$1) {\r\n            /** @type {?} */\r\n            var mc = new ((Hammer))(element$$1, this.options);\r\n            mc.get('pinch').set({ enable: true });\r\n            mc.get('rotate').set({ enable: true });\r\n            for (var eventName in this.overrides) {\r\n                mc.get(eventName).set(this.overrides[eventName]);\r\n            }\r\n            return mc;\r\n        };\r\n        return HammerGestureConfig;\r\n    }());\r\n    HammerGestureConfig.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    var HammerGesturesPlugin = /** @class */ (function (_super) {\r\n        __extends(HammerGesturesPlugin, _super);\r\n        /**\r\n         * @param {?} doc\r\n         * @param {?} _config\r\n         * @param {?} console\r\n         * @param {?=} loader\r\n         */\r\n        function HammerGesturesPlugin(doc, _config, console, loader) {\r\n            var _this = _super.call(this, doc) || this;\r\n            _this._config = _config;\r\n            _this.console = console;\r\n            _this.loader = loader;\r\n            return _this;\r\n        }\r\n        /**\r\n         * @param {?} eventName\r\n         * @return {?}\r\n         */\r\n        HammerGesturesPlugin.prototype.supports = function (eventName) {\r\n            if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\r\n                return false;\r\n            }\r\n            if (!(((window))).Hammer && !this.loader) {\r\n                this.console.warn(\"The \\\"\" + eventName + \"\\\" event cannot be bound because Hammer.JS is not \" +\r\n                    \"loaded and no custom loader has been specified.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        /**\r\n         * @param {?} element\r\n         * @param {?} eventName\r\n         * @param {?} handler\r\n         * @return {?}\r\n         */\r\n        HammerGesturesPlugin.prototype.addEventListener = function (element$$1, eventName, handler) {\r\n            var _this = this;\r\n            /** @type {?} */\r\n            var zone = this.manager.getZone();\r\n            eventName = eventName.toLowerCase();\r\n            // If Hammer is not present but a loader is specified, we defer adding the event listener\r\n            // until Hammer is loaded.\r\n            if (!(((window))).Hammer && this.loader) {\r\n                // This `addEventListener` method returns a function to remove the added listener.\r\n                // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\r\n                // than remove anything.\r\n                /** @type {?} */\r\n                var cancelRegistration_1 = false;\r\n                /** @type {?} */\r\n                var deregister_1 = function () { cancelRegistration_1 = true; };\r\n                this.loader()\r\n                    .then(function () {\r\n                    // If Hammer isn't actually loaded when the custom loader resolves, give up.\r\n                    if (!(((window))).Hammer) {\r\n                        _this.console.warn(\"The custom HAMMER_LOADER completed, but Hammer.JS is not present.\");\r\n                        deregister_1 = function () { };\r\n                        return;\r\n                    }\r\n                    if (!cancelRegistration_1) {\r\n                        // Now that Hammer is loaded and the listener is being loaded for real,\r\n                        // the deregistration function changes from canceling registration to removal.\r\n                        deregister_1 = _this.addEventListener(element$$1, eventName, handler);\r\n                    }\r\n                })\r\n                    .catch(function () {\r\n                    _this.console.warn(\"The \\\"\" + eventName + \"\\\" event cannot be bound because the custom \" +\r\n                        \"Hammer.JS loader failed.\");\r\n                    deregister_1 = function () { };\r\n                });\r\n                // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\r\n                // can change the behavior of `deregister` once the listener is added. Using a closure in\r\n                // this way allows us to avoid any additional data structures to track listener removal.\r\n                return function () { deregister_1(); };\r\n            }\r\n            return zone.runOutsideAngular(function () {\r\n                // Creating the manager bind events, must be done outside of angular\r\n                /** @type {?} */\r\n                var mc = _this._config.buildHammer(element$$1);\r\n                /** @type {?} */\r\n                var callback = function (eventObj) {\r\n                    zone.runGuarded(function () { handler(eventObj); });\r\n                };\r\n                mc.on(eventName, callback);\r\n                return function () {\r\n                    mc.off(eventName, callback);\r\n                    // destroy mc to prevent memory leak\r\n                    if (typeof mc.destroy === 'function') {\r\n                        mc.destroy();\r\n                    }\r\n                };\r\n            });\r\n        };\r\n        /**\r\n         * @param {?} eventName\r\n         * @return {?}\r\n         */\r\n        HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) { return this._config.events.indexOf(eventName) > -1; };\r\n        return HammerGesturesPlugin;\r\n    }(EventManagerPlugin));\r\n    HammerGesturesPlugin.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    HammerGesturesPlugin.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] },\r\n        { type: HammerGestureConfig, decorators: [{ type: Inject, args: [HAMMER_GESTURE_CONFIG,] }] },\r\n        { type: Console },\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\r\n    ]; };\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Defines supported modifiers for key events.\r\n     * @type {?}\r\n     */\r\n    var MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\r\n    var ɵ0$8 = function (event) { return event.altKey; }, ɵ1$3 = function (event) { return event.ctrlKey; }, ɵ2$1 = function (event) { return event.metaKey; }, ɵ3 = function (event) { return event.shiftKey; };\r\n    /**\r\n     * Retrieves modifiers from key-event objects.\r\n     * @type {?}\r\n     */\r\n    var MODIFIER_KEY_GETTERS = {\r\n        'alt': ɵ0$8,\r\n        'control': ɵ1$3,\r\n        'meta': ɵ2$1,\r\n        'shift': ɵ3\r\n    };\r\n    /**\r\n     * \\@publicApi\r\n     * A browser plug-in that provides support for handling of key events in Angular.\r\n     */\r\n    var KeyEventsPlugin = /** @class */ (function (_super) {\r\n        __extends(KeyEventsPlugin, _super);\r\n        /**\r\n         * Initializes an instance of the browser plug-in.\r\n         * @param {?} doc The document in which key events will be detected.\r\n         */\r\n        function KeyEventsPlugin(doc) {\r\n            return _super.call(this, doc) || this;\r\n        }\r\n        /**\r\n         * Reports whether a named key event is supported.\r\n         * @param {?} eventName The event name to query.\r\n         * @return {?} True if the named key event is supported.\r\n         */\r\n        KeyEventsPlugin.prototype.supports = function (eventName) { return KeyEventsPlugin.parseEventName(eventName) != null; };\r\n        /**\r\n         * Registers a handler for a specific element and key event.\r\n         * @param {?} element The HTML element to receive event notifications.\r\n         * @param {?} eventName The name of the key event to listen for.\r\n         * @param {?} handler A function to call when the notification occurs. Receives the\r\n         * event object as an argument.\r\n         * @return {?} The key event that was registered.\r\n         */\r\n        KeyEventsPlugin.prototype.addEventListener = function (element$$1, eventName, handler) {\r\n            /** @type {?} */\r\n            var parsedEvent = ((KeyEventsPlugin.parseEventName(eventName)));\r\n            /** @type {?} */\r\n            var outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\r\n            return this.manager.getZone().runOutsideAngular(function () {\r\n                return getDOM().onAndCancel(element$$1, parsedEvent['domEventName'], outsideHandler);\r\n            });\r\n        };\r\n        /**\r\n         * @param {?} eventName\r\n         * @return {?}\r\n         */\r\n        KeyEventsPlugin.parseEventName = function (eventName) {\r\n            /** @type {?} */\r\n            var parts = eventName.toLowerCase().split('.');\r\n            /** @type {?} */\r\n            var domEventName = parts.shift();\r\n            if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\r\n                return null;\r\n            }\r\n            /** @type {?} */\r\n            var key = KeyEventsPlugin._normalizeKey(((parts.pop())));\r\n            /** @type {?} */\r\n            var fullKey = '';\r\n            MODIFIER_KEYS.forEach(function (modifierName) {\r\n                /** @type {?} */\r\n                var index = parts.indexOf(modifierName);\r\n                if (index > -1) {\r\n                    parts.splice(index, 1);\r\n                    fullKey += modifierName + '.';\r\n                }\r\n            });\r\n            fullKey += key;\r\n            if (parts.length != 0 || key.length === 0) {\r\n                // returning null instead of throwing to let another plugin process the event\r\n                return null;\r\n            }\r\n            /** @type {?} */\r\n            var result = {};\r\n            result['domEventName'] = domEventName;\r\n            result['fullKey'] = fullKey;\r\n            return result;\r\n        };\r\n        /**\r\n         * @param {?} event\r\n         * @return {?}\r\n         */\r\n        KeyEventsPlugin.getEventFullKey = function (event) {\r\n            /** @type {?} */\r\n            var fullKey = '';\r\n            /** @type {?} */\r\n            var key = getDOM().getEventKey(event);\r\n            key = key.toLowerCase();\r\n            if (key === ' ') {\r\n                key = 'space'; // for readability\r\n            }\r\n            else if (key === '.') {\r\n                key = 'dot'; // because '.' is used as a separator in event names\r\n            }\r\n            MODIFIER_KEYS.forEach(function (modifierName) {\r\n                if (modifierName != key) {\r\n                    /** @type {?} */\r\n                    var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\r\n                    if (modifierGetter(event)) {\r\n                        fullKey += modifierName + '.';\r\n                    }\r\n                }\r\n            });\r\n            fullKey += key;\r\n            return fullKey;\r\n        };\r\n        /**\r\n         * Configures a handler callback for a key event.\r\n         * @param {?} fullKey The event name that combines all simultaneous keystrokes.\r\n         * @param {?} handler The function that responds to the key event.\r\n         * @param {?} zone The zone in which the event occurred.\r\n         * @return {?} A callback function.\r\n         */\r\n        KeyEventsPlugin.eventCallback = function (fullKey, handler, zone) {\r\n            return function (event /** TODO #9100 */) {\r\n                if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\r\n                    zone.runGuarded(function () { return handler(event); });\r\n                }\r\n            };\r\n        };\r\n        /**\r\n         * \\@internal\r\n         * @param {?} keyName\r\n         * @return {?}\r\n         */\r\n        KeyEventsPlugin._normalizeKey = function (keyName) {\r\n            // TODO: switch to a Map if the mapping grows too much\r\n            switch (keyName) {\r\n                case 'esc':\r\n                    return 'escape';\r\n                default:\r\n                    return keyName;\r\n            }\r\n        };\r\n        return KeyEventsPlugin;\r\n    }(EventManagerPlugin));\r\n    KeyEventsPlugin.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    KeyEventsPlugin.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] }\r\n    ]; };\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\r\n     * values to be safe to use in the different DOM contexts.\r\n     *\r\n     * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\r\n     * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\r\n     * the website.\r\n     *\r\n     * In specific situations, it might be necessary to disable sanitization, for example if the\r\n     * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\r\n     * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\r\n     * methods, and then binding to that value from the template.\r\n     *\r\n     * These situations should be very rare, and extraordinary care must be taken to avoid creating a\r\n     * Cross Site Scripting (XSS) security bug!\r\n     *\r\n     * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\r\n     * close as possible to the source of the value, to make it easy to verify no security bug is\r\n     * created by its use.\r\n     *\r\n     * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\r\n     * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\r\n     * code. The sanitizer leaves safe values intact.\r\n     *\r\n     * \\@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\r\n     * sanitization for the value passed in. Carefully check and audit all values and code paths going\r\n     * into this call. Make sure any user data is appropriately escaped for this security context.\r\n     * For more detail, see the [Security Guide](http://g.co/ng/security).\r\n     *\r\n     * \\@publicApi\r\n     * @abstract\r\n     */\r\n    var DomSanitizer = /** @class */ (function () {\r\n        function DomSanitizer() {\r\n        }\r\n        return DomSanitizer;\r\n    }());\r\n    var DomSanitizerImpl = /** @class */ (function (_super) {\r\n        __extends(DomSanitizerImpl, _super);\r\n        /**\r\n         * @param {?} _doc\r\n         */\r\n        function DomSanitizerImpl(_doc) {\r\n            var _this = _super.call(this) || this;\r\n            _this._doc = _doc;\r\n            return _this;\r\n        }\r\n        /**\r\n         * @param {?} ctx\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DomSanitizerImpl.prototype.sanitize = function (ctx, value) {\r\n            if (value == null)\r\n                return null;\r\n            switch (ctx) {\r\n                case SecurityContext.NONE:\r\n                    return ((value));\r\n                case SecurityContext.HTML:\r\n                    if (value instanceof SafeHtmlImpl)\r\n                        return value.changingThisBreaksApplicationSecurity;\r\n                    this.checkNotSafeValue(value, 'HTML');\r\n                    return _sanitizeHtml(this._doc, String(value));\r\n                case SecurityContext.STYLE:\r\n                    if (value instanceof SafeStyleImpl)\r\n                        return value.changingThisBreaksApplicationSecurity;\r\n                    this.checkNotSafeValue(value, 'Style');\r\n                    return _sanitizeStyle(((value)));\r\n                case SecurityContext.SCRIPT:\r\n                    if (value instanceof SafeScriptImpl)\r\n                        return value.changingThisBreaksApplicationSecurity;\r\n                    this.checkNotSafeValue(value, 'Script');\r\n                    throw new Error('unsafe value used in a script context');\r\n                case SecurityContext.URL:\r\n                    if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\r\n                        // Allow resource URLs in URL contexts, they are strictly more trusted.\r\n                        return value.changingThisBreaksApplicationSecurity;\r\n                    }\r\n                    this.checkNotSafeValue(value, 'URL');\r\n                    return _sanitizeUrl(String(value));\r\n                case SecurityContext.RESOURCE_URL:\r\n                    if (value instanceof SafeResourceUrlImpl) {\r\n                        return value.changingThisBreaksApplicationSecurity;\r\n                    }\r\n                    this.checkNotSafeValue(value, 'ResourceURL');\r\n                    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\r\n                default:\r\n                    throw new Error(\"Unexpected SecurityContext \" + ctx + \" (see http://g.co/ng/security#xss)\");\r\n            }\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} value\r\n         * @param {?} expectedType\r\n         * @return {?}\r\n         */\r\n        DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {\r\n            if (value instanceof SafeValueImpl) {\r\n                throw new Error(\"Required a safe \" + expectedType + \", got a \" + value.getTypeName() + \" \" +\r\n                    \"(see http://g.co/ng/security#xss)\");\r\n            }\r\n        };\r\n        /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) { return new SafeHtmlImpl(value); };\r\n        /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) { return new SafeStyleImpl(value); };\r\n        /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) { return new SafeScriptImpl(value); };\r\n        /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) { return new SafeUrlImpl(value); };\r\n        /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {\r\n            return new SafeResourceUrlImpl(value);\r\n        };\r\n        return DomSanitizerImpl;\r\n    }(DomSanitizer));\r\n    DomSanitizerImpl.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    DomSanitizerImpl.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] }\r\n    ]; };\r\n    /**\r\n     * @abstract\r\n     */\r\n    var SafeValueImpl = /** @class */ (function () {\r\n        /**\r\n         * @param {?} changingThisBreaksApplicationSecurity\r\n         */\r\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\r\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\r\n            // empty\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        SafeValueImpl.prototype.toString = function () {\r\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\r\n                \" (see http://g.co/ng/security#xss)\";\r\n        };\r\n        return SafeValueImpl;\r\n    }());\r\n    var SafeHtmlImpl = /** @class */ (function (_super) {\r\n        __extends(SafeHtmlImpl, _super);\r\n        function SafeHtmlImpl() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        SafeHtmlImpl.prototype.getTypeName = function () { return 'HTML'; };\r\n        return SafeHtmlImpl;\r\n    }(SafeValueImpl));\r\n    var SafeStyleImpl = /** @class */ (function (_super) {\r\n        __extends(SafeStyleImpl, _super);\r\n        function SafeStyleImpl() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        SafeStyleImpl.prototype.getTypeName = function () { return 'Style'; };\r\n        return SafeStyleImpl;\r\n    }(SafeValueImpl));\r\n    var SafeScriptImpl = /** @class */ (function (_super) {\r\n        __extends(SafeScriptImpl, _super);\r\n        function SafeScriptImpl() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        SafeScriptImpl.prototype.getTypeName = function () { return 'Script'; };\r\n        return SafeScriptImpl;\r\n    }(SafeValueImpl));\r\n    var SafeUrlImpl = /** @class */ (function (_super) {\r\n        __extends(SafeUrlImpl, _super);\r\n        function SafeUrlImpl() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        SafeUrlImpl.prototype.getTypeName = function () { return 'URL'; };\r\n        return SafeUrlImpl;\r\n    }(SafeValueImpl));\r\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\r\n        __extends(SafeResourceUrlImpl, _super);\r\n        function SafeResourceUrlImpl() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return 'ResourceURL'; };\r\n        return SafeResourceUrlImpl;\r\n    }(SafeValueImpl));\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\r\n        { provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID },\r\n        { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\r\n        { provide: PlatformLocation, useClass: BrowserPlatformLocation, deps: [DOCUMENT$1] },\r\n        { provide: DOCUMENT$1, useFactory: _document, deps: [] },\r\n    ];\r\n    /**\r\n     * \\@security Replacing built-in sanitization providers exposes the application to XSS risks.\r\n     * Attacker-controlled data introduced by an unsanitized provider could expose your\r\n     * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var BROWSER_SANITIZATION_PROVIDERS = [\r\n        { provide: Sanitizer, useExisting: DomSanitizer },\r\n        { provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT$1] },\r\n    ];\r\n    /**\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function initDomAdapter() {\r\n        BrowserDomAdapter.makeCurrent();\r\n        BrowserGetTestability.init();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function errorHandler() {\r\n        return new ErrorHandler();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function _document() {\r\n        return document;\r\n    }\r\n    /** @type {?} */\r\n    var BROWSER_MODULE_PROVIDERS = [\r\n        BROWSER_SANITIZATION_PROVIDERS,\r\n        { provide: APP_ROOT, useValue: true },\r\n        { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\r\n        {\r\n            provide: EVENT_MANAGER_PLUGINS,\r\n            useClass: DomEventsPlugin,\r\n            multi: true,\r\n            deps: [DOCUMENT$1, NgZone, PLATFORM_ID]\r\n        },\r\n        { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT$1] },\r\n        {\r\n            provide: EVENT_MANAGER_PLUGINS,\r\n            useClass: HammerGesturesPlugin,\r\n            multi: true,\r\n            deps: [DOCUMENT$1, HAMMER_GESTURE_CONFIG, Console, [new Optional(), HAMMER_LOADER]]\r\n        },\r\n        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\r\n        {\r\n            provide: DomRendererFactory2,\r\n            useClass: DomRendererFactory2,\r\n            deps: [EventManager, DomSharedStylesHost]\r\n        },\r\n        { provide: RendererFactory2, useExisting: DomRendererFactory2 },\r\n        { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\r\n        { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT$1] },\r\n        { provide: Testability, useClass: Testability, deps: [NgZone] },\r\n        { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\r\n        ELEMENT_PROBE_PROVIDERS,\r\n    ];\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Factory to create Meta service.\r\n     * @return {?}\r\n     */\r\n    function createMeta() {\r\n        return new Meta(inject(DOCUMENT$1));\r\n    }\r\n    /**\r\n     * A service that can be used to get and add meta tags.\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var Meta = /** @class */ (function () {\r\n        /**\r\n         * @param {?} _doc\r\n         */\r\n        function Meta(_doc) {\r\n            this._doc = _doc;\r\n            this._dom = getDOM();\r\n        }\r\n        /**\r\n         * @param {?} tag\r\n         * @param {?=} forceCreation\r\n         * @return {?}\r\n         */\r\n        Meta.prototype.addTag = function (tag, forceCreation) {\r\n            if (forceCreation === void 0) { forceCreation = false; }\r\n            if (!tag)\r\n                return null;\r\n            return this._getOrCreateElement(tag, forceCreation);\r\n        };\r\n        /**\r\n         * @param {?} tags\r\n         * @param {?=} forceCreation\r\n         * @return {?}\r\n         */\r\n        Meta.prototype.addTags = function (tags, forceCreation) {\r\n            var _this = this;\r\n            if (forceCreation === void 0) { forceCreation = false; }\r\n            if (!tags)\r\n                return [];\r\n            return tags.reduce(function (result, tag) {\r\n                if (tag) {\r\n                    result.push(_this._getOrCreateElement(tag, forceCreation));\r\n                }\r\n                return result;\r\n            }, []);\r\n        };\r\n        /**\r\n         * @param {?} attrSelector\r\n         * @return {?}\r\n         */\r\n        Meta.prototype.getTag = function (attrSelector) {\r\n            if (!attrSelector)\r\n                return null;\r\n            return this._dom.querySelector(this._doc, \"meta[\" + attrSelector + \"]\") || null;\r\n        };\r\n        /**\r\n         * @param {?} attrSelector\r\n         * @return {?}\r\n         */\r\n        Meta.prototype.getTags = function (attrSelector) {\r\n            if (!attrSelector)\r\n                return [];\r\n            /** @type {?} */\r\n            var list /*NodeList*/ = this._dom.querySelectorAll(this._doc, \"meta[\" + attrSelector + \"]\");\r\n            return list ? [].slice.call(list) : [];\r\n        };\r\n        /**\r\n         * @param {?} tag\r\n         * @param {?=} selector\r\n         * @return {?}\r\n         */\r\n        Meta.prototype.updateTag = function (tag, selector) {\r\n            if (!tag)\r\n                return null;\r\n            selector = selector || this._parseSelector(tag);\r\n            /** @type {?} */\r\n            var meta = ((this.getTag(selector)));\r\n            if (meta) {\r\n                return this._setMetaElementAttributes(tag, meta);\r\n            }\r\n            return this._getOrCreateElement(tag, true);\r\n        };\r\n        /**\r\n         * @param {?} attrSelector\r\n         * @return {?}\r\n         */\r\n        Meta.prototype.removeTag = function (attrSelector) { this.removeTagElement(((this.getTag(attrSelector)))); };\r\n        /**\r\n         * @param {?} meta\r\n         * @return {?}\r\n         */\r\n        Meta.prototype.removeTagElement = function (meta) {\r\n            if (meta) {\r\n                this._dom.remove(meta);\r\n            }\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} meta\r\n         * @param {?=} forceCreation\r\n         * @return {?}\r\n         */\r\n        Meta.prototype._getOrCreateElement = function (meta, forceCreation) {\r\n            if (forceCreation === void 0) { forceCreation = false; }\r\n            if (!forceCreation) {\r\n                /** @type {?} */\r\n                var selector = this._parseSelector(meta);\r\n                /** @type {?} */\r\n                var elem = ((this.getTag(selector)));\r\n                // It's allowed to have multiple elements with the same name so it's not enough to\r\n                // just check that element with the same name already present on the page. We also need to\r\n                // check if element has tag attributes\r\n                if (elem && this._containsAttributes(meta, elem))\r\n                    return elem;\r\n            }\r\n            /** @type {?} */\r\n            var element$$1 = ((this._dom.createElement('meta')));\r\n            this._setMetaElementAttributes(meta, element$$1);\r\n            /** @type {?} */\r\n            var head = this._dom.getElementsByTagName(this._doc, 'head')[0];\r\n            this._dom.appendChild(head, element$$1);\r\n            return element$$1;\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} tag\r\n         * @param {?} el\r\n         * @return {?}\r\n         */\r\n        Meta.prototype._setMetaElementAttributes = function (tag, el) {\r\n            var _this = this;\r\n            Object.keys(tag).forEach(function (prop) { return _this._dom.setAttribute(el, prop, tag[prop]); });\r\n            return el;\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} tag\r\n         * @return {?}\r\n         */\r\n        Meta.prototype._parseSelector = function (tag) {\r\n            /** @type {?} */\r\n            var attr = tag.name ? 'name' : 'property';\r\n            return attr + \"=\\\"\" + tag[attr] + \"\\\"\";\r\n        };\r\n        /**\r\n         * @private\r\n         * @param {?} tag\r\n         * @param {?} elem\r\n         * @return {?}\r\n         */\r\n        Meta.prototype._containsAttributes = function (tag, elem) {\r\n            var _this = this;\r\n            return Object.keys(tag).every(function (key) { return _this._dom.getAttribute(elem, key) === tag[key]; });\r\n        };\r\n        return Meta;\r\n    }());\r\n    Meta.decorators = [\r\n        { type: Injectable, args: [{ providedIn: 'root', useFactory: createMeta, deps: [] },] }\r\n    ];\r\n    /** @nocollapse */\r\n    Meta.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] }\r\n    ]; };\r\n    /** @nocollapse */ Meta.ngInjectableDef = defineInjectable({ factory: createMeta, token: Meta, providedIn: \"root\" });\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Factory to create Title service.\r\n     * @return {?}\r\n     */\r\n    function createTitle() {\r\n        return new Title(inject(DOCUMENT$1));\r\n    }\r\n    /**\r\n     * A service that can be used to get and set the title of a current HTML document.\r\n     *\r\n     * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\r\n     * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\r\n     * (representing the `<title>` tag). Instead, this service can be used to set and get the current\r\n     * title value.\r\n     *\r\n     * \\@publicApi\r\n     */\r\n    var Title = /** @class */ (function () {\r\n        /**\r\n         * @param {?} _doc\r\n         */\r\n        function Title(_doc) {\r\n            this._doc = _doc;\r\n        }\r\n        /**\r\n         * Get the title of the current HTML document.\r\n         * @return {?}\r\n         */\r\n        Title.prototype.getTitle = function () { return getDOM().getTitle(this._doc); };\r\n        /**\r\n         * Set the title of the current HTML document.\r\n         * @param {?} newTitle\r\n         * @return {?}\r\n         */\r\n        Title.prototype.setTitle = function (newTitle) { getDOM().setTitle(this._doc, newTitle); };\r\n        return Title;\r\n    }());\r\n    Title.decorators = [\r\n        { type: Injectable, args: [{ providedIn: 'root', useFactory: createTitle, deps: [] },] }\r\n    ];\r\n    /** @nocollapse */\r\n    Title.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] }\r\n    ]; };\r\n    /** @nocollapse */ Title.ngInjectableDef = defineInjectable({ factory: createTitle, token: Title, providedIn: \"root\" });\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * \\@publicApi\r\n     * @type {?}\r\n     */\r\n    var VERSION$2 = new Version('0.0.0-PLACEHOLDER');\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    var AppComponent = /** @class */ (function () {\r\n        function AppComponent() {\r\n        }\r\n        return AppComponent;\r\n    }());\r\n    AppComponent.decorators = [\r\n        { type: Component, args: [{ selector: 'hello-world', template: 'Hello World!' }] }\r\n    ];\r\n    var AppModule = /** @class */ (function () {\r\n        function AppModule() {\r\n        }\r\n        return AppModule;\r\n    }());\r\n    AppModule.decorators = [\r\n        { type: NgModule, args: [{ declarations: [AppComponent], bootstrap: [AppComponent] },] }\r\n    ];\r\n    /**\r\n     * @fileoverview This file was generated by the Angular template compiler. Do not edit.\r\n     *\r\n     * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\r\n     * tslint:disable\r\n     */\r\n    var AppModuleNgFactory = createNgModuleFactory(AppModule, [AppComponent], function (_l) { return moduleDef([moduleProvideDef(512, ComponentFactoryResolver, CodegenComponentFactoryResolver, [[8, [AppComponentNgFactory]], [3, ComponentFactoryResolver], NgModuleRef]), moduleProvideDef(1073742336, AppModule, AppModule, [])]); });\r\n    var styles_AppComponent = [];\r\n    var RenderType_AppComponent = createRendererType2({ encapsulation: 2, styles: styles_AppComponent, data: {} });\r\n    function View_AppComponent_0(_l) { return viewDef(0, [(_l()(), textDef(-1, null, [\"Hello World!\"]))], null, null); }\r\n    function View_AppComponent_Host_0(_l) { return viewDef(0, [(_l()(), elementDef(0, 0, null, null, 1, \"hello-world\", [], null, null, null, View_AppComponent_0, RenderType_AppComponent)), directiveDef(1, 49152, null, 0, AppComponent, [], null, null)], null, null); }\r\n    var AppComponentNgFactory = createComponentFactory(\"hello-world\", AppComponent, View_AppComponent_Host_0, {}, {}, []);\r\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    enableProdMode();\r\n    platformBrowser().bootstrapModuleFactory(AppModuleNgFactory).catch(function (err) { return console.error(err); });\r\n}());\r\n//# sourceMappingURL=bundle_current.es6.js.map\r\n"]}