{"version":3,"sources":["../../../../../../external/npm/node_modules/tslib/tslib.es6.js","../../../../../../../external/angular/packages/core/src/util/property.ts","../../../../../../../external/angular/packages/core/src/render3/fields.ts","../../../../../../../external/angular/packages/core/src/di/defs.ts","../../../../../../../external/angular/packages/core/src/di/injection_token.ts","../../../../../../../external/angular/packages/core/src/util/decorators.ts","../../../../../../../external/angular/packages/core/src/metadata/di.ts","../../../../../../../external/angular/packages/core/src/util.ts","../../../../../../../external/angular/packages/core/src/di/forward_ref.ts","../../../../../../../external/angular/packages/core/src/metadata/view.ts","../../../../../../../external/angular/packages/core/src/di/injector_compatibility.ts","../../../../../../../external/angular/packages/core/src/di/metadata.ts","../../../../../../../external/angular/packages/core/src/util/ng_reflect.ts","../../../../../../../external/angular/packages/core/src/change_detection/change_detection_util.ts","../../../../../../../external/angular/packages/core/src/util/noop.ts","../../../../../../../external/angular/packages/core/src/di/injector.ts","../../../../../../../external/angular/packages/core/src/di/scope.ts","../../../../../../../external/angular/packages/core/src/linker/component_factory.ts","../../../../../../../external/angular/packages/core/src/linker/component_factory_resolver.ts","../../../../../../../external/angular/packages/core/src/linker/ng_module_factory.ts","../../../../../../../external/angular/packages/core/src/linker/element_ref.ts","../../../../../../../external/angular/packages/core/src/render/api.ts","../../../../../../../external/angular/packages/core/src/sanitization/security.ts","../../../../../../../external/angular/packages/core/src/version.ts","../../../../../../../external/angular/packages/core/src/is_dev_mode.ts","../../../../../external/rxjs/internal/util/isFunction.ts","../../../../../external/rxjs/internal/config.ts","../../../../../external/rxjs/internal/util/hostReportError.ts","../../../../../external/rxjs/internal/Observer.ts","../../../../../external/rxjs/internal/util/isArray.ts","../../../../../external/rxjs/internal/util/isObject.ts","../../../../../external/rxjs/internal/util/errorObject.ts","../../../../../external/rxjs/internal/util/tryCatch.ts","../../../../../external/rxjs/internal/util/UnsubscriptionError.ts","../../../../../external/rxjs/internal/Subscription.ts","../../../../../external/rxjs/internal/symbol/rxSubscriber.ts","../../../../../external/rxjs/internal/Subscriber.ts","../../../../../external/rxjs/internal/symbol/observable.ts","../../../../../external/rxjs/internal/util/noop.ts","../../../../../external/rxjs/internal/Observable.ts","../../../../../external/rxjs/internal/util/toSubscriber.ts","../../../../../external/rxjs/internal/util/canReportError.ts","../../../../../external/rxjs/internal/util/pipe.ts","../../../../../external/rxjs/internal/util/ObjectUnsubscribedError.ts","../../../../../external/rxjs/internal/SubjectSubscription.ts","../../../../../external/rxjs/internal/Subject.ts","../../../../../external/rxjs/internal/operators/refCount.ts","../../../../../external/rxjs/internal/observable/ConnectableObservable.ts","../../../../../external/rxjs/internal/util/subscribeToArray.ts","../../../../../external/rxjs/internal/observable/fromArray.ts","../../../../../external/rxjs/internal/util/identity.ts","../../../../../external/rxjs/internal/util/EmptyError.ts","../../../../../external/rxjs/internal/operators/map.ts","../../../../../external/rxjs/internal/OuterSubscriber.ts","../../../../../external/rxjs/internal/InnerSubscriber.ts","../../../../../external/rxjs/internal/util/subscribeToPromise.ts","../../../../../external/rxjs/internal/symbol/iterator.ts","../../../../../external/rxjs/internal/util/subscribeToIterable.ts","../../../../../external/rxjs/internal/util/subscribeToObservable.ts","../../../../../external/rxjs/internal/util/isArrayLike.ts","../../../../../external/rxjs/internal/util/isPromise.ts","../../../../../external/rxjs/internal/util/subscribeTo.ts","../../../../../external/rxjs/internal/operators/mergeMap.ts","../../../../../external/rxjs/internal/util/subscribeToResult.ts","../../../../../../../external/angular/packages/core/src/event_emitter.ts","../../../../../../../external/angular/packages/core/src/linker/template_ref.ts","../../../../../../../external/angular/packages/core/src/type.ts","../../../../../../../external/angular/packages/core/src/reflection/reflection_capabilities.ts","../../../../../../../external/angular/packages/core/src/metadata/directives.ts","../../../../../../../external/angular/packages/core/src/di/util.ts","../../../../../../../external/angular/packages/core/src/render3/jit/injectable.ts","../../../../../../../external/angular/packages/core/src/metadata/ng_module.ts","../../../../../../../external/angular/packages/core/src/di/injectable.ts","../../../../../../../external/angular/packages/core/src/errors.ts","../../../../../../../external/angular/packages/core/src/error_handler.ts","../../../../../external/rxjs/internal/operators/multicast.ts","../../../../../external/rxjs/internal/operators/share.ts","../../../../../../../external/angular/packages/core/src/util/lang.ts","../../../../../../../external/angular/packages/core/src/application_init.ts","../../../../../../../external/angular/packages/core/src/profile/wtf_impl.ts","../../../../../../../external/angular/packages/core/src/application_tokens.ts","../../../../../../../external/angular/packages/core/src/console.ts","../../../../../../../external/angular/packages/core/src/linker/compiler.ts","../../../../../../../external/angular/packages/core/src/profile/profile.ts","../../../../../../../external/angular/packages/core/src/zone/ng_zone.ts","../../../../../../../external/angular/packages/core/src/application_ref.ts","../../../../../../../external/angular/packages/core/src/testability/testability.ts","../../../../../external/rxjs/internal/observable/merge.ts","../../../../../external/rxjs/internal/util/isScheduler.ts","../../../../../external/rxjs/internal/operators/mergeAll.ts","../../../../../external/rxjs/internal/observable/from.ts","../../../../../external/rxjs/internal/util/isInteropObservable.ts","../../../../../external/rxjs/internal/observable/fromObservable.ts","../../../../../external/rxjs/internal/observable/fromPromise.ts","../../../../../external/rxjs/internal/util/isIterable.ts","../../../../../external/rxjs/internal/observable/fromIterable.ts","../../../../../../../external/angular/packages/core/src/linker/query_list.ts","../../../../../../../external/angular/packages/core/src/linker/view_container_ref.ts","../../../../../../../external/angular/packages/core/src/change_detection/change_detector_ref.ts","../../../../../../../external/angular/packages/core/src/debug/debug_node.ts","../../../../../../../external/angular/packages/core/src/change_detection/differs/keyvalue_differs.ts","../../../../../../../external/angular/packages/core/src/platform_core_providers.ts","../../../../../../../external/angular/packages/core/src/view/types.ts","../../../../../../../external/angular/packages/core/src/view/errors.ts","../../../../../../../external/angular/packages/core/src/view/util.ts","../../../../../../../external/angular/packages/core/src/view/element.ts","../../../../../../../external/angular/packages/core/src/view/ng_module.ts","../../../../../../../external/angular/packages/core/src/view/view_attach.ts","../../../../../../../external/angular/packages/core/src/view/refs.ts","../../../../../../../external/angular/packages/core/src/view/provider.ts","../../../../../../../external/angular/packages/core/src/view/query.ts","../../../../../../../external/angular/packages/core/src/view/ng_content.ts","../../../../../../../external/angular/packages/core/src/view/text.ts","../../../../../../../external/angular/packages/core/src/view/view.ts","../../../../../../../external/angular/packages/core/src/view/pure_expression.ts","../../../../../../../external/angular/packages/core/src/view/services.ts","../../../../../../../external/angular/packages/core/src/view/entrypoint.ts","../../../../../../../external/angular/packages/common/src/location/platform_location.ts","../../../../../../../external/angular/packages/common/src/dom_tokens.ts","../../../../../../../external/angular/packages/platform-browser/src/dom/dom_adapter.ts","../../../../../../../external/angular/packages/platform-browser/src/browser/browser_adapter.ts","../../../../../../../external/angular/packages/common/src/cookie.ts","../../../../../../../external/angular/packages/platform-browser/src/browser/generic_browser_adapter.ts","../../../../../../../external/angular/packages/platform-browser/src/dom/dom_tokens.ts","../../../../../../../external/angular/packages/platform-browser/src/browser/location/history.ts","../../../../../../../external/angular/packages/platform-browser/src/browser/location/browser_platform_location.ts","../../../../src/app.module.ts","../../../../../../../external/angular/packages/platform-browser/src/browser/testability.ts","../../../../../../../external/angular/packages/platform-browser/src/browser.ts","../../../../../../../external/angular/packages/platform-browser/src/dom/events/dom_events.ts","../../../../../../../external/angular/packages/common/src/platform_id.ts","../../../../src/app.module.ts.AppComponent.html","../../../../src/main.ngc.ts"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","NG_INJECTABLE_DEF","ngInjectableDef","defineInjectable","opts","providedIn","factory","undefined","getInjectableDef","type","InjectionToken","_desc","options","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","makeMetadataCtor","props","ctor","args","_i","values","apply","propName","makeParamDecorator","name","parentClass","metaCtor","ParamDecoratorFactory","annotationInstance","_a","bind","ParamDecorator","annotation","cls","unusedKey","index","parameters","annotationCls","__window","window","__self","self","WorkerGlobalScope","_global","global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","_injectImplementation","ViewEncapsulation","Inject","Optional","Self","SkipSelf","InjectFlags","_currentInjector","setCurrentInjector","injector","former","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","notFoundValue","injectableDef","get","injectArgs","types","arg","isArray","j","meta","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","slice","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","devModeEqual","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","obj","isJsObject","noop","SOURCE","_THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","providers","THROW_IF_NOT_FOUND","NULL","__NG_ELEMENT_ID__","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","NULL_INJECTOR$1","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","unshift","tokenPath","message","formatError","tokens","forEach","v","text","charAt","substr","context","parts","JSON","replace","APP_ROOT","ComponentRef","ComponentFactory","component","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","noComponentFactoryError","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","selector","ngContentSelectors","inputs","outputs","tslib_1.__extends","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","Renderer","RendererFactory2","Renderer2","SWITCH_RENDERER2_FACTORY","SecurityContext","Sanitizer","VERSION","Version","full","major","split","minor","patch","_devMode","_runModeLocked","isDevMode","isFunction","x","_enable_super_gross_mode_that_will_cause_bad_things","config","useDeprecatedSynchronousErrorHandling","hostReportError","err","setTimeout","empty","closed","complete","isObject","tryCatchTarget","errorObject","tryCatcher","tryCatch","UnsubscriptionErrorImpl","errors","UnsubscriptionError","Subscription","unsubscribe","_parents","_subscriptions","_unsubscribe","hasErrors","len","remove","flattenUnsubscriptionErrors","sub","add","teardown","subscription","_addParent","tmp","subscriptions","subscriptionIndex","splice","reduce","errs","rxSubscriber","Math","random","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","_parentSubscription","destination","emptyObserver","SafeSubscriber","rxSubscriberSymbol","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","observable","noop$1","Observable","subscribe","_isScalar","_subscribe","lift","operator","sink","toSubscriber","nextOrObserver","_trySubscribe","canReportError","observer","console","warn","promiseCtor","getPromiseCtor","reject","Symbol_observable","pipe","operations","pipeFromArray","fns","piped","input","prev","toPromise","ObjectUnsubscribedErrorImpl","ObjectUnsubscribedError","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","AnonymousSubject","copy","asObservable","refCount","refCountOperatorFunction","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","connectableProto","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","ConnectableSubscriber","higherOrderRefCount","connectableObservableDescriptor","writable","subscribeToArray","array","fromArray","scheduler","schedule","identity","MapOperator","project","thisArg","MapSubscriber","count","result","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","InnerSubscriber","subscribeToPromise","getSymbolIterator$1","subscribeToIterable","iterable","Symbol_iterator","item","return","subscribeToObservable","obs","TypeError","isArrayLike","isPromise","subscribeTo","MergeMapOperator","concurrent","Number","POSITIVE_INFINITY","MergeMapSubscriber","hasCompleted","buffer","active","_tryNext","_innerSub","ish","innerSubscriber","subscribeToResult","outerSubscriber","shift","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","schedulerFn","errorFn","completeFn","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","EMPTY_ARRAY","Injectable","makeDecorator","additionalProcessing","typeFn","DecoratorFactory","TypeDecorator","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","MulticastOperator","shareSubjectFactory","isPromise$1","trace","events","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","runInitializers","asyncInitPromises","initResult","all","catch","tslib_1.__param","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","Console","log","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","signature","wtfLeave","leave","scope","returnValue","leaveScope","NgZone","_b","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","noop$2","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","filter","updateCb","macroTasks","creationLocation","data","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","clear","getTestability","elem","getAllTestabilities","from","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","ALLOW_MULTIPLE_PLATFORMS","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","createPlatform","destroyed","PlatformRef","inits","init","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleType","moduleRef","exceptionHandler","onDestroy","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileModuleAsync","compileNgModuleFactory","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","destroy","module","listener","dst","objs","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","stableSub","unstableSub","merge$1","observables","last","isScheduler","mergeAll","mergeMap","resultSelector","isInteropObservable","fromObservable","fromPromise","isIterable","fromIterable","mapOperation","ii","merge","share","multicast","subjectOrSubjectFactory","multicastOperatorFunction","componentOrFactory","componentFactory","compRef","_unloadComponent","location","_loadComponent","ApplicationRef_1","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","ngOnDestroy","list","el","QueryList$1","QueryList","dirty","_results","changes","find","some","toArray","reset","flatten$2","flat","flatItem","flatten","first","notifyOnChanges","setDirty","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","listeners","DebugElement__PRE_R3__","addChild","references","providerTokens","attributes","classes","styles","childNodes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","node","triggerEventHandler","eventName","eventObj","element","parentNode","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","platformCore","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","oldValue","currValue","isFirstCheck","msg","viewDebugError","_addDebugContext","logError","viewDestroyedError","action","NOOP","_tokenKeyCache","tokenKey","size","_renderCompCount","checkBinding","def","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","expressionChangedAfterItHasBeenCheckedError","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","queryId","valueType","filterQueryId","splitDepsDsl","sourceName","configurable","getParentRenderElement","renderHost","renderParent","componentRendererType","encapsulation","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","renderer","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","k","appendChild","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","createElement","elDef","selectorOrNode","ns","createComment","parentEl","selectRootElement","ShadowDom","attrs","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","setElementAttribute","securityContext","renderValue","sanitizer","sanitize","removeAttribute","setElementClass","addClass","removeClass","setElementStyle","STYLE","unit","suffix","setStyle","removeStyle","setElementProperty","setProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","moduleProvideDef","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_providers","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","viewIndex","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","arr","EMPTY_CONTEXT","ComponentFactory_","viewDefFactory","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","viewRef_","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","attachEmbeddedView","move","currentIndex","previousIndex","moveEmbeddedView","oldViewIndex","newViewIndex","viewData","detach","createChangeDetectorRef","_viewContainerRef","_appRef","rootRenderNodes","renderNodes","markForCheck","fs","rendererFactory","begin","end","reattach","vcRef","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","destroyNode","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Set","has","RendererV1TokenKey","RendererV1","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","_createProviderInstance$1","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","searchView","findCompView","createInjector","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","directChildFlags","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","id","getQueryValue","childMatchedQueries","embeddedView","dvc","projectedView","queryValueType","prefix","_addInterpolationPart","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","validateNode","isComponent","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","rendererType","createRenderer","nodeData","compViewDef","createTemplateData","appendNgContent","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","directive","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdatePureExpressionInline","transform","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","params","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","createProdRootView","elInjector","createRootData","debugCreateRootView","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","debugCreateEmbeddedView","debugCreateComponentView","viewDefOverrides","debugCreateNgModuleRef","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","debugOverrideProvider","debugOverrideComponentView","comp","compFactory","getComponentViewDefinitionFactory","debugClearOverrides","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","prodCheckAndUpdateNode","checkIndex","prodCheckNoChangesNode","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","_currentAction","_currentView","_currentNodeIndex","debugSetCurrentNode","debugHandleEvent","debugUpdateDirectives","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","debugUpdateRenderer","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","toLowerCase","attr","DebugContext_","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","initServicesIfNeeded","services","createDebugServices","createProdServices","cloneNgModuleDefinition","PlatformLocation","DOCUMENT","_DOM","getDOM","nodeContains","_attrToPropMap","class","innerHtml","readonly","tabindex","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","_chromeNumKeyPadMap","A","B","C","D","E","F","G","H","I","J","K","M","N","O","`","","contains","compareDocumentPosition","urlParsingNode","BrowserDomAdapter","parse","templateHtml","makeCurrent","setRootDomAdapter","adapter","hasProperty","getProperty","logGroup","group","logGroupEnd","groupEnd","nodeA","nodeB","querySelector","querySelectorAll","on","evt","addEventListener","onAndCancel","removeEventListener","createMouseEvent","eventType","getDefaultDocument","createEvent","initEvent","preventDefault","isPrevented","defaultPrevented","getInnerHTML","innerHTML","getTemplateContent","isTemplateElement","content","getOuterHTML","outerHTML","nodeName","nodeValue","firstChild","childNodesAsList","clearNodes","replaceChild","insertAllBefore","insertAfter","setInnerHTML","getText","textContent","getValue","getChecked","checked","setChecked","createTemplate","html","tagName","doc","createElementNS","createTextNode","createScriptTag","attrName","attrValue","createStyleElement","css","createShadowRoot","getShadowRoot","shadowRoot","getHost","host","clone","cloneNode","getElementsByClassName","getElementsByTagName","classList","hasClass","stylename","getStyle","hasStyle","attributeMap","elAttrs","attrib","hasAttribute","attribute","hasAttributeNS","getAttribute","getAttributeNS","setAttributeNS","removeAttributeNS","templateAwareRoot","createHtmlDocument","document","implementation","createHTMLDocument","getBoundingClientRect","top","bottom","left","right","width","height","getTitle","title","setTitle","newTitle","elementMatches","isElementNode","msMatchesSelector","webkitMatchesSelector","isTextNode","nodeType","Node","TEXT_NODE","isCommentNode","COMMENT_NODE","ELEMENT_NODE","hasShadowRoot","HTMLElement","isShadowRoot","DocumentFragment","importIntoDoc","importNode","adoptNode","getHref","getEventKey","keyIdentifier","startsWith","fromCharCode","parseInt","getGlobalEventTarget","body","getHistory","history","getLocation","getBaseHref","href","getBaseElementHref","baseElement","relativePath","url","pathname","resetBaseElement","getUserAgent","navigator","userAgent","setData","getData","getComputedStyle","supportsWebAnimation","Element","performanceNow","performance","now","Date","getTime","supportsCookies","getCookie","cookieStr","encodeURIComponent","__values","tslib_1.__values","_c","cookie","eqIndex","_d","cookieValue","trim","decodeURIComponent","parseCookieValue","setCookie","GenericBrowserDomAdapter","_animationPrefix","_transitionEnd","element_1","domPrefixes","transEndEventNames_1","WebkitTransition","MozTransition","OTransition","transition","getDistributedNodes","resolveAndSetHref","baseUrl","supportsDOMEvents","supportsNativeShadowDOM","getAnimationPrefix","getTransitionEnd","supportsAnimation","DomAdapter","resourceLoaderType","commonDOCUMENT","supportsState","pushState","AppComponent","AppModule","BrowserPlatformLocation","_doc","_init","_history","getBaseHrefFromDOM","onPopState","onHashChange","newPath","search","hash","replaceState","forward","back","BrowserGetTestability","setTestabilityGetter","testabilities","didWork","decrement","didWork_","platformBrowser","initDomAdapter","_document","createNgModuleFactory","ngModuleType","defFactory","moduleDef","createRendererType2","_l","staticText","textDef","createComponentFactory","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","name_1","outputDefs","_e","resolveRendererType2","isFilled","None","directiveDef","depDefs","enableProdMode","AppModuleNgFactory"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function getClosureSafeProperty<T>(objWithPropertyToExtract: T): string {\n  for (let key in objWithPropertyToExtract) {\n    if (objWithPropertyToExtract[key] === getClosureSafeProperty as any) {\n      return key;\n    }\n  }\n  throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param target The target to set properties on\n * @param source The source of the property keys and values to set\n */\nexport function fillProperties(target: {[key: string]: string}, source: {[key: string]: string}) {\n  for (const key in source) {\n    if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getClosureSafeProperty} from '../util/property';\n\nexport const NG_COMPONENT_DEF = getClosureSafeProperty({ngComponentDef: getClosureSafeProperty});\nexport const NG_DIRECTIVE_DEF = getClosureSafeProperty({ngDirectiveDef: getClosureSafeProperty});\nexport const NG_INJECTABLE_DEF = getClosureSafeProperty({ngInjectableDef: getClosureSafeProperty});\nexport const NG_INJECTOR_DEF = getClosureSafeProperty({ngInjectorDef: getClosureSafeProperty});\nexport const NG_PIPE_DEF = getClosureSafeProperty({ngPipeDef: getClosureSafeProperty});\nexport const NG_MODULE_DEF = getClosureSafeProperty({ngModuleDef: getClosureSafeProperty});\nexport const NG_BASE_DEF = getClosureSafeProperty({ngBaseDef: getClosureSafeProperty});\n\n/**\n * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nexport const NG_ELEMENT_ID = getClosureSafeProperty({__NG_ELEMENT_ID__: getClosureSafeProperty});\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NG_INJECTABLE_DEF, NG_INJECTOR_DEF} from '../render3/fields';\nimport {Type} from '../type';\n\nimport {ClassProvider, ClassSansProvider, ConstructorProvider, ConstructorSansProvider, ExistingProvider, ExistingSansProvider, FactoryProvider, FactorySansProvider, StaticClassProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from './provider';\n\n/**\n * Information about how a type or `InjectionToken` interfaces with the DI system.\n *\n * At a minimum, this includes a `factory` which defines how to create the given type `T`, possibly\n * requesting injection of other types if necessary.\n *\n * Optionally, a `providedIn` parameter specifies that the given type belongs to a particular\n * `InjectorDef`, `NgModule`, or a special scope (e.g. `'root'`). A value of `null` indicates\n * that the injectable does not belong to any scope.\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectableDef<T> {\n  /**\n   * Specifies that the given type belongs to a particular injector:\n   * - `InjectorType` such as `NgModule`,\n   * - `'root'` the root injector\n   * - `'any'` all injectors.\n   * - `null`, does not belong to any injector. Must be explicitly listed in the injector\n   *   `providers`.\n   */\n  providedIn: InjectorType<any>|'root'|'any'|null;\n\n  /**\n   * Factory method to execute to create an instance of the injectable.\n   */\n  factory: () => T;\n\n  /**\n   * In a case of no explicit injector, a location where the instance of the injectable is stored.\n   */\n  value: T|undefined;\n}\n\n/**\n * Information about the providers to be included in an `Injector` as well as how the given type\n * which carries the information should be created by the DI system.\n *\n * An `InjectorDef` can import other types which have `InjectorDefs`, forming a deep nested\n * structure of providers with a defined priority (identically to how `NgModule`s also have\n * an import/dependency structure).\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectorDef<T> {\n  factory: () => T;\n\n  // TODO(alxhub): Narrow down the type here once decorators properly change the return type of the\n  // class they are decorating (to add the ngInjectableDef property for example).\n  providers: (Type<any>|ValueProvider|ExistingProvider|FactoryProvider|ConstructorProvider|\n              StaticClassProvider|ClassProvider|any[])[];\n\n  imports: (InjectorType<any>|InjectorTypeWithProviders<any>)[];\n}\n\n/**\n * A `Type` which has an `InjectableDef` static field.\n *\n * `InjectableDefType`s contain their own Dependency Injection metadata and are usable in an\n * `InjectorDef`-based `StaticInjector.\n *\n * @publicApi\n */\nexport interface InjectableType<T> extends Type<T> {\n  /**\n   * Opaque type whose structure is highly version dependent. Do not rely on any properties.\n   */\n  ngInjectableDef: never;\n}\n\n/**\n * A type which has an `InjectorDef` static field.\n *\n * `InjectorDefTypes` can be used to configure a `StaticInjector`.\n *\n * @publicApi\n */\nexport interface InjectorType<T> extends Type<T> {\n  /**\n   * Opaque type whose structure is highly version dependent. Do not rely on any properties.\n   */\n  ngInjectorDef: never;\n}\n\n/**\n * Describes the `InjectorDef` equivalent of a `ModuleWithProviders`, an `InjectorDefType` with an\n * associated array of providers.\n *\n * Objects of this type can be listed in the imports section of an `InjectorDef`.\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectorTypeWithProviders<T> {\n  ngModule: InjectorType<T>;\n  providers?: (Type<any>|ValueProvider|ExistingProvider|FactoryProvider|ConstructorProvider|\n               StaticClassProvider|ClassProvider|any[])[];\n}\n\n\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @publicApi\n */\nexport function defineInjectable<T>(opts: {\n  providedIn?: Type<any>| 'root' | 'any' | null,\n  factory: () => T,\n}): never {\n  return ({\n    providedIn: opts.providedIn as any || null, factory: opts.factory, value: undefined,\n  } as InjectableDef<T>) as never;\n}\n\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @publicApi\n */\nexport function defineInjector(options: {factory: () => any, providers?: any[], imports?: any[]}):\n    never {\n  return ({\n    factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n  } as InjectorDef<any>) as never;\n}\n\n/**\n * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have `ngInjectableDef`\n */\nexport function getInjectableDef<T>(type: any): InjectableDef<T>|null {\n  return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? (type as any)[NG_INJECTABLE_DEF] : null;\n}\n\n/**\n * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have `ngInjectorDef`\n */\nexport function getInjectorDef<T>(type: any): InjectorDef<T>|null {\n  return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? (type as any)[NG_INJECTOR_DEF] : null;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n\nimport {defineInjectable} from './defs';\n\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Example\n *\n * ### Plain InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n *\n * @publicApi\n */\nexport class InjectionToken<T> {\n  /** @internal */\n  readonly ngMetadataName = 'InjectionToken';\n\n  readonly ngInjectableDef: never|undefined;\n\n  constructor(protected _desc: string, options?: {\n    providedIn?: Type<any>| 'root' | null,\n    factory: () => T\n  }) {\n    if (options !== undefined) {\n      this.ngInjectableDef = defineInjectable({\n        providedIn: options.providedIn || 'root',\n        factory: options.factory,\n      });\n    } else {\n      this.ngInjectableDef = undefined;\n    }\n  }\n\n  toString(): string { return `InjectionToken ${this._desc}`; }\n}\n\nexport interface InjectableDefToken<T> extends InjectionToken<T> { ngInjectableDef: never; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n *\n * @publicApi\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n}\n\nexport const ANNOTATIONS = '__annotations__';\nexport const PARAMETERS = '__parameters__';\nexport const PROP_METADATA = '__prop__metadata__';\n\n/**\n * @suppress {globalThis}\n */\nexport function makeDecorator<T>(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    additionalProcessing?: (type: Type<T>) => void,\n    typeFn?: (type: Type<T>, ...args: any[]) => void):\n    {new (...args: any[]): any; (...args: any[]): any; (...args: any[]): (cls: any) => any;} {\n  const metaCtor = makeMetadataCtor(props);\n\n  function DecoratorFactory(...args: any[]): (cls: Type<T>) => any {\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, ...args);\n      return this;\n    }\n\n    const annotationInstance = new (DecoratorFactory as any)(...args);\n    return function TypeDecorator(cls: Type<T>) {\n      if (typeFn) typeFn(cls, ...args);\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n          (cls as any)[ANNOTATIONS] :\n          Object.defineProperty(cls, ANNOTATIONS, {value: []})[ANNOTATIONS];\n      annotations.push(annotationInstance);\n\n\n      if (additionalProcessing) additionalProcessing(cls);\n\n      return cls;\n    };\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.ngMetadataName = name;\n  (DecoratorFactory as any).annotationCls = DecoratorFactory;\n  return DecoratorFactory as any;\n}\n\nfunction makeMetadataCtor(props?: (...args: any[]) => any): any {\n  return function ctor(...args: any[]) {\n    if (props) {\n      const values = props(...args);\n      for (const propName in values) {\n        this[propName] = values[propName];\n      }\n    }\n  };\n}\n\nexport function makeParamDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const metaCtor = makeMetadataCtor(props);\n  function ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const annotationInstance = new (<any>ParamDecoratorFactory)(...args);\n\n    (<any>ParamDecorator).annotation = annotationInstance;\n    return ParamDecorator;\n\n    function ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const parameters = cls.hasOwnProperty(PARAMETERS) ?\n          (cls as any)[PARAMETERS] :\n          Object.defineProperty(cls, PARAMETERS, {value: []})[PARAMETERS];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      (parameters[index] = parameters[index] || []).push(annotationInstance);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.ngMetadataName = name;\n  (<any>ParamDecoratorFactory).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n\nexport function makePropDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    additionalProcessing?: (target: any, name: string, ...args: any[]) => void): any {\n  const metaCtor = makeMetadataCtor(props);\n\n  function PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const decoratorInstance = new (<any>PropDecoratorFactory)(...args);\n\n    function PropDecorator(target: any, name: string) {\n      const constructor = target.constructor;\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const meta = constructor.hasOwnProperty(PROP_METADATA) ?\n          (constructor as any)[PROP_METADATA] :\n          Object.defineProperty(constructor, PROP_METADATA, {value: {}})[PROP_METADATA];\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n\n      if (additionalProcessing) additionalProcessing(target, name, ...args);\n    }\n\n    return PropDecorator;\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.ngMetadataName = name;\n  (<any>PropDecoratorFactory).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Type} from '../type';\nimport {makeParamDecorator, makePropDecorator} from '../util/decorators';\n\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * @usageNotes\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @publicApi\n */\nexport const ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken<any>('AnalyzeForEntryComponents');\n\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * @publicApi\n */\nexport interface AttributeDecorator {\n  /**\n   * Specifies that a constant attribute value should be injected.\n   *\n   * The directive can inject constant string literals of host element attributes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * Suppose we have an `<input>` element and want to know its `type`.\n   *\n   * ```html\n   * <input type=\"text\">\n   * ```\n   *\n   * A decorator can inject string literal `text` like so:\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeMetadata'}\n   *\n   * ### Example as TypeScript Decorator\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeFactory'}\n   *\n   * ### Example as ES5 annotation\n   *\n   * ```\n   * var MyComponent = function(title) {\n   *   ...\n   * };\n   *\n   * MyComponent.annotations = [\n   *   new ng.Component({...})\n   * ]\n   * MyComponent.parameters = [\n   *   [new ng.Attribute('title')]\n   * ]\n   * ```\n   *\n   * @publicApi\n   */\n  (name: string): any;\n  new (name: string): Attribute;\n}\n\n\n/**\n * Type of the Attribute metadata.\n *\n * @publicApi\n */\nexport interface Attribute { attributeName?: string; }\n\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Attribute: AttributeDecorator =\n    makeParamDecorator('Attribute', (attributeName?: string) => ({attributeName}));\n\n/**\n * Type of the Query metadata.\n *\n * @publicApi\n */\nexport interface Query {\n  descendants: boolean;\n  first: boolean;\n  read: any;\n  isViewQuery: boolean;\n  selector: any;\n}\n\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n *\n * @publicApi\n */\nexport abstract class Query {}\n\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * @see `ContentChildren`.\n * @publicApi\n */\nexport interface ContentChildrenDecorator {\n  /**\n   * Configures a content query.\n   *\n   * You can use ContentChildren to get the `QueryList` of elements or directives from the\n   * content DOM. Any time a child element is added, removed, or moved, the query list will be\n   * updated, and the changes observable of the query list will emit a new value.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **descendants** - include only direct children or all descendants.\n   * * **read** - read a different token from the queried elements.\n   *\n   * @usageNotes\n   * ### Basic Example\n   *\n   * Here is a simple demonstration of how the `ContentChildren` decorator can be used.\n   *\n   * {@example core/di/ts/contentChildren/content_children_howto.ts region='HowTo'}\n   *\n   * ### Tab-pane Example\n   *\n   * Here is a slightly more realistic example that shows how `ContentChildren` decorators\n   * can be used to implement a tab pane component.\n   *\n   * {@example core/di/ts/contentChildren/content_children_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query;\n}\n\n/**\n * Type of the ContentChildren metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nexport type ContentChildren = Query;\n\n/**\n * ContentChildren decorator and metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nexport const ContentChildren: ContentChildrenDecorator = makePropDecorator(\n    'ContentChildren',\n    (selector?: any, data: any = {}) =>\n        ({selector, first: false, isViewQuery: false, descendants: false, ...data}),\n    Query);\n\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n * @publicApi\n */\nexport interface ContentChildDecorator {\n  /**\n   * Configures a content query.\n   *\n   * You can use ContentChild to get the first element or the directive matching the selector from\n   * the content DOM. If the content DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried element.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ContentChild;\n}\n\n/**\n * Type of the ContentChild metadata.\n *\n * @see `ContentChild`.\n *\n * @publicApi\n */\nexport type ContentChild = Query;\n\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n *\n * @publicApi\n */\nexport const ContentChild: ContentChildDecorator = makePropDecorator(\n    'ContentChild', (selector?: any, data: any = {}) =>\n                        ({selector, first: true, isViewQuery: false, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * @see `ViewChildren`.\n *\n * @publicApi\n */\nexport interface ViewChildrenDecorator {\n  /**\n   * Configures a view query.\n   *\n   * You can use ViewChildren to get the `QueryList` of elements or directives from the\n   * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChildren;\n}\n\n/**\n * Type of the ViewChildren metadata.\n *\n * @publicApi\n */\nexport type ViewChildren = Query;\n\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const ViewChildren: ViewChildrenDecorator = makePropDecorator(\n    'ViewChildren', (selector?: any, data: any = {}) =>\n                        ({selector, first: false, isViewQuery: true, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * @see `ViewChild`.\n * @publicApi\n */\nexport interface ViewChildDecorator {\n  /**\n   * @description\n   * Property decorator that configures a view query.\n   * The change detector looks for the first element or the directive matching the selector\n   * in the view DOM. If the view DOM changes, and a new child matches the selector,\n   * the property is updated.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Supported selectors include:\n   *   * any class with the `@Component` or `@Directive` decorator\n   *   * a template reference variable as a string (e.g. query `<my-component #cmp></my-component>\n   * with `@ViewChild('cmp')`)\n   *   * any provider defined in the child component tree of the current component (e.g.\n   * `@ViewChild(SomeService) someService: SomeService`)\n   *   * any provider defined through a string token (e.g. `@ViewChild('someToken') someTokenVal:\n   * any`)\n   *   * a `TemplateRef` (e.g. query `<ng-template></ng-template>` with `@ViewChild(TemplateRef)\n   * template;`)\n   *\n   * @usageNotes\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChild/view_child_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChild;\n}\n\n/**\n * Type of the ViewChild metadata.\n *\n * @publicApi\n */\nexport type ViewChild = Query;\n\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const ViewChild: ViewChildDecorator = makePropDecorator(\n    'ViewChild', (selector: any, data: any) =>\n                     ({selector, first: true, isViewQuery: true, descendants: true, ...data}),\n    Query);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nconst _global: {[name: string]: any} = __global || __window || __self;\n\nconst promise: Promise<any> = Promise.resolve(0);\n/**\n * Attention: whenever providing a new value, be sure to add an\n * entry into the corresponding `....externs.js` file,\n * so that closure won't use that global for its purposes.\n */\nexport {_global as global};\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet _symbolIterator: any = null;\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            (Map as any).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n\nexport function scheduleMicroTask(fn: Function) {\n  if (typeof Zone === 'undefined') {\n    // use promise to schedule microTask instead of use Zone\n    promise.then(() => { fn && fn.apply(null, null); });\n  } else {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n  }\n}\n\n// JS has NaN !== NaN\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token instanceof Array) {\n    return '[' + token.map(stringify).join(', ') + ']';\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * Convince closure compiler that the wrapped function has no side-effects.\n *\n * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n * It is important that the return value for the `noSideEffects` function be assigned\n * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n * compiler.\n */\nexport function noSideEffects(fn: () => void): string {\n  return '' + {toString: fn};\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {getClosureSafeProperty} from '../util/property';\n\n\n\n/**\n * An interface that a function passed into {@link forwardRef} has to implement.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * @publicApi\n */\nexport interface ForwardRefFn { (): any; }\n\nconst __forward_ref__ = getClosureSafeProperty({__forward_ref__: getClosureSafeProperty});\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @publicApi\n */\nexport function forwardRef(forwardRefFn: ForwardRefFn): Type<any> {\n  (<any>forwardRefFn).__forward_ref__ = forwardRef;\n  (<any>forwardRefFn).toString = function() { return stringify(this()); };\n  return (<Type<any>><any>forwardRefFn);\n}\n\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @publicApi\n */\nexport function resolveForwardRef<T>(type: T): T {\n  const fn: any = type;\n  if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n      fn.__forward_ref__ === forwardRef) {\n    return fn();\n  } else {\n    return type;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/ts/metadata/encapsulation.ts region='longform'}\n *\n * @publicApi\n */\nexport enum ViewEncapsulation {\n  /**\n   * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n   * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n   * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n   * selectors.\n   *\n   * This is the default option.\n   */\n  Emulated = 0,\n  /**\n   * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n   * Use the native encapsulation mechanism of the renderer.\n   *\n   * For the DOM this means using the deprecated [Shadow DOM\n   * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * creating a ShadowRoot for Component's Host Element.\n   */\n  Native = 1,\n  /**\n   * Don't provide any template or style encapsulation.\n   */\n  None = 2,\n\n  /**\n   * Use Shadow DOM to encapsulate styles.\n   *\n   * For the DOM this means using modern [Shadow\n   * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * creating a ShadowRoot for Component's Host Element.\n   */\n  ShadowDom = 3\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {InjectableDef, getInjectableDef} from './defs';\nimport {InjectionToken} from './injection_token';\nimport {Injector} from './injector';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\n\n/**\n * Injection flags for DI.\n *\n * @publicApi\n */\nexport enum InjectFlags {\n  // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n\n  Default = 0b0000,\n\n  /**\n   * Specifies that an injector should retrieve a dependency from any injector until reaching the\n   * host element of the current component. (Only used with Element Injector)\n   */\n  Host = 0b0001,\n  /** Don't descend into ancestors of the node requesting injection. */\n  Self = 0b0010,\n  /** Skip the node that is requesting injection. */\n  SkipSelf = 0b0100,\n  /** Inject `defaultValue` instead if token not found. */\n  Optional = 0b1000,\n}\n\n\n\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nlet _currentInjector: Injector|undefined|null = undefined;\n\nexport function setCurrentInjector(injector: Injector | null | undefined): Injector|undefined|null {\n  const former = _currentInjector;\n  _currentInjector = injector;\n  return former;\n}\n\n/**\n * Current implementation of inject.\n *\n * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n * way for two reasons:\n *  1. `Injector` should not depend on ivy logic.\n *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n */\nlet _injectImplementation: (<T>(token: Type<T>| InjectionToken<T>, flags: InjectFlags) => T | null)|\n    undefined;\n\n/**\n * Sets the current inject implementation.\n */\nexport function setInjectImplementation(\n    impl: (<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags) => T | null) | undefined):\n    (<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags) => T | null)|undefined {\n  const previous = _injectImplementation;\n  _injectImplementation = impl;\n  return previous;\n}\n\nexport function injectInjectorOnly<T>(token: Type<T>| InjectionToken<T>): T;\nexport function injectInjectorOnly<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags): T|\n    null;\nexport function injectInjectorOnly<T>(\n    token: Type<T>| InjectionToken<T>, flags = InjectFlags.Default): T|null {\n  if (_currentInjector === undefined) {\n    throw new Error(`inject() must be called from an injection context`);\n  } else if (_currentInjector === null) {\n    return injectRootLimpMode(token, undefined, flags);\n  } else {\n    return _currentInjector.get(token, flags & InjectFlags.Optional ? null : undefined, flags);\n  }\n}\n\n/**\n * Injects a token from the currently active injector.\n *\n * This function must be used in the context of a factory function such as one defined for an\n * `InjectionToken`, and will throw an error if not called from such a context.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n *\n * Within such a factory function `inject` is utilized to request injection of a dependency, instead\n * of providing an additional array of dependencies as was common to do with `useFactory` providers.\n * `inject` is faster and more type-safe.\n *\n * @publicApi\n */\nexport function inject<T>(token: Type<T>| InjectionToken<T>): T;\nexport function inject<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags): T|null;\nexport function inject<T>(token: Type<T>| InjectionToken<T>, flags = InjectFlags.Default): T|null {\n  return (_injectImplementation || injectInjectorOnly)(token, flags);\n}\n\n/**\n * Injects `root` tokens in limp mode.\n *\n * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n * `InjectableDef`.\n */\nexport function injectRootLimpMode<T>(\n    token: Type<T>| InjectionToken<T>, notFoundValue: T | undefined, flags: InjectFlags): T|null {\n  const injectableDef: InjectableDef<T>|null = getInjectableDef(token);\n  if (injectableDef && injectableDef.providedIn == 'root') {\n    return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                                               injectableDef.value;\n  }\n  if (flags & InjectFlags.Optional) return null;\n  if (notFoundValue !== undefined) return notFoundValue;\n  throw new Error(`Injector: NOT_FOUND [${stringify(token)}]`);\n}\n\nexport function injectArgs(types: (Type<any>| InjectionToken<any>| any[])[]): any[] {\n  const args: any[] = [];\n  for (let i = 0; i < types.length; i++) {\n    const arg = types[i];\n    if (Array.isArray(arg)) {\n      if (arg.length === 0) {\n        throw new Error('Arguments array must have arguments.');\n      }\n      let type: Type<any>|undefined = undefined;\n      let flags: InjectFlags = InjectFlags.Default;\n\n      for (let j = 0; j < arg.length; j++) {\n        const meta = arg[j];\n        if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n          flags |= InjectFlags.Optional;\n        } else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n          flags |= InjectFlags.SkipSelf;\n        } else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n          flags |= InjectFlags.Self;\n        } else if (meta instanceof Inject) {\n          type = meta.token;\n        } else {\n          type = meta;\n        }\n      }\n\n      args.push(inject(type !, flags));\n    } else {\n      args.push(inject(arg));\n    }\n  }\n  return args;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ClassSansProvider, ConstructorProvider, ConstructorSansProvider, ExistingProvider, ExistingSansProvider, FactoryProvider, FactorySansProvider, StaticClassProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from '../di/provider';\nimport {ReflectionCapabilities} from '../reflection/reflection_capabilities';\nimport {Type} from '../type';\nimport {makeDecorator, makeParamDecorator} from '../util/decorators';\nimport {EMPTY_ARRAY} from '../view/util';\n\n\n/**\n * Type of the Inject decorator / constructor function.\n *\n * @publicApi\n */\nexport interface InjectDecorator {\n  /**\n   * A constructor parameter decorator that specifies a\n   * custom provider of a dependency.\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   * The following example shows a class constructor that specifies a\n   * custom provider of a dependency using the parameter decorator.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Inject'}\n   *\n   * When `@Inject()` is not present, the `Injector` uses the type annotation of the\n   * parameter as the provider.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectWithoutDecorator'}\n   */\n  (token: any): any;\n  new (token: any): Inject;\n}\n\n/**\n * Type of the Inject metadata.\n *\n * @publicApi\n */\nexport interface Inject {\n  /**\n   * Injector token that maps to the dependency to be injected.\n   */\n  token: any;\n}\n\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Inject: InjectDecorator = makeParamDecorator('Inject', (token: any) => ({token}));\n\n\n/**\n * Type of the Optional decorator / constructor function.\n *\n * @publicApi\n */\nexport interface OptionalDecorator {\n  /**\n   * A constructor parameter decorator that marks a dependency as optional.\n   *\n   * The DI framework provides null if the dependency is not found.\n   * For example, the following code allows the possibility of a null result:\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Optional'}\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   */\n  (): any;\n  new (): Optional;\n}\n\n/**\n * Type of the Optional metadata.\n *\n * @publicApi\n */\nexport interface Optional {}\n\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Optional: OptionalDecorator = makeParamDecorator('Optional');\n\n/**\n * Type of the Self decorator / constructor function.\n *\n * @publicApi\n */\nexport interface SelfDecorator {\n  /**\n   * A constructor parameter decorator that tells the DI framework\n   * to retrieve a dependency only from the local injector.\n   *\n   * In the following example, the dependency can be resolved\n   * by the local injector when instantiating the class itself, but not\n   * when instantiating a child.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Self'}\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   *\n   */\n  (): any;\n  new (): Self;\n}\n\n/**\n * Type of the Self metadata.\n *\n * @publicApi\n */\nexport interface Self {}\n\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Self: SelfDecorator = makeParamDecorator('Self');\n\n\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * @publicApi\n */\nexport interface SkipSelfDecorator {\n  /**\n   * A constructor parameter decorator that tells the DI framework\n   * that dependency resolution should start from the parent injector.\n   *\n   * In the following example, the dependency can be resolved when\n   * instantiating a child, but not when instantiating the class itself.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='SkipSelf'}\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   *\n   */\n  (): any;\n  new (): SkipSelf;\n}\n\n/**\n * Type of the SkipSelf metadata.\n *\n * @publicApi\n */\nexport interface SkipSelf {}\n\n/**\n * SkipSelf decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const SkipSelf: SkipSelfDecorator = makeParamDecorator('SkipSelf');\n\n/**\n * Type of the Host decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostDecorator {\n  /**\n   * A constructor parameter decorator that tells the DI framework\n   * to retrieve a dependency from any injector until\n   * reaching the host element of the current component.\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Host'}\n   */\n  (): any;\n  new (): Host;\n}\n\n/**\n * Type of the Host metadata.\n *\n * @publicApi\n */\nexport interface Host {}\n\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Host: HostDecorator = makeParamDecorator('Host');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\n\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n\nexport function normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value != null ? value.toString().slice(0, 30) : value;\n  } catch (e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getSymbolIterator, looseIdentical} from '../util';\n\nexport function devModeEqual(a: any, b: any): boolean {\n  const isListLikeIterableA = isListLikeIterable(a);\n  const isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n * @publicApi\n */\nexport class WrappedValue {\n  /** @deprecated from 5.3, use `unwrap()` instead - will switch to protected */\n  wrapped: any;\n\n  constructor(value: any) { this.wrapped = value; }\n\n  /** Creates a wrapped value. */\n  static wrap(value: any): WrappedValue { return new WrappedValue(value); }\n\n  /**\n   * Returns the underlying value of a wrapped value.\n   * Returns the given `value` when it is not wrapped.\n   **/\n  static unwrap(value: any): any { return WrappedValue.isWrapped(value) ? value.wrapped : value; }\n\n  /** Returns true if `value` is a wrapped value. */\n  static isWrapped(value: any): value is WrappedValue { return value instanceof WrappedValue; }\n}\n\n/**\n * Represents a basic change from a previous to a new value.\n *\n * @publicApi\n */\nexport class SimpleChange {\n  constructor(public previousValue: any, public currentValue: any, public firstChange: boolean) {}\n\n  /**\n   * Check whether the new value is the first value assigned.\n   */\n  isFirstChange(): boolean { return this.firstChange; }\n}\n\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const iterator1 = a[getSymbolIterator()]();\n  const iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const item1 = iterator1.next();\n    const item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const iterator = obj[getSymbolIterator()]();\n    let item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function noop(...args: any[]): any {\n  // Do nothing.\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {injectInjector} from '../render3/di';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {noop} from '../util/noop';\nimport {getClosureSafeProperty} from '../util/property';\n\nimport {defineInjectable} from './defs';\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {InjectFlags, inject} from './injector_compatibility';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ConstructorProvider, ExistingProvider, FactoryProvider, StaticClassProvider, StaticProvider, ValueProvider} from './provider';\n\nexport const SOURCE = '__source';\nconst _THROW_IF_NOT_FOUND = new Object();\nexport const THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @publicApi\n */\nexport const INJECTOR = new InjectionToken<Injector>('INJECTOR');\n\nexport class NullInjector implements Injector {\n  get(token: any, notFoundValue: any = _THROW_IF_NOT_FOUND): any {\n    if (notFoundValue === _THROW_IF_NOT_FOUND) {\n      // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n      // reason why correctly written application should cause this exception.\n      // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n      // if(ngDevMode) debugger;\n      throw new Error(`NullInjectorError: No provider for ${stringify(token)}!`);\n    }\n    return notFoundValue;\n  }\n}\n\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * @publicApi\n */\nexport abstract class Injector {\n  static THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n  static NULL: Injector = new NullInjector();\n\n  /**\n   * Retrieves an instance from the injector based on the provided token.\n   * @returns The instance from the injector if defined, otherwise the `notFoundValue`.\n   * @throws When the `notFoundValue` is `undefined` or `Injector.THROW_IF_NOT_FOUND`.\n   */\n  abstract get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  /**\n   * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n   * @suppress {duplicate}\n   */\n  abstract get(token: any, notFoundValue?: any): any;\n\n  /**\n   * @deprecated from v5 use the new signature Injector.create(options)\n   */\n  static create(providers: StaticProvider[], parent?: Injector): Injector;\n\n  static create(options: {providers: StaticProvider[], parent?: Injector, name?: string}): Injector;\n\n  /**\n   * Create a new Injector which is configure using `StaticProvider`s.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n   */\n  static create(\n      options: StaticProvider[]|{providers: StaticProvider[], parent?: Injector, name?: string},\n      parent?: Injector): Injector {\n    if (Array.isArray(options)) {\n      return new StaticInjector(options, parent);\n    } else {\n      return new StaticInjector(options.providers, options.parent, options.name || null);\n    }\n  }\n\n  /** @nocollapse */\n  static ngInjectableDef = defineInjectable({\n    providedIn: 'any' as any,\n    factory: () => inject(INJECTOR),\n  });\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => Injector = () => SWITCH_INJECTOR_FACTORY();\n}\n\nexport const SWITCH_INJECTOR_FACTORY__POST_R3__ = function() {\n  return injectInjector();\n};\nconst SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\nconst SWITCH_INJECTOR_FACTORY: typeof injectInjector = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n\n\nconst IDENT = function<T>(value: T): T {\n  return value;\n};\nconst EMPTY = <any[]>[];\nconst CIRCULAR = IDENT;\nconst MULTI_PROVIDER_FN = function(): any[] {\n  return Array.prototype.slice.call(arguments);\n};\nexport const USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\nconst NG_TOKEN_PATH = 'ngTokenPath';\nconst NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nconst enum OptionFlags {\n  Optional = 1 << 0,\n  CheckSelf = 1 << 1,\n  CheckParent = 1 << 2,\n  Default = CheckSelf | CheckParent\n}\nconst NULL_INJECTOR = Injector.NULL;\nconst NEW_LINE = /\\n/gm;\nconst NO_NEW_LINE = 'Éµ';\n\nexport class StaticInjector implements Injector {\n  readonly parent: Injector;\n  readonly source: string|null;\n\n  private _records: Map<any, Record>;\n\n  constructor(\n      providers: StaticProvider[], parent: Injector = NULL_INJECTOR, source: string|null = null) {\n    this.parent = parent;\n    this.source = source;\n    const records = this._records = new Map<any, Record>();\n    records.set(\n        Injector, <Record>{token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false});\n    records.set(\n        INJECTOR, <Record>{token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false});\n    recursivelyProcessProviders(records, providers);\n  }\n\n  get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any): any;\n  get(token: any, notFoundValue?: any, flags: InjectFlags = InjectFlags.Default): any {\n    const record = this._records.get(token);\n    try {\n      return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n    } catch (e) {\n      const tokenPath: any[] = e[NG_TEMP_TOKEN_PATH];\n      if (token[SOURCE]) {\n        tokenPath.unshift(token[SOURCE]);\n      }\n      e.message = formatError('\\n' + e.message, tokenPath, this.source);\n      e[NG_TOKEN_PATH] = tokenPath;\n      e[NG_TEMP_TOKEN_PATH] = null;\n      throw e;\n    }\n  }\n\n  toString() {\n    const tokens = <string[]>[], records = this._records;\n    records.forEach((v, token) => tokens.push(stringify(token)));\n    return `StaticInjector[${tokens.join(', ')}]`;\n  }\n}\n\ntype SupportedProvider =\n    ValueProvider | ExistingProvider | StaticClassProvider | ConstructorProvider | FactoryProvider;\n\ninterface Record {\n  fn: Function;\n  useNew: boolean;\n  deps: DependencyRecord[];\n  value: any;\n}\n\ninterface DependencyRecord {\n  token: any;\n  options: number;\n}\n\ntype TokenPath = Array<any>;\n\nfunction resolveProvider(provider: SupportedProvider): Record {\n  const deps = computeDeps(provider);\n  let fn: Function = IDENT;\n  let value: any = EMPTY;\n  let useNew: boolean = false;\n  let provide = resolveForwardRef(provider.provide);\n  if (USE_VALUE in provider) {\n    // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n    value = (provider as ValueProvider).useValue;\n  } else if ((provider as FactoryProvider).useFactory) {\n    fn = (provider as FactoryProvider).useFactory;\n  } else if ((provider as ExistingProvider).useExisting) {\n    // Just use IDENT\n  } else if ((provider as StaticClassProvider).useClass) {\n    useNew = true;\n    fn = resolveForwardRef((provider as StaticClassProvider).useClass);\n  } else if (typeof provide == 'function') {\n    useNew = true;\n    fn = provide;\n  } else {\n    throw staticError(\n        'StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable',\n        provider);\n  }\n  return {deps, fn, useNew, value};\n}\n\nfunction multiProviderMixError(token: any) {\n  return staticError('Cannot mix multi providers and regular providers', token);\n}\n\nfunction recursivelyProcessProviders(records: Map<any, Record>, provider: StaticProvider) {\n  if (provider) {\n    provider = resolveForwardRef(provider);\n    if (provider instanceof Array) {\n      // if we have an array recurse into the array\n      for (let i = 0; i < provider.length; i++) {\n        recursivelyProcessProviders(records, provider[i]);\n      }\n    } else if (typeof provider === 'function') {\n      // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n      // error messages\n      throw staticError('Function/Class not supported', provider);\n    } else if (provider && typeof provider === 'object' && provider.provide) {\n      // At this point we have what looks like a provider: {provide: ?, ....}\n      let token = resolveForwardRef(provider.provide);\n      const resolvedProvider = resolveProvider(provider);\n      if (provider.multi === true) {\n        // This is a multi provider.\n        let multiProvider: Record|undefined = records.get(token);\n        if (multiProvider) {\n          if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n            throw multiProviderMixError(token);\n          }\n        } else {\n          // Create a placeholder factory which will look up the constituents of the multi provider.\n          records.set(token, multiProvider = <Record>{\n            token: provider.provide,\n            deps: [],\n            useNew: false,\n            fn: MULTI_PROVIDER_FN,\n            value: EMPTY\n          });\n        }\n        // Treat the provider as the token.\n        token = provider;\n        multiProvider.deps.push({token, options: OptionFlags.Default});\n      }\n      const record = records.get(token);\n      if (record && record.fn == MULTI_PROVIDER_FN) {\n        throw multiProviderMixError(token);\n      }\n      records.set(token, resolvedProvider);\n    } else {\n      throw staticError('Unexpected provider', provider);\n    }\n  }\n}\n\nfunction tryResolveToken(\n    token: any, record: Record | undefined, records: Map<any, Record>, parent: Injector,\n    notFoundValue: any, flags: InjectFlags): any {\n  try {\n    return resolveToken(token, record, records, parent, notFoundValue, flags);\n  } catch (e) {\n    // ensure that 'e' is of type Error.\n    if (!(e instanceof Error)) {\n      e = new Error(e);\n    }\n    const path: any[] = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n    path.unshift(token);\n    if (record && record.value == CIRCULAR) {\n      // Reset the Circular flag.\n      record.value = EMPTY;\n    }\n    throw e;\n  }\n}\n\nfunction resolveToken(\n    token: any, record: Record | undefined, records: Map<any, Record>, parent: Injector,\n    notFoundValue: any, flags: InjectFlags): any {\n  let value;\n  if (record && !(flags & InjectFlags.SkipSelf)) {\n    // If we don't have a record, this implies that we don't own the provider hence don't know how\n    // to resolve it.\n    value = record.value;\n    if (value == CIRCULAR) {\n      throw Error(NO_NEW_LINE + 'Circular dependency');\n    } else if (value === EMPTY) {\n      record.value = CIRCULAR;\n      let obj = undefined;\n      let useNew = record.useNew;\n      let fn = record.fn;\n      let depRecords = record.deps;\n      let deps = EMPTY;\n      if (depRecords.length) {\n        deps = [];\n        for (let i = 0; i < depRecords.length; i++) {\n          const depRecord: DependencyRecord = depRecords[i];\n          const options = depRecord.options;\n          const childRecord =\n              options & OptionFlags.CheckSelf ? records.get(depRecord.token) : undefined;\n          deps.push(tryResolveToken(\n              // Current Token to resolve\n              depRecord.token,\n              // A record which describes how to resolve the token.\n              // If undefined, this means we don't have such a record\n              childRecord,\n              // Other records we know about.\n              records,\n              // If we don't know how to resolve dependency and we should not check parent for it,\n              // than pass in Null injector.\n              !childRecord && !(options & OptionFlags.CheckParent) ? NULL_INJECTOR : parent,\n              options & OptionFlags.Optional ? null : Injector.THROW_IF_NOT_FOUND,\n              InjectFlags.Default));\n        }\n      }\n      record.value = value = useNew ? new (fn as any)(...deps) : fn.apply(obj, deps);\n    }\n  } else if (!(flags & InjectFlags.Self)) {\n    value = parent.get(token, notFoundValue, InjectFlags.Default);\n  }\n  return value;\n}\n\nfunction computeDeps(provider: StaticProvider): DependencyRecord[] {\n  let deps: DependencyRecord[] = EMPTY;\n  const providerDeps: any[] =\n      (provider as ExistingProvider & StaticClassProvider & ConstructorProvider).deps;\n  if (providerDeps && providerDeps.length) {\n    deps = [];\n    for (let i = 0; i < providerDeps.length; i++) {\n      let options = OptionFlags.Default;\n      let token = resolveForwardRef(providerDeps[i]);\n      if (token instanceof Array) {\n        for (let j = 0, annotations = token; j < annotations.length; j++) {\n          const annotation = annotations[j];\n          if (annotation instanceof Optional || annotation == Optional) {\n            options = options | OptionFlags.Optional;\n          } else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n            options = options & ~OptionFlags.CheckSelf;\n          } else if (annotation instanceof Self || annotation == Self) {\n            options = options & ~OptionFlags.CheckParent;\n          } else if (annotation instanceof Inject) {\n            token = (annotation as Inject).token;\n          } else {\n            token = resolveForwardRef(annotation);\n          }\n        }\n      }\n      deps.push({token, options});\n    }\n  } else if ((provider as ExistingProvider).useExisting) {\n    const token = resolveForwardRef((provider as ExistingProvider).useExisting);\n    deps = [{token, options: OptionFlags.Default}];\n  } else if (!providerDeps && !(USE_VALUE in provider)) {\n    // useValue & useExisting are the only ones which are exempt from deps all others need it.\n    throw staticError('\\'deps\\' required', provider);\n  }\n  return deps;\n}\n\nfunction formatError(text: string, obj: any, source: string | null = null): string {\n  text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n  let context = stringify(obj);\n  if (obj instanceof Array) {\n    context = obj.map(stringify).join(' -> ');\n  } else if (typeof obj === 'object') {\n    let parts = <string[]>[];\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        let value = obj[key];\n        parts.push(\n            key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n      }\n    }\n    context = `{${parts.join(', ')}}`;\n  }\n  return `StaticInjectorError${source ? '(' + source + ')' : ''}[${context}]: ${text.replace(NEW_LINE, '\\n  ')}`;\n}\n\nfunction staticError(text: string, obj: any): Error {\n  return new Error(formatError(text, obj));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {InjectionToken} from './injection_token';\n\n\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nexport const APP_ROOT = new InjectionToken<boolean>(\n    'The presence of this token marks an injector as being the root injector.');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {ViewRef} from './view_ref';\n\n/**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * @publicApi\n */\nexport abstract class ComponentRef<C> {\n  /**\n   * The host or anchor [element](guide/glossary#element) for this component instance.\n   */\n  abstract get location(): ElementRef;\n\n  /**\n   * The [dependency injector](guide/glossary#injector) for this component instance.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * This component instance.\n   */\n  abstract get instance(): C;\n\n  /**\n   * The [host view](guide/glossary#view-tree) defined by the template\n   * for this component instance.\n   */\n  abstract get hostView(): ViewRef;\n\n  /**\n   * The change detector for this component instance.\n   */\n  abstract get changeDetectorRef(): ChangeDetectorRef;\n\n  /**\n   * The component type.\n   */\n  abstract get componentType(): Type<any>;\n\n  /**\n   * Destroys the component instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * A lifecycle hook that provides additional developer-defined cleanup\n   * functionality for the component.\n   * @param callback A handler function that cleans up developer-defined data\n   * associated with this component. Called when the `destroy()` method is invoked.\n   */\n  abstract onDestroy(callback: Function): void;\n}\n\n/**\n * @publicApi\n */\nexport abstract class ComponentFactory<C> {\n  /**\n   * The component's HTML selector.\n   */\n  abstract get selector(): string;\n  /**\n   * The component's type\n   */\n  abstract get componentType(): Type<any>;\n  /**\n   * Selector for all <ng-content> elements in the component.\n   */\n  abstract get ngContentSelectors(): string[];\n  /**\n   * The inputs of the component.\n   */\n  abstract get inputs(): {propName: string, templateName: string}[];\n  /**\n   * The outputs of the component.\n   */\n  abstract get outputs(): {propName: string, templateName: string}[];\n  /**\n   * Creates a new component.\n   */\n  abstract create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {NgModuleRef} from './ng_module_factory';\n\nexport function noComponentFactoryError(component: Function) {\n  const error = Error(\n      `No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  (error as any)[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst ERROR_COMPONENT = 'ngComponent';\n\nexport function getComponent(error: Error): Type<any> {\n  return (error as any)[ERROR_COMPONENT];\n}\n\n\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n  resolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n\n/**\n * @publicApi\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n  abstract resolveComponentFactory<T>(component: Type<T>): ComponentFactory<T>;\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\n  private _factories = new Map<any, ComponentFactory<any>>();\n\n  constructor(\n      factories: ComponentFactory<any>[], private _parent: ComponentFactoryResolver,\n      private _ngModule: NgModuleRef<any>) {\n    for (let i = 0; i < factories.length; i++) {\n      const factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n\n  resolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let factory = this._factories.get(component);\n    if (!factory && this._parent) {\n      factory = this._parent.resolveComponentFactory(component);\n    }\n    if (!factory) {\n      throw noComponentFactoryError(component);\n    }\n    return new ComponentFactoryBoundToModule(factory, this._ngModule);\n  }\n}\n\nexport class ComponentFactoryBoundToModule<C> extends ComponentFactory<C> {\n  readonly selector: string;\n  readonly componentType: Type<any>;\n  readonly ngContentSelectors: string[];\n  readonly inputs: {propName: string, templateName: string}[];\n  readonly outputs: {propName: string, templateName: string}[];\n\n  constructor(private factory: ComponentFactory<C>, private ngModule: NgModuleRef<any>) {\n    super();\n    this.selector = factory.selector;\n    this.componentType = factory.componentType;\n    this.ngContentSelectors = factory.ngContentSelectors;\n    this.inputs = factory.inputs;\n    this.outputs = factory.outputs;\n  }\n\n  create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C> {\n    return this.factory.create(\n        injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ComponentFactoryResolver} from './component_factory_resolver';\n\n\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * @publicApi\n */\nexport abstract class NgModuleRef<T> {\n  /**\n   * The injector that contains all of the providers of the NgModule.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * The ComponentFactoryResolver to get hold of the ComponentFactories\n   * declared in the `entryComponents` property of the module.\n   */\n  abstract get componentFactoryResolver(): ComponentFactoryResolver;\n\n  /**\n   * The NgModule instance.\n   */\n  abstract get instance(): T;\n\n  /**\n   * Destroys the module instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Allows to register a callback that will be called when the module is destroyed.\n   */\n  abstract onDestroy(callback: () => void): void;\n}\n\nexport interface InternalNgModuleRef<T> extends NgModuleRef<T> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _bootstrapComponents: Type<any>[];\n}\n\n/**\n * @publicApi\n */\nexport abstract class NgModuleFactory<T> {\n  abstract get moduleType(): Type<T>;\n  abstract create(parentInjector: Injector|null): NgModuleRef<T>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {injectElementRef as render3InjectElementRef} from '../render3/view_engine_compatibility';\nimport {noop} from '../util/noop';\n\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nexport class ElementRef<T = any> {\n  /**\n   * The underlying native element or `null` if direct access to native elements is not supported\n   * (e.g. when the application runs in a web worker).\n   *\n   * <div class=\"callout is-critical\">\n   *   <header>Use with caution</header>\n   *   <p>\n   *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n   *    data-binding provided by Angular instead. Alternatively you can take a look at {@link\n   * Renderer2}\n   *    which provides API that can safely be used even when direct access to native elements is not\n   *    supported.\n   *   </p>\n   *   <p>\n   *    Relying on direct DOM access creates tight coupling between your application and rendering\n   *    layers which will make it impossible to separate the two and deploy your application into a\n   *    web worker.\n   *   </p>\n   * </div>\n   *\n   */\n  public nativeElement: T;\n\n  constructor(nativeElement: T) { this.nativeElement = nativeElement; }\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => ElementRef = () => SWITCH_ELEMENT_REF_FACTORY(ElementRef);\n}\n\nexport const SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = render3InjectElementRef;\nconst SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\nconst SWITCH_ELEMENT_REF_FACTORY: typeof render3InjectElementRef =\n    SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Injector} from '../di/injector';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {injectRenderer2 as render3InjectRenderer2} from '../render3/view_engine_compatibility';\nimport {noop} from '../util/noop';\n\n\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n * @publicApi\n */\nexport class RenderComponentType {\n  constructor(\n      public id: string, public templateUrl: string, public slotCount: number,\n      public encapsulation: ViewEncapsulation, public styles: Array<string|any[]>,\n      public animations: any) {}\n}\n\n/**\n * @deprecated Debug info is handled internally in the view engine now.\n */\nexport abstract class RenderDebugInfo {\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get source(): string;\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nexport interface DirectRenderer {\n  remove(node: any): void;\n  appendChild(node: any, parent: any): void;\n  insertBefore(node: any, refNode: any): void;\n  nextSibling(node: any): any;\n  parentElement(node: any): any;\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @publicApi\n */\nexport abstract class Renderer {\n  abstract selectRootElement(selectorOrNode: string|any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createElement(parentElement: any, name: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract createViewRoot(hostElement: any): any;\n\n  abstract createTemplateAnchor(parentElement: any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createText(parentElement: any, value: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract projectNodes(parentElement: any, nodes: any[]): void;\n\n  abstract attachViewAfter(node: any, viewRootNodes: any[]): void;\n\n  abstract detachView(viewRootNodes: any[]): void;\n\n  abstract destroyView(hostElement: any, viewAllNodes: any[]): void;\n\n  abstract listen(renderElement: any, name: string, callback: Function): Function;\n\n  abstract listenGlobal(target: string, name: string, callback: Function): Function;\n\n  abstract setElementProperty(renderElement: any, propertyName: string, propertyValue: any): void;\n\n  abstract setElementAttribute(renderElement: any, attributeName: string, attributeValue?: string):\n      void;\n\n  /**\n   * Used only in debug mode to serialize property changes to dom nodes as attributes.\n   */\n  abstract setBindingDebugInfo(renderElement: any, propertyName: string, propertyValue: string):\n      void;\n\n  abstract setElementClass(renderElement: any, className: string, isAdd: boolean): void;\n\n  abstract setElementStyle(renderElement: any, styleName: string, styleValue?: string): void;\n\n  abstract invokeElementMethod(renderElement: any, methodName: string, args?: any[]): void;\n\n  abstract setText(renderNode: any, text: string): void;\n\n  abstract animate(\n      element: any, startingStyles: any, keyframes: any[], duration: number, delay: number,\n      easing: string, previousPlayers?: any[]): any;\n}\n\nexport const Renderer2Interceptor = new InjectionToken<Renderer2[]>('Renderer2Interceptor');\n\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @publicApi\n */\nexport abstract class RootRenderer {\n  abstract renderComponent(componentType: RenderComponentType): Renderer;\n}\n\n/**\n * Used by `RendererFactory2` to associate custom rendering data and styles\n * with a rendering implementation.\n *  @publicApi\n */\nexport interface RendererType2 {\n  /**\n   * A unique identifying string for the new renderer, used when creating\n   * unique styles for encapsulation.\n   */\n  id: string;\n  /**\n   * The view encapsulation type, which determines how styles are applied to\n   * DOM elements. One of\n   * - `Emulated` (default): Emulate native scoping of styles.\n   * - `Native`: Use the native encapsulation mechanism of the renderer.\n   * - `ShadowDom`: Use modern [Shadow\n   * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * create a ShadowRoot for component's host element.\n   * - `None`: Do not provide any template or style encapsulation.\n   */\n  encapsulation: ViewEncapsulation;\n  /**\n   * Defines CSS styles to be stored on a renderer instance.\n   */\n  styles: (string|any[])[];\n  /**\n   * Defines arbitrary developer-defined data to be stored on a renderer instance.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  data: {[kind: string]: any};\n}\n\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * @publicApi\n */\nexport abstract class RendererFactory2 {\n  /**\n   * Creates and initializes a custom renderer for a host DOM element.\n   * @param hostElement The element to render.\n   * @param type The base class to implement.\n   * @returns The new custom renderer instance.\n   */\n  abstract createRenderer(hostElement: any, type: RendererType2|null): Renderer2;\n  /**\n   * A callback invoked when rendering has begun.\n   */\n  abstract begin?(): void;\n  /**\n   * A callback invoked when rendering has completed.\n   */\n  abstract end?(): void;\n  /**\n   * Use with animations test-only mode. Notifies the test when rendering has completed.\n   * @returns The asynchronous result of the developer-defined function.\n   */\n  abstract whenRenderingDone?(): Promise<any>;\n}\n\n/**\n * Flags for renderer-specific style modifiers.\n * @publicApi\n */\nexport enum RendererStyleFlags2 {\n  /**\n   * Marks a style as important.\n   */\n  Important = 1 << 0,\n  /**\n   * Marks a style as using dash case naming (this-is-dash-case).\n   */\n  DashCase = 1 << 1\n}\n\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * @publicApi\n */\nexport abstract class Renderer2 {\n  /**\n   * Use to store arbitrary developer-defined data on a renderer instance,\n   * as an object containing key-value pairs.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  abstract get data(): {[key: string]: any};\n\n  /**\n   * Implement this callback to destroy the renderer or the host element.\n   */\n  abstract destroy(): void;\n  /**\n   * Implement this callback to create an instance of the host element.\n   * @param name An identifying name for the new element, unique within the namespace.\n   * @param namespace The namespace for the new element.\n   * @returns The new element.\n   */\n  abstract createElement(name: string, namespace?: string|null): any;\n  /**\n   * Implement this callback to add a comment to the DOM of the host element.\n   * @param value The comment text.\n   * @returns The modified element.\n   */\n  abstract createComment(value: string): any;\n\n  /**\n   * Implement this callback to add text to the DOM of the host element.\n   * @param value The text string.\n   * @returns The modified element.\n   */\n  abstract createText(value: string): any;\n  /**\n   * If null or undefined, the view engine won't call it.\n   * This is used as a performance optimization for production mode.\n   */\n  // TODO(issue/24571): remove '!'.\n  destroyNode !: ((node: any) => void) | null;\n  /**\n   * Appends a child to a given parent node in the host element DOM.\n   * @param parent The parent node.\n   * @param newChild The new child node.\n   */\n  abstract appendChild(parent: any, newChild: any): void;\n  /**\n   * Implement this callback to insert a child node at a given position in a parent node\n   * in the host element DOM.\n   * @param parent The parent node.\n   * @param newChild The new child nodes.\n   * @param refChild The existing child node that should precede the new node.\n   */\n  abstract insertBefore(parent: any, newChild: any, refChild: any): void;\n  /**\n   * Implement this callback to remove a child node from the host element's DOM.\n   * @param parent The parent node.\n   * @param oldChild The child node to remove.\n   */\n  abstract removeChild(parent: any, oldChild: any): void;\n  /**\n   * Implement this callback to prepare an element to be bootstrapped\n   * as a root element, and return the element instance.\n   * @param selectorOrNode The DOM element.\n   * @param preserveContent Whether the contents of the root element\n   * should be preserved, or cleared upon bootstrap (default behavior).\n   * Use with `ViewEncapsulation.ShadowDom` to allow simple native\n   * content projection via `<slot>` elements.\n   * @returns The root element.\n   */\n  abstract selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any;\n  /**\n   * Implement this callback to get the parent of a given node\n   * in the host element's DOM.\n   * @param node The child node to query.\n   * @returns The parent node, or null if there is no parent.\n   * For WebWorkers, always returns true.\n   * This is because the check is synchronous,\n   * and the caller can't rely on checking for null.\n   */\n  abstract parentNode(node: any): any;\n  /**\n   * Implement this callback to get the next sibling node of a given node\n   * in the host element's DOM.\n   * @returns The sibling node, or null if there is no sibling.\n   * For WebWorkers, always returns a value.\n   * This is because the check is synchronous,\n   * and the caller can't rely on checking for null.\n   */\n  abstract nextSibling(node: any): any;\n  /**\n   * Implement this callback to set an attribute value for an element in the DOM.\n   * @param el The element.\n   * @param name The attribute name.\n   * @param value The new value.\n   * @param namespace The namespace.\n   */\n  abstract setAttribute(el: any, name: string, value: string, namespace?: string|null): void;\n\n  /**\n   * Implement this callback to remove an attribute from an element in the DOM.\n   * @param el The element.\n   * @param name The attribute name.\n   * @param namespace The namespace.\n   */\n  abstract removeAttribute(el: any, name: string, namespace?: string|null): void;\n  /**\n   * Implement this callback to add a class to an element in the DOM.\n   * @param el The element.\n   * @param name The class name.\n   */\n  abstract addClass(el: any, name: string): void;\n\n  /**\n   * Implement this callback to remove a class from an element in the DOM.\n   * @param el The element.\n   * @param name The class name.\n   */\n  abstract removeClass(el: any, name: string): void;\n\n  /**\n   * Implement this callback to set a CSS style for an element in the DOM.\n   * @param el The element.\n   * @param style The name of the style.\n   * @param value The new value.\n   * @param flags Flags for style variations. No flags are set by default.\n   */\n  abstract setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void;\n\n  /**\n   * Implement this callback to remove the value from a CSS style for an element in the DOM.\n   * @param el The element.\n   * @param style The name of the style.\n   * @param flags Flags for style variations to remove, if set. ???\n   */\n  abstract removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void;\n\n  /**\n   * Implement this callback to set the value of a property of an element in the DOM.\n   * @param el The element.\n   * @param name The property name.\n   * @param value The new value.\n   */\n  abstract setProperty(el: any, name: string, value: any): void;\n\n  /**\n   * Implement this callback to set the value of a node in the host element.\n   * @param node The node.\n   * @param value The new value.\n   */\n  abstract setValue(node: any, value: string): void;\n\n  /**\n   * Implement this callback to start an event listener.\n   * @param target The context in which to listen for events. Can be\n   * the entire window or document, the body of the document, or a specific\n   * DOM element.\n   * @param eventName The event to listen for.\n   * @param callback A handler function to invoke when the event occurs.\n   * @returns An \"unlisten\" function for disposing of this handler.\n   */\n  abstract listen(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => boolean | void): () => void;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => Renderer2 = () => SWITCH_RENDERER2_FACTORY();\n}\n\n\nexport const SWITCH_RENDERER2_FACTORY__POST_R3__ = render3InjectRenderer2;\nconst SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\nconst SWITCH_RENDERER2_FACTORY: typeof render3InjectRenderer2 = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n * @publicApi\n */\nexport enum SecurityContext {\n  NONE = 0,\n  HTML = 1,\n  STYLE = 2,\n  SCRIPT = 3,\n  URL = 4,\n  RESOURCE_URL = 5,\n}\n\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * @publicApi\n */\nexport abstract class Sanitizer {\n  abstract sanitize(context: SecurityContext, value: {}|string|null): string|null;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description Represents the version of Angular\n *\n * @publicApi\n */\nexport class Version {\n  public readonly major: string;\n  public readonly minor: string;\n  public readonly patch: string;\n\n  constructor(public full: string) {\n    this.major = full.split('.')[0];\n    this.minor = full.split('.')[1];\n    this.patch = full.split('.').slice(2).join('.');\n  }\n}\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('0.0.0-PLACEHOLDER');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n *\n * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n * please see [BAZEL.md](./docs/BAZEL.md).\n */\n\nlet _devMode: boolean = true;\nlet _runModeLocked: boolean = false;\n\n\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @publicApi\n */\nexport function isDevMode(): boolean {\n  _runModeLocked = true;\n  return _devMode;\n}\n\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * @publicApi\n */\nexport function enableProdMode(): void {\n  if (_runModeLocked) {\n    throw new Error('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; });\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nfunction UnsubscriptionErrorImpl(this: any, errors: any[]) {\n  Error.call(this);\n  this.message = errors ?\n  `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n  this.name = 'UnsubscriptionError';\n  this.errors = errors;\n  return this;\n}\n\nUnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parent: Subscription = null;\n  /** @internal */\n  protected _parents: Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  /** @internal */\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber =\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  private _parentSubscription: Subscription | null = null;\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    this._parentSubscription = null;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { root } from '../util/root';\n\n/** Symbol.observable addition */\n/* Note: This will add Symbol.observable globally for all TypeScript users,\n  however, we are no longer polyfilling Symbol.observable */\ndeclare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\n\n/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```javascript\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```javascript\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```javascript\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```javascript\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","import { noop } from './noop';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nfunction ObjectUnsubscribedErrorImpl(this: any) {\n  Error.call(this);\n  this.message = 'object unsubscribed';\n  this.name = 'ObjectUnsubscribedError';\n  return this;\n}\n\nObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observables. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  if (!subscriber.closed) {\n    subscriber.complete();\n  }\n};\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      let i = 0;\n      sub.add(scheduler.schedule(function () {\n        if (i === input.length) {\n          subscriber.complete();\n          return;\n        }\n        subscriber.next(input[i++]);\n        if (!subscriber.closed) {\n          sub.add(this.schedule());\n        }\n      }));\n      return sub;\n    });\n  }\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nfunction EmptyErrorImpl(this: any) {\n  Error.call(this);\n  this.message = 'no elements in sequence';\n  this.name = 'EmptyError';\n  return this;\n}\n\nEmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","export function isPromise(value: any): value is PromiseLike<any> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>) => {\n  if (result instanceof Observable) {\n    return (subscriber: Subscriber<T>) => {\n        if (result._isScalar) {\n        subscriber.next((result as any).value);\n        subscriber.complete();\n        return undefined;\n      } else {\n        return result.subscribe(subscriber);\n      }\n    };\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, resultSelector: undefined, concurrent?: number): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```javascript\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, I|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    subscribeToResult<T, R>(this, ish, value, index, innerSubscriber);\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { ObservableInput } from '../types';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  destination?: Subscriber<any>\n): Subscription;\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | void {\n  if (destination.closed) {\n    return;\n  }\n  return subscribeTo(result)(destination);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Subject, Subscription} from 'rxjs';\n\n/**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * @usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * @publicApi\n */\nexport class EventEmitter<T> extends Subject<T> {\n  // TODO: mark this as internal once all the facades are gone\n  // we can't mark it as internal now because EventEmitter exported via @angular/core would not\n  // contain this property making it incompatible with all the code that uses EventEmitter via\n  // facades, which are local to the code and do not have this property stripped.\n  /**\n   * Internal\n   */\n  __isAsync: boolean;  // tslint:disable-line\n\n  /**\n   * Creates an instance of this class that can\n   * deliver events synchronously or asynchronously.\n   *\n   * @param isAsync When true, deliver events asynchronously.\n   *\n   */\n  constructor(isAsync: boolean = false) {\n    super();\n    this.__isAsync = isAsync;\n  }\n\n  /**\n   * Emits an event containing a given value.\n   * @param value The value to emit.\n   */\n  emit(value?: T) { super.next(value); }\n\n  /**\n   * Registers handlers for events emitted by this instance.\n   * @param generatorOrNext When supplied, a custom handler for emitted events.\n   * @param error When supplied, a custom handler for an error notification\n   * from this emitter.\n   * @param complete When supplied, a custom handler for a completion\n   * notification from this emitter.\n   */\n  subscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n    let schedulerFn: (t: any) => any;\n    let errorFn = (err: any): any => null;\n    let completeFn = (): any => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this.__isAsync ? (value: any) => {\n        setTimeout(() => generatorOrNext.next(value));\n      } : (value: any) => { generatorOrNext.next(value); };\n\n      if (generatorOrNext.error) {\n        errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                                   (err) => { generatorOrNext.error(err); };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                                      () => { generatorOrNext.complete(); };\n      }\n    } else {\n      schedulerFn = this.__isAsync ? (value: any) => { setTimeout(() => generatorOrNext(value)); } :\n                                     (value: any) => { generatorOrNext(value); };\n\n      if (error) {\n        errorFn =\n            this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n      }\n\n      if (complete) {\n        completeFn =\n            this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n      }\n    }\n\n    const sink = super.subscribe(schedulerFn, errorFn, completeFn);\n\n    if (generatorOrNext instanceof Subscription) {\n      generatorOrNext.add(sink);\n    }\n\n    return sink;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {injectTemplateRef as render3InjectTemplateRef} from '../render3/view_engine_compatibility';\nimport {noop} from '../util/noop';\n\nimport {ElementRef} from './element_ref';\nimport {EmbeddedViewRef} from './view_ref';\n\n\n/**\n * Represents an embedded template that can be used to instantiate embedded views.\n * To instantiate embedded views based on a template, use the `ViewContainerRef`\n * method `createEmbeddedView()`.\n *\n * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n * is injected into the constructor of the directive,\n * using the `TemplateRef` token.\n *\n * You can also use a `Query` to find a `TemplateRef` associated with\n * a component or a directive.\n *\n * @see `ViewContainerRef`\n * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n *\n * @publicApi\n */\nexport abstract class TemplateRef<C> {\n  /**\n   * The anchor element in the parent view for this embedded view.\n   *\n   * The data-binding and injection contexts of embedded views created from this `TemplateRef`\n   * inherit from the contexts of this location.\n   *\n   * Typically new embedded views are attached to the view container of this location, but in\n   * advanced use-cases, the view can be attached to a different container while keeping the\n   * data-binding and injection context from the original location.\n   *\n   */\n  // TODO(i): rename to anchor or location\n  abstract get elementRef(): ElementRef;\n\n  /**\n   * Creates a view object and attaches it to the view container of the parent view.\n   * @param context The context for the new view, inherited from the anchor element.\n   * @returns The new view object.\n   */\n  abstract createEmbeddedView(context: C): EmbeddedViewRef<C>;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__:\n      () => TemplateRef<any>| null = () => SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef)\n}\n\nexport const SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = render3InjectTemplateRef;\nconst SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\nconst SWITCH_TEMPLATE_REF_FACTORY: typeof render3InjectTemplateRef =\n    SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * @publicApi\n */\nexport const Type = Function;\n\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport interface Type<T> extends Function { new (...args: any[]): T; }\n\nexport type Mutable<T extends{[x: string]: any}, K extends string> = {\n  [P in K]: T[P];\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {ANNOTATIONS, PARAMETERS, PROP_METADATA} from '../util/decorators';\n\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\n\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nexport const DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nexport const INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\nexport const INHERITED_CLASS_WITH_CTOR =\n    /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\n  private _reflect: any;\n\n  constructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n\n  isReflectionEnabled(): boolean { return true; }\n\n  factory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n\n  /** @internal */\n  _zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n\n  private _ownParameters(type: Type<any>, parentCtor: any): any[][]|null {\n    const typeStr = type.toString();\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(typeStr) ||\n        (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if ((<any>type).parameters && (<any>type).parameters !== parentCtor.parameters) {\n      return (<any>type).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const tsickleCtorParams = (<any>type).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    const paramAnnotations = type.hasOwnProperty(PARAMETERS) && (type as any)[PARAMETERS];\n    const paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n        this._reflect.getOwnMetadata('design:paramtypes', type);\n    if (paramTypes || paramAnnotations) {\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array((<any>type.length)).fill(undefined);\n  }\n\n  parameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(type);\n    let parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n\n  private _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[]|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).annotations && (<any>typeOrFunc).annotations !== parentCtor.annotations) {\n      let annotations = (<any>typeOrFunc).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).decorators && (<any>typeOrFunc).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata((<any>typeOrFunc).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n      return (typeOrFunc as any)[ANNOTATIONS];\n    }\n    return null;\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n\n  private _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]}|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).propMetadata &&\n        (<any>typeOrFunc).propMetadata !== parentCtor.propMetadata) {\n      let propMetadata = (<any>typeOrFunc).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).propDecorators &&\n        (<any>typeOrFunc).propDecorators !== parentCtor.propDecorators) {\n      const propDecorators = (<any>typeOrFunc).propDecorators;\n      const propMetadata = <{[key: string]: any[]}>{};\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n      return (typeOrFunc as any)[PROP_METADATA];\n    }\n    return null;\n  }\n\n  propMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n\n  guards(type: any): {[key: string]: any} { return {}; }\n\n  getter(name: string): GetterFn { return <GetterFn>new Function('o', 'return o.' + name + ';'); }\n\n  setter(name: string): SetterFn {\n    return <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;');\n  }\n\n  method(name: string): MethodFn {\n    const functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return <MethodFn>new Function('o', 'args', functionBody);\n  }\n\n  // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n  importUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n\n  resourceUri(type: any): string { return `./${stringify(type)}`; }\n\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n  resolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const decoratorType = decoratorInvocation.type;\n    const annotationCls = decoratorType.annotationCls;\n    const annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n\nfunction getParentCtor(ctor: Function): Type<any> {\n  const parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n  const parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {Provider} from '../di';\nimport {NG_BASE_DEF} from '../render3/fields';\nimport {compileComponent as render3CompileComponent, compileDirective as render3CompileDirective} from '../render3/jit/directive';\nimport {compilePipe as render3CompilePipe} from '../render3/jit/pipe';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator, makePropDecorator} from '../util/decorators';\nimport {noop} from '../util/noop';\nimport {fillProperties} from '../util/property';\n\nimport {ViewEncapsulation} from './view';\n\n\n\n/**\n * Type of the Directive decorator / constructor function.\n * @publicApi\n */\nexport interface DirectiveDecorator {\n  /**\n   * Marks a class as an Angular directive. You can define your own\n   * directives to attach custom behavior to elements in the DOM.\n   * The options provide configuration metadata that determines\n   * how the directive should be processed, instantiated and used at\n   * runtime.\n   *\n   * Directive classes, like component classes, can implement\n   * [life-cycle hooks](guide/lifecycle-hooks) to influence their configuration and behavior.\n   *\n   *\n   * @usageNotes\n   * To define a directive, mark the class with the decorator and provide metadata.\n   *\n   * ```\n   * import {Directive} from '@angular/core';\n   *\n   * @Directive({\n   *   selector: 'my-directive',\n   * })\n   * export class MyDirective {\n   * ...\n   * }\n   * ```\n   *\n   * ### Declaring directives\n   *\n   * Directives are [declarables](guide/glossary#declarable).\n   * They must be declared by an NgModule\n   * in order to be usable in an app.\n   *\n   * A directive must belong to exactly one NgModule. Do not re-declare\n   * a directive imported from another module.\n   * List the directive class in the `declarations` field of an NgModule.\n   *\n   * ```\n   * declarations: [\n   *  AppComponent,\n   *  MyDirective\n   * ],\n   * ```\n   *\n   * @Annotation\n   */\n  (obj: Directive): TypeDecorator;\n\n  /**\n   * See the `Directive` decorator.\n   */\n  new (obj: Directive): Directive;\n}\n\n/**\n * Directive decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport interface Directive {\n  /**\n   * The CSS selector that identifies this directive in a template\n   * and triggers instantiation of the directive.\n   *\n   * Declare as one of the following:\n   *\n   * - `element-name`: Select by element name.\n   * - `.class`: Select by class name.\n   * - `[attribute]`: Select by attribute name.\n   * - `[attribute=value]`: Select by attribute name and value.\n   * - `:not(sub_selector)`: Select only if the element does not match the `sub_selector`.\n   * - `selector1, selector2`: Select if either `selector1` or `selector2` matches.\n   *\n   * Angular only allows directives to apply on CSS selectors that do not cross\n   * element boundaries.\n   *\n   * For the following template HTML, a directive with an `input[type=text]` selector,\n   * would be instantiated only on the `<input type=\"text\">` element.\n   *\n   * ```html\n   * <form>\n   *   <input type=\"text\">\n   *   <input type=\"radio\">\n   * <form>\n   * ```\n   *\n   */\n  selector?: string;\n\n  /**\n   * Enumerates the set of data-bound input properties for a directive\n   *\n   * Angular automatically updates input properties during change detection.\n   * The `inputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property where the value is written.\n   * - `bindingProperty` specifies the DOM property where the value is read from.\n   *\n   * When `bindingProperty` is not provided, it is assumed to be equal to `directiveProperty`.\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * The following example creates a component with two data-bound properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   inputs: ['bankName', 'id: account-id'],\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   bankName: string;\n   *   id: string;\n   *\n   * ```\n   *\n   */\n  inputs?: string[];\n\n  /**\n   * Enumerates the set of event-bound output properties.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * in the template is invoked.\n   *\n   * The `outputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property that emits events.\n   * - `bindingProperty` specifies the DOM property the event handler is attached to.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   * ```\n   *\n   */\n  outputs?: string[];\n\n  /**\n   * Configures the [injector](guide/glossary#injector) of this\n   * directive or component with a [token](guide/glossary#di-token)\n   * that maps to a [provider](guide/glossary#provider) of a dependency.\n   */\n  providers?: Provider[];\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * @usageNotes\n   *\n   * ### Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   * ```\n   *\n   */\n  exportAs?: string;\n\n  /**\n   * Configures the queries that will be injected into the directive.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * The following example shows how queries are defined\n   * and when their results are available in lifecycle hooks:\n   *\n   * ```\n   * @Component({\n   *   selector: 'someDir',\n   *   queries: {\n   *     contentChildren: new ContentChildren(ChildDirective),\n   *     viewChildren: new ViewChildren(ChildDirective)\n   *   },\n   *   template: '<child-directive></child-directive>'\n   * })\n   * class SomeDir {\n   *   contentChildren: QueryList<ChildDirective>,\n   *   viewChildren: QueryList<ChildDirective>\n   *\n   *   ngAfterContentInit() {\n   *     // contentChildren is set\n   *   }\n   *\n   *   ngAfterViewInit() {\n   *     // viewChildren is set\n   *   }\n   * }\n   * ```\n   *\n   * @Annotation\n   */\n  queries?: {[key: string]: any};\n\n  /**\n   * Maps class properties to host element bindings for properties,\n   * attributes, and events, using a set of key-value pairs.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, Angular updates the directive's host element.\n   *\n   * When the key is a property of the host element, the property value is\n   * the propagated to the specified DOM property.\n   *\n   * When the key is a static attribute in the DOM, the attribute value\n   * is propagated to the specified property in the host element.\n   *\n   * For event handling:\n   * - The key is the DOM event that the directive listens to.\n   * To listen to global events, add the target to the event name.\n   * The target can be `window`, `document` or `body`.\n   * - The value is the statement to execute when the event occurs. If the\n   * statement evalueates to `false`, then `preventDefault` is applied on the DOM\n   * event. A handler method can refer to the `$event` local variable.\n   *\n   */\n  host?: {[key: string]: string};\n\n  /**\n   * If true, this directive/component will be skipped by the AOT compiler and so will always be\n   * compiled using JIT.\n   *\n   * This exists to support future Ivy work and has no effect currently.\n   */\n  jit?: true;\n}\n\n/**\n * Type of the Directive metadata.\n *\n * @publicApi\n */\nexport const Directive: DirectiveDecorator = makeDecorator(\n    'Directive', (dir: Directive = {}) => dir, undefined, undefined,\n    (type: Type<any>, meta: Directive) => SWITCH_COMPILE_DIRECTIVE(type, meta));\n\n/**\n * Component decorator interface\n *\n * @publicApi\n */\nexport interface ComponentDecorator {\n  /**\n   * Decorator that marks a class as an Angular component and provides configuration\n   * metadata that determines how the component should be processed,\n   * instantiated, and used at runtime.\n   *\n   * Components are the most basic UI building block of an Angular app.\n   * An Angular app contains a tree of Angular components.\n   *\n   * Angular components are a subset of directives, always associated with a template.\n   * Unlike other directives, only one component can be instantiated per an element in a template.\n   *\n   * A component must belong to an NgModule in order for it to be available\n   * to another component or application. To make it a member of an NgModule,\n   * list it in the `declarations` field of the `@NgModule` metadata.\n   *\n   * Note that, in addition to these options for configuring a directive,\n   * you can control a component's runtime behavior by implementing\n   * life-cycle hooks. For more information, see the\n   * [Lifecycle Hooks](guide/lifecycle-hooks) guide.\n   *\n   * @usageNotes\n   *\n   * ### Setting component inputs\n   *\n   * The following example creates a component with two data-bound properties,\n   * specified by the `inputs` value.\n   *\n   * <code-example path=\"core/ts/metadata/directives.ts\" region=\"component-input\">\n   * </code-example>\n   *\n   *\n   * ### Setting component outputs\n   *\n   * The following example shows two event emitters that emit on an interval. One\n   * emits an output every second, while the other emits every five seconds.\n   *\n   * {@example core/ts/metadata/directives.ts region='component-output-interval'}\n   *\n   * ### Injecting a class with a view provider\n   *\n   * The following simple example injects a class into a component\n   * using the view provider specified in component metadata:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'needs-greeter'\n   * })\n   * class NeedsGreeter {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'greet',\n   *   viewProviders: [\n   *     Greeter\n   *   ],\n   *   template: `<needs-greeter></needs-greeter>`\n   * })\n   * class HelloWorld {\n   * }\n   *\n   * ```\n   *\n   * ### Preserving whitespace\n   *\n   * Removing whitespace can greatly reduce AOT-generated code size and speed up view creation.\n   * As of Angular 6, the default for `preserveWhitespaces` is false (whitespace is removed).\n   * To change the default setting for all components in your application, set\n   * the `preserveWhitespaces` option of the AOT compiler.\n   *\n   * By default, the AOT compiler removes whitespace characters as follows:\n   * * Trims all whitespaces at the beginning and the end of a template.\n   * * Removes whitespace-only text nodes. For example,\n   *\n   * ```\n   * <button>Action 1</button>  <button>Action 2</button>\n   * ```\n   *\n   * becomes:\n   *\n   * ```\n   * <button>Action 1</button><button>Action 2</button>\n   * ```\n   *\n   * * Replaces a series of whitespace characters in text nodes with a single space.\n   * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n   * * Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n   * where whitespace characters are significant.\n   *\n   * Note that these transformations can influence DOM nodes layout, although impact\n   * should be minimal.\n   *\n   * You can override the default behavior to preserve whitespace characters\n   * in certain fragments of a template. For example, you can exclude an entire\n   * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n   *\n   * ```html\n   * <div ngPreserveWhitespaces>\n   *     whitespaces are preserved here\n   *     <span>    and here </span>\n   * </div>\n   * ```\n   *\n   * You can force a single space to be preserved in a text node by using `&ngsp;`,\n   * which is replaced with a space character by Angular's template\n   * compiler:\n   *\n   * ```html\n   * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n   * <!-->compiled to be equivalent to:</>\n   *  <a>Spaces</a> <a>between</a> <a>links.</a>\n   * ```\n   *\n   * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n   * the `preserveWhitespaces` option is set to `false`.\n   *\n   * ```html\n   * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n   * <!-->compiled to be equivalent to:</>\n   *  <a>Spaces</a> <a>between</a> <a>links.</a>\n   * ```\n   *\n   * To preserve sequences of whitespace characters, use the\n   * `ngPreserveWhitespaces` attribute.\n   *\n   * @Annotation\n   */\n  (obj: Component): TypeDecorator;\n  /**\n   * See the `@Component` decorator.\n   */\n  new (obj: Component): Component;\n}\n\n/**\n * Supplies configuration metadata for an Angular component.\n *\n * @publicApi\n */\nexport interface Component extends Directive {\n  /**\n   * The change-detection strategy to use for this component.\n   *\n   * When a component is instantiated, Angular creates a change detector,\n   * which is responsible for propagating the component's bindings.\n   * The strategy is one of:\n   * - `ChangeDetectionStrategy#OnPush` sets the strategy to `CheckOnce` (on demand).\n   * - `ChangeDetectionStrategy#Default` sets the strategy to `CheckAlways`.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Defines the set of injectable objects that are visible to its view DOM children.\n   * See [example](#injecting-a-class-with-a-view-provider).\n   *\n   */\n  viewProviders?: Provider[];\n\n  /**\n   * The module ID of the module that contains the component.\n   * The component must be able to resolve relative URLs for templates and styles.\n   * SystemJS exposes the `__moduleName` variable within each module.\n   * In CommonJS, this can  be set to `module.id`.\n   *\n   */\n  moduleId?: string;\n\n  /**\n   * The URL of a template file for an Angular component. If provided,\n   * do not supply an inline template using `template`.\n   *\n   */\n  templateUrl?: string;\n\n  /**\n   * An inline template for an Angular component. If provided,\n   * do not supply a template file using `templateUrl`.\n   *\n   */\n  template?: string;\n\n  /**\n   * One or more URLs for files containing CSS stylesheets to use\n   * in this component.\n   */\n  styleUrls?: string[];\n\n  /**\n   * One or more inline CSS stylesheets to use\n   * in this component.\n   */\n  styles?: string[];\n\n  /**\n   * One or more animation `trigger()` calls, containing\n   * `state()` and `transition()` definitions.\n   * See the [Animations guide](/guide/animations) and animations API documentation.\n   *\n   */\n  animations?: any[];\n\n  /**\n   * An encapsulation policy for the template and CSS styles. One of:\n   * - `ViewEncapsulation.Native`: Use shadow roots. This works\n   * only if natively available on the platform.\n   * - `ViewEncapsulation.Emulated`: Use shimmed CSS that\n   * emulates the native behavior.\n   * - `ViewEncapsulation.None`: Use global CSS without any\n   * encapsulation.\n   *\n   * If not supplied, the value is taken from `CompilerOptions`. The default compiler option is\n   * `ViewEncapsulation.Emulated`.\n   *\n   * If the policy is set to `ViewEncapsulation.Emulated` and the component has no `styles`\n   * or `styleUrls` specified, the policy is automatically switched to `ViewEncapsulation.None`.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Overrides the default encapsulation start and end delimiters (`{{` and `}}`)\n   */\n  interpolation?: [string, string];\n\n  /**\n   * A set of components that should be compiled along with\n   * this component. For each component listed here,\n   * Angular creates a {@link ComponentFactory} and stores it in the\n   * {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * True to preserve or false to remove potentially superfluous whitespace characters\n   * from the compiled template. Whitespace characters are those matching the `\\s`\n   * character class in JavaScript regular expressions. Default is false, unless\n   * overridden in compiler options.\n   */\n  preserveWhitespaces?: boolean;\n}\n\n/**\n * Component decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Component: ComponentDecorator = makeDecorator(\n    'Component', (c: Component = {}) => ({changeDetection: ChangeDetectionStrategy.Default, ...c}),\n    Directive, undefined,\n    (type: Type<any>, meta: Component) => SWITCH_COMPILE_COMPONENT(type, meta));\n\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * @publicApi\n */\nexport interface PipeDecorator {\n  /**\n   * Declares a reusable pipe function, and supplies configuration metadata.\n   *\n   */\n  (obj: Pipe): TypeDecorator;\n\n  /**\n   * See the `Pipe` decorator.\n   */\n  new (obj: Pipe): Pipe;\n}\n\n/**\n * Type of the Pipe metadata.\n *\n * @publicApi\n */\nexport interface Pipe {\n  /**\n   * The pipe name to use in template bindings.\n   *\n   */\n  name: string;\n\n  /**\n   * When true, the pipe is pure, meaning that the\n   * `transform()` method is invoked only when its input arguments\n   * change. Pipes are pure by default.\n   *\n   * If the pipe has internal state (that is, the result\n   * depends on state other than its arguments), set `pure` to false.\n   * In this case, the pipe is invoked on each change-detection cycle,\n   * even if the arguments have not changed.\n   */\n  pure?: boolean;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Pipe: PipeDecorator = makeDecorator(\n    'Pipe', (p: Pipe) => ({pure: true, ...p}), undefined, undefined,\n    (type: Type<any>, meta: Pipe) => SWITCH_COMPILE_PIPE(type, meta));\n\n\n/**\n * @publicApi\n */\nexport interface InputDecorator {\n  /**\n   * Decorator that marks a class as pipe and supplies configuration metadata.\n   *\n   * A pipe class must implement the `PipeTransform` interface.\n   * For example, if the name is \"myPipe\", use a template binding expression\n   * such as the following:\n   *\n   * ```\n   * {{ exp | myPipe }}\n   * ```\n   *\n   * The result of the expression is passed to the pipe's `transform()` method.\n   *\n   * A pipe must belong to an NgModule in order for it to be available\n   * to a template. To make it a member of an NgModule,\n   * list it in the `declarations` field of the `@NgModule` metadata.\n   *\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of metadata for an `Input` property.\n *\n * @publicApi\n */\nexport interface Input {\n  /**\n   * Decorator that marks a class field as an input property and supplies configuration metadata.\n   * Declares a data-bound input property, which Angular automatically updates\n   * during change detection.\n   *\n   * @usageNotes\n   *\n   * You can supply an optional name to use in templates when the\n   * component is instantiated, that maps to the\n   * name of the bound property. By default, the original\n   * name of the bound property is used for input binding.\n   *\n   * The following example creates a component with two input properties,\n   * one of which is given a special binding name.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   // This property is bound using its original name.\n   *   @Input() bankName: string;\n   *   // this property value is bound to a different property name\n   *   // when this component is instantiated in a template.\n   *   @Input('account-id') id: string;\n   *\n   *   // this property is not bound, and is not automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bankName=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   *\n   * class App {}\n   * ```\n   *\n   */\n  bindingPropertyName?: string;\n}\n\nconst initializeBaseDef = (target: any): void => {\n  const constructor = target.constructor;\n  const inheritedBaseDef = constructor.ngBaseDef;\n\n  const baseDef = constructor.ngBaseDef = {\n    inputs: {},\n    outputs: {},\n    declaredInputs: {},\n  };\n\n  if (inheritedBaseDef) {\n    fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n    fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n    fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n  }\n};\n\n/**\n * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n * @param key \"inputs\" or \"outputs\"\n */\nconst updateBaseDefFromIOProp = (getProp: (baseDef: {inputs?: any, outputs?: any}) => any) =>\n    (target: any, name: string, ...args: any[]) => {\n      const constructor = target.constructor;\n\n      if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n        initializeBaseDef(target);\n      }\n\n      const baseDef = constructor.ngBaseDef;\n      const defProp = getProp(baseDef);\n      defProp[name] = args[0];\n    };\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Input: InputDecorator = makePropDecorator(\n    'Input', (bindingPropertyName?: string) => ({bindingPropertyName}), undefined,\n    updateBaseDefFromIOProp(baseDef => baseDef.inputs || {}));\n\n/**\n * Type of the Output decorator / constructor function.\n *\n * @publicApi\n */\nexport interface OutputDecorator {\n  /**\n  * Decorator that marks a class field as an output property and supplies configuration metadata.\n  * Declares a data-bound output property, which Angular automatically updates\n  * during change detection.\n  *\n  * @usageNotes\n  *\n  * You can supply an optional name to use in templates when the\n  * component is instantiated, that maps to the\n  * name of the bound property. By default, the original\n  * name of the bound property is used for output binding.\n  *\n  * See `@Input` decorator for an example of providing a binding name.\n  *\n  */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Output metadata.\n *\n * @publicApi\n */\nexport interface Output { bindingPropertyName?: string; }\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Output: OutputDecorator = makePropDecorator(\n    'Output', (bindingPropertyName?: string) => ({bindingPropertyName}), undefined,\n    updateBaseDefFromIOProp(baseDef => baseDef.outputs || {}));\n\n\n\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostBindingDecorator {\n  /**\n   * Decorator that marks a DOM property as a host-binding property and supplies configuration\n   * metadata.\n   * Angular automatically checks host property bindings during change detection, and\n   * if a binding changes it updates the host element of the directive.\n   *\n   * @usageNotes\n   *\n   * The following example creates a directive that sets the `valid` and `invalid`\n   * properties on the DOM element that has an `ngModel` directive on it.\n   *\n   * ```typescript\n   * @Directive({selector: '[ngModel]'})\n   * class NgModelStatus {\n   *   constructor(public control: NgModel) {}\n   *   @HostBinding('class.valid') get valid() { return this.control.valid; }\n   *   @HostBinding('class.invalid') get invalid() { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`,\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   *\n   */\n  (hostPropertyName?: string): any;\n  new (hostPropertyName?: string): any;\n}\n\n/**\n * Type of the HostBinding metadata.\n *\n * @publicApi\n */\nexport interface HostBinding { hostPropertyName?: string; }\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const HostBinding: HostBindingDecorator =\n    makePropDecorator('HostBinding', (hostPropertyName?: string) => ({hostPropertyName}));\n\n\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostListenerDecorator {\n  (eventName: string, args?: string[]): any;\n  new (eventName: string, args?: string[]): any;\n}\n\n/**\n * Type of the HostListener metadata.\n *\n * @publicApi\n */\nexport interface HostListener {\n  /**\n   * The CSS event to listen for.\n   */\n  eventName?: string;\n  /**\n   * A set of arguments to pass to the handler method when the event occurs.\n   */\n  args?: string[];\n}\n\n/**\n * Binds a CSS event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * @usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * @Annotation\n * @publicApi\n */\nexport const HostListener: HostListenerDecorator =\n    makePropDecorator('HostListener', (eventName?: string, args?: string[]) => ({eventName, args}));\n\n\n\nexport const SWITCH_COMPILE_COMPONENT__POST_R3__ = render3CompileComponent;\nexport const SWITCH_COMPILE_DIRECTIVE__POST_R3__ = render3CompileDirective;\nexport const SWITCH_COMPILE_PIPE__POST_R3__ = render3CompilePipe;\n\nconst SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\nconst SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\nconst SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n\nconst SWITCH_COMPILE_COMPONENT: typeof render3CompileComponent = SWITCH_COMPILE_COMPONENT__PRE_R3__;\nconst SWITCH_COMPILE_DIRECTIVE: typeof render3CompileDirective = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\nconst SWITCH_COMPILE_PIPE: typeof render3CompilePipe = SWITCH_COMPILE_PIPE__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ReflectionCapabilities} from '../reflection/reflection_capabilities';\nimport {Type} from '../type';\nimport {getClosureSafeProperty} from '../util/property';\n\nimport {inject, injectArgs} from './injector_compatibility';\nimport {ClassSansProvider, ConstructorSansProvider, ExistingSansProvider, FactorySansProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from './provider';\n\nconst USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\nconst EMPTY_ARRAY: any[] = [];\n\nexport function convertInjectableProviderToFactory(\n    type: Type<any>, provider?: ValueSansProvider | ExistingSansProvider | StaticClassSansProvider |\n        ConstructorSansProvider | FactorySansProvider | ClassSansProvider): () => any {\n  if (!provider) {\n    const reflectionCapabilities = new ReflectionCapabilities();\n    const deps = reflectionCapabilities.parameters(type);\n    // TODO - convert to flags.\n    return () => new type(...injectArgs(deps as any[]));\n  }\n\n  if (USE_VALUE in provider) {\n    const valueProvider = (provider as ValueSansProvider);\n    return () => valueProvider.useValue;\n  } else if ((provider as ExistingSansProvider).useExisting) {\n    const existingProvider = (provider as ExistingSansProvider);\n    return () => inject(existingProvider.useExisting);\n  } else if ((provider as FactorySansProvider).useFactory) {\n    const factoryProvider = (provider as FactorySansProvider);\n    return () => factoryProvider.useFactory(...injectArgs(factoryProvider.deps || EMPTY_ARRAY));\n  } else if ((provider as StaticClassSansProvider | ClassSansProvider).useClass) {\n    const classProvider = (provider as StaticClassSansProvider | ClassSansProvider);\n    let deps = (provider as StaticClassSansProvider).deps;\n    if (!deps) {\n      const reflectionCapabilities = new ReflectionCapabilities();\n      deps = reflectionCapabilities.parameters(type);\n    }\n    return () => new classProvider.useClass(...injectArgs(deps));\n  } else {\n    let deps = (provider as ConstructorSansProvider).deps;\n    if (!deps) {\n      const reflectionCapabilities = new ReflectionCapabilities();\n      deps = reflectionCapabilities.parameters(type);\n    }\n    return () => new type(...injectArgs(deps !));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../../di/injectable';\nimport {ClassSansProvider, ExistingSansProvider, FactorySansProvider, ValueProvider, ValueSansProvider} from '../../di/provider';\nimport {Type} from '../../type';\nimport {getClosureSafeProperty} from '../../util/property';\nimport {NG_INJECTABLE_DEF} from '../fields';\n\nimport {R3InjectableMetadataFacade, getCompilerFacade} from './compiler_facade';\nimport {angularCoreEnv} from './environment';\nimport {convertDependencies, reflectDependencies} from './util';\n\n\n\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n */\nexport function compileInjectable(type: Type<any>, srcMeta?: Injectable): void {\n  let def: any = null;\n\n  // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n  if (type.hasOwnProperty(NG_INJECTABLE_DEF)) return;\n\n  Object.defineProperty(type, NG_INJECTABLE_DEF, {\n    get: () => {\n      if (def === null) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        const meta: Injectable = srcMeta || {providedIn: null};\n        const hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n            isUseValueProvider(meta) || isUseExistingProvider(meta);\n\n\n        const compilerMeta: R3InjectableMetadataFacade = {\n          name: type.name,\n          type: type,\n          typeArgumentCount: 0,\n          providedIn: meta.providedIn,\n          ctorDeps: reflectDependencies(type),\n          userDeps: undefined\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n          compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (!hasAProvider) {\n          // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n          // The deps will have been reflected above, causing the factory to create the class by\n          // calling\n          // its constructor with injected deps.\n          compilerMeta.useClass = type;\n        } else if (isUseClassProvider(meta)) {\n          // The user explicitly specified useClass, and may or may not have provided deps.\n          compilerMeta.useClass = meta.useClass;\n        } else if (isUseValueProvider(meta)) {\n          // The user explicitly specified useValue.\n          compilerMeta.useValue = meta.useValue;\n        } else if (isUseFactoryProvider(meta)) {\n          // The user explicitly specified useFactory.\n          compilerMeta.useFactory = meta.useFactory;\n        } else if (isUseExistingProvider(meta)) {\n          // The user explicitly specified useExisting.\n          compilerMeta.useExisting = meta.useExisting;\n        } else {\n          // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n          throw new Error(`Unreachable state.`);\n        }\n        def = getCompilerFacade().compileInjectable(\n            angularCoreEnv, `ng://${type.name}/ngInjectableDef.js`, compilerMeta);\n      }\n      return def;\n    },\n  });\n}\n\ntype UseClassProvider = Injectable & ClassSansProvider & {deps?: any[]};\n\nconst USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\n\nfunction isUseClassProvider(meta: Injectable): meta is UseClassProvider {\n  return (meta as UseClassProvider).useClass !== undefined;\n}\n\nfunction isUseValueProvider(meta: Injectable): meta is Injectable&ValueSansProvider {\n  return USE_VALUE in meta;\n}\n\nfunction isUseFactoryProvider(meta: Injectable): meta is Injectable&FactorySansProvider {\n  return (meta as FactorySansProvider).useFactory !== undefined;\n}\n\nfunction isUseExistingProvider(meta: Injectable): meta is Injectable&ExistingSansProvider {\n  return (meta as ExistingSansProvider).useExisting !== undefined;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {InjectorType, defineInjector} from '../di/defs';\nimport {Provider} from '../di/provider';\nimport {convertInjectableProviderToFactory} from '../di/util';\nimport {NgModuleType} from '../render3';\nimport {compileNgModule as render3CompileNgModule} from '../render3/jit/module';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator} from '../util/decorators';\n\n/**\n * Represents the expansion of an `NgModule` into its scopes.\n *\n * A scope is a set of directives and pipes that are visible in a particular context. Each\n * `NgModule` has two scopes. The `compilation` scope is the set of directives and pipes that will\n * be recognized in the templates of components declared by the module. The `exported` scope is the\n * set of directives and pipes exported by a module (that is, module B's exported scope gets added\n * to module A's compilation scope when module A imports B).\n */\nexport interface NgModuleTransitiveScopes {\n  compilation: {directives: Set<any>; pipes: Set<any>;};\n  exported: {directives: Set<any>; pipes: Set<any>;};\n}\n\nexport type NgModuleDefWithMeta<T, Declarations, Imports, Exports> = NgModuleDef<T>;\n\n/**\n * Runtime link information for NgModules.\n *\n * This is the internal data structure used by the runtime to assemble components, directives,\n * pipes, and injectors.\n *\n * NOTE: Always use `defineNgModule` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n */\nexport interface NgModuleDef<T> {\n  /** Token representing the module. Used by DI. */\n  type: T;\n\n  /** List of components to bootstrap. */\n  bootstrap: Type<any>[];\n\n  /** List of components, directives, and pipes declared by this module. */\n  declarations: Type<any>[];\n\n  /** List of modules or `ModuleWithProviders` imported by this module. */\n  imports: Type<any>[];\n\n  /**\n   * List of modules, `ModuleWithProviders`, components, directives, or pipes exported by this\n   * module.\n   */\n  exports: Type<any>[];\n\n  /**\n   * Cached value of computed `transitiveCompileScopes` for this module.\n   *\n   * This should never be read directly, but accessed via `transitiveScopesFor`.\n   */\n  transitiveCompileScopes: NgModuleTransitiveScopes|null;\n}\n\n/**\n * A wrapper around an NgModule that associates it with the providers.\n *\n * @param T the module type. In Ivy applications, this must be explicitly\n * provided.\n *\n * @publicApi\n */\nexport interface ModuleWithProviders<\n    T = any /** TODO(alxhub): remove default when callers pass explicit type param */> {\n  ngModule: Type<T>;\n  providers?: Provider[];\n}\n\n/**\n * A schema definition associated with an NgModule.\n *\n * @see `@NgModule`, `CUSTOM_ELEMENTS_SCHEMA`, `NO_ERRORS_SCHEMA`\n *\n * @param name The name of a defined schema.\n *\n * @publicApi\n */\nexport interface SchemaMetadata { name: string; }\n\n/**\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n * @publicApi\n */\nexport const CUSTOM_ELEMENTS_SCHEMA: SchemaMetadata = {\n  name: 'custom-elements'\n};\n\n/**\n * Defines a schema that allows any property on any element.\n *\n * @publicApi\n */\nexport const NO_ERRORS_SCHEMA: SchemaMetadata = {\n  name: 'no-errors-schema'\n};\n\n\n/**\n * Type of the NgModule decorator / constructor function.\n */\nexport interface NgModuleDecorator {\n  /**\n   * Marks a class as an NgModule and supplies configuration metadata.\n   */\n  (obj?: NgModule): TypeDecorator;\n  new (obj?: NgModule): NgModule;\n}\n\n/**\n * Type of the NgModule metadata.\n *\n * @publicApi\n */\nexport interface NgModule {\n  /**\n   * The set of injectable objects that are available in the injector\n   * of this module.\n   *\n   * @see [Dependency Injection guide](guide/dependency-injection)\n   * @see [NgModule guide](guide/providers)\n   *\n   * @usageNotes\n   *\n   * Dependencies whose providers are listed here become available for injection\n   * into any component, directive, pipe or service that is a child of this injector.\n   * The NgModule used for bootstrapping uses the root injector, and can provide dependencies\n   * to any part of the app.\n   *\n   * A lazy-loaded module has its own injector, typically a child of the app root injector.\n   * Lazy-loaded services are scoped to the lazy-loaded module's injector.\n   * If a lazy-loaded module also provides the `UserService`, any component created\n   * within that module's context (such as by router navigation) gets the local instance\n   * of the service, not the instance in the root injector.\n   * Components in external modules continue to receive the instance provided by their injectors.\n   *\n   * ### Example\n   *\n   * The following example defines a class that is injected in\n   * the HelloWorld NgModule:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @NgModule({\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * The set of components, directives, and pipes ([declarables](guide/glossary#declarable))\n   * that belong to this module.\n   *\n   * @usageNotes\n   *\n   * The set of selectors that are available to a template include those declared here, and\n   * those that are exported from imported NgModules.\n   *\n   * Declarables must belong to exactly one module.\n   * The compiler emits an error if you try to declare the same class in more than one module.\n   * Be careful not to declare a class that is imported from another module.\n   *\n   * ### Example\n   *\n   * The following example allows the CommonModule to use the `NgFor`\n   * directive.\n   *\n   * ```javascript\n   * @NgModule({\n   *   declarations: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  declarations?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of NgModules whose exported [declarables](guide/glossary#declarable)\n   * are available to templates in this module.\n   *\n   * @usageNotes\n   *\n   * A template can use exported declarables from any\n   * imported module, including those from modules that are imported indirectly\n   * and re-exported.\n   * For example, `ModuleA` imports `ModuleB`, and also exports\n   * it, which makes the declarables from `ModuleB` available\n   * wherever `ModuleA` is imported.\n   *\n   * ### Example\n   *\n   * The following example allows MainModule to use anthing exported by\n   * `CommonModule`:\n   *\n   * ```javascript\n   * @NgModule({\n   *   imports: [CommonModule]\n   * })\n   * class MainModule {\n   * }\n   * ```\n   *\n   */\n  imports?: Array<Type<any>|ModuleWithProviders<{}>|any[]>;\n\n  /**\n   * The set of components, directives, and pipes declared in this\n   * NgModule that can be used in the template of any component that is part of an\n   * NgModule that imports this NgModule. Exported declarations are the module's public API.\n   *\n   * A declarable belongs to one and only one NgModule.\n   * A module can list another module among its exports, in which case all of that module's\n   * public declaration are exported.\n   *\n   * @usageNotes\n   *\n   * Declarations are private by default.\n   * If this ModuleA does not export UserComponent, then only the components within this\n   * ModuleA can use UserComponent.\n   *\n   * ModuleA can import ModuleB and also export it, making exports from ModuleB\n   * available to an NgModule that imports ModuleA.\n   *\n   * ### Example\n   *\n   * The following example exports the `NgFor` directive from CommonModule.\n   *\n   * ```javascript\n   * @NgModule({\n   *   exports: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  exports?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of components to compile when this NgModule is defined,\n   * so that they can be dynamically loaded into the view.\n   *\n   * For each component listed here, Angular creates a `ComponentFactory`\n   * and stores it in the `ComponentFactoryResolver`.\n   *\n   * Angular automatically adds components in the module's bootstrap\n   * and route definitions into the `entryComponents` list. Use this\n   * option to add components that are bootstrapped\n   * using one of the imperative techniques, such as `ViewContainerRef.createComponent()`.\n   *\n   * @see [Entry Components](guide/entry-components)\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of components that are bootstrapped when\n   * this module is bootstrapped. The components listed here\n   * are automatically added to `entryComponents`.\n   */\n  bootstrap?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of schemas that declare elements to be allowed in the NgModule.\n   * Elements and properties that are neither Angular components nor directives\n   * must be declared in a schema.\n   *\n   * Allowed value are `NO_ERRORS_SCHEMA` and `CUSTOM_ELEMENTS_SCHEMA`.\n   *\n   * @security When using one of `NO_ERRORS_SCHEMA` or `CUSTOM_ELEMENTS_SCHEMA`\n   * you must ensure that allowed elements and properties securely escape inputs.\n   */\n  schemas?: Array<SchemaMetadata|any[]>;\n\n  /**\n   * A name or path that uniquely identifies this NgModule in `getModuleFactory`.\n   * If left `undefined`, the NgModule is not registered with\n   * `getModuleFactory`.\n   */\n  id?: string;\n\n  /**\n   * If true, this module will be skipped by the AOT compiler and so will always be compiled\n   * using JIT.\n   *\n   * This exists to support future Ivy work and has no effect currently.\n   */\n  jit?: true;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const NgModule: NgModuleDecorator = makeDecorator(\n    'NgModule', (ngModule: NgModule) => ngModule, undefined, undefined,\n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    (type: NgModuleType, meta: NgModule) => SWITCH_COMPILE_NGMODULE(type, meta));\n\n/**\n * @description\n * Hook for manual bootstrapping of the application instead of using bootstrap array in @NgModule\n * annotation.\n *\n * Reference to the current application is provided as a parameter.\n *\n * See [\"Bootstrapping\"](guide/bootstrapping) and [\"Entry components\"](guide/entry-components).\n *\n * @usageNotes\n * ```typescript\n * class AppModule implements DoBootstrap {\n *   ngDoBootstrap(appRef: ApplicationRef) {\n *     appRef.bootstrap(AppComponent); // Or some other component\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport interface DoBootstrap { ngDoBootstrap(appRef: ApplicationRef): void; }\n\nfunction preR3NgModuleCompile(moduleType: InjectorType<any>, metadata: NgModule): void {\n  let imports = (metadata && metadata.imports) || [];\n  if (metadata && metadata.exports) {\n    imports = [...imports, metadata.exports];\n  }\n\n  moduleType.ngInjectorDef = defineInjector({\n    factory: convertInjectableProviderToFactory(moduleType, {useClass: moduleType}),\n    providers: metadata && metadata.providers,\n    imports: imports,\n  });\n}\n\n\nexport const SWITCH_COMPILE_NGMODULE__POST_R3__ = render3CompileNgModule;\nconst SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\nconst SWITCH_COMPILE_NGMODULE: typeof render3CompileNgModule = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {compileInjectable as render3CompileInjectable} from '../render3/jit/injectable';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator} from '../util/decorators';\n\nimport {InjectableDef, InjectableType, defineInjectable, getInjectableDef} from './defs';\nimport {ClassSansProvider, ConstructorSansProvider, ExistingSansProvider, FactorySansProvider, StaticClassSansProvider, ValueSansProvider} from './provider';\nimport {convertInjectableProviderToFactory} from './util';\n\n\n/**\n * Injectable providers used in `@Injectable` decorator.\n *\n * @publicApi\n */\nexport type InjectableProvider = ValueSansProvider | ExistingSansProvider |\n    StaticClassSansProvider | ConstructorSansProvider | FactorySansProvider | ClassSansProvider;\n\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * @publicApi\n */\nexport interface InjectableDecorator {\n  /**\n   * A marker metadata that marks a class as available to `Injector` for creation.\n   *\n   * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Injectable'}\n   *\n   * `Injector` will throw an error when trying to instantiate a class that\n   * does not have `@Injectable` marker, as shown in the example below.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectableThrows'}\n   *\n   */\n  (): TypeDecorator;\n  (options?: {providedIn: Type<any>| 'root' | null}&InjectableProvider): TypeDecorator;\n  new (): Injectable;\n  new (options?: {providedIn: Type<any>| 'root' | null}&InjectableProvider): Injectable;\n}\n\n/**\n * Type of the Injectable metadata.\n *\n * @publicApi\n */\nexport interface Injectable { providedIn?: Type<any>|'root'|null; }\n\n/**\n * Injectable decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Injectable: InjectableDecorator = makeDecorator(\n    'Injectable', undefined, undefined, undefined,\n    (type: Type<any>, meta: Injectable) => SWITCH_COMPILE_INJECTABLE(type as any, meta));\n\n/**\n * Type representing injectable service.\n *\n * @publicApi\n */\nexport interface InjectableType<T> extends Type<T> { ngInjectableDef: InjectableDef<T>; }\n\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction render2CompileInjectable(\n    injectableType: InjectableType<any>,\n    options: {providedIn?: Type<any>| 'root' | null} & InjectableProvider): void {\n  if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n    injectableType.ngInjectableDef = defineInjectable({\n      providedIn: options.providedIn,\n      factory: convertInjectableProviderToFactory(injectableType, options),\n    });\n  }\n}\n\nexport const SWITCH_COMPILE_INJECTABLE__POST_R3__ = render3CompileInjectable;\nconst SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\nconst SWITCH_COMPILE_INJECTABLE: typeof render3CompileInjectable =\n    SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugContext} from './view';\n\nexport const ERROR_TYPE = 'ngType';\nexport const ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nexport const ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nexport const ERROR_LOGGER = 'ngErrorLogger';\n\n\nexport function getType(error: Error): Function {\n  return (error as any)[ERROR_TYPE];\n}\n\nexport function getDebugContext(error: Error): DebugContext {\n  return (error as any)[ERROR_DEBUG_CONTEXT];\n}\n\nexport function getOriginalError(error: Error): Error {\n  return (error as any)[ERROR_ORIGINAL_ERROR];\n}\n\nexport function getErrorLogger(error: Error): (console: Console, ...values: any[]) => void {\n  return (error as any)[ERROR_LOGGER] || defaultErrorLogger;\n}\n\n\nfunction defaultErrorLogger(console: Console, ...values: any[]) {\n  (<any>console.error)(...values);\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError} from './errors';\n\n\n\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * @publicApi\n */\nexport class ErrorHandler {\n  /**\n   * @internal\n   */\n  _console: Console = console;\n\n  handleError(error: any): void {\n    const originalError = this._findOriginalError(error);\n    const context = this._findContext(error);\n    // Note: Browser consoles show the place from where console.error was called.\n    // We can use this to give users additional information about the error.\n    const errorLogger = getErrorLogger(error);\n\n    errorLogger(this._console, `ERROR`, error);\n    if (originalError) {\n      errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n    }\n    if (context) {\n      errorLogger(this._console, 'ERROR CONTEXT', context);\n    }\n  }\n\n  /** @internal */\n  _findContext(error: any): any {\n    if (error) {\n      return getDebugContext(error) ? getDebugContext(error) :\n                                      this._findContext(getOriginalError(error));\n    }\n\n    return null;\n  }\n\n  /** @internal */\n  _findOriginalError(error: Error): any {\n    let e = getOriginalError(error);\n    while (e && getOriginalError(e)) {\n      e = getOriginalError(e);\n    }\n\n    return e;\n  }\n}\n\nexport function wrappedError(message: string, originalError: any): Error {\n  const msg =\n      `${message} caused by: ${originalError instanceof Error ? originalError.message: originalError }`;\n  const error = Error(msg);\n  (error as any)[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { FactoryOrValue, MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subjectOrSubjectFactory: FactoryOrValue<Subject<T>>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<R>>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: OperatorFunction<T, R>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * ![](multicast.png)\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../types';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * ![](share.png)\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\n/**\n * Determine if the argument is shaped like a Promise\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n\n/**\n * Determine if the argument is an Observable\n */\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\n  // TODO: use isObservable once we update pass rxjs 6.1\n  // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n  return !!obj && typeof obj.subscribe === 'function';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPromise} from '../src/util/lang';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\n\n\n/**\n * A function that will be executed when an application is initialized.\n *\n * @publicApi\n */\nexport const APP_INITIALIZER = new InjectionToken<Array<() => void>>('Application Initializer');\n\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @publicApi\n */\n@Injectable()\nexport class ApplicationInitStatus {\n  // TODO(issue/24571): remove '!'.\n  private resolve !: Function;\n  // TODO(issue/24571): remove '!'.\n  private reject !: Function;\n  private initialized = false;\n  public readonly donePromise: Promise<any>;\n  public readonly done = false;\n\n  constructor(@Inject(APP_INITIALIZER) @Optional() private appInits: (() => any)[]) {\n    this.donePromise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n\n  /** @internal */\n  runInitializers() {\n    if (this.initialized) {\n      return;\n    }\n\n    const asyncInitPromises: Promise<any>[] = [];\n\n    const complete = () => {\n      (this as{done: boolean}).done = true;\n      this.resolve();\n    };\n\n    if (this.appInits) {\n      for (let i = 0; i < this.appInits.length; i++) {\n        const initResult = this.appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n\n    Promise.all(asyncInitPromises).then(() => { complete(); }).catch(e => { this.reject(e); });\n\n    if (asyncInitPromises.length === 0) {\n      complete();\n    }\n    this.initialized = true;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../util';\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @publicApi\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n\ninterface WTF {\n  trace: Trace;\n}\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n\nexport interface Range {}\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet trace: Trace;\nlet events: Events;\n\nexport function detectWTF(): boolean {\n  const wtf: WTF = (global as any /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n\nexport function leave<T>(scope: Scope): void;\nexport function leave<T>(scope: Scope, returnValue?: T): T;\nexport function leave<T>(scope: Scope, returnValue?: any): any {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from './di';\nimport {ComponentRef} from './linker/component_factory';\n\n\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @publicApi\n */\nexport const APP_ID = new InjectionToken<string>('AppId');\n\nexport function _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @publicApi\n */\nexport const APP_ID_RANDOM_PROVIDER = {\n  provide: APP_ID,\n  useFactory: _appIdRandomProviderFactory,\n  deps: <any[]>[],\n};\n\nfunction _randomChar(): string {\n  return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n\n/**\n * A function that will be executed when a platform is initialized.\n * @publicApi\n */\nexport const PLATFORM_INITIALIZER = new InjectionToken<Array<() => void>>('Platform Initializer');\n\n/**\n * A token that indicates an opaque platform id.\n * @publicApi\n */\nexport const PLATFORM_ID = new InjectionToken<Object>('Platform ID');\n\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @publicApi\n */\nexport const APP_BOOTSTRAP_LISTENER =\n    new InjectionToken<Array<(compRef: ComponentRef<any>) => void>>('appBootstrapListener');\n\n/**\n * A token which indicates the root directory of the application\n * @publicApi\n */\nexport const PACKAGE_ROOT_URL = new InjectionToken<string>('Application Packages Root URL');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from './di';\n\n@Injectable()\nexport class Console {\n  log(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.log(message);\n  }\n  // Note: for reporting errors use `DOM.logError()` as it is platform specific\n  warn(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.warn(message);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../di/injectable';\nimport {InjectionToken} from '../di/injection_token';\nimport {StaticProvider} from '../di/provider';\nimport {MissingTranslationStrategy} from '../i18n/tokens';\nimport {ViewEncapsulation} from '../metadata';\nimport {NgModuleFactory as NgModuleFactoryR3} from '../render3/ng_module_ref';\nimport {Type} from '../type';\n\nimport {ComponentFactory} from './component_factory';\nimport {NgModuleFactory} from './ng_module_factory';\n\n\n\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @publicApi\n */\nexport class ModuleWithComponentFactories<T> {\n  constructor(\n      public ngModuleFactory: NgModuleFactory<T>,\n      public componentFactories: ComponentFactory<any>[]) {}\n}\n\n\nfunction _throwError() {\n  throw new Error(`Runtime compiler is not loaded`);\n}\n\nconst Compiler_compileModuleSync__PRE_R3__: <T>(moduleType: Type<T>) => NgModuleFactory<T> =\n    _throwError as any;\nexport const Compiler_compileModuleSync__POST_R3__: <T>(moduleType: Type<T>) =>\n    NgModuleFactory<T> = function<T>(moduleType: Type<T>): NgModuleFactory<T> {\n  return new NgModuleFactoryR3(moduleType);\n};\nconst Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n\nconst Compiler_compileModuleAsync__PRE_R3__: <T>(moduleType: Type<T>) =>\n    Promise<NgModuleFactory<T>> = _throwError as any;\nexport const Compiler_compileModuleAsync__POST_R3__: <T>(moduleType: Type<T>) =>\n    Promise<NgModuleFactory<T>> = function<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n  return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n};\nconst Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n\nconst Compiler_compileModuleAndAllComponentsSync__PRE_R3__: <T>(moduleType: Type<T>) =>\n    ModuleWithComponentFactories<T> = _throwError as any;\nexport const Compiler_compileModuleAndAllComponentsSync__POST_R3__: <T>(moduleType: Type<T>) =>\n    ModuleWithComponentFactories<T> = function<T>(moduleType: Type<T>):\n        ModuleWithComponentFactories<T> {\n  return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n};\nconst Compiler_compileModuleAndAllComponentsSync =\n    Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n\nconst Compiler_compileModuleAndAllComponentsAsync__PRE_R3__: <T>(moduleType: Type<T>) =>\n    Promise<ModuleWithComponentFactories<T>> = _throwError as any;\nexport const Compiler_compileModuleAndAllComponentsAsync__POST_R3__: <T>(moduleType: Type<T>) =>\n    Promise<ModuleWithComponentFactories<T>> = function<T>(moduleType: Type<T>):\n        Promise<ModuleWithComponentFactories<T>> {\n  return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n};\nconst Compiler_compileModuleAndAllComponentsAsync =\n    Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n * @publicApi\n */\n@Injectable()\nexport class Compiler {\n  /**\n   * Compiles the given NgModule and all of its components. All templates of the components listed\n   * in `entryComponents` have to be inlined.\n   */\n  compileModuleSync: <T>(moduleType: Type<T>) => NgModuleFactory<T> = Compiler_compileModuleSync;\n\n  /**\n   * Compiles the given NgModule and all of its components\n   */\n  compileModuleAsync:\n      <T>(moduleType: Type<T>) => Promise<NgModuleFactory<T>> = Compiler_compileModuleAsync;\n\n  /**\n   * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n   */\n  compileModuleAndAllComponentsSync: <T>(moduleType: Type<T>) => ModuleWithComponentFactories<T> =\n      Compiler_compileModuleAndAllComponentsSync;\n\n  /**\n   * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n   */\n  compileModuleAndAllComponentsAsync: <T>(moduleType: Type<T>) =>\n      Promise<ModuleWithComponentFactories<T>> = Compiler_compileModuleAndAllComponentsAsync;\n\n  /**\n   * Clears all caches.\n   */\n  clearCache(): void {}\n\n  /**\n   * Clears the cache for the given component/ngModule.\n   */\n  clearCacheFor(type: Type<any>) {}\n\n  /**\n   * Returns the id for a given NgModule, if one is defined and known to the compiler.\n   */\n  getModuleId(moduleType: Type<any>): string|undefined { return undefined; }\n}\n\n/**\n * Options for creating a compiler\n *\n * @publicApi\n */\nexport type CompilerOptions = {\n  useJit?: boolean,\n  defaultEncapsulation?: ViewEncapsulation,\n  providers?: StaticProvider[],\n  missingTranslation?: MissingTranslationStrategy,\n  preserveWhitespaces?: boolean,\n};\n\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @publicApi\n */\nexport const COMPILER_OPTIONS = new InjectionToken<CompilerOptions[]>('compilerOptions');\n\n/**\n * A factory for creating a Compiler\n *\n * @publicApi\n */\nexport abstract class CompilerFactory {\n  abstract createCompiler(options?: CompilerOptions[]): Compiler;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WtfScopeFn, createScope, detectWTF, endTimeRange, leave, startTimeRange} from './wtf_impl';\n\nexport {WtfScopeFn} from './wtf_impl';\n\n\n/**\n * True if WTF is enabled.\n */\nexport const wtfEnabled = detectWTF();\n\nfunction noopScope(arg0?: any, arg1?: any): any {\n  return null;\n}\n\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @publicApi\n */\nexport const wtfCreateScope: (signature: string, flags?: any) => WtfScopeFn =\n    wtfEnabled ? createScope : (signature: string, flags?: any) => noopScope;\n\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @publicApi\n */\nexport const wtfLeave: <T>(scope: any, returnValue?: T) => T =\n    wtfEnabled ? leave : (s: any, r?: any) => r;\n\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @publicApi\n */\nexport const wtfStartTimeRange: (rangeType: string, action: string) => any =\n    wtfEnabled ? startTimeRange : (rangeType: string, action: string) => null;\n\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @publicApi\n */\nexport const wtfEndTimeRange: (range: any) => void = wtfEnabled ? endTimeRange : (r: any) => null;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter} from '../event_emitter';\n\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport class NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n\n  /**\n   * Whether there are no outstanding microtasks or macrotasks.\n   */\n  readonly isStable: boolean = true;\n\n  /**\n   * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n   */\n  readonly onUnstable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when there is no more microtasks enqueued in the current VM Turn.\n   * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n   * For this reason this event can fire multiple times per VM Turn.\n   */\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n   * implies we are about to relinquish VM turn.\n   * This event gets called just once.\n   */\n  readonly onStable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies that an error has been delivered.\n   */\n  readonly onError: EventEmitter<any> = new EventEmitter(false);\n\n  constructor({enableLongStackTrace = false}) {\n    if (typeof Zone == 'undefined') {\n      throw new Error(`In this configuration Angular requires Zone.js`);\n    }\n\n    Zone.assertZonePatched();\n    const self = this as any as NgZonePrivate;\n    self._nesting = 0;\n\n    self._outer = self._inner = Zone.current;\n\n    if ((Zone as any)['wtfZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['wtfZoneSpec']);\n    }\n\n    if ((Zone as any)['TaskTrackingZoneSpec']) {\n      self._inner = self._inner.fork(new ((Zone as any)['TaskTrackingZoneSpec'] as any));\n    }\n\n    if (enableLongStackTrace && (Zone as any)['longStackTraceZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['longStackTraceZoneSpec']);\n    }\n\n    forkInnerZoneWithAngularBehavior(self);\n  }\n\n  static isInAngularZone(): boolean { return Zone.current.get('isAngularZone') === true; }\n\n  static assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n\n  static assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n   * the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  run<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.run(fn, applyThis, applyArgs) as T;\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n   * returned by the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  runTask<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[], name?: string): T {\n    const zone = (this as any as NgZonePrivate)._inner;\n    const task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n    try {\n      return zone.runTask(task, applyThis, applyArgs) as T;\n    } finally {\n      zone.cancelTask(task);\n    }\n  }\n\n  /**\n   * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n   * rethrown.\n   */\n  runGuarded<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.runGuarded(fn, applyThis, applyArgs) as T;\n  }\n\n  /**\n   * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n   * the function.\n   *\n   * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n   * work that\n   * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * outside of the Angular zone.\n   *\n   * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n   */\n  runOutsideAngular<T>(fn: (...args: any[]) => T): T {\n    return (this as any as NgZonePrivate)._outer.run(fn) as T;\n  }\n}\n\nfunction noop() {}\nconst EMPTY_PAYLOAD = {};\n\n\ninterface NgZonePrivate extends NgZone {\n  _outer: Zone;\n  _inner: Zone;\n  _nesting: number;\n\n  hasPendingMicrotasks: boolean;\n  hasPendingMacrotasks: boolean;\n  isStable: boolean;\n}\n\nfunction checkStable(zone: NgZonePrivate) {\n  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n    try {\n      zone._nesting++;\n      zone.onMicrotaskEmpty.emit(null);\n    } finally {\n      zone._nesting--;\n      if (!zone.hasPendingMicrotasks) {\n        try {\n          zone.runOutsideAngular(() => zone.onStable.emit(null));\n        } finally {\n          zone.isStable = true;\n        }\n      }\n    }\n  }\n}\n\nfunction forkInnerZoneWithAngularBehavior(zone: NgZonePrivate) {\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: <any>{'isAngularZone': true},\n    onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task, applyThis: any,\n                   applyArgs: any): any => {\n      try {\n        onEnter(zone);\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n\n    onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function,\n               applyThis: any, applyArgs: any[], source: string): any => {\n      try {\n        onEnter(zone);\n        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n    onHasTask:\n        (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n          delegate.hasTask(target, hasTaskState);\n          if (current === target) {\n            // We are only interested in hasTask events which originate from our zone\n            // (A child hasTask event is not interesting to us)\n            if (hasTaskState.change == 'microTask') {\n              zone.hasPendingMicrotasks = hasTaskState.microTask;\n              checkStable(zone);\n            } else if (hasTaskState.change == 'macroTask') {\n              zone.hasPendingMacrotasks = hasTaskState.macroTask;\n            }\n          }\n        },\n\n    onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n      delegate.handleError(target, error);\n      zone.runOutsideAngular(() => zone.onError.emit(error));\n      return false;\n    }\n  });\n}\n\nfunction onEnter(zone: NgZonePrivate) {\n  zone._nesting++;\n  if (zone.isStable) {\n    zone.isStable = false;\n    zone.onUnstable.emit(null);\n  }\n}\n\nfunction onLeave(zone: NgZonePrivate) {\n  zone._nesting--;\n  checkStable(zone);\n}\n\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nexport class NoopNgZone implements NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n  readonly isStable: boolean = true;\n  readonly onUnstable: EventEmitter<any> = new EventEmitter();\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter();\n  readonly onStable: EventEmitter<any> = new EventEmitter();\n  readonly onError: EventEmitter<any> = new EventEmitter();\n\n  run(fn: () => any): any { return fn(); }\n\n  runGuarded(fn: () => any): any { return fn(); }\n\n  runOutsideAngular(fn: () => any): any { return fn(); }\n\n  runTask<T>(fn: () => any): any { return fn(); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable, Observer, Subscription, merge} from 'rxjs';\nimport {share} from 'rxjs/operators';\n\nimport {ApplicationInitStatus} from './application_init';\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {Console} from './console';\nimport {Injectable, InjectionToken, Injector, StaticProvider} from './di';\nimport {ErrorHandler} from './error_handler';\nimport {isDevMode} from './is_dev_mode';\nimport {CompilerFactory, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nimport {InternalViewRef, ViewRef} from './linker/view_ref';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from './profile/profile';\nimport {assertNgModuleType} from './render3/assert';\nimport {NgModuleFactory as R3NgModuleFactory} from './render3/ng_module_ref';\nimport {Testability, TestabilityRegistry} from './testability/testability';\nimport {Type} from './type';\nimport {scheduleMicroTask, stringify} from './util';\nimport {isPromise} from './util/lang';\nimport {NgZone, NoopNgZone} from './zone/ng_zone';\n\nlet _platform: PlatformRef;\n\nlet compileNgModuleFactory:\n    <M>(injector: Injector, options: CompilerOptions, moduleType: Type<M>) =>\n        Promise<NgModuleFactory<M>> = compileNgModuleFactory__PRE_R3__;\n\nfunction compileNgModuleFactory__PRE_R3__<M>(\n    injector: Injector, options: CompilerOptions,\n    moduleType: Type<M>): Promise<NgModuleFactory<M>> {\n  const compilerFactory: CompilerFactory = injector.get(CompilerFactory);\n  const compiler = compilerFactory.createCompiler([options]);\n  return compiler.compileModuleAsync(moduleType);\n}\n\nexport function compileNgModuleFactory__POST_R3__<M>(\n    injector: Injector, options: CompilerOptions,\n    moduleType: Type<M>): Promise<NgModuleFactory<M>> {\n  ngDevMode && assertNgModuleType(moduleType);\n  return Promise.resolve(new R3NgModuleFactory(moduleType));\n}\n\nexport const ALLOW_MULTIPLE_PLATFORMS = new InjectionToken<boolean>('AllowMultipleToken');\n\n\n\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @publicApi\n */\nexport class NgProbeToken {\n  constructor(public name: string, public token: any) {}\n}\n\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @publicApi\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (_platform && !_platform.destroyed &&\n      !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n    throw new Error(\n        'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const inits = injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) inits.forEach((init: any) => init());\n  return _platform;\n}\n\n/**\n * Creates a factory for a platform\n *\n * @publicApi\n */\nexport function createPlatformFactory(\n    parentPlatformFactory: ((extraProviders?: StaticProvider[]) => PlatformRef) | null,\n    name: string, providers: StaticProvider[] = []): (extraProviders?: StaticProvider[]) =>\n    PlatformRef {\n  const desc = `Platform: ${name}`;\n  const marker = new InjectionToken(desc);\n  return (extraProviders: StaticProvider[] = []) => {\n    let platform = getPlatform();\n    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n      if (parentPlatformFactory) {\n        parentPlatformFactory(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true}));\n      } else {\n        const injectedProviders: StaticProvider[] =\n            providers.concat(extraProviders).concat({provide: marker, useValue: true});\n        createPlatform(Injector.create({providers: injectedProviders, name: desc}));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @publicApi\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  const platform = getPlatform();\n\n  if (!platform) {\n    throw new Error('No platform exists!');\n  }\n\n  if (!platform.injector.get(requiredToken, null)) {\n    throw new Error(\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n\n  return platform;\n}\n\n/**\n * Destroy the existing platform.\n *\n * @publicApi\n */\nexport function destroyPlatform(): void {\n  if (_platform && !_platform.destroyed) {\n    _platform.destroy();\n  }\n}\n\n/**\n * Returns the current platform.\n *\n * @publicApi\n */\nexport function getPlatform(): PlatformRef|null {\n  return _platform && !_platform.destroyed ? _platform : null;\n}\n\n/**\n * Provides additional options to the bootstraping process.\n *\n *\n */\nexport interface BootstrapOptions {\n  /**\n   * Optionally specify which `NgZone` should be used.\n   *\n   * - Provide your own `NgZone` instance.\n   * - `zone.js` - Use default `NgZone` which requires `Zone.js`.\n   * - `noop` - Use `NoopNgZone` which does nothing.\n   */\n  ngZone?: NgZone|'zone.js'|'noop';\n}\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n *\n * @publicApi\n */\n@Injectable()\nexport class PlatformRef {\n  private _modules: NgModuleRef<any>[] = [];\n  private _destroyListeners: Function[] = [];\n  private _destroyed: boolean = false;\n\n  /** @internal */\n  constructor(private _injector: Injector) {}\n\n  /**\n   * Creates an instance of an `@NgModule` for the given platform\n   * for offline compilation.\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * ```typescript\n   * my_module.ts:\n   *\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * main.ts:\n   * import {MyModuleNgFactory} from './my_module.ngfactory';\n   * import {platformBrowser} from '@angular/platform-browser';\n   *\n   * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n   * ```\n   */\n  bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>, options?: BootstrapOptions):\n      Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    const ngZoneOption = options ? options.ngZone : undefined;\n    const ngZone = getNgZone(ngZoneOption);\n    const providers: StaticProvider[] = [{provide: NgZone, useValue: ngZone}];\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const ngZoneInjector = Injector.create(\n          {providers: providers, parent: this.injector, name: moduleFactory.moduleType.name});\n      const moduleRef = <InternalNgModuleRef<M>>moduleFactory.create(ngZoneInjector);\n      const exceptionHandler: ErrorHandler = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      moduleRef.onDestroy(() => remove(this._modules, moduleRef));\n      ngZone !.runOutsideAngular(\n          () => ngZone !.onError.subscribe(\n              {next: (error: any) => { exceptionHandler.handleError(error); }}));\n      return _callAndReportToErrorHandler(exceptionHandler, ngZone !, () => {\n        const initStatus: ApplicationInitStatus = moduleRef.injector.get(ApplicationInitStatus);\n        initStatus.runInitializers();\n        return initStatus.donePromise.then(() => {\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n\n  /**\n   * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * ```typescript\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n   * ```\n   *\n   */\n  bootstrapModule<M>(\n      moduleType: Type<M>, compilerOptions: (CompilerOptions&BootstrapOptions)|\n      Array<CompilerOptions&BootstrapOptions> = []): Promise<NgModuleRef<M>> {\n    const options = optionsReducer({}, compilerOptions);\n    return compileNgModuleFactory(this.injector, options, moduleType)\n        .then(moduleFactory => this.bootstrapModuleFactory(moduleFactory, options));\n  }\n\n  private _moduleDoBootstrap(moduleRef: InternalNgModuleRef<any>): void {\n    const appRef = moduleRef.injector.get(ApplicationRef) as ApplicationRef;\n    if (moduleRef._bootstrapComponents.length > 0) {\n      moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new Error(\n          `The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n          `Please define one of these.`);\n    }\n    this._modules.push(moduleRef);\n  }\n\n  /**\n   * Register a listener to be called when the platform is disposed.\n   */\n  onDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n\n  /**\n   * Retrieve the platform {@link Injector}, which is the parent injector for\n   * every Angular application on the page and provides singleton providers.\n   */\n  get injector(): Injector { return this._injector; }\n\n  /**\n   * Destroy the Angular platform and all Angular applications on the page.\n   */\n  destroy() {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\n\n  get destroyed() { return this._destroyed; }\n}\n\nfunction getNgZone(ngZoneOption?: NgZone | 'zone.js' | 'noop'): NgZone {\n  let ngZone: NgZone;\n\n  if (ngZoneOption === 'noop') {\n    ngZone = new NoopNgZone();\n  } else {\n    ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n        new NgZone({enableLongStackTrace: isDevMode()});\n  }\n  return ngZone;\n}\n\nfunction _callAndReportToErrorHandler(\n    errorHandler: ErrorHandler, ngZone: NgZone, callback: () => any): any {\n  try {\n    const result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n\n    return result;\n  } catch (e) {\n    ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n\nfunction optionsReducer<T extends Object>(dst: any, objs: T | T[]): T {\n  if (Array.isArray(objs)) {\n    dst = objs.reduce(optionsReducer, dst);\n  } else {\n    dst = {...dst, ...(objs as any)};\n  }\n  return dst;\n}\n\n/**\n * A reference to an Angular application running on a page.\n *\n * @publicApi\n */\n@Injectable()\nexport class ApplicationRef {\n  /** @internal */\n  static _tickScope: WtfScopeFn = wtfCreateScope('ApplicationRef#tick()');\n  private _bootstrapListeners: ((compRef: ComponentRef<any>) => void)[] = [];\n  private _views: InternalViewRef[] = [];\n  private _runningTick: boolean = false;\n  private _enforceNoNewChanges: boolean = false;\n  private _stable = true;\n\n  /**\n   * Get a list of component types registered to this application.\n   * This list is populated even before the component is created.\n   */\n  public readonly componentTypes: Type<any>[] = [];\n\n  /**\n   * Get a list of components registered to this application.\n   */\n  public readonly components: ComponentRef<any>[] = [];\n\n  /**\n   * Returns an Observable that indicates when the application is stable or unstable.\n   */\n  // TODO(issue/24571): remove '!'.\n  public readonly isStable !: Observable<boolean>;\n\n  /** @internal */\n  constructor(\n      private _zone: NgZone, private _console: Console, private _injector: Injector,\n      private _exceptionHandler: ErrorHandler,\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _initStatus: ApplicationInitStatus) {\n    this._enforceNoNewChanges = isDevMode();\n\n    this._zone.onMicrotaskEmpty.subscribe(\n        {next: () => { this._zone.run(() => { this.tick(); }); }});\n\n    const isCurrentlyStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n          !this._zone.hasPendingMicrotasks;\n      this._zone.runOutsideAngular(() => {\n        observer.next(this._stable);\n        observer.complete();\n      });\n    });\n\n    const isStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      // Create the subscription to onStable outside the Angular Zone so that\n      // the callback is run outside the Angular Zone.\n      let stableSub: Subscription;\n      this._zone.runOutsideAngular(() => {\n        stableSub = this._zone.onStable.subscribe(() => {\n          NgZone.assertNotInAngularZone();\n\n          // Check whether there are no pending macro/micro tasks in the next tick\n          // to allow for NgZone to update the state.\n          scheduleMicroTask(() => {\n            if (!this._stable && !this._zone.hasPendingMacrotasks &&\n                !this._zone.hasPendingMicrotasks) {\n              this._stable = true;\n              observer.next(true);\n            }\n          });\n        });\n      });\n\n      const unstableSub: Subscription = this._zone.onUnstable.subscribe(() => {\n        NgZone.assertInAngularZone();\n        if (this._stable) {\n          this._stable = false;\n          this._zone.runOutsideAngular(() => { observer.next(false); });\n        }\n      });\n\n      return () => {\n        stableSub.unsubscribe();\n        unstableSub.unsubscribe();\n      };\n    });\n\n    (this as{isStable: Observable<boolean>}).isStable =\n        merge(isCurrentlyStable, isStable.pipe(share()));\n  }\n\n  /**\n   * Bootstrap a new component at the root level of the application.\n   *\n   * @usageNotes\n   * ### Bootstrap process\n   *\n   * When bootstrapping a new root component into an application, Angular mounts the\n   * specified application component onto DOM elements identified by the componentType's\n   * selector and kicks off automatic change detection to finish initializing the component.\n   *\n   * Optionally, a component can be mounted onto a DOM element that does not match the\n   * componentType's selector.\n   *\n   * ### Example\n   * {@example core/ts/platform/platform.ts region='longform'}\n   */\n  bootstrap<C>(componentOrFactory: ComponentFactory<C>|Type<C>, rootSelectorOrNode?: string|any):\n      ComponentRef<C> {\n    if (!this._initStatus.done) {\n      throw new Error(\n          'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n    }\n    let componentFactory: ComponentFactory<C>;\n    if (componentOrFactory instanceof ComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      componentFactory =\n          this._componentFactoryResolver.resolveComponentFactory(componentOrFactory) !;\n    }\n    this.componentTypes.push(componentFactory.componentType);\n\n    // Create a factory associated with the current module if it's not bound to some other\n    const ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n        null :\n        this._injector.get(NgModuleRef);\n    const selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n    const compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n\n    compRef.onDestroy(() => { this._unloadComponent(compRef); });\n    const testability = compRef.injector.get(Testability, null);\n    if (testability) {\n      compRef.injector.get(TestabilityRegistry)\n          .registerApplication(compRef.location.nativeElement, testability);\n    }\n\n    this._loadComponent(compRef);\n    if (isDevMode()) {\n      this._console.log(\n          `Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n    }\n    return compRef;\n  }\n\n  /**\n   * Invoke this method to explicitly process change detection and its side-effects.\n   *\n   * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n   * further changes are detected. If additional changes are picked up during this second cycle,\n   * bindings in the app have side-effects that cannot be resolved in a single change detection\n   * pass.\n   * In this case, Angular throws an error, since an Angular application can only have one change\n   * detection pass during which all change detection must complete.\n   */\n  tick(): void {\n    if (this._runningTick) {\n      throw new Error('ApplicationRef.tick is called recursively');\n    }\n\n    const scope = ApplicationRef._tickScope();\n    try {\n      this._runningTick = true;\n      this._views.forEach((view) => view.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._views.forEach((view) => view.checkNoChanges());\n      }\n    } catch (e) {\n      // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n      this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n    } finally {\n      this._runningTick = false;\n      wtfLeave(scope);\n    }\n  }\n\n  /**\n   * Attaches a view so that it will be dirty checked.\n   * The view will be automatically detached when it is destroyed.\n   * This will throw if the view is already attached to a ViewContainer.\n   */\n  attachView(viewRef: ViewRef): void {\n    const view = (viewRef as InternalViewRef);\n    this._views.push(view);\n    view.attachToAppRef(this);\n  }\n\n  /**\n   * Detaches a view from dirty checking again.\n   */\n  detachView(viewRef: ViewRef): void {\n    const view = (viewRef as InternalViewRef);\n    remove(this._views, view);\n    view.detachFromAppRef();\n  }\n\n  private _loadComponent(componentRef: ComponentRef<any>): void {\n    this.attachView(componentRef.hostView);\n    this.tick();\n    this.components.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const listeners =\n        this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n    listeners.forEach((listener) => listener(componentRef));\n  }\n\n  private _unloadComponent(componentRef: ComponentRef<any>): void {\n    this.detachView(componentRef.hostView);\n    remove(this.components, componentRef);\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    // TODO(alxhub): Dispose of the NgZone.\n    this._views.slice().forEach((view) => view.destroy());\n  }\n\n  /**\n   * Returns the number of attached views.\n   */\n  get viewCount() { return this._views.length; }\n}\n\nfunction remove<T>(list: T[], el: T): void {\n  const index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../di';\nimport {scheduleMicroTask} from '../util';\nimport {NgZone} from '../zone/ng_zone';\n\n/**\n * Testability API.\n * `declare` keyword causes tsickle to generate externs, so these methods are\n * not renamed by Closure Compiler.\n * @publicApi\n */\nexport declare interface PublicTestability {\n  isStable(): boolean;\n  whenStable(callback: Function, timeout?: number, updateCallback?: Function): void;\n  findProviders(using: any, provider: string, exactMatch: boolean): any[];\n}\n\n// Angular internal, not intended for public API.\nexport interface PendingMacrotask {\n  source: string;\n  creationLocation: Error;\n  runCount?: number;\n  data: TaskData;\n}\n\nexport interface TaskData {\n  target?: XMLHttpRequest;\n  delay?: number;\n  isPeriodic?: boolean;\n}\n\n// Angular internal, not intended for public API.\nexport type DoneCallback = (didWork: boolean, tasks?: PendingMacrotask[]) => void;\nexport type UpdateCallback = (tasks: PendingMacrotask[]) => boolean;\n\ninterface WaitCallback {\n  // Needs to be 'any' - setTimeout returns a number according to ES6, but\n  // on NodeJS it returns a Timer.\n  timeoutId: any;\n  doneCb: DoneCallback;\n  updateCb?: UpdateCallback;\n}\n\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @publicApi\n */\n@Injectable()\nexport class Testability implements PublicTestability {\n  private _pendingCount: number = 0;\n  private _isZoneStable: boolean = true;\n  /**\n   * Whether any work was done since the last 'whenStable' callback. This is\n   * useful to detect if this could have potentially destabilized another\n   * component while it is stabilizing.\n   * @internal\n   */\n  private _didWork: boolean = false;\n  private _callbacks: WaitCallback[] = [];\n\n  private taskTrackingZone: {macroTasks: Task[]}|null = null;\n\n  constructor(private _ngZone: NgZone) {\n    this._watchAngularEvents();\n    _ngZone.run(() => {\n      this.taskTrackingZone =\n          typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n    });\n  }\n\n  private _watchAngularEvents(): void {\n    this._ngZone.onUnstable.subscribe({\n      next: () => {\n        this._didWork = true;\n        this._isZoneStable = false;\n      }\n    });\n\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.subscribe({\n        next: () => {\n          NgZone.assertNotInAngularZone();\n          scheduleMicroTask(() => {\n            this._isZoneStable = true;\n            this._runCallbacksIfReady();\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Increases the number of pending request\n   * @deprecated pending requests are now tracked with zones.\n   */\n  increasePendingRequestCount(): number {\n    this._pendingCount += 1;\n    this._didWork = true;\n    return this._pendingCount;\n  }\n\n  /**\n   * Decreases the number of pending request\n   * @deprecated pending requests are now tracked with zones\n   */\n  decreasePendingRequestCount(): number {\n    this._pendingCount -= 1;\n    if (this._pendingCount < 0) {\n      throw new Error('pending async requests below zero');\n    }\n    this._runCallbacksIfReady();\n    return this._pendingCount;\n  }\n\n  /**\n   * Whether an associated application is stable\n   */\n  isStable(): boolean {\n    return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n  }\n\n  private _runCallbacksIfReady(): void {\n    if (this.isStable()) {\n      // Schedules the call backs in a new frame so that it is always async.\n      scheduleMicroTask(() => {\n        while (this._callbacks.length !== 0) {\n          let cb = this._callbacks.pop() !;\n          clearTimeout(cb.timeoutId);\n          cb.doneCb(this._didWork);\n        }\n        this._didWork = false;\n      });\n    } else {\n      // Still not stable, send updates.\n      let pending = this.getPendingTasks();\n      this._callbacks = this._callbacks.filter((cb) => {\n        if (cb.updateCb && cb.updateCb(pending)) {\n          clearTimeout(cb.timeoutId);\n          return false;\n        }\n\n        return true;\n      });\n\n      this._didWork = true;\n    }\n  }\n\n  private getPendingTasks(): PendingMacrotask[] {\n    if (!this.taskTrackingZone) {\n      return [];\n    }\n\n    // Copy the tasks data so that we don't leak tasks.\n    return this.taskTrackingZone.macroTasks.map((t: Task) => {\n      return {\n        source: t.source,\n        // From TaskTrackingZone:\n        // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n        creationLocation: (t as any).creationLocation as Error,\n        data: t.data\n      };\n    });\n  }\n\n  private addCallback(cb: DoneCallback, timeout?: number, updateCb?: UpdateCallback) {\n    let timeoutId: any = -1;\n    if (timeout && timeout > 0) {\n      timeoutId = setTimeout(() => {\n        this._callbacks = this._callbacks.filter((cb) => cb.timeoutId !== timeoutId);\n        cb(this._didWork, this.getPendingTasks());\n      }, timeout);\n    }\n    this._callbacks.push(<WaitCallback>{doneCb: cb, timeoutId: timeoutId, updateCb: updateCb});\n  }\n\n  /**\n   * Wait for the application to be stable with a timeout. If the timeout is reached before that\n   * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n   *\n   * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n   *    whichever comes first.\n   * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n   *    specified, whenStable() will wait forever.\n   * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n   *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n   *    and no further updates will be issued.\n   */\n  whenStable(doneCb: Function, timeout?: number, updateCb?: Function): void {\n    if (updateCb && !this.taskTrackingZone) {\n      throw new Error(\n          'Task tracking zone is required when passing an update callback to ' +\n          'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n    }\n    // These arguments are 'Function' above to keep the public API simple.\n    this.addCallback(doneCb as DoneCallback, timeout, updateCb as UpdateCallback);\n    this._runCallbacksIfReady();\n  }\n\n  /**\n   * Get the number of pending requests\n   * @deprecated pending requests are now tracked with zones\n   */\n  getPendingRequestCount(): number { return this._pendingCount; }\n\n  /**\n   * Find providers by name\n   * @param using The root element to search from\n   * @param provider The name of binding variable\n   * @param exactMatch Whether using exactMatch\n   */\n  findProviders(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\n}\n\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @publicApi\n */\n@Injectable()\nexport class TestabilityRegistry {\n  /** @internal */\n  _applications = new Map<any, Testability>();\n\n  constructor() { _testabilityGetter.addToWindow(this); }\n\n  /**\n   * Registers an application with a testability hook so that it can be tracked\n   * @param token token of application, root element\n   * @param testability Testability hook\n   */\n  registerApplication(token: any, testability: Testability) {\n    this._applications.set(token, testability);\n  }\n\n  /**\n   * Unregisters an application.\n   * @param token token of application, root element\n   */\n  unregisterApplication(token: any) { this._applications.delete(token); }\n\n  /**\n   * Unregisters all applications\n   */\n  unregisterAllApplications() { this._applications.clear(); }\n\n  /**\n   * Get a testability hook associated with the application\n   * @param elem root element\n   */\n  getTestability(elem: any): Testability|null { return this._applications.get(elem) || null; }\n\n  /**\n   * Get all registered testabilities\n   */\n  getAllTestabilities(): Testability[] { return Array.from(this._applications.values()); }\n\n  /**\n   * Get all registered applications(root elements)\n   */\n  getAllRootElements(): any[] { return Array.from(this._applications.keys()); }\n\n  /**\n   * Find testability of a node in the Tree\n   * @param elem node\n   * @param findInAncestors whether finding testability in ancestors if testability was not found in\n   * current node\n   */\n  findTestabilityInTree(elem: Node, findInAncestors: boolean = true): Testability|null {\n    return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n  }\n}\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * @publicApi\n */\nexport interface GetTestability {\n  addToWindow(registry: TestabilityRegistry): void;\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null;\n}\n\nclass _NoopGetTestability implements GetTestability {\n  addToWindow(registry: TestabilityRegistry): void {}\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    return null;\n  }\n}\n\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @publicApi\n */\nexport function setTestabilityGetter(getter: GetTestability): void {\n  _testabilityGetter = getter;\n}\n\nlet _testabilityGetter: GetTestability = new _NoopGetTestability();\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(v1: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```javascript\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { MonoTypeOperatorFunction, OperatorFunction, ObservableInput } from '../types';\n\nexport function mergeAll<T>(concurrent?: number): OperatorFunction<ObservableInput<T>, T>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): MonoTypeOperatorFunction<T> {\n  return mergeMap<T, T>(identity as (value: T, index: number) => ObservableInput<T>, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isIterable } from '../util/isIterable';\nimport { fromArray } from './fromArray';\nimport { fromPromise } from './fromPromise';\nimport { fromIterable } from './fromIterable';\nimport { fromObservable } from './fromObservable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike } from '../types';\n\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function from<T>(input: ObservableInput<ObservableInput<T>>, scheduler?: SchedulerLike): Observable<Observable<T>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n * ### Converts an array to an Observable\n * ```javascript\n * import { from } from 'rxjs/observable/from';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10 20 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n * ```javascript\n * import { take } from 'rxjs/operators';\n * import { from } from 'rxjs/observable/from';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3 6 12 24 48 96 192 384 768 1536\n * ```\n *\n * ---\n *\n * ### with async scheduler\n * ```javascript\n * import { from } from 'rxjs/observable/from';\n * import { async } from 'rxjs/scheduler/async';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, async);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start end 10 20 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n * @see {@link fromPromise}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\n\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  }\n\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return fromPromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return fromArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return fromIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function fromObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToObservable(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => {\n        const observable: Subscribable<T> = input[Symbol_observable]();\n        sub.add(observable.subscribe({\n          next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n          error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n          complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n        }));\n      }));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\n\nexport function fromPromise<T>(input: PromiseLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToPromise(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => input.then(\n        value => {\n          sub.add(scheduler.schedule(() => {\n            subscriber.next(value);\n            sub.add(scheduler.schedule(() => subscriber.complete()));\n          }));\n        },\n        err => {\n          sub.add(scheduler.schedule(() => subscriber.error(err)));\n        }\n      )));\n      return sub;\n    });\n  }\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\n\nexport function fromIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  if (!scheduler) {\n    return new Observable<T>(subscribeToIterable(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      let iterator: Iterator<T>;\n      sub.add(() => {\n        // Finalize generators\n        if (iterator && typeof iterator.return === 'function') {\n          iterator.return();\n        }\n      });\n      sub.add(scheduler.schedule(() => {\n        iterator = input[Symbol_iterator]();\n        sub.add(scheduler.schedule(function () {\n          if (subscriber.closed) {\n            return;\n          }\n          let value: T;\n          let done: boolean;\n          try {\n            const result = iterator.next();\n            value = result.value;\n            done = result.done;\n          } catch (err) {\n            subscriber.error(err);\n            return;\n          }\n          if (done) {\n            subscriber.complete();\n          } else {\n            subscriber.next(value);\n            this.schedule();\n          }\n        }));\n      }));\n      return sub;\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\nimport {EventEmitter} from '../event_emitter';\nimport {getSymbolIterator} from '../util';\n\n\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n * @publicApi\n */\nexport class QueryList<T>/* implements Iterable<T> */ {\n  public readonly dirty = true;\n  private _results: Array<T> = [];\n  public readonly changes: Observable<any> = new EventEmitter();\n\n  readonly length: number = 0;\n  // TODO(issue/24571): remove '!'.\n  readonly first !: T;\n  // TODO(issue/24571): remove '!'.\n  readonly last !: T;\n\n  /**\n   * See\n   * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n   */\n  map<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._results.map(fn); }\n\n  /**\n   * See\n   * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n   */\n  filter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._results.filter(fn);\n  }\n\n  /**\n   * See\n   * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n   */\n  find(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._results.find(fn);\n  }\n\n  /**\n   * See\n   * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n   */\n  reduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._results.reduce(fn, init);\n  }\n\n  /**\n   * See\n   * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n   */\n  forEach(fn: (item: T, index: number, array: T[]) => void): void { this._results.forEach(fn); }\n\n  /**\n   * See\n   * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n   */\n  some(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._results.some(fn);\n  }\n\n  toArray(): T[] { return this._results.slice(); }\n\n  [getSymbolIterator()](): Iterator<T> { return (this._results as any)[getSymbolIterator()](); }\n\n  toString(): string { return this._results.toString(); }\n\n  reset(res: Array<T|any[]>): void {\n    this._results = flatten(res);\n    (this as{dirty: boolean}).dirty = false;\n    (this as{length: number}).length = this._results.length;\n    (this as{last: T}).last = this._results[this.length - 1];\n    (this as{first: T}).first = this._results[0];\n  }\n\n  notifyOnChanges(): void { (this.changes as EventEmitter<any>).emit(this); }\n\n  /** internal */\n  setDirty() { (this as{dirty: boolean}).dirty = true; }\n\n  /** internal */\n  destroy(): void {\n    (this.changes as EventEmitter<any>).complete();\n    (this.changes as EventEmitter<any>).unsubscribe();\n  }\n}\n\nfunction flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const flatItem = Array.isArray(item) ? flatten(item) : item;\n    return (<T[]>flat).concat(flatItem);\n  }, []);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {injectViewContainerRef as render3InjectViewContainerRef} from '../render3/view_engine_compatibility';\nimport {noop} from '../util/noop';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {TemplateRef} from './template_ref';\nimport {EmbeddedViewRef, ViewRef} from './view_ref';\n\n\n/**\n * Represents a container where one or more views can be attached to a component.\n *\n * Can contain *host views* (created by instantiating a\n * component with the `createComponent()` method), and *embedded views*\n * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n *\n * A view container instance can contain other view containers,\n * creating a [view hierarchy](guide/glossary#view-tree).\n *\n * @see `ComponentRef`\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nexport abstract class ViewContainerRef {\n  /**\n   * Anchor element that specifies the location of this container in the containing view.\n   * Each view container can have only one anchor element, and each anchor element\n   * can have only a single view container.\n   *\n   * Root elements of views attached to this container become siblings of the anchor element in\n   * the rendered view.\n   *\n   * Access the `ViewContainerRef` of an element by placing a `Directive` injected\n   * with `ViewContainerRef` on the element, or use a `ViewChild` query.\n   *\n   * <!-- TODO: rename to anchorElement -->\n   */\n  abstract get element(): ElementRef;\n\n  /**\n   * The [dependency injector](guide/glossary#injector) for this view container.\n   */\n  abstract get injector(): Injector;\n\n  /** @deprecated No replacement */\n  abstract get parentInjector(): Injector;\n\n  /**\n   * Destroys all views in this container.\n   */\n  abstract clear(): void;\n\n  /**\n   * Retrieves a view from this container.\n   * @param index The 0-based index of the view to retrieve.\n   * @returns The `ViewRef` instance, or null if the index is out of range.\n   */\n  abstract get(index: number): ViewRef|null;\n\n  /**\n   * Reports how many views are currently attached to this container.\n   * @returns The number of views.\n   */\n  abstract get length(): number;\n\n  /**\n   * Instantiates an embedded view and inserts it\n   * into this container.\n   * @param templateRef The HTML template that defines the view.\n   * @param index The 0-based index at which to insert the new view into this container.\n   * If not specified, appends the new view as the last entry.\n   *\n   * @returns The `ViewRef` instance for the newly created view.\n   */\n  abstract createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C>;\n\n  /**\n   * Instantiates a single component and inserts its host view into this container.\n   *\n   * @param componentFactory The factory to use.\n   * @param index The index at which to insert the new component's host view into this container.\n   * If not specified, appends the new view as the last entry.\n   * @param injector The injector to use as the parent for the new component.\n   * @param projectableNodes\n   * @param ngModule\n   *\n   * @returns The new component instance, containing the host view.\n   *\n   */\n  abstract createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModule?: NgModuleRef<any>): ComponentRef<C>;\n\n  /**\n   * Inserts a view into this container.\n   * @param viewRef The view to insert.\n   * @param index The 0-based index at which to insert the view.\n   * If not specified, appends the new view as the last entry.\n   * @returns The inserted `ViewRef` instance.\n   *\n   */\n  abstract insert(viewRef: ViewRef, index?: number): ViewRef;\n\n  /**\n   * Moves a view to a new location in this container.\n   * @param viewRef The view to move.\n   * @param index The 0-based index of the new location.\n   * @returns The moved `ViewRef` instance.\n   */\n  abstract move(viewRef: ViewRef, currentIndex: number): ViewRef;\n\n  /**\n   * Returns the index of a view within the current container.\n   * @param viewRef The view to query.\n   * @returns The 0-based index of the view's position in this container,\n   * or `-1` if this container doesn't contain the view.\n   */\n  abstract indexOf(viewRef: ViewRef): number;\n\n  /**\n   * Destroys a view attached to this container\n   * @param index The 0-based index of the view to destroy.\n   * If not specified, the last view in the container is removed.\n   */\n  abstract remove(index?: number): void;\n\n  /**\n   * Detaches a view from this container without destroying it.\n   * Use along with `insert()` to move a view within the current container.\n   * @param index The 0-based index of the view to detach.\n   * If not specified, the last view in the container is detached.\n   */\n  abstract detach(index?: number): ViewRef|null;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__:\n      () => ViewContainerRef = () => SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef)\n}\n\nexport const SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = render3InjectViewContainerRef;\nconst SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\nconst SWITCH_VIEW_CONTAINER_REF_FACTORY: typeof render3InjectViewContainerRef =\n    SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {injectChangeDetectorRef as render3InjectChangeDetectorRef} from '../render3/view_engine_compatibility';\n\n/**\n * Base class for Angular Views, provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n *\n * @usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n *\n * @publicApi\n */\nexport abstract class ChangeDetectorRef {\n  /**\n   * When a view uses the {@link ChangeDetectionStrategy#OnPush OnPush} (checkOnce)\n   * change detection strategy, explicitly marks the view as changed so that\n   * it can be checked again.\n   *\n   * Components are normally marked as dirty (in need of rerendering) when inputs\n   * have changed or events have fired in the view. Call this method to ensure that\n   * a component is checked even if these triggers have not occured.\n   *\n   * <!-- TODO: Add a link to a chapter on OnPush components -->\n   *\n   */\n  abstract markForCheck(): void;\n\n  /**\n   * Detaches this view from the change-detection tree.\n   * A detached view is  not checked until it is reattached.\n   * Use in combination with `detectChanges()` to implement local change detection checks.\n   *\n   * Detached views are not checked during change detection runs until they are\n   * re-attached, even if they are marked as dirty.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   */\n  abstract detach(): void;\n\n  /**\n   * Checks this view and its children. Use in combination with {@link ChangeDetectorRef#detach\n   * detach}\n   * to implement local change detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   */\n  abstract detectChanges(): void;\n\n  /**\n   * Checks the change detector and its children, and throws if any changes are detected.\n   *\n   * Use in development mode to verify that running change detection doesn't introduce\n   * other changes.\n   */\n  abstract checkNoChanges(): void;\n\n  /**\n   * Re-attaches the previously detached view to the change detection tree.\n   * Views are attached to the tree by default.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   *\n   */\n  abstract reattach(): void;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => ChangeDetectorRef = () => SWITCH_CHANGE_DETECTOR_REF_FACTORY();\n}\n\n\n\nexport const SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = render3InjectChangeDetectorRef;\nconst SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = (...args: any[]): any => {};\nconst SWITCH_CHANGE_DETECTOR_REF_FACTORY: typeof render3InjectChangeDetectorRef =\n    SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {assertDomNode} from '../render3/assert';\nimport {getComponent, getContext, getInjectionTokens, getInjector, getListeners, getLocalRefs, isBrowserEvents, loadLContext, loadLContextFromNode} from '../render3/discovery_utils';\nimport {TNode} from '../render3/interfaces/node';\nimport {StylingIndex} from '../render3/interfaces/styling';\nimport {TVIEW} from '../render3/interfaces/view';\nimport {getProp, getValue, isClassBasedValue} from '../render3/styling/class_and_style_bindings';\nimport {getStylingContext} from '../render3/styling/util';\nimport {DebugContext} from '../view/index';\n\nexport class EventListener {\n  constructor(public name: string, public callback: Function) {}\n}\n\n/**\n * @publicApi\n */\nexport interface DebugNode {\n  readonly listeners: EventListener[];\n  readonly parent: DebugElement|null;\n  readonly nativeNode: any;\n  readonly injector: Injector;\n  readonly componentInstance: any;\n  readonly context: any;\n  readonly references: {[key: string]: any};\n  readonly providerTokens: any[];\n}\nexport class DebugNode__PRE_R3__ {\n  readonly listeners: EventListener[] = [];\n  readonly parent: DebugElement|null = null;\n  readonly nativeNode: any;\n  private readonly _debugContext: DebugContext;\n\n  constructor(nativeNode: any, parent: DebugNode|null, _debugContext: DebugContext) {\n    this._debugContext = _debugContext;\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement__PRE_R3__) {\n      parent.addChild(this);\n    }\n  }\n\n  get injector(): Injector { return this._debugContext.injector; }\n\n  get componentInstance(): any { return this._debugContext.component; }\n\n  get context(): any { return this._debugContext.context; }\n\n  get references(): {[key: string]: any} { return this._debugContext.references; }\n\n  get providerTokens(): any[] { return this._debugContext.providerTokens; }\n}\n\n/**\n * @publicApi\n */\nexport interface DebugElement extends DebugNode {\n  readonly name: string;\n  readonly properties: {[key: string]: any};\n  readonly attributes: {[key: string]: string | null};\n  readonly classes: {[key: string]: boolean};\n  readonly styles: {[key: string]: string | null};\n  readonly childNodes: DebugNode[];\n  readonly nativeElement: any;\n  readonly children: DebugElement[];\n\n  query(predicate: Predicate<DebugElement>): DebugElement;\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[];\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[];\n  triggerEventHandler(eventName: string, eventObj: any): void;\n}\nexport class DebugElement__PRE_R3__ extends DebugNode__PRE_R3__ implements DebugElement {\n  readonly name !: string;\n  readonly properties: {[key: string]: any} = {};\n  readonly attributes: {[key: string]: string | null} = {};\n  readonly classes: {[key: string]: boolean} = {};\n  readonly styles: {[key: string]: string | null} = {};\n  readonly childNodes: DebugNode[] = [];\n  readonly nativeElement: any;\n\n  constructor(nativeNode: any, parent: any, _debugContext: DebugContext) {\n    super(nativeNode, parent, _debugContext);\n    this.nativeElement = nativeNode;\n  }\n\n  addChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      (child as{parent: DebugNode}).parent = this;\n    }\n  }\n\n  removeChild(child: DebugNode) {\n    const childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      (child as{parent: DebugNode | null}).parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n\n  insertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          (c.parent as DebugElement__PRE_R3__).removeChild(c);\n        }\n        (child as{parent: DebugNode}).parent = this;\n      });\n    }\n  }\n\n  insertBefore(refChild: DebugNode, newChild: DebugNode): void {\n    const refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        (newChild.parent as DebugElement__PRE_R3__).removeChild(newChild);\n      }\n      (newChild as{parent: DebugNode}).parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n\n  query(predicate: Predicate<DebugElement>): DebugElement {\n    const results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n\n  get children(): DebugElement[] {\n    return this\n        .childNodes  //\n        .filter((node) => node instanceof DebugElement__PRE_R3__) as DebugElement[];\n  }\n\n  triggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\n/**\n * @publicApi\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement__PRE_R3__) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement__PRE_R3__) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement__PRE_R3__) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\nfunction notImplemented(): Error {\n  throw new Error('Missing proper ivy implementation.');\n}\n\nclass DebugNode__POST_R3__ implements DebugNode {\n  readonly nativeNode: Node;\n\n  constructor(nativeNode: Node) { this.nativeNode = nativeNode; }\n\n  get parent(): DebugElement|null {\n    const parent = this.nativeNode.parentNode as Element;\n    return parent ? new DebugElement__POST_R3__(parent) : null;\n  }\n\n  get injector(): Injector { return getInjector(this.nativeNode); }\n\n  get componentInstance(): any {\n    const nativeElement = this.nativeNode;\n    return nativeElement && getComponent(nativeElement as Element);\n  }\n  get context(): any { return getContext(this.nativeNode as Element); }\n\n  get listeners(): EventListener[] {\n    return getListeners(this.nativeNode as Element).filter(isBrowserEvents);\n  }\n\n  get references(): {[key: string]: any;} { return getLocalRefs(this.nativeNode); }\n\n  get providerTokens(): any[] { return getInjectionTokens(this.nativeNode as Element); }\n}\n\nclass DebugElement__POST_R3__ extends DebugNode__POST_R3__ implements DebugElement {\n  constructor(nativeNode: Element) {\n    ngDevMode && assertDomNode(nativeNode);\n    super(nativeNode);\n  }\n\n  get nativeElement(): Element|null {\n    return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode as Element : null;\n  }\n\n  get name(): string { return this.nativeElement !.nodeName; }\n\n  get properties(): {[key: string]: any;} {\n    const context = loadLContext(this.nativeNode) !;\n    const lView = context.lView;\n    const tView = lView[TVIEW];\n    const tNode = tView.data[context.nodeIndex] as TNode;\n    const properties = {};\n    // TODO: https://angular-team.atlassian.net/browse/FW-681\n    // Missing implementation here...\n    return properties;\n  }\n\n  get attributes(): {[key: string]: string | null;} {\n    const attributes: {[key: string]: string | null;} = {};\n    const element = this.nativeElement;\n    if (element) {\n      const eAttrs = element.attributes;\n      for (let i = 0; i < eAttrs.length; i++) {\n        const attr = eAttrs[i];\n        attributes[attr.name] = attr.value;\n      }\n    }\n    return attributes;\n  }\n\n  get classes(): {[key: string]: boolean;} {\n    const classes: {[key: string]: boolean;} = {};\n    const element = this.nativeElement;\n    if (element) {\n      const lContext = loadLContextFromNode(element);\n      const lNode = lContext.lView[lContext.nodeIndex];\n      const stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n      if (stylingContext) {\n        for (let i = StylingIndex.SingleStylesStartPosition; i < lNode.length;\n             i += StylingIndex.Size) {\n          if (isClassBasedValue(lNode, i)) {\n            const className = getProp(lNode, i);\n            const value = getValue(lNode, i);\n            if (typeof value == 'boolean') {\n              // we want to ignore `null` since those don't overwrite the values.\n              classes[className] = value;\n            }\n          }\n        }\n      } else {\n        // Fallback, just read DOM.\n        const eClasses = element.classList;\n        for (let i = 0; i < eClasses.length; i++) {\n          classes[eClasses[i]] = true;\n        }\n      }\n    }\n    return classes;\n  }\n\n  get styles(): {[key: string]: string | null;} {\n    const styles: {[key: string]: string | null;} = {};\n    const element = this.nativeElement;\n    if (element) {\n      const lContext = loadLContextFromNode(element);\n      const lNode = lContext.lView[lContext.nodeIndex];\n      const stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n      if (stylingContext) {\n        for (let i = StylingIndex.SingleStylesStartPosition; i < lNode.length;\n             i += StylingIndex.Size) {\n          if (!isClassBasedValue(lNode, i)) {\n            const styleName = getProp(lNode, i);\n            const value = getValue(lNode, i) as string | null;\n            if (value !== null) {\n              // we want to ignore `null` since those don't overwrite the values.\n              styles[styleName] = value;\n            }\n          }\n        }\n      } else {\n        // Fallback, just read DOM.\n        const eStyles = (element as HTMLElement).style;\n        for (let i = 0; i < eStyles.length; i++) {\n          const name = eStyles.item(i);\n          styles[name] = eStyles.getPropertyValue(name);\n        }\n      }\n    }\n    return styles;\n  }\n\n  get childNodes(): DebugNode[] {\n    const childNodes = this.nativeNode.childNodes;\n    const children: DebugNode[] = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const element = childNodes[i];\n      children.push(getDebugNode__POST_R3__(element));\n    }\n    return children;\n  }\n\n  get children(): DebugElement[] {\n    const nativeElement = this.nativeElement;\n    if (!nativeElement) return [];\n    const childNodes = nativeElement.children;\n    const children: DebugElement[] = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const element = childNodes[i];\n      children.push(getDebugNode__POST_R3__(element));\n    }\n    return children;\n  }\n\n  query(predicate: Predicate<DebugElement>): DebugElement {\n    const results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const matches: DebugElement[] = [];\n    _queryNodeChildrenR3(this, predicate, matches, true);\n    return matches;\n  }\n\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const matches: DebugNode[] = [];\n    _queryNodeChildrenR3(this, predicate, matches, false);\n    return matches;\n  }\n\n  triggerEventHandler(eventName: string, eventObj: any): void {\n    this.listeners.forEach((listener) => {\n      if (listener.name === eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\nfunction _queryNodeChildrenR3(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[],\n    elementsOnly: boolean) {\n  if (parentNode instanceof DebugElement__POST_R3__) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement__POST_R3__) {\n        if (elementsOnly ? node.nativeElement : true) {\n          _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n        }\n      }\n    });\n  }\n}\n\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst _nativeNodeToDebugNode = new Map<any, DebugNode>();\n\nfunction getDebugNode__PRE_R3__(nativeNode: any): DebugNode|null {\n  return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nexport function getDebugNode__POST_R3__(nativeNode: Element): DebugElement__POST_R3__;\nexport function getDebugNode__POST_R3__(nativeNode: Node): DebugNode__POST_R3__;\nexport function getDebugNode__POST_R3__(nativeNode: null): null;\nexport function getDebugNode__POST_R3__(nativeNode: any): DebugNode|null {\n  if (nativeNode instanceof Node) {\n    return nativeNode.nodeType == Node.ELEMENT_NODE ?\n        new DebugElement__POST_R3__(nativeNode as Element) :\n        new DebugNode__POST_R3__(nativeNode);\n  }\n  return null;\n}\n\n/**\n * @publicApi\n */\nexport const getDebugNode: (nativeNode: any) => DebugNode | null = getDebugNode__PRE_R3__;\n\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * @publicApi\n */\nexport interface Predicate<T> { (value: T): boolean; }\n\n/**\n * @publicApi\n */\nexport const DebugNode: {new (...args: any[]): DebugNode} = DebugNode__PRE_R3__ as any;\n\n/**\n * @publicApi\n */\nexport const DebugElement: {new (...args: any[]): DebugElement} = DebugElement__PRE_R3__ as any;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Optional, SkipSelf, StaticProvider, defineInjectable} from '../../di';\nimport {DefaultKeyValueDifferFactory} from './default_keyvalue_differ';\n\n\n/**\n * A differ that tracks changes made to an object over time.\n *\n * @publicApi\n */\nexport interface KeyValueDiffer<K, V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: Map<K, V>): KeyValueChanges<K, V>|null;\n\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: {[key: string]: V}): KeyValueChanges<string, V>|null;\n  // TODO(TS2.1): diff<KP extends string>(this: KeyValueDiffer<KP, V>, object: Record<KP, V>):\n  // KeyValueDiffer<KP, V>;\n}\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * @publicApi\n */\nexport interface KeyValueChanges<K, V> {\n  /**\n   * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over changes in the order of original Map showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all keys for which values have changed.\n   */\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all added items.\n   */\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all removed items.\n   */\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @publicApi\n */\nexport interface KeyValueChangeRecord<K, V> {\n  /**\n   * Current key in the Map.\n   */\n  readonly key: K;\n\n  /**\n   * Current value for the key or `null` if removed.\n   */\n  readonly currentValue: V|null;\n\n  /**\n   * Previous value for the key or `null` if added.\n   */\n  readonly previousValue: V|null;\n}\n\n/**\n * Provides a factory for {@link KeyValueDiffer}.\n *\n * @publicApi\n */\nexport interface KeyValueDifferFactory {\n  /**\n   * Test to see if the differ knows how to diff this kind of object.\n   */\n  supports(objects: any): boolean;\n\n  /**\n   * Create a `KeyValueDiffer`.\n   */\n  create<K, V>(): KeyValueDiffer<K, V>;\n}\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n * @publicApi\n */\nexport class KeyValueDiffers {\n  /** @nocollapse */\n  static ngInjectableDef = defineInjectable({\n    providedIn: 'root',\n    factory: () => new KeyValueDiffers([new DefaultKeyValueDifferFactory()])\n  });\n\n  /**\n   * @deprecated v4.0.0 - Should be private.\n   */\n  factories: KeyValueDifferFactory[];\n\n  constructor(factories: KeyValueDifferFactory[]) { this.factories = factories; }\n\n  static create<S>(factories: KeyValueDifferFactory[], parent?: KeyValueDiffers): KeyValueDiffers {\n    if (parent) {\n      const copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n    return new KeyValueDiffers(factories);\n  }\n\n  /**\n   * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n   * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n   * {@link KeyValueDiffers} instance.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example shows how to extend an existing list of factories,\n   * which will only be applied to the injector for this component and its children.\n   * This step is all that's required to make a new {@link KeyValueDiffer} available.\n   *\n   * ```\n   * @Component({\n   *   viewProviders: [\n   *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n   *   ]\n   * })\n   * ```\n   */\n  static extend<S>(factories: KeyValueDifferFactory[]): StaticProvider {\n    return {\n      provide: KeyValueDiffers,\n      useFactory: (parent: KeyValueDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n          // to bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n        }\n        return KeyValueDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n\n  find(kv: any): KeyValueDifferFactory {\n    const factory = this.factories.find(f => f.supports(kv));\n    if (factory) {\n      return factory;\n    }\n    throw new Error(`Cannot find a differ supporting object '${kv}'`);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformRef, createPlatformFactory} from './application_ref';\nimport {PLATFORM_ID} from './application_tokens';\nimport {Console} from './console';\nimport {Injector, StaticProvider} from './di';\nimport {TestabilityRegistry} from './testability/testability';\n\nconst _CORE_PLATFORM_PROVIDERS: StaticProvider[] = [\n  // Set a default platform name for platforms that don't set it explicitly.\n  {provide: PLATFORM_ID, useValue: 'unknown'},\n  {provide: PlatformRef, deps: [Injector]},\n  {provide: TestabilityRegistry, deps: []},\n  {provide: Console, deps: []},\n];\n\n/**\n * This platform has to be included in any other platform\n *\n * @publicApi\n */\nexport const platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer2, RendererFactory2, RendererType2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../sanitization/security';\nimport {Type} from '../type';\n\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n */\nexport interface DefinitionFactory<D extends Definition<any>> { (logger: NodeLogger): D; }\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n */\nexport interface NodeLogger { (): () => void; }\n\nexport interface Definition<DF extends DefinitionFactory<any>> { factory: DF|null; }\n\nexport interface NgModuleDefinition extends Definition<NgModuleDefinitionFactory> {\n  providers: NgModuleProviderDef[];\n  providersByKey: {[tokenKey: string]: NgModuleProviderDef};\n  modules: any[];\n  isRoot: boolean;\n}\n\nexport interface NgModuleDefinitionFactory extends DefinitionFactory<NgModuleDefinition> {}\n\nexport interface ViewDefinition extends Definition<ViewDefinitionFactory> {\n  flags: ViewFlags;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  rootNodeFlags: NodeFlags;\n  lastRenderRootNode: NodeDef|null;\n  bindingCount: number;\n  outputCount: number;\n  /**\n   * Binary or of all query ids that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  nodeMatchedQueries: number;\n}\n\nexport interface ViewDefinitionFactory extends DefinitionFactory<ViewDefinition> {}\n\n\nexport interface ViewUpdateFn { (check: NodeCheckFn, view: ViewData): void; }\n\n// helper functions to create an overloaded function type.\nexport interface NodeCheckFn {\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n}\n\nexport const enum ArgumentType {Inline = 0, Dynamic = 1}\n\nexport interface ViewHandleEventFn {\n  (view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n}\n\n/**\n * Bitmask for ViewDefinition.flags.\n */\nexport const enum ViewFlags {\n  None = 0,\n  OnPush = 1 << 1,\n}\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  flags: NodeFlags;\n  // Index of the node in view data and view definition (those are the same)\n  nodeIndex: number;\n  // Index of the node in the check functions\n  // Differ from nodeIndex when nodes are added or removed at runtime (ie after compilation)\n  checkIndex: number;\n  parent: NodeDef|null;\n  renderParent: NodeDef|null;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number|null;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all transitive children (does not include self) **/\n  childFlags: NodeFlags;\n  /** aggregated NodeFlags for all direct children (does not include self) **/\n  directChildFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  bindingFlags: BindingFlags;\n  outputIndex: number;\n  outputs: OutputDef[];\n  /**\n   * references that the user placed on the element\n   */\n  references: {[refId: string]: QueryValueType};\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: number]: QueryValueType};\n  /** Binary or of all matched query ids of this node. */\n  matchedQueryIds: number;\n  /**\n   * Binary or of all query ids that are matched by one of the children.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  childMatchedQueries: number;\n  element: ElementDef|null;\n  provider: ProviderDef|null;\n  text: TextDef|null;\n  query: QueryDef|null;\n  ngContent: NgContentDef|null;\n}\n\n/**\n * Bitmask for NodeDef.flags.\n * Naming convention:\n * - `Type...`: flags that are mutually exclusive\n * - `Cat...`: union of multiple `Type...` (short for category).\n */\nexport const enum NodeFlags {\n  None = 0,\n  TypeElement = 1 << 0,\n  TypeText = 1 << 1,\n  ProjectedTemplate = 1 << 2,\n  CatRenderNode = TypeElement | TypeText,\n  TypeNgContent = 1 << 3,\n  TypePipe = 1 << 4,\n  TypePureArray = 1 << 5,\n  TypePureObject = 1 << 6,\n  TypePurePipe = 1 << 7,\n  CatPureExpression = TypePureArray | TypePureObject | TypePurePipe,\n  TypeValueProvider = 1 << 8,\n  TypeClassProvider = 1 << 9,\n  TypeFactoryProvider = 1 << 10,\n  TypeUseExistingProvider = 1 << 11,\n  LazyProvider = 1 << 12,\n  PrivateProvider = 1 << 13,\n  TypeDirective = 1 << 14,\n  Component = 1 << 15,\n  CatProviderNoDirective =\n      TypeValueProvider | TypeClassProvider | TypeFactoryProvider | TypeUseExistingProvider,\n  CatProvider = CatProviderNoDirective | TypeDirective,\n  OnInit = 1 << 16,\n  OnDestroy = 1 << 17,\n  DoCheck = 1 << 18,\n  OnChanges = 1 << 19,\n  AfterContentInit = 1 << 20,\n  AfterContentChecked = 1 << 21,\n  AfterViewInit = 1 << 22,\n  AfterViewChecked = 1 << 23,\n  EmbeddedViews = 1 << 24,\n  ComponentView = 1 << 25,\n  TypeContentQuery = 1 << 26,\n  TypeViewQuery = 1 << 27,\n  StaticQuery = 1 << 28,\n  DynamicQuery = 1 << 29,\n  TypeNgModule = 1 << 30,\n  CatQuery = TypeContentQuery | TypeViewQuery,\n\n  // mutually exclusive values...\n  Types = CatRenderNode | TypeNgContent | TypePipe | CatPureExpression | CatProvider | CatQuery\n}\n\nexport interface BindingDef {\n  flags: BindingFlags;\n  ns: string|null;\n  name: string|null;\n  nonMinifiedName: string|null;\n  securityContext: SecurityContext|null;\n  suffix: string|null;\n}\n\nexport const enum BindingFlags {\n  TypeElementAttribute = 1 << 0,\n  TypeElementClass = 1 << 1,\n  TypeElementStyle = 1 << 2,\n  TypeProperty = 1 << 3,\n  SyntheticProperty = 1 << 4,\n  SyntheticHostProperty = 1 << 5,\n  CatSyntheticProperty = SyntheticProperty | SyntheticHostProperty,\n\n  // mutually exclusive values...\n  Types = TypeElementAttribute | TypeElementClass | TypeElementStyle | TypeProperty\n}\n\nexport interface OutputDef {\n  type: OutputType;\n  target: 'window'|'document'|'body'|'component'|null;\n  eventName: string;\n  propName: string|null;\n}\n\nexport const enum OutputType {ElementOutput, DirectiveOutput}\n\nexport const enum QueryValueType {\n  ElementRef = 0,\n  RenderElement = 1,\n  TemplateRef = 2,\n  ViewContainerRef = 3,\n  Provider = 4\n}\n\nexport interface ElementDef {\n  // set to null for `<ng-container>`\n  name: string|null;\n  ns: string|null;\n  /** ns, name, value */\n  attrs: [string, string, string][]|null;\n  template: ViewDefinition|null;\n  componentProvider: NodeDef|null;\n  componentRendererType: RendererType2|null;\n  // closure to allow recursive components\n  componentView: ViewDefinitionFactory|null;\n  /**\n   * visible public providers for DI in the view,\n   * as see from this element. This does not include private providers.\n   */\n  publicProviders: {[tokenKey: string]: NodeDef}|null;\n  /**\n   * same as visiblePublicProviders, but also includes private providers\n   * that are located on this element.\n   */\n  allProviders: {[tokenKey: string]: NodeDef}|null;\n  handleEvent: ElementHandleEventFn|null;\n}\n\nexport interface ElementHandleEventFn { (view: ViewData, eventName: string, event: any): boolean; }\n\nexport interface ProviderDef {\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface NgModuleProviderDef {\n  flags: NodeFlags;\n  index: number;\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\n\n/**\n * Bitmask for DI flags\n */\nexport const enum DepFlags {\n  None = 0,\n  SkipSelf = 1 << 0,\n  Optional = 1 << 1,\n  Self = 1 << 2,\n  Value = 1 << 3,\n}\n\nexport interface TextDef { prefix: string; }\n\nexport interface QueryDef {\n  id: number;\n  // variant of the id that can be used to check against NodeDef.matchedQueryIds, ...\n  filterId: number;\n  bindings: QueryBindingDef[];\n}\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\n\nexport const enum QueryBindingType {First = 0, All = 1}\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\nexport interface NgModuleData extends Injector, NgModuleRef<any> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _def: NgModuleDefinition;\n  _parent: Injector;\n  _providers: any[];\n}\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  root: RootData;\n  renderer: Renderer2;\n  // index of component provider / anchor.\n  parentNodeDef: NodeDef|null;\n  parent: ViewData|null;\n  viewContainerParent: ViewData|null;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[]|null;\n  initIndex: number;\n}\n\n/**\n * Bitmask of states\n */\nexport const enum ViewState {\n  BeforeFirstCheck = 1 << 0,\n  FirstCheck = 1 << 1,\n  Attached = 1 << 2,\n  ChecksEnabled = 1 << 3,\n  IsProjectedView = 1 << 4,\n  CheckProjectedView = 1 << 5,\n  CheckProjectedViews = 1 << 6,\n  Destroyed = 1 << 7,\n\n  // InitState Uses 3 bits\n  InitState_Mask = 7 << 8,\n  InitState_BeforeInit = 0 << 8,\n  InitState_CallingOnInit = 1 << 8,\n  InitState_CallingAfterContentInit = 2 << 8,\n  InitState_CallingAfterViewInit = 3 << 8,\n  InitState_AfterInit = 4 << 8,\n\n  CatDetectChanges = Attached | ChecksEnabled,\n  CatInit = BeforeFirstCheck | CatDetectChanges | InitState_BeforeInit\n}\n\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nexport function shiftInitState(\n    view: ViewData, priorInitState: ViewState, newInitState: ViewState): boolean {\n  // Only update the InitState if we are currently in the prior state.\n  // For example, only move into CallingInit if we are in BeforeInit. Only\n  // move into CallingContentInit if we are in CallingInit. Normally this will\n  // always be true because of how checkCycle is called in checkAndUpdateView.\n  // However, if checkAndUpdateView is called recursively or if an exception is\n  // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n  // from the beginning. This ensures the state is monotonically increasing,\n  // terminating in the AfterInit state, which ensures the Init methods are called\n  // at least once and only once.\n  const state = view.state;\n  const initState = state & ViewState.InitState_Mask;\n  if (initState === priorInitState) {\n    view.state = (state & ~ViewState.InitState_Mask) | newInitState;\n    view.initIndex = -1;\n    return true;\n  }\n  return initState === newInitState;\n}\n\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nexport function shouldCallLifecycleInitHook(\n    view: ViewData, initState: ViewState, index: number): boolean {\n  if ((view.state & ViewState.InitState_Mask) === initState && view.initIndex <= index) {\n    view.initIndex = index + 1;\n    return true;\n  }\n  return false;\n}\n\nexport interface DisposableFn { (): void; }\n\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData { private __brand: any; }\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  componentView: ViewData;\n  viewContainer: ViewContainerData|null;\n  template: TemplateData;\n}\n\nexport interface ViewContainerData extends ViewContainerRef {\n  // Note: we are using the prefix _ as ViewContainerData is a ViewContainerRef and therefore\n  // directly\n  // exposed to the user.\n  _embeddedViews: ViewData[];\n}\n\nexport interface TemplateData extends TemplateRef<any> {\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  // Note: we are using the prefix _ as TemplateData is a TemplateRef and therefore directly\n  // exposed to the user.\n  _projectedViews: ViewData[];\n}\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData { instance: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData { value: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return <any>view.nodes[index];\n}\n\nexport interface RootData {\n  injector: Injector;\n  ngModule: NgModuleRef<any>;\n  projectableNodes: any[][];\n  selectorOrNode: any;\n  renderer: Renderer2;\n  rendererFactory: RendererFactory2;\n  errorHandler: ErrorHandler;\n  sanitizer: Sanitizer;\n}\n\nexport abstract class DebugContext {\n  abstract get view(): ViewData;\n  abstract get nodeIndex(): number|null;\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get componentRenderElement(): any;\n  abstract get renderNode(): any;\n  abstract logError(console: Console, ...values: any[]): void;\n}\n\n// -------------------------------------\n// Other\n// -------------------------------------\n\nexport const enum CheckType {CheckAndUpdate, CheckNoChanges}\n\nexport interface ProviderOverride {\n  token: any;\n  flags: NodeFlags;\n  value: any;\n  deps: ([DepFlags, any]|any)[];\n  deprecatedBehavior: boolean;\n}\n\nexport interface Services {\n  setCurrentNode(view: ViewData, nodeIndex: number): void;\n  createRootView(\n      injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string|any,\n      def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData;\n  createEmbeddedView(parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any):\n      ViewData;\n  createComponentView(\n      parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData;\n  createNgModuleRef(\n      moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n      def: NgModuleDefinition): NgModuleRef<any>;\n  overrideProvider(override: ProviderOverride): void;\n  overrideComponentView(compType: Type<any>, compFactory: ComponentFactory<any>): void;\n  clearOverrides(): void;\n  checkAndUpdateView(view: ViewData): void;\n  checkNoChangesView(view: ViewData): void;\n  destroyView(view: ViewData): void;\n  resolveDep(\n      view: ViewData, elDef: NodeDef|null, allowPrivateServices: boolean, depDef: DepDef,\n      notFoundValue?: any): any;\n  createDebugContext(view: ViewData, nodeIndex: number): DebugContext;\n  handleEvent: ViewHandleEventFn;\n  updateDirectives: (view: ViewData, checkType: CheckType) => void;\n  updateRenderer: (view: ViewData, checkType: CheckType) => void;\n  dirtyParentQueries: (view: ViewData) => void;\n}\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport const Services: Services = {\n  setCurrentNode: undefined !,\n  createRootView: undefined !,\n  createEmbeddedView: undefined !,\n  createComponentView: undefined !,\n  createNgModuleRef: undefined !,\n  overrideProvider: undefined !,\n  overrideComponentView: undefined !,\n  clearOverrides: undefined !,\n  checkAndUpdateView: undefined !,\n  checkNoChangesView: undefined !,\n  destroyView: undefined !,\n  resolveDep: undefined !,\n  createDebugContext: undefined !,\n  handleEvent: undefined !,\n  updateDirectives: undefined !,\n  updateRenderer: undefined !,\n  dirtyParentQueries: undefined !,\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext} from '../errors';\nimport {DebugContext, ViewState} from './types';\n\nexport function expressionChangedAfterItHasBeenCheckedError(\n    context: DebugContext, oldValue: any, currValue: any, isFirstCheck: boolean): Error {\n  let msg =\n      `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (isFirstCheck) {\n    msg +=\n        ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n        ` Has it been created in a change detection hook ?`;\n  }\n  return viewDebugError(msg, context);\n}\n\nexport function viewWrappedDebugError(err: any, context: DebugContext): Error {\n  if (!(err instanceof Error)) {\n    // errors that are not Error instances don't have a stack,\n    // so it is ok to wrap them into a new Error object...\n    err = new Error(err.toString());\n  }\n  _addDebugContext(err, context);\n  return err;\n}\n\nexport function viewDebugError(msg: string, context: DebugContext): Error {\n  const err = new Error(msg);\n  _addDebugContext(err, context);\n  return err;\n}\n\nfunction _addDebugContext(err: Error, context: DebugContext) {\n  (err as any)[ERROR_DEBUG_CONTEXT] = context;\n  (err as any)[ERROR_LOGGER] = context.logError.bind(context);\n}\n\nexport function isViewDebugError(err: Error): boolean {\n  return !!getDebugContext(err);\n}\n\nexport function viewDestroyedError(action: string): Error {\n  return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WrappedValue, devModeEqual} from '../change_detection/change_detection';\nimport {SOURCE} from '../di/injector';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {looseIdentical, stringify} from '../util';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {BindingDef, BindingFlags, Definition, DefinitionFactory, DepDef, DepFlags, ElementData, NodeDef, NodeFlags, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewState, asElementData, asTextData} from './types';\n\nexport const NOOP: any = () => {};\n\nconst _tokenKeyCache = new Map<any, string>();\n\nexport function tokenKey(token: any): string {\n  let key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n\nexport function unwrapValue(view: ViewData, nodeIdx: number, bindingIdx: number, value: any): any {\n  if (WrappedValue.isWrapped(value)) {\n    value = WrappedValue.unwrap(value);\n    const globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n    const oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n    view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n  }\n  return value;\n}\n\nconst UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nconst EMPTY_RENDERER_TYPE_ID = '$$empty';\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createRendererType2(values: {\n  styles: (string | any[])[],\n  encapsulation: ViewEncapsulation,\n  data: {[kind: string]: any[]}\n}): RendererType2 {\n  return {\n    id: UNDEFINED_RENDERER_TYPE_ID,\n    styles: values.styles,\n    encapsulation: values.encapsulation,\n    data: values.data\n  };\n}\n\nlet _renderCompCount = 0;\n\nexport function resolveRendererType2(type?: RendererType2 | null): RendererType2|null {\n  if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n    // first time we see this RendererType2. Initialize it...\n    const isFilled =\n        ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n         type.styles.length || Object.keys(type.data).length);\n    if (isFilled) {\n      type.id = `c${_renderCompCount++}`;\n    } else {\n      type.id = EMPTY_RENDERER_TYPE_ID;\n    }\n  }\n  if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n    type = null;\n  }\n  return type || null;\n}\n\nexport function checkBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  const oldValues = view.oldValues;\n  if ((view.state & ViewState.FirstCheck) ||\n      !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n    return true;\n  }\n  return false;\n}\n\nexport function checkAndUpdateBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  if (checkBinding(view, def, bindingIdx, value)) {\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return true;\n  }\n  return false;\n}\n\nexport function checkBindingNoChanges(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  const oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  if ((view.state & ViewState.BeforeFirstCheck) || !devModeEqual(oldValue, value)) {\n    const bindingName = def.bindings[bindingIdx].name;\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, def.nodeIndex), `${bindingName}: ${oldValue}`,\n        `${bindingName}: ${value}`, (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n\nexport function markParentViewsForCheck(view: ViewData) {\n  let currView: ViewData|null = view;\n  while (currView) {\n    if (currView.def.flags & ViewFlags.OnPush) {\n      currView.state |= ViewState.ChecksEnabled;\n    }\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n\nexport function markParentViewsForCheckProjectedViews(view: ViewData, endView: ViewData) {\n  let currView: ViewData|null = view;\n  while (currView && currView !== endView) {\n    currView.state |= ViewState.CheckProjectedViews;\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n\nexport function dispatchEvent(\n    view: ViewData, nodeIndex: number, eventName: string, event: any): boolean|undefined {\n  try {\n    const nodeDef = view.def.nodes[nodeIndex];\n    const startView = nodeDef.flags & NodeFlags.ComponentView ?\n        asElementData(view, nodeIndex).componentView :\n        view;\n    markParentViewsForCheck(startView);\n    return Services.handleEvent(view, nodeIndex, eventName, event);\n  } catch (e) {\n    // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n    view.root.errorHandler.handleError(e);\n  }\n}\n\nexport function declaredViewContainer(view: ViewData): ElementData|null {\n  if (view.parent) {\n    const parentView = view.parent;\n    return asElementData(parentView, view.parentNodeDef !.nodeIndex);\n  }\n  return null;\n}\n\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nexport function viewParentEl(view: ViewData): NodeDef|null {\n  const parentView = view.parent;\n  if (parentView) {\n    return view.parentNodeDef !.parent;\n  } else {\n    return null;\n  }\n}\n\nexport function renderNode(view: ViewData, def: NodeDef): any {\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return asElementData(view, def.nodeIndex).renderElement;\n    case NodeFlags.TypeText:\n      return asTextData(view, def.nodeIndex).renderText;\n  }\n}\n\nexport function elementEventFullName(target: string | null, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n\nexport function isComponentView(view: ViewData): boolean {\n  return !!view.parent && !!(view.parentNodeDef !.flags & NodeFlags.Component);\n}\n\nexport function isEmbeddedView(view: ViewData): boolean {\n  return !!view.parent && !(view.parentNodeDef !.flags & NodeFlags.Component);\n}\n\nexport function filterQueryId(queryId: number): number {\n  return 1 << (queryId % 32);\n}\n\nexport function splitMatchedQueriesDsl(\n    matchedQueriesDsl: [string | number, QueryValueType][] | null): {\n  matchedQueries: {[queryId: string]: QueryValueType},\n  references: {[refId: string]: QueryValueType},\n  matchedQueryIds: number\n} {\n  const matchedQueries: {[queryId: string]: QueryValueType} = {};\n  let matchedQueryIds = 0;\n  const references: {[refId: string]: QueryValueType} = {};\n  if (matchedQueriesDsl) {\n    matchedQueriesDsl.forEach(([queryId, valueType]) => {\n      if (typeof queryId === 'number') {\n        matchedQueries[queryId] = valueType;\n        matchedQueryIds |= filterQueryId(queryId);\n      } else {\n        references[queryId] = valueType;\n      }\n    });\n  }\n  return {matchedQueries, references, matchedQueryIds};\n}\n\nexport function splitDepsDsl(deps: ([DepFlags, any] | any)[], sourceName?: string): DepDef[] {\n  return deps.map(value => {\n    let token: any;\n    let flags: DepFlags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = DepFlags.None;\n      token = value;\n    }\n    if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n      Object.defineProperty(token, SOURCE, {value: sourceName, configurable: true});\n    }\n    return {flags, token, tokenKey: tokenKey(token)};\n  });\n}\n\nexport function getParentRenderElement(view: ViewData, renderHost: any, def: NodeDef): any {\n  let renderParent = def.renderParent;\n  if (renderParent) {\n    if ((renderParent.flags & NodeFlags.TypeElement) === 0 ||\n        (renderParent.flags & NodeFlags.ComponentView) === 0 ||\n        (renderParent.element !.componentRendererType &&\n         renderParent.element !.componentRendererType !.encapsulation ===\n             ViewEncapsulation.Native)) {\n      // only children of non components, or children of components with native encapsulation should\n      // be attached.\n      return asElementData(view, def.renderParent !.nodeIndex).renderElement;\n    }\n  } else {\n    return renderHost;\n  }\n}\n\nconst DEFINITION_CACHE = new WeakMap<any, Definition<any>>();\n\nexport function resolveDefinition<D extends Definition<any>>(factory: DefinitionFactory<D>): D {\n  let value = DEFINITION_CACHE.get(factory) !as D;\n  if (!value) {\n    value = factory(() => NOOP);\n    value.factory = factory;\n    DEFINITION_CACHE.set(factory, value);\n  }\n  return value;\n}\n\nexport function rootRenderNodes(view: ViewData): any[] {\n  const renderNodes: any[] = [];\n  visitRootRenderNodes(view, RenderNodeAction.Collect, undefined, undefined, renderNodes);\n  return renderNodes;\n}\n\nexport const enum RenderNodeAction {Collect, AppendChild, InsertBefore, RemoveChild}\n\nexport function visitRootRenderNodes(\n    view: ViewData, action: RenderNodeAction, parentNode: any, nextSibling: any, target?: any[]) {\n  // We need to re-compute the parent node in case the nodes have been moved around manually\n  if (action === RenderNodeAction.RemoveChild) {\n    parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode !));\n  }\n  visitSiblingRenderNodes(\n      view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n\nexport function visitSiblingRenderNodes(\n    view: ViewData, action: RenderNodeAction, startIndex: number, endIndex: number, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & (NodeFlags.TypeElement | NodeFlags.TypeText | NodeFlags.TypeNgContent)) {\n      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n}\n\nexport function visitProjectedRenderNodes(\n    view: ViewData, ngContentIndex: number, action: RenderNodeAction, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  let compView: ViewData|null = view;\n  while (compView && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  const hostView = compView !.parent;\n  const hostElDef = viewParentEl(compView !);\n  const startIndex = hostElDef !.nodeIndex + 1;\n  const endIndex = hostElDef !.nodeIndex + hostElDef !.childCount;\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = hostView !.def.nodes[i];\n    if (nodeDef.ngContentIndex === ngContentIndex) {\n      visitRenderNode(hostView !, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n  if (!hostView !.parent) {\n    // a root view\n    const projectedNodes = view.root.projectableNodes[ngContentIndex];\n    if (projectedNodes) {\n      for (let i = 0; i < projectedNodes.length; i++) {\n        execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n      }\n    }\n  }\n}\n\nfunction visitRenderNode(\n    view: ViewData, nodeDef: NodeDef, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  if (nodeDef.flags & NodeFlags.TypeNgContent) {\n    visitProjectedRenderNodes(\n        view, nodeDef.ngContent !.index, action, parentNode, nextSibling, target);\n  } else {\n    const rn = renderNode(view, nodeDef);\n    if (action === RenderNodeAction.RemoveChild && (nodeDef.flags & NodeFlags.ComponentView) &&\n        (nodeDef.bindingFlags & BindingFlags.CatSyntheticProperty)) {\n      // Note: we might need to do both actions.\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticProperty)) {\n        execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n      }\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticHostProperty)) {\n        const compView = asElementData(view, nodeDef.nodeIndex).componentView;\n        execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n      }\n    } else {\n      execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n    }\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      const embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer !._embeddedViews;\n      for (let k = 0; k < embeddedViews.length; k++) {\n        visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n      }\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && !nodeDef.element !.name) {\n      visitSiblingRenderNodes(\n          view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode,\n          nextSibling, target);\n    }\n  }\n}\n\nfunction execRenderNodeAction(\n    view: ViewData, renderNode: any, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  const renderer = view.renderer;\n  switch (action) {\n    case RenderNodeAction.AppendChild:\n      renderer.appendChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.InsertBefore:\n      renderer.insertBefore(parentNode, renderNode, nextSibling);\n      break;\n    case RenderNodeAction.RemoveChild:\n      renderer.removeChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.Collect:\n      target !.push(renderNode);\n      break;\n  }\n}\n\nconst NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n\nexport function splitNamespace(name: string): string[] {\n  if (name[0] === ':') {\n    const match = name.match(NS_PREFIX_RE) !;\n    return [match[1], match[2]];\n  }\n  return ['', name];\n}\n\nexport function calcBindingFlags(bindings: BindingDef[]): BindingFlags {\n  let flags = 0;\n  for (let i = 0; i < bindings.length; i++) {\n    flags |= bindings[i].flags;\n  }\n  return flags;\n}\n\nexport function interpolate(valueCount: number, constAndInterp: string[]): string {\n  let result = '';\n  for (let i = 0; i < valueCount * 2; i = i + 2) {\n    result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n  }\n  return result + constAndInterp[valueCount * 2];\n}\n\nexport function inlineInterpolate(\n    valueCount: number, c0: string, a1: any, c1: string, a2?: any, c2?: string, a3?: any,\n    c3?: string, a4?: any, c4?: string, a5?: any, c5?: string, a6?: any, c6?: string, a7?: any,\n    c7?: string, a8?: any, c8?: string, a9?: any, c9?: string): string {\n  switch (valueCount) {\n    case 1:\n      return c0 + _toStringWithNull(a1) + c1;\n    case 2:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n    case 3:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3;\n    case 4:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4;\n    case 5:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n    case 6:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n    case 7:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7;\n    case 8:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n    case 9:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n    default:\n      throw new Error(`Does not support more than 9 expressions`);\n  }\n}\n\nfunction _toStringWithNull(v: any): string {\n  return v != null ? v.toString() : '';\n}\n\nexport const EMPTY_ARRAY: any[] = [];\nexport const EMPTY_MAP: {[key: string]: any} = {};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {SecurityContext} from '../sanitization/security';\n\nimport {BindingDef, BindingFlags, ElementData, ElementHandleEventFn, NodeDef, NodeFlags, OutputDef, OutputType, QueryValueType, ViewData, ViewDefinitionFactory, asElementData} from './types';\nimport {NOOP, calcBindingFlags, checkAndUpdateBinding, dispatchEvent, elementEventFullName, getParentRenderElement, resolveDefinition, resolveRendererType2, splitMatchedQueriesDsl, splitNamespace} from './util';\n\nexport function anchorDef(\n    flags: NodeFlags, matchedQueriesDsl: null | [string | number, QueryValueType][],\n    ngContentIndex: null | number, childCount: number, handleEvent?: null | ElementHandleEventFn,\n    templateFactory?: ViewDefinitionFactory): NodeDef {\n  flags |= NodeFlags.TypeElement;\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  const template = templateFactory ? resolveDefinition(templateFactory) : null;\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    checkIndex: -1,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: {\n      ns: null,\n      name: null,\n      attrs: null, template,\n      componentProvider: null,\n      componentView: null,\n      componentRendererType: null,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function elementDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: null | [string | number, QueryValueType][], ngContentIndex: null | number,\n    childCount: number, namespaceAndName: string | null, fixedAttrs: null | [string, string][] = [],\n    bindings?: null | [BindingFlags, string, string | SecurityContext | null][],\n    outputs?: null | ([string, string])[], handleEvent?: null | ElementHandleEventFn,\n    componentView?: null | ViewDefinitionFactory,\n    componentRendererType?: RendererType2 | null): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  let ns: string = null !;\n  let name: string = null !;\n  if (namespaceAndName) {\n    [ns, name] = splitNamespace(namespaceAndName);\n  }\n  bindings = bindings || [];\n  const bindingDefs: BindingDef[] = new Array(bindings.length);\n  for (let i = 0; i < bindings.length; i++) {\n    const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n\n    const [ns, name] = splitNamespace(namespaceAndName);\n    let securityContext: SecurityContext = undefined !;\n    let suffix: string = undefined !;\n    switch (bindingFlags & BindingFlags.Types) {\n      case BindingFlags.TypeElementStyle:\n        suffix = <string>suffixOrSecurityContext;\n        break;\n      case BindingFlags.TypeElementAttribute:\n      case BindingFlags.TypeProperty:\n        securityContext = <SecurityContext>suffixOrSecurityContext;\n        break;\n    }\n    bindingDefs[i] =\n        {flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix};\n  }\n  outputs = outputs || [];\n  const outputDefs: OutputDef[] = new Array(outputs.length);\n  for (let i = 0; i < outputs.length; i++) {\n    const [target, eventName] = outputs[i];\n    outputDefs[i] = {\n      type: OutputType.ElementOutput,\n      target: <any>target, eventName,\n      propName: null\n    };\n  }\n  fixedAttrs = fixedAttrs || [];\n  const attrs = <[string, string, string][]>fixedAttrs.map(([namespaceAndName, value]) => {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    return [ns, name, value];\n  });\n  componentRendererType = resolveRendererType2(componentRendererType);\n  if (componentView) {\n    flags |= NodeFlags.ComponentView;\n  }\n  flags |= NodeFlags.TypeElement;\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: bindingDefs,\n    bindingFlags: calcBindingFlags(bindingDefs),\n    outputs: outputDefs,\n    element: {\n      ns,\n      name,\n      attrs,\n      template: null,\n      // will bet set by the view definition\n      componentProvider: null,\n      componentView: componentView || null,\n      componentRendererType: componentRendererType,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP,\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createElement(view: ViewData, renderHost: any, def: NodeDef): ElementData {\n  const elDef = def.element !;\n  const rootSelectorOrNode = view.root.selectorOrNode;\n  const renderer = view.renderer;\n  let el: any;\n  if (view.parent || !rootSelectorOrNode) {\n    if (elDef.name) {\n      el = renderer.createElement(elDef.name, elDef.ns);\n    } else {\n      el = renderer.createComment('');\n    }\n    const parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n      renderer.appendChild(parentEl, el);\n    }\n  } else {\n    // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n    const preserveContent =\n        (!!elDef.componentRendererType &&\n         elDef.componentRendererType.encapsulation === ViewEncapsulation.ShadowDom);\n    el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n  }\n  if (elDef.attrs) {\n    for (let i = 0; i < elDef.attrs.length; i++) {\n      const [ns, name, value] = elDef.attrs[i];\n      renderer.setAttribute(el, name, value, ns);\n    }\n  }\n  return el;\n}\n\nexport function listenToElementOutputs(view: ViewData, compView: ViewData, def: NodeDef, el: any) {\n  for (let i = 0; i < def.outputs.length; i++) {\n    const output = def.outputs[i];\n    const handleEventClosure = renderEventHandlerClosure(\n        view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n    let listenTarget: 'window'|'document'|'body'|'component'|null = output.target;\n    let listenerView = view;\n    if (output.target === 'component') {\n      listenTarget = null;\n      listenerView = compView;\n    }\n    const disposable =\n        <any>listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n    view.disposables ![def.outputIndex + i] = disposable;\n  }\n}\n\nfunction renderEventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n\n\nexport function checkAndUpdateElementInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const bindLen = def.bindings.length;\n  let changed = false;\n  if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9)) changed = true;\n  return changed;\n}\n\nexport function checkAndUpdateElementDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    if (checkAndUpdateElementValue(view, def, i, values[i])) changed = true;\n  }\n  return changed;\n}\n\nfunction checkAndUpdateElementValue(view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n    return false;\n  }\n  const binding = def.bindings[bindingIdx];\n  const elData = asElementData(view, def.nodeIndex);\n  const renderNode = elData.renderElement;\n  const name = binding.name !;\n  switch (binding.flags & BindingFlags.Types) {\n    case BindingFlags.TypeElementAttribute:\n      setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n      break;\n    case BindingFlags.TypeElementClass:\n      setElementClass(view, renderNode, name, value);\n      break;\n    case BindingFlags.TypeElementStyle:\n      setElementStyle(view, binding, renderNode, name, value);\n      break;\n    case BindingFlags.TypeProperty:\n      const bindView = (def.flags & NodeFlags.ComponentView &&\n                        binding.flags & BindingFlags.SyntheticHostProperty) ?\n          elData.componentView :\n          view;\n      setElementProperty(bindView, binding, renderNode, name, value);\n      break;\n  }\n  return true;\n}\n\nfunction setElementAttribute(\n    view: ViewData, binding: BindingDef, renderNode: any, ns: string | null, name: string,\n    value: any) {\n  const securityContext = binding.securityContext;\n  let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  renderValue = renderValue != null ? renderValue.toString() : null;\n  const renderer = view.renderer;\n  if (value != null) {\n    renderer.setAttribute(renderNode, name, renderValue, ns);\n  } else {\n    renderer.removeAttribute(renderNode, name, ns);\n  }\n}\n\nfunction setElementClass(view: ViewData, renderNode: any, name: string, value: boolean) {\n  const renderer = view.renderer;\n  if (value) {\n    renderer.addClass(renderNode, name);\n  } else {\n    renderer.removeClass(renderNode, name);\n  }\n}\n\nfunction setElementStyle(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  let renderValue: string|null =\n      view.root.sanitizer.sanitize(SecurityContext.STYLE, value as{} | string);\n  if (renderValue != null) {\n    renderValue = renderValue.toString();\n    const unit = binding.suffix;\n    if (unit != null) {\n      renderValue = renderValue + unit;\n    }\n  } else {\n    renderValue = null;\n  }\n  const renderer = view.renderer;\n  if (renderValue != null) {\n    renderer.setStyle(renderNode, name, renderValue);\n  } else {\n    renderer.removeStyle(renderNode, name);\n  }\n}\n\nfunction setElementProperty(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  const securityContext = binding.securityContext;\n  let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  view.renderer.setProperty(renderNode, name, renderValue);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectableDef, getInjectableDef} from '../di/defs';\nimport {resolveForwardRef} from '../di/forward_ref';\nimport {INJECTOR, Injector} from '../di/injector';\nimport {setCurrentInjector} from '../di/injector_compatibility';\nimport {APP_ROOT} from '../di/scope';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {stringify} from '../util';\n\nimport {DepDef, DepFlags, NgModuleData, NgModuleDefinition, NgModuleProviderDef, NodeFlags} from './types';\nimport {splitDepsDsl, tokenKey} from './util';\n\nconst UNDEFINED_VALUE = new Object();\n\nconst InjectorRefTokenKey = tokenKey(Injector);\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\nconst NgModuleRefTokenKey = tokenKey(NgModuleRef);\n\nexport function moduleProvideDef(\n    flags: NodeFlags, token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NgModuleProviderDef {\n  // Need to resolve forwardRefs as e.g. for `useValue` we\n  // lowered the expression and then stopped evaluating it,\n  // i.e. also didn't unwrap it.\n  value = resolveForwardRef(value);\n  const depDefs = splitDepsDsl(deps, stringify(token));\n  return {\n    // will bet set by the module definition\n    index: -1,\n    deps: depDefs, flags, token, value\n  };\n}\n\nexport function moduleDef(providers: NgModuleProviderDef[]): NgModuleDefinition {\n  const providersByKey: {[key: string]: NgModuleProviderDef} = {};\n  const modules = [];\n  let isRoot: boolean = false;\n  for (let i = 0; i < providers.length; i++) {\n    const provider = providers[i];\n    if (provider.token === APP_ROOT && provider.value === true) {\n      isRoot = true;\n    }\n    if (provider.flags & NodeFlags.TypeNgModule) {\n      modules.push(provider.token);\n    }\n    provider.index = i;\n    providersByKey[tokenKey(provider.token)] = provider;\n  }\n  return {\n    // Will be filled later...\n    factory: null,\n    providersByKey,\n    providers,\n    modules,\n    isRoot,\n  };\n}\n\nexport function initNgModule(data: NgModuleData) {\n  const def = data._def;\n  const providers = data._providers = new Array(def.providers.length);\n  for (let i = 0; i < def.providers.length; i++) {\n    const provDef = def.providers[i];\n    if (!(provDef.flags & NodeFlags.LazyProvider)) {\n      // Make sure the provider has not been already initialized outside this loop.\n      if (providers[i] === undefined) {\n        providers[i] = _createProviderInstance(data, provDef);\n      }\n    }\n  }\n}\n\nexport function resolveNgModuleDep(\n    data: NgModuleData, depDef: DepDef, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  const former = setCurrentInjector(data);\n  try {\n    if (depDef.flags & DepFlags.Value) {\n      return depDef.token;\n    }\n    if (depDef.flags & DepFlags.Optional) {\n      notFoundValue = null;\n    }\n    if (depDef.flags & DepFlags.SkipSelf) {\n      return data._parent.get(depDef.token, notFoundValue);\n    }\n    const tokenKey = depDef.tokenKey;\n    switch (tokenKey) {\n      case InjectorRefTokenKey:\n      case INJECTORRefTokenKey:\n      case NgModuleRefTokenKey:\n        return data;\n    }\n    const providerDef = data._def.providersByKey[tokenKey];\n    let injectableDef: InjectableDef<any>|null;\n    if (providerDef) {\n      let providerInstance = data._providers[providerDef.index];\n      if (providerInstance === undefined) {\n        providerInstance = data._providers[providerDef.index] =\n            _createProviderInstance(data, providerDef);\n      }\n      return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    } else if (\n        (injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n      const index = data._providers.length;\n      data._def.providersByKey[depDef.tokenKey] = {\n        flags: NodeFlags.TypeFactoryProvider | NodeFlags.LazyProvider,\n        value: injectableDef.factory,\n        deps: [], index,\n        token: depDef.token,\n      };\n      data._providers[index] = UNDEFINED_VALUE;\n      return (\n          data._providers[index] =\n              _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n    } else if (depDef.flags & DepFlags.Self) {\n      return notFoundValue;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n  } finally {\n    setCurrentInjector(former);\n  }\n}\n\nfunction moduleTransitivelyPresent(ngModule: NgModuleData, scope: any): boolean {\n  return ngModule._def.modules.indexOf(scope) > -1;\n}\n\nfunction targetsModule(ngModule: NgModuleData, def: InjectableDef<any>): boolean {\n  return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n                                    def.providedIn === 'root' && ngModule._def.isRoot);\n}\n\nfunction _createProviderInstance(ngModule: NgModuleData, providerDef: NgModuleProviderDef): any {\n  let injectable: any;\n  switch (providerDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = providerDef.value;\n      break;\n  }\n\n  // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n  // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n  // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n  // set (ngOnDestroy was detected statically).\n  if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n      !(providerDef.flags & NodeFlags.OnDestroy) && typeof injectable.ngOnDestroy === 'function') {\n    providerDef.flags |= NodeFlags.OnDestroy;\n  }\n  return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n\nfunction _createClass(ngModule: NgModuleData, ctor: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return new ctor(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const depValues = new Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n\nfunction _callFactory(ngModule: NgModuleData, factory: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return factory(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const depValues = Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n\nexport function callNgModuleLifecycle(ngModule: NgModuleData, lifecycles: NodeFlags) {\n  const def = ngModule._def;\n  const destroyed = new Set<any>();\n  for (let i = 0; i < def.providers.length; i++) {\n    const provDef = def.providers[i];\n    if (provDef.flags & NodeFlags.OnDestroy) {\n      const instance = ngModule._providers[i];\n      if (instance && instance !== UNDEFINED_VALUE) {\n        const onDestroy: Function|undefined = instance.ngOnDestroy;\n        if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n          onDestroy.apply(instance);\n          destroyed.add(instance);\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementData, NodeDef, NodeFlags, Services, ViewData, ViewDefinition, ViewState} from './types';\nimport {RenderNodeAction, declaredViewContainer, isComponentView, renderNode, visitRootRenderNodes} from './util';\n\nexport function attachEmbeddedView(\n    parentView: ViewData, elementData: ElementData, viewIndex: number | undefined | null,\n    view: ViewData) {\n  let embeddedViews = elementData.viewContainer !._embeddedViews;\n  if (viewIndex === null || viewIndex === undefined) {\n    viewIndex = embeddedViews.length;\n  }\n  view.viewContainerParent = parentView;\n  addToArray(embeddedViews, viewIndex !, view);\n  attachProjectedView(elementData, view);\n\n  Services.dirtyParentQueries(view);\n\n  const prevView = viewIndex ! > 0 ? embeddedViews[viewIndex ! - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n\nfunction attachProjectedView(vcElementData: ElementData, view: ViewData) {\n  const dvcElementData = declaredViewContainer(view);\n  if (!dvcElementData || dvcElementData === vcElementData ||\n      view.state & ViewState.IsProjectedView) {\n    return;\n  }\n  // Note: For performance reasons, we\n  // - add a view to template._projectedViews only 1x throughout its lifetime,\n  //   and remove it not until the view is destroyed.\n  //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n  //    nested projected views as well, even across component boundaries).\n  // - don't track the insertion order of views in the projected views array\n  //   (hard, as when the views of the same template are inserted different view containers)\n  view.state |= ViewState.IsProjectedView;\n  let projectedViews = dvcElementData.template._projectedViews;\n  if (!projectedViews) {\n    projectedViews = dvcElementData.template._projectedViews = [];\n  }\n  projectedViews.push(view);\n  // Note: we are changing the NodeDef here as we cannot calculate\n  // the fact whether a template is used for projection during compilation.\n  markNodeAsProjectedTemplate(view.parent !.def, view.parentNodeDef !);\n}\n\nfunction markNodeAsProjectedTemplate(viewDef: ViewDefinition, nodeDef: NodeDef) {\n  if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n    return;\n  }\n  viewDef.nodeFlags |= NodeFlags.ProjectedTemplate;\n  nodeDef.flags |= NodeFlags.ProjectedTemplate;\n  let parentNodeDef = nodeDef.parent;\n  while (parentNodeDef) {\n    parentNodeDef.childFlags |= NodeFlags.ProjectedTemplate;\n    parentNodeDef = parentNodeDef.parent;\n  }\n}\n\nexport function detachEmbeddedView(elementData: ElementData, viewIndex?: number): ViewData|null {\n  const embeddedViews = elementData.viewContainer !._embeddedViews;\n  if (viewIndex == null || viewIndex >= embeddedViews.length) {\n    viewIndex = embeddedViews.length - 1;\n  }\n  if (viewIndex < 0) {\n    return null;\n  }\n  const view = embeddedViews[viewIndex];\n  view.viewContainerParent = null;\n  removeFromArray(embeddedViews, viewIndex);\n\n  // See attachProjectedView for why we don't update projectedViews here.\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n\n  return view;\n}\n\nexport function detachProjectedView(view: ViewData) {\n  if (!(view.state & ViewState.IsProjectedView)) {\n    return;\n  }\n  const dvcElementData = declaredViewContainer(view);\n  if (dvcElementData) {\n    const projectedViews = dvcElementData.template._projectedViews;\n    if (projectedViews) {\n      removeFromArray(projectedViews, projectedViews.indexOf(view));\n      Services.dirtyParentQueries(view);\n    }\n  }\n}\n\nexport function moveEmbeddedView(\n    elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData {\n  const embeddedViews = elementData.viewContainer !._embeddedViews;\n  const view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n  const prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n\n  return view;\n}\n\nfunction renderAttachEmbeddedView(\n    elementData: ElementData, prevView: ViewData | null, view: ViewData) {\n  const prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode !) :\n                                    elementData.renderElement;\n  const parentNode = view.renderer.parentNode(prevRenderNode);\n  const nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n\nexport function renderDetachView(view: ViewData) {\n  visitRootRenderNodes(view, RenderNodeAction.RemoveChild, null, null, undefined);\n}\n\nfunction addToArray(arr: any[], index: number, value: any) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n\nfunction removeFromArray(arr: any[], index: number) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {InjectFlags} from '../di/injector_compatibility';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {ElementRef} from '../linker/element_ref';\nimport {InternalNgModuleRef, NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {VERSION} from '../version';\n\nimport {callNgModuleLifecycle, initNgModule, resolveNgModuleDep} from './ng_module';\nimport {DepFlags, ElementData, NgModuleData, NgModuleDefinition, NodeDef, NodeFlags, Services, TemplateData, ViewContainerData, ViewData, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView} from './view_attach';\n\nconst EMPTY_CONTEXT = new Object();\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>, viewDefFactory: ViewDefinitionFactory,\n    inputs: {[propName: string]: string} | null, outputs: {[propName: string]: string},\n    ngContentSelectors: string[]): ComponentFactory<any> {\n  return new ComponentFactory_(\n      selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n\nexport function getComponentViewDefinitionFactory(componentFactory: ComponentFactory<any>):\n    ViewDefinitionFactory {\n  return (componentFactory as ComponentFactory_).viewDefFactory;\n}\n\nclass ComponentFactory_ extends ComponentFactory<any> {\n  /**\n   * @internal\n   */\n  viewDefFactory: ViewDefinitionFactory;\n\n  constructor(\n      public selector: string, public componentType: Type<any>,\n      viewDefFactory: ViewDefinitionFactory, private _inputs: {[propName: string]: string}|null,\n      private _outputs: {[propName: string]: string}, public ngContentSelectors: string[]) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.viewDefFactory = viewDefFactory;\n  }\n\n  get inputs() {\n    const inputsArr: {propName: string, templateName: string}[] = [];\n    const inputs = this._inputs !;\n    for (let propName in inputs) {\n      const templateName = inputs[propName];\n      inputsArr.push({propName, templateName});\n    }\n    return inputsArr;\n  }\n\n  get outputs() {\n    const outputsArr: {propName: string, templateName: string}[] = [];\n    for (let propName in this._outputs) {\n      const templateName = this._outputs[propName];\n      outputsArr.push({propName, templateName});\n    }\n    return outputsArr;\n  }\n\n  /**\n   * Creates a new component.\n   */\n  create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<any> {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const viewDef = resolveDefinition(this.viewDefFactory);\n    const componentNodeIndex = viewDef.nodes[0].element !.componentProvider !.nodeIndex;\n    const view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const component = asProviderData(view, componentNodeIndex).instance;\n    if (rootSelectorOrNode) {\n      view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n    }\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nclass ComponentRef_ extends ComponentRef<any> {\n  public readonly hostView: ViewRef;\n  public readonly instance: any;\n  public readonly changeDetectorRef: ChangeDetectorRef;\n  private _elDef: NodeDef;\n  constructor(private _view: ViewData, private _viewRef: ViewRef, private _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n    this.hostView = _viewRef;\n    this.changeDetectorRef = _viewRef;\n    this.instance = _component;\n  }\n  get location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n  }\n  get injector(): Injector { return new Injector_(this._view, this._elDef); }\n  get componentType(): Type<any> { return <any>this._component.constructor; }\n\n  destroy(): void { this._viewRef.destroy(); }\n  onDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nexport function createViewContainerData(\n    view: ViewData, elDef: NodeDef, elData: ElementData): ViewContainerData {\n  return new ViewContainerRef_(view, elDef, elData);\n}\n\nclass ViewContainerRef_ implements ViewContainerData {\n  /**\n   * @internal\n   */\n  _embeddedViews: ViewData[] = [];\n  constructor(private _view: ViewData, private _elDef: NodeDef, private _data: ElementData) {}\n\n  get element(): ElementRef { return new ElementRef(this._data.renderElement); }\n\n  get injector(): Injector { return new Injector_(this._view, this._elDef); }\n\n  /** @deprecated No replacement */\n  get parentInjector(): Injector {\n    let view = this._view;\n    let elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = view.parent !;\n    }\n\n    return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n  }\n\n  clear(): void {\n    const len = this._embeddedViews.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const view = detachEmbeddedView(this._data, i) !;\n      Services.destroyView(view);\n    }\n  }\n\n  get(index: number): ViewRef|null {\n    const view = this._embeddedViews[index];\n    if (view) {\n      const ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n\n  get length(): number { return this._embeddedViews.length; }\n\n  createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const viewRef = templateRef.createEmbeddedView(context || <any>{});\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n\n  createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModuleRef?: NgModuleRef<any>): ComponentRef<C> {\n    const contextInjector = injector || this.parentInjector;\n    if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n      ngModuleRef = contextInjector.get(NgModuleRef);\n    }\n    const componentRef =\n        componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n\n  insert(viewRef: ViewRef, index?: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n    }\n    const viewRef_ = <ViewRef_>viewRef;\n    const viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n\n  move(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot move a destroyed View in a ViewContainer!');\n    }\n    const previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n\n  indexOf(viewRef: ViewRef): number {\n    return this._embeddedViews.indexOf((<ViewRef_>viewRef)._view);\n  }\n\n  remove(index?: number): void {\n    const viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n\n  detach(index?: number): ViewRef|null {\n    const view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\n\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n  /** @internal */\n  _view: ViewData;\n  private _viewContainerRef: ViewContainerRef|null;\n  private _appRef: ApplicationRef|null;\n\n  constructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n\n  get rootNodes(): any[] { return rootRenderNodes(this._view); }\n\n  get context() { return this._view.context; }\n\n  get destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n\n  markForCheck(): void { markParentViewsForCheck(this._view); }\n  detach(): void { this._view.state &= ~ViewState.Attached; }\n  detectChanges(): void {\n    const fs = this._view.root.rendererFactory;\n    if (fs.begin) {\n      fs.begin();\n    }\n    try {\n      Services.checkAndUpdateView(this._view);\n    } finally {\n      if (fs.end) {\n        fs.end();\n      }\n    }\n  }\n  checkNoChanges(): void { Services.checkNoChangesView(this._view); }\n\n  reattach(): void { this._view.state |= ViewState.Attached; }\n  onDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push(<any>callback);\n  }\n\n  destroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n\n  detachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n\n  attachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n\n  attachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nexport function createTemplateData(view: ViewData, def: NodeDef): TemplateData {\n  return new TemplateRef_(view, def);\n}\n\nclass TemplateRef_ extends TemplateRef<any> implements TemplateData {\n  /**\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _projectedViews !: ViewData[];\n\n  constructor(private _parentView: ViewData, private _def: NodeDef) { super(); }\n\n  createEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(\n        this._parentView, this._def, this._def.element !.template !, context));\n  }\n\n  get elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n  }\n}\n\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\n\nclass Injector_ implements Injector {\n  constructor(private view: ViewData, private elDef: NodeDef|null) {}\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const allowPrivateServices =\n        this.elDef ? (this.elDef.flags & NodeFlags.ComponentView) !== 0 : false;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nexport function nodeValue(view: ViewData, index: number): any {\n  const def = view.def.nodes[index];\n  if (def.flags & NodeFlags.TypeElement) {\n    const elData = asElementData(view, def.nodeIndex);\n    return def.element !.template ? elData.template : elData.renderElement;\n  } else if (def.flags & NodeFlags.TypeText) {\n    return asTextData(view, def.nodeIndex).renderText;\n  } else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n    return asProviderData(view, def.nodeIndex).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\n\nclass RendererAdapter implements RendererV1 {\n  constructor(private delegate: Renderer2) {}\n  selectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n\n  createElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n\n  createViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n\n  createTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n\n  createText(parentElement: Element|DocumentFragment, value: string): any {\n    const node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n\n  projectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n\n  attachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const parentElement = this.delegate.parentNode(node);\n    const nextSibling = this.delegate.nextSibling(node);\n    for (let i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n\n  detachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let i = 0; i < viewRootNodes.length; i++) {\n      const node = viewRootNodes[i];\n      const parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n\n  destroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let i = 0; i < viewAllNodes.length; i++) {\n      this.delegate.destroyNode !(viewAllNodes[i]);\n    }\n  }\n\n  listen(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, <any>callback);\n  }\n\n  listenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, <any>callback);\n  }\n\n  setElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n\n  setElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue?: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n\n  setBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n\n  setElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n\n  setElementStyle(renderElement: HTMLElement, styleName: string, styleValue?: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n\n  invokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    (renderElement as any)[methodName].apply(renderElement, args);\n  }\n\n  setText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n\n  animate(): any { throw new Error('Renderer.animate is no longer supported!'); }\n}\n\n\nexport function createNgModuleRef(\n    moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\n\nclass NgModuleRef_ implements NgModuleData, InternalNgModuleRef<any> {\n  private _destroyListeners: (() => void)[] = [];\n  private _destroyed: boolean = false;\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _providers !: any[];\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _modules !: any[];\n\n  readonly injector: Injector = this;\n\n  constructor(\n      private _moduleType: Type<any>, public _parent: Injector,\n      public _bootstrapComponents: Type<any>[], public _def: NgModuleDefinition) {\n    initNgModule(this);\n  }\n\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND,\n      injectFlags: InjectFlags = InjectFlags.Default): any {\n    let flags = DepFlags.None;\n    if (injectFlags & InjectFlags.SkipSelf) {\n      flags |= DepFlags.SkipSelf;\n    } else if (injectFlags & InjectFlags.Self) {\n      flags |= DepFlags.Self;\n    }\n    return resolveNgModuleDep(\n        this, {token: token, tokenKey: tokenKey(token), flags: flags}, notFoundValue);\n  }\n\n  get instance() { return this.get(this._moduleType); }\n\n  get componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n\n  destroy(): void {\n    if (this._destroyed) {\n      throw new Error(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    callNgModuleLifecycle(this, NodeFlags.OnDestroy);\n    this._destroyListeners.forEach((listener) => listener());\n  }\n\n  onDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, SimpleChange, SimpleChanges, WrappedValue} from '../change_detection/change_detection';\nimport {INJECTOR, Injector, resolveForwardRef} from '../di';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {stringify} from '../util';\nimport {isObservable} from '../util/lang';\n\nimport {createChangeDetectorRef, createInjector, createRendererV1} from './refs';\nimport {BindingDef, BindingFlags, DepDef, DepFlags, NodeDef, NodeFlags, OutputDef, OutputType, ProviderData, QueryValueType, Services, ViewData, ViewFlags, ViewState, asElementData, asProviderData, shouldCallLifecycleInitHook} from './types';\nimport {calcBindingFlags, checkBinding, dispatchEvent, isComponentView, splitDepsDsl, splitMatchedQueriesDsl, tokenKey, viewParentEl} from './util';\n\nconst RendererV1TokenKey = tokenKey(RendererV1);\nconst Renderer2TokenKey = tokenKey(Renderer2);\nconst ElementRefTokenKey = tokenKey(ElementRef);\nconst ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst TemplateRefTokenKey = tokenKey(TemplateRef);\nconst ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst InjectorRefTokenKey = tokenKey(Injector);\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\n\nexport function directiveDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueries: null | [string | number, QueryValueType][], childCount: number, ctor: any,\n    deps: ([DepFlags, any] | any)[], props?: null | {[name: string]: [number, string]},\n    outputs?: null | {[name: string]: string}): NodeDef {\n  const bindings: BindingDef[] = [];\n  if (props) {\n    for (let prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        flags: BindingFlags.TypeProperty,\n        name: prop, nonMinifiedName,\n        ns: null,\n        securityContext: null,\n        suffix: null\n      };\n    }\n  }\n  const outputDefs: OutputDef[] = [];\n  if (outputs) {\n    for (let propName in outputs) {\n      outputDefs.push(\n          {type: OutputType.DirectiveOutput, propName, target: null, eventName: outputs[propName]});\n    }\n  }\n  flags |= NodeFlags.TypeDirective;\n  return _def(\n      checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n\nexport function pipeDef(flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  flags |= NodeFlags.TypePipe;\n  return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n\nexport function providerDef(\n    flags: NodeFlags, matchedQueries: null | [string | number, QueryValueType][], token: any,\n    value: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n\nexport function _def(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: [string | number, QueryValueType][] | null, childCount: number, token: any,\n    value: any, deps: ([DepFlags, any] | any)[], bindings?: BindingDef[],\n    outputs?: OutputDef[]): NodeDef {\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  if (!outputs) {\n    outputs = [];\n  }\n  if (!bindings) {\n    bindings = [];\n  }\n  // Need to resolve forwardRefs as e.g. for `useValue` we\n  // lowered the expression and then stopped evaluating it,\n  // i.e. also didn't unwrap it.\n  value = resolveForwardRef(value);\n\n  const depDefs = splitDepsDsl(deps, stringify(token));\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n    ngContentIndex: -1, childCount, bindings,\n    bindingFlags: calcBindingFlags(bindings), outputs,\n    element: null,\n    provider: {token, value, deps: depDefs},\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createProviderInstance(view: ViewData, def: NodeDef): any {\n  return _createProviderInstance(view, def);\n}\n\nexport function createPipeInstance(view: ViewData, def: NodeDef): any {\n  // deps are looked up from component.\n  let compView = view;\n  while (compView.parent && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  // pipes can see the private services of the component\n  const allowPrivateServices = true;\n  // pipes are always eager and classes!\n  return createClass(\n      compView.parent !, viewParentEl(compView) !, allowPrivateServices, def.provider !.value,\n      def.provider !.deps);\n}\n\nexport function createDirectiveInstance(view: ViewData, def: NodeDef): any {\n  // components can see other private services, other directives can't.\n  const allowPrivateServices = (def.flags & NodeFlags.Component) > 0;\n  // directives are always eager and classes!\n  const instance = createClass(\n      view, def.parent !, allowPrivateServices, def.provider !.value, def.provider !.deps);\n  if (def.outputs.length) {\n    for (let i = 0; i < def.outputs.length; i++) {\n      const output = def.outputs[i];\n      const outputObservable = instance[output.propName !];\n      if (isObservable(outputObservable)) {\n        const subscription = outputObservable.subscribe(\n            eventHandlerClosure(view, def.parent !.nodeIndex, output.eventName));\n        view.disposables ![def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n      } else {\n        throw new Error(\n            `@Output ${output.propName} not initialized in '${instance.constructor.name}'.`);\n      }\n    }\n  }\n  return instance;\n}\n\nfunction eventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n\nexport function checkAndUpdateDirectiveInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const providerData = asProviderData(view, def.nodeIndex);\n  const directive = providerData.instance;\n  let changed = false;\n  let changes: SimpleChanges = undefined !;\n  const bindLen = def.bindings.length;\n  if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 0, v0, changes);\n  }\n  if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 1, v1, changes);\n  }\n  if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 2, v2, changes);\n  }\n  if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 3, v3, changes);\n  }\n  if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 4, v4, changes);\n  }\n  if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 5, v5, changes);\n  }\n  if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 6, v6, changes);\n  }\n  if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 7, v7, changes);\n  }\n  if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 8, v8, changes);\n  }\n  if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 9, v9, changes);\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((def.flags & NodeFlags.OnInit) &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingOnInit, def.nodeIndex)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n\nexport function checkAndUpdateDirectiveDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const providerData = asProviderData(view, def.nodeIndex);\n  const directive = providerData.instance;\n  let changed = false;\n  let changes: SimpleChanges = undefined !;\n  for (let i = 0; i < values.length; i++) {\n    if (checkBinding(view, def, i, values[i])) {\n      changed = true;\n      changes = updateProp(view, providerData, def, i, values[i], changes);\n    }\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((def.flags & NodeFlags.OnInit) &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingOnInit, def.nodeIndex)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n\nfunction _createProviderInstance(view: ViewData, def: NodeDef): any {\n  // private services can see other private services\n  const allowPrivateServices = (def.flags & NodeFlags.PrivateProvider) > 0;\n  const providerDef = def.provider;\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      return createClass(\n          view, def.parent !, allowPrivateServices, providerDef !.value, providerDef !.deps);\n    case NodeFlags.TypeFactoryProvider:\n      return callFactory(\n          view, def.parent !, allowPrivateServices, providerDef !.value, providerDef !.deps);\n    case NodeFlags.TypeUseExistingProvider:\n      return resolveDep(view, def.parent !, allowPrivateServices, providerDef !.deps[0]);\n    case NodeFlags.TypeValueProvider:\n      return providerDef !.value;\n  }\n}\n\nfunction createClass(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, ctor: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const depValues = new Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n\nfunction callFactory(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, factory: any,\n    deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const depValues = Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nexport const NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n\nexport function resolveDep(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n    notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  const startView = view;\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  const tokenKey = depDef.tokenKey;\n\n  if (tokenKey === ChangeDetectorRefTokenKey) {\n    // directives on the same element as a component should be able to control the change detector\n    // of that component as well.\n    allowPrivateServices = !!(elDef && elDef.element !.componentView);\n  }\n\n  if (elDef && (depDef.flags & DepFlags.SkipSelf)) {\n    allowPrivateServices = false;\n    elDef = elDef.parent !;\n  }\n\n  let searchView: ViewData|null = view;\n  while (searchView) {\n    if (elDef) {\n      switch (tokenKey) {\n        case RendererV1TokenKey: {\n          const compView = findCompView(searchView, elDef, allowPrivateServices);\n          return createRendererV1(compView);\n        }\n        case Renderer2TokenKey: {\n          const compView = findCompView(searchView, elDef, allowPrivateServices);\n          return compView.renderer;\n        }\n        case ElementRefTokenKey:\n          return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n        case ViewContainerRefTokenKey:\n          return asElementData(searchView, elDef.nodeIndex).viewContainer;\n        case TemplateRefTokenKey: {\n          if (elDef.element !.template) {\n            return asElementData(searchView, elDef.nodeIndex).template;\n          }\n          break;\n        }\n        case ChangeDetectorRefTokenKey: {\n          let cdView = findCompView(searchView, elDef, allowPrivateServices);\n          return createChangeDetectorRef(cdView);\n        }\n        case InjectorRefTokenKey:\n        case INJECTORRefTokenKey:\n          return createInjector(searchView, elDef);\n        default:\n          const providerDef =\n              (allowPrivateServices ? elDef.element !.allProviders :\n                                      elDef.element !.publicProviders) ![tokenKey];\n          if (providerDef) {\n            let providerData = asProviderData(searchView, providerDef.nodeIndex);\n            if (!providerData) {\n              providerData = {instance: _createProviderInstance(searchView, providerDef)};\n              searchView.nodes[providerDef.nodeIndex] = providerData as any;\n            }\n            return providerData.instance;\n          }\n      }\n    }\n\n    allowPrivateServices = isComponentView(searchView);\n    elDef = viewParentEl(searchView) !;\n    searchView = searchView.parent !;\n\n    if (depDef.flags & DepFlags.Self) {\n      searchView = null;\n    }\n  }\n\n  const value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n\n  if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n      notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n    // Return the value from the root element injector when\n    // - it provides it\n    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    // - the module injector should not be checked\n    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    return value;\n  }\n\n  return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n\nfunction findCompView(view: ViewData, elDef: NodeDef, allowPrivateServices: boolean) {\n  let compView: ViewData;\n  if (allowPrivateServices) {\n    compView = asElementData(view, elDef.nodeIndex).componentView;\n  } else {\n    compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n      compView = compView.parent;\n    }\n  }\n  return compView;\n}\n\nfunction updateProp(\n    view: ViewData, providerData: ProviderData, def: NodeDef, bindingIdx: number, value: any,\n    changes: SimpleChanges): SimpleChanges {\n  if (def.flags & NodeFlags.Component) {\n    const compView = asElementData(view, def.parent !.nodeIndex).componentView;\n    if (compView.def.flags & ViewFlags.OnPush) {\n      compView.state |= ViewState.ChecksEnabled;\n    }\n  }\n  const binding = def.bindings[bindingIdx];\n  const propName = binding.name !;\n  // Note: This is still safe with Closure Compiler as\n  // the user passed in the property name as an object has to `providerDef`,\n  // so Closure Compiler will have renamed the property correctly already.\n  providerData.instance[propName] = value;\n  if (def.flags & NodeFlags.OnChanges) {\n    changes = changes || {};\n    const oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n    const binding = def.bindings[bindingIdx];\n    changes[binding.nonMinifiedName !] =\n        new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0);\n  }\n  view.oldValues[def.bindingIndex + bindingIdx] = value;\n  return changes;\n}\n\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nexport function callLifecycleHooksChildrenFirst(view: ViewData, lifecycles: NodeFlags) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const nodes = view.def.nodes;\n  let initIndex = 0;\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeDef = nodes[i];\n    let parent = nodeDef.parent;\n    if (!parent && nodeDef.flags & lifecycles) {\n      // matching root node (e.g. a pipe)\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n    }\n    if ((nodeDef.childFlags & lifecycles) === 0) {\n      // no child matches one of the lifecycles\n      i += nodeDef.childCount;\n    }\n    while (parent && (parent.flags & NodeFlags.TypeElement) &&\n           i === parent.nodeIndex + parent.childCount) {\n      // last child of an element\n      if (parent.directChildFlags & lifecycles) {\n        initIndex = callElementProvidersLifecycles(view, parent, lifecycles, initIndex);\n      }\n      parent = parent.parent;\n    }\n  }\n}\n\nfunction callElementProvidersLifecycles(\n    view: ViewData, elDef: NodeDef, lifecycles: NodeFlags, initIndex: number): number {\n  for (let i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & lifecycles) {\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n    }\n    // only visit direct children\n    i += nodeDef.childCount;\n  }\n  return initIndex;\n}\n\nfunction callProviderLifecycles(\n    view: ViewData, index: number, lifecycles: NodeFlags, initIndex: number) {\n  const providerData = asProviderData(view, index);\n  if (!providerData) {\n    return;\n  }\n  const provider = providerData.instance;\n  if (!provider) {\n    return;\n  }\n  Services.setCurrentNode(view, index);\n  if (lifecycles & NodeFlags.AfterContentInit &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingAfterContentInit, initIndex)) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & NodeFlags.AfterContentChecked) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & NodeFlags.AfterViewInit &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingAfterViewInit, initIndex)) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & NodeFlags.AfterViewChecked) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & NodeFlags.OnDestroy) {\n    provider.ngOnDestroy();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\n\nimport {NodeDef, NodeFlags, QueryBindingDef, QueryBindingType, QueryDef, QueryValueType, ViewData, asElementData, asProviderData, asQueryList} from './types';\nimport {declaredViewContainer, filterQueryId, isEmbeddedView} from './util';\n\nexport function queryDef(\n    flags: NodeFlags, id: number, bindings: {[propName: string]: QueryBindingType}): NodeDef {\n  let bindingDefs: QueryBindingDef[] = [];\n  for (let propName in bindings) {\n    const bindingType = bindings[propName];\n    bindingDefs.push({propName, bindingType});\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    // TODO(vicb): check\n    checkIndex: -1, flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    ngContentIndex: -1,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: {id, filterId: filterQueryId(id), bindings: bindingDefs},\n    ngContent: null\n  };\n}\n\nexport function createQuery(): QueryList<any> {\n  return new QueryList();\n}\n\nexport function dirtyParentQueries(view: ViewData) {\n  const queryIds = view.def.nodeMatchedQueries;\n  while (view.parent && isEmbeddedView(view)) {\n    let tplDef = view.parentNodeDef !;\n    view = view.parent;\n    // content queries\n    const end = tplDef.nodeIndex + tplDef.childCount;\n    for (let i = 0; i <= end; i++) {\n      const nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeContentQuery) &&\n          (nodeDef.flags & NodeFlags.DynamicQuery) &&\n          (nodeDef.query !.filterId & queryIds) === nodeDef.query !.filterId) {\n        asQueryList(view, i).setDirty();\n      }\n      if ((nodeDef.flags & NodeFlags.TypeElement && i + nodeDef.childCount < tplDef.nodeIndex) ||\n          !(nodeDef.childFlags & NodeFlags.TypeContentQuery) ||\n          !(nodeDef.childFlags & NodeFlags.DynamicQuery)) {\n        // skip elements that don't contain the template element or no query.\n        i += nodeDef.childCount;\n      }\n    }\n  }\n\n  // view queries\n  if (view.def.nodeFlags & NodeFlags.TypeViewQuery) {\n    for (let i = 0; i < view.def.nodes.length; i++) {\n      const nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeViewQuery) && (nodeDef.flags & NodeFlags.DynamicQuery)) {\n        asQueryList(view, i).setDirty();\n      }\n      // only visit the root nodes\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nexport function checkAndUpdateQuery(view: ViewData, nodeDef: NodeDef) {\n  const queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (!queryList.dirty) {\n    return;\n  }\n  let directiveInstance: any;\n  let newValues: any[] = undefined !;\n  if (nodeDef.flags & NodeFlags.TypeContentQuery) {\n    const elementDef = nodeDef.parent !.parent !;\n    newValues = calcQueryValues(\n        view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query !,\n        []);\n    directiveInstance = asProviderData(view, nodeDef.parent !.nodeIndex).instance;\n  } else if (nodeDef.flags & NodeFlags.TypeViewQuery) {\n    newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query !, []);\n    directiveInstance = view.component;\n  }\n  queryList.reset(newValues);\n  const bindings = nodeDef.query !.bindings;\n  let notify = false;\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n    let boundValue: any;\n    switch (binding.bindingType) {\n      case QueryBindingType.First:\n        boundValue = queryList.first;\n        break;\n      case QueryBindingType.All:\n        boundValue = queryList;\n        notify = true;\n        break;\n    }\n    directiveInstance[binding.propName] = boundValue;\n  }\n  if (notify) {\n    queryList.notifyOnChanges();\n  }\n}\n\nfunction calcQueryValues(\n    view: ViewData, startIndex: number, endIndex: number, queryDef: QueryDef,\n    values: any[]): any[] {\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = view.def.nodes[i];\n    const valueType = nodeDef.matchedQueries[queryDef.id];\n    if (valueType != null) {\n      values.push(getQueryValue(view, nodeDef, valueType));\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && nodeDef.element !.template &&\n        (nodeDef.element !.template !.nodeMatchedQueries & queryDef.filterId) ===\n            queryDef.filterId) {\n      const elementData = asElementData(view, i);\n      // check embedded views that were attached at the place of their template,\n      // but process child nodes first if some match the query (see issue #16568)\n      if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n        calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n        i += nodeDef.childCount;\n      }\n      if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n        const embeddedViews = elementData.viewContainer !._embeddedViews;\n        for (let k = 0; k < embeddedViews.length; k++) {\n          const embeddedView = embeddedViews[k];\n          const dvc = declaredViewContainer(embeddedView);\n          if (dvc && dvc === elementData) {\n            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n          }\n        }\n      }\n      const projectedViews = elementData.template._projectedViews;\n      if (projectedViews) {\n        for (let k = 0; k < projectedViews.length; k++) {\n          const projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n        }\n      }\n    }\n    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n      // if no child matches the query, skip the children.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n\nexport function getQueryValue(\n    view: ViewData, nodeDef: NodeDef, queryValueType: QueryValueType): any {\n  if (queryValueType != null) {\n    // a match\n    switch (queryValueType) {\n      case QueryValueType.RenderElement:\n        return asElementData(view, nodeDef.nodeIndex).renderElement;\n      case QueryValueType.ElementRef:\n        return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n      case QueryValueType.TemplateRef:\n        return asElementData(view, nodeDef.nodeIndex).template;\n      case QueryValueType.ViewContainerRef:\n        return asElementData(view, nodeDef.nodeIndex).viewContainer;\n      case QueryValueType.Provider:\n        return asProviderData(view, nodeDef.nodeIndex).instance;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NodeDef, NodeFlags, ViewData} from './types';\nimport {RenderNodeAction, getParentRenderElement, visitProjectedRenderNodes} from './util';\n\nexport function ngContentDef(ngContentIndex: null | number, index: number): NodeDef {\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex: -1,\n    flags: NodeFlags.TypeNgContent,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: {index}\n  };\n}\n\nexport function appendNgContent(view: ViewData, renderHost: any, def: NodeDef) {\n  const parentEl = getParentRenderElement(view, renderHost, def);\n  if (!parentEl) {\n    // Nothing to do if there is no parent element.\n    return;\n  }\n  const ngContentIndex = def.ngContent !.index;\n  visitProjectedRenderNodes(\n      view, ngContentIndex, RenderNodeAction.AppendChild, parentEl, null, undefined);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, TextData, ViewData, asTextData} from './types';\nimport {checkAndUpdateBinding, getParentRenderElement} from './util';\n\nexport function textDef(\n    checkIndex: number, ngContentIndex: number | null, staticText: string[]): NodeDef {\n  const bindings: BindingDef[] = new Array(staticText.length - 1);\n  for (let i = 1; i < staticText.length; i++) {\n    bindings[i - 1] = {\n      flags: BindingFlags.TypeProperty,\n      name: null,\n      ns: null,\n      nonMinifiedName: null,\n      securityContext: null,\n      suffix: staticText[i],\n    };\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags: NodeFlags.TypeText,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0, bindings,\n    bindingFlags: BindingFlags.TypeProperty,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: {prefix: staticText[0]},\n    query: null,\n    ngContent: null,\n  };\n}\n\nexport function createText(view: ViewData, renderHost: any, def: NodeDef): TextData {\n  let renderNode: any;\n  const renderer = view.renderer;\n  renderNode = renderer.createText(def.text !.prefix);\n  const parentEl = getParentRenderElement(view, renderHost, def);\n  if (parentEl) {\n    renderer.appendChild(parentEl, renderNode);\n  }\n  return {renderText: renderNode};\n}\n\nexport function checkAndUpdateTextInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  let changed = false;\n  const bindings = def.bindings;\n  const bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    let value = def.text !.prefix;\n    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);\n    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);\n    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);\n    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);\n    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);\n    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);\n    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);\n    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);\n    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);\n    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);\n    const renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n\nexport function checkAndUpdateTextDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    let value = '';\n    for (let i = 0; i < values.length; i++) {\n      value = value + _addInterpolationPart(values[i], bindings[i]);\n    }\n    value = def.text !.prefix + value;\n    const renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n\nfunction _addInterpolationPart(value: any, binding: BindingDef): string {\n  const valueStr = value != null ? value.toString() : '';\n  return valueStr + binding.suffix;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Renderer2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery} from './query';\nimport {createTemplateData, createViewContainerData} from './refs';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, CheckType, ElementData, NodeData, NodeDef, NodeFlags, ProviderData, RootData, Services, ViewData, ViewDefinition, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asQueryList, asTextData, shiftInitState} from './types';\nimport {NOOP, checkBindingNoChanges, isComponentView, markParentViewsForCheckProjectedViews, resolveDefinition, tokenKey} from './util';\nimport {detachProjectedView} from './view_attach';\n\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: null | ViewUpdateFn,\n    updateRenderer?: null | ViewUpdateFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  let viewBindingCount = 0;\n  let viewDisposableCount = 0;\n  let viewNodeFlags = 0;\n  let viewRootNodeFlags = 0;\n  let viewMatchedQueries = 0;\n  let currentParent: NodeDef|null = null;\n  let currentRenderParent: NodeDef|null = null;\n  let currentElementHasPublicProviders = false;\n  let currentElementHasPrivateProviders = false;\n  let lastRenderRootNode: NodeDef|null = null;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    node.nodeIndex = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.outputIndex = viewDisposableCount;\n    node.renderParent = currentRenderParent;\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n\n    if (node.element) {\n      const elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? currentParent.element !.publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n\n      if (node.element.template) {\n        viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    }\n    validateNode(currentParent, node, nodes.length);\n\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.outputs.length;\n\n    if (!currentRenderParent && (node.flags & NodeFlags.CatRenderNode)) {\n      lastRenderRootNode = node;\n    }\n\n    if (node.flags & NodeFlags.CatProvider) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true;\n        // Use prototypical inheritance to not get O(n^2) complexity...\n        currentParent !.element !.publicProviders =\n            Object.create(currentParent !.element !.publicProviders);\n        currentParent !.element !.allProviders = currentParent !.element !.publicProviders;\n      }\n      const isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const isComponent = (node.flags & NodeFlags.Component) !== 0;\n      if (!isPrivateService || isComponent) {\n        currentParent !.element !.publicProviders ![tokenKey(node.provider !.token)] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true;\n          // Use prototypical inheritance to not get O(n^2) complexity...\n          currentParent !.element !.allProviders =\n              Object.create(currentParent !.element !.publicProviders);\n        }\n        currentParent !.element !.allProviders ![tokenKey(node.provider !.token)] = node;\n      }\n      if (isComponent) {\n        currentParent !.element !.componentProvider = node;\n      }\n    }\n\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.directChildFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    } else {\n      viewRootNodeFlags |= node.flags;\n    }\n\n    if (node.childCount > 0) {\n      currentParent = node;\n\n      if (!isNgContainer(node)) {\n        currentRenderParent = node;\n      }\n    } else {\n      // When the current node has no children, check if it is the last children of its parent.\n      // When it is, propagate the flags up.\n      // The loop is required because an element could be the last transitive children of several\n      // elements. We loop to either the root or the highest opened element (= with remaining\n      // children)\n      while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n        const newParent: NodeDef|null = currentParent.parent;\n        if (newParent) {\n          newParent.childFlags |= currentParent.childFlags;\n          newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n        }\n        currentParent = newParent;\n        // We also need to update the render parent & account for ng-container\n        if (currentParent && isNgContainer(currentParent)) {\n          currentRenderParent = currentParent.renderParent;\n        } else {\n          currentRenderParent = currentParent;\n        }\n      }\n    }\n  }\n\n  const handleEvent: ViewHandleEventFn = (view, nodeIndex, eventName, event) =>\n      nodes[nodeIndex].element !.handleEvent !(view, eventName, event);\n\n  return {\n    // Will be filled later...\n    factory: null,\n    nodeFlags: viewNodeFlags,\n    rootNodeFlags: viewRootNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP, handleEvent,\n    bindingCount: viewBindingCount,\n    outputCount: viewDisposableCount, lastRenderRootNode\n  };\n}\n\nfunction isNgContainer(node: NodeDef): boolean {\n  return (node.flags & NodeFlags.TypeElement) !== 0 && node.element !.name === null;\n}\n\nfunction validateNode(parent: NodeDef | null, node: NodeDef, nodeCount: number) {\n  const template = node.element && node.element.template;\n  if (template) {\n    if (!template.lastRenderRootNode) {\n      throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n    }\n    if (template.lastRenderRootNode &&\n        template.lastRenderRootNode.flags & NodeFlags.EmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.flags & NodeFlags.CatProvider) {\n    const parentFlags = parent ? parent.flags : 0;\n    if ((parentFlags & NodeFlags.TypeElement) === 0) {\n      throw new Error(\n          `Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.TypeContentQuery &&\n        (!parent || (parent.flags & NodeFlags.TypeDirective) === 0)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.nodeIndex}!`);\n    }\n    if (node.flags & NodeFlags.TypeViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.childCount) {\n    const parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n    if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.nodeIndex}!`);\n    }\n  }\n}\n\nexport function createEmbeddedView(\n    parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n\nexport function createComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const rendererType = nodeDef.element !.componentRendererType;\n  let compRenderer: Renderer2;\n  if (!rendererType) {\n    compRenderer = parentView.root.renderer;\n  } else {\n    compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n  }\n  return createView(\n      parentView.root, compRenderer, parentView, nodeDef.element !.componentProvider, viewDef);\n}\n\nfunction createView(\n    root: RootData, renderer: Renderer2, parent: ViewData | null, parentNodeDef: NodeDef | null,\n    def: ViewDefinition): ViewData {\n  const nodes: NodeData[] = new Array(def.nodes.length);\n  const disposables = def.outputCount ? new Array(def.outputCount) : null;\n  const view: ViewData = {\n    def,\n    parent,\n    viewContainerParent: null, parentNodeDef,\n    context: null,\n    component: null, nodes,\n    state: ViewState.CatInit, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables,\n    initIndex: -1\n  };\n  return view;\n}\n\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n\nfunction createViewNodes(view: ViewData) {\n  let renderHost: any;\n  if (isComponentView(view)) {\n    const hostDef = view.parentNodeDef;\n    renderHost = asElementData(view.parent !, hostDef !.parent !.nodeIndex).renderElement;\n  }\n  const def = view.def;\n  const nodes = view.nodes;\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    let nodeData: any;\n    switch (nodeDef.flags & NodeFlags.Types) {\n      case NodeFlags.TypeElement:\n        const el = createElement(view, renderHost, nodeDef) as any;\n        let componentView: ViewData = undefined !;\n        if (nodeDef.flags & NodeFlags.ComponentView) {\n          const compViewDef = resolveDefinition(nodeDef.element !.componentView !);\n          componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n        }\n        listenToElementOutputs(view, componentView, nodeDef, el);\n        nodeData = <ElementData>{\n          renderElement: el,\n          componentView,\n          viewContainer: null,\n          template: nodeDef.element !.template ? createTemplateData(view, nodeDef) : undefined\n        };\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n          nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n        }\n        break;\n      case NodeFlags.TypeText:\n        nodeData = createText(view, renderHost, nodeDef) as any;\n        break;\n      case NodeFlags.TypeClassProvider:\n      case NodeFlags.TypeFactoryProvider:\n      case NodeFlags.TypeUseExistingProvider:\n      case NodeFlags.TypeValueProvider: {\n        nodeData = nodes[i];\n        if (!nodeData && !(nodeDef.flags & NodeFlags.LazyProvider)) {\n          const instance = createProviderInstance(view, nodeDef);\n          nodeData = <ProviderData>{instance};\n        }\n        break;\n      }\n      case NodeFlags.TypePipe: {\n        const instance = createPipeInstance(view, nodeDef);\n        nodeData = <ProviderData>{instance};\n        break;\n      }\n      case NodeFlags.TypeDirective: {\n        nodeData = nodes[i];\n        if (!nodeData) {\n          const instance = createDirectiveInstance(view, nodeDef);\n          nodeData = <ProviderData>{instance};\n        }\n        if (nodeDef.flags & NodeFlags.Component) {\n          const compView = asElementData(view, nodeDef.parent !.nodeIndex).componentView;\n          initView(compView, nodeData.instance, nodeData.instance);\n        }\n        break;\n      }\n      case NodeFlags.TypePureArray:\n      case NodeFlags.TypePureObject:\n      case NodeFlags.TypePurePipe:\n        nodeData = createPureExpression(view, nodeDef) as any;\n        break;\n      case NodeFlags.TypeContentQuery:\n      case NodeFlags.TypeViewQuery:\n        nodeData = createQuery() as any;\n        break;\n      case NodeFlags.TypeNgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodeData = undefined;\n        break;\n    }\n    nodes[i] = nodeData;\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery | NodeFlags.TypeViewQuery, NodeFlags.StaticQuery,\n      CheckType.CheckAndUpdate);\n}\n\nexport function checkNoChangesView(view: ViewData) {\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckNoChanges);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  Services.updateRenderer(view, CheckType.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  // Note: We don't check queries for changes as we didn't do this in v2.x.\n  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n\nexport function checkAndUpdateView(view: ViewData) {\n  if (view.state & ViewState.BeforeFirstCheck) {\n    view.state &= ~ViewState.BeforeFirstCheck;\n    view.state |= ViewState.FirstCheck;\n  } else {\n    view.state &= ~ViewState.FirstCheck;\n  }\n  shiftInitState(view, ViewState.InitState_BeforeInit, ViewState.InitState_CallingOnInit);\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckAndUpdate);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  let callInit = shiftInitState(\n      view, ViewState.InitState_CallingOnInit, ViewState.InitState_CallingAfterContentInit);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked | (callInit ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(view, CheckType.CheckAndUpdate);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeViewQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  callInit = shiftInitState(\n      view, ViewState.InitState_CallingAfterContentInit, ViewState.InitState_CallingAfterViewInit);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked | (callInit ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n  shiftInitState(view, ViewState.InitState_CallingAfterViewInit, ViewState.InitState_AfterInit);\n}\n\nexport function checkAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n  }\n}\n\nfunction markProjectedViewsForCheck(view: ViewData) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ProjectedTemplate)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n      const projectedViews = asElementData(view, i).template._projectedViews;\n      if (projectedViews) {\n        for (let i = 0; i < projectedViews.length; i++) {\n          const projectedView = projectedViews[i];\n          projectedView.state |= ViewState.CheckProjectedView;\n          markParentViewsForCheckProjectedViews(projectedView, view);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.ProjectedTemplate) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionInline(\n          view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    default:\n      throw 'unreachable';\n  }\n}\n\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementDynamic(view, nodeDef, values);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextDynamic(view, nodeDef, values);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n    default:\n      throw 'unreachable';\n  }\n}\n\nexport function checkNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    checkNoChangesNodeDynamic(view, nodeDef, v0);\n  }\n  // Returning false is ok here as we would have thrown in case of a change.\n  return false;\n}\n\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): void {\n  const bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): void {\n  for (let i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.nodeIndex),\n        `Query ${nodeDef.query!.id} not dirty`, `Query ${nodeDef.query!.id} dirty`,\n        (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n\nexport function destroyView(view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  detachProjectedView(view);\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (isComponentView(view)) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n\nfunction destroyViewNodes(view: ViewData) {\n  const len = view.def.nodes.length;\n  for (let i = 0; i < len; i++) {\n    const def = view.def.nodes[i];\n    if (def.flags & NodeFlags.TypeElement) {\n      view.renderer.destroyNode !(asElementData(view, i).renderElement);\n    } else if (def.flags & NodeFlags.TypeText) {\n      view.renderer.destroyNode !(asTextData(view, i).renderText);\n    } else if (def.flags & NodeFlags.TypeContentQuery || def.flags & NodeFlags.TypeViewQuery) {\n      asQueryList(view, i).destroy();\n    }\n  }\n}\n\nenum ViewAction {\n  CreateViewNodes,\n  CheckNoChanges,\n  CheckNoChangesProjectedViews,\n  CheckAndUpdate,\n  CheckAndUpdateProjectedViews,\n  Destroy\n}\n\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ComponentView)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ComponentView) {\n      // a leaf\n      callViewAction(asElementData(view, i).componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.ComponentView) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.EmbeddedViews)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      // a leaf\n      const embeddedViews = asElementData(view, i).viewContainer !._embeddedViews;\n      for (let k = 0; k < embeddedViews.length; k++) {\n        callViewAction(embeddedViews[k], action);\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.EmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckNoChangesProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdateProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.Destroy:\n      // Note: destroyView recurses over all views,\n      // so we don't need to special case projected views here.\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\n\nfunction execProjectedViewsAction(view: ViewData, action: ViewAction) {\n  execEmbeddedViewsAction(view, action);\n  execComponentViewsAction(view, action);\n}\n\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags,\n    checkType: CheckType) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const nodeCount = view.def.nodes.length;\n  for (let i = 0; i < nodeCount; i++) {\n    const nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.nodeIndex);\n      switch (checkType) {\n        case CheckType.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case CheckType.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, PureExpressionData, ViewData, asPureExpressionData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding} from './util';\n\nexport function purePipeDef(checkIndex: number, argCount: number): NodeDef {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(NodeFlags.TypePurePipe, checkIndex, new Array(argCount + 1));\n}\n\nexport function pureArrayDef(checkIndex: number, argCount: number): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureArray, checkIndex, new Array(argCount));\n}\n\nexport function pureObjectDef(checkIndex: number, propToIndex: {[p: string]: number}): NodeDef {\n  const keys = Object.keys(propToIndex);\n  const nbKeys = keys.length;\n  const propertyNames = new Array(nbKeys);\n  for (let i = 0; i < nbKeys; i++) {\n    const key = keys[i];\n    const index = propToIndex[key];\n    propertyNames[index] = key;\n  }\n\n  return _pureExpressionDef(NodeFlags.TypePureObject, checkIndex, propertyNames);\n}\n\nfunction _pureExpressionDef(\n    flags: NodeFlags, checkIndex: number, propertyNames: string[]): NodeDef {\n  const bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let i = 0; i < propertyNames.length; i++) {\n    const prop = propertyNames[i];\n    bindings[i] = {\n      flags: BindingFlags.TypeProperty,\n      name: prop,\n      ns: null,\n      nonMinifiedName: prop,\n      securityContext: null,\n      suffix: null\n    };\n  }\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: -1,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  return {value: undefined};\n}\n\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  const bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    const data = asPureExpressionData(view, def.nodeIndex);\n    let value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = new Array(bindings.length);\n        if (bindLen > 0) value[0] = v0;\n        if (bindLen > 1) value[1] = v1;\n        if (bindLen > 2) value[2] = v2;\n        if (bindLen > 3) value[3] = v3;\n        if (bindLen > 4) value[4] = v4;\n        if (bindLen > 5) value[5] = v5;\n        if (bindLen > 6) value[6] = v6;\n        if (bindLen > 7) value[7] = v7;\n        if (bindLen > 8) value[8] = v8;\n        if (bindLen > 9) value[9] = v9;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        if (bindLen > 0) value[bindings[0].name !] = v0;\n        if (bindLen > 1) value[bindings[1].name !] = v1;\n        if (bindLen > 2) value[bindings[2].name !] = v2;\n        if (bindLen > 3) value[bindings[3].name !] = v3;\n        if (bindLen > 4) value[bindings[4].name !] = v4;\n        if (bindLen > 5) value[bindings[5].name !] = v5;\n        if (bindLen > 6) value[bindings[6].name !] = v6;\n        if (bindLen > 7) value[bindings[7].name !] = v7;\n        if (bindLen > 8) value[bindings[8].name !] = v8;\n        if (bindLen > 9) value[bindings[9].name !] = v9;\n        break;\n      case NodeFlags.TypePurePipe:\n        const pipe = v0;\n        switch (bindLen) {\n          case 1:\n            value = pipe.transform(v0);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n\nexport function checkAndUpdatePureExpressionDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const data = asPureExpressionData(view, def.nodeIndex);\n    let value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = values;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        for (let i = 0; i < values.length; i++) {\n          value[bindings[i].name !] = values[i];\n        }\n        break;\n      case NodeFlags.TypePurePipe:\n        const pipe = values[0];\n        const params = values.slice(1);\n        value = (<any>pipe.transform)(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugElement__PRE_R3__, DebugNode__PRE_R3__, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {InjectableDef, getInjectableDef} from '../di/defs';\nimport {InjectableType} from '../di/injectable';\nimport {ErrorHandler} from '../error_handler';\nimport {isDevMode} from '../is_dev_mode';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '../render/api';\nimport {Sanitizer} from '../sanitization/security';\nimport {Type} from '../type';\nimport {normalizeDebugBindingName, normalizeDebugBindingValue} from '../util/ng_reflect';\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {dirtyParentQueries, getQueryValue} from './query';\nimport {createInjector, createNgModuleRef, getComponentViewDefinitionFactory} from './refs';\nimport {ArgumentType, BindingFlags, CheckType, DebugContext, ElementData, NgModuleDefinition, NodeDef, NodeFlags, NodeLogger, ProviderOverride, RootData, Services, ViewData, ViewDefinition, ViewState, asElementData, asPureExpressionData} from './types';\nimport {NOOP, isComponentView, renderNode, resolveDefinition, splitDepsDsl, tokenKey, viewParentEl} from './util';\nimport {checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView} from './view';\n\n\nlet initialized = false;\n\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.createComponentView = services.createComponentView;\n  Services.createNgModuleRef = services.createNgModuleRef;\n  Services.overrideProvider = services.overrideProvider;\n  Services.overrideComponentView = services.overrideComponentView;\n  Services.clearOverrides = services.clearOverrides;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    createComponentView: createComponentView,\n    createNgModuleRef: createNgModuleRef,\n    overrideProvider: NOOP,\n    overrideComponentView: NOOP,\n    clearOverrides: NOOP,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view: ViewData, checkType: CheckType) => view.def.updateDirectives(\n                          checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                   prodCheckNoChangesNode,\n                          view),\n    updateRenderer: (view: ViewData, checkType: CheckType) => view.def.updateRenderer(\n                        checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                 prodCheckNoChangesNode,\n                        view),\n  };\n}\n\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    createComponentView: debugCreateComponentView,\n    createNgModuleRef: debugCreateNgModuleRef,\n    overrideProvider: debugOverrideProvider,\n    overrideComponentView: debugOverrideComponentView,\n    clearOverrides: debugClearOverrides,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer,\n  };\n}\n\nfunction createProdRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  return createRootView(\n      createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode),\n      def, context);\n}\n\nfunction debugCreateRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  const root = createRootData(\n      elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes,\n      rootSelectorOrNode);\n  const defWithOverride = applyProviderOverridesToView(def);\n  return callWithDebugContext(\n      DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n\nfunction createRootData(\n    elInjector: Injector, ngModule: NgModuleRef<any>, rendererFactory: RendererFactory2,\n    projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const sanitizer = ngModule.injector.get(Sanitizer);\n  const errorHandler = ngModule.injector.get(ErrorHandler);\n  const renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector, projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n  };\n}\n\nfunction debugCreateEmbeddedView(\n    parentView: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  const defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null,\n      [parentView, anchorDef, defWithOverride, context]);\n}\n\nfunction debugCreateComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const overrideComponentView =\n      viewDefOverrides.get(nodeDef.element !.componentProvider !.provider !.token);\n  if (overrideComponentView) {\n    viewDef = overrideComponentView;\n  } else {\n    viewDef = applyProviderOverridesToView(viewDef);\n  }\n  return callWithDebugContext(\n      DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n}\n\nfunction debugCreateNgModuleRef(\n    moduleType: Type<any>, parentInjector: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  const defWithOverride = applyProviderOverridesToNgModule(def);\n  return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n\nconst providerOverrides = new Map<any, ProviderOverride>();\nconst providerOverridesWithScope = new Map<InjectableType<any>, ProviderOverride>();\nconst viewDefOverrides = new Map<any, ViewDefinition>();\n\nfunction debugOverrideProvider(override: ProviderOverride) {\n  providerOverrides.set(override.token, override);\n  let injectableDef: InjectableDef<any>|null;\n  if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n      typeof injectableDef.providedIn === 'function') {\n    providerOverridesWithScope.set(override.token as InjectableType<any>, override);\n  }\n}\n\nfunction debugOverrideComponentView(comp: any, compFactory: ComponentFactory<any>) {\n  const hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n  const compViewDef = resolveDefinition(hostViewDef.nodes[0].element !.componentView !);\n  viewDefOverrides.set(comp, compViewDef);\n}\n\nfunction debugClearOverrides() {\n  providerOverrides.clear();\n  providerOverridesWithScope.clear();\n  viewDefOverrides.clear();\n}\n\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def: ViewDefinition): ViewDefinition {\n  if (providerOverrides.size === 0) {\n    return def;\n  }\n  const elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n  if (elementIndicesWithOverwrittenProviders.length === 0) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory !(() => NOOP);\n  for (let i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n    applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n  }\n  return def;\n\n  function findElementIndicesWithOverwrittenProviders(def: ViewDefinition): number[] {\n    const elIndicesWithOverwrittenProviders: number[] = [];\n    let lastElementDef: NodeDef|null = null;\n    for (let i = 0; i < def.nodes.length; i++) {\n      const nodeDef = def.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        lastElementDef = nodeDef;\n      }\n      if (lastElementDef && nodeDef.flags & NodeFlags.CatProviderNoDirective &&\n          providerOverrides.has(nodeDef.provider !.token)) {\n        elIndicesWithOverwrittenProviders.push(lastElementDef !.nodeIndex);\n        lastElementDef = null;\n      }\n    }\n    return elIndicesWithOverwrittenProviders;\n  }\n\n  function applyProviderOverridesToElement(viewDef: ViewDefinition, elIndex: number) {\n    for (let i = elIndex + 1; i < viewDef.nodes.length; i++) {\n      const nodeDef = viewDef.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        // stop at the next element\n        return;\n      }\n      if (nodeDef.flags & NodeFlags.CatProviderNoDirective) {\n        const provider = nodeDef.provider !;\n        const override = providerOverrides.get(provider.token);\n        if (override) {\n          nodeDef.flags = (nodeDef.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n          provider.deps = splitDepsDsl(override.deps);\n          provider.value = override.value;\n        }\n      }\n    }\n  }\n}\n\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def: NgModuleDefinition): NgModuleDefinition {\n  const {hasOverrides, hasDeprecatedOverrides} = calcHasOverrides(def);\n  if (!hasOverrides) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory !(() => NOOP);\n  applyProviderOverrides(def);\n  return def;\n\n  function calcHasOverrides(def: NgModuleDefinition):\n      {hasOverrides: boolean, hasDeprecatedOverrides: boolean} {\n    let hasOverrides = false;\n    let hasDeprecatedOverrides = false;\n    if (providerOverrides.size === 0) {\n      return {hasOverrides, hasDeprecatedOverrides};\n    }\n    def.providers.forEach(node => {\n      const override = providerOverrides.get(node.token);\n      if ((node.flags & NodeFlags.CatProviderNoDirective) && override) {\n        hasOverrides = true;\n        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n      }\n    });\n    def.modules.forEach(module => {\n      providerOverridesWithScope.forEach((override, token) => {\n        if (getInjectableDef(token) !.providedIn === module) {\n          hasOverrides = true;\n          hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n        }\n      });\n    });\n    return {hasOverrides, hasDeprecatedOverrides};\n  }\n\n  function applyProviderOverrides(def: NgModuleDefinition) {\n    for (let i = 0; i < def.providers.length; i++) {\n      const provider = def.providers[i];\n      if (hasDeprecatedOverrides) {\n        // We had a bug where me made\n        // all providers lazy. Keep this logic behind a flag\n        // for migrating existing users.\n        provider.flags |= NodeFlags.LazyProvider;\n      }\n      const override = providerOverrides.get(provider.token);\n      if (override) {\n        provider.flags = (provider.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n        provider.deps = splitDepsDsl(override.deps);\n        provider.value = override.value;\n      }\n    }\n    if (providerOverridesWithScope.size > 0) {\n      let moduleSet = new Set<any>(def.modules);\n      providerOverridesWithScope.forEach((override, token) => {\n        if (moduleSet.has(getInjectableDef(token) !.providedIn)) {\n          let provider = {\n            token: token,\n            flags:\n                override.flags | (hasDeprecatedOverrides ? NodeFlags.LazyProvider : NodeFlags.None),\n            deps: splitDepsDsl(override.deps),\n            value: override.value,\n            index: def.providers.length,\n          };\n          def.providers.push(provider);\n          def.providersByKey[tokenKey(token)] = provider;\n        }\n      });\n    }\n  }\n}\n\nfunction prodCheckAndUpdateNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const nodeDef = view.def.nodes[checkIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n\nfunction prodCheckNoChangesNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const nodeDef = view.def.nodes[checkIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n\nenum DebugAction {\n  create,\n  detectChanges,\n  checkNoChanges,\n  destroy,\n  handleEvent\n}\n\nlet _currentAction: DebugAction;\nlet _currentView: ViewData;\nlet _currentNodeIndex: number|null;\n\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number | null) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n\nfunction debugUpdateDirectives(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n\n  function debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n\nfunction debugUpdateRenderer(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n\n  function debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n\nfunction debugCheckAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, givenValues: any[]): void {\n  const changed = (<any>checkAndUpdateNode)(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      const bindingValues: {[key: string]: string} = {};\n      for (let i = 0; i < nodeDef.bindings.length; i++) {\n        const binding = nodeDef.bindings[i];\n        const value = values[i];\n        if (binding.flags & BindingFlags.TypeProperty) {\n          bindingValues[normalizeDebugBindingName(binding.nonMinifiedName !)] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const elDef = nodeDef.parent !;\n      const el = asElementData(view, elDef.nodeIndex).renderElement;\n      if (!elDef.element !.name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let attr in bindingValues) {\n          const value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction debugCheckNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, values: any[]): void {\n  (<any>checkNoChangesNode)(view, nodeDef, argStyle, ...values);\n}\n\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n    const nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n\nclass DebugContext_ implements DebugContext {\n  private nodeDef: NodeDef;\n  private elView: ViewData;\n  private elDef: NodeDef;\n\n  constructor(public view: ViewData, public nodeIndex: number|null) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let elDef = this.nodeDef;\n    let elView = view;\n    while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n      elDef = elDef.parent !;\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = viewParentEl(elView) !;\n        elView = elView.parent !;\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n\n  private get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n  }\n\n  get injector(): Injector { return createInjector(this.elView, this.elDef); }\n\n  get component(): any { return this.elOrCompView.component; }\n\n  get context(): any { return this.elOrCompView.context; }\n\n  get providerTokens(): any[] {\n    const tokens: any[] = [];\n    if (this.elDef) {\n      for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          tokens.push(childDef.provider !.token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n\n  get references(): {[key: string]: any} {\n    const references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n\n  get componentRenderElement() {\n    const elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n\n  get renderNode(): any {\n    return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                                                     renderNode(this.elView, this.elDef);\n  }\n\n  logError(console: Console, ...values: any[]) {\n    let logViewDef: ViewDefinition;\n    let logNodeIndex: number;\n    if (this.nodeDef.flags & NodeFlags.TypeText) {\n      logViewDef = this.view.def;\n      logNodeIndex = this.nodeDef.nodeIndex;\n    } else {\n      logViewDef = this.elView.def;\n      logNodeIndex = this.elDef.nodeIndex;\n    }\n    // Note: we only generate a log function for text and element nodes\n    // to make the generated code as small as possible.\n    const renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n    let currRenderNodeIndex = -1;\n    let nodeLogger: NodeLogger = () => {\n      currRenderNodeIndex++;\n      if (currRenderNodeIndex === renderNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    };\n    logViewDef.factory !(nodeLogger);\n    if (currRenderNodeIndex < renderNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      (<any>console.error)(...values);\n    }\n  }\n}\n\nfunction getRenderNodeIndex(viewDef: ViewDefinition, nodeIndex: number): number {\n  let renderNodeIndex = -1;\n  for (let i = 0; i <= nodeIndex; i++) {\n    const nodeDef = viewDef.nodes[i];\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      renderNodeIndex++;\n    }\n  }\n  return renderNodeIndex;\n}\n\nfunction findHostElement(view: ViewData): ElementData|null {\n  while (view && !isComponentView(view)) {\n    view = view.parent !;\n  }\n  if (view.parent) {\n    return asElementData(view.parent, viewParentEl(view) !.nodeIndex);\n  }\n  return null;\n}\n\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const oldAction = _currentAction;\n  const oldView = _currentView;\n  const oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch (e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    throw viewWrappedDebugError(e, getCurrentDebugContext() !);\n  }\n}\n\nexport function getCurrentDebugContext(): DebugContext|null {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\n\nexport class DebugRendererFactory2 implements RendererFactory2 {\n  constructor(private delegate: RendererFactory2) {}\n\n  createRenderer(element: any, renderData: RendererType2|null): Renderer2 {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n\n  begin() {\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n  end() {\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n\n  whenRenderingDone(): Promise<any> {\n    if (this.delegate.whenRenderingDone) {\n      return this.delegate.whenRenderingDone();\n    }\n    return Promise.resolve(null);\n  }\n}\n\nexport class DebugRenderer2 implements Renderer2 {\n  readonly data: {[key: string]: any};\n\n  private createDebugContext(nativeElement: any) { return this.debugContextFactory(nativeElement); }\n\n  /**\n   * Factory function used to create a `DebugContext` when a node is created.\n   *\n   * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n   *\n   * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n   * or a Render context.\n   */\n  debugContextFactory: (nativeElement?: any) => DebugContext | null = getCurrentDebugContext;\n\n  constructor(private delegate: Renderer2) { this.data = this.delegate.data; }\n\n  destroyNode(node: any) {\n    removeDebugNodeFromIndex(getDebugNode(node) !);\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n\n  destroy() { this.delegate.destroy(); }\n\n  createElement(name: string, namespace?: string): any {\n    const el = this.delegate.createElement(name, namespace);\n    const debugCtx = this.createDebugContext(el);\n    if (debugCtx) {\n      const debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n      (debugEl as{name: string}).name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n\n  createComment(value: string): any {\n    const comment = this.delegate.createComment(value);\n    const debugCtx = this.createDebugContext(comment);\n    if (debugCtx) {\n      indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n    }\n    return comment;\n  }\n\n  createText(value: string): any {\n    const text = this.delegate.createText(value);\n    const debugCtx = this.createDebugContext(text);\n    if (debugCtx) {\n      indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n    }\n    return text;\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(newChild);\n    const debugRefEl = getDebugNode(refChild) !;\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n\n  selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any {\n    const el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n    const debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n    }\n    return el;\n  }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      const fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      const fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n\n  addClass(el: any, name: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n\n  removeClass(el: any, name: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n\n  listen(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n\n  parentNode(node: any): any { return this.delegate.parentNode(node); }\n  nextSibling(node: any): any { return this.delegate.nextSibling(node); }\n  setValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleFactory, NgModuleRef} from '../linker/ng_module_factory';\nimport {Type} from '../type';\n\nimport {initServicesIfNeeded} from './services';\nimport {NgModuleDefinition, NgModuleDefinitionFactory, NgModuleProviderDef, ProviderOverride, Services, ViewDefinition} from './types';\nimport {resolveDefinition} from './util';\n\nexport function overrideProvider(override: ProviderOverride) {\n  initServicesIfNeeded();\n  return Services.overrideProvider(override);\n}\n\nexport function overrideComponentView(comp: Type<any>, componentFactory: ComponentFactory<any>) {\n  initServicesIfNeeded();\n  return Services.overrideComponentView(comp, componentFactory);\n}\n\nexport function clearOverrides() {\n  initServicesIfNeeded();\n  return Services.clearOverrides();\n}\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createNgModuleFactory(\n    ngModuleType: Type<any>, bootstrapComponents: Type<any>[],\n    defFactory: NgModuleDefinitionFactory): NgModuleFactory<any> {\n  return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\n\nfunction cloneNgModuleDefinition(def: NgModuleDefinition): NgModuleDefinition {\n  const providers = Array.from(def.providers);\n  const modules = Array.from(def.modules);\n  const providersByKey: {[tokenKey: string]: NgModuleProviderDef} = {};\n  for (const key in def.providersByKey) {\n    providersByKey[key] = def.providersByKey[key];\n  }\n\n  return {\n    factory: def.factory,\n    isRoot: def.isRoot, providers, modules, providersByKey,\n  };\n}\n\nclass NgModuleFactory_ extends NgModuleFactory<any> {\n  constructor(\n      public readonly moduleType: Type<any>, private _bootstrapComponents: Type<any>[],\n      private _ngModuleDefFactory: NgModuleDefinitionFactory) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n  }\n\n  create(parentInjector: Injector|null): NgModuleRef<any> {\n    initServicesIfNeeded();\n    // Clone the NgModuleDefinition so that any tree shakeable provider definition\n    // added to this instance of the NgModuleRef doesn't affect the cached copy.\n    // See https://github.com/angular/angular/issues/25018.\n    const def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n    return Services.createNgModuleRef(\n        this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n *\n * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n * agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms that angular supports. For example, `@angular/platform-browser` provides an\n * implementation specific to the browser environment, while `@angular/platform-webworker` provides\n * one suitable for use with web workers.\n *\n * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n * when they need to interact with the DOM apis like pushState, popState, etc...\n *\n * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n * by the {@link Router} in order to navigate between routes. Since all interactions between {@link\n * Router} /\n * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n * class they are all platform independent.\n *\n * @publicApi\n */\nexport abstract class PlatformLocation {\n  abstract getBaseHrefFromDOM(): string;\n  abstract onPopState(fn: LocationChangeListener): void;\n  abstract onHashChange(fn: LocationChangeListener): void;\n\n  abstract get pathname(): string;\n  abstract get search(): string;\n  abstract get hash(): string;\n\n  abstract replaceState(state: any, title: string, url: string): void;\n\n  abstract pushState(state: any, title: string, url: string): void;\n\n  abstract forward(): void;\n\n  abstract back(): void;\n}\n\n/**\n * @description\n * Indicates when a location is initialized.\n *\n * @publicApi\n */\nexport const LOCATION_INITIALIZED = new InjectionToken<Promise<any>>('Location Initialized');\n\n/**\n * @description\n * A serializable version of the event from `onPopState` or `onHashChange`\n *\n * @publicApi\n */\nexport interface LocationChangeEvent {\n  type: string;\n  state: any;\n}\n\n/**\n * @publicApi\n */\nexport interface LocationChangeListener { (event: LocationChangeEvent): any; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @publicApi\n */\nexport const DOCUMENT = new InjectionToken<Document>('DocumentToken');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '@angular/core';\n\nlet _DOM: DomAdapter = null !;\n\nexport function getDOM() {\n  return _DOM;\n}\n\nexport function setDOM(adapter: DomAdapter) {\n  _DOM = adapter;\n}\n\nexport function setRootDomAdapter(adapter: DomAdapter) {\n  if (!_DOM) {\n    _DOM = adapter;\n  }\n}\n\n/* tslint:disable:requireParameterType */\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport abstract class DomAdapter {\n  public resourceLoaderType: Type<any> = null !;\n  abstract hasProperty(element: any, name: string): boolean;\n  abstract setProperty(el: Element, name: string, value: any): any;\n  abstract getProperty(el: Element, name: string): any;\n  abstract invoke(el: Element, methodName: string, args: any[]): any;\n\n  abstract logError(error: any): any;\n  abstract log(error: any): any;\n  abstract logGroup(error: any): any;\n  abstract logGroupEnd(): any;\n\n  /**\n   * Maps attribute names to their corresponding property names for cases\n   * where attribute name doesn't match property name.\n   */\n  get attrToPropMap(): {[key: string]: string} { return this._attrToPropMap; }\n  set attrToPropMap(value: {[key: string]: string}) { this._attrToPropMap = value; }\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _attrToPropMap !: {[key: string]: string};\n\n  abstract contains(nodeA: any, nodeB: any): boolean;\n  abstract parse(templateHtml: string): any;\n  abstract querySelector(el: any, selector: string): any;\n  abstract querySelectorAll(el: any, selector: string): any[];\n  abstract on(el: any, evt: any, listener: any): any;\n  abstract onAndCancel(el: any, evt: any, listener: any): Function;\n  abstract dispatchEvent(el: any, evt: any): any;\n  abstract createMouseEvent(eventType: any): any;\n  abstract createEvent(eventType: string): any;\n  abstract preventDefault(evt: any): any;\n  abstract isPrevented(evt: any): boolean;\n  abstract getInnerHTML(el: any): string;\n  /** Returns content if el is a <template> element, null otherwise. */\n  abstract getTemplateContent(el: any): any;\n  abstract getOuterHTML(el: any): string;\n  abstract nodeName(node: any): string;\n  abstract nodeValue(node: any): string|null;\n  abstract type(node: any): string;\n  abstract content(node: any): any;\n  abstract firstChild(el: any): Node|null;\n  abstract nextSibling(el: any): Node|null;\n  abstract parentElement(el: any): Node|null;\n  abstract childNodes(el: any): Node[];\n  abstract childNodesAsList(el: any): Node[];\n  abstract clearNodes(el: any): any;\n  abstract appendChild(el: any, node: any): any;\n  abstract removeChild(el: any, node: any): any;\n  abstract replaceChild(el: any, newNode: any, oldNode: any): any;\n  abstract remove(el: any): Node;\n  abstract insertBefore(parent: any, ref: any, node: any): any;\n  abstract insertAllBefore(parent: any, ref: any, nodes: any): any;\n  abstract insertAfter(parent: any, el: any, node: any): any;\n  abstract setInnerHTML(el: any, value: any): any;\n  abstract getText(el: any): string|null;\n  abstract setText(el: any, value: string): any;\n  abstract getValue(el: any): string;\n  abstract setValue(el: any, value: string): any;\n  abstract getChecked(el: any): boolean;\n  abstract setChecked(el: any, value: boolean): any;\n  abstract createComment(text: string): any;\n  abstract createTemplate(html: any): HTMLElement;\n  abstract createElement(tagName: any, doc?: any): HTMLElement;\n  abstract createElementNS(ns: string, tagName: string, doc?: any): Element;\n  abstract createTextNode(text: string, doc?: any): Text;\n  abstract createScriptTag(attrName: string, attrValue: string, doc?: any): HTMLElement;\n  abstract createStyleElement(css: string, doc?: any): HTMLStyleElement;\n  abstract createShadowRoot(el: any): any;\n  abstract getShadowRoot(el: any): any;\n  abstract getHost(el: any): any;\n  abstract getDistributedNodes(el: any): Node[];\n  abstract clone /*<T extends Node>*/ (node: Node /*T*/): Node /*T*/;\n  abstract getElementsByClassName(element: any, name: string): HTMLElement[];\n  abstract getElementsByTagName(element: any, name: string): HTMLElement[];\n  abstract classList(element: any): any[];\n  abstract addClass(element: any, className: string): any;\n  abstract removeClass(element: any, className: string): any;\n  abstract hasClass(element: any, className: string): boolean;\n  abstract setStyle(element: any, styleName: string, styleValue: string): any;\n  abstract removeStyle(element: any, styleName: string): any;\n  abstract getStyle(element: any, styleName: string): string;\n  abstract hasStyle(element: any, styleName: string, styleValue?: string): boolean;\n  abstract tagName(element: any): string;\n  abstract attributeMap(element: any): Map<string, string>;\n  abstract hasAttribute(element: any, attribute: string): boolean;\n  abstract hasAttributeNS(element: any, ns: string, attribute: string): boolean;\n  abstract getAttribute(element: any, attribute: string): string|null;\n  abstract getAttributeNS(element: any, ns: string, attribute: string): string|null;\n  abstract setAttribute(element: any, name: string, value: string): any;\n  abstract setAttributeNS(element: any, ns: string, name: string, value: string): any;\n  abstract removeAttribute(element: any, attribute: string): any;\n  abstract removeAttributeNS(element: any, ns: string, attribute: string): any;\n  abstract templateAwareRoot(el: any): any;\n  abstract createHtmlDocument(): HTMLDocument;\n  abstract getDefaultDocument(): Document;\n  abstract getBoundingClientRect(el: any): any;\n  abstract getTitle(doc: Document): string;\n  abstract setTitle(doc: Document, newTitle: string): any;\n  abstract elementMatches(n: any, selector: string): boolean;\n  abstract isTemplateElement(el: any): boolean;\n  abstract isTextNode(node: any): boolean;\n  abstract isCommentNode(node: any): boolean;\n  abstract isElementNode(node: any): boolean;\n  abstract hasShadowRoot(node: any): boolean;\n  abstract isShadowRoot(node: any): boolean;\n  abstract importIntoDoc /*<T extends Node>*/ (node: Node /*T*/): Node /*T*/;\n  abstract adoptNode /*<T extends Node>*/ (node: Node /*T*/): Node /*T*/;\n  abstract getHref(element: any): string;\n  abstract getEventKey(event: any): string;\n  abstract resolveAndSetHref(element: any, baseUrl: string, href: string): any;\n  abstract supportsDOMEvents(): boolean;\n  abstract supportsNativeShadowDOM(): boolean;\n  abstract getGlobalEventTarget(doc: Document, target: string): any;\n  abstract getHistory(): History;\n  abstract getLocation(): Location;\n  abstract getBaseHref(doc: Document): string|null;\n  abstract resetBaseElement(): void;\n  abstract getUserAgent(): string;\n  abstract setData(element: any, name: string, value: string): any;\n  abstract getComputedStyle(element: any): any;\n  abstract getData(element: any, name: string): string|null;\n  abstract supportsWebAnimation(): boolean;\n  abstract performanceNow(): number;\n  abstract getAnimationPrefix(): string;\n  abstract getTransitionEnd(): string;\n  abstract supportsAnimation(): boolean;\n\n  abstract supportsCookies(): boolean;\n  abstract getCookie(name: string): string|null;\n  abstract setCookie(name: string, value: string): any;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ÉµparseCookieValue as parseCookieValue} from '@angular/common';\nimport {Éµglobal as global} from '@angular/core';\n\nimport {setRootDomAdapter} from '../dom/dom_adapter';\n\nimport {GenericBrowserDomAdapter} from './generic_browser_adapter';\n\nconst _attrToPropMap = {\n  'class': 'className',\n  'innerHtml': 'innerHTML',\n  'readonly': 'readOnly',\n  'tabindex': 'tabIndex',\n};\n\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap: {[k: string]: string} = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\nlet nodeContains: (a: any, b: any) => boolean;\n\nif (global['Node']) {\n  nodeContains = global['Node'].prototype.contains || function(node) {\n    return !!(this.compareDocumentPosition(node) & 16);\n  };\n}\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nexport class BrowserDomAdapter extends GenericBrowserDomAdapter {\n  parse(templateHtml: string) { throw new Error('parse not implemented'); }\n  static makeCurrent() { setRootDomAdapter(new BrowserDomAdapter()); }\n  hasProperty(element: Node, name: string): boolean { return name in element; }\n  setProperty(el: Node, name: string, value: any) { (<any>el)[name] = value; }\n  getProperty(el: Node, name: string): any { return (<any>el)[name]; }\n  invoke(el: Node, methodName: string, args: any[]): any { (<any>el)[methodName](...args); }\n\n  // TODO(tbosch): move this into a separate environment class once we have it\n  logError(error: string): void {\n    if (window.console) {\n      if (console.error) {\n        console.error(error);\n      } else {\n        console.log(error);\n      }\n    }\n  }\n\n  log(error: string): void {\n    if (window.console) {\n      window.console.log && window.console.log(error);\n    }\n  }\n\n  logGroup(error: string): void {\n    if (window.console) {\n      window.console.group && window.console.group(error);\n    }\n  }\n\n  logGroupEnd(): void {\n    if (window.console) {\n      window.console.groupEnd && window.console.groupEnd();\n    }\n  }\n\n  get attrToPropMap(): any { return _attrToPropMap; }\n\n  contains(nodeA: any, nodeB: any): boolean { return nodeContains.call(nodeA, nodeB); }\n  querySelector(el: HTMLElement, selector: string): any { return el.querySelector(selector); }\n  querySelectorAll(el: any, selector: string): any[] { return el.querySelectorAll(selector); }\n  on(el: Node, evt: any, listener: any) { el.addEventListener(evt, listener, false); }\n  onAndCancel(el: Node, evt: any, listener: any): Function {\n    el.addEventListener(evt, listener, false);\n    // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n    return () => { el.removeEventListener(evt, listener, false); };\n  }\n  dispatchEvent(el: Node, evt: any) { el.dispatchEvent(evt); }\n  createMouseEvent(eventType: string): MouseEvent {\n    const evt: MouseEvent = this.getDefaultDocument().createEvent('MouseEvent');\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n  createEvent(eventType: any): Event {\n    const evt: Event = this.getDefaultDocument().createEvent('Event');\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n  preventDefault(evt: Event) {\n    evt.preventDefault();\n    evt.returnValue = false;\n  }\n  isPrevented(evt: Event): boolean {\n    return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\n  }\n  getInnerHTML(el: HTMLElement): string { return el.innerHTML; }\n  getTemplateContent(el: Node): Node|null {\n    return 'content' in el && this.isTemplateElement(el) ? (<any>el).content : null;\n  }\n  getOuterHTML(el: HTMLElement): string { return el.outerHTML; }\n  nodeName(node: Node): string { return node.nodeName; }\n  nodeValue(node: Node): string|null { return node.nodeValue; }\n  type(node: HTMLInputElement): string { return node.type; }\n  content(node: Node): Node {\n    if (this.hasProperty(node, 'content')) {\n      return (<any>node).content;\n    } else {\n      return node;\n    }\n  }\n  firstChild(el: Node): Node|null { return el.firstChild; }\n  nextSibling(el: Node): Node|null { return el.nextSibling; }\n  parentElement(el: Node): Node|null { return el.parentNode; }\n  childNodes(el: any): Node[] { return el.childNodes; }\n  childNodesAsList(el: Node): any[] {\n    const childNodes = el.childNodes;\n    const res = new Array(childNodes.length);\n    for (let i = 0; i < childNodes.length; i++) {\n      res[i] = childNodes[i];\n    }\n    return res;\n  }\n  clearNodes(el: Node) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n  }\n  appendChild(el: Node, node: Node) { el.appendChild(node); }\n  removeChild(el: Node, node: Node) { el.removeChild(node); }\n  replaceChild(el: Node, newChild: Node, oldChild: Node) { el.replaceChild(newChild, oldChild); }\n  remove(node: Node): Node {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n    return node;\n  }\n  insertBefore(parent: Node, ref: Node, node: Node) { parent.insertBefore(node, ref); }\n  insertAllBefore(parent: Node, ref: Node, nodes: Node[]) {\n    nodes.forEach((n: any) => parent.insertBefore(n, ref));\n  }\n  insertAfter(parent: Node, ref: Node, node: any) { parent.insertBefore(node, ref.nextSibling); }\n  setInnerHTML(el: Element, value: string) { el.innerHTML = value; }\n  getText(el: Node): string|null { return el.textContent; }\n  setText(el: Node, value: string) { el.textContent = value; }\n  getValue(el: any): string { return el.value; }\n  setValue(el: any, value: string) { el.value = value; }\n  getChecked(el: any): boolean { return el.checked; }\n  setChecked(el: any, value: boolean) { el.checked = value; }\n  createComment(text: string): Comment { return this.getDefaultDocument().createComment(text); }\n  createTemplate(html: any): HTMLElement {\n    const t = this.getDefaultDocument().createElement('template');\n    t.innerHTML = html;\n    return t;\n  }\n  createElement(tagName: string, doc?: Document): HTMLElement {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createElementNS(ns: string, tagName: string, doc?: Document): Element {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElementNS(ns, tagName);\n  }\n  createTextNode(text: string, doc?: Document): Text {\n    doc = doc || this.getDefaultDocument();\n    return doc.createTextNode(text);\n  }\n  createScriptTag(attrName: string, attrValue: string, doc?: Document): HTMLScriptElement {\n    doc = doc || this.getDefaultDocument();\n    const el = <HTMLScriptElement>doc.createElement('SCRIPT');\n    el.setAttribute(attrName, attrValue);\n    return el;\n  }\n  createStyleElement(css: string, doc?: Document): HTMLStyleElement {\n    doc = doc || this.getDefaultDocument();\n    const style = <HTMLStyleElement>doc.createElement('style');\n    this.appendChild(style, this.createTextNode(css, doc));\n    return style;\n  }\n  createShadowRoot(el: HTMLElement): DocumentFragment { return (<any>el).createShadowRoot(); }\n  getShadowRoot(el: HTMLElement): DocumentFragment { return (<any>el).shadowRoot; }\n  getHost(el: HTMLElement): HTMLElement { return (<any>el).host; }\n  clone(node: Node): Node { return node.cloneNode(true); }\n  getElementsByClassName(element: any, name: string): HTMLElement[] {\n    return element.getElementsByClassName(name);\n  }\n  getElementsByTagName(element: any, name: string): HTMLElement[] {\n    return element.getElementsByTagName(name);\n  }\n  classList(element: any): any[] { return Array.prototype.slice.call(element.classList, 0); }\n  addClass(element: any, className: string) { element.classList.add(className); }\n  removeClass(element: any, className: string) { element.classList.remove(className); }\n  hasClass(element: any, className: string): boolean {\n    return element.classList.contains(className);\n  }\n  setStyle(element: any, styleName: string, styleValue: string) {\n    element.style[styleName] = styleValue;\n  }\n  removeStyle(element: any, stylename: string) {\n    // IE requires '' instead of null\n    // see https://github.com/angular/angular/issues/7916\n    element.style[stylename] = '';\n  }\n  getStyle(element: any, stylename: string): string { return element.style[stylename]; }\n  hasStyle(element: any, styleName: string, styleValue?: string|null): boolean {\n    const value = this.getStyle(element, styleName) || '';\n    return styleValue ? value == styleValue : value.length > 0;\n  }\n  tagName(element: any): string { return element.tagName; }\n  attributeMap(element: any): Map<string, string> {\n    const res = new Map<string, string>();\n    const elAttrs = element.attributes;\n    for (let i = 0; i < elAttrs.length; i++) {\n      const attrib = elAttrs.item(i);\n      res.set(attrib.name, attrib.value);\n    }\n    return res;\n  }\n  hasAttribute(element: Element, attribute: string): boolean {\n    return element.hasAttribute(attribute);\n  }\n  hasAttributeNS(element: Element, ns: string, attribute: string): boolean {\n    return element.hasAttributeNS(ns, attribute);\n  }\n  getAttribute(element: Element, attribute: string): string|null {\n    return element.getAttribute(attribute);\n  }\n  getAttributeNS(element: Element, ns: string, name: string): string|null {\n    return element.getAttributeNS(ns, name);\n  }\n  setAttribute(element: Element, name: string, value: string) { element.setAttribute(name, value); }\n  setAttributeNS(element: Element, ns: string, name: string, value: string) {\n    element.setAttributeNS(ns, name, value);\n  }\n  removeAttribute(element: Element, attribute: string) { element.removeAttribute(attribute); }\n  removeAttributeNS(element: Element, ns: string, name: string) {\n    element.removeAttributeNS(ns, name);\n  }\n  templateAwareRoot(el: Node): any { return this.isTemplateElement(el) ? this.content(el) : el; }\n  createHtmlDocument(): HTMLDocument {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument(): Document { return document; }\n  getBoundingClientRect(el: Element): any {\n    try {\n      return el.getBoundingClientRect();\n    } catch {\n      return {top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0};\n    }\n  }\n  getTitle(doc: Document): string { return doc.title; }\n  setTitle(doc: Document, newTitle: string) { doc.title = newTitle || ''; }\n  elementMatches(n: any, selector: string): boolean {\n    if (this.isElementNode(n)) {\n      return n.matches && n.matches(selector) ||\n          n.msMatchesSelector && n.msMatchesSelector(selector) ||\n          n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n\n    return false;\n  }\n  isTemplateElement(el: Node): boolean {\n    return this.isElementNode(el) && el.nodeName === 'TEMPLATE';\n  }\n  isTextNode(node: Node): boolean { return node.nodeType === Node.TEXT_NODE; }\n  isCommentNode(node: Node): boolean { return node.nodeType === Node.COMMENT_NODE; }\n  isElementNode(node: Node): boolean { return node.nodeType === Node.ELEMENT_NODE; }\n  hasShadowRoot(node: any): boolean {\n    return node.shadowRoot != null && node instanceof HTMLElement;\n  }\n  isShadowRoot(node: any): boolean { return node instanceof DocumentFragment; }\n  importIntoDoc(node: Node): any { return document.importNode(this.templateAwareRoot(node), true); }\n  adoptNode(node: Node): any { return document.adoptNode(node); }\n  getHref(el: Element): string { return el.getAttribute('href') !; }\n\n  getEventKey(event: any): string {\n    let key = event.key;\n    if (key == null) {\n      key = event.keyIdentifier;\n      // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n      // Safari cf\n      // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n      if (key == null) {\n        return 'Unidentified';\n      }\n      if (key.startsWith('U+')) {\n        key = String.fromCharCode(parseInt(key.substring(2), 16));\n        if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n          // There is a bug in Chrome for numeric keypad keys:\n          // https://code.google.com/p/chromium/issues/detail?id=155654\n          // 1, 2, 3 ... are reported as A, B, C ...\n          key = (_chromeNumKeyPadMap as any)[key];\n        }\n      }\n    }\n\n    return _keyMap[key] || key;\n  }\n  getGlobalEventTarget(doc: Document, target: string): EventTarget|null {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getHistory(): History { return window.history; }\n  getLocation(): Location { return window.location; }\n  getBaseHref(doc: Document): string|null {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement(): void { baseElement = null; }\n  getUserAgent(): string { return window.navigator.userAgent; }\n  setData(element: Element, name: string, value: string) {\n    this.setAttribute(element, 'data-' + name, value);\n  }\n  getData(element: Element, name: string): string|null {\n    return this.getAttribute(element, 'data-' + name);\n  }\n  getComputedStyle(element: any): any { return getComputedStyle(element); }\n  // TODO(tbosch): move this into a separate environment class once we have it\n  supportsWebAnimation(): boolean {\n    return typeof(<any>Element).prototype['animate'] === 'function';\n  }\n  performanceNow(): number {\n    // performance.now() is not available in all browsers, see\n    // http://caniuse.com/#search=performance.now\n    return window.performance && window.performance.now ? window.performance.now() :\n                                                          new Date().getTime();\n  }\n\n  supportsCookies(): boolean { return true; }\n\n  getCookie(name: string): string|null { return parseCookieValue(document.cookie, name); }\n\n  setCookie(name: string, value: string) {\n    // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n    // not clear other cookies.\n    document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n  }\n}\n\nlet baseElement: HTMLElement|null = null;\nfunction getBaseElementHref(): string|null {\n  if (!baseElement) {\n    baseElement = document.querySelector('base') !;\n    if (!baseElement) {\n      return null;\n    }\n  }\n  return baseElement.getAttribute('href');\n}\n\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode: any;\nfunction relativePath(url: any): string {\n  if (!urlParsingNode) {\n    urlParsingNode = document.createElement('a');\n  }\n  urlParsingNode.setAttribute('href', url);\n  return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n                                                       '/' + urlParsingNode.pathname;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function parseCookieValue(cookieStr: string, name: string): string|null {\n  name = encodeURIComponent(name);\n  for (const cookie of cookieStr.split(';')) {\n    const eqIndex = cookie.indexOf('=');\n    const [cookieName, cookieValue]: string[] =\n        eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)];\n    if (cookieName.trim() === name) {\n      return decodeURIComponent(cookieValue);\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DomAdapter} from '../dom/dom_adapter';\n\n\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport abstract class GenericBrowserDomAdapter extends DomAdapter {\n  private _animationPrefix: string|null = null;\n  private _transitionEnd: string|null = null;\n  constructor() {\n    super();\n    try {\n      const element = this.createElement('div', document);\n      if (this.getStyle(element, 'animationName') != null) {\n        this._animationPrefix = '';\n      } else {\n        const domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n\n        for (let i = 0; i < domPrefixes.length; i++) {\n          if (this.getStyle(element, domPrefixes[i] + 'AnimationName') != null) {\n            this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n            break;\n          }\n        }\n      }\n\n      const transEndEventNames: {[key: string]: string} = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend'\n      };\n\n      Object.keys(transEndEventNames).forEach((key: string) => {\n        if (this.getStyle(element, key) != null) {\n          this._transitionEnd = transEndEventNames[key];\n        }\n      });\n    } catch {\n      this._animationPrefix = null;\n      this._transitionEnd = null;\n    }\n  }\n\n  getDistributedNodes(el: HTMLElement): Node[] { return (<any>el).getDistributedNodes(); }\n  resolveAndSetHref(el: HTMLAnchorElement, baseUrl: string, href: string) {\n    el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n  }\n  supportsDOMEvents(): boolean { return true; }\n  supportsNativeShadowDOM(): boolean {\n    return typeof(<any>document.body).createShadowRoot === 'function';\n  }\n  getAnimationPrefix(): string { return this._animationPrefix ? this._animationPrefix : ''; }\n  getTransitionEnd(): string { return this._transitionEnd ? this._transitionEnd : ''; }\n  supportsAnimation(): boolean {\n    return this._animationPrefix != null && this._transitionEnd != null;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT as commonDOCUMENT} from '@angular/common';\nimport {InjectionToken} from '@angular/core';\n\n\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @deprecated import from `@angular/common` instead.\n * @publicApi\n */\nexport const DOCUMENT = commonDOCUMENT;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function supportsState(): boolean {\n  return !!window.history.pushState;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nimport {getDOM} from '../../dom/dom_adapter';\nimport {DOCUMENT} from '../../dom/dom_tokens';\n\nimport {supportsState} from './history';\n\n\n\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n */\n@Injectable()\nexport class BrowserPlatformLocation extends PlatformLocation {\n  // TODO(issue/24571): remove '!'.\n  public readonly location !: Location;\n  // TODO(issue/24571): remove '!'.\n  private _history !: History;\n\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._init();\n  }\n\n  // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n  /** @internal */\n  _init() {\n    (this as{location: Location}).location = getDOM().getLocation();\n    this._history = getDOM().getHistory();\n  }\n\n  getBaseHrefFromDOM(): string { return getDOM().getBaseHref(this._doc) !; }\n\n  onPopState(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n  }\n\n  onHashChange(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n  }\n\n  get pathname(): string { return this.location.pathname; }\n  get search(): string { return this.location.search; }\n  get hash(): string { return this.location.hash; }\n  set pathname(newPath: string) { this.location.pathname = newPath; }\n\n  pushState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.pushState(state, title, url);\n    } else {\n      this.location.hash = url;\n    }\n  }\n\n  replaceState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.replaceState(state, title, url);\n    } else {\n      this.location.hash = url;\n    }\n  }\n\n  forward(): void { this._history.forward(); }\n\n  back(): void { this._history.back(); }\n}\n","import { Component, NgModule } from '@angular/core';\n\n@Component({ selector: 'hello-world', template: 'Hello World!' })\nexport class AppComponent { }\n\n@NgModule({ declarations: [AppComponent], bootstrap: [AppComponent] })\nexport class AppModule { }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {GetTestability, Testability, TestabilityRegistry, setTestabilityGetter, Éµglobal as global} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\n\nexport class BrowserGetTestability implements GetTestability {\n  static init() { setTestabilityGetter(new BrowserGetTestability()); }\n\n  addToWindow(registry: TestabilityRegistry): void {\n    global['getAngularTestability'] = (elem: any, findInAncestors: boolean = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return testability;\n    };\n\n    global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const whenAllStable = (callback: any /** TODO #9100 */) => {\n      const testabilities = global['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      let didWork = false;\n      const decrement = function(didWork_: any /** TODO #9100 */) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach(function(testability: any /** TODO #9100 */) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!global['frameworkStabilizers']) {\n      global['frameworkStabilizers'] = [];\n    }\n    global['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (getDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n    }\n    return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, PlatformLocation, ÉµPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {APP_ID, ApplicationModule, ErrorHandler, Inject, ModuleWithProviders, NgModule, NgZone, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, RendererFactory2, Sanitizer, SkipSelf, StaticProvider, Testability, createPlatformFactory, platformCore, ÉµAPP_ROOT as APP_ROOT, ÉµConsole as Console} from '@angular/core';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nimport {SERVER_TRANSITION_PROVIDERS, TRANSITION_ID} from './browser/server-transition';\nimport {BrowserGetTestability} from './browser/testability';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {DomRendererFactory2} from './dom/dom_renderer';\nimport {DOCUMENT} from './dom/dom_tokens';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerGesturesPlugin} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {DomSanitizer, DomSanitizerImpl} from './security/dom_sanitization_service';\n\nexport const INTERNAL_BROWSER_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: PlatformLocation, useClass: BrowserPlatformLocation, deps: [DOCUMENT]},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * @publicApi\n */\nexport const BROWSER_SANITIZATION_PROVIDERS: StaticProvider[] = [\n  {provide: Sanitizer, useExisting: DomSanitizer},\n  {provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT]},\n];\n\n/**\n * @publicApi\n */\nexport const platformBrowser: (extraProviders?: StaticProvider[]) => PlatformRef =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n\nexport function _document(): any {\n  return document;\n}\n\nexport const BROWSER_MODULE_PROVIDERS: StaticProvider[] = [\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: APP_ROOT, useValue: true},\n  {provide: ErrorHandler, useFactory: errorHandler, deps: []},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    multi: true,\n    deps: [DOCUMENT, NgZone, PLATFORM_ID]\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT]},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    multi: true,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Console, [new Optional(), HAMMER_LOADER]]\n  },\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n  {\n    provide: DomRendererFactory2,\n    useClass: DomRendererFactory2,\n    deps: [EventManager, DomSharedStylesHost]\n  },\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT]},\n  {provide: Testability, useClass: Testability, deps: [NgZone]},\n  {provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone]},\n  ELEMENT_PROBE_PROVIDERS,\n];\n\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by defaults in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n@NgModule({providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule]})\nexport class BrowserModule {\n  constructor(@Optional() @SkipSelf() @Inject(BrowserModule) parentModule: BrowserModule|null) {\n    if (parentModule) {\n      throw new Error(\n          `BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n  static withServerTransition(params: {appId: string}): ModuleWithProviders<BrowserModule> {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n        {provide: TRANSITION_ID, useExisting: APP_ID},\n        SERVER_TRANSITION_PROVIDERS,\n      ],\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPlatformServer} from '@angular/common';\nimport {Inject, Injectable, NgZone, Optional, PLATFORM_ID} from '@angular/core';\n\n\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'\n * since Angular can do much more\n * efficient bookkeeping than Zone can, because we have additional information. This speeds up\n * addEventListener by 3x.\n */\nconst __symbol__ =\n    (typeof Zone !== 'undefined') && (Zone as any)['__symbol__'] || function(v: string): string {\n      return '__zone_symbol__' + v;\n    };\nconst ADD_EVENT_LISTENER: 'addEventListener' = __symbol__('addEventListener');\nconst REMOVE_EVENT_LISTENER: 'removeEventListener' = __symbol__('removeEventListener');\n\nconst symbolNames: {[key: string]: string} = {};\n\nconst FALSE = 'FALSE';\nconst ANGULAR = 'ANGULAR';\nconst NATIVE_ADD_LISTENER = 'addEventListener';\nconst NATIVE_REMOVE_LISTENER = 'removeEventListener';\n\n// use the same symbol string which is used in zone.js\nconst stopSymbol = '__zone_symbol__propagationStopped';\nconst stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';\n\nconst blackListedEvents: string[] =\n    (typeof Zone !== 'undefined') && (Zone as any)[__symbol__('BLACK_LISTED_EVENTS')];\nlet blackListedMap: {[eventName: string]: string};\nif (blackListedEvents) {\n  blackListedMap = {};\n  blackListedEvents.forEach(eventName => { blackListedMap[eventName] = eventName; });\n}\n\nconst isBlackListedEvent = function(eventName: string) {\n  if (!blackListedMap) {\n    return false;\n  }\n  return blackListedMap.hasOwnProperty(eventName);\n};\n\ninterface TaskData {\n  zone: any;\n  handler: Function;\n}\n\n// a global listener to handle all dom event,\n// so we do not need to create a closure every time\nconst globalListener = function(event: Event) {\n  const symbolName = symbolNames[event.type];\n  if (!symbolName) {\n    return;\n  }\n  const taskDatas: TaskData[] = this[symbolName];\n  if (!taskDatas) {\n    return;\n  }\n  const args: any = [event];\n  if (taskDatas.length === 1) {\n    // if taskDatas only have one element, just invoke it\n    const taskData = taskDatas[0];\n    if (taskData.zone !== Zone.current) {\n      // only use Zone.run when Zone.current not equals to stored zone\n      return taskData.zone.run(taskData.handler, this, args);\n    } else {\n      return taskData.handler.apply(this, args);\n    }\n  } else {\n    // copy tasks as a snapshot to avoid event handlers remove\n    // itself or others\n    const copiedTasks = taskDatas.slice();\n    for (let i = 0; i < copiedTasks.length; i++) {\n      // if other listener call event.stopImmediatePropagation\n      // just break\n      if ((event as any)[stopSymbol] === true) {\n        break;\n      }\n      const taskData = copiedTasks[i];\n      if (taskData.zone !== Zone.current) {\n        // only use Zone.run when Zone.current not equals to stored zone\n        taskData.zone.run(taskData.handler, this, args);\n      } else {\n        taskData.handler.apply(this, args);\n      }\n    }\n  }\n};\n\n@Injectable()\nexport class DomEventsPlugin extends EventManagerPlugin {\n  constructor(\n      @Inject(DOCUMENT) doc: any, private ngZone: NgZone,\n      @Optional() @Inject(PLATFORM_ID) platformId: {}|null) {\n    super(doc);\n\n    if (!platformId || !isPlatformServer(platformId)) {\n      this.patchEvent();\n    }\n  }\n\n  private patchEvent() {\n    if (typeof Event === 'undefined' || !Event || !Event.prototype) {\n      return;\n    }\n    if ((Event.prototype as any)[stopMethodSymbol]) {\n      // already patched by zone.js\n      return;\n    }\n    const delegate = (Event.prototype as any)[stopMethodSymbol] =\n        Event.prototype.stopImmediatePropagation;\n    Event.prototype.stopImmediatePropagation = function() {\n      if (this) {\n        this[stopSymbol] = true;\n      }\n\n      // should call native delegate in case\n      // in some environment part of the application\n      // will not use the patched Event\n      delegate && delegate.apply(this, arguments);\n    };\n  }\n\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName: string): boolean { return true; }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    /**\n     * This code is about to add a listener to the DOM. If Zone.js is present, than\n     * `addEventListener` has been patched. The patched code adds overhead in both\n     * memory and speed (3x slower) than native. For this reason if we detect that\n     * Zone.js is present we use a simple version of zone aware addEventListener instead.\n     * The result is faster registration and the zone will be restored.\n     * But ZoneSpec.onScheduleTask, ZoneSpec.onInvokeTask, ZoneSpec.onCancelTask\n     * will not be invoked\n     * We also do manual zone restoration in element.ts renderEventHandlerClosure method.\n     *\n     * NOTE: it is possible that the element is from different iframe, and so we\n     * have to check before we execute the method.\n     */\n    const self = this;\n    const zoneJsLoaded = element[ADD_EVENT_LISTENER];\n    let callback: EventListener = handler as EventListener;\n    // if zonejs is loaded and current zone is not ngZone\n    // we keep Zone.current on target for later restoration.\n    if (zoneJsLoaded && (!NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {\n      let symbolName = symbolNames[eventName];\n      if (!symbolName) {\n        symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);\n      }\n      let taskDatas: TaskData[] = (element as any)[symbolName];\n      const globalListenerRegistered = taskDatas && taskDatas.length > 0;\n      if (!taskDatas) {\n        taskDatas = (element as any)[symbolName] = [];\n      }\n\n      const zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;\n      if (taskDatas.length === 0) {\n        taskDatas.push({zone: zone, handler: callback});\n      } else {\n        let callbackRegistered = false;\n        for (let i = 0; i < taskDatas.length; i++) {\n          if (taskDatas[i].handler === callback) {\n            callbackRegistered = true;\n            break;\n          }\n        }\n        if (!callbackRegistered) {\n          taskDatas.push({zone: zone, handler: callback});\n        }\n      }\n\n      if (!globalListenerRegistered) {\n        element[ADD_EVENT_LISTENER](eventName, globalListener, false);\n      }\n    } else {\n      element[NATIVE_ADD_LISTENER](eventName, callback, false);\n    }\n    return () => this.removeEventListener(element, eventName, callback);\n  }\n\n  removeEventListener(target: any, eventName: string, callback: Function): void {\n    let underlyingRemove = target[REMOVE_EVENT_LISTENER];\n    // zone.js not loaded, use native removeEventListener\n    if (!underlyingRemove) {\n      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n    let symbolName = symbolNames[eventName];\n    let taskDatas: TaskData[] = symbolName && target[symbolName];\n    if (!taskDatas) {\n      // addEventListener not using patched version\n      // just call native removeEventListener\n      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n    // fix issue 20532, should be able to remove\n    // listener which was added inside of ngZone\n    let found = false;\n    for (let i = 0; i < taskDatas.length; i++) {\n      // remove listener from taskDatas if the callback equals\n      if (taskDatas[i].handler === callback) {\n        found = true;\n        taskDatas.splice(i, 1);\n        break;\n      }\n    }\n    if (found) {\n      if (taskDatas.length === 0) {\n        // all listeners are removed, we can remove the globalListener from target\n        underlyingRemove.apply(target, [eventName, globalListener, false]);\n      }\n    } else {\n      // not found in taskDatas, the callback may be added inside of ngZone\n      // use native remove listener to remove the callback\n      target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const PLATFORM_BROWSER_ID = 'browser';\nexport const PLATFORM_SERVER_ID = 'server';\nexport const PLATFORM_WORKER_APP_ID = 'browserWorkerApp';\nexport const PLATFORM_WORKER_UI_ID = 'browserWorkerUi';\n\n/**\n * Returns whether a platform id represents a browser platform.\n * @publicApi\n */\nexport function isPlatformBrowser(platformId: Object): boolean {\n  return platformId === PLATFORM_BROWSER_ID;\n}\n\n/**\n * Returns whether a platform id represents a server platform.\n * @publicApi\n */\nexport function isPlatformServer(platformId: Object): boolean {\n  return platformId === PLATFORM_SERVER_ID;\n}\n\n/**\n * Returns whether a platform id represents a web worker app platform.\n * @publicApi\n */\nexport function isPlatformWorkerApp(platformId: Object): boolean {\n  return platformId === PLATFORM_WORKER_APP_ID;\n}\n\n/**\n * Returns whether a platform id represents a web worker UI platform.\n * @publicApi\n */\nexport function isPlatformWorkerUi(platformId: Object): boolean {\n  return platformId === PLATFORM_WORKER_UI_ID;\n}\n","Hello World!","import { enableProdMode } from '@angular/core';\nimport { platformBrowser } from '@angular/platform-browser';\nimport { AppModuleNgFactory } from './app.module.ngfactory';\n\nenableProdMode();\n\nplatformBrowser().bootstrapModuleFactory(AppModuleNgFactory).catch(err => console.error(err));\n"]}