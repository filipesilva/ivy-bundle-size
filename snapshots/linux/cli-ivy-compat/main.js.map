{"version":3,"sources":["webpack:///./node_modules/@angular/core/node_modules/tslib/tslib.es6.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isObject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isFunction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/errorObject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/tryCatch.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscription.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/node_modules/tslib/tslib.es6.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/config.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/hostReportError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Observer.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/observable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Observable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/toSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/canReportError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/pipe.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/noop.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/SubjectSubscription.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Subject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/InnerSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/iterator.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArrayLike.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isPromise.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeTo.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/OuterSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/map.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeMap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/identity.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/refCount.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/share.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/core/fesm5/core.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/merge.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeAll.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/from.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/multicast.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/compiler/node_modules/tslib/tslib.es6.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/compiler/fesm5/compiler.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/platform-browser-dynamic/node_modules/tslib/tslib.es6.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/common/node_modules/tslib/tslib.es6.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/common/fesm5/common.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/platform-browser/node_modules/tslib/tslib.es6.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/platform-browser/fesm5/platform-browser.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/platform-browser-dynamic/fesm5/platform-browser-dynamic.js.pre-build-optimizer.js","webpack:///./src/app.module.ts","webpack:///./src/app.module.ts.pre-build-optimizer.js","webpack:///./src/main.cli.ts","webpack:///./src/$_lazy_route_resource lazy namespace object"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__metadata","metadataKey","metadataValue","Reflect","metadata","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","isArray","x","isObject","isFunction","tryCatchTarget","errorObject","tryCatcher","tryCatch","fn","UnsubscriptionErrorImpl","errors","Error","message","map","err","toString","join","name","UnsubscriptionError","Subscription_Subscription","Subscription","unsubscribe","closed","_parent","_parents","_subscriptions","_unsubscribe","empty","hasErrors","index","len","remove","flattenUnsubscriptionErrors","sub","add","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","parent","reduce","errs","tslib_es6_extendStatics","tslib_es6_extends","_enable_super_gross_mode_that_will_cause_bad_things","config_config","Promise","undefined","useDeprecatedSynchronousErrorHandling","hostReportError","setTimeout","complete","rxSubscriber","Math","random","Subscriber_Subscriber","_super","Subscriber","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","_parentSubscription","destination","Subscriber_SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","observable_observable","observable","Observable_Observable","Observable","subscribe","_isScalar","_subscribe","lift","operator","source","sink","nextOrObserver","toSubscriber","_trySubscribe","observer","canReportError","console","warn","forEach","promiseCtor","getPromiseCtor","resolve","reject","pipe","operations","_i","fns","input","prev","toPromise","ObjectUnsubscribedErrorImpl","ObjectUnsubscribedError","SubjectSubscription_SubjectSubscription","SubjectSubscription","subject","observers","subscriberIndex","Subject_SubjectSubscriber","SubjectSubscriber","Subject_Subject","Subject","hasError","thrownError","Subject_AnonymousSubject","copy","slice","asObservable","AnonymousSubject","InnerSubscriber_InnerSubscriber","InnerSubscriber","outerValue","outerIndex","notifyNext","notifyError","notifyComplete","subscribeToArray","array","subscribeToPromise","promise","then","getSymbolIterator","iterator_iterator","subscribeToIterable","iterable","item","return","subscribeToObservable","obj","obs","TypeError","isArrayLike","isPromise","subscribeTo","result","OuterSubscriber_OuterSubscriber","OuterSubscriber","innerValue","innerIndex","innerSub","MapOperator","project","thisArg","map_MapSubscriber","MapSubscriber","count","fromArray","scheduler","schedule","MergeMapOperator","concurrent","Number","POSITIVE_INFINITY","mergeMap_MergeMapSubscriber","MergeMapSubscriber","hasCompleted","buffer","active","_tryNext","_innerSub","ish","innerSubscriber","shift","identity","refCount","RefCountOperator","connectable","_refCount","refCounter","refCount_RefCountSubscriber","connection","connect","RefCountSubscriber","sharedConnection","_connection","connectableProto","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","ConnectableObservable_ConnectableSubscriber","connectableObservableDescriptor","writable","ConnectableSubscriber","shareSubjectFactory","getClosureSafeProperty","objWithPropertyToExtract","key","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","factory","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","options","ngMetadataName","PARAMETERS","makeParamDecorator","props","parentClass","metaCtor","args","values","propName","makeMetadataCtor","ParamDecoratorFactory","_a","annotationInstance","ParamDecorator","annotation","cls","unusedKey","parameters","defineProperty","annotationCls","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectionStrategy","__window","window","__self","self","WorkerGlobalScope","_global","global","core_promise","_symbolIterator","core_getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","Zone","current","looseIdentical","a","isNaN","stringify","token","overriddenName","res","newLineIndex","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","ViewEncapsulation","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","extractDirectiveDef","getComponentDef","getDirectiveDef","extractPipeDef","getPipeDef","invertObject","secondary","newLookup","minifiedKey","publicName","declaredName","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","FactoryPrototype","stringify$1","readElementValue","getNativeByTNode","tNode","hostView","getTNode","view","data","getComponentViewByIndex","nodeIndex","slotValue","isComponent","flags","isComponentDef","def","template","isLContainer","isRootView","target","readPatchedData","readPatchedLView","lView","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","defaultScheduler","requestAnimationFrame","findComponentView","rootTNode","_injectImplementation","previousOrParentTNode","isParent","core_lView","Inject","Optional","Self","SkipSelf","InjectFlags","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","Default","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","j","meta","queueContentHooks","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","onDestroy","destroyHooks","executeHooks","currentView","allHooks","checkHooks","checkNoChangesMode","hooksToCall","callHooks","arr","getLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","firstTemplatePass","getFirstTemplatePass","setFirstTemplatePass","enterView","newView","hostTNode","oldView","leaveView","bindingStartIndex","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","insertBloom","footer","getInjectorIndex","injectorIndex","getParentInjectorLocation","NOT_FOUND","searchTokensOnInjector","previousTView","hostTElementNode","currentTView","injectableIdx","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","locateDirectiveOrProvider","Host","getNodeInjectable","tData","lData","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","savePreviousOrParentTNode","saveLView","bloomHasToken","bloomHash","injectorView","b6","b5","shouldSearchParent","isFirstHostTNode","NodeInjector","_tNode","_lView","charCodeAt","tokenId","bloomHashBitOrFactory","instance","moduleInjector","getOrCreateInjectable","createLContext","native","component","directives","localRefs","attachPatchData","findViaNativeElement","firstChild","traverseNextElement","child","findViaComponent","componentInstance","componentIndices","components","elementComponentIndex","loadLContext","throwOnNotFound","mpValue","directiveInstance","directiveIndexEnd","findViaDirective","includeComponents","directiveStartIndex","getDirectivesAtNodeIndex","existingCtx","rElement","parent_1","parentNode","parentContext","getLContext","loadLContextFromNode","node","Node","isBrowserEvents","listener","useCapture","sortListeners","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","comparator","iterator1","iterator2","item1","item2","areIterablesEqual","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","NO_CHANGE","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","insertBefore","removeChild","destroyNode","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","detachView","removeIndex","detached","viewToDetach","removeView","getLViewChild","childIndex","destroyLView","rootView","cleanUpView","viewOrContainer","getParentState","destroyViewTree","state","executeOnDestroys","pipeDestroyHooks","tCleanup","cleanup","lCleanup","useCaptureOrSubIdx","removeEventListener","cleanupFn","removeListeners","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","viewTNode","ANIMATION_PROP_PREFIX","getStylingContext","viewData","storageIndex","wrapper","element","stylingTemplate","isClassBasedValue","getValue","getProp","_CLEAN_PROMISE","refreshDescendantViews","initHooks","executeInitHooks","container_1","dynamicViewData","renderEmbeddedTemplate","refreshDynamicEmbeddedViews","contentQueries","directiveDefIdx","contentQueriesRefresh","refreshContentQueries","expandoInstructions","bindingRootIndex","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","setHostBindings","componentTView","blueprint","syncViewWithBlueprint","checkView","refreshChildComponents","createLView","parentLView","rendererFactory","sanitizer","createNodeAtIndex","attrs","adjustedIndex","createTNode","createViewNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","getRootView","namespaceHTML","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","begin","end","_currentNamespace","createTView","viewIndex","consts","vars","pipes","viewQuery","initialViewLength","fill","createViewBlueprint","id","directiveRegistry","pipeRegistry","tagName","tViews","tParent","localNames","initialInputs","inputs","outputs","addToViewTree","adjustedHostIndex","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","CLEAN_PROMISE","createRootComponent","componentDef","hostFeatures","providersResolver","directiveCount","elementIndex","generateExpandoInstructionBlock","directiveFactory","nodeInjectorFactory","baseResolveDirective","directive","attributes","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","setProperty","setUpAttributes","postProcessBaseDirective","instantiateRootComponent","feature","hostBindings","createRootContext","playerHandler","clean","LifecycleHooksFeature","onInit","doCheck","rootTView","dirIndex","queueLifecycleHooks","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","providers","NULL","SWITCH_INJECTOR_FACTORY","IDENT","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","providerDeps","annotations","useExisting","computeDeps","useFactory","useClass","resolveProvider","multi","multiProvider","multiProviderMixError","record","tryResolveToken","depRecords","depRecord","childRecord","resolveToken","unshift","tokenPath","formatError","tokens","text","charAt","substr","parts","JSON","replace","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","R3Injector","additionalProviders","injectorDefTypes","Set","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","defType","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imports","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","isValueProvider","classRef_1","ngModuleDetail","providerToFactory","providerToRecord","existing","multiRecord_1","Function","paramLength","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","componentType","core_ComponentFactoryBoundToModule","ComponentFactoryBoundToModule","selector","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","core_ViewRef","ViewRef","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","enumerable","configurable","_lookUpContext","detach","callback","getCleanup","getTViewCleanup","markForCheck","res_1","nothingScheduled","flushPlayers","markViewDirty","reattach","detectChanges","checkNoChanges","getComponentViewByInstance","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","core_RootViewRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","Renderer","RendererFactory2","Renderer2","SWITCH_RENDERER2_FACTORY","getOrCreateRenderer2","SecurityContext","Sanitizer","VERSION","full","major","split","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","selectors","elementOrSelector","defaultRenderer","rendererToUse","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","createElement","createElementNS","selectRootElement","querySelector","rootFlags","onPush","tElementNode","rootLView","oldLView","rNode","ngPrivateData","directiveDefs","pipeDefs","bloomBit","mask","bloomAdd","existingInjectorIndex","parentLoc","parentIndex","parentData","getOrCreateNodeInjectorForNode","numberOfDirectives","initNodeFlags","queueComponentIndexForCheck","createRootComponentView","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_bootstrapComponents","throwNotFound","getNgModuleDef","bootstrap","_r3Injector","createInjector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","core_EventEmitter","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","schedulerFn","errorFn","completeFn","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","declarationView","queries","createView","createEmbeddedViewAndNode","viewRef","hostContainer","createTemplateRef","modules","registerModuleFactory","assertNotExisting","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","core_ReflectionCapabilities","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","ctor","parentProto","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","core_isPromise","trace","core_events","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","signature","createScope","wtfLeave","scope","returnValue","leaveScope","NgZone","zone","_b","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","filter","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","core_TestabilityRegistry","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","from","getAllRootElements","findTestabilityInTree","findInAncestors","desc","c","getOwnPropertyDescriptor","decorate","__decorate","_NoopGetTestability","registry","ALLOW_MULTIPLE_PLATFORMS","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","PlatformRef","inits","init","createPlatform","requiredToken","assertPlatform","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneOption","ngZone","ngZoneInjector","moduleRef","exceptionHandler","errorHandler","initStatus","_moduleDoBootstrap","_callAndReportToErrorHandler","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory","core_ApplicationRef","f","ngDoBootstrap","module","dst","objs","ApplicationRef","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","stableSub","unstableSub","observables","last","mergeMap","resultSelector","map_map","ii","mergeAll","merge","subjectOrSubjectFactory","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","list","el","QueryList$1","QueryList","dirty","_results","changes","find","some","toArray","reset","flatten$2","flat","flatItem","first","notifyOnChanges","setDirty","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","startTNode","parentTNode_1","getParentInjectorTNode","templateRef","adjustedIdx","_adjustIndex","createComponent","ngModuleRef","contextInjector","insert","move","newIndex","commentNode","createComment","hostNative","nextSibling","nativeNextSibling","isForViewContainerRef","createLContainer","createContainerRef","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","componentIndex","hostComponentView","createViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","listeners","core_DebugElement_PRE_R3_","addChild","references","providerTokens","DebugElement__PRE_R3__","classes","styles","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventName","eventObj","DebugNode__POST_R3__","core_DebugElement_POST_R3_","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","getListeners","directiveIndex","discoverLocalRefs","declaredInputs","getInjectionTokens","DebugElement__POST_R3__","nodeType","ELEMENT_NODE","nodeName","eAttrs","attr","lContext","lNode","className","eClasses","classList","styleName","eStyles","style","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","MissingTranslationStrategy","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","msg","_addDebugContext","viewDebugError","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","size","unwrapValue$1","nodeIdx","bindingIdx","globalBindingIdx","bindingIndex","oldValues","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","createRendererType2","encapsulation","_renderCompCount$1","checkBinding","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","startIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","k","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","EMPTY_ARRAY$4","EMPTY_MAP","anchorDef","templateFactory","outputIndex","checkIndex","childFlags","directChildFlags","childMatchedQueries","ns","componentProvider","publicProviders","allProviders","elementDef","namespaceAndName","fixedAttrs","bindingDefs","_c","suffixOrSecurityContext","_d","ns_1","securityContext","suffix","nonMinifiedName","outputDefs","_e","isFilled","None","resolveRendererType2","elDef","selectorOrNode","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","disposables","checkAndUpdateElementValue","binding","elData","renderNode$$1","renderValue","sanitize","removeAttribute","setElementAttribute","addClass","removeClass","setElementClass","STYLE","unit","setStyle","removeStyle","setElementStyle","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","moduleProvideDef","moduleDef","providersByKey","isRoot","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providerInstance","_providers","_createProviderInstance","moduleTransitivelyPresent","injectable","depValues","_createClass","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","createComponentFactory","viewDefFactory","core_ComponentFactory_","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","core_ComponentRef_","ViewRef_","ComponentRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","core_ViewContainerRef_","_data","ref","viewRef_","vcElementData","dvcElementData","projectedViews","_projectedViews","nodeFlags","markNodeAsProjectedTemplate","attachProjectedView","currentIndex","oldViewIndex","newViewIndex","previousIndex","createChangeDetectorRef","renderNodes","fs","createTemplateData","core_TemplateRef_","_parentView","createInjector$1","nodeValue","createRendererV1","core_RendererAdapter","RendererAdapter","createViewRoot","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","provDef","initNgModule","lifecycles","callNgModuleLifecycle","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","directiveDef","pipeDef","depDefs","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","providerData","updateProp","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryDef","bindingType","filterId","queryIds","nodeMatchedQueries","tplDef","checkAndUpdateQuery","queryList","newValues","calcQueryValues","notify","boundValue","getQueryValue","dvc","projectedView","queryValueType","ngContentDef","appendNgContent","purePipeDef","argCount","_pureExpressionDef","pureArrayDef","pureObjectDef","propToIndex","nbKeys","propertyNames","textDef","staticText","prefix","_addInterpolationPart","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","validateNode","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementInline","checkAndUpdateTextInline","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveInline","transform","checkAndUpdatePureExpressionInline","checkAndUpdateNodeInline","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","params","checkAndUpdatePureExpressionDynamic","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","createProdRootView","elInjector","createRootData","debugCreateRootView","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","debugCreateEmbeddedView","viewDef$$1","debugCreateComponentView","viewDefOverrides","debugCreateNgModuleRef","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","calcHasOverrides","moduleSet_1","applyProviderOverrides","applyProviderOverridesToNgModule","debugOverrideProvider","debugOverrideComponentView","comp","compFactory","hostViewDef","debugClearOverrides","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","findElementIndicesWithOverwrittenProviders","applyProviderOverridesToElement","elIndex","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","_currentAction","_currentView","_currentNodeIndex","debugSetCurrentNode","debugHandleEvent","debugUpdateDirectives","nextDirectiveWithBinding","debugCheckAndUpdateNode","debugCheckNoChangesNode","debugUpdateRenderer","nextRenderNodeWithBinding","givenValues","bindingValues","toLowerCase","core_DebugContext_","DebugContext_","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","createNgModuleFactory","defFactory","core_NgModuleFactory_","NgModuleFactory_","_ngModuleDefFactory","services","initServicesIfNeeded","cloneNgModuleDefinition","tslib_tslib_es6_extendStatics","tslib_tslib_es6_extends","tslib_tslib_es6_assign","tslib_tslib_es6_values","tslib_tslib_es6_read","tslib_tslib_es6_spread","TagContentType","splitNsName","elementName","colonIndex","compiler_isNgContainer","isNgContent","getNsPrefix","fullName","mergeNsAndName","localName","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","not","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sube","sum","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","NGSP_UNICODE","_DEFAULT_TAG_DEFINITION","TAG_DEFINITIONS","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","PARSABLE_DATA","closedByParent","isVoid","_f","ignoreFirstLf","canSelfClose","parentToAdd","requireExtraParent","lcParent","isClosedByChild","getHtmlTagDefinition","base","area","embed","link","img","param","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","RAW_TEXT","script","title","ESCAPABLE_RAW_TEXT","textarea","_SELECTOR_REGEXP","RegExp","CssSelector","classNames","notSelectors","parse","results","_addResult","cssSel","cssSelector","inNot","lastIndex","setElement","addClassName","addAttribute","isElementSelector","hasElementSelector","getMatchingElementTemplate","classAttr","getAttrs","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","matcher","selectable","SelectorContext","_addTerminal","_addPartial","name_2","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","createInject","makeMetadataFactory","createInjectionToken","createAttribute","attributeName","createContentChildren","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","createDirective","dir","compiler_ViewEncapsulation","compiler_ChangeDetectionStrategy","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","createNgModule","createInjectable","createOptional","createSelf","createSkipSelf","createHost","compiler_Type","compiler_SecurityContext","compiler_MissingTranslationStrategy","isTypeOf","TypeModifier","Type$1","modifiers","hasModifier","modifier","BuiltinTypeName","compiler_BuiltinType","BuiltinType","visitType","visitor","visitBuiltinType","compiler_ExpressionType","ExpressionType","typeParams","visitExpressionType","compiler_ArrayType","ArrayType","of","visitArrayType","compiler_MapType","MapType","visitMapType","DYNAMIC_TYPE","Dynamic","INFERRED_TYPE","Inferred","BOOL_TYPE","Bool","BinaryOperator","nullSafeIsEquivalent","other","isEquivalent","areAllEquivalent","Expression","sourceSpan","compiler_ReadPropExpr","compiler_ReadKeyExpr","callMethod","compiler_InvokeMethodExpr","callFn","compiler_InvokeFunctionExpr","instantiate","compiler_InstantiateExpr","conditional","trueCase","falseCase","compiler_ConditionalExpr","equals","rhs","compiler_BinaryOperatorExpr","Equals","notEquals","NotEquals","identical","Identical","notIdentical","NotIdentical","Minus","plus","Plus","Divide","multiply","Multiply","modulo","Modulo","And","bitwiseAnd","parens","BitwiseAnd","Or","lower","Lower","lowerEquals","LowerEquals","bigger","Bigger","biggerEquals","BiggerEquals","isBlank","TYPED_NULL_EXPR","cast","compiler_CastExpr","toStmt","compiler_ExpressionStatement","BuiltinVar","compiler_ReadVarExpr","ReadVarExpr","builtin","isConstant","visitExpression","visitReadVarExpr","compiler_WriteVarExpr","compiler_TypeofExpr","TypeofExpr","expr","visitTypeofExpr","WriteVarExpr","visitWriteVarExpr","toDeclStmt","compiler_DeclareVarStmt","toConstDecl","StmtModifier","Final","compiler_WriteKeyExpr","WriteKeyExpr","receiver","visitWriteKeyExpr","compiler_WritePropExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","InvokeMethodExpr","visitInvokeMethodExpr","InvokeFunctionExpr","visitInvokeFunctionExpr","InstantiateExpr","classExpr","visitInstantiateExpr","compiler_LiteralExpr","LiteralExpr","visitLiteralExpr","compiler_ExternalExpr","ExternalExpr","moduleName","visitExternalExpr","ConditionalExpr","condition","visitConditionalExpr","compiler_NotExpr","NotExpr","visitNotExpr","compiler_AssertNotNull","AssertNotNull","visitAssertNotNullExpr","CastExpr","visitCastExpr","FnParam","compiler_FunctionExpr","FunctionExpr","statements","visitFunctionExpr","compiler_DeclareFunctionStmt","BinaryOperatorExpr","lhs","visitBinaryOperatorExpr","ReadPropExpr","visitReadPropExpr","ReadKeyExpr","visitReadKeyExpr","compiler_LiteralArrayExpr","LiteralArrayExpr","entries","every","visitLiteralArrayExpr","LiteralMapEntry","quoted","compiler_LiteralMapExpr","LiteralMapExpr","visitLiteralMapExpr","compiler_CommaExpr","CommaExpr","visitCommaExpr","NULL_EXPR","Statement","DeclareVarStmt","stmt","visitStatement","visitDeclareVarStmt","DeclareFunctionStmt","visitDeclareFunctionStmt","ExpressionStatement","visitExpressionStmt","compiler_ReturnStatement","ReturnStatement","visitReturnStmt","AbstractClassPart","compiler_ClassMethod","ClassMethod","body","compiler_ClassGetter","ClassGetter","compiler_ClassStmt","ClassStmt","fields","getters","constructorMethod","methods","visitDeclareClassStmt","compiler_IfStmt","IfStmt","visitIfStmt","compiler_TryCatchStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","compiler_ThrowStmt","ThrowStmt","visitThrowStmt","AstTransformer","transformExpr","transformStmt","ast","visitWrappedNodeExpr","visitAllExpressions","visitAllStatements","entry","mapType","exprs","ctorMethod","visitCommentStmt","visitJSDocCommentStmt","stmts","findReadVarNames","compiler_ReadVarVisitor","varNames","_ReadVarVisitor","RecursiveAstVisitor","applySourceSpanToStatementIfNeeded","transformer","compiler_ApplySourceSpanTransformer","applySourceSpanToExpressionIfNeeded","_ApplySourceSpanTransformer","_clone","clone","variable","importExpr","importType","typeModifiers","expressionType","literalArr","literalMap","compiler_fn","literal","DASH_CASE_REGEXP","splitAtColon","defaultValues","_splitAt","character","characterIndex","trim","visitValue","visitArray","STRING_MAP_PROTO","visitStringMap","visitPrimitive","visitOther","isDefined","val","noUndefined","ValueTransformer","SyncAsync","compiler_isPromise","syncAsyncValues","compiler_error","syntaxError","parseErrors","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","escapeRegExp","utf8Encode","str","encoded","codePoint","low","fromCharCode","compiler_stringify","compiler_resolveForwardRef","KEY_CONTEXT","compiler_FixupExpression","FixupExpression","resolved","original","fixup","expression","shared","ConstantPool","literals","literalFactories","injectorDefinitions","directiveDefinitions","componentDefinitions","pipeDefinitions","nextNameIndex","getConstLiteral","literal$$1","forceShared","keyOf","newValue","freshName","getDefinition","kind","ctx","definitions","definitionsOf","property","propertyNameOf","getLiteralFactory","argumentsForKey","_getLiteralFactory","expressionForKey","resultMap","literalFactory","literalFactoryArguments","resultExpressions","pureFunctionDeclaration","isVariable","uniqueName","KeyVisitor","invalid","quote","mapKey","CORE","Identifiers","createModuleFactory","moduleProviderDef","RegisterModuleFactoryFn","InjectableDef","unwrapValue","RendererType2","ViewDefinition","setClassMetadata","createTokenForReference","reference","identifier","createTokenForExternalReference","reflector","resolveExternalReference","StaticSymbol","filePath","assertNoMembers","StaticSymbolCache","cache","declarationFile","HOST_REG_EXP","sanitizeIdentifier","_anonymousTypeIndex","identifierName","compileIdentifier","identifierModuleUrl","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","CompileSummaryKind","tokenName","tokenReference","CompileStylesheetMetadata","styleUrls","_normalizeArray","CompileTemplateMetadata","templateUrl","htmlAst","externalStylesheets","animations","interpolation","isInline","preserveWhitespaces","compiler_flatten","toSummary","CompileDirectiveMetadata","exportAs","hostListeners","hostProperties","hostAttributes","viewProviders","viewQueries","entryComponents","componentViewType","isHost","host","inputsMap","bindConfig","outputsMap","summaryKind","Directive","CompilePipeMetadata","Pipe","CompileNgModuleMetadata","declaredDirectives","exportedDirectives","declaredPipes","exportedPipes","importedModules","exportedModules","schemas","transitiveModule","NgModule","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","ProviderMeta","dependencies","jitSourceUrl","url","templateSourceUrl","compMeta","templateMeta","Message","placeholders","placeholderToMessage","meaning","description","sources","start","file","startLine","line","startCol","endLine","endCol","Text","visit","visitText","Container","visitContainer","Icu","cases","visitIcu","TagPlaceholder","tag","startName","closeName","visitTagPlaceholder","Placeholder","visitPlaceholder","IcuPlaceholder","visitIcuPlaceholder","RecurseVisitor","icu","ph","digest","utf8","words32","endian","wordAt","stringToWords32","Endian","Big","w","h0","h1","h2","h3","h4","rol32","fk","temp","add32","hex","byteAt","byteStringToHexString","words32ToByteString","sha1","serializerVisitor","decimalDigest","compiler_SerializerIgnoreIcuExpVisitor","fingerprint","hi","lo","him","lom","ah","al","bh","add32to64","carry","l","add64","rol64","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","byteStringToDecString","computeMsgId","_SerializerVisitor","strCases","_SerializerIgnoreIcuExpVisitor","hash32","mix","Little","sub32","high","word","word32ToByteString","y","max","tmpSum","num","product","bToThePower","Serializer","createNameMapper","compiler_SimplePlaceholderMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toPublicName","internalName","toInternalName","visitPlaceholderName","nextId","_visitor","_Visitor","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","serialize","Declaration","unescapedAttrs","escapeXml","Doctype","Tag","Text$1","unescapedValue","compiler_CR","CR","ws","_ESCAPED_CHARS","compiler_Xmb","Xmb","write","messages","locale","exampleVisitor","ExampleVisitor","_Visitor$1","rootNode","sourceTags","version","encoding","addDefaultExamples","load","content","digest$1","expressionPlaceholder","startTagAsText","startEx","startTagPh","closeTagAsText","closeEx","closeTagPh","interpolationAsText","exTag","icuExpression","icuType","icuCases","icuAsText","exText","toUpperCase","assertArrayOfStrings","INTERPOLATION_BLACKLIST_REGEXPS","assertInterpolationSymbols","start_1","end_1","regexp","test","InterpolationConfig","markers","DEFAULT_INTERPOLATION_CONFIG","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceUrl","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segments","segment","segAsStr","toBase64VLQ","sourceRoot","toJsComment","b64","i1","i2","i3","toBase64Digit","toBase64String","out","digit","B64_DIGITS","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_INDENT_WITH","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","EmitterVisitorContext","_indent","_classes","_preambleLineCount","_lines","createRoot","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","part","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","toSource","sourceLines","_createIndent","toSourceMapGenerator","genFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","span","sourceLine","sourceCol","setPreambleLineCount","spanOf","column","emittedLine","columnsLeft","partIndex","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","multiline","lineWasEmpty","getBuiltinMethodName","varName","Super","This","CatchError","CatchStack","escapeIdentifier","opStr","visitAllObjects","expressions","separator","handler","incrementedIndent","escapeDollar","alwaysQuote","compiler_JitEmitterVisitor","JitEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","createReturnStmt","resultVar","getArgs","_emitReferenceToExternal","Exported","AbstractJsEmitterVisitor","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","fnExpr","currentClass","ConcatArray","SubscribeObservable","Bind","ParserError","errLocation","ctxLocation","ParseSpan","AST","compiler_Quote","Quote","uninterpretedExpression","visitQuote","compiler_EmptyExpr","EmptyExpr","compiler_ImplicitReceiver","ImplicitReceiver","visitImplicitReceiver","compiler_Chain","Chain","visitChain","compiler_Conditional","Conditional","trueExp","falseExp","visitConditional","compiler_PropertyRead","PropertyRead","visitPropertyRead","compiler_PropertyWrite","PropertyWrite","visitPropertyWrite","compiler_SafePropertyRead","SafePropertyRead","visitSafePropertyRead","compiler_KeyedRead","KeyedRead","visitKeyedRead","compiler_KeyedWrite","KeyedWrite","visitKeyedWrite","compiler_BindingPipe","BindingPipe","exp","visitPipe","compiler_LiteralPrimitive","LiteralPrimitive","visitLiteralPrimitive","compiler_LiteralArray","LiteralArray","visitLiteralArray","compiler_LiteralMap","LiteralMap","visitLiteralMap","compiler_Interpolation","Interpolation","strings","visitInterpolation","compiler_Binary","Binary","operation","left","right","visitBinary","compiler_PrefixNot","PrefixNot","visitPrefixNot","compiler_NonNullAssert","NonNullAssert","visitNonNullAssert","compiler_MethodCall","MethodCall","visitMethodCall","compiler_SafeMethodCall","SafeMethodCall","visitSafeMethodCall","compiler_FunctionCall","FunctionCall","visitFunctionCall","compiler_ASTWithSource","ASTWithSource","TemplateBinding","keyIsVar","RecursiveAstVisitor$1","visitAll","asts","AstTransformer$1","ParsedProperty","isLiteral","ParsedPropertyType","LITERAL_ATTR","isAnimation","ANIMATION","ParsedEvent","targetOrPhase","ParsedVariable","BoundElementProperty","EventHandlerVars","ConvertActionBindingResult","allowDefault","render3Stmts","statement","convertPropertyBindingBuiltins","converterFactory","compiler_BuiltinAstConverter","convertBuiltins","ConvertPropertyBindingResult","currValExpr","BindingForm","temporaryName","bindingId","temporaryNumber","temporaryDeclaration","_Mode","ensureExpressionMode","convertToStatementIfNeeded","_BuiltinAstConverter","_converterFactory","compiler_BuiltinFunctionCall","createPipeConverter","createLiteralArrayConverter","createLiteralMapConverter","_AstToIrVisitor","_localResolver","_implicitReceiver","interpolationFunction","_nodeMap","_resultMap","_currentTemporary","temporaryCount","op","_visit","ensureStatementMode","convertedArgs","converter","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","localExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","DefaultLocalResolver","BuiltinFunctionCall","LifecycleHooks","LIFECYCLE_HOOKS_VALUES","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","$EOF","$TAB","$LF","$VTAB","$FF","$CR","$SPACE","$DQ","$$","$SQ","$PLUS","$MINUS","$SLASH","$SEMICOLON","$EQ","$GT","$0","$9","$A","$F","$Z","$_","$a","$f","$n","$r","$t","$v","$z","$LBRACE","$NBSP","isWhitespace","code","isDigit","isAsciiLetter","ParseLocation","offset","moveBy","ch","priorLine","lastIndexOf","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","ParseSourceFile","ParseSourceSpan","details","ParseErrorLevel","ParseError","level","ERROR","contextualMessage","compiler_ShadowCss","ShadowCss","strictStyling","shimCssText","cssText","hostSelector","commentsWithHash","_commentWithHashRe","_commentRe","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","rule","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","pattern","ruleCallback","inputWithEscapedBlocks","nextBlockIndex","_scopeSelector","startsWith","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","CLOSE_CURLY","BLOCK_PLACEHOLDER","OPEN_CURLY","StringWithEscapedBlocks","escapeBlocks","escapedString","_ruleRe","contentPrefix","blocks","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","applyScope","_makeScopeMatcher","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","_","colon","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","shouldScope","part_1","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","outputCtx","stylesVar","isShimmed","StyleCompiler","_urlResolver","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","stylesheet","shim","Emulated","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","styleUrl","exprIndex","getStylesVarName","Const","TokenType","KEYWORDS","Lexer","tokenize","scanner","_Scanner","scanToken","Token","numValue","strValue","isCharacter","Character","isNumber","isString","isOperator","Operator","isIdentifier","Identifier","isKeyword","Keyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","newCharacterToken","newOperatorToken","EOF","peek","advance","isIdentifierStart","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","isIdentifierPart","simple","isExponentSign","parseInt","parseIntAutoRadix","parseFloat","unescapedCode","compiler_unescape","position","newErrorToken","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","warnings","_createInterpolateRegExp","config","Parser","_lexer","parseAction","interpolationConfig","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","tplKey","tplValue","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","expectOperator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","firstBinding","rawKey","isVar","letStart","letName","locationText","skip","Text$2","i18n","Expansion","switchValue","switchValueSourceSpan","visitExpansion","ExpansionCase","valueSourceSpan","expSourceSpan","visitExpansionCase","compiler_Attribute","Attribute","valueSpan","visitAttribute","compiler_Element","Element","startSourceSpan","endSourceSpan","visitElement","Comment","visitComment","astResult","TokenType$1","Token$1","compiler_TokenError","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","_ControlFlowError","_Tokenizer","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","srcTokens","dstTokens","lastDstToken","TEXT","mergeTextTokens","isExpansionFormStart","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","code2","toUpperCaseCharCode","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isNamedEntityEnd","isHex","numberStart","isDigitEntityEnd","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","COMMENT_START","textToken","COMMENT_END","CDATA_START","CDATA_END","DOC_TYPE","_consumePrefixAndName","nameStart","nameOrPrefixStart","isNameEnd","lowercaseTagName","savedPos","_consumeTagOpenStart","isNotWhitespace","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","TAG_CLOSE","TAG_OPEN_START","ATTR_NAME","prefixAndName","ATTR_VALUE","quoteChar","valueStart","TAG_OPEN_END_VOID","TAG_OPEN_END","EXPANSION_FORM_START","_readUntil","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","_isTextEnd","nbTokens","isAsciiHexDigit","isInterpolationStart","compiler_TreeError","TreeError","ParseTreeResult","rootNodes","Parser$1","getTagDefinition","parseExpansionForms","tokensAndErrors","tokenizeExpansionForms","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","lastOnStack","_getParentElement","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","_getParentElementSkippingContainers","_insertBeforeContainer","endTagToken","stackIndex","valueToken","stack","compiler_HtmlParser","HtmlParser","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","replaceNgsp","_SECURITY_SCHEMA","WhitespaceVisitor","attribute","expansion","expansionCase","SECURITY_SCHEMA","registerContext","HTML","URL","RESOURCE_URL","specs","e_1","specs_1","specs_1_1","e_1_1","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","compiler_DomElementSchemaRegistry","DomElementSchemaRegistry","_schema","encodedType","strType","superName","superType","hasProperty","schemaMetas","schema","hasElement","isAttribute","getMappedPropName","NONE","getDefaultComponentElementName","validateProperty","validateAttribute","allKnownElementNames","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","_isPixelDimensionStyle","valAndSuffixMatch","compiler_BindingParser","BindingParser","_exprParser","_schemaRegistry","pipesByName","_usedPipes","pipesByName_1","getUsedPipes","createBoundHostProperties","dirMeta","boundProps_1","parsePropertyBinding","createDirectiveHostPropertyAsts","elementSelector","boundProps","createBoundElementProperty","createDirectiveHostEventAsts","targetEvents_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","WARNING","isAnimationLabel","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","DEFAULT","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","calcPossibleSecurityContexts","nsSeparatorIdx","targetEvents","_parseAnimationEvent","_parseRegularEvent","phase","_parseAction","errors_1","errors_1_1","collector","compiler_PipeCollector","pipeName","pipeMeta","isAttr","report","PipeCollector","ctxs","elementNames","notElementNames","possibleElementNames","StyleWithImports","isStyleUrlResolvable","schemeMatch","URL_WITH_SCHEMA_REGEXP","CSS_IMPORT_REGEXP","CSS_STRIPPABLE_COMMENT_REGEXP","NG_CONTENT_SELECT_ATTR","LINK_ELEMENT","LINK_STYLE_REL_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_VALUE","STYLE_ELEMENT","SCRIPT_ELEMENT","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","normalizeNgContentSelect","PreparsedElementType","OTHER","NG_CONTENT","SCRIPT","STYLESHEET","PreparsedElement","compiler_a","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","getUniquePlaceholder","_expParser","_I18nVisitor","_expressionParser","toI18nMessage","visitNodeFn","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","_visitNodeFn","i18nodes","_visitNode","html","startPhName","closePhName","_visitTextWithInterpolation","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","_CUSTOM_PH_EXP","lastStringIdx","TextAst","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundPropertyMapping","BoundElementPropertyAst","fromBoundProperty","visitElementProperty","BoundEventAst","calcFullName","fromParsedEvent","visitEvent","ReferenceAst","originalValue","visitReference","VariableAst","fromParsedVariable","visitVariable","ElementAst","hasViewContainer","queryMatches","EmbeddedTemplateAst","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","visitDirectiveProperty","DirectiveAst","hostEvents","contentQueryStartId","visitDirective","ProviderAst","eager","providerType","lifecycleHooks","isModule","ProviderAstType","NgContentAst","visitNgContent","templateVisitAll","CompilerConfig","defaultEncapsulation","useJit","jitDevMode","missingTranslation","strictInjectionParameters","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","compiler_DirectiveNormalizer","DirectiveNormalizer","_resourceLoader","_htmlParser","_config","_resourceLoaderCache","normalizedDirective","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","resolver","baseUrl","foundUrls","modifiedCssText","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","compiler_DirectiveResolver","DirectiveResolver","_reflector","isDirective","typeMetadata","isDirectiveMetadata","throwIfNotFound","findLast","propertyMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","_dedupeBindings","names","publicNames","reversedResult","mergedInputs","mergedOutputs","mergedHost","mergedQueries","moduleId","compiler_I18nError","I18nError","_I18N_COMMENT_PREFIX_REGEXP","MEANING_SEPARATOR","ID_SEPARATOR","i18nCommentsWarned","ExtractionResult","_VisitorMode","_Visitor$2","_implicitTags","_implicitAttrs","extract","_init","Extract","_inI18nBlock","_messages","translations","Merge","_translations","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","createI18nMessageFactory","explicitAttrNameToValue","implicitAttrNames","msgMeta","_parseMessageMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","idIndex","descIndex","meaningAndDesc","_TAG_DEFINITION","XmlTagDefinition","getXmlTagDefinition","compiler_XmlParser","XmlParser","compiler_Xliff","Xliff","compiler_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","xliff","xmlns","XliffParser","msgIdToHtml","i18nNodesByMsgId","compiler_XmlToI18n","msgId","convert","i18nNodes","_WriteVisitor","ctype","getCtypeForTag","equiv-text","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerText","localeAttr","XmlToI18n","xmlIcu","nameAttr","caseMap","compiler_Xliff2","Xliff2","_WriteVisitor$1","units","notes","category","srcLang","Xliff2Parser","XmlToI18n$1","getTypeForTag","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","endId","compiler_Xtb","Xtb","XtbParser","XmlToI18n$2","valueFn","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","Warning","_i18nToHtml","compiler_I18nToHtmlVisitor","serializer","srcMsg","I18nToHtmlVisitor","_digest","_mapperFactory","_missingTranslationStrategy","_contextStack","_convertToText","_srcMsg","_mapper","mapper","I18NHtmlParser","translationsFormat","format","createSerializer","_translationBundle","parseResult","implicitTags","implicitAttrs","mergeTranslations","convertValueToOutputAst","_ValueOutputAstTransformer","quotedSet","ngfactoryFilePath","forceSourceFile","srcFileSuffix","urlWithSuffix","path","endsWith","lastDot","splitTypescriptSuffix","compiler_CompileMetadataResolver","CompileMetadataResolver","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","_shallowModuleCache","getReflector","_createProxyClass","baseType","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","getRendererType","getComponentFactory","initComponentFactory","_loadSummary","typeSummary","summary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","diDeps","loadDirectiveMetadata","isSync","error$$1","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","stringifyType","flattenAndDedupeArray","_getEntryComponentMetadata","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","isPipe","isNgModule","getNgModuleSummary","alreadyCollecting","moduleSummary","moduleMeta","getNgModuleMetadata","loadNgModuleDirectiveAndPipeMetadata","loading","_loadPipeMetadata","getShallowModuleMetadata","compileMeta","ngModuleMeta","shallowAnnotations","rawExports","exports","rawImports","rawProviders","exportedNonModuleIdentifiers","importedType","importedModuleType","isValidType","_checkSelfImport","_getTypeDescriptor","importedModuleSummary","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","isInjectable","tryAnnotations","ann","getInjectableSummary","Injectable","getInjectableMetadata","throwOnUnknownDeps","symbol","_getDependenciesMetadata","hook","getHookName","_getFactoryMetadata","getPipeMetadata","pipeType","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","hasUnknownDeps","dependenciesMetadata","isSelf","isSkipSelf","isOptional","paramEntry","_getTokenMetadata","depsTokens","dep","targetEntryComponents","debugInfo","compileProviders","providerIdx","providerMeta","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","targetIdentifiers","collectedIdentifiers","compiler_CompileValueConverter","_getInjectableTypeMetadata","compileDeps","compileTypeMetadata","compileFactoryMetadata","_getQueryMetadata","_queryVarBindings","q","read","otherType","tree","flattenArray","_CompileValueConverter","compiler_ProviderError","ProviderError","ProviderViewContext","viewQueryId","_addQueryToTokenMap","_getViewQueries","compiler_ProviderElementContext","ProviderElementContext","viewContext","_isViewRoot","_directiveAsts","refs","isTemplate","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","attrAst","targetErrors","providersByToken","directivesMeta","directiveAst","_allProviders","_resolveProviders","Component","PublicService","PrivateService","_contentQueries","contentQueryId","_getContentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","Builtin","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_transformProvider","_transformProviderAst","_getLocalDependency","attrValue","isValue","currElement","currEager","NgModuleProviderAnalyzer","errorString","requestorSourceSpan","targetProvidersByToken","compiler_providerDef","providerAst","lifecycleHook","lifecycleHookToNodeFlag","allDepDefs","allParams","providerIndex","depExprs","convertDeps","providerExpr","depsExpr","depIndex","paramName","multiProviderDef","singleProviderDef","tokenExpr","tokenMeta","nodeFlag","componentFactoryResolverProviderDef","entryComponentFactories","entryComponent","classMeta","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","NgModuleCompiler","compile","sourceFileName","sourceFile","providerParser","providerDefs","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","NgModuleResolver","compiler_TsEmitterVisitor","_TsEmitterVisitor","referenceFilter","importFilter","typeExpression","importsWithPrefixes","reexports","defaultType","_visitIdentifier","as","_printColonType","field","_visitClassField","Private","Static","initializer","Int","PipeResolver","metas","PLURAL_CASES","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_TEXT_CSS_SELECTOR","expanded","compiler_ExpansionError","ExpansionError","expansionResult","switchAttr","_expandDefaultForm","BIND_NAME_REGEXP$1","CLASS_ATTR","TEXT_CSS_SELECTOR","compiler_TemplateParseError","TemplateParseError","TemplateParseResult","templateAst","usedPipes","compiler_TemplateParser","TemplateParser","transforms","tryParse","htmlAstWithErrors","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","removeSummaryDuplicates","uniqPipes","providerViewContext","bindingParser","parseVisitor","compiler_TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","TemplateParseVisitor","_bindingParser","_schemas","_targetErrors","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","elName","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateValue","templateKey","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","parsedVariables_1","elementCssSelector","createElementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","providerContext","NON_BINDABLE_VISITOR$1","ElementContext","parsedElement","projectionSelector","_isEmptyTextNode","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","boundEvents","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","parsedEvents","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","targetBoundDirectiveProps","boundPropsByName_1","prevValue","dirProp","isEmptyExpression","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","allDirectiveEvents","NonBindableVisitor$1","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","elNameNoNs","attrNameNoNs","items","ViewCompileResult","viewClassVar","rendererTypeVar","compiler_ViewCompiler","ViewCompiler","embeddedViewCount","staticQueryIds","findStaticQueryIds","dynamicQueryIds","childData","renderComponentVarName","template_1","customRenderData","renderComponentVar","viewBuilderFactory","embeddedViewIndex","ViewBuilder$1","viewName","LOG_VAR$1","VIEW_VAR","CHECK_VAR","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","ViewBuilder","purePipeNodeIndices","refNodeIndices","astNodes","nodeStaticQueryIds","_createPipe","queryIds_1","queryIndex","calcStaticDynamicQueryFlags","needsAdditionalRootNode","lastAstNode","targetStatements","_createNodeExpressions","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateRendererStmts","updateDirectivesFn","viewFlags","OnPush","viewFactory","updateStmts","updateFn","preStmts","inter","updateRendererExpressions","_preprocessUpdateExpression","_visitElementOrTemplate","queryMatchesExpr","childVisitor","_createElementHandleEventFn","usedEvents","dirHostBindings","inputDefs","inputAst","dirAst","inputType","elementBindingDef","compAst","compRendererType","elementAst","mapResult","attrValue2","elementEventNameAndTarget","compiler_elementEventFullName","_visitComponentFactoryResolverProvider","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","outputAst","eventAst","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","hostEventAst","_addProviderNode","componentDirMeta","currViewExpr","currBuilder","refNodeIndex","varAst","varValue","_createLiteralArrayConverter","valueExpr_1","callCheckStmt","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","callUnwrapValue","nodeValueExpr_1","diDep","updateBindingCount","createUpdateStatements","allowEmptyExprs","localResolver","implicitReceiver","expressionWithoutBuiltins","form","createCurrValueExpr","convertPropertyBinding","outputExpr","TrySimple","General","handlers","handleEventFn","handleEventStmts","handleEventBindingCount","actionWithoutBuiltins","convertActionBinding","actionStmts","flattenStatements","prependTemporaryDecls","preventDefaultVar","returnExpr","createPreventDefaultVar","trueStmts","fullEventName","isFirst","SummaryResolver","JitSummaryResolver","_summaries","isLibraryFile","toSummaryFileName","fileName","fromSummaryFileName","getSymbolsOf","getImportAs","getKnownModuleName","addSummary","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","_ExecutionContext","ReturnValue","compiler_StatementInterpreter","StatementInterpreter","debugAst","debugOutputAstAsTypeScript","initialValue","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","_classStmt","_ctx","propertyDescriptors","instanceCtx","paramNames","ctorParamNames","superClass","createDynamicClass","_declareFn","JitCompiler","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_ngModuleCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","_addedAotSummaries","_compileModuleAndComponents","_compileModuleAndAllComponents","loadAotSummaries","summaries","_addAotSummaries","fn$$1","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","_compileModule","mainModule","mainNgModule","nestedNgModule","createOutputContext","compileResult","_interpretOrJit","ngModuleJitUrl","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","assertComponent","hostMeta","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","componentStylesheet","stylesheetMeta","compiledStylesheet","_resolveStylesCompileResult","_parseTemplate","evalResult","templateJitUrl","compiled","directiveIdentifiers","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","pathParts","createSourceMaps","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","headerLines","evalExpression","jitStatements","exportName","interpretStatements","_viewClass","viewClass","constantPool","CompileReflector","UrlResolver","UrlResolverImpl","_packagePrefix","resolvedUrl","_split","encodeURI","baseParts","_ComponentIndex","Scheme","_joinAndCanonicalizePath","Port","Path","_resolveUrl","resolvedParts","_splitRe","uri","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","leadingSlash","trailingSlash","up","pos","_removeDotSegments","UserInfo","Domain","QueryData","Fragment","ResourceLoader","node_modules_tslib_tslib_es6_extendStatics","node_modules_tslib_tslib_es6_read","node_modules_tslib_tslib_es6_spread","common_node_modules_tslib_tslib_es6_read","PlatformLocation","DOCUMENT","platform_browser_node_modules_tslib_tslib_es6_extendStatics","platform_browser_node_modules_tslib_tslib_es6_extends","platform_browser_node_modules_tslib_tslib_es6_metadata","platform_browser_node_modules_tslib_tslib_es6_read","_DOM","getDOM","nodeContains","_attrToPropMap","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","_chromeNumKeyPadMap","C","D","E","F","G","H","J","K","M","N","O","`","","contains","compareDocumentPosition","urlParsingNode","platform_browser_BrowserDomAdapter","BrowserDomAdapter","templateHtml","makeCurrent","adapter","getProperty","platform_browser_node_modules_tslib_tslib_es6_spread","logGroup","group","logGroupEnd","groupEnd","nodeA","nodeB","querySelectorAll","on","evt","addEventListener","onAndCancel","createMouseEvent","eventType","getDefaultDocument","createEvent","initEvent","preventDefault","isPrevented","defaultPrevented","getInnerHTML","innerHTML","getTemplateContent","getOuterHTML","outerHTML","childNodesAsList","clearNodes","replaceChild","insertAllBefore","insertAfter","setInnerHTML","getText","textContent","getChecked","checked","setChecked","createTemplate","doc","createTextNode","createScriptTag","createStyleElement","css","createShadowRoot","getShadowRoot","shadowRoot","getHost","cloneNode","getElementsByClassName","getElementsByTagName","hasClass","stylename","getStyle","hasStyle","attributeMap","elAttrs","attrib","hasAttribute","hasAttributeNS","getAttribute","getAttributeNS","removeAttributeNS","templateAwareRoot","createHtmlDocument","implementation","createHTMLDocument","getBoundingClientRect","top","bottom","width","height","getTitle","setTitle","newTitle","elementMatches","isElementNode","msMatchesSelector","webkitMatchesSelector","isTextNode","TEXT_NODE","isCommentNode","COMMENT_NODE","hasShadowRoot","HTMLElement","isShadowRoot","DocumentFragment","importIntoDoc","importNode","adoptNode","getHref","getEventKey","keyIdentifier","getGlobalEventTarget","getHistory","history","getLocation","getBaseHref","href","baseElement","pathname","resetBaseElement","getUserAgent","navigator","userAgent","setData","getData","getComputedStyle","supportsWebAnimation","performanceNow","performance","now","Date","getTime","supportsCookies","getCookie","cookieStr","encodeURIComponent","common_node_modules_tslib_tslib_es6_values","cookie","eqIndex","cookieValue","decodeURIComponent","parseCookieValue","setCookie","GenericBrowserDomAdapter","_animationPrefix","_transitionEnd","element_1","domPrefixes","transEndEventNames_1","WebkitTransition","MozTransition","OTransition","transition","getDistributedNodes","resolveAndSetHref","supportsDOMEvents","supportsNativeShadowDOM","getAnimationPrefix","getTransitionEnd","supportsAnimation","DomAdapter","resourceLoaderType","DOCUMENT$1","supportsState","pushState","platform_browser_BrowserPlatformLocation","BrowserPlatformLocation","_doc","decorator","_history","getBaseHrefFromDOM","onPopState","onHashChange","newPath","search","hash","replaceState","forward","back","platform_browser_node_modules_tslib_tslib_es6_decorate","TRANSITION_ID","SERVER_TRANSITION_PROVIDERS","transitionId","dom","platform_browser_BrowserGetTestability","BrowserGetTestability","testabilities","didWork","decrement","didWork_","INTERNAL_BROWSER_PLATFORM_PROVIDERS","platform_browser_BrowserModule","BrowserModule","parentModule","BrowserModule_1","withServerTransition","appId","builtinExternalReferences","createBuiltinExternalReferencesMap","platform_browser_dynamic_JitReflector","JitReflector","reflectionCapabilities","cmpMetadata","ERROR_COLLECTOR_TOKEN","DEFAULT_PACKAGE_URL_PROVIDER","_NO_RESOURCE_LOADER","baseHtmlParser","platform_browser_dynamic_CompilerImpl","CompilerImpl","templateParser","styleCompiler","viewCompiler","ngModuleCompiler","summaryResolver","compileReflector","compilerConfig","_delegate","COMPILER_PROVIDERS","parser","Ignore","_lastDefined","platformBrowserDynamic","JitCompilerFactory","defaultOptions","_defaultOptions","createCompiler","optionsArr","ResourceLoaderImpl","node_modules_tslib_tslib_es6_extends","xhr","XMLHttpRequest","open","responseType","onload","response","responseText","status","onerror","send","app_module_AppComponent","AppComponent","componentDefinition","rf","textNative","typePrototype","features","directiveTypes","pipeTypes","app_module_AppModule","AppModule","transitiveCompileScopes","enableProdMode","webpackEmptyAsyncContext","req"],"mappings":"2IAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,IAAIK,EAAW,WAQlB,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAwBzB,SAASI,EAAWC,EAAaC,GACpC,GAAuB,iBAAZC,SAAoD,mBAArBA,QAAQC,SAAyB,OAAOD,QAAQC,SAASH,EAAaC,GAuD7G,SAASG,EAAOC,EAAGX,GACtB,IAAIY,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBI,EAAYC,EAA3BjB,EAAIa,EAAET,KAAKQ,GAAOM,EAAK,GAC3B,IACI,WAAc,IAANjB,GAAgBA,KAAM,MAAQe,EAAIhB,EAAEmB,QAAQC,MAAMF,EAAGG,KAAKL,EAAEM,OAExE,MAAOC,GAASN,EAAI,CAAEM,MAAOA,WAEzB,IACQP,IAAMA,EAAEI,OAASP,EAAIb,EAAU,SAAIa,EAAET,KAAKJ,WAExC,GAAIiB,EAAG,MAAMA,EAAEM,OAE7B,OAAOL,EAGJ,SAASM,IACZ,IAAK,IAAIN,EAAK,GAAIlB,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CkB,EAAKA,EAAGO,OAAOd,EAAOT,UAAUF,KACpC,OAAOkB,ECxIJ,IAAIQ,EAAUvC,MAAMuC,SAAW,SAAWC,GAAK,OAAOA,GAAyB,iBAAbA,EAAExB,QCApE,SAASyB,EAASD,GACrB,OAAY,MAALA,GAA0B,iBAANA,ECDxB,SAASE,EAAWF,GACvB,MAAoB,mBAANA,ECDX,ICCHG,EDDOC,EAAc,CAAEd,EAAG,ICE9B,SAASe,IACL,IACI,OAAOF,EAAezB,MAAMb,KAAMU,WAEtC,MAAOe,GAEH,OADAc,EAAYd,EAAIA,EACTc,GAGR,SAASE,EAASC,GAErB,OADAJ,EAAiBI,EACVF,ECbX,SAASG,EAAwBC,GAM7B,OALAC,MAAMjC,KAAKZ,MACXA,KAAK8C,QAAUF,EACXA,EAAOjC,OAAS,4CAA8CiC,EAAOG,IAAI,SAAUC,EAAKxC,GAAK,OAAOA,EAAI,EAAI,KAAOwC,EAAIC,aAAeC,KAAK,QAAU,GACzJlD,KAAKmD,KAAO,sBACZnD,KAAK4C,OAASA,EACP5C,KAEX2C,EAAwBzC,UAA0BV,OAAOW,OAAO0C,MAAM3C,WAC/D,IAAIkD,EAAsBT,ECH7BU,EAA8B,WAC9B,SAASC,EAAaC,GAClBvD,KAAKwD,QAAS,EACdxD,KAAKyD,QAAU,KACfzD,KAAK0D,SAAW,KAChB1D,KAAK2D,eAAiB,KAClBJ,IACAvD,KAAK4D,aAAeL,GA2GN,IAAUM,EAIhC,OA5GAP,EAAapD,UAAUqD,YAAc,WACjC,IACIX,EADAkB,GAAY,EAEhB,IAAI9D,KAAKwD,OAAT,CAGA,IAAeC,EAANzD,KAAmByD,QAASC,EAA5B1D,KAA0C0D,SAAUE,EAApD5D,KAAsE4D,aAAcD,EAApF3D,KAAwG2D,eACjH3D,KAAKwD,QAAS,EACdxD,KAAKyD,QAAU,KACfzD,KAAK0D,SAAW,KAChB1D,KAAK2D,eAAiB,KAGtB,IAFA,IAAII,GAAS,EACTC,EAAMN,EAAWA,EAAS/C,OAAS,EAChC8C,GACHA,EAAQQ,OAAOjE,MACfyD,IAAYM,EAAQC,GAAON,EAASK,IAAU,KAUlD,GARI1B,EAAWuB,IACCnB,EAASmB,GAAchD,KAAKZ,QAC1BuC,IACVuB,GAAY,EACZlB,EAASA,IAAWL,EAAYd,aAAa2B,EACzCc,EAA4B3B,EAAYd,EAAEmB,QAAU,CAACL,EAAYd,KAGzES,EAAQyB,GAGR,IAFAI,GAAS,EACTC,EAAML,EAAehD,SACZoD,EAAQC,GAAK,CAClB,IAAIG,EAAMR,EAAeI,GACzB,GAAI3B,EAAS+B,IACG1B,EAAS0B,EAAIZ,aAAa3C,KAAKuD,KAC7B5B,EAAa,CACvBuB,GAAY,EACZlB,EAASA,GAAU,GACnB,IAAII,EAAMT,EAAYd,EAClBuB,aAAeI,EACfR,EAASA,EAAOX,OAAOiC,EAA4BlB,EAAIJ,SAGvDA,EAAOf,KAAKmB,IAMhC,GAAIc,EACA,MAAM,IAAIV,EAAoBR,KAGtCU,EAAapD,UAAUkE,IAAM,SAAUC,GACnC,IAAKA,GAAaA,IAAaf,EAAagB,MACxC,OAAOhB,EAAagB,MAExB,GAAID,IAAarE,KACb,OAAOA,KAEX,IAAIuE,EAAeF,EACnB,cAAeA,GACX,IAAK,WACDE,EAAe,IAAIjB,EAAae,GACpC,IAAK,SACD,GAAIE,EAAaf,QAA8C,mBAA7Be,EAAahB,YAC3C,OAAOgB,EAEN,GAAIvE,KAAKwD,OAEV,OADAe,EAAahB,cACNgB,EAEN,GAAuC,mBAA5BA,EAAaC,WAA2B,CACpD,IAAIC,EAAMF,GACVA,EAAe,IAAIjB,GACNK,eAAiB,CAACc,GAEnC,MACJ,QACI,MAAM,IAAI5B,MAAM,yBAA2BwB,EAAW,2BAK9D,OAHoBrE,KAAK2D,iBAAmB3D,KAAK2D,eAAiB,KACpD9B,KAAK0C,GACnBA,EAAaC,WAAWxE,MACjBuE,GAEXjB,EAAapD,UAAU+D,OAAS,SAAUM,GACtC,IAAIG,EAAgB1E,KAAK2D,eACzB,GAAIe,EAAe,CACf,IAAIC,EAAoBD,EAAcE,QAAQL,IACnB,IAAvBI,GACAD,EAAcG,OAAOF,EAAmB,KAIpDrB,EAAapD,UAAUsE,WAAa,SAAUM,GAC1C,IAAerB,EAANzD,KAAmByD,QAASC,EAA5B1D,KAA0C0D,SAC9CD,GAAWA,IAAYqB,EAGlBpB,GAG6B,IAA9BA,EAASkB,QAAQE,IACtBpB,EAAS7B,KAAKiD,GAHd9E,KAAK0D,SAAW,CAACoB,GAHjB9E,KAAKyD,QAAUqB,GASvBxB,EAAagB,QAAmBT,EAG9B,IAAIP,GAFIE,QAAS,EACRK,GAEJP,EAtHsB,GAyHjC,SAASY,EAA4BtB,GACjC,OAAOA,EAAOmC,OAAO,SAAUC,EAAMhC,GAAO,OAAOgC,EAAK/C,OAAQe,aAAeI,EAAuBJ,EAAIJ,OAASI,IAAS,ICjHhI,IAAIiC,EAAgB,SAAS3F,EAAGC,GAI5B,OAHA0F,EAAgBzF,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAAS2F,EAAU5F,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnC2F,EAAc3F,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GCzBnF,IAAIoF,GAAsD,EAC/CC,EAAS,CAChBC,aAASC,EACTC,0CAA0CzD,GAQtCqD,EAAsDrD,GAE1DyD,4CACI,OAAOJ,ICdR,SAASK,EAAgBxC,GAC5ByC,WAAW,WAAc,MAAMzC,ICC5B,IAAIa,EAAQ,CACfL,QAAQ,EACR7B,KAAM,SAAUG,KAChBC,MAAO,SAAUiB,GACb,GAAIoC,EAAOG,sCACP,MAAMvC,EAGNwC,EAAgBxC,IAGxB0C,SAAU,cCbHC,EAAiC,mBAAXrE,OACbA,OAAO,gBACrB,kBAAkCsE,KAAKC,SCKzCC,EAA4B,SAAUC,GAEtC,SAASC,EAAWC,EAAmBlE,EAAO2D,GAC1C,IAAIQ,EAAQH,EAAOnF,KAAKZ,OAASA,KAMjC,OALAkG,EAAMC,eAAiB,KACvBD,EAAME,iBAAkB,EACxBF,EAAMG,oBAAqB,EAC3BH,EAAMI,WAAY,EAClBJ,EAAMK,oBAAsB,KACpB7F,UAAUC,QACd,KAAK,EACDuF,EAAMM,YAAc3C,EACpB,MACJ,KAAK,EACD,IAAKoC,EAAmB,CACpBC,EAAMM,YAAc3C,EACpB,MAEJ,GAAiC,iBAAtBoC,EAAgC,CACnCA,aAA6BD,GAC7BE,EAAMG,mBAAqBJ,EAAkBI,mBAC7CH,EAAMM,YAAcP,EACpBA,EAAkB7B,IAAI8B,KAGtBA,EAAMG,oBAAqB,EAC3BH,EAAMM,YAAc,IAAIC,EAAeP,EAAOD,IAElD,MAER,QACIC,EAAMG,oBAAqB,EAC3BH,EAAMM,YAAc,IAAIC,EAAeP,EAAOD,EAAmBlE,EAAO2D,GAGhF,OAAOQ,EAuDX,OAzFAhB,EAAkBc,EAAYD,GAoC9BC,EAAW9F,UAAUyF,GAAsB,WAAc,OAAO3F,MAChEgG,EAAW7F,OAAS,SAAUwB,EAAMI,EAAO2D,GACvC,IAAIgB,EAAa,IAAIV,EAAWrE,EAAMI,EAAO2D,GAE7C,OADAgB,EAAWL,oBAAqB,EACzBK,GAEXV,EAAW9F,UAAUyB,KAAO,SAAUG,GAC7B9B,KAAKsG,WACNtG,KAAK2G,MAAM7E,IAGnBkE,EAAW9F,UAAU6B,MAAQ,SAAUiB,GAC9BhD,KAAKsG,YACNtG,KAAKsG,WAAY,EACjBtG,KAAK4G,OAAO5D,KAGpBgD,EAAW9F,UAAUwF,SAAW,WACvB1F,KAAKsG,YACNtG,KAAKsG,WAAY,EACjBtG,KAAK6G,cAGbb,EAAW9F,UAAUqD,YAAc,WAC3BvD,KAAKwD,SAGTxD,KAAKsG,WAAY,EACjBP,EAAO7F,UAAUqD,YAAY3C,KAAKZ,QAEtCgG,EAAW9F,UAAUyG,MAAQ,SAAU7E,GACnC9B,KAAKwG,YAAY7E,KAAKG,IAE1BkE,EAAW9F,UAAU0G,OAAS,SAAU5D,GACpChD,KAAKwG,YAAYzE,MAAMiB,GACvBhD,KAAKuD,eAETyC,EAAW9F,UAAU2G,UAAY,WAC7B7G,KAAKwG,YAAYd,WACjB1F,KAAKuD,eAETyC,EAAW9F,UAAU4G,uBAAyB,WAC1C,IAAerD,EAANzD,KAAmByD,QAASC,EAA5B1D,KAA0C0D,SASnD,OARA1D,KAAKyD,QAAU,KACfzD,KAAK0D,SAAW,KAChB1D,KAAKuD,cACLvD,KAAKwD,QAAS,EACdxD,KAAKsG,WAAY,EACjBtG,KAAKyD,QAAUA,EACfzD,KAAK0D,SAAWA,EAChB1D,KAAKuG,oBAAsB,KACpBvG,MAEJgG,EA1FoB,CA2F7B3C,GAEEoD,EAAgC,SAAUV,GAE1C,SAASgB,EAAeC,EAAmBC,EAAgBlF,EAAO2D,GAC9D,IAEI/D,EAFAuE,EAAQH,EAAOnF,KAAKZ,OAASA,KACjCkG,EAAMc,kBAAoBA,EAE1B,IAAIE,EAAUhB,EAoBd,OAnBI7D,EAAW4E,GACXtF,EAAOsF,EAEFA,IACLtF,EAAOsF,EAAetF,KACtBI,EAAQkF,EAAelF,MACvB2D,EAAWuB,EAAevB,SACtBuB,IAAmBpD,IAEfxB,GADJ6E,EAAU1H,OAAOW,OAAO8G,IACD1D,cACnB2C,EAAM9B,IAAI8C,EAAQ3D,YAAY4D,KAAKD,IAEvCA,EAAQ3D,YAAc2C,EAAM3C,YAAY4D,KAAKjB,KAGrDA,EAAMkB,SAAWF,EACjBhB,EAAMS,MAAQhF,EACduE,EAAMU,OAAS7E,EACfmE,EAAMW,UAAYnB,EACXQ,EA0GX,OAnIAhB,EAAkB6B,EAAgBhB,GA2BlCgB,EAAe7G,UAAUyB,KAAO,SAAUG,GACtC,IAAK9B,KAAKsG,WAAatG,KAAK2G,MAAO,CAC/B,IAAIK,EAAoBhH,KAAKgH,kBACxB5B,EAAOG,uCAA0CyB,EAAkBX,mBAG/DrG,KAAKqH,gBAAgBL,EAAmBhH,KAAK2G,MAAO7E,IACzD9B,KAAKuD,cAHLvD,KAAKsH,aAAatH,KAAK2G,MAAO7E,KAO1CiF,EAAe7G,UAAU6B,MAAQ,SAAUiB,GACvC,IAAKhD,KAAKsG,UAAW,CACjB,IAAIU,EAAoBhH,KAAKgH,kBACzBzB,EAAwCH,EAAOG,sCACnD,GAAIvF,KAAK4G,OACArB,GAA0CyB,EAAkBX,oBAK7DrG,KAAKqH,gBAAgBL,EAAmBhH,KAAK4G,OAAQ5D,GACrDhD,KAAKuD,gBALLvD,KAAKsH,aAAatH,KAAK4G,OAAQ5D,GAC/BhD,KAAKuD,oBAOR,GAAKyD,EAAkBX,mBAQpBd,GACAyB,EAAkBb,eAAiBnD,EACnCgE,EAAkBZ,iBAAkB,GAGpCZ,EAAgBxC,GAEpBhD,KAAKuD,kBAfuC,CAE5C,GADAvD,KAAKuD,cACDgC,EACA,MAAMvC,EAEVwC,EAAgBxC,MAc5B+D,EAAe7G,UAAUwF,SAAW,WAChC,IAAIQ,EAAQlG,KACZ,IAAKA,KAAKsG,UAAW,CACjB,IAAIU,EAAoBhH,KAAKgH,kBAC7B,GAAIhH,KAAK6G,UAAW,CAChB,IAAIU,EAAkB,WAAc,OAAOrB,EAAMW,UAAUjG,KAAKsF,EAAMkB,WACjEhC,EAAOG,uCAA0CyB,EAAkBX,oBAKpErG,KAAKqH,gBAAgBL,EAAmBO,GACxCvH,KAAKuD,gBALLvD,KAAKsH,aAAaC,GAClBvH,KAAKuD,oBAQTvD,KAAKuD,gBAIjBwD,EAAe7G,UAAUoH,aAAe,SAAU5E,EAAIZ,GAClD,IACIY,EAAG9B,KAAKZ,KAAKoH,SAAUtF,GAE3B,MAAOkB,GAEH,GADAhD,KAAKuD,cACD6B,EAAOG,sCACP,MAAMvC,EAGNwC,EAAgBxC,KAI5B+D,EAAe7G,UAAUmH,gBAAkB,SAAUvC,EAAQpC,EAAIZ,GAC7D,IAAKsD,EAAOG,sCACR,MAAM,IAAI1C,MAAM,YAEpB,IACIH,EAAG9B,KAAKZ,KAAKoH,SAAUtF,GAE3B,MAAOkB,GACH,OAAIoC,EAAOG,uCACPT,EAAOqB,eAAiBnD,EACxB8B,EAAOsB,iBAAkB,GAClB,IAGPZ,EAAgBxC,IACT,GAGf,OAAO,GAEX+D,EAAe7G,UAAU0D,aAAe,WACpC,IAAIoD,EAAoBhH,KAAKgH,kBAC7BhH,KAAKoH,SAAW,KAChBpH,KAAKgH,kBAAoB,KACzBA,EAAkBzD,eAEfwD,EApIwB,CAqIjCjB,GCzOS0B,EAA+B,mBAAXlG,QAAyBA,OAAOmG,YAAc,eCK7E,IAAIC,EAA4B,WAC5B,SAASC,EAAWC,GAChB5H,KAAK6H,WAAY,EACbD,IACA5H,KAAK8H,WAAaF,GA6F1B,OA1FAD,EAAWzH,UAAU6H,KAAO,SAAUC,GAClC,IAAIP,EAAa,IAAIE,EAGrB,OAFAF,EAAWQ,OAASjI,KACpByH,EAAWO,SAAWA,EACfP,GAEXE,EAAWzH,UAAU0H,UAAY,SAAUX,EAAgBlF,EAAO2D,GAC9D,IAAIsC,EAAWhI,KAAKgI,SAChBE,ECjBL,SAAsBC,EAAgBpG,EAAO2D,GAChD,GAAIyC,EAAgB,CAChB,GAAIA,aAA0BrC,EAC1B,OAAOqC,EAEX,GAAIA,EAAexC,GACf,OAAOwC,EAAexC,KAG9B,OAAKwC,GAAmBpG,GAAU2D,EAG3B,IAAII,EAAWqC,EAAgBpG,EAAO2D,GAFlC,IAAII,EAAWjC,GDOXuE,CAAanB,EAAgBlF,EAAO2D,GAS/C,GARIsC,EACAA,EAASpH,KAAKsH,EAAMlI,KAAKiI,QAGzBC,EAAK9D,IAAIpE,KAAKiI,QAAW7C,EAAOG,wCAA0C2C,EAAK7B,mBAC3ErG,KAAK8H,WAAWI,GAChBlI,KAAKqI,cAAcH,IAEvB9C,EAAOG,uCACH2C,EAAK7B,qBACL6B,EAAK7B,oBAAqB,EACtB6B,EAAK9B,iBACL,MAAM8B,EAAK/B,eAIvB,OAAO+B,GAEXP,EAAWzH,UAAUmI,cAAgB,SAAUH,GAC3C,IACI,OAAOlI,KAAK8H,WAAWI,GAE3B,MAAOlF,GACCoC,EAAOG,wCACP2C,EAAK9B,iBAAkB,EACvB8B,EAAK/B,eAAiBnD,GE7C/B,SAAwBsF,GAC3B,KAAOA,GAAU,CACb,IAAyC9B,EAAhC8B,EAAiD9B,YAC1D,GADS8B,EAAwB9E,QAAxB8E,EAA6EhC,UAElF,OAAO,EAGPgC,EADK9B,GAAeA,aAAuBV,EAChCU,EAGA,KAGnB,OAAO,EFkCK+B,CAAeL,GACfA,EAAKnG,MAAMiB,GAGXwF,QAAQC,KAAKzF,KAIzB2E,EAAWzH,UAAUwI,QAAU,SAAU/G,EAAMgH,GAC3C,IAAIzC,EAAQlG,KAEZ,OAAO,IADP2I,EAAcC,EAAeD,IACN,SAAUE,EAASC,GACtC,IAAIvE,EACJA,EAAe2B,EAAM0B,UAAU,SAAU9F,GACrC,IACIH,EAAKG,GAET,MAAOkB,GACH8F,EAAO9F,GACHuB,GACAA,EAAahB,gBAGtBuF,EAAQD,MAGnBlB,EAAWzH,UAAU4H,WAAa,SAAUpB,GACxC,IAAIuB,EAASjI,KAAKiI,OAClB,OAAOA,GAAUA,EAAOL,UAAUlB,IAEtCiB,EAAWzH,UAAUsH,GAAqB,WACtC,OAAOxH,MAEX2H,EAAWzH,UAAU6I,KAAO,WAExB,IADA,IAAIC,EAAa,GACRC,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpCD,EAAWC,GAAMvI,UAAUuI,GAE/B,OAA0B,IAAtBD,EAAWrI,OACJX,OG/EWkJ,EHiFDF,GG7EN,IAAfE,EAAIvI,OACGuI,EAAI,GAER,SAAeC,GAClB,OAAOD,EAAInE,OAAO,SAAUqE,EAAM1G,GAAM,OAAOA,EAAG0G,IAAUD,IChB7D,cJyFkCnJ,MGjFlC,IAAuBkJ,GHmF1BvB,EAAWzH,UAAUmJ,UAAY,SAAUV,GACvC,IAAIzC,EAAQlG,KAEZ,OAAO,IADP2I,EAAcC,EAAeD,IACN,SAAUE,EAASC,GACtC,IAAIhH,EACJoE,EAAM0B,UAAU,SAAUzF,GAAK,OAAOL,EAAQK,GAAM,SAAUa,GAAO,OAAO8F,EAAO9F,IAAS,WAAc,OAAO6F,EAAQ/G,QAGjI6F,EAAWxH,OAAS,SAAUyH,GAC1B,OAAO,IAAID,EAAWC,IAEnBD,EAjGoB,GAoG/B,SAASiB,EAAeD,GAIpB,GAHKA,IACDA,EAAcvD,EAAOC,SAAWA,UAE/BsD,EACD,MAAM,IAAI9F,MAAM,yBAEpB,OAAO8F,EKhHX,SAASW,IAIL,OAHAzG,MAAMjC,KAAKZ,MACXA,KAAK8C,QAAU,sBACf9C,KAAKmD,KAAO,0BACLnD,KAEXsJ,EAA4BpJ,UAA0BV,OAAOW,OAAO0C,MAAM3C,WACnE,IAAIqJ,EAA0BD,ECLjCE,EAAqC,SAAUzD,GAE/C,SAAS0D,EAAoBC,EAAShD,GAClC,IAAIR,EAAQH,EAAOnF,KAAKZ,OAASA,KAIjC,OAHAkG,EAAMwD,QAAUA,EAChBxD,EAAMQ,WAAaA,EACnBR,EAAM1C,QAAS,EACR0C,EAkBX,OAxBAhB,EAAkBuE,EAAqB1D,GAQvC0D,EAAoBvJ,UAAUqD,YAAc,WACxC,IAAIvD,KAAKwD,OAAT,CAGAxD,KAAKwD,QAAS,EACd,IAAIkG,EAAU1J,KAAK0J,QACfC,EAAYD,EAAQC,UAExB,GADA3J,KAAK0J,QAAU,KACVC,GAAkC,IAArBA,EAAUhJ,SAAgB+I,EAAQpD,YAAaoD,EAAQlG,OAAzE,CAGA,IAAIoG,EAAkBD,EAAU/E,QAAQ5E,KAAK0G,aACpB,IAArBkD,GACAD,EAAU9E,OAAO+E,EAAiB,MAGnCH,EAzB6B,CA0BtCpG,GCrBEwG,EAAmC,SAAU9D,GAE7C,SAAS+D,EAAkBtD,GACvB,IAAIN,EAAQH,EAAOnF,KAAKZ,KAAMwG,IAAgBxG,KAE9C,OADAkG,EAAMM,YAAcA,EACbN,EAEX,OANAhB,EAAkB4E,EAAmB/D,GAM9B+D,EAP2B,CAQpChE,GAEEiE,EAAyB,SAAUhE,GAEnC,SAASiE,IACL,IAAI9D,EAAQH,EAAOnF,KAAKZ,OAASA,KAMjC,OALAkG,EAAMyD,UAAY,GAClBzD,EAAM1C,QAAS,EACf0C,EAAMI,WAAY,EAClBJ,EAAM+D,UAAW,EACjB/D,EAAMgE,YAAc,KACbhE,EAyFX,OAjGAhB,EAAkB8E,EAASjE,GAU3BiE,EAAQ9J,UAAUyF,GAAsB,WACpC,OAAO,IAAIkE,EAAkB7J,OAEjCgK,EAAQ9J,UAAU6H,KAAO,SAAUC,GAC/B,IAAI0B,EAAU,IAAIS,EAAiBnK,KAAMA,MAEzC,OADA0J,EAAQ1B,SAAWA,EACZ0B,GAEXM,EAAQ9J,UAAUyB,KAAO,SAAUG,GAC/B,GAAI9B,KAAKwD,OACL,MAAM,IAAI+F,EAEd,IAAKvJ,KAAKsG,UAIN,IAHA,IAAIqD,EAAY3J,KAAK2J,UACjB3F,EAAM2F,EAAUhJ,OAChByJ,EAAOT,EAAUU,QACZ7J,EAAI,EAAGA,EAAIwD,EAAKxD,IACrB4J,EAAK5J,GAAGmB,KAAKG,IAIzBkI,EAAQ9J,UAAU6B,MAAQ,SAAUiB,GAChC,GAAIhD,KAAKwD,OACL,MAAM,IAAI+F,EAEdvJ,KAAKiK,UAAW,EAChBjK,KAAKkK,YAAclH,EACnBhD,KAAKsG,WAAY,EAIjB,IAHA,IAAIqD,EAAY3J,KAAK2J,UACjB3F,EAAM2F,EAAUhJ,OAChByJ,EAAOT,EAAUU,QACZ7J,EAAI,EAAGA,EAAIwD,EAAKxD,IACrB4J,EAAK5J,GAAGuB,MAAMiB,GAElBhD,KAAK2J,UAAUhJ,OAAS,GAE5BqJ,EAAQ9J,UAAUwF,SAAW,WACzB,GAAI1F,KAAKwD,OACL,MAAM,IAAI+F,EAEdvJ,KAAKsG,WAAY,EAIjB,IAHA,IAAIqD,EAAY3J,KAAK2J,UACjB3F,EAAM2F,EAAUhJ,OAChByJ,EAAOT,EAAUU,QACZ7J,EAAI,EAAGA,EAAIwD,EAAKxD,IACrB4J,EAAK5J,GAAGkF,WAEZ1F,KAAK2J,UAAUhJ,OAAS,GAE5BqJ,EAAQ9J,UAAUqD,YAAc,WAC5BvD,KAAKsG,WAAY,EACjBtG,KAAKwD,QAAS,EACdxD,KAAK2J,UAAY,MAErBK,EAAQ9J,UAAUmI,cAAgB,SAAU3B,GACxC,GAAI1G,KAAKwD,OACL,MAAM,IAAI+F,EAGV,OAAOxD,EAAO7F,UAAUmI,cAAczH,KAAKZ,KAAM0G,IAGzDsD,EAAQ9J,UAAU4H,WAAa,SAAUpB,GACrC,GAAI1G,KAAKwD,OACL,MAAM,IAAI+F,EAET,OAAIvJ,KAAKiK,UACVvD,EAAW3E,MAAM/B,KAAKkK,aACf7G,EAAaiB,OAEftE,KAAKsG,WACVI,EAAWhB,WACJrC,EAAaiB,QAGpBtE,KAAK2J,UAAU9H,KAAK6E,GACb,IAAI8C,EAAoBxJ,KAAM0G,KAG7CsD,EAAQ9J,UAAUoK,aAAe,WAC7B,IAAI7C,EAAa,IAAIC,EAErB,OADAD,EAAWQ,OAASjI,KACbyH,GAEXuC,EAAQ7J,OAAS,SAAUqG,EAAayB,GACpC,OAAO,IAAIkC,EAAiB3D,EAAayB,IAEtC+B,EAlGiB,CAmG1BtC,GAEEyC,EAAkC,SAAUpE,GAE5C,SAASwE,EAAiB/D,EAAayB,GACnC,IAAI/B,EAAQH,EAAOnF,KAAKZ,OAASA,KAGjC,OAFAkG,EAAMM,YAAcA,EACpBN,EAAM+B,OAASA,EACR/B,EA6BX,OAlCAhB,EAAkBqF,EAAkBxE,GAOpCwE,EAAiBrK,UAAUyB,KAAO,SAAUG,GACxC,IAAI0E,EAAcxG,KAAKwG,YACnBA,GAAeA,EAAY7E,MAC3B6E,EAAY7E,KAAKG,IAGzByI,EAAiBrK,UAAU6B,MAAQ,SAAUiB,GACzC,IAAIwD,EAAcxG,KAAKwG,YACnBA,GAAeA,EAAYzE,OAC3B/B,KAAKwG,YAAYzE,MAAMiB,IAG/BuH,EAAiBrK,UAAUwF,SAAW,WAClC,IAAIc,EAAcxG,KAAKwG,YACnBA,GAAeA,EAAYd,UAC3B1F,KAAKwG,YAAYd,YAGzB6E,EAAiBrK,UAAU4H,WAAa,SAAUpB,GAE9C,OADa1G,KAAKiI,OAEPjI,KAAKiI,OAAOL,UAAUlB,GAGtBrD,EAAaiB,OAGrBiG,EAnC0B,CAoCnCR,GCxJES,EAAiC,SAAUzE,GAE3C,SAAS0E,EAAgB3F,EAAQ4F,EAAYC,GACzC,IAAIzE,EAAQH,EAAOnF,KAAKZ,OAASA,KAKjC,OAJAkG,EAAMpB,OAASA,EACfoB,EAAMwE,WAAaA,EACnBxE,EAAMyE,WAAaA,EACnBzE,EAAMnC,MAAQ,EACPmC,EAaX,OApBAhB,EAAkBuF,EAAiB1E,GASnC0E,EAAgBvK,UAAUyG,MAAQ,SAAU7E,GACxC9B,KAAK8E,OAAO8F,WAAW5K,KAAK0K,WAAY5I,EAAO9B,KAAK2K,WAAY3K,KAAK+D,QAAS/D,OAElFyK,EAAgBvK,UAAU0G,OAAS,SAAU7E,GACzC/B,KAAK8E,OAAO+F,YAAY9I,EAAO/B,MAC/BA,KAAKuD,eAETkH,EAAgBvK,UAAU2G,UAAY,WAClC7G,KAAK8E,OAAOgG,eAAe9K,MAC3BA,KAAKuD,eAEFkH,EArByB,CAsBlC3E,GCxBSiF,EAAmB,SAAUC,GACpC,OAAO,SAAUtE,GACb,IAAK,IAAIlG,EAAI,EAAGwD,EAAMgH,EAAMrK,OAAQH,EAAIwD,IAAQ0C,EAAWlD,OAAQhD,IAC/DkG,EAAW/E,KAAKqJ,EAAMxK,IAErBkG,EAAWlD,QACZkD,EAAWhB,aCLZuF,EAAqB,SAAUC,GACtC,OAAO,SAAUxE,GAQb,OAPAwE,EAAQC,KAAK,SAAUrJ,GACd4E,EAAWlD,SACZkD,EAAW/E,KAAKG,GAChB4E,EAAWhB,aAEhB,SAAU1C,GAAO,OAAO0D,EAAW3E,MAAMiB,KACvCmI,KAAK,KAAM3F,GACTkB,ICVR,SAAS0E,IACZ,MAAsB,mBAAX9J,QAA0BA,OAAOC,SAGrCD,OAAOC,SAFH,aAIR,IAAI8J,EAAyBD,ICLzBE,EAAsB,SAAUC,GACvC,OAAO,SAAU7E,GAEb,IADA,IAAInF,EAAWgK,EAASF,OACrB,CACC,IAAIG,EAAOjK,EAASI,OACpB,GAAI6J,EAAK5J,KAAM,CACX8E,EAAWhB,WACX,MAGJ,GADAgB,EAAW/E,KAAK6J,EAAK1J,OACjB4E,EAAWlD,OACX,MAUR,MAP+B,mBAApBjC,EAASkK,QAChB/E,EAAWtC,IAAI,WACP7C,EAASkK,QACTlK,EAASkK,WAId/E,ICrBJgF,EAAwB,SAAUC,GACzC,OAAO,SAAUjF,GACb,IAAIkF,EAAMD,EAAInE,KACd,GAA6B,mBAAlBoE,EAAIhE,UACX,MAAM,IAAIiE,UAAU,kEAGpB,OAAOD,EAAIhE,UAAUlB,KCRtBoF,EAAc,SAAW3J,GAAK,OAAOA,GAAyB,iBAAbA,EAAExB,QAAoC,mBAANwB,GCArF,SAAS4J,EAAUjK,GACtB,OAAOA,GAAoC,mBAApBA,EAAM8F,WAAkD,mBAAf9F,EAAMqJ,KCSnE,IAAIa,EAAc,SAAUC,GAC/B,GAAIA,aAAkBvE,EAClB,OAAO,SAAUhB,GACb,OAAIuF,EAAOpE,WACPnB,EAAW/E,KAAKsK,EAAOnK,YACvB4E,EAAWhB,YAIJuG,EAAOrE,UAAUlB,IAI/B,GAAIuF,GAA+C,mBAA9BA,EAAOzE,GAC7B,OAAOkE,EAAsBO,GAE5B,GAAIH,EAAYG,GACjB,OAAOlB,EAAiBkB,GAEvB,GAAIF,EAAUE,GACf,OAAOhB,EAAmBgB,GAEzB,GAAIA,GAA6C,mBAA5BA,EAAOZ,GAC7B,OAAOC,EAAoBW,GAG3B,IAAInK,EAAQM,EAAS6J,GAAU,oBAAsB,IAAMA,EAAS,IAGpE,MAAM,IAAIJ,UAFA,gBAAkB/J,EAAQ,8FCnCxCoK,EAAiC,SAAUnG,GAE3C,SAASoG,IACL,OAAkB,OAAXpG,GAAmBA,EAAOlF,MAAMb,KAAMU,YAAcV,KAW/D,OAbAkF,EAAkBiH,EAAiBpG,GAInCoG,EAAgBjM,UAAU0K,WAAa,SAAUF,EAAY0B,EAAYzB,EAAY0B,EAAYC,GAC7FtM,KAAKwG,YAAY7E,KAAKyK,IAE1BD,EAAgBjM,UAAU2K,YAAc,SAAU9I,EAAOuK,GACrDtM,KAAKwG,YAAYzE,MAAMA,IAE3BoK,EAAgBjM,UAAU4K,eAAiB,SAAUwB,GACjDtM,KAAKwG,YAAYd,YAEdyG,EAdyB,CAelCrG,GCPEyG,EAA6B,WAC7B,SAASA,EAAYC,EAASC,GAC1BzM,KAAKwM,QAAUA,EACfxM,KAAKyM,QAAUA,EAKnB,OAHAF,EAAYrM,UAAUU,KAAO,SAAU8F,EAAYuB,GAC/C,OAAOA,EAAOL,UAAU,IAAI8E,EAAchG,EAAY1G,KAAKwM,QAASxM,KAAKyM,WAEtEF,EARqB,GAW5BG,EAA+B,SAAU3G,GAEzC,SAAS4G,EAAcnG,EAAagG,EAASC,GACzC,IAAIvG,EAAQH,EAAOnF,KAAKZ,KAAMwG,IAAgBxG,KAI9C,OAHAkG,EAAMsG,QAAUA,EAChBtG,EAAM0G,MAAQ,EACd1G,EAAMuG,QAAUA,GAAWvG,EACpBA,EAaX,OAnBAhB,EAAkByH,EAAe5G,GAQjC4G,EAAczM,UAAUyG,MAAQ,SAAU7E,GACtC,IAAImK,EACJ,IACIA,EAASjM,KAAKwM,QAAQ5L,KAAKZ,KAAKyM,QAAS3K,EAAO9B,KAAK4M,SAEzD,MAAO5J,GAEH,YADAhD,KAAKwG,YAAYzE,MAAMiB,GAG3BhD,KAAKwG,YAAY7E,KAAKsK,IAEnBU,EApBuB,CAqBhC7G,GCvCK,SAAS+G,EAAU1D,EAAO2D,GAC7B,OAIW,IAAIpF,EAJVoF,EAIqB,SAAUpG,GAC5B,IAAIvC,EAAM,IAAId,EACV7C,EAAI,EAWR,OAVA2D,EAAIC,IAAI0I,EAAUC,SAAS,WACnBvM,IAAM2I,EAAMxI,QAIhB+F,EAAW/E,KAAKwH,EAAM3I,MACjBkG,EAAWlD,QACZW,EAAIC,IAAIpE,KAAK+M,aALbrG,EAAWhB,cAQZvB,GAhBW4G,EAAiB5B,ICa/C,IAAI6D,EAAkC,WAClC,SAASA,EAAiBR,EAASS,QACZ,IAAfA,IACAA,EAAaC,OAAOC,mBAExBnN,KAAKwM,QAAUA,EACfxM,KAAKiN,WAAaA,EAKtB,OAHAD,EAAiB9M,UAAUU,KAAO,SAAU0H,EAAUL,GAClD,OAAOA,EAAOL,UAAU,IAAIwF,EAAmB9E,EAAUtI,KAAKwM,QAASxM,KAAKiN,cAEzED,EAX0B,GAcjCI,EAAoC,SAAUrH,GAE9C,SAASsH,EAAmB7G,EAAagG,EAASS,QAC3B,IAAfA,IACAA,EAAaC,OAAOC,mBAExB,IAAIjH,EAAQH,EAAOnF,KAAKZ,KAAMwG,IAAgBxG,KAO9C,OANAkG,EAAMsG,QAAUA,EAChBtG,EAAM+G,WAAaA,EACnB/G,EAAMoH,cAAe,EACrBpH,EAAMqH,OAAS,GACfrH,EAAMsH,OAAS,EACftH,EAAMnC,MAAQ,EACPmC,EAkDX,OA9DAhB,EAAkBmI,EAAoBtH,GActCsH,EAAmBnN,UAAUyG,MAAQ,SAAU7E,GACvC9B,KAAKwN,OAASxN,KAAKiN,WACnBjN,KAAKyN,SAAS3L,GAGd9B,KAAKuN,OAAO1L,KAAKC,IAGzBuL,EAAmBnN,UAAUuN,SAAW,SAAU3L,GAC9C,IAAImK,EACAlI,EAAQ/D,KAAK+D,QACjB,IACIkI,EAASjM,KAAKwM,QAAQ1K,EAAOiC,GAEjC,MAAOf,GAEH,YADAhD,KAAKwG,YAAYzE,MAAMiB,GAG3BhD,KAAKwN,SACLxN,KAAK0N,UAAUzB,EAAQnK,EAAOiC,IAElCsJ,EAAmBnN,UAAUwN,UAAY,SAAUC,EAAK7L,EAAOiC,GAC3D,ICnE2CkI,EAAgCzF,EDmEvEoH,EAAkB,IAAIpD,EAAgBxK,UAAMsF,OAAWA,GACzCtF,KAAKwG,YACXpC,IAAIwJ,GCrE2B3B,EDsEnB0B,OCrER,KAD2DnH,EDsEhCoH,KCpE3CpH,EAAc,IAAIgE,EDoEAxK,KAAW8B,EAAOiC,IClEpCyC,EAAYhD,QAGTwI,EAAYC,EAAZD,CAAoBxF,IDiE3B6G,EAAmBnN,UAAU2G,UAAY,WACrC7G,KAAKsN,cAAe,EACA,IAAhBtN,KAAKwN,QAAuC,IAAvBxN,KAAKuN,OAAO5M,QACjCX,KAAKwG,YAAYd,WAErB1F,KAAKuD,eAET8J,EAAmBnN,UAAU0K,WAAa,SAAUF,EAAY0B,EAAYzB,EAAY0B,EAAYC,GAChGtM,KAAKwG,YAAY7E,KAAKyK,IAE1BiB,EAAmBnN,UAAU4K,eAAiB,SAAUwB,GACpD,IAAIiB,EAASvN,KAAKuN,OAClBvN,KAAKiE,OAAOqI,GACZtM,KAAKwN,SACDD,EAAO5M,OAAS,EAChBX,KAAK2G,MAAM4G,EAAOM,SAEG,IAAhB7N,KAAKwN,QAAgBxN,KAAKsN,cAC/BtN,KAAKwG,YAAYd,YAGlB2H,EA/D4B,CAgErCnB,GEhGK,SAAS4B,GAAS3L,GACrB,OAAOA,ECCJ,SAAS4L,KACZ,OAAO,SAAkC9F,GACrC,OAAOA,EAAOF,KAAK,IAAIiG,GAAiB/F,KAGhD,IAAI+F,GAAkC,WAClC,SAASA,EAAiBC,GACtBjO,KAAKiO,YAAcA,EAYvB,OAVAD,EAAiB9N,UAAUU,KAAO,SAAU8F,EAAYuB,GACpD,IAAIgG,EAAcjO,KAAKiO,YACvBA,EAAYC,YACZ,IAAIC,EAAa,IAAIC,GAAmB1H,EAAYuH,GAChD1J,EAAe0D,EAAOL,UAAUuG,GAIpC,OAHKA,EAAW3K,SACZ2K,EAAWE,WAAaJ,EAAYK,WAEjC/J,GAEJyJ,EAd0B,GAgBjCI,GAAoC,SAAUrI,GAE9C,SAASwI,EAAmB/H,EAAayH,GACrC,IAAI/H,EAAQH,EAAOnF,KAAKZ,KAAMwG,IAAgBxG,KAE9C,OADAkG,EAAM+H,YAAcA,EACb/H,EA0BX,OA9BAhB,EAAkBqJ,EAAoBxI,GAMtCwI,EAAmBrO,UAAU0D,aAAe,WACxC,IAAIqK,EAAcjO,KAAKiO,YACvB,GAAKA,EAAL,CAIAjO,KAAKiO,YAAc,KACnB,IAAIF,EAAWE,EAAYC,UAC3B,GAAIH,GAAY,EACZ/N,KAAKqO,WAAa,UAItB,GADAJ,EAAYC,UAAYH,EAAW,EAC/BA,EAAW,EACX/N,KAAKqO,WAAa,SADtB,CAIA,IAAIA,EAAarO,KAAKqO,WAClBG,EAAmBP,EAAYQ,YACnCzO,KAAKqO,WAAa,MACdG,GAAsBH,GAAcG,IAAqBH,GACzDG,EAAiBjL,oBAlBjBvD,KAAKqO,WAAa,MAqBnBE,EA/B4B,CAgCrCzI,GCNE4I,GA3CuC,SAAU3I,GAEjD,SAAS4I,EAAsB1G,EAAQ2G,GACnC,IAAI1I,EAAQH,EAAOnF,KAAKZ,OAASA,KAKjC,OAJAkG,EAAM+B,OAASA,EACf/B,EAAM0I,eAAiBA,EACvB1I,EAAMgI,UAAY,EAClBhI,EAAM2I,aAAc,EACb3I,EAgCX,OAvCAhB,EAAkByJ,EAAuB5I,GASzC4I,EAAsBzO,UAAU4H,WAAa,SAAUpB,GACnD,OAAO1G,KAAK8O,aAAalH,UAAUlB,IAEvCiI,EAAsBzO,UAAU4O,WAAa,WACzC,IAAIpF,EAAU1J,KAAK+O,SAInB,OAHKrF,IAAWA,EAAQpD,YACpBtG,KAAK+O,SAAW/O,KAAK4O,kBAElB5O,KAAK+O,UAEhBJ,EAAsBzO,UAAUoO,QAAU,WACtC,IAAID,EAAarO,KAAKyO,YActB,OAbKJ,IACDrO,KAAK6O,aAAc,GACnBR,EAAarO,KAAKyO,YAAc,IAAIpL,GACzBe,IAAIpE,KAAKiI,OACfL,UAAU,IAAIoH,GAAsBhP,KAAK8O,aAAc9O,QACxDqO,EAAW7K,QACXxD,KAAKyO,YAAc,KACnBJ,EAAahL,EAAaiB,OAG1BtE,KAAKyO,YAAcJ,GAGpBA,GAEXM,EAAsBzO,UAAU6N,SAAW,WACvC,OAAOA,KAAsB/N,OAE1B2O,EAxC+B,CAyCxCjH,GAE2CxH,UAClC+O,GAAkC,CACzCjH,SAAU,CAAElG,MAAO,MACnBoM,UAAW,CAAEpM,MAAO,EAAGoN,UAAU,GACjCH,SAAU,CAAEjN,MAAO,KAAMoN,UAAU,GACnCT,YAAa,CAAE3M,MAAO,KAAMoN,UAAU,GACtCpH,WAAY,CAAEhG,MAAO4M,GAAiB5G,YACtC+G,YAAa,CAAE/M,MAAO4M,GAAiBG,YAAaK,UAAU,GAC9DJ,WAAY,CAAEhN,MAAO4M,GAAiBI,YACtCR,QAAS,CAAExM,MAAO4M,GAAiBJ,SACnCP,SAAU,CAAEjM,MAAO4M,GAAiBX,WAEpCiB,GAAuC,SAAUjJ,GAEjD,SAASoJ,EAAsB3I,EAAayH,GACxC,IAAI/H,EAAQH,EAAOnF,KAAKZ,KAAMwG,IAAgBxG,KAE9C,OADAkG,EAAM+H,YAAcA,EACb/H,EAwBX,OA5BAhB,EAAkBiK,EAAuBpJ,GAMzCoJ,EAAsBjP,UAAU0G,OAAS,SAAU5D,GAC/ChD,KAAK4D,eACLmC,EAAO7F,UAAU0G,OAAOhG,KAAKZ,KAAMgD,IAEvCmM,EAAsBjP,UAAU2G,UAAY,WACxC7G,KAAKiO,YAAYY,aAAc,EAC/B7O,KAAK4D,eACLmC,EAAO7F,UAAU2G,UAAUjG,KAAKZ,OAEpCmP,EAAsBjP,UAAU0D,aAAe,WAC3C,IAAIqK,EAAcjO,KAAKiO,YACvB,GAAIA,EAAa,CACbjO,KAAKiO,YAAc,KACnB,IAAII,EAAaJ,EAAYQ,YAC7BR,EAAYC,UAAY,EACxBD,EAAYc,SAAW,KACvBd,EAAYQ,YAAc,KACtBJ,GACAA,EAAW9K,gBAIhB4L,EA7B+B,CA8BxCtF,GCxFF,SAASuF,KACL,OAAO,IAAIrF,ECYf,SAASsF,GAAuBC,GAC5B,IAAK,IAAIC,KAAOD,EACZ,GAAIA,EAAyBC,KAASF,GAClC,OAAOE,EAGf,MAAM1M,MAAM,qDAuBhB,IAAI2M,GAAmBH,GAAuB,CAAEI,eAAgBJ,KAC5DK,GAAmBL,GAAuB,CAAEM,eAAgBN,KAC5DO,GAAoBP,GAAuB,CAAEQ,gBAAiBR,KAC9DS,GAAkBT,GAAuB,CAAEU,cAAeV,KAC1DW,GAAcX,GAAuB,CAAEY,UAAWZ,KAClDa,GAAgBb,GAAuB,CAAEc,YAAad,KAOtDe,GAAgBf,GAAuB,CAAEgB,kBAAmBhB,KAyBhE,SAASiB,GAAiBC,GACtB,MAAO,CACHC,WAAYD,EAAKC,YAAc,KAAMC,QAASF,EAAKE,QAAS3O,WAAOwD,GAiC3E,SAASoL,GAAiBC,GACtB,OAAOA,GAAQA,EAAK9Q,eAAe+P,IAAqBe,EAAKf,IAAqB,KAOtF,SAASgB,GAAeD,GACpB,OAAOA,GAAQA,EAAK9Q,eAAeiQ,IAAmBa,EAAKb,IAAmB,KAkDlF,IAAIe,GAAgC,WAChC,SAASA,EAAeC,EAAOC,GAC3B/Q,KAAK8Q,MAAQA,EAEb9Q,KAAKgR,eAAiB,iBAElBhR,KAAK6P,qBADOvK,IAAZyL,EACuBT,GAAiB,CACpCE,WAAYO,EAAQP,YAAc,OAClCC,QAASM,EAAQN,eAIEnL,EAI/B,OADAuL,EAAe3Q,UAAU+C,SAAW,WAAc,MAAO,kBAAoBjD,KAAK8Q,OAC3ED,EAhBwB,GA2B/BI,GAAa,iBAqDjB,SAASC,GAAmB/N,EAAMgO,EAAOC,GACrC,IAAIC,EAfR,SAA0BF,GACtB,OAAO,WAEH,IADA,IAAIG,EAAO,GACFrI,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpCqI,EAAKrI,GAAMvI,UAAUuI,GAEzB,GAAIkI,EAAO,CACP,IAAII,EAASJ,EAAMtQ,WAAM,EAAQmB,EAASsP,IAC1C,IAAK,IAAIE,KAAYD,EACjBvR,KAAKwR,GAAYD,EAAOC,KAMrBC,CAAiBN,GAChC,SAASO,IAEL,IADA,IAIIC,EAJAL,EAAO,GACFrI,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpCqI,EAAKrI,GAAMvI,UAAUuI,GAGzB,GAAIjJ,gBAAgB0R,EAEhB,OADAL,EAASxQ,MAAMb,KAAMsR,GACdtR,KAEX,IAAI4R,EAAqB,KAAMD,EAAKD,GAAuBvK,KAAKtG,MAAM8Q,EAAI3P,EAAS,MAAC,GAASsP,KAE7F,OADAO,EAAeC,WAAaF,EACrBC,EACP,SAASA,EAAeE,EAAKC,EAAWjO,GAQpC,IALA,IAAIkO,EAAaF,EAAIlS,eAAeoR,IAChCc,EAAId,IACJzR,OAAO0S,eAAeH,EAAKd,GAAY,CAAEnP,MAAO,KAAMmP,IAGnDgB,EAAWtR,QAAUoD,GACxBkO,EAAWpQ,KAAK,MAGpB,OADCoQ,EAAWlO,GAASkO,EAAWlO,IAAU,IAAIlC,KAAK+P,GAC5CG,GAQf,OALIX,IACAM,EAAsBxR,UAAYV,OAAOW,OAAOiR,EAAYlR,YAEhEwR,EAAsBxR,UAAU8Q,eAAiB7N,EACjDuO,EAAsBS,cAAgBT,EAC/BA,EA+EX,IAAIU,GAA+B,IAAIvB,GAAe,6BA+ElDwB,GACJ,SAAWA,UAMPA,EAAwBA,EAAgC,OAAI,GAAK,SAKjEA,EAAwBA,EAAiC,QAAI,GAAK,UAX3DA,EAAX,CAYE,IAyDEC,GAA6B,oBAAXC,QAA0BA,OAC5CC,GAAyB,oBAATC,MAAqD,oBAAtBC,mBAC/CD,gBAAgBC,mBAAqBD,KAIrCE,GAH6B,oBAAXC,QAA0BA,QAGtBN,IAAYE,GAClCK,GAAUxN,QAAQwD,QAAQ,GAC1BiK,GAAkB,KACtB,SAASC,KACL,IAAKD,GAAiB,CAClB,IAAIE,EAAWL,GAAgB,OAC/B,GAAIK,GAAYA,EAASzR,SACrBuR,GAAkBE,EAASzR,cAK3B,IADA,IAAI0R,EAAOzT,OAAO0T,oBAAoBC,IAAIjT,WACjCM,EAAI,EAAGA,EAAIyS,EAAKtS,SAAUH,EAAG,CAClC,IAAI+O,EAAM0D,EAAKzS,GACH,YAAR+O,GAA6B,SAARA,GACrB4D,IAAIjT,UAAUqP,KAAS4D,IAAIjT,UAAmB,UAC9C4S,GAAkBvD,IAKlC,OAAOuD,GAEX,SAASM,GAAkB1Q,GACH,oBAAT2Q,KAEPR,GAAQ1H,KAAK,WAAczI,GAAMA,EAAG7B,MAAM,KAAM,QAGhDwS,KAAKC,QAAQF,kBAAkB,oBAAqB1Q,GAI5D,SAAS6Q,GAAeC,EAAGjU,GACvB,OAAOiU,IAAMjU,GAAkB,iBAANiU,GAA+B,iBAANjU,GAAkBkU,MAAMD,IAAMC,MAAMlU,GAE1F,SAASmU,GAAUC,GACf,GAAqB,iBAAVA,EACP,OAAOA,EAEX,GAAIA,aAAiBhU,MACjB,MAAO,IAAMgU,EAAM5Q,IAAI2Q,IAAWxQ,KAAK,MAAQ,IAEnD,GAAa,MAATyQ,EACA,MAAO,GAAKA,EAEhB,GAAIA,EAAMC,eACN,MAAO,GAAKD,EAAMC,eAEtB,GAAID,EAAMxQ,KACN,MAAO,GAAKwQ,EAAMxQ,KAEtB,IAAI0Q,EAAMF,EAAM1Q,WAChB,GAAW,MAAP4Q,EACA,MAAO,GAAKA,EAEhB,IAAIC,EAAeD,EAAIjP,QAAQ,MAC/B,OAAyB,IAAlBkP,EAAsBD,EAAMA,EAAIE,UAAU,EAAGD,GAsBxD,IAAIE,GAAkB3E,GAAuB,CAAE2E,gBAAiB3E,KAahE,SAAS4E,GAAWC,GAGhB,OAFAA,EAAaF,gBAAkBC,GAC/BC,EAAajR,SAAW,WAAc,OAAOyQ,GAAU1T,SAChDkU,EAeX,SAASC,GAAkBxD,GACvB,IAAIjO,EAAKiO,EACT,MAAkB,mBAAPjO,GAAqBA,EAAG7C,eAAemU,KAC9CtR,EAAGsR,kBAAoBC,GAChBvR,IAGAiO,EAiHf,IAAIyD,GACJ,SAAWA,UASPA,EAAkBA,EAA4B,SAAI,GAAK,WASvDA,EAAkBA,EAA0B,OAAI,GAAK,SAIrDA,EAAkBA,EAAwB,KAAI,GAAK,OAQnDA,EAAkBA,EAA6B,UAAI,GAAK,YA9BjDA,EAAX,CA+BE,IAyEEC,GAAY,GACZC,GAAc,GAcdC,GAAmB,EA0EvB,SAASC,GAAoB7D,GAKzB,OAJU8D,GAAgB9D,IAoK9B,SAAyBA,GACrB,OAAOA,EAAKjB,KAAqB,KArKEgF,CAAgB/D,GAMvD,SAASgE,GAAehE,GAKpB,OA4JJ,SAAoBA,GAChB,OAAOA,EAAKX,KAAgB,KAjKlB4E,CAAWjE,GAwEzB,SAASkE,GAAalJ,EAAKmJ,GACvB,GAAW,MAAPnJ,EACA,OAAO0I,GACX,IAAIU,EAAY,GAChB,IAAK,IAAIC,KAAerJ,EACpB,GAAIA,EAAI9L,eAAemV,GAAc,CACjC,IAAIC,EAAatJ,EAAIqJ,GACjBE,EAAeD,EACftV,MAAMuC,QAAQ+S,KACdC,EAAeD,EAAW,GAC1BA,EAAaA,EAAW,IAE5BF,EAAUE,GAAcD,EACpBF,IACCA,EAAUG,GAAcC,GAIrC,OAAOH,EAgEX,SAASN,GAAgB9D,GACrB,OAAOA,EAAKnB,KAAqB,KAwFrC,IAAI2F,GAAQ,EACRC,GAAQ,EACRC,GAAS,EACTC,GAAO,EACPC,GAAU,EACVC,GAAO,EACPC,GAAY,EACZC,GAAgB,EAChBC,GAAU,EACVC,GAAU,EACVC,GAAW,GACXC,GAAmB,GACnBC,GAAW,GACXC,GAAY,GACZC,GAAO,GACPC,GAAkB,GAElBC,GAAmB,GAEnBC,GAAgB,GAchBC,GAAe,EACfC,GAAQ,EAGRC,GAAS,EACTC,GAAgB,EAQhBC,GAAoB,EAYpBC,GAAwB,gBASxBC,GAAQ,EACRC,GAAkB,EAClBC,GAA6B,EAC7BC,IAAsB,EA+FtBC,GAAqC,WAmBrC,OAlBA,SAIAtG,EAIAuG,EAAgBC,GACZjX,KAAKyQ,QAAUA,EAKfzQ,KAAKkX,WAAY,EACjBlX,KAAKmX,oBAAsBH,EAC3BhX,KAAKoX,WAAaH,GAjBc,GAqBpCI,GAAmBN,GAAoB7W,UAuB3C,SAASoX,GAAYxV,GACjB,MAAoB,mBAATA,EACAA,EAAMqB,MAAQrB,EACL,iBAATA,EACAA,EACE,MAATA,EACO,GACS,iBAATA,GAA0C,mBAAdA,EAAM6O,KAClC7O,EAAM6O,KAAKxN,MAAQrB,EAAM6O,KAC7B,GAAK7O,EA0ChB,SAASyV,GAAiBzV,GACtB,KAAOnC,MAAMuC,QAAQJ,IACjBA,EAAQA,EAAM0T,IAElB,OAAO1T,EASX,SAAS0V,GAAiBC,EAAOC,GAC7B,OAAOH,GAAiBG,EAASD,EAAM1T,QAE3C,SAAS4T,GAAS5T,EAAO6T,GAGrB,OAAOA,EAAKzC,IAAO0C,KAAK9T,EAAQqS,IAEpC,SAAS0B,GAAwBC,EAAWL,GAExC,IAAIM,EAAYN,EAASK,GACzB,OAAOC,EAAUrX,QAAUyV,GAAgB4B,EAAYA,EAAUxC,IAKrE,SAASyC,GAAYR,GACjB,OAA+C,IAAzB,EAAdA,EAAMS,OAElB,SAASC,GAAeC,GACpB,OAAwB,OAAjBA,EAAIC,SAEf,SAASC,GAAaxW,GAElB,OAAOnC,MAAMuC,QAAQJ,IAAUA,EAAMnB,SAAW8V,GAEpD,SAAS8B,GAAWC,GAChB,OAA8C,IAAtB,IAAhBA,EAAOpD,KA0BnB,SAASqD,GAAgBD,GAErB,OAAOA,EAAO9B,IAElB,SAASgC,GAAiBF,GACtB,IAAI1W,EAAQ2W,GAAgBD,GAC5B,OAAI1W,EACOnC,MAAMuC,QAAQJ,GAASA,EAAQA,EAAM6W,MAEzC,KAEX,SAASC,GAAkBC,GACvB,OAAOA,IAAmB/B,GAE9B,SAASgC,GAAuBD,GAC5B,OAAwB,MAAjBA,EAEX,SAASE,GAA4BF,GACjC,OAAOA,GAAkB,GAW7B,SAASG,GAAsBC,EAAUC,GAOrC,IANA,IAAIC,EAAaJ,GAA4BE,GACzCG,EAAaF,EAKVC,EAAa,GAChBC,EAAaA,EAAWjD,IACxBgD,IAEJ,OAAOC,EAiCX,IAAIC,IAAqD,oBAA1BC,uBAAyCA,uBACpE7T,YACF0B,KAAKwL,IAkBP,SAAS4G,GAAkBZ,GAEvB,IADA,IAAIa,EAAYb,EAAMlD,IACf+D,GAAgC,IAAnBA,EAAU7I,MAG1B6I,GADAb,EAAQA,EAAMxC,KACIV,IAEtB,OAAOkD,EA+CX,IA+EIc,GA8UAC,GAiBAC,GAsCAC,GApdAC,GAAS3I,GAAmB,SAAU,SAAUyC,GAAS,MAAO,CAAGA,MAAOA,KAO1EmG,GAAW5I,GAAmB,YAO9B6I,GAAO7I,GAAmB,QAO1B8I,GAAW9I,GAAmB,YAqB9B+I,GACJ,SAAWA,UAEPA,EAAYA,EAAqB,QAAI,GAAK,UAK1CA,EAAYA,EAAkB,KAAI,GAAK,OAEvCA,EAAYA,EAAkB,KAAI,GAAK,OAEvCA,EAAYA,EAAsB,SAAI,GAAK,WAE3CA,EAAYA,EAAsB,SAAI,GAAK,WAbpCA,EAAX,CAcE,IAOEC,QAAmB5U,EACvB,SAAS6U,GAAmBC,GACxB,IAAIC,EAASH,GAEb,OADAA,GAAmBE,EACZC,EAeX,SAASC,GAAwBC,GAC7B,IAAIC,EAAWf,GAEf,OADAA,GAAwBc,EACjBC,EAcX,SAASC,GAAO9G,EAAOuE,GAEnB,YADc,IAAVA,IAAoBA,EAAQ+B,GAAYS,UACpCjB,IAdZ,SAA4B9F,EAAOuE,GAE/B,QADc,IAAVA,IAAoBA,EAAQ+B,GAAYS,cACnBpV,IAArB4U,GACA,MAAM,IAAIrX,MAAM,qDAEf,OAAyB,OAArBqX,GACES,GAAmBhH,OAAOrO,EAAW4S,GAGrCgC,GAAiBU,IAAIjH,EAAOuE,EAAQ+B,GAAYH,SAAW,UAAOxU,EAAW4S,KAKnCvE,EAAOuE,GAShE,SAASyC,GAAmBhH,EAAOkH,EAAe3C,GAC9C,IAAI4C,EAAgBpK,GAAiBiD,GACrC,GAAImH,GAA6C,QAA5BA,EAActK,WAC/B,YAA+BlL,IAAxBwV,EAAchZ,MAAsBgZ,EAAchZ,MAAQgZ,EAAcrK,UAC3EqK,EAAchZ,MAEtB,GAAIoW,EAAQ+B,GAAYH,SACpB,OAAO,KACX,QAAsBxU,IAAlBuV,EACA,OAAOA,EACX,MAAM,IAAIhY,MAAM,wBAA0B6Q,GAAUC,GAAS,KAEjE,SAASoH,GAAWC,GAEhB,IADA,IAAI1J,EAAO,GACF9Q,EAAI,EAAGA,EAAIwa,EAAMra,OAAQH,IAAK,CACnC,IAAIya,EAAMD,EAAMxa,GAChB,GAAIb,MAAMuC,QAAQ+Y,GAAM,CACpB,GAAmB,IAAfA,EAAIta,OACJ,MAAM,IAAIkC,MAAM,wCAIpB,IAFA,IAAI8N,OAAOrL,EACP4S,EAAQ+B,GAAYS,QACfQ,EAAI,EAAGA,EAAID,EAAIta,OAAQua,IAAK,CACjC,IAAIC,EAAOF,EAAIC,GACXC,aAAgBrB,IAAoC,aAAxBqB,EAAKnK,eACjCkH,GAAS+B,GAAYH,SAEhBqB,aAAgBnB,IAAoC,aAAxBmB,EAAKnK,eACtCkH,GAAS+B,GAAYD,SAEhBmB,aAAgBpB,IAAgC,SAAxBoB,EAAKnK,eAClCkH,GAAS+B,GAAYF,KAGrBpJ,EADKwK,aAAgBtB,GACdsB,EAAKxH,MAGLwH,EAGf7J,EAAKzP,KAAK4Y,GAAO9J,EAAMuH,SAGvB5G,EAAKzP,KAAK4Y,GAAOQ,IAGzB,OAAO3J,EAqFX,SAAS8J,GAAkBhD,EAAKiD,EAAO7a,GAC/B4X,EAAIkD,mBACHD,EAAME,eAAiBF,EAAME,aAAe,KAAK1Z,KAAKrB,EAAG4X,EAAIkD,kBAE9DlD,EAAIoD,uBACHH,EAAME,eAAiBF,EAAME,aAAe,KAAK1Z,KAAKrB,EAAG4X,EAAIoD,sBAC7DH,EAAMI,oBAAsBJ,EAAMI,kBAAoB,KAAK5Z,KAAKrB,EAAG4X,EAAIoD,sBAIhF,SAASE,GAAetD,EAAKiD,EAAO7a,GAC5B4X,EAAIuD,gBACHN,EAAMO,YAAcP,EAAMO,UAAY,KAAK/Z,KAAKrB,EAAG4X,EAAIuD,eAExDvD,EAAIyD,oBACHR,EAAMO,YAAcP,EAAMO,UAAY,KAAK/Z,KAAKrB,EAAG4X,EAAIyD,mBACvDR,EAAMS,iBAAmBT,EAAMS,eAAiB,KAAKja,KAAKrB,EAAG4X,EAAIyD,mBAI1E,SAASE,GAAkB3D,EAAKiD,EAAO7a,GACd,MAAjB4X,EAAI4D,YACHX,EAAMY,eAAiBZ,EAAMY,aAAe,KAAKpa,KAAKrB,EAAG4X,EAAI4D,WAmBtE,SAASE,GAAaC,EAAaC,EAAUC,EAAYC,GACrD,IAAIA,EAAJ,CAEA,IAAIC,EAAmC,EAArBJ,EAAY/G,IAAkCgH,EAAWC,EACvEE,GACAC,GAAUL,EAAaI,IAU/B,SAASC,GAAUL,EAAaM,GAC5B,IAAK,IAAIjc,EAAI,EAAGA,EAAIic,EAAI9b,OAAQH,GAAK,EACjCic,EAAIjc,EAAI,GAAGI,KAAKub,EAAYM,EAAIjc,KAiGxC,SAASkc,KACL,OAAO9C,GAgBX,SAAS+C,KAEL,OAAOjD,GAEX,SAASkD,GAAyBnF,GAC9BiC,GAAwBjC,EAE5B,SAASoF,GAAoBpF,EAAOG,GAChC8B,GAAwBjC,EACxBmC,GAAQhC,EAQZ,SAASkF,KAEL,OAAOnD,GAEX,SAASoD,GAAYjb,GACjB6X,GAAW7X,EAsBf,SAASkb,GAAepF,GAEpB,YADa,IAATA,IAAmBA,EAAOgC,IACkB,IAA1B,EAAdhC,EAAKxC,KAyBjB,IAAIkH,IAAqB,EACzB,SAASW,KAEL,OAAOX,GAEX,SAASY,GAAsBC,GAC3Bb,GAAqBa,EAGzB,IAAIC,IAAoB,EACxB,SAASC,KACL,OAAOD,GAEX,SAASE,GAAqBxb,GAC1Bsb,GAAoBtb,EA2BxB,SAASyb,GAAUC,EAASC,GACxB,IAAIC,EAAU9D,GACV4D,IAEAJ,GADYI,EAAQrI,IACMiI,mBAM9B,OAHA1D,GAAwB+D,EACxB9D,IAAW,EACXC,GAAuB4D,EAChBE,EA8BX,SAASC,GAAUH,GACf,IAAInC,EAAQzB,GAAMzE,IACd6H,GAAepD,IACfA,GAAMxE,MAAU,GAGhB8G,GAAatC,GAAOyB,EAAMO,UAAWP,EAAMS,eAAgBQ,IAE3D1C,GAAMxE,MAAU,GAChBwE,GAAMxE,KAAU,GAChBwE,GAAMlE,IAAiB2F,EAAMuC,mBAEjCL,GAAUC,EAAS,MA8CvB,IAAIK,IAAuB,EAC3B,SAASC,GAAwBC,GAC7B,IAAIC,EAAWH,GAEf,OADAA,GAAuBE,EAChBC,EAOX,IACIC,GAAaC,IAEbC,GAAkB,EA4EtB,SAASC,GAAY3B,EAAK4B,GACtB5B,EAAI5a,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGwc,GAErC,SAASC,GAAiB7G,EAAOC,GAC7B,OAA6B,IAAzBD,EAAM8G,eAGL9G,EAAM3S,QAAU2S,EAAM3S,OAAOyZ,gBAAkB9G,EAAM8G,eAGH,MAAnD7G,EAASD,EAAM8G,cAAgB3H,KACvB,EAGDa,EAAM8G,cASrB,SAASC,GAA0B/G,EAAOG,GACtC,GAAIH,EAAM3S,SAA0C,IAAhC2S,EAAM3S,OAAOyZ,cAC7B,OAAO9G,EAAM3S,OAAOyZ,cAOxB,IAFA,IAAId,EAAY7F,EAAKnC,IACjB0D,EAAa,EACVsE,IAA0C,IAA7BA,EAAUc,eAE1Bd,GADA7F,EAAOA,EAAKzB,KACOyB,EAAKnC,IAAa,KACrC0D,IAEJ,OAAOsE,EACHA,EAAUc,cAAiBpF,GAAc,IACxC,EA2KT,IAAIsF,GAAY,GAChB,SAASC,GAAuBH,EAAe5F,EAAOhF,EAAOgL,EAAezG,EAAO0G,GAC/E,IAAIC,EAAelG,EAAMxD,IACrBsC,EAAQoH,EAAahH,KAAK0G,EAAgB5H,IAsB1CmI,EAkBR,SAAmCrH,EAAOkB,EAAOhF,EAAOoL,EAAwBC,GAW5E,IAVA,IACIC,EAAsBxH,EAAMyH,gBAC5BC,EAFQxG,EAAMxD,IAEO0C,KACrBuH,EAAyC,MAAtBH,EACnBI,EAAkB5H,EAAM6H,eAExBC,EAAwBN,GAAuB,GAG/CO,EAAWR,EAAoBI,EAAmBG,EAJnC9H,EAAMgI,aAKhBjf,EAHWue,EAAyBK,EAAmBA,EAAmBG,EAGvD/e,EAAIgf,EAAUhf,IAAK,CAC3C,IAAIkf,EAAqBP,EAAa3e,GACtC,GAAIA,EAAI6e,GAAmB1L,IAAU+L,GACjClf,GAAK6e,GAAmBK,EAAmB/O,OAASgD,EACpD,OAAOnT,EAGf,GAAIwe,EAAmB,CACnB,IAAIW,EAASR,EAAaE,GAC1B,GAAIM,GAAUxH,GAAewH,IAAWA,EAAOhP,OAASgD,EACpD,OAAO0L,EAGf,OAAO,KA1CaO,CAA0BnI,EAAOkB,EAAOhF,EAnBd,MAAjBgL,EAQxB1G,GAAYR,IAAUoG,GAOtBc,GAAiBE,GAAgC,IAAfpH,EAAM9G,KAGpBuH,EAAQ+B,GAAY4F,MAASjB,IAAqBnH,GAE3E,OAAsB,OAAlBqH,EACOgB,GAAkBjB,EAAahH,KAAMc,EAAOmG,EAAerH,GAG3DgH,GA8Cf,SAASqB,GAAkBC,EAAOC,EAAOjc,EAAO0T,GAC5C,IAvwCe9L,EAuwCX7J,EAAQke,EAAMjc,GAClB,GAtwCc,OAFC4H,EAwwCD7J,IAtwCsB,iBAAP6J,GAAmBnM,OAAOygB,eAAetU,IAAQ0L,GAswCxD,CAClB,IAAI5G,EAAU3O,EACd,GAAI2O,EAAQyG,UACR,MAAM,IAAIrU,MAAM,oBAAsByU,GAAYyI,EAAMhc,KAE5D,IAAImc,EAA+BpC,GAAwBrN,EAAQ0G,qBACnE1G,EAAQyG,WAAY,EACpB,IAAIiJ,OAA+B,EAC/B1P,EAAQ2G,aACR+I,EAA+B7F,GAAwB7J,EAAQ2G,aAEnE,IAAIgJ,EAA4BzD,KAC5B0D,EAAY3D,KAChBG,GAAoBpF,EAAOuI,GAC3B,IACIle,EAAQke,EAAMjc,GAAS0M,EAAQA,QAAQ,KAAMsP,EAAOC,EAAOvI,WAGvDhH,EAAQ2G,YACRkD,GAAwB6F,GAC5BrC,GAAwBoC,GACxBzP,EAAQyG,WAAY,EACpB2F,GAAoBuD,EAA2BC,IAGvD,OAAOve,EAqBX,SAASwe,GAAcC,EAAWhC,EAAeiC,GAI7C,IAEIC,EAAiB,GAAZF,EACLG,EAAiB,GAAZH,EAeT,UAjBqB,IAAZA,EAQGE,EAAMC,EAAKF,EAAajC,EAAgB,GAAKiC,EAAajC,EAAgB,GAC7EmC,EAAKF,EAAajC,EAAgB,GAAKiC,EAAajC,EAAgB,GAGjEkC,EAAMC,EAAKF,EAAajC,EAAgB,GAAKiC,EAAajC,EAAgB,GAC7EmC,EAAKF,EAAajC,EAAgB,GAAKiC,EAAajC,IAdlD,GAAKgC,GAqBpB,SAASI,GAAmBzI,EAAO0I,GAC/B,QAAS1I,EAAQ+B,GAAYF,MAAW7B,EAAQ+B,GAAY4F,MAAQe,GAMxE,IAAIC,GAA8B,WAC9B,SAASA,EAAaC,EAAQC,GAC1B/gB,KAAK8gB,OAASA,EACd9gB,KAAK+gB,OAASA,EAKlB,OAHAF,EAAa3gB,UAAU0a,IAAM,SAAUjH,EAAOkH,GAC1C,OArQR,SAA+BpD,EAAOkB,EAAOhF,EAAOuE,EAAO2C,GAEvD,QADc,IAAV3C,IAAoBA,EAAQ+B,GAAYS,SACxCjD,EAAO,CACP,IAAI8I,EAoNZ,SAA+B5M,GAE3B,GAAqB,iBAAVA,EACP,OAAOA,EAAMqN,WAAW,IAAM,EAElC,IAAIC,EAAUtN,EAAMvD,IACpB,MAA0B,iBAAZ6Q,EAAuBA,EAAUhD,GAAagD,EA1NxCC,CAAsBvN,GAGtC,GAAyB,mBAAd4M,EAA0B,CACjC,IAAIH,EAA4BzD,KAC5B0D,EAAY3D,KAChBG,GAAoBpF,EAAOkB,GAC3B,IACI,IAAI7W,EAAQye,IACZ,GAAa,MAATze,GAAmBoW,EAAQ+B,GAAYH,SAIvC,OAAOhY,EAHP,MAAM,IAAIe,MAAM,mBAAqByU,GAAY3D,GAAS,aAO9DkJ,GAAoBuD,EAA2BC,SAGlD,GAAwB,iBAAbE,EAAuB,CAKnC,IAAI5B,EAAgB,KAChBJ,EAAgBD,GAAiB7G,EAAOkB,GACxCE,EAAiB/B,GACjB8H,EAAmB1G,EAAQ+B,GAAY4F,KAAOtG,GAAkBZ,GAAOlD,IAAa,KAkBxF,MAduB,IAAnB8I,GAAwBrG,EAAQ+B,GAAYD,YAC5CnB,GAAoC,IAAnB0F,EAAuBC,GAA0B/G,EAAOkB,GACrEA,EAAM4F,EAAgB3H,IACrB+J,GAAmBzI,GAAO,IAI3ByG,EAAgBhG,EAAMxD,IACtBoJ,EAAgBzF,GAAuBD,GACvCF,EAAQK,GAAsBH,EAAgBF,IAL9C4F,GAAiB,IAUC,IAAnBA,GAAsB,CACzB1F,EAAiBF,EAAM4F,EAAgB3H,IAEvC,IAAIyE,EAAQ1C,EAAMxD,IAClB,GAAImL,GAAcC,EAAWhC,EAAelD,EAAMxD,MAAO,CAIrD,IAAIsJ,EAAWzC,GAAuBH,EAAe5F,EAAOhF,EAAOgL,EAAezG,EAAO0G,GACzF,GAAIuC,IAAa1C,GACb,OAAO0C,EAGXR,GAAmBzI,EAAOS,EAAMxD,IAAO0C,KAAK0G,EAAgB5H,MAAWiI,IACvE0B,GAAcC,EAAWhC,EAAe5F,IAGxCgG,EAAgBtD,EAChBkD,EAAgBzF,GAAuBD,GACvCF,EAAQK,GAAsBH,EAAgBF,IAM9C4F,GAAiB,IASjC,GAJIrG,EAAQ+B,GAAYH,eAA8BxU,IAAlBuV,IAEhCA,EAAgB,MAEoC,IAAnD3C,GAAS+B,GAAYF,KAAOE,GAAY4F,OAAc,CACvD,IAAIuB,EAAiBzI,EAAM9C,IAC3B,OAAIuL,EACOA,EAAexG,IAAIjH,EAAOkH,EAAe3C,EAAQ+B,GAAYH,UAG7Da,GAAmBhH,EAAOkH,EAAe3C,EAAQ+B,GAAYH,UAG5E,GAAI5B,EAAQ+B,GAAYH,SACpB,OAAOe,EAGP,MAAM,IAAIhY,MAAM,4BAA8ByU,GAAY3D,GAAS,KAqK5D0N,CAAsBrhB,KAAK8gB,OAAQ9gB,KAAK+gB,OAAQpN,OAAOrO,EAAWuV,IAEtEgG,EARsB,GAwJjC,SAASS,GAAe3I,EAAOZ,EAAWwJ,GACtC,MAAO,CACH5I,MAAOA,EACPZ,UAAWA,EACXwJ,OAAQA,EACRC,eAAWlc,EACXmc,gBAAYnc,EACZoc,eAAWpc,GA8BnB,SAASqc,GAAgBnJ,EAAQX,GAC7BW,EAAO9B,IAAyBmB,EAWpC,SAAS+J,GAAqBjJ,EAAOH,GAEjC,IADA,IAAIf,EAAQkB,EAAMxD,IAAO0M,WAClBpK,GAAO,CAEV,GADaD,GAAiBC,EAAOkB,KACtBH,EACX,OAAOf,EAAM1T,MAEjB0T,EAAQqK,GAAoBrK,GAEhC,OAAQ,EAKZ,SAASqK,GAAoBrK,GACzB,GAAIA,EAAMsK,MACN,OAAOtK,EAAMsK,MAEZ,GAAItK,EAAM9V,KACX,OAAO8V,EAAM9V,KAMb,KAAO8V,EAAM3S,SAAW2S,EAAM3S,OAAOnD,MACjC8V,EAAQA,EAAM3S,OAElB,OAAO2S,EAAM3S,QAAU2S,EAAM3S,OAAOnD,KAM5C,SAASqgB,GAAiBrJ,EAAOsJ,GAC7B,IAAIC,EAAmBvJ,EAAMxD,IAAOgN,WACpC,GAAID,EACA,IAAK,IAAI1hB,EAAI,EAAGA,EAAI0hB,EAAiBvhB,OAAQH,IAAK,CAC9C,IAAI4hB,EAAwBF,EAAiB1hB,GAE7C,GADoBsX,GAAwBsK,EAAuBzJ,GACjD/C,MAAaqM,EAC3B,OAAOG,OAOf,GAFwBtK,GAAwB1B,GAAeuC,GACzB/C,MAChBqM,EAGlB,OAAO7L,GAGf,OAAQ,EAsOZ,SAASiM,GAAa7J,EAAQ8J,QACF,IAApBA,IAA8BA,GAAkB,GACpD,IAAIpb,EA3aR,SAAqBsR,GACjB,IAmIyB2I,EAnIrBoB,EAAU9J,GAAgBD,GAC9B,GAAI+J,GAGA,GAAI5iB,MAAMuC,QAAQqgB,GAAU,CACxB,IAAI5J,EAAQ4J,EACRxK,OAAY,EACZyJ,OAAYlc,EACZmc,OAAanc,EACjB,IA0HiB6b,EA1HO3I,IA2Hb2I,EAASlhB,aAAekhB,EAASlhB,YAAYwP,eA3HvB,CAE7B,IAAkB,IADlBsI,EAAYiK,GAAiBrJ,EAAOH,IAEhC,MAAM,IAAI3V,MAAM,2DAEpB2e,EAAYhJ,OAEX,GAAwBA,KAuHTvY,aAvHSuY,EAuHevY,YAAY0P,eAvHlB,CAElC,IAAkB,IADlBoI,EAsLhB,SAA0BY,EAAO6J,GAO7B,IADA,IAAI/K,EAAQkB,EAAMxD,IAAO0M,WAClBpK,GAAO,CAGV,IAFA,IACIgL,EAAoBhL,EAAMgI,aACrBjf,EAFiBiX,EAAM6H,eAEE9e,EAAIiiB,EAAmBjiB,IACrD,GAAImY,EAAMnY,KAAOgiB,EACb,OAAO/K,EAAM1T,MAGrB0T,EAAQqK,GAAoBrK,GAEhC,OAAQ,EAvMgBiL,CAAiB/J,EAAOH,IAEhC,MAAM,IAAI3V,MAAM,2DAEpB4e,EA6MhB,SAAkC1J,EAAWY,EAAOgK,GAChD,IAAIlL,EAAQkB,EAAMxD,IAAO0C,KAAKE,GAC1B6K,EAAsBnL,EAAM6H,eAChC,OAA2B,GAAvBsD,EACOtO,IAE6B,EAAdmD,EAAMS,OAC5B0K,IACGjK,EAAMtO,MAAMuY,EAHKnL,EAAMgI,eAlNLoD,CAAyB9K,EAAWY,QAIjD,IAAkB,IADlBZ,EAAY6J,GAAqBjJ,EAAOH,IAEpC,OAAO,KAOf,IACIsK,EAAcrK,GADd8I,EAAShK,GAAiBoB,EAAMZ,KAEhC7Q,EAAW4b,IAAgBnjB,MAAMuC,QAAQ4gB,GACzCA,EACAxB,GAAe3I,EAAOZ,EAAWwJ,GAOrC,GALIC,QAAmClc,IAAtB4B,EAAQsa,YACrBta,EAAQsa,UAAYA,EACpBG,GAAgBza,EAAQsa,UAAWta,IAGnCua,QAAqCnc,IAAvB4B,EAAQua,WAA0B,CAChDva,EAAQua,WAAaA,EACrB,IAAK,IAAIjhB,EAAI,EAAGA,EAAIihB,EAAW9gB,OAAQH,IACnCmhB,GAAgBF,EAAWjhB,GAAI0G,GAGvCya,GAAgBza,EAAQqa,OAAQra,GAChCqb,EAAUrb,QASd,IALA,IAAI6b,EAAWvK,EAIXwK,EAAWD,EACRC,EAAWA,EAASC,YAAY,CACnC,IAAIC,EAAgBzK,GAAgBuK,GACpC,GAAIE,EAAe,CAUf,GATIvK,OAAQ,IAERA,EADAhZ,MAAMuC,QAAQghB,GACNA,EAGAA,EAAcvK,OAKtB,OAAO,KAEX,IAAI5U,EAAQ6d,GAAqBjJ,EAAOoK,GACxC,GAAIhf,GAAS,EAAG,CACZ,IAAIwd,EAEJI,GAFIJ,EAAShK,GAAiBoB,EAAM5U,IAChCmD,EAAUoa,GAAe3I,EAAO5U,EAAOwd,IAE3CgB,EAAUrb,EACV,QAKhB,OAAOqb,GAAW,KAoVJY,CAAY3K,GAC1B,IAAKtR,GAAWob,EACZ,MAAM,IAAIzf,MACN,qBAER,OAAOqE,EAqDX,SAASkc,GAAqBC,GAC1B,KAAMA,aAAgBC,MAClB,MAAM,IAAIzgB,MAAM,kCACpB,OAAOwf,GAAagB,GAExB,SAASE,GAAgBC,GAErB,MAAsC,kBAAxBA,EAASC,WAsD3B,SAASC,GAAclQ,EAAGjU,GACtB,OAAIiU,EAAErQ,MAAQ5D,EAAE4D,KACL,EACJqQ,EAAErQ,KAAO5D,EAAE4D,MAAQ,EAAI,EAuBlC,IAAIwgB,GAAoB,WAUxB,SAASC,GAA2B9hB,GAChC,IAEI,OAAgB,MAATA,EAAgBA,EAAMmB,WAAWoH,MAAM,EAAG,IAAMvI,EAE3D,MAAOL,GACH,MAAO,yDAWf,SAASoiB,GAAarQ,EAAGjU,GACrB,IAAIukB,EAAsBC,GAAmBvQ,GACzCwQ,EAAsBD,GAAmBxkB,GAC7C,OAAIukB,GAAuBE,EAyE/B,SAA2BxQ,EAAGjU,EAAG0kB,GAG7B,IAFA,IAAIC,EAAY1Q,EAAET,QACdoR,EAAY5kB,EAAEwT,UACL,CACT,IAAIqR,EAAQF,EAAUviB,OAClB0iB,EAAQF,EAAUxiB,OACtB,GAAIyiB,EAAMxiB,MAAQyiB,EAAMziB,KACpB,OAAO,EACX,GAAIwiB,EAAMxiB,MAAQyiB,EAAMziB,KACpB,OAAO,EACX,IAAKqiB,EAAWG,EAAMtiB,MAAOuiB,EAAMviB,OAC/B,OAAO,GAnFJwiB,CAAkB9Q,EAAGjU,EAAGskB,MAK1BC,IAFWtQ,GAAmB,iBAANA,GAA+B,mBAANA,GAEZwQ,IAD1BzkB,GAAmB,iBAANA,GAA+B,mBAANA,IAK3CgU,GAAeC,EAAGjU,GAwBrC,IAAIglB,GAA8B,WAC9B,SAASA,EAAaziB,GAClB9B,KAAKwkB,QAAU1iB,EAWnB,OARAyiB,EAAaE,KAAO,SAAU3iB,GAAS,OAAO,IAAIyiB,EAAaziB,IAK/DyiB,EAAaG,OAAS,SAAU5iB,GAAS,OAAOyiB,EAAaI,UAAU7iB,GAASA,EAAM0iB,QAAU1iB,GAEhGyiB,EAAaI,UAAY,SAAU7iB,GAAS,OAAOA,aAAiByiB,GAC7DA,EAbsB,GAoB7BK,GAA8B,WAC9B,SAASA,EAAaC,EAAeC,EAAcC,GAC/C/kB,KAAK6kB,cAAgBA,EACrB7kB,KAAK8kB,aAAeA,EACpB9kB,KAAK+kB,YAAcA,EAMvB,OADAH,EAAa1kB,UAAU8kB,cAAgB,WAAc,OAAOhlB,KAAK+kB,aAC1DH,EAVsB,GAYjC,SAASb,GAAmBpY,GACxB,QAmCa,QADGvK,EAlCAuK,IAmCmB,mBAANvK,GAAiC,iBAANA,KAjCjDzB,MAAMuC,QAAQyJ,MACdA,aAAewH,MACdJ,OAAuBpH,GA8BnC,IAAoBvK,EA6BpB,IAAI6jB,GAAY,GAkEZC,GAA0B,cAgB9B,SAASC,GAAqBC,GAC1B,QAAUA,EAAe,OAE7B,IAAIC,GAAsB,CACtBC,eAAgB,SAAUC,EAAaC,GAAgB,OAAOC,WAmBlE,SAASC,GAAgBjO,EAAO0E,GAC5B,OAAoB,MAAhB1E,EAAM3S,OAsBd,SAAuBqX,GACnB,IAAIsB,EAAYtB,EAAY1G,IAC5B,OAAOgI,GAAgC,IAAnBA,EAAU9M,KAC1B6G,GAAiBiG,EAAWtB,EAAY9G,KACxC,KAzBOsQ,CAAcxJ,GAId3E,GADWoO,GAAqBnO,GACF0E,GAM7C,SAASyJ,GAAqBnO,GAE1B,IADA,IAAI3S,EAAS2S,EAAM3S,OACZA,GAA0B,IAAhBA,EAAO6L,MACpB7L,EAASA,EAAOA,OAEpB,OAAOA,EAYX,SAAS+gB,GAAcpO,EAAOqO,GAC1B,IAAqB,IAAjBrO,EAAM1T,MAAc,CAGpB,IAAIgiB,EAAqBD,EAAa5P,IACtC,OAAO6P,GAAsB,EAAID,EAAazQ,IAAQ0Q,GAAsB,KAI5E,OAAOD,EAAazQ,IAAQoC,EAAM3S,OAAOf,OAOjD,SAASiiB,GAAyBC,EAAWrO,GACzC,IAAIsO,EAAYL,GAAcI,EAAWrO,GACzC,OAAOsO,EAAYA,EAAU1P,IAAiB,KASlD,IAAI2P,GAAsB,GAa1B,SAASC,GAAcC,EAAYC,EAAQlB,EAAUmB,EAAcC,GAK/D,IAJA,IAAIhN,EAAY6M,EAAWlR,IAAOkO,KAC9BoD,GAAuB,EACvBtK,EAAckK,EACd5O,EAAQ+B,EAAUuI,MACftK,GAAO,CACV,IAAIiP,EAAY,KAChB,GAAmB,IAAfjP,EAAM9G,KAA0B,CAChCgW,GAAkBL,EAAQlB,EAAUmB,EAAc/O,GAAiBC,EAAO0E,GAAcqK,GACxF,IAAII,EAAkBzK,EAAY1E,EAAM1T,OACpCuU,GAAasO,IAEbD,GAAkBL,EAAQlB,EAAUmB,EAAcK,EAAgBrQ,IAASiQ,QAG9E,GAAmB,IAAf/O,EAAM9G,KAA4B,CACvC,IAAIkW,EAAa1K,EAAY1E,EAAM1T,OACnC4iB,GAAkBL,EAAQlB,EAAUmB,EAAcM,EAAWtQ,IAASiQ,GAClED,IACAM,EAAWrQ,IAAiB+P,GAC5BM,EAAWvQ,IAAO3V,SAElB+lB,GADAvK,EAAc0K,EAAWvQ,IAAO,IACRnB,IAAOkO,KAG/BmD,EAAaK,EAAWtQ,UAG3B,GAAmB,IAAfkB,EAAM9G,KAA6B,CACxC,IAAImW,EAAgBvN,GAAkB4C,GAElC4K,EADgBD,EAAcrR,IACTuR,WAAWvP,EAAMuP,YAG1Cb,KAAsBM,GAAuBhP,EAC7C0O,KAAsBM,GAAuBtK,EACzC4K,IAEAL,GADAvK,EAAc2K,EAAczR,KACJF,IAAO0C,KAAKkP,EAAKhjB,aAK7C2iB,EAAYjP,EAAMsK,MAEtB,GAAkB,OAAd2E,EAcA,IAZmB,OAAfjP,EAAM9V,MAAgC,EAAd8V,EAAMS,QAC9BiE,EAAcgK,GAAoBM,KAClChP,EAAQ0O,GAAoBM,MAEhCC,EAAYjP,EAAM9V,MAQV+kB,GAAW,CAGf,GAAc,QADdjP,EAAQA,EAAM3S,QAAUqX,EAAYhH,IAAOkO,OACrB5L,IAAU+B,EAC5B,OAAO,KAEQ,IAAf/B,EAAM9G,OAEN6V,GADArK,EAAcA,EAAY9G,KACDoC,EAAM1T,OAAOwS,KAItCmQ,EAFe,IAAfjP,EAAM9G,MAAyBwL,EAAY7G,KAC3C6G,EAAcA,EAAY7G,KACFH,IAAOkO,KAGnB5L,EAAM9V,KAI9B8V,EAAQiP,GAOhB,SAASC,GAAkBL,EAAQlB,EAAUtgB,EAAQue,EAAMmD,GACxC,IAAXF,EACAnB,GAAqBC,GACjBA,EAAS6B,aAAaniB,EAAQue,EAAMmD,GACpC1hB,EAAOmiB,aAAa5D,EAAMmD,GAAY,GAE1B,IAAXF,EACLnB,GAAqBC,GACjBA,EAAS8B,YAAYpiB,EAAQue,GAC7Bve,EAAOoiB,YAAY7D,GAEP,IAAXiD,GAELlB,EAAS+B,YAAY9D,GAO7B,SAAS+D,GAA2Bf,EAAYgB,EAAYb,GACxD,IAAID,EAAeP,GAAyBK,EAAWlR,IAAOkO,KAAMgD,GAEhEE,GAEAH,GAAcC,EAAYgB,EAAa,EAAiB,EADzChB,EAAWtQ,IACwDwQ,EAAcC,GA+DxG,SAASc,GAAW3O,EAAOkO,EAAYzN,EAAYrV,EAAOwjB,GACtD,IAAIC,EAAQX,EAAWvQ,IACnBvS,EAAQ,IAERyjB,EAAMzjB,EAAQ,GAAGuR,IAAQqD,GAEzB5U,EAAQyjB,EAAM7mB,QACdgY,EAAMrD,IAAQkS,EAAMzjB,GACpByjB,EAAM3iB,OAAOd,EAAO,EAAG4U,KAGvB6O,EAAM3lB,KAAK8W,GACXA,EAAMrD,IAAQ,MAIdiS,GAAkB,IAClB5O,EAAMzC,IAAmBqR,EACzB5O,EAAMtD,IAAU+D,GAGhBT,EAAMpD,KACNoD,EAAMpD,IAAS+R,WAAWvjB,GAG9B4U,EAAMvD,KAAU,GAapB,SAASqS,GAAWZ,EAAYa,EAAaC,GACzC,IAAIH,EAAQX,EAAWvQ,IACnBsR,EAAeJ,EAAME,GAezB,OAdIA,EAAc,IACdF,EAAME,EAAc,GAAGpS,IAAQsS,EAAatS,KAEhDkS,EAAM3iB,OAAO6iB,EAAa,GACrBC,GACDP,GAA2BQ,GAAc,GAEzCA,EAAarS,KACbqS,EAAarS,IAASsS,aAE1BD,EAAa1R,KAAoB,EACjC0R,EAAavS,IAAU,KAEvBuS,EAAaxS,MAAU,GAChBwS,EAeX,SAASE,GAAcnP,GACnB,IAAIoP,EAAapP,EAAMxD,IAAO4S,WAC9B,OAAuB,IAAhBA,EAAoB,KAAOpP,EAAMoP,GAQ5C,SAASC,GAAapQ,GAClB,IAAIwN,EAAWxN,EAAK7B,IAChBoP,GAAqBC,IAAaA,EAAS+B,aAC3Cf,GAAcxO,EAAM,EAAiBwN,EAAU,MAlIvD,SAAyB6C,GAErB,IAAoC,IAAhCA,EAAS9S,IAAO4S,WAChB,OAAOG,GAAYD,GAGvB,IADA,IAAIE,EAAkBL,GAAcG,GAC7BE,GAAiB,CACpB,IAAIxmB,EAAO,KAaX,GAZIwmB,EAAgBxnB,QAAUyV,GAEf+R,EACFhT,IAAO4S,YAAc,IAC1BpmB,EAAOmmB,GAFAK,IAMKA,EACF7R,IAAO3V,SACjBgB,EAFYwmB,EAEK7R,IAAO,IAEpB,MAAR3U,EAAc,CAGd,KAAOwmB,IAAoBA,EAAgB7S,KAAS6S,IAAoBF,GACpEC,GAAYC,GACZA,EAAkBC,GAAeD,EAAiBF,GAEtDC,GAAYC,GAAmBF,GAC/BtmB,EAAOwmB,GAAmBA,EAAgB7S,IAE9C6S,EAAkBxmB,GAsGtB0mB,CAAgBzQ,GAEhBA,EAAKxC,KAAU,GAcnB,SAASgT,GAAeE,EAAOL,GAC3B,IAAIxQ,EACJ,OAAI6Q,EAAM3nB,QAAUyV,KAAkBqB,EAAQ6Q,EAAM7S,MACjC,IAAfgC,EAAM9G,KAGCkV,GAAcpO,EAAO6Q,GAIrBA,EAAMjT,MAAY4S,EAAW,KAAOK,EAAMjT,IAUzD,SAAS6S,GAAYC,GACjB,GAAIA,EAAgBxnB,QAAUyV,GAAe,CACzC,IAAIwB,EAAOuQ,GAuDnB,SAA2BvQ,GACvB,IACIqE,EADAZ,EAAQzD,EAAKzC,IAEJ,MAATkG,GAAwD,OAAtCY,EAAeZ,EAAMY,eACvCO,GAAU5E,EAAMqE,GA1DhBsM,CAAkB3Q,IA+DlB4Q,GADuB7P,EA7DDf,GA8DGzC,KAAUwD,EAAMxD,IAAOqT,mBAEhDhM,GAAU7D,EAAO6P,GArDzB,SAAyB7P,GACrB,IAAI8P,EAAW9P,EAAMxD,IAAOuT,QAC5B,GAAgB,MAAZD,EAAkB,CAElB,IADA,IAAIE,EAAWhQ,EAAMhD,IACZnV,EAAI,EAAGA,EAAIioB,EAAS9nB,OAAS,EAAGH,GAAK,EAC1C,GAA2B,iBAAhBioB,EAASjoB,GAAiB,CAEjC,IACIgjB,EAAWmF,EAASF,EAASjoB,EAAI,IACjC+gB,EAAShK,GAAiBoB,EAFpB8P,EAASjoB,EAAI,KAGnBooB,EAAqBH,EAASjoB,EAAI,GACJ,kBAAvBooB,EAEPrH,EAAOsH,oBAAoBJ,EAASjoB,GAAIgjB,EAAUoF,GAG9CA,GAAsB,EAEtBD,EAASC,KAITD,GAAUC,GAAoBrlB,cAGtC/C,GAAK,MAEuB,iBAAhBioB,EAASjoB,IAGrBsoB,EADgBH,EAASF,EAASjoB,OAMlCioB,EAASjoB,GAAGI,KADE+nB,EAASF,EAASjoB,EAAI,KAI5CmY,EAAMhD,IAAW,MAhDjBoT,CAAgBnR,GAChB,IAAI6F,EAAY7F,EAAKnC,IAEjBgI,GAAgC,IAAnBA,EAAU9M,MAA4BwU,GAAqBvN,EAAK7B,MAE7E6B,EAAK7B,IAAUiT,UAuD3B,IAA+BrQ,EACvB6P,EAKR,SAASS,GAAgBxR,EAAO0E,GAC5B,GAAI+M,GAAoBzR,EAAO0E,GAAc,CAIzC,GAAI5D,GAAW4D,GACX,OAAOgN,GAAiBhN,EAAYpG,IAAWyB,GAAiBC,EAAO0E,IAE3E,IAAIsB,EAAYtB,EAAY1G,IACxB2T,EAAc3R,EAAM3S,OAIxB,OAHmB,MAAfskB,GAA4C,IAArBA,EAAYzY,OACnC8G,EAAQ4R,GAA2BD,IAEhB,MAAhB3R,EAAM3S,QAAqC,IAAnB2Y,EAAU9M,KACrCqV,GAAyBvI,EAAWtB,GACpCuJ,GAAgBjO,EAAO0E,GAE/B,OAAO,KA0DX,SAAS+M,GAAoBzR,EAAO0E,GAChC,IA7BI+J,EA6BAoD,EAAc7R,EACd3S,EAAS2S,EAAM3S,OAanB,OAZI2S,EAAM3S,SACoB,IAAtB2S,EAAM3S,OAAO6L,KAEb7L,GADAwkB,EAAcD,GAA2B5R,IACpB3S,OAEM,IAAtB2S,EAAM3S,OAAO6L,OAElB7L,GADAwkB,EAAc1D,GAAqB0D,IACdxkB,SAGd,OAAXA,IACAA,EAASqX,EAAY1G,KACrB3Q,GAA0B,IAAhBA,EAAO6L,KA1CJ,OADbuV,EAAYL,GA4CsB/gB,EAAQqX,KA3CO,MAA5B+J,EAAU1P,IAzBf,MAwEqB8S,EAxE/BxkB,UAGgB,IAqEewkB,EArE/BxkB,OAAO6L,MAAmD,EAqE3B2Y,EArEYxkB,OAAOoT,OA6EhE,SAASqR,GAAmBnE,EAAUtgB,EAAQid,EAAOyE,GAC7CrB,GAAqBC,GACrBA,EAAS6B,aAAaniB,EAAQid,EAAOyE,GAGrC1hB,EAAOmiB,aAAalF,EAAOyE,GAAY,GAM/C,SAAS2C,GAAiB/D,EAAU/B,GAChC,OAAQ8B,GAAqBC,GAAYA,EAASnC,WAAWI,GAAQA,EAAKJ,WAkB9E,SAASuG,GAAYC,EAASC,EAAYvN,GAEtC,QADgB,IAAZsN,IAAsBA,EAAU,MACpB,OAAZA,GAAoBP,GAAoBQ,EAAYvN,GAAc,CAClE,IAAIiJ,EAAWjJ,EAAYpG,IACvB4T,EAAWjE,GAAgBgE,EAAYvN,GACvCyN,EAAcF,EAAW5kB,QAAUqX,EAAY1G,IACnD,GAAyB,IAArBmU,EAAYjZ,KAAuB,CACnC,IAAIkW,EAAahB,GAAc+D,EAAazN,GACxCqL,EAAQX,EAAWvQ,IACnBvS,EAAQyjB,EAAM5iB,QAAQuX,GAC1BoN,GAAmBnE,EAAUyB,EAAWrQ,IAAgBiT,EAASI,GAAqB9lB,EAAOyjB,EAAOX,EAAWtQ,WAErF,IAArBqT,EAAYjZ,KAEjB4Y,GAAmBnE,EADA6D,GAAgBS,EAAYvN,GACJsN,EAASE,GAE1B,IAArBC,EAAYjZ,KAEjB4Y,GAAmBnE,EAAUuE,EAAUF,EADnBjS,GAAiBkS,EAAW5kB,OAAQqX,IAIxDgJ,GAAqBC,GAAYA,EAASoE,YAAYG,EAAUF,GAC5DE,EAASH,YAAYC,GAE7B,OAAO,EAEX,OAAO,EAQX,SAASJ,GAA2BS,GAChC,KAA6B,MAAtBA,EAAYhlB,QAA8C,IAA5BglB,EAAYhlB,OAAO6L,MACpDmZ,EAAcA,EAAYhlB,OAE9B,OAAOglB,EAEX,SAASD,GAAqB9lB,EAAOyjB,EAAOuC,GACxC,GAAIhmB,EAAQ,EAAIyjB,EAAM7mB,OAAQ,CAC1B,IAAIiX,EAAO4P,EAAMzjB,EAAQ,GACrBimB,EAAYpS,EAAKnC,IACrB,OAAOuU,EAAUjI,MAAQvK,GAAiBwS,EAAUjI,MAAOnK,GAAQmS,EAGnE,OAAOA,EAiRf,IAgCIE,GAAwB,IAuC5B,SAASC,GAAkBnmB,EAAOomB,GAI9B,IAHA,IAAIC,EAAermB,EACfiU,EAAYmS,EAASC,GACrBC,EAAUF,EACPxqB,MAAMuC,QAAQ8V,IACjBqS,EAAUrS,EACVA,EAAYA,EAAUxC,IAE1B,GAcsB1T,EAdDuoB,EAgBd1qB,MAAMuC,QAAQJ,IAAuD,iBAAtCA,EAAM,IACxCnC,MAAMuC,QAAQJ,EAAM,IAhBpB,OAAOuoB,EAIP,IAhCqBC,EAErBpjB,EAuCkBpF,EATdyoB,EAAkB5S,GAAS5T,EAAQqS,GAAe+T,GAAUI,gBAIhE,OAHIF,IAAYF,IACZC,EAAe5U,IAEZ6U,EAAQD,GAAgBG,GApCVD,EAqCGtS,GAnCxB9Q,EAmCmCqjB,EAnCJlgB,SAC3B,GAA2BigB,EAEnCpjB,EAAQ,IAA+B,GAChCA,GAxBA,CACH,EACA,CAAC,MAAO,GAAG,EAAoB,MACd,CAAC,MACA,CAAC,MACnB,CAAC,EAAG,GAmD0B8Q,GAlDnB,KACX,KACA,KACA,MAk9BR,SAASwS,GAAkBtjB,EAASnD,GAEhC,OAAmD,IAAlB,EAAzBmD,EADYnD,GAAS,EAAqCA,EAAQ,EAAuBA,IA0FrG,SAAS0mB,GAASvjB,EAASnD,GACvB,OAAOmD,EAAQnD,EAAQ,GAE3B,SAAS2mB,GAAQxjB,EAASnD,GACtB,OAAOmD,EAAQnD,EAAQ,GAsQ3B,IAAI4mB,GAAiBtlB,QAAQwD,QAAQ,MAOrC,SAAS+hB,GAAuBjS,GAC5B,IAAI0C,EAAQ1C,EAAMxD,IAMlB,GAJAkG,EAAM+B,mBAAoB,EAC1BE,IAAqB,IAGhBN,GAAerE,GAAQ,CACxB,IAAI2D,EAAqBW,MAj5HjC,SAA0Bd,EAAad,EAAOiB,IACrCA,GAA2C,GAArBH,EAAY/G,MACnC8G,GAAaC,EAAad,EAAMwP,UAAWxP,EAAMgB,WAAYC,GAC7DH,EAAY/G,MAAU,KA+4HtB0V,CAAiBnS,EAAO0C,EAAOiB,GA6kDvC,SAAqC3D,GACjC,IAAK,IAAIrF,EAAUwU,GAAcnP,GAAoB,OAAZrF,EAAkBA,EAAUA,EAAQgC,IAIzE,GAAIhC,EAAQ3S,OAASyV,KAA4C,IAA3B9C,EAAQ+C,IAE1C,IADA,IAAI0U,EAAczX,EACT9S,EAAI,EAAGA,EAAIuqB,EAAYzU,IAAO3V,OAAQH,IAAK,CAChD,IAAIwqB,EAAkBD,EAAYzU,IAAO9V,GAGzCyqB,GAAuBD,EAAiBA,EAAgB7V,IAAQ6V,EAAgBpV,MAvlDxFsV,CAA4BvS,GA+CpC,SAA+B0C,GAC3B,GAA4B,MAAxBA,EAAM8P,eACN,IAAK,IAAI3qB,EAAI,EAAGA,EAAI6a,EAAM8P,eAAexqB,OAAQH,GAAK,EAAG,CACrD,IAAI4qB,EAAkB/P,EAAM8P,eAAe3qB,GACxB6a,EAAMxD,KAAKuT,GACjBC,sBAAsBD,EAAkBhV,GAAeiF,EAAM8P,eAAe3qB,EAAI,KAlDjG8qB,CAAsBjQ,GACtBa,GAAavD,EAAO0C,EAAME,aAAcF,EAAMI,kBAAmBa,GAMzE,SAAyBjB,EAAO8O,GAC5B,GAAI9O,EAAMkQ,oBAKN,IAJA,IAAIC,EAAmBrB,EAASzU,IAAiB2F,EAAMoQ,kBAEnDC,GAAyB,EACzBC,GAAuB,EAClBnrB,EAAI,EAAGA,EAAI6a,EAAMkQ,oBAAoB5qB,OAAQH,IAAK,CACvD,IAAIorB,EAAcvQ,EAAMkQ,oBAAoB/qB,GAC5C,GAA2B,iBAAhBorB,EACP,GAAIA,GAAe,EAAG,CAGlBD,GAAuBC,EAEvB,IAAIC,EAAgBxQ,EAAMkQ,sBAAsB/qB,GAEhDkrB,EADAF,GAAoB3U,GAA6BgV,OAOjDL,GAAoBI,OAMJ,OAAhBA,IACAzB,EAASzU,IAAiB8V,EAC1BI,EAAY,EAAgBrU,GAAiB4S,EAASuB,IAAyBC,IAEnFD,KArCRI,CAAgBzQ,EAAO1C,IAqD/B,SAAgCwJ,GAC5B,GAAkB,MAAdA,EACA,IAAK,IAAI3hB,EAAI,EAAGA,EAAI2hB,EAAWxhB,OAAQH,SAkpDvCmY,OAEAjB,EA0CyC,KAAvB,IA1ClBA,EAAWI,GAnpDUqK,EAAW3hB,GAipDxBkc,OA4CCtH,MAvCmC,GAAlBsC,EAAStC,MA+B3C,SAA+B0R,GAE3B,IADA,IAAIiF,EAAiBjF,EAAc3R,IAC1B3U,EAAIsmB,EAAcnmB,OAAQH,EAAIurB,EAAeC,UAAUrrB,OAAQH,IACpEsmB,EAActmB,GAAKurB,EAAeC,UAAUxrB,GAjC5CyrB,CAAsBvU,GACtBwU,GAAUxU,EAAUA,EAAS9B,MARrC,IAGQ8B,EAzsDJyU,CAAuB9Q,EAAM8G,YA0DjC,SAASiK,GAAYC,EAAahR,EAAOnU,EAASgR,EAAOoU,EAAiBlH,EAAUmH,EAAWnS,GAC3F,IAAIzB,EAAQ0C,EAAM2Q,UAAU3hB,QAW5B,OAVAsO,EAAMvD,IAAiB,GAAR8C,EAEfS,EAAMtD,IAAUsD,EAAMxC,IAAoBkW,EAC1C1T,EAAM/C,IAAW1O,EACjByR,EAAM7C,IAAqBwW,GAAmBD,GAAeA,EAAYvW,IAEzE6C,EAAM5C,IAAaqP,GAAYiH,GAAeA,EAAYtW,IAE1D4C,EAAM3C,IAAauW,GAAaF,GAAeA,EAAYrW,KAAc,KACzE2C,EAAM9C,IAAYuE,GAAYiS,GAAeA,EAAYxW,KAAa,KAC/D8C,EAEX,SAAS6T,GAAkBzoB,EAAO4M,EAAM4Q,EAAQpe,EAAMspB,GAClD,IAAI9T,EAAQ+D,KACRrB,EAAQ1C,EAAMxD,IACduX,EAAgB3oB,EAAQqS,GAG5BuC,EAAM+T,GAAiBnL,EACvB,IAAI9J,EAAQ4D,EAAMxD,KAAK6U,GACV,MAATjV,IAEAA,EAAQ4D,EAAMxD,KAAK6U,GAAiBC,GAAYhU,EAAOhI,EAAM+b,EAAevpB,EAAMspB,EAAO,OAK7F,IAAI/S,EAAwBiD,KACxBhD,EAAWmD,KAgBf,OAfIpD,KACIC,GAA2C,MAA/BD,EAAsBqI,OAChB,OAAjBtK,EAAM3S,QAAkD,IAA/B4U,EAAsB/I,KAI1CgJ,IACND,EAAsB/X,KAAO8V,GAH7BiC,EAAsBqI,MAAQtK,GAMd,MAApB4D,EAAMwG,aACNxG,EAAMwG,WAAapK,GAEvBmF,GAAyBnF,GACzBsF,IAAY,GACLtF,EAEX,SAASmV,GAAe7oB,EAAO6T,GAM3B,OAHwB,MAApBA,EAAKzC,IAAOkO,OACZzL,EAAKzC,IAAOkO,KAAOsJ,GAAY/U,EAAM,EAAc7T,EAAO,KAAM,KAAM,OAEnE6T,EAAKnC,IAAamC,EAAKzC,IAAOkO,KAiDzC,SAAS4H,GAAuB4B,EAAcxR,EAAOnU,GACjD,IAIIwW,EAJAoP,EAAYhQ,KACZiQ,EAAyBpQ,KAI7B,GAHAI,IAAY,GACZH,GAAyB,MAEC,IAAtBiQ,EAAazX,IAEb4X,GAv/IR,SAAqBxU,GAGjB,IADA,IAAIG,EAAQhZ,MAAMuC,QAAQsW,GAAUA,EAASE,GAAiBF,GACvDG,KAA0B,IAAfA,EAAMvD,MACpBuD,EAAQA,EAAMtD,IAElB,OAAOsD,EAGQsU,CA8+IoBJ,GA3+InBjX,UA8+IZ,IACImH,IAAY,GACZH,GAAyB,MACzBc,EAAUH,GAAUsP,EAAcA,EAAapX,KAC/CyX,KACA7R,EAAMhD,SAAS8U,GAAeN,GAAe3lB,GAK7C2lB,EAAa1X,IAAOiI,mBAAoB,EACxCE,IAAqB,GACrBsN,GAAuBiC,WAGvBlP,GAAUD,GACVX,GAAY+P,GACZlQ,GAAyBmQ,IAkBrC,SAASK,GAA0B1V,EAAUxQ,EAASmmB,GAClD,IAAIf,EAAkB5U,EAAS5B,IAC3B4H,EAAUH,GAAU7F,EAAUA,EAASjC,KACvC6X,GAAuBrQ,KAC3B,IACQqQ,GAAuBhB,EAAgBiB,OACvCjB,EAAgBiB,QAEhBvQ,GAAetF,KAEX2V,IACAH,KACAG,EAAW,EAAgBnmB,IAE/B0jB,GAAuBlT,GACvBA,EAAStC,MAAU,GAGvBiY,GAAcA,EAAW,EAAgBnmB,GACzC0jB,GAAuBlT,WAGnB4V,GAAuBhB,EAAgBkB,KACvClB,EAAgBkB,MAEpB7P,GAAUD,IAQlB,SAASyP,GAAevV,GACpB,OAAOoF,GAAepF,GAAQ,EAAiB,EAKnD,IAAI6V,GAAoB,KAOxB,SAASP,KACLO,GAAoB,KAkNxB,SAASC,GAAYC,EAAWN,EAAYO,EAAQC,EAAMpM,EAAYqM,EAAOC,GAEzE,IAAInQ,EAAoBxH,GAAgBwX,EAIpCI,EAAoBpQ,EAAoBiQ,EACxC7B,EA6BR,SAA6BpO,EAAmBoQ,GAC5C,IAAIhC,EAAY,IAAIrsB,MAAMquB,GACrBC,KAAK,KAAM,EAAGrQ,GACdqQ,KAAKhJ,GAAWrH,GAGrB,OAFAoO,EAAU9V,KAAoB,EAC9B8V,EAAUtW,IAAiBkI,EACpBoO,EAnCSkC,CAAoBtQ,EAAmBoQ,GACvD,OAAOhC,EAAU7W,IAAS,CACtBgZ,GAAIR,EACJ3B,UAAWA,EACX3T,SAAUgV,EACVU,UAAWA,EACX1K,KAAM,KACNxL,KAAMmU,EAAU3hB,QAChB0d,YAAa,EACbnK,kBAAmBA,EACnB6N,kBAAmBuC,EACnBzC,oBAAqB,KACrBnO,mBAAmB,EACnByN,UAAW,KACXxO,WAAY,KACZd,aAAc,KACdE,kBAAmB,KACnBG,UAAW,KACXE,eAAgB,KAChBG,aAAc,KACduM,iBAAkB,KAClBE,QAAS,KACTyC,eAAgB,KAChBhJ,WAAY,KACZiM,kBAAyC,mBAAf3M,EAA4BA,IAAeA,EACrE4M,aAA+B,mBAAVP,EAAuBA,IAAUA,EACtDjM,WAAY,MA0TpB,SAAS8K,GAAYhU,EAAOhI,EAAM+b,EAAe4B,EAAS7B,EAAO8B,GAC7D,IAAI7U,EAAwBiD,KAExB7X,EAASgY,KAAgBpD,EAAwBA,GAAyBA,EAAsB5U,OAIhG0pB,EADmB1pB,GAAU6T,GAAS7T,IAAW6T,EAAMlD,IAC1B3Q,EAAS,KAC1C,MAAO,CACH6L,KAAMA,EACN5M,MAAO2oB,EACPnO,cAAeiQ,EAAUA,EAAQjQ,eAAiB,EAClDe,gBAAiB,EACjBG,cAAe,EACfvH,MAAO,EACPgH,gBAAiB,EACjBoP,QAASA,EACT7B,MAAOA,EACPgC,WAAY,KACZC,mBAAeppB,EACfqpB,YAAQrpB,EACRspB,aAAStpB,EACTipB,OAAQA,EACR5sB,KAAM,KACNogB,MAAO,KACPjd,OAAQ0pB,EACR7G,SAAU,KACV4C,gBAAiB,KACjBvD,WAAY,MAkiCpB,SAAS6H,GAAclW,EAAOmW,EAAmBxG,GAC7C,IAAIjN,EAAQ1C,EAAMxD,IACdiI,EAAoBC,KAQxB,OAPI1E,EAAM1C,IACN0C,EAAM1C,IAAMX,IAAQgT,EAEflL,IACL/B,EAAM0M,WAAa+G,GAEvBnW,EAAM1C,IAAQqS,EACPA,EAmEX,SAAS0E,GAAgB+B,GACrB,IAAK,IAAIvuB,EAAI,EAAGA,EAAIuuB,EAAY5M,WAAWxhB,OAAQH,IAAK,CACpD,IAAIwuB,EAAgBD,EAAY5M,WAAW3hB,GAC3C4sB,GAA0B1U,GAAiBsW,GAAgBA,IAoBnE,SAASC,GAAsBrX,EAAM1Q,GACjC,IAAIolB,EAAkB1U,EAAK9B,IACvBwW,EAAgBiB,OAChBjB,EAAgBiB,QAChBvQ,GAAepF,IACfsU,GAAUtU,EAAM1Q,GAEpBglB,GAAUtU,EAAM1Q,GACZolB,EAAgBkB,KAChBlB,EAAgBkB,MAOxB,SAAS0B,GAAwBvW,GAC7BqU,GAAgBrU,EAAM/C,KAoC1B,SAASsW,GAAUxU,EAAU8J,GACzB,IAAI2N,EAAYzX,EAASvC,IACrBuI,EAAUH,GAAU7F,EAAUA,EAASjC,KACvC4X,EAAa8B,EAAU9W,SACvB0V,EAAYoB,EAAUpB,UAC1B,IACIb,KAUR,SAAyBa,EAAWnW,EAAM4J,GAClCuM,GAAa/Q,GAVctF,IAW3BqW,EAAU,EAAgBvM,GAX1B4N,CAAgBrB,EAAWrW,EAAU8J,GACrC6L,EAAWF,GAAezV,GAAW8J,GACrCoJ,GAAuBlT,GAY/B,SAAyBqW,EAAWnW,EAAM4J,GAClCuM,IAAc/Q,GAZatF,IAa3BqW,EAAU,EAAgBvM,GAb1B6N,CAAgBtB,EAAWrW,EAAU8J,WAGrC7D,GAAUD,IA+OlB,IAAI4R,GAAgB3E,GAgPpB,SAAS4E,GAAoBzI,EAAe0I,EAAcvH,EAAU8G,EAAaU,GAC7E,IAAIpU,EAAQ4M,EAAS9S,IAEjBqM,EAp4CR,SAAkCnG,EAAO8O,EAAU/R,GAC/C,IAAIoB,EAAYmD,KACZtB,EAAM+B,oBACFhF,EAAIsX,mBACJtX,EAAIsX,kBAAkBtX,GA4FlC,SAAyCiD,EAAO5D,EAAOkY,GAEnD,IAAIC,IA7FuCpW,EA6FhBzV,MAAQqS,IAE/ByV,EAAgBxQ,EAAMxD,KAAKlX,QADkB,MA9FN6Y,EA8FZ0F,kBAE9B7D,EAAMkQ,sBAAwBlQ,EAAMkQ,oBAAsB,KAAK1pB,KAAK+tB,EAAc/D,EAhG7B,GAAlDgE,CAAgCxU,GAsPxC,SAA8BA,EAAO8O,EAAU/R,EAAK0X,GAChDzU,EAAMxD,KAAKhW,KAAKuW,GAChB,IAAI2X,EAAsB,IAAIhZ,GAAoB+Y,EAAkB3X,GAAeC,GAAM,MACzFiD,EAAM2Q,UAAUnqB,KAAKkuB,GACrB5F,EAAStoB,KAAKkuB,GAzPVC,CAAqB3U,EAAO8O,EAAU/R,EAAKA,EAAI3H,UAEnD,IAAIwf,EAAYnQ,GAAkBzE,EAAMxD,KAAMsS,EAAUA,EAASxpB,OAAS,EAAG6Y,GAE7E,OAgIJ,SAAkCb,EAAOe,EAAuBuW,EAAW7X,GACvE,IAAImJ,EAAS/J,GAAiBkC,EAAuBf,GAGrDgJ,GAAgBsO,EAAWtX,GACvB4I,GACAI,GAAgBJ,EAAQ5I,GAGN,MAAlBP,EAAI8X,YAAoD,GAA9BxW,EAAsB/I,MApwBxD,SAAyB4Q,EAAQkL,GAI7B,IAHA,IAAIrH,EAAW1I,KAAW3G,IACtBoa,EAAShL,GAAqBC,GAC9B5kB,EAAI,EACDA,EAAIisB,EAAM9rB,QAAQ,CACrB,IAAIyvB,EAAW3D,EAAMjsB,KACrB,GAAuB,iBAAZ4vB,EAAsB,CAC7B,GAAiB,IAAbA,EAaA,MAXA,IAAIC,EAAe5D,EAAMjsB,KACrB8vB,EAAa7D,EAAMjsB,KACnB+vB,EAAU9D,EAAMjsB,KAEpB2vB,EACI/K,EACKoL,aAAajP,EAAQ+O,EAAYC,EAASF,GAC/C9O,EAAOkP,eAAeJ,EAAcC,EAAYC,QASpDA,EAAU9D,EAAMjsB,KAChB4vB,IAAalL,KAGOkL,EA/yDpB,KAAOnG,GAgzDCkG,GACA/K,EAASsL,YAAYnP,EAAQ6O,EAAUG,GAI3CJ,EACI/K,EACKoL,aAAajP,EAAQ6O,EAAUG,GACpChP,EAAOiP,aAAaJ,EAAUG,KA+tB9CI,CAAgBpP,EAAQnJ,EAAI8X,YA3IhCU,CAAyBzG,EAAU3Q,EAAWyW,EAAW7X,GAClD6X,EA03CSY,CAAyBxV,EAAO4M,EAAUuH,GAI1D,GAHAT,EAAY5M,WAAWtgB,KAAK2f,GAC5BsF,EAAclR,IAAW4L,EACzBiO,GAAgBA,EAAa/mB,QAAQ,SAAUooB,GAAW,OAAOA,EAAQtP,EAAWgO,KAChFnU,EAAM+B,mBAAqBoS,EAAauB,aAAc,CACtD,IAAIvX,EAAYmD,KAEhB6S,EAAauB,aAAa,EAAgBvP,EAAWhI,EAAUzV,MAAQqS,IAG3E,OAAOoL,EAEX,SAASwP,GAAkBlkB,EAAWmkB,GAClC,MAAO,CACH9O,WAAY,GACZrV,UAAWA,GAAauM,GACxB6X,MAAO5B,GACP2B,cAAeA,GAAiB,KAChC/Y,MAAO,GAgBf,SAASiZ,GAAsB3P,EAAWpJ,GACtC,IAx+MoBrU,EAAOqtB,EAAQC,EAAShW,EAw+MxCiW,EAAY5Y,GAAiB8I,GAAWrM,IACxCoc,EAAWD,EAAUzZ,KAAKlX,OAAS,EAz+MnBoD,EA0+MLwtB,EA1+MoBF,EA0+MEjZ,EAAIiZ,QA1+MGhW,EA0+MMiW,GA1+MvBF,EA0+MFhZ,EAAIgZ,UAt+MxB/V,EAAMwP,YAAcxP,EAAMwP,UAAY,KAAKhpB,KAAKkC,EAAOqtB,GAExDC,KACChW,EAAMwP,YAAcxP,EAAMwP,UAAY,KAAKhpB,KAAKkC,EAAOstB,IACvDhW,EAAMgB,aAAehB,EAAMgB,WAAa,KAAKxa,KAAKkC,EAAOstB,IAOlE,SAA6BhW,EAAO5D,GAChC,GAAI4D,EAAM+B,kBAIN,IAAK,IAAI5c,EAAIiX,EAAM6H,eAAgBkO,EAAM/V,EAAMgI,aAAcjf,EAAIgtB,EAAKhtB,IAAK,CACvE,IAAI4X,EAAMiD,EAAMxD,KAAKrX,GACrB4a,GAAkBhD,EAAKiD,EAAO7a,GAC9Bkb,GAAetD,EAAKiD,EAAO7a,GAC3Bub,GAAkB3D,EAAKiD,EAAO7a,IAq9MtCgxB,CAAoBF,EAAW,CAAEhS,eAAgBiS,EAAU9R,aAAc8R,EAAW,IA2VxF,IAAIE,GAAS,WACTC,GAAsB,IAAIlyB,OAC1BmyB,GAAqBD,GASrBE,GAAa,IAAI/gB,GAAe,YAChCghB,GAA8B,WAC9B,SAASA,KAaT,OAXAA,EAAa3xB,UAAU0a,IAAM,SAAUjH,EAAOkH,GAE1C,QADsB,IAAlBA,IAA4BA,EAAgB6W,IAC5C7W,IAAkB6W,GAKlB,MAAM,IAAI7uB,MAAM,sCAAwC6Q,GAAUC,GAAS,KAE/E,OAAOkH,GAEJgX,EAdsB,GAgC7BC,GAA0B,WAC1B,SAASA,KA2BT,OAjBAA,EAAS3xB,OAAS,SAAU4Q,EAASjM,GACjC,OAAInF,MAAMuC,QAAQ6O,GACP,IAAIghB,GAAehhB,EAASjM,GAG5B,IAAIitB,GAAehhB,EAAQihB,UAAWjhB,EAAQjM,OAAQiM,EAAQ5N,MAAQ,OAGrF2uB,EAASH,mBAAqBD,GAC9BI,EAASG,KAAO,IAAIJ,GAEpBC,EAASjiB,gBAAkBS,GAAiB,CACxCE,WAAY,MACZC,QAAS,WAAc,OAAOgK,GAAOmX,OAGzCE,EAASzhB,kBAAoB,WAAc,OAAO6hB,MAC3CJ,EA5BkB,GAkCzBI,GAJqC,WACrC,OAnjMIza,EAAQkF,KACL,IAAIkE,GAAapJ,EAAOiF,MAFnC,IACQjF,GAujMJ0a,GAAQ,SAAUrwB,GAClB,OAAOA,GAEPwC,GAAQ,GACR8tB,GAAWD,GACXE,GAAoB,WACpB,OAAO1yB,MAAMO,UAAUmK,MAAMzJ,KAAKF,YAElC4xB,GAAYjjB,GAAuB,CAAEkjB,QAASC,OAAQC,SAAUpjB,KAGhEqjB,GAAkBZ,GAASG,KAC3BU,GAAW,OACXC,GAAc,SACdb,GAAgC,WAChC,SAASA,EAAeC,EAAWltB,EAAQmD,QACxB,IAAXnD,IAAqBA,EAAS4tB,SACnB,IAAXzqB,IAAqBA,EAAS,MAClCjI,KAAK8E,OAASA,EACd9E,KAAKiI,OAASA,EACd,IAAI4qB,EAAU7yB,KAAK8yB,SAAW,IAAI3f,IAClC0f,EAAQE,IAAIjB,GAAU,CAAEne,MAAOme,GAAUpvB,GAAIyvB,GAAOa,KAAM1uB,GAAOxC,MAAO9B,KAAMizB,QAAQ,IACtFJ,EAAQE,IAAInB,GAAY,CAAEje,MAAOie,GAAYlvB,GAAIyvB,GAAOa,KAAM1uB,GAAOxC,MAAO9B,KAAMizB,QAAQ,IAyDlG,SAASC,EAA4BL,EAASM,GAC1C,GAAIA,EAEA,IADAA,EAAWhf,GAAkBgf,cACLxzB,MAEpB,IAAK,IAAIa,EAAI,EAAGA,EAAI2yB,EAASxyB,OAAQH,IACjC0yB,EAA4BL,EAASM,EAAS3yB,QAGjD,IAAwB,mBAAb2yB,EAGZ,MAAMC,GAAY,+BAAgCD,GAEjD,IAAIA,GAAgC,iBAAbA,IAAyBA,EAASZ,QAiC1D,MAAMa,GAAY,sBAAuBD,GA/BzC,IAAIxf,EAAQQ,GAAkBgf,EAASZ,SACnCc,EA/ChB,SAAyBF,GACrB,IAAIH,EA8IR,SAAqBG,GACjB,IAAIH,EAAO1uB,GACPgvB,EAAeH,EAASH,KAC5B,GAAIM,GAAgBA,EAAa3yB,OAAQ,CACrCqyB,EAAO,GACP,IAAK,IAAIxyB,EAAI,EAAGA,EAAI8yB,EAAa3yB,OAAQH,IAAK,CAC1C,IAAIuQ,EAAU,EAEd,IADI4C,EAAQQ,GAAkBmf,EAAa9yB,eACtBb,MACjB,IAAK,IAAIub,EAAI,EAAGqY,EAAc5f,EAAOuH,EAAIqY,EAAY5yB,OAAQua,IAAK,CAC9D,IAAIpJ,EAAayhB,EAAYrY,GACzBpJ,aAAsBgI,IAAYhI,GAAcgI,GAChD/I,GAAoB,EAEfe,aAAsBkI,IAAYlI,GAAckI,GACrDjJ,IAAoB,EAEfe,aAAsBiI,IAAQjI,GAAciI,GACjDhJ,IAAoB,EAGpB4C,EADK7B,aAAsB+H,GACnB/H,EAAW6B,MAGXQ,GAAkBrC,GAItCkhB,EAAKnxB,KAAK,CAAE8R,MAAOA,EAAO5C,QAASA,UAGtC,GAAIoiB,EAASK,YAAa,CAC3B,IAAI7f,EACJqf,EAAO,CAAC,CAAErf,MADNA,EAAQQ,GAAkBgf,EAASK,aACfziB,QAAS,SAEhC,KAAKuiB,GAAkBhB,MAAaa,GAErC,MAAMC,GAAY,kBAAqBD,GAE3C,OAAOH,EArLIS,CAAYN,GACnBzwB,EAAKyvB,GACLrwB,EAAQwC,GACR2uB,GAAS,EACTV,EAAUpe,GAAkBgf,EAASZ,SACzC,GAAID,MAAaa,EAEbrxB,EAAQqxB,EAASV,cAEhB,GAAIU,EAASO,WACdhxB,EAAKywB,EAASO,gBAEb,GAAIP,EAASK,kBACb,GAAIL,EAASQ,SACdV,GAAS,EACTvwB,EAAKyR,GAAkBgf,EAASQ,cAE/B,IAAsB,mBAAXpB,EAKZ,MAAMa,GAAY,sGAAuGD,GAJzHF,GAAS,EACTvwB,EAAK6vB,EAKT,MAAO,CAAES,KAAMA,EAAMtwB,GAAIA,EAAIuwB,OAAQA,EAAQnxB,MAAOA,GAsBrB8xB,CAAgBT,GACvC,IAAuB,IAAnBA,EAASU,MAAgB,CAEzB,IAAIC,EAAgBjB,EAAQjY,IAAIjH,GAChC,GAAImgB,GACA,GAAIA,EAAcpxB,KAAO2vB,GACrB,MAAM0B,GAAsBpgB,QAKhCkf,EAAQE,IAAIpf,EAAOmgB,EAAgB,CAC/BngB,MAAOwf,EAASZ,QAChBS,KAAM,GACNC,QAAQ,EACRvwB,GAAI2vB,GACJvwB,MAAOwC,KAKfwvB,EAAcd,KAAKnxB,KAAK,CAAE8R,MAD1BA,EAAQwf,EACgCpiB,QAAS,IAErD,IAAIijB,EAASnB,EAAQjY,IAAIjH,GACzB,GAAIqgB,GAAUA,EAAOtxB,IAAM2vB,GACvB,MAAM0B,GAAsBpgB,GAEhCkf,EAAQE,IAAIpf,EAAO0f,IApGvBH,CAA4BL,EAASb,GAwBzC,OAtBAD,EAAe7xB,UAAU0a,IAAM,SAAUjH,EAAOkH,EAAe3C,QAC7C,IAAVA,IAAoBA,EAAQ+B,GAAYS,SAC5C,IAAIsZ,EAASh0B,KAAK8yB,SAASlY,IAAIjH,GAC/B,IACI,OAqGZ,SAASsgB,EAAgBtgB,EAAOqgB,EAAQnB,EAAS/tB,EAAQ+V,EAAe3C,GACpE,IACI,OAgBR,SAAsBvE,EAAOqgB,EAAQnB,EAAS/tB,EAAQ+V,EAAe3C,GACjE,IAAIvG,EACA7P,EACJ,IAAIkyB,GAAY9b,EAAQ+B,GAAYD,SAoCzB9B,EAAQ+B,GAAYF,OAC3BjY,EAAQgD,EAAO8V,IAAIjH,EAAOkH,EAAeZ,GAAYS,cArCV,CAI3C,IADA5Y,EAAQkyB,EAAOlyB,QACFswB,GACT,MAAMvvB,MAAM+vB,GAAc,uBAEzB,GAAI9wB,IAAUwC,GAAO,CACtB0vB,EAAOlyB,MAAQswB,GACf,IACIa,EAASe,EAAOf,OAChBvwB,EAAKsxB,EAAOtxB,GACZwxB,EAAaF,EAAOhB,KACpBA,EAAO1uB,GACX,GAAI4vB,EAAWvzB,OAAQ,CACnBqyB,EAAO,GACP,IAAK,IAAIxyB,EAAI,EAAGA,EAAI0zB,EAAWvzB,OAAQH,IAAK,CACxC,IAAI2zB,EAAYD,EAAW1zB,GACvBuQ,EAAUojB,EAAUpjB,QACpBqjB,EAAwB,EAAVrjB,EAA8B8hB,EAAQjY,IAAIuZ,EAAUxgB,YAASrO,EAC/E0tB,EAAKnxB,KAAKoyB,EAEVE,EAAUxgB,MAGVygB,EAEAvB,EAGCuB,GAA2B,EAAVrjB,EAAmDjM,EAAlB4tB,GAAoC,EAAV3hB,EAA6B,KAAO+gB,GAASH,mBAAoB1X,GAAYS,WAGlKsZ,EAAOlyB,MAAQA,EAAQmxB,EAAS,KAAMthB,EAAKjP,GAAIyE,KAAKtG,MAAM8Q,EAAI3P,EAAS,MAAC,GAASgxB,KAAYtwB,EAAG7B,WAxBtFyE,EAwBiG0tB,IAMnH,OAAOlxB,EA1DIuyB,CAAa1gB,EAAOqgB,EAAQnB,EAAS/tB,EAAQ+V,EAAe3C,GAEvE,MAAOzW,GAWH,MATMA,aAAaoB,QACfpB,EAAI,IAAIoB,MAAMpB,KAEPA,EAAoB,gBAAIA,EAAoB,iBAAK,IACvD6yB,QAAQ3gB,GACTqgB,GAAUA,EAAOlyB,OAASswB,KAE1B4B,EAAOlyB,MAAQwC,IAEb7C,GApHKwyB,CAAgBtgB,EAAOqgB,EAAQh0B,KAAK8yB,SAAU9yB,KAAK8E,OAAQ+V,EAAe3C,GAErF,MAAOzW,GACH,IAAI8yB,EAAY9yB,EAAoB,gBAOpC,MANIkS,EAAM8d,KACN8C,EAAUD,QAAQ3gB,EAAM8d,KAE5BhwB,EAAEqB,QAAU0xB,GAAY,KAAO/yB,EAAEqB,QAASyxB,EAAWv0B,KAAKiI,QAC1DxG,EAAe,YAAI8yB,EACnB9yB,EAAoB,gBAAI,KAClBA,IAGdswB,EAAe7xB,UAAU+C,SAAW,WAChC,IAAIwxB,EAAS,GAEb,OAF2Bz0B,KAAK8yB,SACxBpqB,QAAQ,SAAUqV,EAAGpK,GAAS,OAAO8gB,EAAO5yB,KAAK6R,GAAUC,MAC5D,kBAAoB8gB,EAAOvxB,KAAK,MAAQ,KAE5C6uB,EAjCwB,GA8DnC,SAASgC,GAAsBpgB,GAC3B,OAAOyf,GAAY,mDAAoDzf,GA4J3E,SAAS6gB,GAAYE,EAAM/oB,EAAK1D,QACb,IAAXA,IAAqBA,EAAS,MAClCysB,EAAOA,GAA2B,OAAnBA,EAAKC,OAAO,IAAeD,EAAKC,OAAO,IAAM/B,GAAc8B,EAAKE,OAAO,GAAKF,EAC3F,IAAIxtB,EAAUwM,GAAU/H,GACxB,GAAIA,aAAehM,MACfuH,EAAUyE,EAAI5I,IAAI2Q,IAAWxQ,KAAK,aAEjC,GAAmB,iBAARyI,EAAkB,CAC9B,IAAIkpB,EAAQ,GACZ,IAAK,IAAItlB,KAAO5D,EACZ,GAAIA,EAAI9L,eAAe0P,GAAM,CACzB,IAAIzN,EAAQ6J,EAAI4D,GAChBslB,EAAMhzB,KAAK0N,EAAM,KAAwB,iBAAVzN,EAAqBgzB,KAAKphB,UAAU5R,GAAS4R,GAAU5R,KAG9FoF,EAAU,IAAM2tB,EAAM3xB,KAAK,MAAQ,IAEvC,MAAO,uBAAyB+E,EAAS,IAAMA,EAAS,IAAM,IAAM,IAAMf,EAAU,MAAQwtB,EAAKK,QAAQpC,GAAU,QAEvH,SAASS,GAAYsB,EAAM/oB,GACvB,OAAO,IAAI9I,MAAM2xB,GAAYE,EAAM/oB,IAevC,IAAIqpB,GAAW,IAAInkB,GAAe,4EAY9BokB,GAAU,GAQVC,GAAa,GACbC,GAAgB,GAIhBC,QAAkB9vB,EACtB,SAAS+vB,KAIL,YAHwB/vB,IAApB8vB,KACAA,GAAkB,IAAIvD,IAEnBuD,GAaX,IAAIE,GAA4B,WAC5B,SAASA,EAAWld,EAAKmd,EAAqBzwB,GAC1C,IAAIoB,EAAQlG,KACZA,KAAK8E,OAASA,EAId9E,KAAK6yB,QAAU,IAAI1f,IAInBnT,KAAKw1B,iBAAmB,IAAIC,IAI5Bz1B,KAAKgc,UAAY,IAAIyZ,IAIrBz1B,KAAK01B,WAAY,EAGjB,IAAIC,EAAa,GACjBC,GAAY,CAACxd,GAAM,SAAUyd,GAAe,OAAO3vB,EAAM4vB,oBAAoBD,EAAa,GAAIF,KAC9FJ,GAAuBK,GAAYL,EAAqB,SAAUpC,GAAY,OAAOjtB,EAAM6vB,gBAAgB5C,EAAU/a,EAAKmd,KAE1Hv1B,KAAK6yB,QAAQE,IAAInB,GAAYoE,QAAW1wB,EAAWtF,OAGnDA,KAAKi2B,eAAiBj2B,KAAK6yB,QAAQqD,IAAIlB,IAEvCh1B,KAAKw1B,iBAAiB9sB,QAAQ,SAAUytB,GAAW,OAAOjwB,EAAM0U,IAAIub,KAkMxE,OA1LAb,EAAWp1B,UAAU8oB,QAAU,WAC3BhpB,KAAKo2B,qBAELp2B,KAAK01B,WAAY,EACjB,IAEI11B,KAAKgc,UAAUtT,QAAQ,SAAU2tB,GAAW,OAAOA,EAAQC,wBAI3Dt2B,KAAK6yB,QAAQ0D,QACbv2B,KAAKgc,UAAUua,QACfv2B,KAAKw1B,iBAAiBe,UAG9BjB,EAAWp1B,UAAU0a,IAAM,SAAUjH,EAAOkH,EAAe3C,QACjC,IAAlB2C,IAA4BA,EAAgB8W,SAClC,IAAVzZ,IAAoBA,EAAQ+B,GAAYS,SAC5C1a,KAAKo2B,qBAEL,IA+QuBt0B,EA/QnB00B,EAAmBrc,GAAmBna,MAC1C,IAEI,KAAMkY,EAAQ+B,GAAYD,UAAW,CAEjC,IAAIga,EAASh0B,KAAK6yB,QAAQjY,IAAIjH,GAC9B,QAAerO,IAAX0uB,EAAsB,CAGtB,IAAI5b,GAuQK,mBADEtW,EAtQqB6R,IAwQ1B,iBAAV7R,GAAsBA,aAAiB+O,KAxQOH,GAAiBiD,GACvDyE,GAAOpY,KAAKy2B,qBAAqBre,KAGjC4b,EAASgC,GAAWU,GAAkC/iB,GAAQshB,IAC9Dj1B,KAAK6yB,QAAQE,IAAIpf,EAAOqgB,IAIhC,QAAe1uB,IAAX0uB,EACA,OAAOh0B,KAAK22B,QAAQhjB,EAAOqgB,GAMnC,OADqB9b,EAAQ+B,GAAYF,KAAsBsb,KAAdr1B,KAAK8E,QAClC8V,IAAIjH,EAAOkH,WAI/BV,GAAmBqc,KAG3BlB,EAAWp1B,UAAUk2B,mBAAqB,WACtC,GAAIp2B,KAAK01B,UACL,MAAM,IAAI7yB,MAAM,yCAOxByyB,EAAWp1B,UAAU41B,oBAAsB,SAAUc,EAAiBC,EAASlB,GAC3E,IAAIzvB,EAAQlG,KAEZ,GADA42B,EAAkBziB,GAAkByiB,GACpC,CAMA,IAAIxe,EAAMxH,GAAegmB,GAErBE,EAAmB,MAAP1e,GAAgBwe,EAAgBE,eAAYxxB,EAIxD6wB,OAAwB7wB,IAAbwxB,EAA0BF,EAAkBE,EAOvDC,GAA+C,IAAjCpB,EAAW/wB,QAAQuxB,GAGjCnE,OAA0B1sB,IAAbwxB,GAA2BF,EAAgB5E,WACxDmD,GAOJ,QAJiB7vB,IAAbwxB,IACA1e,EAAMxH,GAAekmB,IAGd,MAAP1e,EAAJ,CAQA,GAJApY,KAAKw1B,iBAAiBpxB,IAAI+xB,GAC1Bn2B,KAAK6yB,QAAQE,IAAIoD,EAASH,GAAW5d,EAAI3H,QAASwkB,KAG/B,MAAf7c,EAAI4e,UAAoBD,EAAa,CAKrCpB,EAAW9zB,KAAKs0B,GAChB,IACIP,GAAYxd,EAAI4e,QAAS,SAAUC,GAAY,OAAO/wB,EAAM4vB,oBAAoBmB,EAAUJ,EAASlB,eAQ3G,IAAIuB,EAAe9e,EAAI4Z,UACvB,GAAoB,MAAhBkF,IAAyBH,EAAa,CACtC,IAAII,EAAiBP,EACrBhB,GAAYsB,EAAc,SAAU/D,GAAY,OAAOjtB,EAAM6vB,gBAAgB5C,EAAUgE,EAAgBD,KAG3G,IAAIE,EAAeR,EAAgBE,SACnClB,GAAY5D,EAAW,SAAUmB,GAAY,OAAOjtB,EAAM6vB,gBAAgB5C,EAAUiE,EAAcpF,QAKtGsD,EAAWp1B,UAAU61B,gBAAkB,SAAU5C,EAAUiE,EAAcpF,GAIrE,IAAIre,EAAQ0jB,GADZlE,EAAWhf,GAAkBgf,IACUA,EAAWhf,GAAkBgf,GAAYA,EAASZ,SAErFyB,EA2EZ,SAA0Bb,EAAUiE,EAAcpF,GAC9C,IAAIvhB,EAaR,SAA2B0iB,EAAUiE,EAAcpF,GAC/C,IAkDwBlwB,EAlDpB2O,OAAUnL,EACd,GAAI+xB,GAAelE,GACf,OAAOuD,GAAkCviB,GAAkBgf,IAG3D,GAAImE,GAAgBnE,GAChB1iB,EAAU,WAAc,OAAO0D,GAAkBgf,EAASV,gBAEzD,IA0Ce3wB,EA1CQqxB,IA2CbrxB,EAAM0xB,YA1CjB/iB,EAAU,WAAc,OAAOgK,GAAOtG,GAAkBgf,EAASK,oBAEhE,GAAsBL,KA2CNO,WA1CjBjjB,EAAU,WAAc,OAAO0iB,EAASO,WAAW7yB,MAAMsyB,EAAUnxB,EAAS+Y,GAAWoY,EAASH,MAAQ,WAEvG,CACD,IAAIuE,EAAapjB,GAAkBgf,IAC9BA,EAASQ,UAAYR,EAASZ,UACnC,IAAKgF,EAAY,CACb,IAAIC,EAAiB,GAMrB,MALIJ,GAAgBpF,IAEhBwF,EACI,6DAFiBxF,EAAUjvB,IAAI,SAAUgb,GAAK,OAAOA,GAAKoV,EAAW,IAAMA,EAAW,IAAM,QAEdjwB,KAAK,MAAQ,KAE7F,IAAIL,MAAM,sCAAwC6Q,GAAU0jB,GAAgB,IAAMI,GAE5F,IAAYrE,EAkCLH,KA9BH,OAAO0D,GAAkCa,GAHzC9mB,EAAU,WAAc,OAAO,IAAK,EAAatJ,KAAKtG,MAAM,EAAcmB,EAAS,MAAC,GAAS+Y,GAAWoY,EAASH,UAO7H,OAAOviB,EAhDOgnB,CAAkBtE,EAAUiE,EAAcpF,GACxD,OAAIsF,GAAgBnE,GACT6C,QAAW1wB,EAAW6tB,EAASV,UAG/BuD,GAAWvlB,EAASwkB,IAjFdyC,CAAiBvE,EAAUiE,EAAcpF,GACtD,GAAKqF,GAAelE,KAAgC,IAAnBA,EAASU,MAkBrC,CACD,IAAI8D,EAAW33B,KAAK6yB,QAAQjY,IAAIjH,GAChC,GAAIgkB,QAA+BryB,IAAnBqyB,EAAS9D,MACrB,MAAM,IAAIhxB,MAAM,4BAA8B6Q,GAAUC,QArBN,CAGtD,IAAIikB,EAAgB53B,KAAK6yB,QAAQjY,IAAIjH,GACrC,GAAIikB,GAEA,QAA4BtyB,IAAxBsyB,EAAc/D,MACd,MAAM,IAAIhxB,MAAM,4BAA8B8Q,EAAQ,UAI1DikB,EAAgB5B,QAAW1wB,EAAW2vB,IAAS,IACjCxkB,QAAU,WAAc,OAAOsK,GAAW6c,EAAc/D,QACtE7zB,KAAK6yB,QAAQE,IAAIpf,EAAOikB,GAE5BjkB,EAAQwf,EACRyE,EAAc/D,MAAMhyB,KAAKsxB,GAQ7BnzB,KAAK6yB,QAAQE,IAAIpf,EAAOqgB,IAE5BsB,EAAWp1B,UAAUy2B,QAAU,SAAUhjB,EAAOqgB,GAC5C,GAAIA,EAAOlyB,QAAUozB,GACjB,MAAM,IAAIryB,MAAM,yCAA2C6Q,GAAUC,IA2HjF,IAAsB7R,EAlHd,OAPSkyB,EAAOlyB,QAAUmzB,KACtBjB,EAAOlyB,MAAQozB,GACflB,EAAOlyB,MAAQkyB,EAAOvjB,WAEE,iBAAjBujB,EAAOlyB,OAAsBkyB,EAAOlyB,OAsH3B,iBADNA,EArHuDkyB,EAAOlyB,QAsHnC,MAATA,GAAiBA,EAAMw0B,aAC1B,mBAAtBx0B,EAAMw0B,aAtHTt2B,KAAKgc,UAAU5X,IAAI4vB,EAAOlyB,OAEvBkyB,EAAOlyB,OAElBwzB,EAAWp1B,UAAUu2B,qBAAuB,SAAUre,GAClD,QAAKA,EAAI5H,aAG0B,iBAAnB4H,EAAI5H,WACU,QAAnB4H,EAAI5H,YAA4C,SAAnB4H,EAAI5H,YAAyBxQ,KAAKi2B,eAG/Dj2B,KAAKw1B,iBAAiBU,IAAI9d,EAAI5H,cAGtC8kB,EAjOoB,GAmO/B,SAASoB,GAAkC/iB,GACvC,IAAImH,EAAgBpK,GAAiBiD,GACrC,GAAsB,OAAlBmH,EAAwB,CACxB,IAAI+a,EAAcjlB,GAAe+C,GACjC,GAAoB,OAAhBkiB,EACA,OAAOA,EAAYplB,QAElB,GAAIkD,aAAiB9C,GACtB,MAAM,IAAIhO,MAAM,SAAW6Q,GAAUC,GAAS,8CAE7C,GAAIA,aAAiBkkB,SAAU,CAChC,IAAIC,EAAcnkB,EAAMhT,OACxB,GAAIm3B,EAAc,EAAG,CACjB,IAAIxmB,EAAO,IAAI3R,MAAMm4B,GAAa7J,KAAK,KACvC,MAAM,IAAIprB,MAAM,oCAAsC6Q,GAAUC,GAAS,MAAQrC,EAAKpO,KAAK,MAAQ,MAEvG,OAAO,WAAc,OAAO,IAAIyQ,GAEpC,MAAM,IAAI9Q,MAAM,eAEpB,OAAOiY,EAAcrK,QAqDzB,SAASulB,GAAWvlB,EAAS3O,EAAO+xB,GAEhC,YADc,IAAVA,IAAoBA,GAAQ,GACzB,CACHpjB,QAASA,EACT3O,MAAOA,EACP+xB,MAAOA,EAAQ,QAAKvuB,GAG5B,SAASswB,GAAYzsB,EAAOzG,GACxByG,EAAMT,QAAQ,SAAU5G,GAAS,OAAOnC,MAAMuC,QAAQJ,GAAS8zB,GAAY9zB,EAAOY,GAAMA,EAAGZ,KAE/F,SAASw1B,GAAgBx1B,GACrB,OAAOA,GAAyB,iBAATA,GAAqBwwB,MAAaxwB,EAQ7D,SAASu1B,GAAev1B,GACpB,MAAwB,mBAAVA,EA8QlB,IAAIi2B,GAA8B,WAG9B,OAFA,aAD6B,GAQ7BC,GAAkC,WAGlC,OAFA,aADiC,GAarC,SAASC,GAAwBzW,GAC7B,IAAIzf,EAAQc,MAAM,kCAAoC6Q,GAAU8N,GAAa,kDAE7E,OADAzf,EAAMm2B,IAAmB1W,EAClBzf,EAEX,IA6XIo2B,GAsBAC,GAuDAC,GA1cAH,GAAkB,cAClBI,GAA+C,WAC/C,SAASA,KAKT,OAHAA,EAA8Bp4B,UAAUq4B,wBAA0B,SAAU/W,GACxE,MAAMyW,GAAwBzW,IAE3B8W,EANuC,GAW9CE,GAA0C,WAC1C,SAASA,KAGT,OADAA,EAAyBvG,KAAO,IAAIqG,GAC7BE,EAJkC,GAMzCC,GAAiD,WACjD,SAASA,EAAgCC,EAAWj1B,EAASk1B,GACzD34B,KAAKyD,QAAUA,EACfzD,KAAK24B,UAAYA,EACjB34B,KAAK44B,WAAa,IAAIzlB,IACtB,IAAK,IAAI3S,EAAI,EAAGA,EAAIk4B,EAAU/3B,OAAQH,IAAK,CACvC,IAAIiQ,EAAUioB,EAAUl4B,GACxBR,KAAK44B,WAAW7F,IAAItiB,EAAQooB,cAAepoB,IAanD,OAVAgoB,EAAgCv4B,UAAUq4B,wBAA0B,SAAU/W,GAC1E,IAAI/Q,EAAUzQ,KAAK44B,WAAWhe,IAAI4G,GAIlC,IAHK/Q,GAAWzQ,KAAKyD,UACjBgN,EAAUzQ,KAAKyD,QAAQ80B,wBAAwB/W,KAE9C/Q,EACD,MAAMwnB,GAAwBzW,GAElC,OAAO,IAAIsX,GAA8BroB,EAASzQ,KAAK24B,YAEpDF,EApByC,GAsBhDK,GAA+C,SAAU/yB,GAEzD,SAASgzB,EAA8BtoB,EAASqmB,GAC5C,IAAI5wB,EAAQH,EAAOnF,KAAKZ,OAASA,KAQjC,OAPAkG,EAAMuK,QAAUA,EAChBvK,EAAM4wB,SAAWA,EACjB5wB,EAAM8yB,SAAWvoB,EAAQuoB,SACzB9yB,EAAM2yB,cAAgBpoB,EAAQooB,cAC9B3yB,EAAM+yB,mBAAqBxoB,EAAQwoB,mBACnC/yB,EAAMyoB,OAASle,EAAQke,OACvBzoB,EAAM0oB,QAAUne,EAAQme,QACjB1oB,EAKX,OAfApG,EAAUi5B,EAA+BhzB,GAYzCgzB,EAA8B74B,UAAUC,OAAS,SAAUia,EAAU8e,EAAkBC,EAAoBrC,GACvG,OAAO92B,KAAKyQ,QAAQtQ,OAAOia,EAAU8e,EAAkBC,EAAoBrC,GAAY92B,KAAK82B,WAEzFiC,EAhBuC,CAiBhDf,IAiBEoB,GAA6B,WAG7B,OAFA,aAD4B,GAQ5BC,GAAiC,WAGjC,OAFA,aADgC,GAahCC,GAAyB,WACzB,SAASC,EAAQxY,EAAQ3Z,EAAUoyB,GAC/Bx5B,KAAKoH,SAAWA,EAChBpH,KAAKw5B,gBAAkBA,EACvBx5B,KAAKy5B,QAAU,KACfz5B,KAAK05B,kBAAoB,KAIzB15B,KAAK25B,WAAa,KAClB35B,KAAK+gB,OAASA,EAsOlB,OApOAvhB,OAAO0S,eAAeqnB,EAAQr5B,UAAW,YAAa,CAClD0a,IAAK,WACD,OAAyB,MAArB5a,KAAK+gB,OAAOvL,IAqP5B,SAASokB,EAAmBjhB,EAAOiR,EAAa3d,GAE5C,IADA,IAAI4tB,EAAajQ,EAAY7H,MACtB8X,GACH5tB,EAAOpK,KAAK2V,GAAiBqiB,EAAYlhB,IACjB,IAApBkhB,EAAWlpB,MACXipB,EAAmBjhB,EAAOkhB,EAAY5tB,GAE1C4tB,EAAaA,EAAWl4B,KAE5B,OAAOsK,EA5PY2tB,CAAmB55B,KAAK+gB,OADnB/gB,KAAK+gB,OAAOtL,IACsB,IAE3C,IAEXqkB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeqnB,EAAQr5B,UAAW,UAAW,CAChD0a,IAAK,WAAc,OAAO5a,KAAKoH,SAAWpH,KAAKoH,SAAWpH,KAAKg6B,kBAC/DF,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeqnB,EAAQr5B,UAAW,YAAa,CAClD0a,IAAK,WACD,OAAqD,KAAxB,GAArB5a,KAAK+gB,OAAO3L,MAExB0kB,YAAY,EACZC,cAAc,IAElBR,EAAQr5B,UAAU8oB,QAAU,WACxB,GAAIhpB,KAAKy5B,QACLz5B,KAAKy5B,QAAQhS,WAAWznB,WAEvB,GAAIA,KAAK05B,kBAAmB,CAC7B,IAAI31B,EAAQ/D,KAAK05B,kBAAkB90B,QAAQ5E,MACvC+D,GAAS,GACT/D,KAAK05B,kBAAkBO,OAAOl2B,GAElC/D,KAAK05B,kBAAoB,KAE7B1R,GAAahoB,KAAK+gB,SAEtBwY,EAAQr5B,UAAU8b,UAAY,SAAUke,GA71G5C,IAAwBtiB,EAAMkR,IA61GsDoR,EA7tDpF,SAAoBtiB,GAEhB,OAAOA,EAAKjC,MAAaiC,EAAKjC,IAAW,IAjoDzCwkB,CADoBviB,EA61G+C5X,KAAK+gB,QA51GvDlf,KAAKinB,GAClBlR,EAAKzC,IAAOiI,mBAkoDpB,SAAyBxF,GACrB,OAAOA,EAAKzC,IAAOuT,UAAY9Q,EAAKzC,IAAOuT,QAAU,IAloDjD0R,CAAgBxiB,GAAM/V,KAAK+V,EAAKjC,IAAShV,OAAS,EAAG,OA63GzD44B,EAAQr5B,UAAUm6B,aAAe,YA3oErC,SAAuB1hB,GACnB,KAAOA,KAA0B,IAAfA,EAAMvD,MACpBuD,EAAMvD,KAAU,EAChBuD,EAAQA,EAAMtD,IAkBtB,IAAsB0Z,EAIVuL,EAHJC,EAjBJ5hB,EAAMvD,KAAU,EAiBZmlB,EAAyC,KAD3BxL,EAdApW,EAAM/C,KAeWsC,MACnC6W,EAAY7W,OAfc,EAgBtBqiB,GAAoBxL,EAAYmC,OAASvG,KAEzCoE,EAAYmC,MAAQ,IAAI7rB,QAAQ,SAAU7D,GAAK,OAAO84B,EAAQ94B,IAC9DutB,EAAYjiB,UAAU,WAKlB,GAJwB,EAApBiiB,EAAY7W,QACZ6W,EAAY7W,QAAS,EACrB8U,GAAgB+B,IAEI,EAApBA,EAAY7W,MAA8B,CAC1C6W,EAAY7W,QAAS,EACrB,IAAI+Y,EAAgBlC,EAAYkC,cAC5BA,GACAA,EAAcuJ,eAGtBzL,EAAYmC,MAAQvG,GACpB2P,EAAM,SAmmEiCG,CAAcz6B,KAAK+gB,SAsDlEwY,EAAQr5B,UAAU+5B,OAAS,WAAcj6B,KAAK+gB,OAAO3L,MAAU,IAyD/DmkB,EAAQr5B,UAAUw6B,SAAW,WAAc16B,KAAK+gB,OAAO3L,KAAU,IAsBjEmkB,EAAQr5B,UAAUy6B,cAAgB,WAAc1L,GAAsBjvB,KAAK+gB,OAAQ/gB,KAAKkH,UAOxFqyB,EAAQr5B,UAAU06B,eAAiB,YA3rEvC,SAAwBpZ,GACpBtE,IAAsB,GACtB,KA/BJ,SAAuBsE,GAEnByN,GAp5JJ,SAAoChN,GAChC,IACIrK,EADAe,EAAQF,GAAgBwJ,GAE5B,GAAItiB,MAAMuC,QAAQyW,GAAQ,CACtB,IAAIZ,EAAYiK,GAAiBrJ,EAAOsJ,IAEpC/a,EAAUoa,GAAe3I,EAAOZ,GADpCH,EAAOE,GAAwBC,EAAWY,IACUnD,MAC5CgM,UAAYS,EACpBN,GAAgBM,EAAmB/a,GACnCya,GAAgBza,EAAQqa,OAAQra,OAE/B,CACD,IAAIA,EACJ0Q,EAAOE,IADH5Q,EAAUyR,GACyBZ,UAAW7Q,EAAQyR,OAE9D,OAAOf,EAo4JIijB,CAA2BrZ,GACVA,GA8BxBmZ,CAAcnZ,WAGdtE,IAAsB,IAqrEuB0d,CAAe56B,KAAKkH,UACrEqyB,EAAQr5B,UAAU46B,yBAA2B,SAAUC,GACnD,GAAI/6B,KAAKy5B,QACL,MAAM,IAAI52B,MAAM,iEAEpB7C,KAAK05B,kBAAoBqB,GAE7BxB,EAAQr5B,UAAU86B,iBAAmB,WAAch7B,KAAKy5B,QAAU,MAClEF,EAAQr5B,UAAU+6B,eAAiB,SAAUC,GACzC,GAAIl7B,KAAK05B,kBACL,MAAM,IAAI72B,MAAM,qDAEpB7C,KAAKy5B,QAAUyB,GAEnB3B,EAAQr5B,UAAU85B,eAAiB,WAC/B,OAAOh6B,KAAKoH,SAAWpH,KAAK+gB,OAAO1L,IAAQrV,KAAKw5B,kBAE7CD,EAhPiB,GAmPxB4B,GAA6B,SAAUp1B,GAEvC,SAASq1B,EAAYC,GACjB,IAAIn1B,EAAQH,EAAOnF,KAAKZ,KAAMq7B,EAAO,MAAO,IAAMr7B,KAElD,OADAkG,EAAMm1B,MAAQA,EACPn1B,EASX,OAbApG,EAAUs7B,EAAar1B,GAMvBq1B,EAAYl7B,UAAUy6B,cAAgB,WAAczL,GAAwBlvB,KAAKq7B,QACjFD,EAAYl7B,UAAU06B,eAAiB,YArsE3C,SAAkCjiB,GAC9BuE,IAAsB,GACtB,IACIgS,GAAwBvW,WAGxBuE,IAAsB,IA+rE2Boe,CAAyBt7B,KAAKq7B,QACnF77B,OAAO0S,eAAekpB,EAAYl7B,UAAW,UAAW,CACpD0a,IAAK,WAAc,OAAO,MAC1Bkf,YAAY,EACZC,cAAc,IAEXqB,EAdqB,CAe9B9B,IAqCF,SAASiC,GAAiBC,EAAiB/jB,EAAOG,GAW9C,OAVKugB,KAEDA,GAA8B,SAAUpyB,GAEpC,SAAS01B,IACL,OAAkB,OAAX11B,GAAmBA,EAAOlF,MAAMb,KAAMU,YAAcV,KAE/D,OAJAF,EAAU27B,EAAa11B,GAIhB01B,EALkB,CAM3BD,IAEC,IAAIrD,GAAa3gB,GAAiBC,EAAOG,IA0RpD,IAAI8jB,GAA4B,WAC5B,SAASA,EAAWC,GAChB37B,KAAK27B,cAAgBA,EAIzB,OADAD,EAAWrrB,kBAAoB,WAAc,OAAOurB,GAA2BF,IACxEA,EANoB,GAU3BE,GA3TJ,SAA0BJ,GACtB,OAAOD,GAAiBC,EAAiB7e,KAA4BD,OA8VrEmf,GAA0B,WAG1B,OAFA,aADyB,GA+BzBC,GAAkC,WAGlC,OAFA,aADiC,GAmCjCC,GAA2B,WAC3B,SAASA,KAIT,OADAA,EAAU1rB,kBAAoB,WAAc,OAAO2rB,MAC5CD,EALmB,GAS1BC,GAnJJ,WACI,OAXJ,SAA8BpkB,GAC1B,IAAIwN,EAUwB1I,KAVR3G,IACpB,GAAIoP,GAAqBC,GACrB,OAAOA,EAGP,MAAM,IAAIviB,MAAM,gEAKbo5B,IAoKPC,GACJ,SAAWA,UACPA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAuB,MAAI,GAAK,QAChDA,EAAgBA,EAAwB,OAAI,GAAK,SACjDA,EAAgBA,EAAqB,IAAI,GAAK,MAC9CA,EAAgBA,EAA8B,aAAI,GAAK,eANhDA,EAAX,CAOE,IAMEC,GAA2B,WAG3B,OAFA,aAD0B,GA8B1BC,GAAU,IAZe,WAOzB,OANA,SAAiBC,GACbr8B,KAAKq8B,KAAOA,EACZr8B,KAAKs8B,MAAQD,EAAKE,MAAM,KAAK,GAC7Bv8B,KAAKw8B,MAAQH,EAAKE,MAAM,KAAK,GAC7Bv8B,KAAKy8B,MAAQJ,EAAKE,MAAM,KAAKlyB,MAAM,GAAGnH,KAAK,MALvB,GAYd,CAAY,SAStBw5B,GAA4C,SAAU32B,GAKtD,SAAS42B,EAA4B7F,GACjC,IAAI5wB,EAAQH,EAAOnF,KAAKZ,OAASA,KAEjC,OADAkG,EAAM4wB,SAAWA,EACV5wB,EAOX,OAdApG,EAAU68B,EAA6B52B,GASvC42B,EAA4Bz8B,UAAUq4B,wBAA0B,SAAU/W,GAEtE,IAAIgO,EAAe/a,GAAgB+M,GACnC,OAAO,IAAIob,GAAmBpN,EAAcxvB,KAAK82B,WAE9C6F,EAfoC,CAgB7CnE,IACF,SAASqE,GAAW95B,GAChB,IAAIiI,EAAQ,GACZ,IAAK,IAAI8xB,KAAe/5B,EAChBA,EAAIlD,eAAei9B,IAEnB9xB,EAAMnJ,KAAK,CAAE2P,SADEzO,EAAI+5B,GACcC,aAAcD,IAGvD,OAAO9xB,EAKX,IAAIgyB,GAAe,IAAInsB,GAAe,qBAAsB,CAAEL,WAAY,OAAQC,QAAS,WAAc,OAAOugB,GAAkBvW,GAAOwiB,QAKrIA,GAAY,IAAIpsB,GAAe,kBAAmB,CAClDL,WAAY,OACZC,QAAS,WAAc,OAAO4I,MAE9B6jB,GAAwC,GAqBxCN,GAAoC,SAAU72B,GAM9C,SAASo3B,EAAoB3N,EAAcsH,GACvC,IAAI5wB,EAAQH,EAAOnF,KAAKZ,OAASA,KAMjC,OALAkG,EAAMspB,aAAeA,EACrBtpB,EAAM4wB,SAAWA,EACjB5wB,EAAM2yB,cAAgBrJ,EAAa7e,KACnCzK,EAAM8yB,SAAWxJ,EAAa4N,UAAU,GAAG,GAC3Cl3B,EAAM+yB,mBAAqB,GACpB/yB,EA6FX,OAzGApG,EAAUq9B,EAAqBp3B,GAc/BvG,OAAO0S,eAAeirB,EAAoBj9B,UAAW,SAAU,CAC3D0a,IAAK,WACD,OAAOiiB,GAAW78B,KAAKwvB,aAAab,SAExCmL,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeirB,EAAoBj9B,UAAW,UAAW,CAC5D0a,IAAK,WACD,OAAOiiB,GAAW78B,KAAKwvB,aAAaZ,UAExCkL,YAAY,EACZC,cAAc,IAElBoD,EAAoBj9B,UAAUC,OAAS,SAAUia,EAAU8e,EAAkBC,EAAoBrC,GAC7F,IAxvI4BuG,EAC5BC,EApLen6B,EAEfo6B,EAy6IIC,OAA4Cl4B,IAAvB6zB,EAErBsE,GADJ3G,EAAWA,GAAY92B,KAAK82B,UAnDpC,SAA+B2G,EAAkBrc,GAC7C,MAAO,CACHxG,IAAK,SAAUjH,EAAOkH,GAClB,IAAI/Y,EAAQ27B,EAAiB7iB,IAAIjH,EAAOupB,IACxC,OAAIp7B,IAAUo7B,IACVriB,IAAkBqiB,GAMXp7B,EAEJsf,EAAexG,IAAIjH,EAAOkH,KAuCH6iB,CAAsBtjB,EAAU0c,EAAS1c,UAAYA,EACnFkS,EAAkBmR,EAAiB7iB,IAAIkhB,GAAkBzW,IACzDkH,EAAYkR,EAAiB7iB,IAAIuhB,GAAW,MAC5CwB,EAAYH,GAh7IDr6B,EAi7IGnD,KAAKg5B,SA96IvB7T,GADAoY,EA+6IiCjR,EAAgBhH,eAAe,KAAMtlB,KAAKwvB,eA/6IrC9S,KAAW3G,KAExCwnB,EAAcK,cAAcz6B,EAAMsqB,IAGjB,OAAtBA,GACS8P,EAAcK,cAAcz6B,GAG5Bo6B,EAAcM,gBAAgBpQ,GAAmBtqB,KAwKlCk6B,EA+vIWlE,EA9vIvCmE,EA8vIsBhR,EA9vIIhH,eAAe,KAAM,MACV,iBAAtB+X,EACdlY,GAAqBmY,GAClBA,EAAgBQ,kBAAkBT,GAClCC,EAAgBS,cAAcV,GAClCA,GA0vIIW,EAAYh+B,KAAKwvB,aAAayO,OAAS,IACvC,IACAlP,EAAeyO,EAA0DxM,KAArCyM,EAAiB7iB,IAAIoiB,IACzD5X,EAAWkH,EAAgBhH,eAAeqY,EAAW39B,KAAKwvB,cAC1D2J,GAAsBwE,IAEtBxY,GAAqBC,GACjBA,EAASoL,aAAamN,EAAW,aAAcvB,GAAQC,MACvDsB,EAAUnN,aAAa,aAAc4L,GAAQC,OAGrD,IAGI7a,EACA0c,EAJAC,EAAY/R,GAAY,KAAMsB,IAAa,EAAG,KAAM,EAAG,EAAG,KAAM,KAAM,MAAOqB,EAAaiP,EAAW1R,EAAiBlH,EAAUmH,EAAWkR,GAE3IW,EAAW7gB,GAAU4gB,EAAW,MAGpC,IACQ7R,EAAgBiB,OAChBjB,EAAgBiB,QACpB,IAAIzG,EAz2EhB,SAAiCuX,EAAOjmB,EAAK6P,EAAUqE,EAAiBlH,EAAUmH,GAxlM9E5S,IAAW,EACXD,GAAwB,KAylMxB,IAhiEsB2T,EAgiElBhS,EAAQ4M,EAAS9S,IACjB2R,EAAgBsF,GAAYnE,GAjiEVoF,EAiiEqCjV,EAAIC,UA1hE7CimB,gBACbjR,EAAWiR,cACR5Q,IAAa,EAAGL,EAwhEiDjV,EAAIwV,OAAQxV,EAAIyV,KAAMzV,EAAImmB,cAAenmB,EAAIomB,SAAUpmB,EAAI2V,YAAY,KAAM3V,EAAI6lB,OAAS,EAAgB,EAAqB3R,EAAiBlH,EAAUmH,GAC/N9U,EAAQ+U,GAAkB,EAAG,EAAiB6R,EAAO,KAAM,MAU/D,OATIhjB,EAAM+B,oBAjgMd,SAAkBmB,EAAelD,EAAO1K,GAEpC,IAAIwd,EAAqB,iBAATxd,EAAoBA,EAAKP,IAAiBO,EAAKqQ,WAAW,IAAM,EAGtE,MAANmN,IACAA,EAAKxd,EAAKP,IAAiB+N,MAI/B,IAAIsgB,EAAWtQ,EAAKlQ,GAIhBygB,EAAO,GAAKD,EAIZhe,EAAgB,GAAXge,EACL/d,EAAgB,GAAX+d,EACL1e,EAAQ1E,EAAMxD,KAHE,IAAX4mB,EAKLhe,EAAMC,EAAMX,EAAMxB,EAAgB,IAAMmgB,EAAS3e,EAAMxB,EAAgB,IAAMmgB,EACxEhe,EAAMX,EAAMxB,EAAgB,IAAMmgB,EAAS3e,EAAMxB,EAAgB,IAAMmgB,EAG5Eje,EAAMC,EAAMX,EAAMxB,EAAgB,IAAMmgB,EAAS3e,EAAMxB,EAAgB,IAAMmgB,EACxEhe,EAAMX,EAAMxB,EAAgB,IAAMmgB,EAAS3e,EAAMxB,IAAkBmgB,EAyF5EC,CA/EJ,SAAwClnB,EAAOC,GAC3C,IAAIknB,EAAwBtgB,GAAiB7G,EAAOC,GACpD,IAA+B,IAA3BknB,EACA,OAAOA,EAEX,IAAIvjB,EAAQ3D,EAASvC,IACjBkG,EAAM+B,oBACN3F,EAAM8G,cAAgB7G,EAAS/W,OAC/Byd,GAAY/C,EAAMxD,KAAMJ,GACxB2G,GAAY1G,EAAU,MACtB0G,GAAY/C,EAAM2Q,UAAW,OAGjC,IAAI6S,EAAYrgB,GAA0B/G,EAAOC,GAC7ConB,EAAchmB,GAAuB+lB,GACrCxS,EAAcrT,GAAsB6lB,EAAWnnB,GAC/C6G,EAAgB9G,EAAM8G,cAG1B,GAAI3F,GAAkBimB,GAIlB,IAHA,IAAIE,EAAa1S,EAAYlX,IAAO0C,KAG3BrX,EAAI,EAAGA,EAAI,EAAGA,IACnBkX,EAAS6G,EAAgB/d,GAAK6rB,EAAYyS,EAAct+B,GAAKu+B,EAAWD,EAAct+B,GAI9F,OADAkX,EAAS6G,EAAgB3H,IAAmBioB,EACrCtgB,EAi8LgBygB,CAA+BvnB,EAAOwQ,GAAWA,EA94L3C9S,IA84LqDiD,EAAIzH,MAClF8G,EAAMS,MAAQ,EApoCtB,SAAuBT,EAAO1T,EAAOk7B,GAMjCxnB,EAAMS,MAAgB,EAJVT,EAAMS,MAKlBT,EAAM6H,eAAiBvb,EACvB0T,EAAMgI,aAAe1b,EA6nCqB,EA5nC1C0T,EAAMyH,gBAAkBnb,EA4nCpBm7B,CAAcznB,EAAOwQ,EAAStnB,QAhsCtC,SAAqC+Y,GAGjC,IAAI2B,EAAQqB,KAAWvH,KACtBkG,EAAM8G,aAAe9G,EAAM8G,WAAa,KAAKtgB,KAAK6X,EAAsB3V,OA6rCrEo7B,CAA4B1nB,IAGhCqP,EAActR,IAAQyS,EAAS7R,IAC/B0Q,EAAcrR,IAAagC,EACpBwQ,EAAS7R,IAAiB0Q,EA21ELsY,CAAwBzB,EAAW39B,KAAKwvB,aAAc2O,EAAW7R,EAAiBlH,GAItG,GAHA8Y,EAAevmB,GAAS,EAAGwmB,GAGvBjF,EAIA,IAHA,IAAIn1B,EAAQ,EACRsX,EAAQ8iB,EAAUhpB,IAClBkqB,EAAgBnB,EAAalX,WAAa,GACrCxmB,EAAI,EAAGA,EAAI04B,EAAiBv4B,OAAQH,IAAK,CAI9C,IAHA,IAAI8+B,EAAWpG,EAAiB14B,GAC5B++B,EAAa,KACbC,EAAgB,KACXtkB,EAAI,EAAGA,EAAIokB,EAAS3+B,OAAQua,IAAK,CAClCG,EAAM+B,oBAKN/B,EAAMoQ,oBACNpQ,EAAM2Q,UAAUnnB,SAASd,EAAQqS,GAAe,EAAG,MACnDiF,EAAMxD,KAAKhT,OAAOd,EAAQqS,GAAe,EAAG,MAC5C+nB,EAAUt5B,OAAOd,EAAQqS,GAAe,EAAG,OAE/C,IAAIqB,EAAQ+U,GAAkBzoB,EAAO,EAAiBu7B,EAASpkB,GAAI,KAAM,MACzEskB,EAAiBA,EAAc79B,KAAO8V,EAAU8nB,EAAa9nB,EAC7D+nB,EAAgB/nB,EAEpB4nB,EAAcx9B,KAAK09B,GAM3B/d,EAAY+N,GAAoBzI,EAAe9mB,KAAKwvB,aAAc2O,EAAWpP,EAAa,CAACoC,KAC3FtC,GAAcsP,EAAW/nB,GAAe0Q,GACxC8D,GAAuBuT,WAGvBxgB,GAAUygB,GACN9R,EAAgBkB,KAChBlB,EAAgBkB,MAExB,IAAIiS,EAAe,IAAIC,GAAe1/B,KAAK64B,cAAerX,EAAW+Z,GAAiBG,GAAYwC,EAAcC,GAAYA,EAAWD,GAKvI,OAJIV,IAEAiC,EAAa/nB,SAASiiB,WAAW5X,MAAQmc,GAEtCuB,GAEJtC,EA1G4B,CA2GrCnF,IAUE0H,GAAgC,SAAU35B,GAE1C,SAAS45B,EAAgB9G,EAAe1X,EAAUlI,EAAU2mB,EAAY9e,GACpE,IAAI5a,EAAQH,EAAOnF,KAAKZ,OAASA,KASjC,OARAkG,EAAM+S,SAAWA,EACjB/S,EAAM05B,WAAaA,EACnB15B,EAAM4a,OAASA,EACf5a,EAAM25B,WAAa,GACnB35B,EAAMib,SAAWA,EACjBjb,EAAMwR,SAAWxR,EAAM45B,kBAAoB,IAAI3E,GAAYyE,GAC3D15B,EAAMwR,SAASiiB,WAAa/M,IAAgB,EAAGgT,GAC/C15B,EAAM2yB,cAAgBA,EACf3yB,EAiBX,OA5BApG,EAAU6/B,EAAiB55B,GAa3BvG,OAAO0S,eAAeytB,EAAgBz/B,UAAW,WAAY,CACzD0a,IAAK,WAAc,OAAO,IAAIiG,GAAa7gB,KAAK8gB,OAAQ9gB,KAAK4/B,aAC7D9F,YAAY,EACZC,cAAc,IAElB4F,EAAgBz/B,UAAU8oB,QAAU,WAEhChpB,KAAK6/B,WAAWn3B,QAAQ,SAAUhG,GAAM,OAAOA,MAC/C1C,KAAK6/B,WAAa,KAClB7/B,KAAK0X,SAASsR,WAElB2W,EAAgBz/B,UAAU8b,UAAY,SAAUke,GAE5Cl6B,KAAK6/B,WAAWh+B,KAAKq4B,IAElByF,EA7BwB,CA8BjC5H,IAeEgI,IAAW,EACXC,IAAiB,EASrB,SAASC,KAEL,OADAD,IAAiB,EACVD,GAm3DX,IAAIG,GAA6B,CAC7B3N,QAASiG,GACT7E,SAAU+I,GACV1J,KAAM,CAACoG,KAEP+G,GAA+B,SAAUp6B,GAEzC,SAASq6B,EAAehJ,EAAc3zB,GAClC,IAAIyC,EAAQH,EAAOnF,KAAKZ,OAASA,KACjCkG,EAAMzC,QAAUA,EAEhByC,EAAMm6B,qBAAuB,GAC7Bn6B,EAAMkU,SAAWlU,EACjBA,EAAM25B,WAAa,GACnB,IAAI1vB,EA3gXZ,SAAwBQ,EAAM2vB,GAC1B,IAAInwB,EA0gXiCinB,EA1gXdlnB,KAAkB,KAIzC,OAAOC,EAsgXeowB,GAYlB,OAVAr6B,EAAMm6B,qBAAuBlwB,EAAYqwB,UAQzCt6B,EAAMu6B,YA/kHd,SAAwBtK,EAASrxB,EAAQywB,GAIrC,YAHe,IAAXzwB,IAAqBA,EAAS,WACN,IAAxBywB,IAAkCA,EAAsB,MAC5DzwB,EAASA,GAAUuwB,KACZ,IAAIC,GAAWa,EAASZ,EAAqBzwB,GA2kH5B47B,CAAetJ,EAAc3zB,EAPvB,CACtB,CACI8uB,QAAS6G,GACT3G,SAAUvsB,GAEdg6B,KAGJh6B,EAAMib,SAAWjb,EAAM0U,IAAIwc,GACpBlxB,EA0BX,OA9CApG,EAAUsgC,EAAgBr6B,GAsB1Bq6B,EAAelgC,UAAU0a,IAAM,SAAUjH,EAAOkH,EAAe8lB,GAG3D,YAFsB,IAAlB9lB,IAA4BA,EAAgBiX,GAASH,yBACrC,IAAhBgP,IAA0BA,EAAc1mB,GAAYS,SACpD/G,IAAUme,IAAYne,IAAUylB,IAAezlB,IAAUie,GAClD5xB,KAEJA,KAAKygC,YAAY7lB,IAAIjH,EAAOkH,EAAe8lB,IAEtDnhC,OAAO0S,eAAekuB,EAAelgC,UAAW,2BAA4B,CACxE0a,IAAK,WACD,OAAO5a,KAAK4a,IAAI4d,KAEpBsB,YAAY,EACZC,cAAc,IAElBqG,EAAelgC,UAAU8oB,QAAU,WAE/BhpB,KAAK6/B,WAAWn3B,QAAQ,SAAUhG,GAAM,OAAOA,MAC/C1C,KAAK6/B,WAAa,MAEtBO,EAAelgC,UAAU8b,UAAY,SAAUke,GAE3Cl6B,KAAK6/B,WAAWh+B,KAAKq4B,IAElBkG,EA/CuB,CAgDhChH,IACEwH,GAAmC,SAAU76B,GAE7C,SAAS86B,EAAmBC,GACxB,IAAI56B,EAAQH,EAAOnF,KAAKZ,OAASA,KAEjC,OADAkG,EAAM46B,WAAaA,EACZ56B,EAKX,OATApG,EAAU+gC,EAAoB96B,GAM9B86B,EAAmB3gC,UAAUC,OAAS,SAAU4gC,GAC5C,OAAO,IAAIZ,GAAcngC,KAAK8gC,WAAYC,IAEvCF,EAV2B,CAWpCxH,IA6fE2H,GAA8B,SAAUj7B,GASxC,SAASk7B,EAAaC,QACF,IAAZA,IAAsBA,GAAU,GACpC,IAAIh7B,EAAQH,EAAOnF,KAAKZ,OAASA,KAEjC,OADAkG,EAAMi7B,UAAYD,EACXh7B,EAkDX,OA9DApG,EAAUmhC,EAAcl7B,GAkBxBk7B,EAAa/gC,UAAUkhC,KAAO,SAAUt/B,GAASiE,EAAO7F,UAAUyB,KAAKf,KAAKZ,KAAM8B,IASlFm/B,EAAa/gC,UAAU0H,UAAY,SAAUy5B,EAAiBt/B,EAAO2D,GACjE,IAAI47B,EACAC,EAAU,SAAUv+B,GAAO,OAAO,MAClCw+B,EAAa,WAAc,OAAO,MAClCH,GAA8C,iBAApBA,GAC1BC,EAActhC,KAAKmhC,UAAY,SAAUr/B,GACrC2D,WAAW,WAAc,OAAO47B,EAAgB1/B,KAAKG,MACrD,SAAUA,GAASu/B,EAAgB1/B,KAAKG,IACxCu/B,EAAgBt/B,QAChBw/B,EAAUvhC,KAAKmhC,UAAY,SAAUn+B,GAAOyC,WAAW,WAAc,OAAO47B,EAAgBt/B,MAAMiB,MAC9F,SAAUA,GAAOq+B,EAAgBt/B,MAAMiB,KAE3Cq+B,EAAgB37B,WAChB87B,EAAaxhC,KAAKmhC,UAAY,WAAc17B,WAAW,WAAc,OAAO47B,EAAgB37B,cACxF,WAAc27B,EAAgB37B,eAItC47B,EAActhC,KAAKmhC,UAAY,SAAUr/B,GAAS2D,WAAW,WAAc,OAAO47B,EAAgBv/B,MAC9F,SAAUA,GAASu/B,EAAgBv/B,IACnCC,IACAw/B,EACIvhC,KAAKmhC,UAAY,SAAUn+B,GAAOyC,WAAW,WAAc,OAAO1D,EAAMiB,MAAc,SAAUA,GAAOjB,EAAMiB,KAEjH0C,IACA87B,EACIxhC,KAAKmhC,UAAY,WAAc17B,WAAW,WAAc,OAAOC,OAAoB,WAAcA,OAG7G,IAAIwC,EAAOnC,EAAO7F,UAAU0H,UAAUhH,KAAKZ,KAAMshC,EAAaC,EAASC,GAIvE,OAHIH,aAA2Bh+B,GAC3Bg+B,EAAgBj9B,IAAI8D,GAEjBA,GAEJ+4B,EA/DsB,CAgE/Bl3B,GA2BE03B,GAA6B,WAC7B,SAASA,KAIT,OADAA,EAAYpxB,kBAAoB,WAAc,OAAOqxB,GAA4BD,EAAa/F,KACvF+F,EALqB,GAS5BC,GAjtGJ,SAA2BC,EAAkBnG,GACzC,OAWJ,SAA2BmG,EAAkBnG,EAAiB/d,EAAW/F,GA4BrE,GA3BK0gB,KAEDA,GAA+B,SAAUryB,GAErC,SAAS67B,EAAaC,EAAwBC,EAAYC,EAAQC,EAAWC,EAAUC,GACnF,IAAIh8B,EAAQH,EAAOnF,KAAKZ,OAASA,KAOjC,OANAkG,EAAM27B,uBAAyBA,EAC/B37B,EAAM47B,WAAaA,EACnB57B,EAAM67B,OAASA,EACf77B,EAAM87B,UAAYA,EAClB97B,EAAM+7B,SAAWA,EACjB/7B,EAAMg8B,eAAiBA,EAChBh8B,EAYX,OArBApG,EAAU8hC,EAAc77B,GAWxB67B,EAAa1hC,UAAUiiC,mBAAqB,SAAUj7B,EAASk7B,EAAc3kB,EAAW/F,EAAU3T,GAC9F,IAAI4U,EAnpIpB,SAAmC0C,EAAOnU,EAASm7B,EAAiBjd,EAAUkd,EAAS/jB,GACnF,IAAIuO,EAAYhQ,KACZiQ,EAAyBpQ,KAC7BI,IAAY,GACZH,GAAyB,MACzB,IAAIjE,EAAQyT,GAAYiW,EAAiBhnB,EAAOnU,EAAS,GAWzD,OAVAyR,EAAMxC,IAAoBksB,EACtBC,IACA3pB,EAAMpD,IAAW+sB,EAAQC,cAE7B3V,IAAgB,EAAGjU,GACf0C,EAAM+B,oBACN/B,EAAMgI,KAAK9E,cAAgBA,GAE/BxB,GAAY+P,GACZlQ,GAAyBmQ,GAClBpU,EAmoIiB6pB,CAA0BxiC,KAAK+hC,OAAQ76B,EAASlH,KAAK6hC,uBAAwB7hC,EAAgBA,KAAKiiC,SAAUjiC,KAAKkiC,gBACzHE,GACA9a,GAAW3O,EAAOypB,EAAc1qB,EAAU3T,EAAO0Z,EAAU1Z,OAE/DknB,GAAuBtS,EAAO3Y,KAAK+hC,OAAQ76B,GAC3C,IAAIu7B,EAAU,IAAInJ,GAAQ3gB,EAAOzR,GAAU,GAE3C,OADAu7B,EAAQ9I,WAAahhB,EAAMlD,IACpBgtB,GAEJb,EAtBmB,CAuB5BD,IAEiB,IAAnBlkB,EAAU9M,KAA4B,CACtC,IAAI+xB,EAAgBhrB,EAAS+F,EAAU1Z,OAEvC,OAAO,IAAIq0B,GAAc1gB,EAAU6jB,GAAiBC,EAAiB/d,EAAW/F,GAAW+F,EAAU8Q,OAAQ7R,KAAW3G,IAAW2sB,EAAcntB,IAAUkI,EAAUc,eAGrK,OAAO,KA7CJokB,CAAkBhB,EAAkBnG,EAAiB7e,KAA4BD,OA0gIxFkmB,GAAU,IAAIzvB,IAKlB,SAAS0vB,GAAsB1U,EAAI1d,GAC/B,IAAIknB,EAAWiL,GAAQhoB,IAAIuT,IAI/B,SAA2BA,EAAIxd,GAC3B,GAAIA,EACA,MAAM,IAAI9N,MAAM,mCAAqCsrB,EAAK,MAAQza,GAAU/C,GAAQ,OAAS+C,GAAU/C,EAAKxN,QALhH2/B,CAAkB3U,EAAIwJ,GAAYA,EAASmJ,YAC3C8B,GAAQ7P,IAAI5E,EAAI1d,GAoDpB,IAAIsyB,GAAOlL,SACX,SAASmL,GAAOjlB,GACZ,MAAoB,mBAANA,EAalB,IAAIklB,GAAgB,6DAChBC,GAAkB,4CAClBC,GAA4B,mEAC5BC,GAAwC,WACxC,SAASC,EAAuBC,GAC5BtjC,KAAKujC,SAAWD,GAAW3wB,GAAiB,QAsMhD,OApMA0wB,EAAuBnjC,UAAUsjC,oBAAsB,WAAc,OAAO,GAC5EH,EAAuBnjC,UAAUuQ,QAAU,SAAUnQ,GAAK,OAAO,WAE7D,IADA,IAAIgR,EAAO,GACFrI,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpCqI,EAAKrI,GAAMvI,UAAUuI,GAEzB,OAAO,IAAK3I,EAAE6G,KAAKtG,MAAMP,EAAG0B,EAAS,MAAC,GAASsP,OAGnD+xB,EAAuBnjC,UAAUujC,wBAA0B,SAAUC,EAAYC,GAC7E,IAAI13B,EAEAA,OADsB,IAAfy3B,EACE,IAAI/jC,MAAMgkC,EAAiBhjC,QAG3B,IAAIhB,MAAM+jC,EAAW/iC,QAElC,IAAK,IAAIH,EAAI,EAAGA,EAAIyL,EAAOtL,OAAQH,IAK3ByL,EAAOzL,QADe,IAAfkjC,EACK,GAEPA,EAAWljC,IAAMhB,OACV,CAACkkC,EAAWljC,IAGZ,GAEZmjC,GAA2C,MAAvBA,EAAiBnjC,KACrCyL,EAAOzL,GAAKyL,EAAOzL,GAAGyB,OAAO0hC,EAAiBnjC,KAGtD,OAAOyL,GAEXo3B,EAAuBnjC,UAAU0jC,eAAiB,SAAUjzB,EAAMkzB,GAC9D,IAAIC,EAAUnzB,EAAK1N,WAQnB,GAAIggC,GAAcc,KAAKD,IAClBZ,GAAgBa,KAAKD,KAAaX,GAA0BY,KAAKD,GAClE,OAAO,KAGX,GAAInzB,EAAKsB,YAActB,EAAKsB,aAAe4xB,EAAW5xB,WAClD,OAAOtB,EAAKsB,WAGhB,IAAI+xB,EAAoBrzB,EAAKszB,eAC7B,GAAID,GAAqBA,IAAsBH,EAAWI,eAAgB,CAGtE,IAAIA,EAA8C,mBAAtBD,EAAmCA,IAAsBA,EACjFE,EAAeD,EAAelhC,IAAI,SAAUohC,GAAa,OAAOA,GAAaA,EAAUxzB,OACvFyzB,EAAqBH,EAAelhC,IAAI,SAAUohC,GAClD,OAAOA,GAAaE,GAAoCF,EAAUG,cAEtE,OAAOtkC,KAAKyjC,wBAAwBS,EAAcE,GAGtD,IAAIT,EAAmBhzB,EAAK9Q,eAAeoR,KAAeN,EAAKM,IAC3DyyB,EAAa1jC,KAAKujC,UAAYvjC,KAAKujC,SAASgB,gBAC5CvkC,KAAKujC,SAASgB,eAAe,oBAAqB5zB,GACtD,OAAI+yB,GAAcC,EACP3jC,KAAKyjC,wBAAwBC,EAAYC,GAM7C,IAAIhkC,MAAMgR,EAAKhQ,QAAQstB,UAAK3oB,IAEvC+9B,EAAuBnjC,UAAU+R,WAAa,SAAUtB,GAGpD,IAAKqyB,GAAOryB,GACR,MAAO,GAEX,IAAIkzB,EAAaW,GAAc7zB,GAC3BsB,EAAajS,KAAK4jC,eAAejzB,EAAMkzB,GAI3C,OAHK5xB,GAAc4xB,IAAerkC,SAC9ByS,EAAajS,KAAKiS,WAAW4xB,IAE1B5xB,GAAc,IAEzBoxB,EAAuBnjC,UAAUukC,gBAAkB,SAAUC,EAAYb,GAErE,GAAIa,EAAWnR,aAAemR,EAAWnR,cAAgBsQ,EAAWtQ,YAAa,CAC7E,IAAIA,EAAcmR,EAAWnR,YAI7B,MAH2B,mBAAhBA,GAA8BA,EAAYA,cACjDA,EAAcA,EAAYA,aAEvBA,EAGX,OAAImR,EAAWJ,YAAcI,EAAWJ,aAAeT,EAAWS,WACvDD,GAAoCK,EAAWJ,YAGtDI,EAAW7kC,eA1icL,mBA2icC6kC,EAAsB,gBAE1B,MAEXrB,EAAuBnjC,UAAUqzB,YAAc,SAAUmR,GACrD,IAAK1B,GAAO0B,GACR,MAAO,GAEX,IAAIb,EAAaW,GAAcE,GAC3BC,EAAiB3kC,KAAKykC,gBAAgBC,EAAYb,IAAe,GAErE,OADwBA,IAAerkC,OAASQ,KAAKuzB,YAAYsQ,GAAc,IACtD5hC,OAAO0iC,IAEpCtB,EAAuBnjC,UAAU0kC,iBAAmB,SAAUF,EAAYb,GAEtE,GAAIa,EAAWG,cACXH,EAAWG,eAAiBhB,EAAWgB,aAAc,CACrD,IAAIA,EAAeH,EAAWG,aAI9B,MAH4B,mBAAjBA,GAA+BA,EAAaA,eACnDA,EAAeA,EAAaA,cAEzBA,EAGX,GAAIH,EAAWI,gBACXJ,EAAWI,iBAAmBjB,EAAWiB,eAAgB,CACzD,IAAIC,EAAmBL,EAAWI,eAC9BE,EAAiB,GAIrB,OAHAxlC,OAAOyT,KAAK8xB,GAAkBr8B,QAAQ,SAAUu8B,GAC5CD,EAAeC,GAAQZ,GAAoCU,EAAiBE,MAEzED,EAGX,OAAIN,EAAW7kC,eA3kcH,sBA4kcD6kC,EAAwB,mBAE5B,MAEXrB,EAAuBnjC,UAAU2kC,aAAe,SAAUH,GACtD,IAAK1B,GAAO0B,GACR,MAAO,GAEX,IAAIb,EAAaW,GAAcE,GAC3BG,EAAe,GACnB,GAAIhB,IAAerkC,OAAQ,CACvB,IAAI0lC,EAAuBllC,KAAK6kC,aAAahB,GAC7CrkC,OAAOyT,KAAKiyB,GAAsBx8B,QAAQ,SAAU8I,GAChDqzB,EAAarzB,GAAY0zB,EAAqB1zB,KAGtD,IAAI2zB,EAAkBnlC,KAAK4kC,iBAAiBF,EAAYb,GAWxD,OAVIsB,GACA3lC,OAAOyT,KAAKkyB,GAAiBz8B,QAAQ,SAAU8I,GAC3C,IAAI8yB,EAAa,GACbO,EAAahlC,eAAe2R,IAC5B8yB,EAAWziC,KAAKhB,MAAMyjC,EAAYtiC,EAAS6iC,EAAarzB,KAE5D8yB,EAAWziC,KAAKhB,MAAMyjC,EAAYtiC,EAASmjC,EAAgB3zB,KAC3DqzB,EAAarzB,GAAY8yB,IAG1BO,GAEXxB,EAAuBnjC,UAAUklC,iBAAmB,SAAUz0B,EAAM00B,GAChE,OAAO10B,aAAgBoyB,IAAQsC,KAAc10B,EAAKzQ,WAEtDmjC,EAAuBnjC,UAAUolC,OAAS,SAAU30B,GAAQ,MAAO,IACnE0yB,EAAuBnjC,UAAUqlC,OAAS,SAAUpiC,GAAQ,OAAO,IAAI00B,SAAS,IAAK,YAAc10B,EAAO,MAC1GkgC,EAAuBnjC,UAAUslC,OAAS,SAAUriC,GAChD,OAAO,IAAI00B,SAAS,IAAK,IAAK,YAAc10B,EAAO,UAEvDkgC,EAAuBnjC,UAAUulC,OAAS,SAAUtiC,GAEhD,OAAO,IAAI00B,SAAS,IAAK,OADN,UAAY10B,EAAO,wBAA0BA,EAAO,wCAA0CA,EAAO,qBAI5HkgC,EAAuBnjC,UAAUwlC,UAAY,SAAU/0B,GAEnD,MAAoB,iBAATA,GAAqBA,EAAe,SACpCA,EAAe,SAGnB,KAAO+C,GAAU/C,IAE5B0yB,EAAuBnjC,UAAUylC,YAAc,SAAUh1B,GAAQ,MAAO,KAAO+C,GAAU/C,IACzF0yB,EAAuBnjC,UAAU0lC,kBAAoB,SAAUziC,EAAM0iC,EAAWC,EAASC,GACrF,OAAOA,GAEX1C,EAAuBnjC,UAAU8lC,YAAc,SAAUC,EAAgB9iC,GAAQ,OAAO8iC,EAAe9iC,IAChGkgC,EAxMgC,GA0M3C,SAASgB,GAAoC6B,GACzC,OAAKA,EAGEA,EAAqBnjC,IAAI,SAAUojC,GACtC,IACIh0B,EADgBg0B,EAAoBx1B,KACNwB,cAElC,OAAO,IAAKA,EAAchL,KAAKtG,MAAMsR,EAAenQ,EAAS,MAAC,GADzCmkC,EAAoB70B,KAAO60B,EAAoB70B,KAAO,QALpE,GASf,SAASkzB,GAAc4B,GACnB,IAAIC,EAAcD,EAAKlmC,UAAYV,OAAOygB,eAAemmB,EAAKlmC,WAAa,KAI3E,OAHiBmmC,EAAcA,EAAYpmC,YAAc,OAGpCT,OA2wB2BgzB,OAiLAA,OAuCpD,IAWI8T,GAAsB,iBACtBC,GAAuB,kBACvBC,GAAe,gBACnB,SAASC,GAAgB1kC,GACrB,OAAOA,EAAMukC,IAEjB,SAASI,GAAiB3kC,GACtB,OAAOA,EAAMwkC,IAKjB,SAASI,GAAmBn+B,GAExB,IADA,IAAI+I,EAAS,GACJtI,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpCsI,EAAOtI,EAAK,GAAKvI,UAAUuI,GAE/BT,EAAQzG,MAAMlB,MAAM2H,EAASxG,EAASuP,IAmC1C,IAAIq1B,GAA8B,WAC9B,SAASA,IAIL5mC,KAAK6mC,SAAWr+B,QAgCpB,OA9BAo+B,EAAa1mC,UAAU4mC,YAAc,SAAU/kC,GAC3C,IAAIglC,EAAgB/mC,KAAKgnC,mBAAmBjlC,GACxCmF,EAAUlH,KAAKinC,aAAallC,GAG5BmlC,EAvDZ,SAAwBnlC,GACpB,OAAOA,EAAMykC,KAAiBG,GAsDRQ,CAAeplC,GACjCmlC,EAAYlnC,KAAK6mC,SAAU,QAAS9kC,GAChCglC,GACAG,EAAYlnC,KAAK6mC,SAAU,iBAAkBE,GAE7C7/B,GACAggC,EAAYlnC,KAAK6mC,SAAU,gBAAiB3/B,IAIpD0/B,EAAa1mC,UAAU+mC,aAAe,SAAUllC,GAC5C,OAAIA,EACO0kC,GAAgB1kC,GAAS0kC,GAAgB1kC,GAC5C/B,KAAKinC,aAAaP,GAAiB3kC,IAEpC,MAGX6kC,EAAa1mC,UAAU8mC,mBAAqB,SAAUjlC,GAElD,IADA,IAAIN,EAAIilC,GAAiB3kC,GAClBN,GAAKilC,GAAiBjlC,IACzBA,EAAIilC,GAAiBjlC,GAEzB,OAAOA,GAEJmlC,EArCsB,GA45BjC,SAASQ,GAAUz7B,GAGf,QAASA,GAA2B,mBAAbA,EAAIR,KAuB/B,IAoQIk8B,GACAC,GArQAC,GAAkB,IAAI12B,GAAe,2BAMrC22B,GAAuC,WACvC,SAASA,EAAsBC,GAC3B,IAAIvhC,EAAQlG,KACZA,KAAKynC,SAAWA,EAChBznC,KAAK0nC,aAAc,EACnB1nC,KAAK4B,MAAO,EACZ5B,KAAK2nC,YAAc,IAAItiC,QAAQ,SAAUwO,EAAK+zB,GAC1C1hC,EAAM2C,QAAUgL,EAChB3N,EAAM4C,OAAS8+B,IA4CvB,OAxCAJ,EAAsBtnC,UAAU2nC,gBAAkB,WAC9C,IAAI3hC,EAAQlG,KACZ,IAAIA,KAAK0nC,YAAT,CAGA,IAAII,EAAoB,GACpBpiC,EAAW,WACXQ,EAAMtE,MAAO,EACbsE,EAAM2C,WAEV,GAAI7I,KAAKynC,SACL,IAAK,IAAIjnC,EAAI,EAAGA,EAAIR,KAAKynC,SAAS9mC,OAAQH,IAAK,CAC3C,IAAIunC,EAAa/nC,KAAKynC,SAASjnC,KAC3B4mC,GAAUW,IACVD,EAAkBjmC,KAAKkmC,GAInC1iC,QAAQ2iC,IAAIF,GAAmB38B,KAAK,WAAczF,MAAeuiC,MAAM,SAAUxmC,GAAKyE,EAAM4C,OAAOrH,KAClE,IAA7BqmC,EAAkBnnC,QAClB+E,IAEJ1F,KAAK0nC,aAAc,IAiB3BF,EAAsB33B,gBAAkBS,GAAiB,CAAEqD,MAAO6zB,EAAuB/2B,QAAS,SAAuCnQ,GAAK,OAAO,IAAKA,GAAKknC,GAAuB/sB,GAAO8sB,GAAiB,KAAQ/2B,WAAY,OACvNg3B,EApD+B,GAwEtCU,GAAS,IAAIr3B,GAAe,SAoB5Bs3B,GAAuB,IAAIt3B,GAAe,wBAK1Cu3B,GAAc,IAAIv3B,GAAe,eASjCw3B,GAAyB,IAAIx3B,GAAe,wBAK5Cy3B,GAAmB,IAAIz3B,GAAe,iCAStC03B,GAAyB,WACzB,SAASA,KAeT,OAbAA,EAAQroC,UAAUsoC,IAAM,SAAU1lC,GAE9B0F,QAAQggC,IAAI1lC,IAGhBylC,EAAQroC,UAAUuI,KAAO,SAAU3F,GAE/B0F,QAAQC,KAAK3F,IAKrBylC,EAAQ14B,gBAAkBS,GAAiB,CAAEqD,MAAO40B,EAAS93B,QAAS,SAAyBnQ,GAAK,OAAO,IAAKA,GAAKioC,IAAe/3B,WAAY,OACrI+3B,EAhBiB,GA+BxBE,GAA8C,WAK9C,OAJA,SAAsCC,EAAiBC,GACnD3oC,KAAK0oC,gBAAkBA,EACvB1oC,KAAK2oC,mBAAqBA,GAHe,GAW7CC,GAAwC,SAAU9H,GAClD,OAAO,IAAIF,GAAkBE,IAE7B+H,GAA6BD,GAK7BE,GAHyC,SAAUhI,GACnD,OAAOz7B,QAAQwD,QAAQ+/B,GAAsC9H,KAI7DiI,GAAwD,SAAUjI,GAClE,OAAO,IAAI2H,GAA6BG,GAAsC9H,GAAa,KAE3FkI,GAA6CD,GAK7CE,GAHyD,SAAUnI,GACnE,OAAOz7B,QAAQwD,QAAQkgC,GAAsDjI,KAc7EoI,GAA0B,WAC1B,SAASA,IAKLlpC,KAAKmpC,kBAAoBN,GAIzB7oC,KAAKopC,mBAAqBN,GAI1B9oC,KAAKqpC,kCAAoCL,GAIzChpC,KAAKspC,mCAAqCL,GAkB9C,OAbAC,EAAShpC,UAAUqpC,WAAa,aAIhCL,EAAShpC,UAAUspC,cAAgB,SAAU74B,KAI7Cu4B,EAAShpC,UAAUupC,YAAc,SAAU3I,KAI/CoI,EAASr5B,gBAAkBS,GAAiB,CAAEqD,MAAOu1B,EAAUz4B,QAAS,SAA0BnQ,GAAK,OAAO,IAAKA,GAAK4oC,IAAgB14B,WAAY,OACzI04B,EApCkB,GA2CzBQ,GAAmB,IAAI74B,GAAe,mBAMtC84B,GAAiC,WAGjC,OAFA,aADgC,GAepC,SAASC,KACL,IAAIC,EAAMl3B,GAA+B,IACzC,SAAIk3B,KACAxC,GAAQwC,EAAW,SAEfvC,GAASD,GAAc,OAChB,IA8BnB,IAAIyC,GAAaF,KACjB,SAASG,GAAUC,EAAMC,GACrB,OAAO,KAgCX,IAAIC,GAAiBJ,GA3DrB,SAAqBK,EAAWjyB,GAE5B,YADc,IAAVA,IAAoBA,EAAQ,MACzBovB,GAAO8C,YAAYD,EAAWjyB,IAyDO,SAAUiyB,EAAWjyB,GAAS,OAAO6xB,IAUjFM,GAAWP,GAjEf,SAAeQ,EAAOC,GAElB,OADAlD,GAAMmD,WAAWF,EAAOC,GACjBA,GA+DyB,SAAUhqC,EAAGiB,GAAK,OAAOA,GAwGzDipC,GAAwB,WACxB,SAASA,EAAO94B,GACZ,IA2IkC+4B,EA3I9BC,EAAKh5B,EAAGi5B,qBAAsBA,OAA8B,IAAPD,GAAwBA,EA2BjF,GA1BA3qC,KAAK6qC,sBAAuB,EAC5B7qC,KAAK8qC,sBAAuB,EAI5B9qC,KAAK+qC,UAAW,EAIhB/qC,KAAKgrC,WAAa,IAAIhK,IAAa,GAMnChhC,KAAKirC,iBAAmB,IAAIjK,IAAa,GAMzChhC,KAAKkrC,SAAW,IAAIlK,IAAa,GAIjChhC,KAAKmrC,QAAU,IAAInK,IAAa,GACb,oBAAR3tB,KACP,MAAM,IAAIxQ,MAAM,kDAEpBwQ,KAAK+3B,oBACMprC,KACNqrC,SAAW,EADLrrC,KAENsrC,OAFMtrC,KAEQurC,OAASl4B,KAAKC,QAC7BD,KAAkB,cAHXrT,KAIFurC,OAJEvrC,KAIYurC,OAAOC,KAAKn4B,KAAkB,cAEjDA,KAA2B,uBANpBrT,KAOFurC,OAPEvrC,KAOYurC,OAAOC,KAAK,IAAIn4B,KAA2B,uBAE9Du3B,GAAwBv3B,KAA6B,yBAT9CrT,KAUFurC,OAVEvrC,KAUYurC,OAAOC,KAAKn4B,KAA6B,0BAkG9Bq3B,EA5GvB1qC,MA6GVurC,OAASb,EAAKa,OAAOC,KAAK,CAC3BroC,KAAM,UACNsoC,WAAY,CAAEC,eAAiB,GAC/BC,aAAc,SAAUC,EAAUt4B,EAASkF,EAAQqzB,EAAMC,EAAWC,GAChE,IAEI,OADAC,GAAQtB,GACDkB,EAASK,WAAWzzB,EAAQqzB,EAAMC,EAAWC,WAGpDG,GAAQxB,KAGhByB,SAAU,SAAUP,EAAUt4B,EAASkF,EAAQ0hB,EAAU4R,EAAWC,EAAW9jC,GAC3E,IAEI,OADA+jC,GAAQtB,GACDkB,EAASQ,OAAO5zB,EAAQ0hB,EAAU4R,EAAWC,EAAW9jC,WAG/DikC,GAAQxB,KAGhB2B,UAAW,SAAUT,EAAUt4B,EAASkF,EAAQ8zB,GAC5CV,EAASW,QAAQ/zB,EAAQ8zB,GACrBh5B,IAAYkF,IAGe,aAAvB8zB,EAAaE,QACb9B,EAAKG,qBAAuByB,EAAaG,UACzCC,GAAYhC,IAEgB,aAAvB4B,EAAaE,SAClB9B,EAAKI,qBAAuBwB,EAAaK,aAIrDC,cAAe,SAAUhB,EAAUt4B,EAASkF,EAAQzW,GAGhD,OAFA6pC,EAAS9E,YAAYtuB,EAAQzW,GAC7B2oC,EAAKmC,kBAAkB,WAAc,OAAOnC,EAAKS,QAAQ/J,KAAKr/B,MACvD,KA9Df,OAvEA0oC,EAAOqC,gBAAkB,WAAc,OAA6C,IAAtCz5B,KAAKC,QAAQsH,IAAI,kBAC/D6vB,EAAOsC,oBAAsB,WACzB,IAAKtC,EAAOqC,kBACR,MAAM,IAAIjqC,MAAM,mDAGxB4nC,EAAOuC,uBAAyB,WAC5B,GAAIvC,EAAOqC,kBACP,MAAM,IAAIjqC,MAAM,mDAexB4nC,EAAOvqC,UAAU+sC,IAAM,SAAUvqC,EAAIopC,EAAWC,GAC5C,OAAO/rC,KAAKurC,OAAO0B,IAAIvqC,EAAIopC,EAAWC,IAc1CtB,EAAOvqC,UAAUgtC,QAAU,SAAUxqC,EAAIopC,EAAWC,EAAW5oC,GAC3D,IAAIunC,EAAO1qC,KAAKurC,OACZM,EAAOnB,EAAKyC,kBAAkB,gBAAkBhqC,EAAMT,EAAI0qC,GAAeC,GAAQA,IACrF,IACI,OAAO3C,EAAKwC,QAAQrB,EAAMC,EAAWC,WAGrCrB,EAAK4C,WAAWzB,KAOxBpB,EAAOvqC,UAAUqtC,WAAa,SAAU7qC,EAAIopC,EAAWC,GACnD,OAAO/rC,KAAKurC,OAAOgC,WAAW7qC,EAAIopC,EAAWC,IAejDtB,EAAOvqC,UAAU2sC,kBAAoB,SAAUnqC,GAC3C,OAAO1C,KAAKsrC,OAAO2B,IAAIvqC,IAEpB+nC,EAtHgB,GAwH3B,SAAS4C,MACT,IAAID,GAAgB,GACpB,SAASV,GAAYhC,GACjB,GAAqB,GAAjBA,EAAKW,WAAkBX,EAAKG,uBAAyBH,EAAKK,SAC1D,IACIL,EAAKW,WACLX,EAAKO,iBAAiB7J,KAAK,cAI3B,GADAsJ,EAAKW,YACAX,EAAKG,qBACN,IACIH,EAAKmC,kBAAkB,WAAc,OAAOnC,EAAKQ,SAAS9J,KAAK,gBAG/DsJ,EAAKK,UAAW,IAiDpC,SAASiB,GAAQtB,GACbA,EAAKW,WACDX,EAAKK,WACLL,EAAKK,UAAW,EAChBL,EAAKM,WAAW5J,KAAK,OAG7B,SAAS8K,GAAQxB,GACbA,EAAKW,WACLqB,GAAYhC,GAMhB,IAyRI8C,GAzRAC,GAA4B,WAC5B,SAASA,IACLztC,KAAK6qC,sBAAuB,EAC5B7qC,KAAK8qC,sBAAuB,EAC5B9qC,KAAK+qC,UAAW,EAChB/qC,KAAKgrC,WAAa,IAAIhK,GACtBhhC,KAAKirC,iBAAmB,IAAIjK,GAC5BhhC,KAAKkrC,SAAW,IAAIlK,GACpBhhC,KAAKmrC,QAAU,IAAInK,GAMvB,OAJAyM,EAAWvtC,UAAU+sC,IAAM,SAAUvqC,GAAM,OAAOA,KAClD+qC,EAAWvtC,UAAUqtC,WAAa,SAAU7qC,GAAM,OAAOA,KACzD+qC,EAAWvtC,UAAU2sC,kBAAoB,SAAUnqC,GAAM,OAAOA,KAChE+qC,EAAWvtC,UAAUgtC,QAAU,SAAUxqC,GAAM,OAAOA,KAC/C+qC,EAdoB,GA8B3BC,GAA6B,WAC7B,SAASA,EAAYC,GACjB,IAAIznC,EAAQlG,KACZA,KAAK2tC,QAAUA,EACf3tC,KAAK4tC,cAAgB,EACrB5tC,KAAK6tC,eAAgB,EAOrB7tC,KAAK8tC,UAAW,EAChB9tC,KAAK+tC,WAAa,GAClB/tC,KAAKguC,iBAAmB,KACxBhuC,KAAKiuC,sBACLN,EAAQV,IAAI,WACR/mC,EAAM8nC,iBACa,oBAAR36B,KAAsB,KAAOA,KAAKC,QAAQsH,IAAI,sBAmJjE,OAhJA8yB,EAAYxtC,UAAU+tC,oBAAsB,WACxC,IAAI/nC,EAAQlG,KACZA,KAAK2tC,QAAQ3C,WAAWpjC,UAAU,CAC9BjG,KAAM,WACFuE,EAAM4nC,UAAW,EACjB5nC,EAAM2nC,eAAgB,KAG9B7tC,KAAK2tC,QAAQd,kBAAkB,WAC3B3mC,EAAMynC,QAAQzC,SAAStjC,UAAU,CAC7BjG,KAAM,WACF8oC,GAAOuC,yBACP55B,GAAkB,WACdlN,EAAM2nC,eAAgB,EACtB3nC,EAAMgoC,+BAU1BR,EAAYxtC,UAAUiuC,4BAA8B,WAGhD,OAFAnuC,KAAK4tC,eAAiB,EACtB5tC,KAAK8tC,UAAW,EACT9tC,KAAK4tC,eAMhBF,EAAYxtC,UAAUkuC,4BAA8B,WAEhD,GADApuC,KAAK4tC,eAAiB,EAClB5tC,KAAK4tC,cAAgB,EACrB,MAAM,IAAI/qC,MAAM,qCAGpB,OADA7C,KAAKkuC,uBACEluC,KAAK4tC,eAKhBF,EAAYxtC,UAAU6qC,SAAW,WAC7B,OAAO/qC,KAAK6tC,eAAwC,IAAvB7tC,KAAK4tC,gBAAwB5tC,KAAK2tC,QAAQ7C,sBAE3E4C,EAAYxtC,UAAUguC,qBAAuB,WACzC,IAAIhoC,EAAQlG,KACZ,GAAIA,KAAK+qC,WAEL33B,GAAkB,WACd,KAAmC,IAA5BlN,EAAM6nC,WAAWptC,QAAc,CAClC,IAAI0tC,EAAKnoC,EAAM6nC,WAAWO,MAC1BC,aAAaF,EAAGG,WAChBH,EAAGI,OAAOvoC,EAAM4nC,UAEpB5nC,EAAM4nC,UAAW,QAGpB,CAED,IAAIY,EAAY1uC,KAAK2uC,kBACrB3uC,KAAK+tC,WAAa/tC,KAAK+tC,WAAWa,OAAO,SAAUP,GAC/C,OAAIA,EAAGQ,WAAYR,EAAGQ,SAASH,KAC3BH,aAAaF,EAAGG,YACT,KAIfxuC,KAAK8tC,UAAW,IAGxBJ,EAAYxtC,UAAUyuC,gBAAkB,WACpC,OAAK3uC,KAAKguC,iBAIHhuC,KAAKguC,iBAAiBc,WAAW/rC,IAAI,SAAUzC,GAClD,MAAO,CACH2H,OAAQ3H,EAAE2H,OAGV8mC,iBAAkBzuC,EAAEyuC,iBACpBl3B,KAAMvX,EAAEuX,QATL,IAaf61B,EAAYxtC,UAAU8uC,YAAc,SAAUX,EAAIY,EAASJ,GACvD,IAAI3oC,EAAQlG,KACRwuC,GAAa,EACbS,GAAWA,EAAU,IACrBT,EAAY/oC,WAAW,WACnBS,EAAM6nC,WAAa7nC,EAAM6nC,WAAWa,OAAO,SAAUP,GAAM,OAAOA,EAAGG,YAAcA,IACnFH,EAAGnoC,EAAM4nC,SAAU5nC,EAAMyoC,oBAC1BM,IAEPjvC,KAAK+tC,WAAWlsC,KAAK,CAAE4sC,OAAQJ,EAAIG,UAAWA,EAAWK,SAAUA,KAcvEnB,EAAYxtC,UAAUgvC,WAAa,SAAUT,EAAQQ,EAASJ,GAC1D,GAAIA,IAAa7uC,KAAKguC,iBAClB,MAAM,IAAInrC,MAAM,8HAIpB7C,KAAKgvC,YAAYP,EAAQQ,EAASJ,GAClC7uC,KAAKkuC,wBAMTR,EAAYxtC,UAAUivC,uBAAyB,WAAc,OAAOnvC,KAAK4tC,eAOzEF,EAAYxtC,UAAUkvC,cAAgB,SAAUC,EAAOlc,EAAUmc,GAE7D,MAAO,IAUf5B,EAAY79B,gBAAkBS,GAAiB,CAAEqD,MAAO+5B,EAAaj9B,QAAS,SAA6BnQ,GAAK,OAAO,IAAKA,GAAKotC,GAAajzB,GAAOgwB,MAAaj6B,WAAY,OACnKk9B,EArKqB,GA2K5B6B,GAAqC,WACrC,SAASC,IAELxvC,KAAKyvC,cAAgB,IAAIt8B,IACzBu8B,GAAmBC,YAAY3vC,MAiDnC,OA1CAwvC,EAAoBtvC,UAAU0vC,oBAAsB,SAAUj8B,EAAOk8B,GACjE7vC,KAAKyvC,cAAc1c,IAAIpf,EAAOk8B,IAMlCL,EAAoBtvC,UAAU4vC,sBAAwB,SAAUn8B,GAAS3T,KAAKyvC,cAAcM,OAAOp8B,IAInG67B,EAAoBtvC,UAAU8vC,0BAA4B,WAAchwC,KAAKyvC,cAAclZ,SAK3FiZ,EAAoBtvC,UAAU+vC,eAAiB,SAAUC,GAAQ,OAAOlwC,KAAKyvC,cAAc70B,IAAIs1B,IAAS,MAIxGV,EAAoBtvC,UAAUiwC,oBAAsB,WAAc,OAAOxwC,MAAMywC,KAAKpwC,KAAKyvC,cAAcl+B,WAIvGi+B,EAAoBtvC,UAAUmwC,mBAAqB,WAAc,OAAO1wC,MAAMywC,KAAKpwC,KAAKyvC,cAAcx8B,SAOtGu8B,EAAoBtvC,UAAUowC,sBAAwB,SAAUJ,EAAMK,GAElE,YADwB,IAApBA,IAA8BA,GAAkB,GAC7Cb,GAAmBY,sBAAsBtwC,KAAMkwC,EAAMK,KAEhEf,EzCpoiBG,SAAoBlL,EAAY9rB,EAAQjJ,EAAKihC,GAChD,IAA2HlxC,EAAvHmxC,EAAI/vC,UAAUC,OAAQa,EAAIivC,EAAI,EAAIj4B,EAAkB,OAATg4B,EAAgBA,EAAOhxC,OAAOkxC,yBAAyBl4B,EAAQjJ,GAAOihC,EACrH,GAAuB,iBAAZvvC,SAAoD,mBAArBA,QAAQ0vC,SAAyBnvC,EAAIP,QAAQ0vC,SAASrM,EAAY9rB,EAAQjJ,EAAKihC,QACpH,IAAK,IAAIhwC,EAAI8jC,EAAW3jC,OAAS,EAAGH,GAAK,EAAGA,KAASlB,EAAIglC,EAAW9jC,MAAIgB,GAAKivC,EAAI,EAAInxC,EAAEkC,GAAKivC,EAAI,EAAInxC,EAAEkZ,EAAQjJ,EAAK/N,GAAKlC,EAAEkZ,EAAQjJ,KAAS/N,GAChJ,OAAOivC,EAAI,GAAKjvC,GAAKhC,OAAO0S,eAAesG,EAAQjJ,EAAK/N,GAAIA,EyCgoiBtCovC,CAAW,CAC7B9vC,EAAW,oBAAqB,KACjC0uC,IAIa3/B,gBAAkBS,GAAiB,CAAEqD,MAAO67B,EAAqB/+B,QAAS,SAAqCnQ,GAAK,OAAO,IAAKA,GAAKkvC,IAA2Bh/B,WAAY,OACrLg/B,EArD6B,GAuEpCE,GAAqB,IAhBgB,WACrC,SAASmB,KAMT,OAJAA,EAAoB3wC,UAAUyvC,YAAc,SAAUmB,KACtDD,EAAoB3wC,UAAUowC,sBAAwB,SAAUQ,EAAUZ,EAAMK,GAC5E,OAAO,MAEJM,EAP6B,IAoCpCE,GAA2B,IAAIlgC,GAAe,sBAmClD,SAASmgC,GAAsBC,EAAuB9tC,EAAM6uB,QACtC,IAAdA,IAAwBA,EAAY,IACxC,IAAIwe,EAAO,aAAertC,EACtB+tC,EAAS,IAAIrgC,GAAe2/B,GAChC,OAAO,SAAUW,QACU,IAAnBA,IAA6BA,EAAiB,IAClD,IAAIC,EAAWC,KACf,IAAKD,GAAYA,EAASh3B,SAASQ,IAAIm2B,IAA0B,GAC7D,GAAIE,EACAA,EAAsBjf,EAAU/vB,OAAOkvC,GAAgBlvC,OAAO,CAAEswB,QAAS2e,EAAQze,UAAU,SAE1F,CACD,IAAI6e,EAAoBtf,EAAU/vB,OAAOkvC,GAAgBlvC,OAAO,CAAEswB,QAAS2e,EAAQze,UAAU,KA5B7G,SAAwBrY,GACpB,GAAIozB,KAAcA,GAAU9X,YACvB8X,GAAUpzB,SAASQ,IAAIm2B,IAA0B,GAClD,MAAM,IAAIluC,MAAM,iFAEpB2qC,GAAYpzB,EAASQ,IAAI22B,IACzB,IAAIC,EAAQp3B,EAASQ,IAAIutB,GAAsB,MAC3CqJ,GACAA,EAAM9oC,QAAQ,SAAU+oC,GAAQ,OAAOA,MAqB/BC,CAAe5f,GAAS3xB,OAAO,CAAE6xB,UAAWsf,EAAmBnuC,KAAMqtC,KAG7E,OAQR,SAAwBmB,GACpB,IAAIP,EAAWC,KACf,IAAKD,EACD,MAAM,IAAIvuC,MAAM,uBAEpB,IAAKuuC,EAASh3B,SAASQ,IAAI+2B,EAAe,MACtC,MAAM,IAAI9uC,MAAM,wFAEpB,OAAOuuC,EAhBIQ,CAAeV,IAiC9B,SAASG,KACL,OAAO7D,KAAcA,GAAU9X,UAAY8X,GAAY,KAY3D,IAAI+D,GAA6B,WAE7B,SAASA,EAAYM,GACjB7xC,KAAK6xC,UAAYA,EACjB7xC,KAAK8xC,SAAW,GAChB9xC,KAAK+xC,kBAAoB,GACzB/xC,KAAKgyC,YAAa,EAiItB,OAzGAT,EAAYrxC,UAAU+xC,uBAAyB,SAAUC,EAAenhC,GACpE,IA0GWohC,EA1GPjsC,EAAQlG,KAMRoyC,EAsGa,UAFND,EArGQphC,EAAUA,EAAQqhC,YAAS9sC,GAwGrC,IAAImoC,IAGc,YAAjB0E,OAA6B7sC,EAAY6sC,IAC/C,IAAI1H,GAAO,CAAEG,qBAAsB3K,OA1GnCjO,EAAY,CAAC,CAAEO,QAASkY,GAAQhY,SAAU2f,IAG9C,OAAOA,EAAOnF,IAAI,WACd,IAAIoF,EAAiBvgB,GAAS3xB,OAAO,CAAE6xB,UAAWA,EAAWltB,OAAQoB,EAAMkU,SAAUjX,KAAM+uC,EAAcpR,WAAW39B,OAChHmvC,EAAYJ,EAAc/xC,OAAOkyC,GACjCE,EAAmBD,EAAUl4B,SAASQ,IAAIgsB,GAAc,MAC5D,IAAK2L,EACD,MAAM,IAAI1vC,MAAM,iEAIpB,OAFAyvC,EAAUt2B,UAAU,WAAc,OAAO/X,GAAOiC,EAAM4rC,SAAUQ,KAChEF,EAAOvF,kBAAkB,WAAc,OAAOuF,EAAOjH,QAAQvjC,UAAU,CAAEjG,KAAM,SAAUI,GAASwwC,EAAiBzL,YAAY/kC,QAmG3I,SAAsCywC,EAAcJ,EAAQlY,GACxD,IACI,IAAIjuB,IAnGQwmC,EAAaH,EAAUl4B,SAASQ,IAAI4sB,KAC7BK,kBACJ4K,EAAW9K,YAAYx8B,KAAK,WAE/B,OADAjF,EAAMwsC,mBAAmBJ,GAClBA,KAgGnB,OAAIlL,GAAUn7B,GACHA,EAAOg8B,MAAM,SAAUxmC,GAG1B,MAFA2wC,EAAOvF,kBAAkB,WAAc,OAAO2F,EAAa1L,YAAYrlC,KAEjEA,IAGPwK,EAEX,MAAOxK,GAGH,MAFA2wC,EAAOvF,kBAAkB,WAAc,OAAO2F,EAAa1L,YAAYrlC,KAEjEA,EAjH4D,IACtDgxC,EADDE,CAA6BJ,EAAkBH,MA0B9Db,EAAYrxC,UAAU0yC,gBAAkB,SAAU9R,EAAY+R,GAC1D,IAAI3sC,EAAQlG,UACY,IAApB6yC,IAA8BA,EAAkB,IACpD,IAAI9hC,EAAU+hC,GAAe,GAAID,GACjC,OArLR,SAA2Cz4B,EAAUrJ,EAAS+vB,GAE1D,OAAOz7B,QAAQwD,QAAQ,IAAI+3B,GAAkBE,IAmLlCiS,CAAuB/yC,EAAe+Q,EAAS+vB,GACjD31B,KAAK,SAAU+mC,GAAiB,OAAOhsC,EAAM+rC,uBAAuBC,EAAenhC,MAE5FwgC,EAAYrxC,UAAUwyC,mBAAqB,SAAUJ,GACjD,IAAIpX,EAASoX,EAAUl4B,SAASQ,IAAIo4B,IACpC,GAAIV,EAAUjS,qBAAqB1/B,OAAS,EACxC2xC,EAAUjS,qBAAqB33B,QAAQ,SAAUuqC,GAAK,OAAO/X,EAAOsF,UAAUyS,SAE7E,KAAIX,EAAUnxB,SAAS+xB,cAIxB,MAAM,IAAIrwC,MAAM,cAAgB6Q,GAAU4+B,EAAUnxB,SAASlhB,aAAe,yIAH5EqyC,EAAUnxB,SAAS+xB,cAAchY,GAMrCl7B,KAAK8xC,SAASjwC,KAAKywC,IAKvBf,EAAYrxC,UAAU8b,UAAY,SAAUke,GAAYl6B,KAAK+xC,kBAAkBlwC,KAAKq4B,IACpF16B,OAAO0S,eAAeq/B,EAAYrxC,UAAW,WAAY,CAKrD0a,IAAK,WAAc,OAAO5a,KAAK6xC,WAC/B/X,YAAY,EACZC,cAAc,IAKlBwX,EAAYrxC,UAAU8oB,QAAU,WAC5B,GAAIhpB,KAAKgyC,WACL,MAAM,IAAInvC,MAAM,4CAEpB7C,KAAK8xC,SAASznC,QAAQ3B,QAAQ,SAAUyqC,GAAU,OAAOA,EAAOnqB,YAChEhpB,KAAK+xC,kBAAkBrpC,QAAQ,SAAU8a,GAAY,OAAOA,MAC5DxjB,KAAKgyC,YAAa,GAEtBxyC,OAAO0S,eAAeq/B,EAAYrxC,UAAW,YAAa,CACtD0a,IAAK,WAAc,OAAO5a,KAAKgyC,YAC/BlY,YAAY,EACZC,cAAc,IAUtBwX,EAAY1hC,gBAAkBS,GAAiB,CAAEqD,MAAO49B,EAAa9gC,QAAS,SAA6BnQ,GAAK,OAAO,IAAKA,GAAKixC,GAAa92B,GAAOqX,MAAethB,WAAY,OACrK+gC,EAvIqB,GAsKhC,SAASuB,GAAeM,EAAKC,GAOzB,OANI1zC,MAAMuC,QAAQmxC,GACRA,EAAKtuC,OAAO+tC,GAAgBM,GAG5BhzC,EAAS,GAAIgzC,EAAKC,GAShC,IAAIL,GAAgC,WAEhC,SAASM,EAAeC,EAAO1M,EAAUgL,EAAW2B,EAAmBC,EAA2BC,GAC9F,IAAIxtC,EAAQlG,KACZA,KAAKuzC,MAAQA,EACbvzC,KAAK6mC,SAAWA,EAChB7mC,KAAK6xC,UAAYA,EACjB7xC,KAAKwzC,kBAAoBA,EACzBxzC,KAAKyzC,0BAA4BA,EACjCzzC,KAAK0zC,YAAcA,EACnB1zC,KAAK2zC,oBAAsB,GAC3B3zC,KAAK4zC,OAAS,GACd5zC,KAAK6zC,cAAe,EACpB7zC,KAAK8zC,sBAAuB,EAC5B9zC,KAAK+zC,SAAU,EAKf/zC,KAAKg0C,eAAiB,GAItBh0C,KAAKmiB,WAAa,GAClBniB,KAAK8zC,qBAAuB7T,KAC5BjgC,KAAKuzC,MAAMtI,iBAAiBrjC,UAAU,CAAEjG,KAAM,WAAcuE,EAAMqtC,MAAMtG,IAAI,WAAc/mC,EAAM+tC,YAChG,IAAIC,EAAoB,IAAIxsC,EAAW,SAAUY,GAC7CpC,EAAM6tC,QAAU7tC,EAAMqtC,MAAMxI,WAAa7kC,EAAMqtC,MAAMzI,uBAChD5kC,EAAMqtC,MAAM1I,qBACjB3kC,EAAMqtC,MAAM1G,kBAAkB,WAC1BvkC,EAAS3G,KAAKuE,EAAM6tC,SACpBzrC,EAAS5C,eAGbqlC,EAAW,IAAIrjC,EAAW,SAAUY,GAGpC,IAAI6rC,EACJjuC,EAAMqtC,MAAM1G,kBAAkB,WAC1BsH,EAAYjuC,EAAMqtC,MAAMrI,SAAStjC,UAAU,WACvC6iC,GAAOuC,yBAGP55B,GAAkB,WACTlN,EAAM6tC,SAAY7tC,EAAMqtC,MAAMzI,sBAC9B5kC,EAAMqtC,MAAM1I,uBACb3kC,EAAM6tC,SAAU,EAChBzrC,EAAS3G,MAAK,UAK9B,IAAIyyC,EAAcluC,EAAMqtC,MAAMvI,WAAWpjC,UAAU,WAC/C6iC,GAAOsC,sBACH7mC,EAAM6tC,UACN7tC,EAAM6tC,SAAU,EAChB7tC,EAAMqtC,MAAM1G,kBAAkB,WAAcvkC,EAAS3G,MAAK,QAGlE,OAAO,WACHwyC,EAAU5wC,cACV6wC,EAAY7wC,iBAGpBvD,KAAK+qC,SCnjjBN,WAEH,IADA,IAAIsJ,EAAc,GACTprC,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpCorC,EAAYprC,GAAMvI,UAAUuI,GAEhC,ICTwBnH,EDSpBmL,EAAaC,OAAOC,kBACpBL,EAAY,KACZwnC,EAAOD,EAAYA,EAAY1zC,OAAS,GAU5C,OCrBwBmB,EDYRwyC,ICX0B,mBAAnBxyC,EAAMiL,UDYzBD,EAAYunC,EAAY/F,MACpB+F,EAAY1zC,OAAS,GAAoD,iBAAxC0zC,EAAYA,EAAY1zC,OAAS,KAClEsM,EAAaonC,EAAY/F,QAGR,iBAATgG,IACZrnC,EAAaonC,EAAY/F,OAEX,OAAdxhC,GAA6C,IAAvBunC,EAAY1zC,QAAgB0zC,EAAY,aAAc3sC,EACrE2sC,EAAY,GEpBpB,SAAkBpnC,GAIrB,YAHmB,IAAfA,IACAA,EAAaC,OAAOC,mBTErB,SAASonC,EAAS/nC,EAASgoC,EAAgBvnC,GAI9C,YAHmB,IAAfA,IACAA,EAAaC,OAAOC,mBAEM,mBAAnBqnC,EACA,SAAUvsC,GAAU,OAAOA,EAAOc,KAAKwrC,EAAS,SAAU/gC,EAAGhT,GAAK,OUD5D2I,EVCwEqD,EAAQgH,EAAGhT,GUC5F2I,aAAiBzB,EACVyB,EAEJ,IAAIzB,EAAWsE,EAAY7C,KVJkEJ,KFTrG,SAAayD,EAASC,GACzB,OAAO,SAAsBxE,GAIzB,OAAOA,EAAOF,KAAK,IAAIwE,EAAYC,OEIsEioC,MAAI,SAAUl1C,EAAGm1C,GAAM,OAAOF,EAAehhC,EAAGjU,EAAGiB,EAAGk0C,MUDhK,IAAcvrC,GVC+J8D,MAE7I,iBAAnBunC,IACZvnC,EAAaunC,GAEV,SAAUvsC,GAAU,OAAOA,EAAOF,KAAK,IAAIiF,EAAiBR,EAASS,MSVrEsnC,CAASzmC,GAAUb,GFkBnB0nC,CAAS1nC,EAAT0nC,CAAqB9nC,EAAUwnC,EAAavnC,IDgijB3C8nC,CAAMV,EAAmBnJ,EAAShiC,KDjjjBnC,SAAUd,GAAU,OAAO8F,MMNZ8mC,ENMiCzlC,GMLhD,SAAmCnH,GACtC,IAAI2G,EAEAA,EADmC,mBAA5BimC,EACUA,EAGA,WACb,OAAOA,GAMf,IAAI5mC,EAAczO,OAAOW,OAAO8H,EAAQgH,IAGxC,OAFAhB,EAAYhG,OAASA,EACrBgG,EAAYW,eAAiBA,EACtBX,INXiEhG,IMNzE,IAAmB4sC,KLqrjBtB,IAAIC,EAUJ,OAtIAA,EAAmBxB,EAiBnBA,EAAepzC,UAAUsgC,UAAY,SAAUuU,EAAoB5b,GAC/D,IAII6b,EAJA9uC,EAAQlG,KACZ,IAAKA,KAAK0zC,YAAY9xC,KAClB,MAAM,IAAIiB,MAAM,iJAIhBmyC,EADAD,aAA8B/c,GACX+c,EAIf/0C,KAAKyzC,0BAA0Blb,wBAAwBwc,GAE/D/0C,KAAKg0C,eAAenyC,KAAKmzC,EAAiBnc,eAE1C,IAAI/B,EAAWke,aAA4Blc,GACvC,KACA94B,KAAK6xC,UAAUj3B,IAAIwe,IAEnB6b,EAAUD,EAAiB70C,OAAO2xB,GAASG,KAAM,GADhCkH,GAAsB6b,EAAiBhc,SACalC,GACzEme,EAAQj5B,UAAU,WAAc9V,EAAMgvC,iBAAiBD,KACvD,IAAIpF,EAAcoF,EAAQ76B,SAASQ,IAAI8yB,GAAa,MASpD,OARImC,GACAoF,EAAQ76B,SAASQ,IAAI20B,IAChBK,oBAAoBqF,EAAQh8B,SAAS0iB,cAAekU,GAE7D7vC,KAAKm1C,eAAeF,GAChBhV,MACAjgC,KAAK6mC,SAAS2B,IAAI,oGAEfyM,GAYX3B,EAAepzC,UAAU+zC,KAAO,WAC5B,IAAI/tC,EAAQlG,KACZ,GAAIA,KAAK6zC,aACL,MAAM,IAAIhxC,MAAM,6CAEpB,IAAIynC,EAAQwK,EAAiBM,aAC7B,IACIp1C,KAAK6zC,cAAe,EACpB7zC,KAAK4zC,OAAOlrC,QAAQ,SAAUkP,GAAQ,OAAOA,EAAK+iB,kBAC9C36B,KAAK8zC,sBACL9zC,KAAK4zC,OAAOlrC,QAAQ,SAAUkP,GAAQ,OAAOA,EAAKgjB,mBAG1D,MAAOn5B,GAEHzB,KAAKuzC,MAAM1G,kBAAkB,WAAc,OAAO3mC,EAAMstC,kBAAkB1M,YAAYrlC,aAGtFzB,KAAK6zC,cAAe,EACpBxJ,GAASC,KAQjBgJ,EAAepzC,UAAUm1C,WAAa,SAAU5S,GAC5C,IAAI7qB,EAAO6qB,EACXziC,KAAK4zC,OAAO/xC,KAAK+V,GACjBA,EAAKqjB,eAAej7B,OAKxBszC,EAAepzC,UAAUunB,WAAa,SAAUgb,GAC5C,IAAI7qB,EAAO6qB,EACXx+B,GAAOjE,KAAK4zC,OAAQh8B,GACpBA,EAAKojB,oBAETsY,EAAepzC,UAAUi1C,eAAiB,SAAU1V,GAChDz/B,KAAKq1C,WAAW5V,EAAa/nB,UAC7B1X,KAAKi0C,OACLj0C,KAAKmiB,WAAWtgB,KAAK49B,GAELz/B,KAAK6xC,UAAUj3B,IAAIytB,GAAwB,IAAIpmC,OAAOjC,KAAK2zC,qBACjEjrC,QAAQ,SAAU8a,GAAY,OAAOA,EAASic,MAE5D6T,EAAepzC,UAAUg1C,iBAAmB,SAAUzV,GAClDz/B,KAAKynB,WAAWgY,EAAa/nB,UAC7BzT,GAAOjE,KAAKmiB,WAAYsd,IAG5B6T,EAAepzC,UAAUo2B,YAAc,WAEnCt2B,KAAK4zC,OAAOvpC,QAAQ3B,QAAQ,SAAUkP,GAAQ,OAAOA,EAAKoR,aAE9DxpB,OAAO0S,eAAeohC,EAAepzC,UAAW,YAAa,CAIzD0a,IAAK,WAAc,OAAO5a,KAAK4zC,OAAOjzC,QACtCm5B,YAAY,EACZC,cAAc,IAIlBuZ,EAAe8B,WAAalL,GAAe,yBAQpCoJ,EAzMwB,GA2MnC,SAASrvC,GAAOqxC,EAAMC,GAClB,IAAIxxC,EAAQuxC,EAAK1wC,QAAQ2wC,GACrBxxC,GAAS,GACTuxC,EAAKzwC,OAAOd,EAAO,GAqD3B,IA8QyCgC,GA9QrCyvC,GAA6B,WAC7B,SAASC,IACLz1C,KAAK01C,OAAQ,EACb11C,KAAK21C,SAAW,GAChB31C,KAAK41C,QAAU,IAAI5U,GACnBhhC,KAAKW,OAAS,EA0DlB,OApDA80C,EAAUv1C,UAAU6C,IAAM,SAAUL,GAAM,OAAO1C,KAAK21C,SAAS5yC,IAAIL,IAKnE+yC,EAAUv1C,UAAU0uC,OAAS,SAAUlsC,GACnC,OAAO1C,KAAK21C,SAAS/G,OAAOlsC,IAMhC+yC,EAAUv1C,UAAU21C,KAAO,SAAUnzC,GACjC,OAAO1C,KAAK21C,SAASE,KAAKnzC,IAM9B+yC,EAAUv1C,UAAU6E,OAAS,SAAUrC,EAAI+uC,GACvC,OAAOzxC,KAAK21C,SAAS5wC,OAAOrC,EAAI+uC,IAMpCgE,EAAUv1C,UAAUwI,QAAU,SAAUhG,GAAM1C,KAAK21C,SAASjtC,QAAQhG,IAKpE+yC,EAAUv1C,UAAU41C,KAAO,SAAUpzC,GACjC,OAAO1C,KAAK21C,SAASG,KAAKpzC,IAE9B+yC,EAAUv1C,UAAU61C,QAAU,WAAc,OAAO/1C,KAAK21C,SAAStrC,SACjEorC,EAAUv1C,UAAU6S,MAAuB,WAAc,OAAO/S,KAAK21C,SAAS5iC,SAC9E0iC,EAAUv1C,UAAU+C,SAAW,WAAc,OAAOjD,KAAK21C,SAAS1yC,YAClEwyC,EAAUv1C,UAAU81C,MAAQ,SAAUniC,GAClC7T,KAAK21C,SAgBb,SAASM,EAAUX,GACf,OAAOA,EAAKvwC,OAAO,SAAUmxC,EAAM1qC,GAC/B,IAAI2qC,EAAWx2C,MAAMuC,QAAQsJ,GAAQyqC,EAAUzqC,GAAQA,EACvD,OAAO0qC,EAAKj0C,OAAOk0C,IACpB,IApBiBF,CAAUpiC,GAC1B7T,KAAK01C,OAAQ,EACb11C,KAAKW,OAASX,KAAK21C,SAASh1C,OAC5BX,KAAKs0C,KAAOt0C,KAAK21C,SAAS31C,KAAKW,OAAS,GACxCX,KAAKo2C,MAAQp2C,KAAK21C,SAAS,IAE/BF,EAAUv1C,UAAUm2C,gBAAkB,WAAcr2C,KAAK41C,QAAQxU,KAAKphC,OAEtEy1C,EAAUv1C,UAAUo2C,SAAW,WAAct2C,KAAK01C,OAAQ,GAE1DD,EAAUv1C,UAAU8oB,QAAU,WAC1BhpB,KAAK41C,QAAQlwC,WACb1F,KAAK41C,QAAQryC,eAEVkyC,EA/DqB,GAiL5Bc,GAAkC,WAClC,SAASA,KAIT,OADAA,EAAiBlmC,kBAAoB,WAAc,OAAOmmC,GAAkCD,EAAkB7a,KACvG6a,EAL0B,GASjCC,GA90PJ,SAAgCC,EAAuBjb,GAEnD,OAWJ,SAA4Bib,EAAuBjb,EAAiB/d,EAAW/F,GAoH3E,IAAImP,EAnHCwR,KAEDA,GAAoC,SAAUtyB,GAE1C,SAAS2wC,EAAkBC,EAAaC,EAAYC,GAChD,IAAI3wC,EAAQH,EAAOnF,KAAKZ,OAASA,KAKjC,OAJAkG,EAAMywC,YAAcA,EACpBzwC,EAAM0wC,WAAaA,EACnB1wC,EAAM2wC,UAAYA,EAClB3wC,EAAM4wC,UAAY,GACX5wC,EAqGX,OA5GApG,EAAU42C,EAAmB3wC,GAS7BvG,OAAO0S,eAAewkC,EAAkBx2C,UAAW,UAAW,CAC1D0a,IAAK,WACD,OAAO2gB,GAAiBC,EAAiBx7B,KAAK42C,WAAY52C,KAAK62C,YAEnE/c,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAewkC,EAAkBx2C,UAAW,WAAY,CAC3D0a,IAAK,WAAc,OAAO,IAAIiG,GAAa7gB,KAAK42C,WAAY52C,KAAK62C,YACjE/c,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAewkC,EAAkBx2C,UAAW,iBAAkB,CAEjE0a,IAAK,WACD,IAAI/B,EAAiB2F,GAA0Bxe,KAAK42C,WAAY52C,KAAK62C,WACjEz9B,EAAaJ,GAAsBH,EAAgB7Y,KAAK62C,WACxDjtB,EAxmRxB,SAAgC3Q,EAAUC,EAAW69B,GACjD,GAAIA,EAAWjyC,SAA+C,IAArCiyC,EAAWjyC,OAAOyZ,cAAsB,CAI7D,IAFA,IAAIA,EAAgBw4B,EAAWjyC,OAAOyZ,cAClCy4B,EAAgBD,EAAWjyC,OACA,MAAxBkyC,EAAclyC,QAAkByZ,GAAiBy4B,EAAcz4B,eAClEy4B,EAAgBA,EAAclyC,OAElC,OAAOkyC,EAOX,IALA,IAAI79B,EAAaJ,GAA4BE,GAEzCG,EAAaF,EACb0Q,EAAc1Q,EAAUzD,IAErB0D,EAAa,GAEhByQ,GADAxQ,EAAaA,EAAWjD,KACCV,IACzB0D,IAEJ,OAAOyQ,EAolR2BqtB,CAAuBp+B,EAAgB7Y,KAAK62C,UAAW72C,KAAK42C,YAC9E,OAAQh+B,GAAkBC,IAAkC,MAAf+Q,EAEzC,IAAI/I,GAAa+I,EAAaxQ,GAD9B,IAAIyH,GAAa,KAAM7gB,KAAK62C,YAGpC/c,YAAY,EACZC,cAAc,IAElB2c,EAAkBx2C,UAAUq2B,MAAQ,WAChC,KAAOv2B,KAAK22C,YAAYrgC,IAAO3V,QAC3BX,KAAKiE,OAAO,IAGpByyC,EAAkBx2C,UAAU0a,IAAM,SAAU7W,GAAS,OAAO/D,KAAK82C,UAAU/yC,IAAU,MACrFvE,OAAO0S,eAAewkC,EAAkBx2C,UAAW,SAAU,CACzD0a,IAAK,WAAc,OAAO5a,KAAK22C,YAAYrgC,IAAO3V,QAClDm5B,YAAY,EACZC,cAAc,IAElB2c,EAAkBx2C,UAAUiiC,mBAAqB,SAAU+U,EAAahwC,EAASnD,GAC7E,IAAIozC,EAAcn3C,KAAKo3C,aAAarzC,GAChC0+B,EAAUyU,EACT/U,mBAAmBj7B,GAAW,GAAIlH,KAAK22C,YAAa32C,KAAK42C,WAAY52C,KAAK62C,UAAWM,GAG1F,OAFA1U,EAAQ3H,yBAAyB96B,MACjCA,KAAK82C,UAAUjyC,OAAOsyC,EAAa,EAAG1U,GAC/BA,GAEXiU,EAAkBx2C,UAAUm3C,gBAAkB,SAAUrC,EAAkBjxC,EAAOqW,EAAU8e,EAAkBoe,GACzG,IAAIC,EAAkBn9B,GAAYpa,KAAK+gC,gBAClCuW,GAA4C,MAA7BtC,EAAiBle,UAAoBygB,IACrDD,EAAcC,EAAgB38B,IAAIwe,GAAa,OAEnD,IAAIqG,EAAeuV,EAAiB70C,OAAOo3C,EAAiBre,OAAkB5zB,EAAWgyC,GAEzF,OADAt3C,KAAKw3C,OAAO/X,EAAa/nB,SAAU3T,GAC5B07B,GAEXiX,EAAkBx2C,UAAUs3C,OAAS,SAAU/U,EAAS1+B,GACpD,GAAI0+B,EAAQ/M,UACR,MAAM,IAAI7yB,MAAM,sDAEpB,IAAI8V,EAAQ8pB,EAAQ1hB,OAChBo2B,EAAcn3C,KAAKo3C,aAAarzC,GAMpC,OALAujB,GAAW3O,EAAO3Y,KAAK22C,YAAa32C,KAAK62C,UAAWM,EAAan3C,KAAK42C,WAAW7yC,OAEjFqjB,GAA2BzO,GAAO,EADjBkR,GAAqBstB,EAAan3C,KAAK22C,YAAYrgC,IAAQtW,KAAK22C,YAAYpgC,MAE7FksB,EAAQ3H,yBAAyB96B,MACjCA,KAAK82C,UAAUjyC,OAAOsyC,EAAa,EAAG1U,GAC/BA,GAEXiU,EAAkBx2C,UAAUu3C,KAAO,SAAUhV,EAASiV,GAClD,GAAIjV,EAAQ/M,UACR,MAAM,IAAI7yB,MAAM,oDAEpB,IAAIkB,EAAQ/D,KAAK4E,QAAQ69B,GAGzB,OAFAziC,KAAKi6B,OAAOl2B,GACZ/D,KAAKw3C,OAAO/U,EAASziC,KAAKo3C,aAAaM,IAChCjV,GAEXiU,EAAkBx2C,UAAU0E,QAAU,SAAU69B,GAAW,OAAOziC,KAAK82C,UAAUlyC,QAAQ69B,IACzFiU,EAAkBx2C,UAAU+D,OAAS,SAAUF,GAC3C,IAz1MI8iB,EAA2Ba,EACvC9P,EAw1MYu/B,EAAcn3C,KAAKo3C,aAAarzC,GAAQ,GAx1MpD6T,GADYiP,EA01MO7mB,KAAK22C,aAz1MNrgC,IADqBoR,EA01MeyvB,GAx1M1D1vB,GAAWZ,EAAYa,IAw1MkB1nB,KAAK42C,WAx1MMjvB,UACpDK,GAAapQ,GAw1MD5X,KAAK82C,UAAUjyC,OAAOsyC,EAAa,IAEvCT,EAAkBx2C,UAAU+5B,OAAS,SAAUl2B,GAC3C,IAAIozC,EAAcn3C,KAAKo3C,aAAarzC,GAAQ,GACxC6T,EAAO6P,GAAWznB,KAAK22C,YAAaQ,IAAen3C,KAAK42C,WAAWjvB,UAEvE,OAD8D,MAA5C3nB,KAAK82C,UAAUjyC,OAAOsyC,EAAa,GAAG,GACnC,IAAI7d,GAAQ1hB,EAAMA,EAAKhC,IAAUgC,EAAK1B,KAAoB,MAEnFwgC,EAAkBx2C,UAAUk3C,aAAe,SAAUrzC,EAAO8J,GAExD,YADc,IAAVA,IAAoBA,EAAQ,GACnB,MAAT9J,EACO/D,KAAK22C,YAAYrgC,IAAO3V,OAASkN,EAOrC9J,GAEJ2yC,EA7GwB,CA8GjCD,IAIN,IAAIz+B,EAAYN,EAAS+F,EAAU1Z,OACnC,GAAIuU,GAAaN,IAEb6O,EAAa7O,GACF3B,KAAiB,MAE3B,CACD,IAAIshC,EAAcjgC,EAAS3B,IAAU6hC,cAAwC,IAM7E,GAAIr/B,GAAWb,GAAW,CACtB,IAAI0N,EAAW1N,EAAS3B,IACpB8hC,EAAargC,GAAiBiG,EAAW/F,GAE7C6R,GAAmBnE,EADM+D,GAAiB/D,EAAUyyB,GACHF,EA7oM7D,SAA2BvyB,EAAU/B,GACjC,OAAO8B,GAAqBC,GAAYA,EAAS0yB,YAAYz0B,GAAQA,EAAKy0B,YA4oMJC,CAAkB3yB,EAAUyyB,SAG1FruB,GAAYmuB,EAAal6B,EAAW/F,GAExCA,EAAS+F,EAAU1Z,OAAS8iB,EAtgGpC,SAA0BgxB,EAAYp6B,EAAWtB,EAAaoF,EAAQy2B,GAClE,MAAO,EACsB,EACzB,GAogG2CtgC,EAlgG3C,KACA,KAigGqBM,EAAgC2/B,EA9/FrD1uB,GAAgBxL,EA8/F2B/F,IAAvCugC,CAAiBjgC,EAAWyF,GAChCoR,GAAcnX,EAAU+F,EAAU1Z,MAAO8iB,GAE7C,OAAO,IAAIwR,GAAmBxR,EAAYpJ,EAAW/F,GA1J9CwgC,CAAmBzB,EAAuBjb,EAD7B7e,KAC6DD,OA+3PjFy7B,GAAmC,WACnC,SAASA,KAIT,OADAA,EAAkB9nC,kBAAoB,WAAc,OAAO+nC,MACpDD,EAL2B,GAclCC,GAhvPJ,WACI,OAUJ,SAAuB36B,EAAW/F,EAAUxQ,GACxC,GAAI+Q,GAAYwF,GAAY,CACxB,IAAI46B,EAAiB56B,EAAU6B,eAC3BwH,EAAgBhP,GAAwB2F,EAAU1Z,MAAO2T,GAC7D,OAAO,IAAI4hB,GAAQxS,EAdsC,KAcduxB,GAE1C,GAAuB,IAAnB56B,EAAU9M,KAA0B,CACzC,IAAI2nC,EAAoB/+B,GAAkB7B,GAC1C,OAAO,IAAI4hB,GAAQgf,EAAmBA,EAAkB1iC,KAAW,GAEvE,OAAO,KApBA2iC,CAAc57B,KAA4BD,OAq1PjD87B,IAlFA14C,EACA,WACI,OAAkB,OAAXiG,IAAmBA,GAAOlF,MAAMb,KAAMU,YAAcV,MAH1B+F,GAMvCoyC,IA6EiC,WAK/B,OAJA,SAAuBh1C,EAAM+2B,GACzBl6B,KAAKmD,KAAOA,EACZnD,KAAKk6B,SAAWA,GAHU,IAO9Bue,GAAqC,WACrC,SAASA,EAAoBC,EAAY5zC,EAAQ6zC,GAC7C34C,KAAK44C,UAAY,GACjB54C,KAAK8E,OAAS,KACd9E,KAAK24C,cAAgBA,EACrB34C,KAAK04C,WAAaA,EACd5zC,GAAUA,aAAkB+zC,IAC5B/zC,EAAOg0C,SAAS94C,MA4BxB,OAzBAR,OAAO0S,eAAeumC,EAAoBv4C,UAAW,WAAY,CAC7D0a,IAAK,WAAc,OAAO5a,KAAK24C,cAAcv+B,UAC7C0f,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeumC,EAAoBv4C,UAAW,oBAAqB,CACtE0a,IAAK,WAAc,OAAO5a,KAAK24C,cAAcn3B,WAC7CsY,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeumC,EAAoBv4C,UAAW,UAAW,CAC5D0a,IAAK,WAAc,OAAO5a,KAAK24C,cAAczxC,SAC7C4yB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeumC,EAAoBv4C,UAAW,aAAc,CAC/D0a,IAAK,WAAc,OAAO5a,KAAK24C,cAAcI,YAC7Cjf,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeumC,EAAoBv4C,UAAW,iBAAkB,CACnE0a,IAAK,WAAc,OAAO5a,KAAK24C,cAAcK,gBAC7Clf,YAAY,EACZC,cAAc,IAEX0e,EAnC6B,GAqCpCI,GAAwC,SAAU9yC,GAElD,SAASkzC,EAAuBP,EAAY5zC,EAAQ6zC,GAChD,IAAIzyC,EAAQH,EAAOnF,KAAKZ,KAAM04C,EAAY5zC,EAAQ6zC,IAAkB34C,KAOpE,OANAkG,EAAMulC,WAAa,GACnBvlC,EAAMgqB,WAAa,GACnBhqB,EAAMgzC,QAAU,GAChBhzC,EAAMizC,OAAS,GACfjzC,EAAMkzC,WAAa,GACnBlzC,EAAMy1B,cAAgB+c,EACfxyC,EAwEX,OAjFApG,EAAUm5C,EAAwBlzC,GAWlCkzC,EAAuB/4C,UAAU44C,SAAW,SAAU/2B,GAC9CA,IACA/hB,KAAKo5C,WAAWv3C,KAAKkgB,GACrBA,EAAMjd,OAAS9E,OAGvBi5C,EAAuB/4C,UAAUgnB,YAAc,SAAUnF,GACrD,IAAIgG,EAAa/nB,KAAKo5C,WAAWx0C,QAAQmd,IACrB,IAAhBgG,IACAhG,EAAMjd,OAAS,KACf9E,KAAKo5C,WAAWv0C,OAAOkjB,EAAY,KAG3CkxB,EAAuB/4C,UAAUm5C,oBAAsB,SAAUt3B,EAAOu3B,GACpE,IACI3nC,EADAzL,EAAQlG,KAERu5C,EAAev5C,KAAKo5C,WAAWx0C,QAAQmd,IACrB,IAAlBw3B,KACC5nC,EAAK3R,KAAKo5C,YAAYv0C,OAAOhE,MAAM8Q,EAAI3P,EAAS,CAACu3C,EAAe,EAAG,GAAID,IACxEA,EAAY5wC,QAAQ,SAAU+nC,GACtBA,EAAE3rC,QACF2rC,EAAE3rC,OAAOoiB,YAAYupB,GAEzB1uB,EAAMjd,OAASoB,MAI3B+yC,EAAuB/4C,UAAU+mB,aAAe,SAAUuyB,EAAUC,GAChE,IAAIC,EAAW15C,KAAKo5C,WAAWx0C,QAAQ40C,IACrB,IAAdE,EACA15C,KAAK84C,SAASW,IAGVA,EAAS30C,QACT20C,EAAS30C,OAAOoiB,YAAYuyB,GAEhCA,EAAS30C,OAAS9E,KAClBA,KAAKo5C,WAAWv0C,OAAO60C,EAAU,EAAGD,KAG5CR,EAAuB/4C,UAAUy5C,MAAQ,SAAUC,GAE/C,OADc55C,KAAK65C,SAASD,GACb,IAAM,MAEzBX,EAAuB/4C,UAAU25C,SAAW,SAAUD,GAClD,IAAIE,EAAU,GAEd,OA+BR,SAASC,EAAsBzvB,EAASsvB,EAAWE,GAC/CxvB,EAAQ8uB,WAAW1wC,QAAQ,SAAU2a,GAC7BA,aAAgBw1B,KACZe,EAAUv2B,IACVy2B,EAAQj4C,KAAKwhB,GAEjB02B,EAAsB12B,EAAMu2B,EAAWE,MAtC3CC,CAAsB/5C,KAAM45C,EAAWE,GAChCA,GAEXb,EAAuB/4C,UAAU85C,cAAgB,SAAUJ,GACvD,IAAIE,EAAU,GAEd,OAoCR,SAASG,EAAmBh3B,EAAY22B,EAAWE,GAC3C72B,aAAsB41B,IACtB51B,EAAWm2B,WAAW1wC,QAAQ,SAAU2a,GAChCu2B,EAAUv2B,IACVy2B,EAAQj4C,KAAKwhB,GAEbA,aAAgBw1B,IAChBoB,EAAmB52B,EAAMu2B,EAAWE,KA5C5CG,CAAmBj6C,KAAM45C,EAAWE,GAC7BA,GAEXt6C,OAAO0S,eAAe+mC,EAAuB/4C,UAAW,WAAY,CAChE0a,IAAK,WACD,OAAO5a,KACFo5C,WACAxK,OAAO,SAAUvrB,GAAQ,OAAOA,aAAgB41B,KAEzDnf,YAAY,EACZC,cAAc,IAElBkf,EAAuB/4C,UAAUg6C,oBAAsB,SAAUC,EAAWC,GACxEp6C,KAAK44C,UAAUlwC,QAAQ,SAAU8a,GACzBA,EAASrgB,MAAQg3C,GACjB32B,EAAS0W,SAASkgB,MAIvBnB,EAlFgC,CAmFzCR,IA6BE4B,GAAsC,WACtC,SAASA,EAAqB3B,GAC1B14C,KAAK04C,WAAaA,EA6CtB,OA3CAl5C,OAAO0S,eAAemoC,EAAqBn6C,UAAW,SAAU,CAC5D0a,IAAK,WACD,IAAI9V,EAAS9E,KAAK04C,WAAWz1B,WAC7B,OAAOne,EAAS,IAAIw1C,GAAwBx1C,GAAU,MAE1Dg1B,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAemoC,EAAqBn6C,UAAW,WAAY,CAC9D0a,IAAK,WAAc,OA7oenB1T,EAAUmb,GA6oe4BriB,KAAK04C,YA3oexC,IAAI73B,GADC3Z,EAAQyR,MAAMxD,IAAO0C,KAAK3Q,EAAQ6Q,WACf7Q,EAAQyR,OAH3C,IACQzR,GA8oeA4yB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAemoC,EAAqBn6C,UAAW,oBAAqB,CACvE0a,IAAK,WACD,IAhyegCjC,EACpClB,EAmDAvQ,EA4ueQy0B,EAAgB37B,KAAK04C,WACzB,OAAO/c,SA5ueWr2B,KADtB4B,EAAUkc,GA6ue+BuY,IA5uejCna,YACRta,EAAQsa,UAnDS,GAFjB/J,GADoCkB,EAsD2BzR,EAAQyR,OArDzDxD,IAAO0C,KAqDuB3Q,EAAQ6Q,YAnD3CG,MAA8BS,EADjBlB,EAAM6H,gBACwC,MAqDjEpY,EAAQsa,YA2ueXsY,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAemoC,EAAqBn6C,UAAW,UAAW,CAC7D0a,IAAK,WAAc,OAxteTwI,GAwte2BpjB,KAAK04C,YAvte/B//B,MAAM/C,KAwtejBkkB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAemoC,EAAqBn6C,UAAW,YAAa,CAC/D0a,IAAK,WACD,OAvheZ,SAAsB0P,GAClB,IACI3R,EADWyK,GAAqBkH,GACf3R,MAEjBgQ,EAAWhQ,EAAMhD,IACjB8S,EAFQ9P,EAAMxD,IAEGuT,QACjBkwB,EAAY,GAChB,GAAInwB,GAAYE,EACZ,IAAK,IAAInoB,EAAI,EAAGA,EAAIioB,EAAS9nB,QAAS,CAClC,IAAI45C,EAAa9xB,EAASjoB,KACtBg6C,EAAc/xB,EAASjoB,KAC3B,GAA0B,iBAAf+5C,EAAyB,CAChC,IAAIE,EAASF,EACTG,EAAkBnjC,GAAiBoB,EAAM6hC,IACzCtgB,EAAWvR,EAASF,EAASjoB,MAC7Bm6C,EAAmBlyB,EAASjoB,KAO5B8pB,GAAWowB,GACX9B,EAAU/2C,KAAK,CAAEyoB,QAASA,EAASnnB,KAAMs3C,EAAQvgB,SAAUA,EAAUzW,WAJ5B,kBAArBk3B,EACpBA,IACCA,GAAoB,IAAY,QAQjD,OADA/B,EAAUgC,KAAKl3B,IACRk1B,EA0/dQiC,CAAa76C,KAAK04C,YAAY9J,OAAOrrB,KAEhDuW,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAemoC,EAAqBn6C,UAAW,aAAc,CAChE0a,IAAK,WAAc,YA7keGtV,KADtB4B,EAAUmb,GA8ke6BriB,KAAK04C,aA7kepCh3B,YACRxa,EAAQwa,UA9NhB,SAA2B/I,EAAOZ,GAC9B,IAAIN,EAAQkB,EAAMxD,IAAO0C,KA6NgC3Q,EAAQ6Q,WA5NjE,GAAIN,GAASA,EAAMgX,WAAY,CAE3B,IADA,IAAIxiB,EAAS,GACJzL,EAAI,EAAGA,EAAIiX,EAAMgX,WAAW9tB,OAAQH,GAAK,EAAG,CACjD,IACIs6C,EAAiBrjC,EAAMgX,WAAWjuB,EAAI,GAC1CyL,EAFmBwL,EAAMgX,WAAWjuB,KAGZ,IAApBs6C,EAAwBtjC,GAAiBC,EAAOkB,GAASA,EAAMmiC,GAEvE,OAAO7uC,EAEX,OAAO,KAkNiB8uC,CAAkB7zC,EAAQyR,QAE3CzR,EAAQwa,WAAa,GALhC,IACQxa,GA+keA4yB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAemoC,EAAqBn6C,UAAW,iBAAkB,CACpE0a,IAAK,WAAc,OAjqe3B,SAA4B0P,GACxB,IAAIpjB,EAAUmb,GAAaiI,GAAS,GACpC,IAAKpjB,EACD,MAAO,GAOX,IANA,IAoKwByE,EAnKpB0P,EADQnU,EAAQyR,MACFxD,IACdsC,EAAQ4D,EAAMxD,KAAK3Q,EAAQ6Q,WAC3BihC,EAAiB,GAEjBx5B,EAAW/H,EAAMgI,aACZjf,EAFgC,MAAxBiX,EAAMyH,gBAEE1e,EAAIgf,EAAUhf,IAAK,CACxC,IAAIsB,EAAQuZ,EAAMxD,KAAKrX,QA8JP8E,KADIqG,EA5JG7J,GA6JhB6O,WAAuCrL,IAAjBqG,EAAI0M,eAAiD/S,IAAvBqG,EAAIqvC,iBAxJ3Dl5C,EAAQA,EAAM6O,MAElBqoC,EAAen3C,KAAKC,GAExB,OAAOk3C,EA4oeuBiC,CAAmBj7C,KAAK04C,aAClD5e,YAAY,EACZC,cAAc,IAEXsgB,EA/C8B,GAiDrCC,GAAyC,SAAUv0C,GAEnD,SAASm1C,EAAwBxC,GAI7B,OADQ3yC,EAAOnF,KAAKZ,KAAM04C,IAAe14C,KAkK7C,OAtKAF,EAAUo7C,EAAyBn1C,GAOnCvG,OAAO0S,eAAegpC,EAAwBh7C,UAAW,gBAAiB,CACtE0a,IAAK,WACD,OAAO5a,KAAK04C,WAAWyC,UAAY73B,KAAK83B,aAAep7C,KAAK04C,WAAa,MAE7E5e,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAegpC,EAAwBh7C,UAAW,OAAQ,CAC7D0a,IAAK,WAAc,OAAO5a,KAAK27B,cAAc0f,UAC7CvhB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAegpC,EAAwBh7C,UAAW,aAAc,CACnE0a,IAAK,WAQD,OAPcyH,GAAariB,KAAK04C,YAIf,IAKrB5e,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAegpC,EAAwBh7C,UAAW,aAAc,CACnE0a,IAAK,WACD,IAAIsV,EAAa,GACb5F,EAAUtqB,KAAK27B,cACnB,GAAIrR,EAEA,IADA,IAAIgxB,EAAShxB,EAAQ4F,WACZ1vB,EAAI,EAAGA,EAAI86C,EAAO36C,OAAQH,IAAK,CACpC,IAAI+6C,EAAOD,EAAO96C,GAClB0vB,EAAWqrB,EAAKp4C,MAAQo4C,EAAKz5C,MAGrC,OAAOouB,GAEX4J,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAegpC,EAAwBh7C,UAAW,UAAW,CAChE0a,IAAK,WACD,IAAIs+B,EAAU,GACV5uB,EAAUtqB,KAAK27B,cACnB,GAAIrR,EAAS,CACT,IAAIkxB,EAAWp4B,GAAqBkH,GAChCmxB,EAAQD,EAAS7iC,MAAM6iC,EAASzjC,WAEpC,GADqBmS,GAAkBsxB,EAASzjC,UAAWyjC,EAAS7iC,QAEhE,IAAK,IAAInY,EAAI,EAAmCA,EAAIi7C,EAAM96C,OAAQH,GAAK,EACnE,GAAIgqB,GAAkBixB,EAAOj7C,GAAI,CAC7B,IAAIk7C,EAAYhxB,GAAQ+wB,EAAOj7C,GAC3BsB,EAAQ2oB,GAASgxB,EAAOj7C,GACR,kBAATsB,IAEPo3C,EAAQwC,GAAa55C,QAOjC,KAAI65C,EAAWrxB,EAAQsxB,UACvB,IAASp7C,EAAI,EAAGA,EAAIm7C,EAASh7C,OAAQH,IACjC04C,EAAQyC,EAASn7C,KAAM,GAInC,OAAO04C,GAEXpf,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAegpC,EAAwBh7C,UAAW,SAAU,CAC/D0a,IAAK,WACD,IAAIu+B,EAAS,GACT7uB,EAAUtqB,KAAK27B,cACnB,GAAIrR,EAAS,CACT,IAAIkxB,EAAWp4B,GAAqBkH,GAChCmxB,EAAQD,EAAS7iC,MAAM6iC,EAASzjC,WAEpC,GADqBmS,GAAkBsxB,EAASzjC,UAAWyjC,EAAS7iC,QAEhE,IAAK,IAAInY,EAAI,EAAmCA,EAAIi7C,EAAM96C,OAAQH,GAAK,EACnE,IAAKgqB,GAAkBixB,EAAOj7C,GAAI,CAC9B,IAAIq7C,EAAYnxB,GAAQ+wB,EAAOj7C,GAC3BsB,EAAQ2oB,GAASgxB,EAAOj7C,GACd,OAAVsB,IAEAq3C,EAAO0C,GAAa/5C,QAOhC,KAAIg6C,EAAUxxB,EAAQyxB,MACtB,IAASv7C,EAAI,EAAGA,EAAIs7C,EAAQn7C,OAAQH,IAAK,CACrC,IAAIi6C,EAASqB,EAAQtwC,KAAKhL,GAC1B24C,EAAOsB,GAAUqB,EAAQE,iBAAiBvB,KAItD,OAAOtB,GAEXrf,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAegpC,EAAwBh7C,UAAW,aAAc,CACnE0a,IAAK,WAGD,IAFA,IAAIw+B,EAAap5C,KAAK04C,WAAWU,WAC7B6C,EAAW,GACNz7C,EAAI,EAAGA,EAAI44C,EAAWz4C,OAAQH,IAEnCy7C,EAASp6C,KAAKq6C,GADA9C,EAAW54C,KAG7B,OAAOy7C,GAEXniB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAegpC,EAAwBh7C,UAAW,WAAY,CACjE0a,IAAK,WACD,IAAI+gB,EAAgB37B,KAAK27B,cACzB,IAAKA,EACD,MAAO,GAGX,IAFA,IAAIyd,EAAazd,EAAcsgB,SAC3BA,EAAW,GACNz7C,EAAI,EAAGA,EAAI44C,EAAWz4C,OAAQH,IAEnCy7C,EAASp6C,KAAKq6C,GADA9C,EAAW54C,KAG7B,OAAOy7C,GAEXniB,YAAY,EACZC,cAAc,IAElBmhB,EAAwBh7C,UAAUy5C,MAAQ,SAAUC,GAEhD,OADc55C,KAAK65C,SAASD,GACb,IAAM,MAEzBsB,EAAwBh7C,UAAU25C,SAAW,SAAUD,GACnD,IAAIE,EAAU,GAEd,OADAqC,GAAqBn8C,KAAM45C,EAAWE,GAAS,GACxCA,GAEXoB,EAAwBh7C,UAAU85C,cAAgB,SAAUJ,GACxD,IAAIE,EAAU,GAEd,OADAqC,GAAqBn8C,KAAM45C,EAAWE,GAAS,GACxCA,GAEXoB,EAAwBh7C,UAAUg6C,oBAAsB,SAAUC,EAAWC,GACzEp6C,KAAK44C,UAAUlwC,QAAQ,SAAU8a,GACzBA,EAASrgB,OAASg3C,GAClB32B,EAAS0W,SAASkgB,MAIvBc,EAvKiC,CAwK1Cb,IACF,SAAS8B,GAAqBl5B,EAAY22B,EAAWE,EAASsC,GACtDn5B,aAAsBq3B,IACtBr3B,EAAWm2B,WAAW1wC,QAAQ,SAAU2a,GAChCu2B,EAAUv2B,IACVy2B,EAAQj4C,KAAKwhB,GAEbA,aAAgBi3B,KACZ8B,IAAe/4B,EAAKsY,eACpBwgB,GAAqB94B,EAAMu2B,EAAWE,EAASsC,MAOnE,IAAIC,GAAyB,IAAIlpC,IAIjC,SAAS+oC,GAAwBxD,GAC7B,OAAIA,aAAsBp1B,KACfo1B,EAAWyC,UAAY73B,KAAK83B,aAC/B,IAAId,GAAwB5B,GAC5B,IAAI2B,GAAqB3B,GAE1B,KAKX,IAAI4D,GAAeJ,GACnB,SAASK,GAAel5B,GACpBg5B,GAAuBtpB,IAAI1P,EAAKq1B,WAAYr1B,GA2gChD,IA0GIm5B,GAAexL,GAAsB,KAAM,OAZhB,CAE3B,CAAEze,QAAS6V,GAAa3V,SAAU,WAClC,CAAEF,QAASgf,GAAave,KAAM,CAAClB,KAC/B,CAAES,QAASgd,GAAqBvc,KAAM,IACtC,CAAET,QAASgW,GAASvV,KAAM,MAsC1BypB,GAAY,IAAI5rC,GAAe,YAyB/B6rC,GAAe,IAAI7rC,GAAe,gBAsBlC8rC,GAAsB,IAAI9rC,GAAe,sBAwBzC+rC,GACJ,SAAWA,UACPA,EAA2BA,EAAkC,MAAI,GAAK,QACtEA,EAA2BA,EAAoC,QAAI,GAAK,UACxEA,EAA2BA,EAAmC,OAAI,GAAK,SAHhEA,EAAX,CAIE,IA6FF,SAASC,GAAejlC,EAAMklC,EAAgBC,GAU1C,IAAIz0B,EAAQ1Q,EAAK0Q,MACb00B,EAAoB,KAAR10B,EAChB,OAAI00B,IAAcF,GACdllC,EAAK0Q,OAAiB,KAARA,EAAsCy0B,EACpDnlC,EAAKqlC,WAAa,GACX,GAEJD,IAAcD,EAIzB,SAASG,GAA4BtlC,EAAMolC,EAAWj5C,GAClD,OAAkB,KAAb6T,EAAK0Q,SAAuC00B,GAAaplC,EAAKqlC,WAAal5C,IAC5E6T,EAAKqlC,UAAYl5C,EAAQ,GAClB,GAOf,SAASo5C,GAAWvlC,EAAM7T,GACtB,OAAO6T,EAAKwlC,MAAMr5C,GAKtB,SAASs5C,GAAczlC,EAAM7T,GACzB,OAAO6T,EAAKwlC,MAAMr5C,GAKtB,SAASu5C,GAAe1lC,EAAM7T,GAC1B,OAAO6T,EAAKwlC,MAAMr5C,GAKtB,SAASw5C,GAAqB3lC,EAAM7T,GAChC,OAAO6T,EAAKwlC,MAAMr5C,GAKtB,SAASy5C,GAAY5lC,EAAM7T,GACvB,OAAO6T,EAAKwlC,MAAMr5C,GAEtB,IASI05C,GAAW,CACXC,oBAAgBp4C,EAChBq4C,oBAAgBr4C,EAChB68B,wBAAoB78B,EACpBs4C,yBAAqBt4C,EACrBu4C,uBAAmBv4C,EACnBw4C,sBAAkBx4C,EAClBy4C,2BAAuBz4C,EACvB04C,oBAAgB14C,EAChB24C,wBAAoB34C,EACpB44C,wBAAoB54C,EACpB64C,iBAAa74C,EACb84C,gBAAY94C,EACZ+4C,wBAAoB/4C,EACpBg5C,iBAAah5C,EACbi5C,sBAAkBj5C,EAClBk5C,oBAAgBl5C,EAChBm5C,wBAAoBn5C,GAUxB,SAASo5C,GAA4Cx3C,EAAS8W,EAAU2gC,EAAWC,GAC/E,IAAIC,EAAM,8GAAgH7gC,EAAW,sBAAwB2gC,EAAY,KAMzK,OALIC,IACAC,GACI,wJAcZ,SAAwBA,EAAK33C,GACzB,IAAIlE,EAAM,IAAIH,MAAMg8C,GAEpB,OADAC,GAAiB97C,EAAKkE,GACflE,EAdA+7C,CAAeF,EAAK33C,GAgB/B,SAAS43C,GAAiB97C,EAAKkE,GAC3BlE,EAAIsjC,IAAuBp/B,EAC3BlE,EAAIwjC,IAAgBt/B,EAAQ83C,SAAS73C,KAAKD,GAK9C,SAAS+3C,GAAmB34B,GACxB,OAAO,IAAIzjB,MAAM,wDAA0DyjB,GAU/E,IAAI44B,GAAO,aACPC,GAAiB,IAAIhsC,IACzB,SAASisC,GAASzrC,GACd,IAAIpE,EAAM4vC,GAAevkC,IAAIjH,GAK7B,OAJKpE,IACDA,EAAMmE,GAAUC,GAAS,IAAMwrC,GAAeE,KAC9CF,GAAepsB,IAAIpf,EAAOpE,IAEvBA,EAEX,SAAS+vC,GAAc1nC,EAAM2nC,EAASC,EAAY19C,GAC9C,GAAIyiB,GAAaI,UAAU7iB,GAAQ,CAC/BA,EAAQyiB,GAAaG,OAAO5iB,GAC5B,IAAI29C,EAAmB7nC,EAAKQ,IAAIglC,MAAMmC,GAASG,aAAeF,EAC1DxhC,EAAWuG,GAAaG,OAAO9M,EAAK+nC,UAAUF,IAClD7nC,EAAK+nC,UAAUF,GAAoB,IAAIl7B,GAAavG,GAExD,OAAOlc,EAEX,IAAI89C,GAA6B,cAC7BC,GAAyB,UAG7B,SAASC,GAAoBvuC,GACzB,MAAO,CACH4c,GAAIyxB,GACJzG,OAAQ5nC,EAAO4nC,OACf4G,cAAexuC,EAAOwuC,cACtBloC,KAAMtG,EAAOsG,MAGrB,IAAImoC,GAAqB,EAkBzB,SAASC,GAAaroC,EAAMQ,EAAKonC,EAAY19C,GAEzC,UAAkB,EAAb8V,EAAK0Q,QACL/U,GAFWqE,EAAK+nC,UAESvnC,EAAIsnC,aAAeF,GAAa19C,IAKlE,SAASo+C,GAAsBtoC,EAAMQ,EAAKonC,EAAY19C,GAClD,QAAIm+C,GAAaroC,EAAMQ,EAAKonC,EAAY19C,KACpC8V,EAAK+nC,UAAUvnC,EAAIsnC,aAAeF,GAAc19C,GACzC,GAIf,SAASq+C,GAAsBvoC,EAAMQ,EAAKonC,EAAY19C,GAClD,IAAIkc,EAAWpG,EAAK+nC,UAAUvnC,EAAIsnC,aAAeF,GACjD,GAAkB,EAAb5nC,EAAK0Q,QAAsCzE,GAAa7F,EAAUlc,GAAQ,CAC3E,IAAIs+C,EAAchoC,EAAIioC,SAASb,GAAYr8C,KAC3C,MAAMu7C,GAA4CjB,GAASY,mBAAmBzmC,EAAMQ,EAAIL,WAAYqoC,EAAc,KAAOpiC,EAAUoiC,EAAc,KAAOt+C,EAAmD,IAA9B,EAAb8V,EAAK0Q,SAG7K,SAASg4B,GAAwB1oC,GAE7B,IADA,IAAI2oC,EAAW3oC,EACR2oC,GACsB,EAArBA,EAASnoC,IAAIF,QACbqoC,EAASj4B,OAAS,GAEtBi4B,EAAWA,EAASC,qBAAuBD,EAASz7C,OAG5D,SAAS27C,GAAsC7oC,EAAM8oC,GAEjD,IADA,IAAIH,EAAW3oC,EACR2oC,GAAYA,IAAaG,GAC5BH,EAASj4B,OAAS,GAClBi4B,EAAWA,EAASC,qBAAuBD,EAASz7C,OAG5D,SAAS67C,GAAc/oC,EAAMG,EAAWoiC,EAAWyG,GAC/C,IAMI,OADAN,GAHgC,SADlB1oC,EAAKQ,IAAIglC,MAAMrlC,GACLG,MACpBmlC,GAAczlC,EAAMG,GAAW+O,cAC/BlP,GAEG6lC,GAASa,YAAY1mC,EAAMG,EAAWoiC,EAAWyG,GAE5D,MAAOn/C,GAEHmW,EAAKipC,KAAKrO,aAAa1L,YAAYrlC,IAG3C,SAASq/C,GAAsBlpC,GAC3B,OAAIA,EAAK9S,OAEEu4C,GADUzlC,EAAK9S,OACW8S,EAAKmpC,cAAchpC,WAEjD,KAOX,SAASipC,GAAappC,GAElB,OADiBA,EAAK9S,OAEX8S,EAAKmpC,cAAcj8C,OAGnB,KAGf,SAASm8C,GAAWrpC,EAAMQ,GACtB,OAAoB,UAAZA,EAAIF,OACR,KAAK,EACD,OAAOmlC,GAAczlC,EAAMQ,EAAIL,WAAWmpC,cAC9C,KAAK,EACD,OAAO/D,GAAWvlC,EAAMQ,EAAIL,WAAWopC,YAMnD,SAASC,GAAgBxpC,GACrB,QAASA,EAAK9S,WAAwC,MAA3B8S,EAAKmpC,cAAc7oC,OAElD,SAASmpC,GAAezpC,GACpB,SAASA,EAAK9S,QAAuC,MAA3B8S,EAAKmpC,cAAc7oC,OAEjD,SAASopC,GAAcC,GACnB,OAAO,GAAMA,EAAU,GAE3B,SAASC,GAAuBC,GAC5B,IAAIC,EAAiB,GACjBC,EAAkB,EAClB5I,EAAa,GAajB,OAZI0I,GACAA,EAAkB/4C,QAAQ,SAAUiJ,GAChC,IAAIg5B,EAAKxpC,EAAOwQ,EAAI,GAAI4vC,EAAU5W,EAAG,GAAIiX,EAAYjX,EAAG,GACjC,iBAAZ4W,GACPG,EAAeH,GAAWK,EAC1BD,GAAmBL,GAAcC,IAGjCxI,EAAWwI,GAAWK,IAI3B,CAAEF,eAAgBA,EAAgB3I,WAAYA,EAAY4I,gBAAiBA,GAEtF,SAASE,GAAa7uB,EAAM8uB,GACxB,OAAO9uB,EAAKjwB,IAAI,SAAUjB,GACtB,IAAI6P,EACAgC,EACAuE,EAWJ,OAVIvY,MAAMuC,QAAQJ,IACSoW,GAAvBvG,EAAKxQ,EAAOW,EAAO,IAAe,GAAI6R,EAAQhC,EAAG,KAGjDuG,EAAQ,EACRvE,EAAQ7R,GAER6R,IAA2B,mBAAVA,GAAyC,iBAAVA,IAAuBmuC,GACvEtiD,OAAO0S,eAAeyB,EAAO8d,GAAQ,CAAE3vB,MAAOggD,EAAY/nB,cAAc,IAErE,CAAE7hB,MAAOA,EAAOvE,MAAOA,EAAOyrC,SAAUA,GAASzrC,MAGhE,SAASouC,GAAuBnqC,EAAMoqC,EAAY5pC,GAC9C,IAAImO,EAAenO,EAAImO,aACvB,OAAIA,EACmD,IAAzB,EAArBA,EAAarO,QAC0C,IAAlC,SAArBqO,EAAarO,QACbqO,EAAa+D,QAAQ23B,uBAClB17B,EAAa+D,QAAQ23B,sBAAsBlC,gBACvC3rC,GAAkB8tC,OAGnB7E,GAAczlC,EAAMQ,EAAImO,aAAaxO,WAAWmpC,mBAP3D,EAWOc,EAGf,IAAIG,GAAmB,IAAIC,QAC3B,SAASC,GAAkB5xC,GACvB,IAAI3O,EAAQqgD,GAAiBvnC,IAAInK,GAMjC,OALK3O,KACDA,EAAQ2O,EAAQ,WAAc,OAAOyuC,MAC/BzuC,QAAUA,EAChB0xC,GAAiBpvB,IAAItiB,EAAS3O,IAE3BA,EAOX,SAASwgD,GAAqB1qC,EAAM0O,EAAQrD,EAAY60B,EAAat/B,GAElD,IAAX8N,IACArD,EAAarL,EAAKwN,SAASnC,WAAWg+B,GAAWrpC,EAAMA,EAAKQ,IAAImqC,sBAEpEC,GAAwB5qC,EAAM0O,EAAQ,EAAG1O,EAAKQ,IAAIglC,MAAMz8C,OAAS,EAAGsiB,EAAY60B,EAAat/B,GAEjG,SAASgqC,GAAwB5qC,EAAM0O,EAAQm8B,EAAYjjC,EAAUyD,EAAY60B,EAAat/B,GAC1F,IAAK,IAAIhY,EAAIiiD,EAAYjiD,GAAKgf,EAAUhf,IAAK,CACzC,IAAIkiD,EAAU9qC,EAAKQ,IAAIglC,MAAM58C,GACT,GAAhBkiD,EAAQxqC,OACRyqC,GAAgB/qC,EAAM8qC,EAASp8B,EAAQrD,EAAY60B,EAAat/B,GAGpEhY,GAAKkiD,EAAQE,YAGrB,SAASC,GAA0BjrC,EAAMkrC,EAAgBx8B,EAAQrD,EAAY60B,EAAat/B,GAEtF,IADA,IAAIuqC,EAAWnrC,EACRmrC,IAAa3B,GAAgB2B,IAChCA,EAAWA,EAASj+C,OAMxB,IAJA,IAAI4S,EAAWqrC,EAASj+C,OACpBk+C,EAAYhC,GAAa+B,GAEzBvjC,EAAWwjC,EAAUjrC,UAAYirC,EAAUJ,WACtCpiD,EAFQwiD,EAAUjrC,UAAY,EAEdvX,GAAKgf,EAAUhf,IAAK,CACzC,IAAIkiD,EAAUhrC,EAASU,IAAIglC,MAAM58C,GAC7BkiD,EAAQI,iBAAmBA,GAC3BH,GAAgBjrC,EAAUgrC,EAASp8B,EAAQrD,EAAY60B,EAAat/B,GAGxEhY,GAAKkiD,EAAQE,WAEjB,IAAKlrC,EAAS5S,OAAQ,CAElB,IAAIm+C,EAAiBrrC,EAAKipC,KAAK3nB,iBAAiB4pB,GAChD,GAAIG,EACA,IAASziD,EAAI,EAAGA,EAAIyiD,EAAetiD,OAAQH,IACvC0iD,GAAqBtrC,EAAMqrC,EAAeziD,GAAI8lB,EAAQrD,EAAY60B,EAAat/B,IAK/F,SAASmqC,GAAgB/qC,EAAM8qC,EAASp8B,EAAQrD,EAAY60B,EAAat/B,GACrE,GAAoB,EAAhBkqC,EAAQxqC,MACR2qC,GAA0BjrC,EAAM8qC,EAAQS,UAAUp/C,MAAOuiB,EAAQrD,EAAY60B,EAAat/B,OAEzF,CACD,IAAI4qC,EAAKnC,GAAWrpC,EAAM8qC,GAe1B,GAde,IAAXp8B,GAAmD,SAAhBo8B,EAAQxqC,OACnB,GAAvBwqC,EAAQW,cAEkB,GAAvBX,EAAQW,cACRH,GAAqBtrC,EAAMwrC,EAAI98B,EAAQrD,EAAY60B,EAAat/B,GAEzC,GAAvBkqC,EAAQW,cAERH,GADe7F,GAAczlC,EAAM8qC,EAAQ3qC,WAAW+O,cACvBs8B,EAAI98B,EAAQrD,EAAY60B,EAAat/B,IAIxE0qC,GAAqBtrC,EAAMwrC,EAAI98B,EAAQrD,EAAY60B,EAAat/B,GAEhD,SAAhBkqC,EAAQxqC,MAER,IADA,IAAIorC,EAAgBjG,GAAczlC,EAAM8qC,EAAQ3qC,WAAWwrC,cAAcC,eAChEC,EAAI,EAAGA,EAAIH,EAAc3iD,OAAQ8iD,IACtCnB,GAAqBgB,EAAcG,GAAIn9B,EAAQrD,EAAY60B,EAAat/B,GAG5D,EAAhBkqC,EAAQxqC,QAAgCwqC,EAAQp4B,QAAQnnB,MACxDq/C,GAAwB5qC,EAAM0O,EAAQo8B,EAAQ3qC,UAAY,EAAG2qC,EAAQ3qC,UAAY2qC,EAAQE,WAAY3/B,EAAY60B,EAAat/B,IAI1I,SAAS0qC,GAAqBtrC,EAAMqpC,EAAY36B,EAAQrD,EAAY60B,EAAat/B,GAC7E,IAAI4M,EAAWxN,EAAKwN,SACpB,OAAQkB,GACJ,KAAK,EACDlB,EAASoE,YAAYvG,EAAYg+B,GACjC,MACJ,KAAK,EACD77B,EAAS6B,aAAahE,EAAYg+B,EAAYnJ,GAC9C,MACJ,KAAK,EACD1yB,EAAS8B,YAAYjE,EAAYg+B,GACjC,MACJ,KAAK,EACDzoC,EAAO3W,KAAKo/C,IAIxB,IAAIyC,GAAe,kBACnB,SAASC,GAAexgD,GACpB,GAAgB,MAAZA,EAAK,GAAY,CACjB,IAAIygD,EAAQzgD,EAAKygD,MAAMF,IACvB,MAAO,CAACE,EAAM,GAAIA,EAAM,IAE5B,MAAO,CAAC,GAAIzgD,GAEhB,SAAS0gD,GAAiBxD,GAEtB,IADA,IAAInoC,EAAQ,EACH1X,EAAI,EAAGA,EAAI6/C,EAAS1/C,OAAQH,IACjC0X,GAASmoC,EAAS7/C,GAAG0X,MAEzB,OAAOA,EAEX,SAAS4rC,GAAYC,EAAYC,GAE7B,IADA,IAAI/3C,EAAS,GACJzL,EAAI,EAAGA,EAAiB,EAAbujD,EAAgBvjD,GAAQ,EACxCyL,EAASA,EAAS+3C,EAAexjD,GAAKyjD,GAAkBD,EAAexjD,EAAI,IAE/E,OAAOyL,EAAS+3C,EAA4B,EAAbD,GAEnC,SAASG,GAAkBH,EAAYI,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC3G,OAAQtB,GACJ,KAAK,EACD,OAAOI,EAAKF,GAAkBG,GAAMC,EACxC,KAAK,EACD,OAAOF,EAAKF,GAAkBG,GAAMC,EAAKJ,GAAkBK,GAAMC,EACrE,KAAK,EACD,OAAOJ,EAAKF,GAAkBG,GAAMC,EAAKJ,GAAkBK,GAAMC,EAAKN,GAAkBO,GACpFC,EACR,KAAK,EACD,OAAON,EAAKF,GAAkBG,GAAMC,EAAKJ,GAAkBK,GAAMC,EAAKN,GAAkBO,GACpFC,EAAKR,GAAkBS,GAAMC,EACrC,KAAK,EACD,OAAOR,EAAKF,GAAkBG,GAAMC,EAAKJ,GAAkBK,GAAMC,EAAKN,GAAkBO,GACpFC,EAAKR,GAAkBS,GAAMC,EAAKV,GAAkBW,GAAMC,EAClE,KAAK,EACD,OAAOV,EAAKF,GAAkBG,GAAMC,EAAKJ,GAAkBK,GAAMC,EAAKN,GAAkBO,GACpFC,EAAKR,GAAkBS,GAAMC,EAAKV,GAAkBW,GAAMC,EAAKZ,GAAkBa,GAAMC,EAC/F,KAAK,EACD,OAAOZ,EAAKF,GAAkBG,GAAMC,EAAKJ,GAAkBK,GAAMC,EAAKN,GAAkBO,GACpFC,EAAKR,GAAkBS,GAAMC,EAAKV,GAAkBW,GAAMC,EAAKZ,GAAkBa,GACjFC,EAAKd,GAAkBe,GAAMC,EACrC,KAAK,EACD,OAAOd,EAAKF,GAAkBG,GAAMC,EAAKJ,GAAkBK,GAAMC,EAAKN,GAAkBO,GACpFC,EAAKR,GAAkBS,GAAMC,EAAKV,GAAkBW,GAAMC,EAAKZ,GAAkBa,GACjFC,EAAKd,GAAkBe,GAAMC,EAAKhB,GAAkBiB,GAAMC,EAClE,KAAK,EACD,OAAOhB,EAAKF,GAAkBG,GAAMC,EAAKJ,GAAkBK,GAAMC,EAAKN,GAAkBO,GACpFC,EAAKR,GAAkBS,GAAMC,EAAKV,GAAkBW,GAAMC,EAAKZ,GAAkBa,GACjFC,EAAKd,GAAkBe,GAAMC,EAAKhB,GAAkBiB,GAAMC,EAAKlB,GAAkBmB,GAAMC,EAC/F,QACI,MAAM,IAAIxiD,MAAM,6CAG5B,SAASohD,GAAkBlmC,GACvB,OAAY,MAALA,EAAYA,EAAE9a,WAAa,GAEtC,IAAIqiD,GAAgB,GAChBC,GAAY,GAShB,SAASC,GAAUttC,EAAOupC,EAAmBqB,EAAgBF,EAAYtE,EAAamH,GAClFvtC,GAAS,EACT,IAAIvG,EAAK6vC,GAAuBC,GAEhC,MAAO,CAEH1pC,WAAY,EACZjT,OAAQ,KACRyhB,aAAc,KACdm5B,cAAe,EACfgG,aAAc,EAEdxtC,MAAOA,EACPytC,YAAa,EACbC,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EAAGpE,eAdyC/vC,EAAG+vC,eAcZC,gBAd0EhwC,EAAGgwC,gBAc3C5I,WAdOpnC,EAAGonC,WAcc+J,eAAgBA,EAAgBF,WAAYA,EAC9JvC,SAAU,GACVgD,aAAc,EACdz0B,QAAS,GACTtE,QAAS,CACLy7B,GAAI,KACJ5iD,KAAM,KACNspB,MAAO,KAAMpU,SApBNotC,EAAkBpD,GAAkBoD,GAAmB,KAqB9DO,kBAAmB,KACnBl/B,cAAe,KACfm7B,sBAAuB,KACvBgE,gBAAiB,KACjBC,aAAc,KACd5H,YAAaA,GAAeY,IAEhC/rB,SAAU,KACVuB,KAAM,KACNilB,MAAO,KACPwJ,UAAW,MAGnB,SAASgD,GAAWR,EAAYztC,EAAOupC,EAAmBqB,EAAgBF,EAAYwD,EAAkBC,EAAYhG,EAAUzxB,EAAS0vB,EAAax3B,EAAem7B,GAE/J,IAAItwC,OADe,IAAf00C,IAAyBA,EAAa,IAErC/H,IACDA,EAAcY,IAElB,IAAIvU,EAAK6W,GAAuBC,GAAoBC,EAAiB/W,EAAG+W,eAAgB3I,EAAapO,EAAGoO,WAAY4I,EAAkBhX,EAAGgX,gBACrIoE,EAAK,KACL5iD,EAAO,KACPijD,IACkDL,GAAlDp0C,EAAKxQ,EAAOwiD,GAAeyC,GAAmB,IAAY,GAAIjjD,EAAOwO,EAAG,IAE5E0uC,EAAWA,GAAY,GAEvB,IADA,IAAIiG,EAAc,IAAI3mD,MAAM0gD,EAAS1/C,QAC5BH,EAAI,EAAGA,EAAI6/C,EAAS1/C,OAAQH,IAAK,CACtC,IAAI+lD,EAAKplD,EAAOk/C,EAAS7/C,GAAI,GAAI6iD,EAAekD,EAAG,GAAgCC,EAA0BD,EAAG,GAC5GE,EAAKtlD,EAAOwiD,GAD4D4C,EAAG,IAC3B,GAAIG,EAAOD,EAAG,GAAIhM,EAASgM,EAAG,GAC9EE,OAAkBrhD,EAClBshD,OAASthD,EACb,OAAuB,GAAf+9C,GACJ,KAAK,EACDuD,EAASJ,EACT,MACJ,KAAK,EACL,KAAK,EACDG,EAAkBH,EAG1BF,EAAY9lD,GACR,CAAE0X,MAAOmrC,EAAc0C,GAAIW,EAAMvjD,KAAMs3C,EAAQoM,gBAAiBpM,EAAQkM,gBAAiBA,EAAiBC,OAAQA,GAE1Hh4B,EAAUA,GAAW,GACrB,IAAIk4B,EAAa,IAAInnD,MAAMivB,EAAQjuB,QACnC,IAASH,EAAI,EAAGA,EAAIouB,EAAQjuB,OAAQH,IAAK,CACrC,IAAIumD,EAAK5lD,EAAOytB,EAAQpuB,GAAI,GAC5BsmD,EAAWtmD,GAAK,CACZmQ,KAAM,EACN6H,OAHqCuuC,EAAG,GAGxB5M,UAHwC4M,EAAG,GAI3Dv1C,SAAU,MAIlB,IAAIib,GADJ45B,EAAaA,GAAc,IACJtjD,IAAI,SAAU4O,GACjC,IAAIg5B,EAAKxpC,EAAOwQ,EAAI,GAA8B7P,EAAQ6oC,EAAG,GACzD4b,EAAKplD,EAAOwiD,GAD2BhZ,EAAG,IACI,GAClD,MAAO,CADoD4b,EAAG,GAAWA,EAAG,GAC1DzkD,KAOtB,OALAmgD,EAvaJ,SAA8BtxC,GAC1B,GAAIA,GAAQA,EAAKwd,KAAOyxB,GAA4B,CAEhD,IAAIoH,EAAmC,MAAtBr2C,EAAKovC,eAAyBpvC,EAAKovC,gBAAkB3rC,GAAkB6yC,MACpFt2C,EAAKwoC,OAAOx4C,QAAUnB,OAAOyT,KAAKtC,EAAKkH,MAAMlX,OAE7CgQ,EAAKwd,GADL64B,EACU,IAAMhH,KAGNH,GAMlB,OAHIlvC,GAAQA,EAAKwd,KAAO0xB,KACpBlvC,EAAO,MAEJA,GAAQ,KAwZSu2C,CAAqBjF,GACzCn7B,IACA5O,GAAS,UAGN,CAEHH,WAAY,EACZjT,OAAQ,KACRyhB,aAAc,KACdm5B,cAAe,EACfgG,aAAc,EAEdC,WAAYA,EACZztC,MAVJA,GAAS,EAWL0tC,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EAAGpE,eAAgBA,EAAgBC,gBAAiBA,EAAiB5I,WAAYA,EAAY+J,eAAgBA,EAAgBF,WAAYA,EAC9JvC,SAAUiG,EACVjD,aAAcQ,GAAiByC,GAC/B13B,QAASk4B,EACTx8B,QAAS,CACLy7B,GAAIA,EACJ5iD,KAAMA,EACNspB,MAAOA,EACPpU,SAAU,KAEV2tC,kBAAmB,KACnBl/B,cAAeA,GAAiB,KAChCm7B,sBAAuBA,EACvBgE,gBAAiB,KACjBC,aAAc,KACd5H,YAAaA,GAAeY,IAEhC/rB,SAAU,KACVuB,KAAM,KACNilB,MAAO,KACPwJ,UAAW,MAGnB,SAASvlB,GAAchmB,EAAMoqC,EAAY5pC,GACrC,IAGIm9B,EAHA4R,EAAQ/uC,EAAIkS,QACZ6O,EAAqBvhB,EAAKipC,KAAKuG,eAC/BhiC,EAAWxN,EAAKwN,SAEpB,GAAIxN,EAAK9S,SAAWq0B,EAAoB,CAEhCoc,EADA4R,EAAMhkD,KACDiiB,EAASwY,cAAcupB,EAAMhkD,KAAMgkD,EAAMpB,IAGzC3gC,EAASwyB,cAAc,IAEhC,IAAIjuB,EAAWo4B,GAAuBnqC,EAAMoqC,EAAY5pC,GACpDuR,GACAvE,EAASoE,YAAYG,EAAU4rB,QAOnCA,EAAKnwB,EAAS0Y,kBAAkB3E,IAFPguB,EAAMlF,uBAC3BkF,EAAMlF,sBAAsBlC,gBAAkB3rC,GAAkBizC,WAGxE,GAAIF,EAAM16B,MACN,IAAK,IAAIjsB,EAAI,EAAGA,EAAI2mD,EAAM16B,MAAM9rB,OAAQH,IAAK,CACzC,IAAImR,EAAKxQ,EAAOgmD,EAAM16B,MAAMjsB,GAAI,GAChC4kB,EAASoL,aAAa+kB,EADmC5jC,EAAG,GAAYA,EAAG,GAAlCA,EAAG,IAIpD,OAAO4jC,EAEX,SAAS+R,GAAuB1vC,EAAMmrC,EAAU3qC,EAAKm9B,GACjD,IAAK,IAAI/0C,EAAI,EAAGA,EAAI4X,EAAIwW,QAAQjuB,OAAQH,IAAK,CACzC,IAAI+mD,EAASnvC,EAAIwW,QAAQpuB,GACrBgnD,EAAqBC,GAA0B7vC,EAAMQ,EAAIL,WA/Y/B5U,EA+Y8EokD,EAAOpN,WA/Y7F3hC,EA+YuE+uC,EAAO/uC,QA9YxFA,EAAS,IAAMrV,EAAOA,IA+Y9BukD,EAAeH,EAAO/uC,OACtBmvC,EAAe/vC,EACG,cAAlB2vC,EAAO/uC,SACPkvC,EAAe,KACfC,EAAe5E,GAEnB,IAAI6E,EAAaD,EAAaviC,SAASyiC,OAAOH,GAAgBnS,EAAIgS,EAAOpN,UAAWqN,GACpF5vC,EAAKkwC,YAAY1vC,EAAIstC,YAAcllD,GAAKonD,EAvZhD,IAA8BpvC,EAAQrV,EA0ZtC,SAASskD,GAA0B7vC,EAAM7T,EAAOo2C,GAC5C,OAAO,SAAUyG,GAAS,OAAOD,GAAc/oC,EAAM7T,EAAOo2C,EAAWyG,IAmC3E,SAASmH,GAA2BnwC,EAAMQ,EAAKonC,EAAY19C,GACvD,IAAKo+C,GAAsBtoC,EAAMQ,EAAKonC,EAAY19C,GAC9C,OAAO,EAEX,IAAIkmD,EAAU5vC,EAAIioC,SAASb,GACvByI,EAAS5K,GAAczlC,EAAMQ,EAAIL,WACjCmwC,EAAgBD,EAAO/G,cACvB/9C,EAAO6kD,EAAQ7kD,KACnB,OAAwB,GAAhB6kD,EAAQ9vC,OACZ,KAAK,GAmBb,SAA6BN,EAAMowC,EAASE,EAAenC,EAAI5iD,EAAMrB,GACjE,IAAI6kD,EAAkBqB,EAAQrB,gBAC1BwB,EAAcxB,EAAkB/uC,EAAKipC,KAAKt0B,UAAU67B,SAASzB,EAAiB7kD,GAASA,EAC3FqmD,EAA6B,MAAfA,EAAsBA,EAAYllD,WAAa,KAC7D,IAAImiB,EAAWxN,EAAKwN,SACP,MAATtjB,EACAsjB,EAASoL,aAAa03B,EAAe/kD,EAAMglD,EAAapC,GAGxD3gC,EAASijC,gBAAgBH,EAAe/kD,EAAM4iD,GA3B1CuC,CAAoB1wC,EAAMowC,EAASE,EAAeF,EAAQjC,GAAI5iD,EAAMrB,GACpE,MACJ,KAAK,GA4Bb,SAAyB8V,EAAMswC,EAAe/kD,EAAMrB,GAChD,IAAIsjB,EAAWxN,EAAKwN,SAChBtjB,EACAsjB,EAASmjC,SAASL,EAAe/kD,GAGjCiiB,EAASojC,YAAYN,EAAe/kD,GAjChCslD,CAAgB7wC,EAAMswC,EAAe/kD,EAAMrB,GAC3C,MACJ,KAAK,GAkCb,SAAyB8V,EAAMowC,EAASE,EAAe/kD,EAAMrB,GACzD,IAAIqmD,EAAcvwC,EAAKipC,KAAKt0B,UAAU67B,SAASlsB,GAAgBwsB,MAAO5mD,GACtE,GAAmB,MAAfqmD,EAAqB,CACrBA,EAAcA,EAAYllD,WAC1B,IAAI0lD,EAAOX,EAAQpB,OACP,MAAR+B,IACAR,GAA4BQ,QAIhCR,EAAc,KAElB,IAAI/iC,EAAWxN,EAAKwN,SACD,MAAf+iC,EACA/iC,EAASwjC,SAASV,EAAe/kD,EAAMglD,GAGvC/iC,EAASyjC,YAAYX,EAAe/kD,GAlDhC2lD,CAAgBlxC,EAAMowC,EAASE,EAAe/kD,EAAMrB,GACpD,MACJ,KAAK,GAmDb,SAA4B8V,EAAMowC,EAASE,EAAe/kD,EAAMrB,GAC5D,IAAI6kD,EAAkBqB,EAAQrB,gBAC1BwB,EAAcxB,EAAkB/uC,EAAKipC,KAAKt0B,UAAU67B,SAASzB,EAAiB7kD,GAASA,EAC3F8V,EAAKwN,SAASsL,YAAYw3B,EAAe/kD,EAAMglD,GAjDvCY,CAJ4B,SAAZ3wC,EAAIF,OACA,GAAhB8vC,EAAQ9vC,MACR+vC,EAAOnhC,cACPlP,EACyBowC,EAASE,EAAe/kD,EAAMrB,GAGnE,OAAO,EAwDX,IAAIknD,GAAkB,IAAIxpD,OACtBypD,GAAsB7J,GAASttB,IAC/Bo3B,GAAsB9J,GAASxtB,IAC/Bu3B,GAAsB/J,GAAShmB,IACnC,SAASgwB,GAAiBlxC,EAAOvE,EAAO7R,EAAOkxB,GAM3C,OAFAlxB,EAAQqS,GAAkBrS,GAEnB,CAEHiC,OAAQ,EACRivB,KAJU6uB,GAAa7uB,EAAMtf,GAAUC,IAIxBuE,MAAOA,EAAOvE,MAAOA,EAAO7R,MAAOA,GAG1D,SAASunD,GAAUr3B,GAIf,IAHA,IAAIs3B,EAAiB,GACjB1mB,EAAU,GACV2mB,GAAS,EACJ/oD,EAAI,EAAGA,EAAIwxB,EAAUrxB,OAAQH,IAAK,CACvC,IAAI2yB,EAAWnB,EAAUxxB,GACrB2yB,EAASxf,QAAUqhB,KAA+B,IAAnB7B,EAASrxB,QACxCynD,GAAS,GAEQ,WAAjBp2B,EAASjb,OACT0qB,EAAQ/gC,KAAKsxB,EAASxf,OAE1Bwf,EAASpvB,MAAQvD,EACjB8oD,EAAelK,GAASjsB,EAASxf,QAAUwf,EAE/C,MAAO,CAEH1iB,QAAS,KACT64C,eAAgBA,EAChBt3B,UAAWA,EACX4Q,QAASA,EACT2mB,OAAQA,GAgBhB,SAASC,GAAmB3xC,EAAM4xC,EAAQ5uC,QAChB,IAAlBA,IAA4BA,EAAgBiX,GAASH,oBACzD,IAoDmBmF,EAAU1e,EApDzBiC,EAASF,GAAmBtC,GAChC,IACI,GAAmB,EAAf4xC,EAAOvxC,MACP,OAAOuxC,EAAO91C,MAKlB,GAHmB,EAAf81C,EAAOvxC,QACP2C,EAAgB,MAED,EAAf4uC,EAAOvxC,MACP,OAAOL,EAAKpU,QAAQmX,IAAI6uC,EAAO91C,MAAOkH,GAE1C,IAAI6uC,EAAaD,EAAOrK,SACxB,OAAQsK,GACJ,KAAKT,GACL,KAAKC,GACL,KAAKC,GACD,OAAOtxC,EAEf,IACIiD,EADA6uC,EAAc9xC,EAAK+xC,KAAKN,eAAeI,GAE3C,GAAIC,EAAa,CACb,IAAIE,EAAmBhyC,EAAKiyC,WAAWH,EAAY5lD,OAKnD,YAJyBuB,IAArBukD,IACAA,EAAmBhyC,EAAKiyC,WAAWH,EAAY5lD,OAC3CgmD,GAAwBlyC,EAAM8xC,IAE/BE,IAAqBb,QAAkB1jD,EAAYukD,EAEzD,IAAK/uC,EAAgBpK,GAAiB+4C,EAAO91C,UAwBnCmjB,EAxB4Djf,EAyBtD,OADIO,EAxBwD0C,GAyB1EtK,aAJf,SAAmCsmB,EAAUwT,GACzC,OAAOxT,EAAS8yB,KAAKhnB,QAAQh+B,QAGyCwT,EAAI5H,aAH3B,EAGbw5C,CAA0BlzB,IACrC,SAAnB1e,EAAI5H,YAAyBsmB,EAAS8yB,KAAKL,SA1BsD,CAC7F,IAAIxlD,EAAQ8T,EAAKiyC,WAAWnpD,OAQ5B,OAPAkX,EAAK+xC,KAAKN,eAAeG,EAAOrK,UAAY,CACxClnC,MAAO,KACPpW,MAAOgZ,EAAcrK,QACrBuiB,KAAM,GAAIjvB,MAAOA,EACjB4P,MAAO81C,EAAO91C,OAElBkE,EAAKiyC,WAAW/lD,GAASilD,GACjBnxC,EAAKiyC,WAAW/lD,GACpBgmD,GAAwBlyC,EAAMA,EAAK+xC,KAAKN,eAAeG,EAAOrK,WAEjE,OAAmB,EAAfqK,EAAOvxC,MACL2C,EAEJhD,EAAKpU,QAAQmX,IAAI6uC,EAAO91C,MAAOkH,WAGtCV,GAAmBE,IAU3B,SAAS0vC,GAAwBjzB,EAAU6yB,GACvC,IAAIM,EACJ,OAA4B,UAApBN,EAAYzxC,OAChB,KAAK,IACD+xC,EAsBZ,SAAsBnzB,EAAUsP,EAAMpT,GAClC,IAAIhvB,EAAMgvB,EAAKryB,OACf,OAAQqD,GACJ,KAAK,EACD,OAAO,IAAIoiC,EACf,KAAK,EACD,OAAO,IAAIA,EAAKojB,GAAmB1yB,EAAU9D,EAAK,KACtD,KAAK,EACD,OAAO,IAAIoT,EAAKojB,GAAmB1yB,EAAU9D,EAAK,IAAKw2B,GAAmB1yB,EAAU9D,EAAK,KAC7F,KAAK,EACD,OAAO,IAAIoT,EAAKojB,GAAmB1yB,EAAU9D,EAAK,IAAKw2B,GAAmB1yB,EAAU9D,EAAK,IAAKw2B,GAAmB1yB,EAAU9D,EAAK,KACpI,QAEI,IADA,IAAIk3B,EAAY,IAAIvqD,MAAMqE,GACjBxD,EAAI,EAAGA,EAAIwD,EAAKxD,IACrB0pD,EAAU1pD,GAAKgpD,GAAmB1yB,EAAU9D,EAAKxyB,IAErD,OAAO,IAAK4lC,EAAKj/B,KAAKtG,MAAMulC,EAAMpkC,EAAS,MAAC,GAASkoD,MAtCxCC,CAAarzB,EAAU6yB,EAAY7nD,MAAO6nD,EAAY32B,MACnE,MACJ,KAAK,KACDi3B,EAsCZ,SAAsBnzB,EAAUrmB,EAASuiB,GACrC,IAAIhvB,EAAMgvB,EAAKryB,OACf,OAAQqD,GACJ,KAAK,EACD,OAAOyM,IACX,KAAK,EACD,OAAOA,EAAQ+4C,GAAmB1yB,EAAU9D,EAAK,KACrD,KAAK,EACD,OAAOviB,EAAQ+4C,GAAmB1yB,EAAU9D,EAAK,IAAKw2B,GAAmB1yB,EAAU9D,EAAK,KAC5F,KAAK,EACD,OAAOviB,EAAQ+4C,GAAmB1yB,EAAU9D,EAAK,IAAKw2B,GAAmB1yB,EAAU9D,EAAK,IAAKw2B,GAAmB1yB,EAAU9D,EAAK,KACnI,QAEI,IADA,IAAIk3B,EAAYvqD,MAAMqE,GACbxD,EAAI,EAAGA,EAAIwD,EAAKxD,IACrB0pD,EAAU1pD,GAAKgpD,GAAmB1yB,EAAU9D,EAAKxyB,IAErD,OAAOiQ,EAAQ5P,WAAM,EAAQmB,EAASkoD,KAtDzBE,CAAatzB,EAAU6yB,EAAY7nD,MAAO6nD,EAAY32B,MACnE,MACJ,KAAK,KACDi3B,EAAaT,GAAmB1yB,EAAU6yB,EAAY32B,KAAK,IAC3D,MACJ,KAAK,IACDi3B,EAAaN,EAAY7nD,MAWjC,OAJImoD,IAAejB,IAAiC,MAAdiB,GAA4C,iBAAfA,GACzC,OAApBN,EAAYzxC,OAAqE,mBAA3B+xC,EAAW3zB,cACnEqzB,EAAYzxC,OAAS,aAEH5S,IAAf2kD,EAA2BjB,GAAkBiB,EAgHxD,SAASI,GAAmBC,EAAa38B,GACrC,IAAI21B,EAAgBgH,EAAY/G,cAAcC,eAI9C,IAHiB,MAAb71B,GAAqBA,GAAa21B,EAAc3iD,UAChDgtB,EAAY21B,EAAc3iD,OAAS,GAEnCgtB,EAAY,EACZ,OAAO,KAEX,IAAI/V,EAAO0rC,EAAc31B,GAMzB,OALA/V,EAAK4oC,oBAAsB,KAC3B+J,GAAgBjH,EAAe31B,GAE/B8vB,GAASgB,mBAAmB7mC,GAC5B4yC,GAAiB5yC,GACVA,EA+BX,SAAS6yC,GAAyBH,EAAaI,EAAU9yC,GACrD,IAAI+yC,EAAiBD,EAAWzJ,GAAWyJ,EAAUA,EAAStyC,IAAImqC,oBAC9D+H,EAAYpJ,cACZj+B,EAAarL,EAAKwN,SAASnC,WAAW0nC,GACtC7S,EAAclgC,EAAKwN,SAAS0yB,YAAY6S,GAG5CrI,GAAqB1qC,EAAM,EAAsBqL,EAAY60B,OAAaxyC,GAE9E,SAASklD,GAAiB5yC,GACtB0qC,GAAqB1qC,EAAM,EAAqB,KAAM,UAAMtS,GAEhE,SAASslD,GAAWnuC,EAAK1Y,EAAOjC,GAExBiC,GAAS0Y,EAAI9b,OACb8b,EAAI5a,KAAKC,GAGT2a,EAAI5X,OAAOd,EAAO,EAAGjC,GAG7B,SAASyoD,GAAgB9tC,EAAK1Y,GAEtBA,GAAS0Y,EAAI9b,OAAS,EACtB8b,EAAI6xB,MAGJ7xB,EAAI5X,OAAOd,EAAO,GAW1B,IAAI8mD,GAAgB,IAAIrrD,OAGxB,SAASsrD,GAAuB9xB,EAAUH,EAAekyB,EAAgBp8B,EAAQC,EAASqK,GACtF,OAAO,IAAI+xB,GAAkBhyB,EAAUH,EAAekyB,EAAgBp8B,EAAQC,EAASqK,GAK3F,IAAI+xB,GAAmC,SAAUjlD,GAE7C,SAASklD,EAAkBjyB,EAAUH,EAAekyB,EAAgBG,EAASC,EAAUlyB,GACnF,IAAI/yB,EAGJH,EAAOnF,KAAKZ,OAASA,KAOrB,OANAkG,EAAM8yB,SAAWA,EACjB9yB,EAAM2yB,cAAgBA,EACtB3yB,EAAMglD,QAAUA,EAChBhlD,EAAMilD,SAAWA,EACjBjlD,EAAM+yB,mBAAqBA,EAC3B/yB,EAAM6kD,eAAiBA,EAChB7kD,EA2CX,OAvDApG,EAAUmrD,EAAmBllD,GAc7BvG,OAAO0S,eAAe+4C,EAAkB/qD,UAAW,SAAU,CACzD0a,IAAK,WACD,IAAIwwC,EAAY,GACZz8B,EAAS3uB,KAAKkrD,QAClB,IAAK,IAAI15C,KAAYmd,EAEjBy8B,EAAUvpD,KAAK,CAAE2P,SAAUA,EAAUurB,aADlBpO,EAAOnd,KAG9B,OAAO45C,GAEXtxB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAe+4C,EAAkB/qD,UAAW,UAAW,CAC1D0a,IAAK,WACD,IAAIywC,EAAa,GACjB,IAAK,IAAI75C,KAAYxR,KAAKmrD,SAEtBE,EAAWxpD,KAAK,CAAE2P,SAAUA,EAAUurB,aADnB/8B,KAAKmrD,SAAS35C,KAGrC,OAAO65C,GAEXvxB,YAAY,EACZC,cAAc,IAKlBkxB,EAAkB/qD,UAAUC,OAAS,SAAUia,EAAU8e,EAAkBC,EAAoBrC,GAC3F,IAAKA,EACD,MAAM,IAAIj0B,MAAM,+BAEpB,IAAIyoD,EAAUjJ,GAAkBriD,KAAK+qD,gBACjCQ,EAAqBD,EAAQlO,MAAM,GAAG9yB,QAAQ07B,kBAAkBjuC,UAChEH,EAAO6lC,GAASE,eAAevjC,EAAU8e,GAAoB,GAAIC,EAAoBmyB,EAASx0B,EAAU+zB,IACxGrpC,EAAY87B,GAAe1lC,EAAM2zC,GAAoBpqC,SAIzD,OAHIgY,GACAvhB,EAAKwN,SAASoL,aAAa6sB,GAAczlC,EAAM,GAAGspC,cAAe,aAAc9kB,GAAQC,MAEpF,IAAImvB,GAAc5zC,EAAM,IAAI6zC,GAAS7zC,GAAO4J,IAEhDypC,EAxD2B,CAyDpCjzB,IACEwzB,GAA+B,SAAUzlD,GAEzC,SAAS2lD,EAAcrwB,EAAOswB,EAAUC,GACpC,IAAI1lD,EAAQH,EAAOnF,KAAKZ,OAASA,KAQjC,OAPAkG,EAAMm1B,MAAQA,EACdn1B,EAAMylD,SAAWA,EACjBzlD,EAAM0lD,WAAaA,EACnB1lD,EAAM2lD,OAAS3lD,EAAMm1B,MAAMjjB,IAAIglC,MAAM,GACrCl3C,EAAMwR,SAAWi0C,EACjBzlD,EAAM45B,kBAAoB6rB,EAC1BzlD,EAAMib,SAAWyqC,EACV1lD,EAqBX,OA/BApG,EAAU4rD,EAAe3lD,GAYzBvG,OAAO0S,eAAew5C,EAAcxrD,UAAW,WAAY,CACvD0a,IAAK,WACD,OAAO,IAAI8gB,GAAW2hB,GAAcr9C,KAAKq7B,MAAOr7B,KAAK6rD,OAAO9zC,WAAWmpC,gBAE3EpnB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAew5C,EAAcxrD,UAAW,WAAY,CACvD0a,IAAK,WAAc,OAAO,IAAIkxC,GAAU9rD,KAAKq7B,MAAOr7B,KAAK6rD,SACzD/xB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAew5C,EAAcxrD,UAAW,gBAAiB,CAC5D0a,IAAK,WAAc,OAAO5a,KAAK4rD,WAAW3rD,aAC1C65B,YAAY,EACZC,cAAc,IAElB2xB,EAAcxrD,UAAU8oB,QAAU,WAAchpB,KAAK2rD,SAAS3iC,WAC9D0iC,EAAcxrD,UAAU8b,UAAY,SAAUke,GAAYl6B,KAAK2rD,SAAS3vC,UAAUke,IAC3EwxB,EAhCuB,CAiChC3zB,IACF,SAASg0B,GAAwBn0C,EAAMuvC,EAAOc,GAC1C,OAAO,IAAI+D,GAAkBp0C,EAAMuvC,EAAOc,GAE9C,IAAI+D,GAAmC,WACnC,SAAStV,EAAkBrb,EAAOwwB,EAAQI,GACtCjsD,KAAKq7B,MAAQA,EACbr7B,KAAK6rD,OAASA,EACd7rD,KAAKisD,MAAQA,EAIbjsD,KAAKwjD,eAAiB,GA4F1B,OA1FAhkD,OAAO0S,eAAewkC,EAAkBx2C,UAAW,UAAW,CAC1D0a,IAAK,WAAc,OAAO,IAAI8gB,GAAW17B,KAAKisD,MAAM/K,gBACpDpnB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAewkC,EAAkBx2C,UAAW,WAAY,CAC3D0a,IAAK,WAAc,OAAO,IAAIkxC,GAAU9rD,KAAKq7B,MAAOr7B,KAAK6rD,SACzD/xB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAewkC,EAAkBx2C,UAAW,iBAAkB,CAEjE0a,IAAK,WAGD,IAFA,IAAIhD,EAAO5X,KAAKq7B,MACZ8rB,EAAQnnD,KAAK6rD,OAAO/mD,QAChBqiD,GAASvvC,GACbuvC,EAAQnG,GAAappC,GACrBA,EAAOA,EAAK9S,OAEhB,OAAO8S,EAAO,IAAIk0C,GAAUl0C,EAAMuvC,GAAS,IAAI2E,GAAU9rD,KAAKq7B,MAAO,OAEzEvB,YAAY,EACZC,cAAc,IAElB2c,EAAkBx2C,UAAUq2B,MAAQ,WAEhC,IADA,IACS/1B,EADCR,KAAKwjD,eAAe7iD,OACX,EAAGH,GAAK,EAAGA,IAAK,CAC/B,IAAIoX,EAAOyyC,GAAmBrqD,KAAKisD,MAAOzrD,GAC1Ci9C,GAASU,YAAYvmC,KAG7B8+B,EAAkBx2C,UAAU0a,IAAM,SAAU7W,GACxC,IAAI6T,EAAO5X,KAAKwjD,eAAez/C,GAC/B,GAAI6T,EAAM,CACN,IAAIs0C,EAAM,IAAIT,GAAS7zC,GAEvB,OADAs0C,EAAIpxB,yBAAyB96B,MACtBksD,EAEX,OAAO,MAEX1sD,OAAO0S,eAAewkC,EAAkBx2C,UAAW,SAAU,CACzD0a,IAAK,WAAc,OAAO5a,KAAKwjD,eAAe7iD,QAC9Cm5B,YAAY,EACZC,cAAc,IAElB2c,EAAkBx2C,UAAUiiC,mBAAqB,SAAU+U,EAAahwC,EAASnD,GAC7E,IAAI0+B,EAAUyU,EAAY/U,mBAAmBj7B,GAAW,IAExD,OADAlH,KAAKw3C,OAAO/U,EAAS1+B,GACd0+B,GAEXiU,EAAkBx2C,UAAUm3C,gBAAkB,SAAUrC,EAAkBjxC,EAAOqW,EAAU8e,EAAkBoe,GACzG,IAAIC,EAAkBn9B,GAAYpa,KAAK+gC,eAClCuW,GAAiBtC,aAA4Blc,KAC9Cwe,EAAcC,EAAgB38B,IAAIwe,KAEtC,IAAIqG,EAAeuV,EAAiB70C,OAAOo3C,EAAiBre,OAAkB5zB,EAAWgyC,GAEzF,OADAt3C,KAAKw3C,OAAO/X,EAAa/nB,SAAU3T,GAC5B07B,GAEXiX,EAAkBx2C,UAAUs3C,OAAS,SAAU/U,EAAS1+B,GACpD,GAAI0+B,EAAQ/M,UACR,MAAM,IAAI7yB,MAAM,sDAEpB,IAnTgCynD,EAAa38B,EAAW/V,EACxD0rC,EAkTI6I,EAAW1pB,EAIf,OAtTA6gB,GADgCgH,EAqTDtqD,KAAKisD,OApTR1I,cAAcC,eAC1C71B,OAF6CA,EAqTF5pB,KAlT3C4pB,EAAY21B,EAAc3iD,SAH8BiX,EAoTzCu0C,EAAS9wB,OA/SvBmlB,oBAgTkBxgD,KAAKq7B,MA/S5BuvB,GAAWtH,EAAe31B,EAAW/V,GAMzC,SAA6Bw0C,EAAex0C,GACxC,IAAIy0C,EAAiBvL,GAAsBlpC,GAC3C,GAAKy0C,GAAkBA,IAAmBD,KACzB,GAAbx0C,EAAK0Q,OADT,CAWA1Q,EAAK0Q,OAAS,GACd,IAAIgkC,EAAiBD,EAAeh0C,SAASk0C,gBACxCD,IACDA,EAAiBD,EAAeh0C,SAASk0C,gBAAkB,IAE/DD,EAAezqD,KAAK+V,GAKxB,SAAqC0zC,EAAS5I,GAC1C,KAAoB,EAAhBA,EAAQxqC,OAAZ,CAH4BN,EAAK9S,OAAOsT,IAMhCo0C,WAAa,EACrB9J,EAAQxqC,OAAS,EAEjB,IADA,IAAI6oC,EAAgB2B,EAAQ59C,OACrBi8C,GACHA,EAAc6E,YAAc,EAC5B7E,EAAgBA,EAAcj8C,QAXlC2nD,CAA4B70C,EAAiBA,EAAKmpC,gBA1BlD2L,CAAoBpC,EAAa1yC,GACjC6lC,GAASgB,mBAAmB7mC,GAE5B6yC,GAAyBH,EADV38B,EAAY,EAAI21B,EAAc31B,EAAY,GAAK,KACd/V,GA4S5Cu0C,EAASrxB,yBAAyB96B,MAC3ByiC,GAEXiU,EAAkBx2C,UAAUu3C,KAAO,SAAUhV,EAASkqB,GAClD,GAAIlqB,EAAQ/M,UACR,MAAM,IAAI7yB,MAAM,oDAEpB,IAjPkBynD,EAAasC,EAAcC,EAC7CvJ,EACA1rC,EA+OIk1C,EAAgB9sD,KAAKwjD,eAAe5+C,QAAQ69B,EAAQpH,OAExD,OAnP6CwxB,EAkPDF,EAhP5C/0C,GADA0rC,GADkBgH,EAkPDtqD,KAAKisD,OAjPM1I,cAAcC,gBADXoJ,EAkPFE,GA/OjCvC,GAAgBjH,EAAesJ,GACX,MAAhBC,IACAA,EAAevJ,EAAc3iD,QAEjCiqD,GAAWtH,EAAeuJ,EAAcj1C,GAGxC6lC,GAASgB,mBAAmB7mC,GAC5B4yC,GAAiB5yC,GAEjB6yC,GAAyBH,EADVuC,EAAe,EAAIvJ,EAAcuJ,EAAe,GAAK,KACpBj1C,GAsOrC6qB,GAEXiU,EAAkBx2C,UAAU0E,QAAU,SAAU69B,GAC5C,OAAOziC,KAAKwjD,eAAe5+C,QAAQ69B,EAAQpH,QAE/Cqb,EAAkBx2C,UAAU+D,OAAS,SAAUF,GAC3C,IAAIomB,EAAWkgC,GAAmBrqD,KAAKisD,MAAOloD,GAC1ComB,GACAszB,GAASU,YAAYh0B,IAG7BusB,EAAkBx2C,UAAU+5B,OAAS,SAAUl2B,GAC3C,IAAI6T,EAAOyyC,GAAmBrqD,KAAKisD,MAAOloD,GAC1C,OAAO6T,EAAO,IAAI6zC,GAAS7zC,GAAQ,MAEhC8+B,EApG2B,GAsGtC,SAASqW,GAAwBn1C,GAC7B,OAAO,IAAI6zC,GAAS7zC,GAExB,IAAI6zC,GAA0B,WAC1B,SAASA,EAASpwB,GACdr7B,KAAKq7B,MAAQA,EACbr7B,KAAK05B,kBAAoB,KACzB15B,KAAKy5B,QAAU,KAmEnB,OAjEAj6B,OAAO0S,eAAeu5C,EAASvrD,UAAW,YAAa,CACnD0a,IAAK,WAAc,OAr+BvB0nC,GAq+B8CtiD,KAAKq7B,MAr+BxB,OAAiB/1B,OAAWA,EADnD0nD,EAAc,IAEXA,EAHX,IACQA,GAu+BAlzB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeu5C,EAASvrD,UAAW,UAAW,CACjD0a,IAAK,WAAc,OAAO5a,KAAKq7B,MAAMn0B,SACrC4yB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeu5C,EAASvrD,UAAW,YAAa,CACnD0a,IAAK,WAAc,OAAoD,IAAzB,IAAnB5a,KAAKq7B,MAAM/S,QACtCwR,YAAY,EACZC,cAAc,IAElB0xB,EAASvrD,UAAUm6B,aAAe,WAAcimB,GAAwBtgD,KAAKq7B,QAC7EowB,EAASvrD,UAAU+5B,OAAS,WAAcj6B,KAAKq7B,MAAM/S,QAAS,GAC9DmjC,EAASvrD,UAAUy6B,cAAgB,WAC/B,IAAIsyB,EAAKjtD,KAAKq7B,MAAMwlB,KAAKv0B,gBACrB2gC,EAAG1/B,OACH0/B,EAAG1/B,QAEP,IACIkwB,GAASQ,mBAAmBj+C,KAAKq7B,eAG7B4xB,EAAGz/B,KACHy/B,EAAGz/B,QAIfi+B,EAASvrD,UAAU06B,eAAiB,WAAc6iB,GAASS,mBAAmBl+C,KAAKq7B,QACnFowB,EAASvrD,UAAUw6B,SAAW,WAAc16B,KAAKq7B,MAAM/S,OAAS,GAChEmjC,EAASvrD,UAAU8b,UAAY,SAAUke,GAChCl6B,KAAKq7B,MAAMysB,cACZ9nD,KAAKq7B,MAAMysB,YAAc,IAE7B9nD,KAAKq7B,MAAMysB,YAAYjmD,KAAKq4B,IAEhCuxB,EAASvrD,UAAU8oB,QAAU,WACrBhpB,KAAKy5B,QACLz5B,KAAKy5B,QAAQhS,WAAWznB,MAEnBA,KAAK05B,mBACV15B,KAAK05B,kBAAkBO,OAAOj6B,KAAK05B,kBAAkB90B,QAAQ5E,OAEjEy9C,GAASU,YAAYn+C,KAAKq7B,QAE9BowB,EAASvrD,UAAU86B,iBAAmB,WAClCh7B,KAAKy5B,QAAU,KACf+wB,GAAiBxqD,KAAKq7B,OACtBoiB,GAASgB,mBAAmBz+C,KAAKq7B,QAErCowB,EAASvrD,UAAU+6B,eAAiB,SAAUC,GAC1C,GAAIl7B,KAAK05B,kBACL,MAAM,IAAI72B,MAAM,qDAEpB7C,KAAKy5B,QAAUyB,GAEnBuwB,EAASvrD,UAAU46B,yBAA2B,SAAUC,GACpD,GAAI/6B,KAAKy5B,QACL,MAAM,IAAI52B,MAAM,iEAEpB7C,KAAK05B,kBAAoBqB,GAEtB0wB,EAvEkB,GAyE7B,SAASyB,GAAmBt1C,EAAMQ,GAC9B,OAAO,IAAI+0C,GAAav1C,EAAMQ,GAElC,IAAI+0C,GAA8B,SAAUpnD,GAExC,SAAS67B,EAAawrB,EAAaxD,GAC/B,IAAI1jD,EAAQH,EAAOnF,KAAKZ,OAASA,KAGjC,OAFAkG,EAAMknD,YAAcA,EACpBlnD,EAAM0jD,KAAOA,EACN1jD,EAYX,OAjBApG,EAAU8hC,EAAc77B,GAOxB67B,EAAa1hC,UAAUiiC,mBAAqB,SAAUj7B,GAClD,OAAO,IAAIukD,GAAShO,GAAStb,mBAAmBniC,KAAKotD,YAAaptD,KAAK4pD,KAAM5pD,KAAK4pD,KAAKt/B,QAAQjS,SAAUnR,KAE7G1H,OAAO0S,eAAe0vB,EAAa1hC,UAAW,aAAc,CACxD0a,IAAK,WACD,OAAO,IAAI8gB,GAAW2hB,GAAcr9C,KAAKotD,YAAaptD,KAAK4pD,KAAK7xC,WAAWmpC,gBAE/EpnB,YAAY,EACZC,cAAc,IAEX6H,EAlBsB,CAmB/BH,IACF,SAAS4rB,GAAiBz1C,EAAMuvC,GAC5B,OAAO,IAAI2E,GAAUl0C,EAAMuvC,GAE/B,IAAI2E,GAA2B,WAC3B,SAASA,EAAUl0C,EAAMuvC,GACrBnnD,KAAK4X,KAAOA,EACZ5X,KAAKmnD,MAAQA,EAOjB,OALA2E,EAAU5rD,UAAU0a,IAAM,SAAUjH,EAAOkH,GAGvC,YAFsB,IAAlBA,IAA4BA,EAAgBiX,GAASH,oBAElD8rB,GAASW,WAAWp+C,KAAK4X,KAAM5X,KAAKmnD,QADhBnnD,KAAKmnD,OAA8D,IAAlC,SAAnBnnD,KAAKmnD,MAAMjvC,OACoB,CAAEA,MAAO,EAAcvE,MAAOA,EAAOyrC,SAAUA,GAASzrC,IAAUkH,IAEvIixC,EAVmB,GAY9B,SAASwB,GAAU11C,EAAM7T,GACrB,IAAIqU,EAAMR,EAAKQ,IAAIglC,MAAMr5C,GACzB,GAAgB,EAAZqU,EAAIF,MAA6B,CACjC,IAAI+vC,EAAS5K,GAAczlC,EAAMQ,EAAIL,WACrC,OAAOK,EAAIkS,QAAQjS,SAAW4vC,EAAO5vC,SAAW4vC,EAAO/G,cAEtD,GAAgB,EAAZ9oC,EAAIF,MACT,OAAOilC,GAAWvlC,EAAMQ,EAAIL,WAAWopC,WAEtC,GAAgB,MAAZ/oC,EAAIF,MACT,OAAOolC,GAAe1lC,EAAMQ,EAAIL,WAAWoJ,SAE/C,MAAM,IAAIte,MAAM,gDAAkDkB,GAEtE,SAASwpD,GAAiB31C,GACtB,OAAO,IAAI41C,GAAgB51C,EAAKwN,UAEpC,IAAIooC,GAAiC,WACjC,SAASC,EAAgB7hB,GACrB5rC,KAAK4rC,SAAWA,EA4FpB,OA1FA6hB,EAAgBvtD,UAAU49B,kBAAoB,SAAUspB,GACpD,OAAOpnD,KAAK4rC,SAAS9N,kBAAkBspB,IAE3CqG,EAAgBvtD,UAAU09B,cAAgB,SAAU94B,EAAQshD,GACxD,IAAIz0C,EAAKxQ,EAAOwiD,GAAeyC,GAAmB,GAC9C7Q,EAAKv1C,KAAK4rC,SAAShO,cADkDjsB,EAAG,GAAjBA,EAAG,IAK9D,OAHI7M,GACA9E,KAAK4rC,SAASpiB,YAAY1kB,EAAQywC,GAE/BA,GAEXkY,EAAgBvtD,UAAUwtD,eAAiB,SAAUnoC,GAAe,OAAOA,GAC3EkoC,EAAgBvtD,UAAUytD,qBAAuB,SAAUC,GACvD,IAAIC,EAAU7tD,KAAK4rC,SAASgM,cAAc,IAI1C,OAHIgW,GACA5tD,KAAK4rC,SAASpiB,YAAYokC,EAAeC,GAEtCA,GAEXJ,EAAgBvtD,UAAU4tD,WAAa,SAAUF,EAAe9rD,GAC5D,IAAIuhB,EAAOrjB,KAAK4rC,SAASkiB,WAAWhsD,GAIpC,OAHI8rD,GACA5tD,KAAK4rC,SAASpiB,YAAYokC,EAAevqC,GAEtCA,GAEXoqC,EAAgBvtD,UAAU6tD,aAAe,SAAUH,EAAexQ,GAC9D,IAAK,IAAI58C,EAAI,EAAGA,EAAI48C,EAAMz8C,OAAQH,IAC9BR,KAAK4rC,SAASpiB,YAAYokC,EAAexQ,EAAM58C,KAGvDitD,EAAgBvtD,UAAU8tD,gBAAkB,SAAU3qC,EAAM4qC,GAGxD,IAFA,IAAIL,EAAgB5tD,KAAK4rC,SAAS3oB,WAAWI,GACzCy0B,EAAc93C,KAAK4rC,SAASkM,YAAYz0B,GACnC7iB,EAAI,EAAGA,EAAIytD,EAActtD,OAAQH,IACtCR,KAAK4rC,SAAS3kB,aAAa2mC,EAAeK,EAAcztD,GAAIs3C,IAGpE2V,EAAgBvtD,UAAUunB,WAAa,SAAUwmC,GAC7C,IAAK,IAAIztD,EAAI,EAAGA,EAAIytD,EAActtD,OAAQH,IAAK,CAC3C,IAAI6iB,EAAO4qC,EAAcztD,GACrBotD,EAAgB5tD,KAAK4rC,SAAS3oB,WAAWI,GAC7CrjB,KAAK4rC,SAAS1kB,YAAY0mC,EAAevqC,KAGjDoqC,EAAgBvtD,UAAUi+C,YAAc,SAAU54B,EAAa2oC,GAC3D,IAAK,IAAI1tD,EAAI,EAAGA,EAAI0tD,EAAavtD,OAAQH,IACrCR,KAAK4rC,SAASzkB,YAAY+mC,EAAa1tD,KAG/CitD,EAAgBvtD,UAAU2nD,OAAS,SAAU3G,EAAe/9C,EAAM+2B,GAC9D,OAAOl6B,KAAK4rC,SAASic,OAAO3G,EAAe/9C,EAAM+2B,IAErDuzB,EAAgBvtD,UAAUiuD,aAAe,SAAU31C,EAAQrV,EAAM+2B,GAC7D,OAAOl6B,KAAK4rC,SAASic,OAAOrvC,EAAQrV,EAAM+2B,IAE9CuzB,EAAgBvtD,UAAU6oD,mBAAqB,SAAU7H,EAAekN,EAAcC,GAClFruD,KAAK4rC,SAASlb,YAAYwwB,EAAekN,EAAcC,IAE3DZ,EAAgBvtD,UAAUooD,oBAAsB,SAAUpH,EAAekF,EAAkBkI,GACvF,IAAI38C,EAAKxQ,EAAOwiD,GAAeyC,GAAmB,GAAIL,EAAKp0C,EAAG,GAAIxO,EAAOwO,EAAG,GACtD,MAAlB28C,EACAtuD,KAAK4rC,SAASpb,aAAa0wB,EAAe/9C,EAAMmrD,EAAgBvI,GAGhE/lD,KAAK4rC,SAASyc,gBAAgBnH,EAAe/9C,EAAM4iD,IAG3D0H,EAAgBvtD,UAAUquD,oBAAsB,SAAUrN,EAAekN,EAAcC,KACvFZ,EAAgBvtD,UAAUuoD,gBAAkB,SAAUvH,EAAexF,EAAW8S,GACxEA,EACAxuD,KAAK4rC,SAAS2c,SAASrH,EAAexF,GAGtC17C,KAAK4rC,SAAS4c,YAAYtH,EAAexF,IAGjD+R,EAAgBvtD,UAAU4oD,gBAAkB,SAAU5H,EAAerF,EAAW4S,GAC1D,MAAdA,EACAzuD,KAAK4rC,SAASgd,SAAS1H,EAAerF,EAAW4S,GAGjDzuD,KAAK4rC,SAASid,YAAY3H,EAAerF,IAGjD4R,EAAgBvtD,UAAUwuD,oBAAsB,SAAUxN,EAAeyN,EAAYr9C,GACjF4vC,EAAcyN,GAAY9tD,MAAMqgD,EAAe5vC,IAEnDm8C,EAAgBvtD,UAAU0uD,QAAU,SAAU1G,EAAexzB,GAAQ10B,KAAK4rC,SAASijB,SAAS3G,EAAexzB,IAC3G+4B,EAAgBvtD,UAAU4uD,QAAU,WAAc,MAAM,IAAIjsD,MAAM,6CAC3D4qD,EA9FyB,GAgGpC,SAAS5P,GAAkB/c,EAAYh8B,EAAQiqD,EAAqB32C,GAChE,OAAO,IAAI42C,GAAaluB,EAAYh8B,EAAQiqD,EAAqB32C,GAErE,IAAI42C,GAA8B,WAC9B,SAASA,EAAaC,EAAaxrD,EAAS48B,EAAsBupB,GAC9D5pD,KAAKivD,YAAcA,EACnBjvD,KAAKyD,QAAUA,EACfzD,KAAKqgC,qBAAuBA,EAC5BrgC,KAAK4pD,KAAOA,EACZ5pD,KAAK+xC,kBAAoB,GACzB/xC,KAAKgyC,YAAa,EAClBhyC,KAAKoa,SAAWpa,KA9tBxB,SAAsB6X,GAGlB,IAFA,IAAIO,EAAMP,EAAK+xC,KACX53B,EAAYna,EAAKiyC,WAAa,IAAInqD,MAAMyY,EAAI4Z,UAAUrxB,QACjDH,EAAI,EAAGA,EAAI4X,EAAI4Z,UAAUrxB,OAAQH,IAAK,CAC3C,IAAI0uD,EAAU92C,EAAI4Z,UAAUxxB,GACN,KAAhB0uD,EAAQh3C,YAEW5S,IAAjB0sB,EAAUxxB,KACVwxB,EAAUxxB,GAAKupD,GAAwBlyC,EAAMq3C,KAutBrDC,CAAanvD,MAiCjB,OA/BAgvD,EAAa9uD,UAAU0a,IAAM,SAAUjH,EAAOkH,EAAe8lB,QACnC,IAAlB9lB,IAA4BA,EAAgBiX,GAASH,yBACrC,IAAhBgP,IAA0BA,EAAc1mB,GAAYS,SACxD,IAAIxC,EAAQ,EAOZ,OANIyoB,EAAc1mB,GAAYD,SAC1B9B,GAAS,EAEJyoB,EAAc1mB,GAAYF,OAC/B7B,GAAS,GAENsxC,GAAmBxpD,KAAM,CAAE2T,MAAOA,EAAOyrC,SAAUA,GAASzrC,GAAQuE,MAAOA,GAAS2C,IAE/Frb,OAAO0S,eAAe88C,EAAa9uD,UAAW,WAAY,CACtD0a,IAAK,WAAc,OAAO5a,KAAK4a,IAAI5a,KAAKivD,cACxCn1B,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAe88C,EAAa9uD,UAAW,2BAA4B,CACtE0a,IAAK,WAAc,OAAO5a,KAAK4a,IAAI4d,KACnCsB,YAAY,EACZC,cAAc,IAElBi1B,EAAa9uD,UAAU8oB,QAAU,WAC7B,GAAIhpB,KAAKgyC,WACL,MAAM,IAAInvC,MAAM,iBAAmB6Q,GAAU1T,KAAKmhB,SAASlhB,aAAe,gCAE9ED,KAAKgyC,YAAa,EApnB1B,SAA+Blb,EAAUs4B,GAGrC,IAFA,IAAIh3C,EAAM0e,EAAS8yB,KACfl0B,EAAY,IAAID,IACXj1B,EAAI,EAAGA,EAAI4X,EAAI4Z,UAAUrxB,OAAQH,IAEtC,GAAoB,OADN4X,EAAI4Z,UAAUxxB,GAChB0X,MAAgC,CACxC,IAAIiJ,EAAW2V,EAASgzB,WAAWtpD,GACnC,GAAI2gB,GAAYA,IAAa6nC,GAAiB,CAC1C,IAAIhtC,EAAYmF,EAASmV,YACA,mBAAdta,GAA6B0Z,EAAUQ,IAAI/U,KAClDnF,EAAUnb,MAAMsgB,GAChBuU,EAAUtxB,IAAI+c,MA0mB1BkuC,CAAsBrvD,MACtBA,KAAK+xC,kBAAkBrpC,QAAQ,SAAU8a,GAAY,OAAOA,OAEhEwrC,EAAa9uD,UAAU8b,UAAY,SAAUke,GAAYl6B,KAAK+xC,kBAAkBlwC,KAAKq4B,IAC9E80B,EA1CsB,GAoD7BM,GAAqBlQ,GAASvjB,IAC9B0zB,GAAoBnQ,GAASrjB,IAC7ByzB,GAAqBpQ,GAAS1jB,IAC9B+zB,GAA2BrQ,GAAS7I,IACpCmZ,GAAsBtQ,GAAS3d,IAC/BkuB,GAA4BvQ,GAASjH,IACrCyX,GAAwBxQ,GAASttB,IACjC+9B,GAAwBzQ,GAASxtB,IACrC,SAASk+B,GAAanK,EAAYztC,EAAOwpC,EAAgBkB,EAAYxc,EAAMpT,EAAM7hB,EAAOyd,GACpF,IAAIyxB,EAAW,GACf,GAAIlvC,EACA,IAAK,IAAI8zB,KAAQ9zB,EAAO,CACpB,IAAIQ,EAAKxQ,EAAOgQ,EAAM8zB,GAAO,GAC7Bob,EADgD1uC,EAAG,IAC1B,CACrBuG,MAAO,EACP/U,KAAM8hC,EAAM4hB,gBAHyDl1C,EAAG,GAIxEo0C,GAAI,KACJY,gBAAiB,KACjBC,OAAQ,MAIpB,IAAIE,EAAa,GACjB,GAAIl4B,EACA,IAAK,IAAIpd,KAAYod,EACjBk4B,EAAWjlD,KAAK,CAAE8O,KAAM,EAAyBa,SAAUA,EAAUgH,OAAQ,KAAM2hC,UAAWvrB,EAAQpd,KAI9G,OAAOo4C,GAAKjE,EADZztC,GAAS,MACsBwpC,EAAgBkB,EAAYxc,EAAMA,EAAMpT,EAAMqtB,EAAUyG,GAE3F,SAASiJ,GAAQ73C,EAAOkuB,EAAMpT,GAE1B,OAAO42B,IAAM,EADb1xC,GAAS,GACc,KAAM,EAAGkuB,EAAMA,EAAMpT,GAEhD,SAAS22B,GAAYzxC,EAAOwpC,EAAgB/tC,EAAO7R,EAAOkxB,GACtD,OAAO42B,IAAM,EAAG1xC,EAAOwpC,EAAgB,EAAG/tC,EAAO7R,EAAOkxB,GAE5D,SAAS42B,GAAKjE,EAAYztC,EAAOupC,EAAmBmB,EAAYjvC,EAAO7R,EAAOkxB,EAAMqtB,EAAUzxB,GAC1F,IAAIjd,EAAK6vC,GAAuBC,GAAoBC,EAAiB/vC,EAAG+vC,eAAgB3I,EAAapnC,EAAGonC,WAAY4I,EAAkBhwC,EAAGgwC,gBACpI/yB,IACDA,EAAU,IAETyxB,IACDA,EAAW,IAKfv+C,EAAQqS,GAAkBrS,GAC1B,IAAIkuD,EAAUnO,GAAa7uB,EAAMtf,GAAUC,IAC3C,MAAO,CAEHoE,WAAY,EACZjT,OAAQ,KACRyhB,aAAc,KACdm5B,cAAe,EACfgG,aAAc,EAEdC,WAAYA,EACZztC,MAAOA,EACP0tC,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EAAGpE,eAAgBA,EAAgBC,gBAAiBA,EAAiB5I,WAAYA,EACtG+J,gBAAiB,EAAGF,WAAYA,EAAYvC,SAAUA,EACtDgD,aAAcQ,GAAiBxD,GAAWzxB,QAASA,EACnDtE,QAAS,KACT6I,SAAU,CAAExf,MAAOA,EAAO7R,MAAOA,EAAOkxB,KAAMg9B,GAC9Ct7B,KAAM,KACNilB,MAAO,KACPwJ,UAAW,MAGnB,SAAS8M,GAAuBr4C,EAAMQ,GAClC,OAAO83C,GAA0Bt4C,EAAMQ,GAE3C,SAAS+3C,GAAmBv4C,EAAMQ,GAG9B,IADA,IAAI2qC,EAAWnrC,EACRmrC,EAASj+C,SAAWs8C,GAAgB2B,IACvCA,EAAWA,EAASj+C,OAKxB,OAAOsrD,GAAYrN,EAASj+C,OAAQk8C,GAAa+B,IAFtB,EAEuD3qC,EAAI+a,SAASrxB,MAAOsW,EAAI+a,SAASH,MAEvH,SAASq9B,GAAwBz4C,EAAMQ,GAEnC,IA3qKkBzM,EA6qKdwV,EAAWivC,GAAYx4C,EAAMQ,EAAItT,QAFG,MAAZsT,EAAIF,OAAiC,EAEEE,EAAI+a,SAASrxB,MAAOsW,EAAI+a,SAASH,MACpG,GAAI5a,EAAIwW,QAAQjuB,OACZ,IAAK,IAAIH,EAAI,EAAGA,EAAI4X,EAAIwW,QAAQjuB,OAAQH,IAAK,CACzC,IAAI+mD,EAASnvC,EAAIwW,QAAQpuB,GACrB8vD,EAAmBnvC,EAASomC,EAAO/1C,UACvC,KAlrKU7F,EAkrKO2kD,IA/qKgB,mBAAlB3kD,EAAI/D,UAorKf,MAAM,IAAI/E,MAAM,WAAa0kD,EAAO/1C,SAAW,wBAA0B2P,EAASlhB,YAAYkD,KAAO,MAJrG,IAAIoB,EAAe+rD,EAAiB1oD,UAAU2oD,GAAoB34C,EAAMQ,EAAItT,OAAOiT,UAAWwvC,EAAOpN,YACrGviC,EAAKkwC,YAAY1vC,EAAIstC,YAAcllD,GAAK+D,EAAahB,YAAY4D,KAAK5C,GAOlF,OAAO4c,EAEX,SAASovC,GAAoB34C,EAAM7T,EAAOo2C,GACtC,OAAO,SAAUyG,GAAS,OAAOD,GAAc/oC,EAAM7T,EAAOo2C,EAAWyG,IAmF3E,SAASsP,GAA0Bt4C,EAAMQ,GAErC,IAAIo4C,GAAoC,KAAZp4C,EAAIF,OAAsC,EAClEyxC,EAAcvxC,EAAI+a,SACtB,OAAoB,UAAZ/a,EAAIF,OACR,KAAK,IACD,OAAOk4C,GAAYx4C,EAAMQ,EAAItT,OAAQ0rD,EAAsB7G,EAAY7nD,MAAO6nD,EAAY32B,MAC9F,KAAK,KACD,OA0BZ,SAAqBpb,EAAMuvC,EAAOqJ,EAAsB//C,EAASuiB,GAC7D,IAAIhvB,EAAMgvB,EAAKryB,OACf,OAAQqD,GACJ,KAAK,EACD,OAAOyM,IACX,KAAK,EACD,OAAOA,EAAQ2tC,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAK,KACtE,KAAK,EACD,OAAOviB,EAAQ2tC,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAK,IAAKorB,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAK,KAC9H,KAAK,EACD,OAAOviB,EAAQ2tC,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAK,IAAKorB,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAK,IAAKorB,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAK,KACtL,QAEI,IADA,IAAIk3B,EAAYvqD,MAAMqE,GACbxD,EAAI,EAAGA,EAAIwD,EAAKxD,IACrB0pD,EAAU1pD,GAAK49C,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAKxyB,IAEtE,OAAOiQ,EAAQ5P,WAAM,EAAQmB,EAASkoD,KA1C/BuG,CAAY74C,EAAMQ,EAAItT,OAAQ0rD,EAAsB7G,EAAY7nD,MAAO6nD,EAAY32B,MAC9F,KAAK,KACD,OAAOorB,GAAWxmC,EAAMQ,EAAItT,OAAQ0rD,EAAsB7G,EAAY32B,KAAK,IAC/E,KAAK,IACD,OAAO22B,EAAY7nD,OAG/B,SAASsuD,GAAYx4C,EAAMuvC,EAAOqJ,EAAsBpqB,EAAMpT,GAC1D,IAAIhvB,EAAMgvB,EAAKryB,OACf,OAAQqD,GACJ,KAAK,EACD,OAAO,IAAIoiC,EACf,KAAK,EACD,OAAO,IAAIA,EAAKgY,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAK,KACvE,KAAK,EACD,OAAO,IAAIoT,EAAKgY,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAK,IAAKorB,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAK,KAC/H,KAAK,EACD,OAAO,IAAIoT,EAAKgY,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAK,IAAKorB,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAK,IAAKorB,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAK,KACvL,QAEI,IADA,IAAIk3B,EAAY,IAAIvqD,MAAMqE,GACjBxD,EAAI,EAAGA,EAAIwD,EAAKxD,IACrB0pD,EAAU1pD,GAAK49C,GAAWxmC,EAAMuvC,EAAOqJ,EAAsBx9B,EAAKxyB,IAEtE,OAAO,IAAK4lC,EAAKj/B,KAAKtG,MAAMulC,EAAMpkC,EAAS,MAAC,GAASkoD,MAuCjE,IAAIwG,GAA0C,GAC9C,SAAStS,GAAWxmC,EAAMuvC,EAAOqJ,EAAsB/G,EAAQ5uC,GAE3D,QADsB,IAAlBA,IAA4BA,EAAgBiX,GAASH,oBACtC,EAAf83B,EAAOvxC,MACP,OAAOuxC,EAAO91C,MAElB,IAAIuF,EAAYtB,EACG,EAAf6xC,EAAOvxC,QACP2C,EAAgB,MAEpB,IAAI81C,EAAclH,EAAOrK,SACrBuR,IAAgBhB,KAGhBa,KAA0BrJ,IAASA,EAAM78B,QAAQxD,gBAEjDqgC,GAAyB,EAAfsC,EAAOvxC,QACjBs4C,GAAuB,EACvBrJ,EAAQA,EAAMriD,QAGlB,IADA,IAAI8rD,EAAah5C,EACVg5C,GAAY,CACf,GAAIzJ,EACA,OAAQwJ,GACJ,KAAKrB,GAED,OAAO/B,GADQsD,GAAaD,EAAYzJ,EAAOqJ,IAGnD,KAAKjB,GAED,OADesB,GAAaD,EAAYzJ,EAAOqJ,GAC/BprC,SAEpB,KAAKoqC,GACD,OAAO,IAAI9zB,GAAW2hB,GAAcuT,EAAYzJ,EAAMpvC,WAAWmpC,eACrE,KAAKuO,GACD,OAAOpS,GAAcuT,EAAYzJ,EAAMpvC,WAAWwrC,cACtD,KAAKmM,GACD,GAAIvI,EAAM78B,QAAQjS,SACd,OAAOglC,GAAcuT,EAAYzJ,EAAMpvC,WAAWM,SAEtD,MAEJ,KAAKs3C,GAED,OAAO5C,GADM8D,GAAaD,EAAYzJ,EAAOqJ,IAGjD,KAAKZ,GACL,KAAKC,GACD,OAAOxC,GAAiBuD,EAAYzJ,GACxC,QACI,IAAI2J,GAAiBN,EAAuBrJ,EAAM78B,QAAQ47B,aACtDiB,EAAM78B,QAAQ27B,iBAAiB0K,GACnC,GAAIG,EAAe,CACf,IAAIC,EAAezT,GAAesT,EAAYE,EAAc/4C,WAK5D,OAJKg5C,IACDA,EAAe,CAAE5vC,SAAU+uC,GAA0BU,EAAYE,IACjEF,EAAWxT,MAAM0T,EAAc/4C,WAAag5C,GAEzCA,EAAa5vC,UAIpCqvC,EAAuBpP,GAAgBwP,GACvCzJ,EAAQnG,GAAa4P,GACrBA,EAAaA,EAAW9rD,OACL,EAAf2kD,EAAOvxC,QACP04C,EAAa,MAGrB,IAAI9uD,EAAQoX,EAAU2nC,KAAKzmC,SAASQ,IAAI6uC,EAAO91C,MAAO+8C,IACtD,OAAI5uD,IAAU4uD,IACV71C,IAAkB61C,GAMX5uD,EAEJoX,EAAU2nC,KAAK/pB,SAAS1c,SAASQ,IAAI6uC,EAAO91C,MAAOkH,GAE9D,SAASg2C,GAAaj5C,EAAMuvC,EAAOqJ,GAC/B,IAAIzN,EACJ,GAAIyN,EACAzN,EAAW1F,GAAczlC,EAAMuvC,EAAMpvC,WAAW+O,mBAIhD,IADAi8B,EAAWnrC,EACJmrC,EAASj+C,SAAWs8C,GAAgB2B,IACvCA,EAAWA,EAASj+C,OAG5B,OAAOi+C,EAEX,SAASiO,GAAWp5C,EAAMm5C,EAAc34C,EAAKonC,EAAY19C,EAAO8zC,GAC5D,GAAgB,MAAZx9B,EAAIF,MAA+B,CACnC,IAAI6qC,EAAW1F,GAAczlC,EAAMQ,EAAItT,OAAOiT,WAAW+O,cAChC,EAArBi8B,EAAS3qC,IAAIF,QACb6qC,EAASz6B,OAAS,GAS1B,GADAyoC,EAAa5vC,SALC/I,EAAIioC,SAASb,GACJr8C,MAIWrB,EAClB,OAAZsW,EAAIF,MAAgC,CACpC09B,EAAUA,GAAW,GACrB,IAAI53B,EAAWuG,GAAaG,OAAO9M,EAAK+nC,UAAUvnC,EAAIsnC,aAAeF,IAErE5J,EADgBx9B,EAAIioC,SAASb,GACXqH,iBACd,IAAIjiC,GAAa5G,EAAUlc,EAA6C,IAAxB,EAAb8V,EAAK0Q,QAGhD,OADA1Q,EAAK+nC,UAAUvnC,EAAIsnC,aAAeF,GAAc19C,EACzC8zC,EA6CX,SAASqb,GAAgCr5C,EAAMw3C,GAC3C,GAAMx3C,EAAKQ,IAAIo0C,UAAY4C,EAK3B,IAFA,IAAIhS,EAAQxlC,EAAKQ,IAAIglC,MACjBH,EAAY,EACPz8C,EAAI,EAAGA,EAAI48C,EAAMz8C,OAAQH,IAAK,CACnC,IAAIkiD,EAAUtF,EAAM58C,GAChBwiB,EAAW0/B,EAAQ59C,OASvB,KARKke,GAAY0/B,EAAQxqC,MAAQk3C,GAE7B8B,GAAuBt5C,EAAMpX,EAAGkiD,EAAQxqC,MAAQk3C,EAAYnS,KAEtB,IAArCyF,EAAQkD,WAAawJ,KAEtB5uD,GAAKkiD,EAAQE,YAEV5/B,GAA8B,EAAjBA,EAAS9K,OACzB1X,IAAMwiB,EAASjL,UAAYiL,EAAS4/B,YAEhC5/B,EAAS6iC,iBAAmBuJ,IAC5BnS,EAAYkU,GAA+Bv5C,EAAMoL,EAAUosC,EAAYnS,IAE3Ej6B,EAAWA,EAASle,QAIhC,SAASqsD,GAA+Bv5C,EAAMuvC,EAAOiI,EAAYnS,GAC7D,IAAK,IAAIz8C,EAAI2mD,EAAMpvC,UAAY,EAAGvX,GAAK2mD,EAAMpvC,UAAYovC,EAAMvE,WAAYpiD,IAAK,CAC5E,IAAIkiD,EAAU9qC,EAAKQ,IAAIglC,MAAM58C,GACzBkiD,EAAQxqC,MAAQk3C,GAChB8B,GAAuBt5C,EAAMpX,EAAGkiD,EAAQxqC,MAAQk3C,EAAYnS,KAGhEz8C,GAAKkiD,EAAQE,WAEjB,OAAO3F,EAEX,SAASiU,GAAuBt5C,EAAM7T,EAAOqrD,EAAYnS,GACrD,IAAI8T,EAAezT,GAAe1lC,EAAM7T,GACxC,GAAKgtD,EAAL,CAGA,IAAI59B,EAAW49B,EAAa5vC,SACvBgS,IAGLsqB,GAASC,eAAe9lC,EAAM7T,GACb,QAAbqrD,GACAlS,GAA4BtlC,EAAM,IAA6CqlC,IAC/E9pB,EAASi+B,qBAEI,QAAbhC,GACAj8B,EAASk+B,wBAEI,QAAbjC,GACAlS,GAA4BtlC,EAAM,IAA0CqlC,IAC5E9pB,EAASm+B,kBAEI,QAAblC,GACAj8B,EAASo+B,qBAEI,OAAbnC,GACAj8B,EAASmD,gBAWjB,SAASk7B,GAASt5C,EAAOiW,EAAIkyB,GACzB,IAAIiG,EAAc,GAClB,IAAK,IAAI90C,KAAY6uC,EAEjBiG,EAAYzkD,KAAK,CAAE2P,SAAUA,EAAUigD,YADrBpR,EAAS7uC,KAG/B,MAAO,CAEHuG,WAAY,EACZjT,OAAQ,KACRyhB,aAAc,KACdm5B,cAAe,EACfgG,aAAc,EAGdC,YAAa,EAAGztC,MAAOA,EACvB0tC,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EACrBhD,gBAAiB,EACjBpB,eAAgB,GAChBC,gBAAiB,EACjB5I,WAAY,GACZ6J,WAAY,EACZvC,SAAU,GACVgD,aAAc,EACdz0B,QAAS,GACTtE,QAAS,KACT6I,SAAU,KACVuB,KAAM,KACNilB,MAAO,CAAExrB,GAAIA,EAAIujC,SAAUpQ,GAAcnzB,GAAKkyB,SAAUiG,GACxDnD,UAAW,MAMnB,SAAS1E,GAAmB7mC,GAExB,IADA,IAAI+5C,EAAW/5C,EAAKQ,IAAIw5C,mBACjBh6C,EAAK9S,QAAUu8C,GAAezpC,IAAO,CACxC,IAAIi6C,EAASj6C,EAAKmpC,cAClBnpC,EAAOA,EAAK9S,OAGZ,IADA,IAAI0oB,EAAMqkC,EAAO95C,UAAY85C,EAAOjP,WAC3BpiD,EAAI,EAAGA,GAAKgtB,EAAKhtB,IAED,UADjBkiD,EAAU9qC,EAAKQ,IAAIglC,MAAM58C,IAChB0X,OACQ,UAAhBwqC,EAAQxqC,QACRwqC,EAAQ/I,MAAM+X,SAAWC,KAAcjP,EAAQ/I,MAAM+X,UACtDlU,GAAY5lC,EAAMpX,GAAG81C,aAEJ,EAAhBoM,EAAQxqC,OAA+B1X,EAAIkiD,EAAQE,WAAaiP,EAAO95C,YACjD,SAArB2qC,EAAQkD,YACa,UAArBlD,EAAQkD,aAEVplD,GAAKkiD,EAAQE,YAKzB,GAAyB,UAArBhrC,EAAKQ,IAAIo0C,UACT,IAAShsD,EAAI,EAAGA,EAAIoX,EAAKQ,IAAIglC,MAAMz8C,OAAQH,IAAK,CAC5C,IAAIkiD,EACiB,WADjBA,EAAU9qC,EAAKQ,IAAIglC,MAAM58C,IAChB0X,OAA2D,UAAhBwqC,EAAQxqC,OAC5DslC,GAAY5lC,EAAMpX,GAAG81C,WAGzB91C,GAAKkiD,EAAQE,YAIzB,SAASkP,GAAoBl6C,EAAM8qC,GAC/B,IAAIqP,EAAYvU,GAAY5lC,EAAM8qC,EAAQ3qC,WAC1C,GAAKg6C,EAAUrc,MAAf,CAGA,IAAIlzB,EACAwvC,OAAY1sD,EAChB,GAAoB,SAAhBo9C,EAAQxqC,MAAyC,CACjD,IAAIiuC,EAAazD,EAAQ59C,OAAOA,OAChCktD,EAAYC,GAAgBr6C,EAAMuuC,EAAWpuC,UAAWouC,EAAWpuC,UAAYouC,EAAWvD,WAAYF,EAAQ/I,MAAO,IACrHn3B,EAAoB86B,GAAe1lC,EAAM8qC,EAAQ59C,OAAOiT,WAAWoJ,cAE9C,UAAhBuhC,EAAQxqC,QACb85C,EAAYC,GAAgBr6C,EAAM,EAAGA,EAAKQ,IAAIglC,MAAMz8C,OAAS,EAAG+hD,EAAQ/I,MAAO,IAC/En3B,EAAoB5K,EAAK4J,WAE7BuwC,EAAU/b,MAAMgc,GAGhB,IAFA,IAAI3R,EAAWqC,EAAQ/I,MAAM0G,SACzB6R,GAAS,EACJ1xD,EAAI,EAAGA,EAAI6/C,EAAS1/C,OAAQH,IAAK,CACtC,IAAIwnD,EAAU3H,EAAS7/C,GACnB2xD,OAAa,EACjB,OAAQnK,EAAQyJ,aACZ,KAAK,EACDU,EAAaJ,EAAU3b,MACvB,MACJ,KAAK,EACD+b,EAAaJ,EACbG,GAAS,EAGjB1vC,EAAkBwlC,EAAQx2C,UAAY2gD,EAEtCD,GACAH,EAAU1b,mBAGlB,SAAS4b,GAAgBr6C,EAAM6qC,EAAYjjC,EAAUgyC,EAAUjgD,GAC3D,IAAK,IAAI/Q,EAAIiiD,EAAYjiD,GAAKgf,EAAUhf,IAAK,CACzC,IAAIkiD,EAAU9qC,EAAKQ,IAAIglC,MAAM58C,GACzBohD,EAAYc,EAAQhB,eAAe8P,EAASrjC,IAIhD,GAHiB,MAAbyzB,GACArwC,EAAO1P,KAAKuwD,GAAcx6C,EAAM8qC,EAASd,IAEzB,EAAhBc,EAAQxqC,OAA+BwqC,EAAQp4B,QAAQjS,WACtDqqC,EAAQp4B,QAAQjS,SAASu5C,mBAAqBJ,EAASE,YACpDF,EAASE,SAAU,CACvB,IAAIpH,EAAcjN,GAAczlC,EAAMpX,GAOtC,IAJKkiD,EAAQoD,oBAAsB0L,EAASE,YAAcF,EAASE,WAC/DO,GAAgBr6C,EAAMpX,EAAI,EAAGA,EAAIkiD,EAAQE,WAAY4O,EAAUjgD,GAC/D/Q,GAAKkiD,EAAQE,YAEG,SAAhBF,EAAQxqC,MAER,IADA,IAAIorC,EAAgBgH,EAAY/G,cAAcC,eACrCC,EAAI,EAAGA,EAAIH,EAAc3iD,OAAQ8iD,IAAK,CAC3C,IAAI39B,EAAew9B,EAAcG,GAC7B4O,EAAMvR,GAAsBh7B,GAC5BusC,GAAOA,IAAQ/H,GACf2H,GAAgBnsC,EAAc,EAAGA,EAAa1N,IAAIglC,MAAMz8C,OAAS,EAAG6wD,EAAUjgD,GAI1F,IAAI+6C,EAAiBhC,EAAYjyC,SAASk0C,gBAC1C,GAAID,EACA,IAAS7I,EAAI,EAAGA,EAAI6I,EAAe3rD,OAAQ8iD,IAAK,CAC5C,IAAI6O,EAAgBhG,EAAe7I,GACnCwO,GAAgBK,EAAe,EAAGA,EAAcl6C,IAAIglC,MAAMz8C,OAAS,EAAG6wD,EAAUjgD,KAIvFmxC,EAAQoD,oBAAsB0L,EAASE,YAAcF,EAASE,WAE/DlxD,GAAKkiD,EAAQE,YAGrB,OAAOrxC,EAEX,SAAS6gD,GAAcx6C,EAAM8qC,EAAS6P,GAClC,GAAsB,MAAlBA,EAEA,OAAQA,GACJ,KAAK,EACD,OAAOlV,GAAczlC,EAAM8qC,EAAQ3qC,WAAWmpC,cAClD,KAAK,EACD,OAAO,IAAIxlB,GAAW2hB,GAAczlC,EAAM8qC,EAAQ3qC,WAAWmpC,eACjE,KAAK,EACD,OAAO7D,GAAczlC,EAAM8qC,EAAQ3qC,WAAWM,SAClD,KAAK,EACD,OAAOglC,GAAczlC,EAAM8qC,EAAQ3qC,WAAWwrC,cAClD,KAAK,EACD,OAAOjG,GAAe1lC,EAAM8qC,EAAQ3qC,WAAWoJ,UAY/D,SAASqxC,GAAa1P,EAAgB/+C,GAClC,MAAO,CAEHgU,WAAY,EACZjT,OAAQ,KACRyhB,aAAc,KACdm5B,cAAe,EACfgG,aAAc,EAEdC,YAAa,EACbztC,MAAO,EACP0tC,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EACrBpE,eAAgB,GAChBC,gBAAiB,EACjB5I,WAAY,GAAI+J,eAAgBA,EAChCF,WAAY,EACZvC,SAAU,GACVgD,aAAc,EACdz0B,QAAS,GACTtE,QAAS,KACT6I,SAAU,KACVuB,KAAM,KACNilB,MAAO,KACPwJ,UAAW,CAAEp/C,MAAOA,IAG5B,SAAS0uD,GAAgB76C,EAAMoqC,EAAY5pC,GACvC,IAAIuR,EAAWo4B,GAAuBnqC,EAAMoqC,EAAY5pC,GACnDuR,GAKLk5B,GAA0BjrC,EADLQ,EAAI+qC,UAAUp/C,MACa,EAAqB4lB,EAAU,UAAMrkB,GAUzF,SAASotD,GAAY/M,EAAYgN,GAE7B,OAAOC,GAAmB,IAAwBjN,EAAY,IAAIhmD,MAAMgzD,EAAW,IAEvF,SAASE,GAAalN,EAAYgN,GAC9B,OAAOC,GAAmB,GAAwBjN,EAAY,IAAIhmD,MAAMgzD,IAE5E,SAASG,GAAcnN,EAAYoN,GAI/B,IAHA,IAAI9/C,EAAOzT,OAAOyT,KAAK8/C,GACnBC,EAAS//C,EAAKtS,OACdsyD,EAAgB,IAAItzD,MAAMqzD,GACrBxyD,EAAI,EAAGA,EAAIwyD,EAAQxyD,IAAK,CAC7B,IAAI+O,EAAM0D,EAAKzS,GAEfyyD,EADYF,EAAYxjD,IACDA,EAE3B,OAAOqjD,GAAmB,GAAyBjN,EAAYsN,GAEnE,SAASL,GAAmB16C,EAAOytC,EAAYsN,GAE3C,IADA,IAAI5S,EAAW,IAAI1gD,MAAMszD,EAActyD,QAC9BH,EAAI,EAAGA,EAAIyyD,EAActyD,OAAQH,IAAK,CAC3C,IAAIykC,EAAOguB,EAAczyD,GACzB6/C,EAAS7/C,GAAK,CACV0X,MAAO,EACP/U,KAAM8hC,EACN8gB,GAAI,KACJc,gBAAiB5hB,EACjB0hB,gBAAiB,KACjBC,OAAQ,MAGhB,MAAO,CAEH7uC,WAAY,EACZjT,OAAQ,KACRyhB,aAAc,KACdm5B,cAAe,EACfgG,aAAc,EAEdC,WAAYA,EACZztC,MAAOA,EACP0tC,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EACrBpE,eAAgB,GAChBC,gBAAiB,EACjB5I,WAAY,GACZ+J,gBAAiB,EACjBF,WAAY,EAAGvC,SAAUA,EACzBgD,aAAcQ,GAAiBxD,GAC/BzxB,QAAS,GACTtE,QAAS,KACT6I,SAAU,KACVuB,KAAM,KACNilB,MAAO,KACPwJ,UAAW,MAiKnB,SAAS+P,GAAQvN,EAAY7C,EAAgBqQ,GAEzC,IADA,IAAI9S,EAAW,IAAI1gD,MAAMwzD,EAAWxyD,OAAS,GACpCH,EAAI,EAAGA,EAAI2yD,EAAWxyD,OAAQH,IACnC6/C,EAAS7/C,EAAI,GAAK,CACd0X,MAAO,EACP/U,KAAM,KACN4iD,GAAI,KACJc,gBAAiB,KACjBF,gBAAiB,KACjBC,OAAQuM,EAAW3yD,IAG3B,MAAO,CAEHuX,WAAY,EACZjT,OAAQ,KACRyhB,aAAc,KACdm5B,cAAe,EACfgG,aAAc,EAEdC,WAAYA,EACZztC,MAAO,EACP0tC,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EACrBpE,eAAgB,GAChBC,gBAAiB,EACjB5I,WAAY,GAAI+J,eAAgBA,EAChCF,WAAY,EAAGvC,SAAUA,EACzBgD,aAAc,EACdz0B,QAAS,GACTtE,QAAS,KACT6I,SAAU,KACVuB,KAAM,CAAE0+B,OAAQD,EAAW,IAC3BxZ,MAAO,KACPwJ,UAAW,MAGnB,SAAS2K,GAAWl2C,EAAMoqC,EAAY5pC,GAClC,IAAI8vC,EACA9iC,EAAWxN,EAAKwN,SACpB8iC,EAAgB9iC,EAAS0oC,WAAW11C,EAAIsc,KAAK0+B,QAC7C,IAAIzpC,EAAWo4B,GAAuBnqC,EAAMoqC,EAAY5pC,GAIxD,OAHIuR,GACAvE,EAASoE,YAAYG,EAAUu+B,GAE5B,CAAE/G,WAAY+G,GA0EzB,SAASmL,GAAsBvxD,EAAOkmD,GAElC,OADwB,MAATlmD,EAAgBA,EAAMmB,WAAa,IAChC+kD,EAAQpB,OAU9B,SAAS0E,GAAQpzC,EAAOklC,EAAOmB,EAAkBC,GAY7C,IAVA,IAAI8U,EAAmB,EACnBC,EAAsB,EACtBC,EAAgB,EAChBC,EAAoB,EACpBC,EAAqB,EACrBC,EAAgB,KAChBC,EAAsB,KACtBC,GAAmC,EACnCC,GAAoC,EACpCvR,EAAqB,KAChB/hD,EAAI,EAAGA,EAAI48C,EAAMz8C,OAAQH,IAAK,CACnC,IAAI6iB,EAAO+5B,EAAM58C,GAQjB,GAPA6iB,EAAKtL,UAAYvX,EACjB6iB,EAAKve,OAAS6uD,EACdtwC,EAAKq8B,aAAe4T,EACpBjwC,EAAKqiC,YAAc6N,EACnBlwC,EAAKkD,aAAeqtC,EACpBJ,GAAiBnwC,EAAKnL,MACtBw7C,GAAsBrwC,EAAKs+B,gBACvBt+B,EAAKiH,QAAS,CACd,IAAI68B,EAAQ9jC,EAAKiH,QACjB68B,EAAMlB,gBACF0N,EAAgBA,EAAcrpC,QAAQ27B,gBAAkBzmD,OAAOW,OAAO,MAC1EgnD,EAAMjB,aAAeiB,EAAMlB,gBAE3B4N,GAAmC,EACnCC,GAAoC,EAChCzwC,EAAKiH,QAAQjS,WACbq7C,GAAsBrwC,EAAKiH,QAAQjS,SAASu5C,oBASpD,GANAmC,GAAaJ,EAAetwC,EAAM+5B,EAAMz8C,QACxC2yD,GAAoBjwC,EAAKg9B,SAAS1/C,OAClC4yD,GAAuBlwC,EAAKuL,QAAQjuB,QAC/BizD,GAAqC,EAAbvwC,EAAKnL,QAC9BqqC,EAAqBl/B,GAER,MAAbA,EAAKnL,MAAiC,CACjC27C,IACDA,GAAmC,EAEnCF,EAAcrpC,QAAQ27B,gBAClBzmD,OAAOW,OAAOwzD,EAAcrpC,QAAQ27B,iBACxC0N,EAAcrpC,QAAQ47B,aAAeyN,EAAcrpC,QAAQ27B,iBAE/D,IACIhuC,EAAuD,IAA3B,MAAboL,EAAKnL,OAD6C,IAAhC,KAAbmL,EAAKnL,QAEJD,EACrB07C,EAAcrpC,QAAQ27B,gBAAgB7G,GAAS/7B,EAAK8P,SAASxf,QAAU0P,GAGlEywC,IACDA,GAAoC,EAEpCH,EAAcrpC,QAAQ47B,aAClB1mD,OAAOW,OAAOwzD,EAAcrpC,QAAQ27B,kBAE5C0N,EAAcrpC,QAAQ47B,aAAa9G,GAAS/7B,EAAK8P,SAASxf,QAAU0P,GAEpEpL,IACA07C,EAAcrpC,QAAQ07B,kBAAoB3iC,GAclD,GAXIswC,GACAA,EAAc/N,YAAcviC,EAAKnL,MACjCy7C,EAAc9N,kBAAoBxiC,EAAKnL,MACvCy7C,EAAc7N,qBAAuBziC,EAAKs+B,gBACtCt+B,EAAKiH,SAAWjH,EAAKiH,QAAQjS,WAC7Bs7C,EAAc7N,qBAAuBziC,EAAKiH,QAAQjS,SAASu5C,qBAI/D6B,GAAqBpwC,EAAKnL,MAE1BmL,EAAKu/B,WAAa,EAClB+Q,EAAgBtwC,EACX2wC,GAAc3wC,KACfuwC,EAAsBvwC,QAS1B,KAAOswC,GAAiBnzD,IAAMmzD,EAAc57C,UAAY47C,EAAc/Q,YAAY,CAC9E,IAAIqR,EAAYN,EAAc7uD,OAC1BmvD,IACAA,EAAUrO,YAAc+N,EAAc/N,WACtCqO,EAAUnO,qBAAuB6N,EAAc7N,qBAK/C8N,GAHJD,EAAgBM,IAEKD,GAAcL,GACTA,EAAcptC,aAGdotC,GAQtC,MAAO,CAEHljD,QAAS,KACT+7C,UAAWgH,EACXU,cAAeT,EACf7B,mBAAoB8B,EAAoBx7C,MAAOA,EAC/CklC,MAAOA,EACPmB,iBAAkBA,GAAoBW,GACtCV,eAAgBA,GAAkBU,GAAMZ,YAX1B,SAAU1mC,EAAMG,EAAWoiC,EAAWyG,GACpD,OAAOxD,EAAMrlC,GAAWuS,QAAQg0B,YAAY1mC,EAAMuiC,EAAWyG,IAW7DuT,aAAcb,EACdc,YAAab,EAAqBhR,mBAAoBA,GAG9D,SAASyR,GAAc3wC,GACnB,OAA8C,IAAzB,EAAbA,EAAKnL,QAA4D,OAAtBmL,EAAKiH,QAAQnnB,KAEpE,SAAS4wD,GAAajvD,EAAQue,EAAMgxC,GAChC,IAAIh8C,EAAWgL,EAAKiH,SAAWjH,EAAKiH,QAAQjS,SAC5C,GAAIA,EAAU,CACV,IAAKA,EAASkqC,mBACV,MAAM,IAAI1/C,MAAM,oEAEpB,GAAIwV,EAASkqC,oBAC2B,SAApClqC,EAASkqC,mBAAmBrqC,MAC5B,MAAM,IAAIrV,MAAM,mFAAqFwgB,EAAKtL,UAAY,KAG9H,GAAiB,MAAbsL,EAAKnL,OAEuC,IAAzB,GADDpT,EAASA,EAAOoT,MAAQ,IAEtC,MAAM,IAAIrV,MAAM,sGAAwGwgB,EAAKtL,UAAY,KAGjJ,GAAIsL,EAAKs2B,MAAO,CACZ,GAAiB,SAAbt2B,EAAKnL,SACHpT,GAAyD,IAA/B,MAAfA,EAAOoT,QACpB,MAAM,IAAIrV,MAAM,kFAAoFwgB,EAAKtL,UAAY,KAEzH,GAAiB,UAAbsL,EAAKnL,OAAyCpT,EAC9C,MAAM,IAAIjC,MAAM,wEAA0EwgB,EAAKtL,UAAY,KAGnH,GAAIsL,EAAKu/B,WAAY,CACjB,IAAI0R,EAAYxvD,EAASA,EAAOiT,UAAYjT,EAAO89C,WAAayR,EAAY,EAC5E,GAAIhxC,EAAKtL,WAAau8C,GAAajxC,EAAKtL,UAAYsL,EAAKu/B,WAAa0R,EAClE,MAAM,IAAIzxD,MAAM,uEAAyEwgB,EAAKtL,UAAY,MAItH,SAASoqB,GAAmBr9B,EAAQyvD,EAAcjJ,EAASpkD,GAGvD,IAAI0Q,EAAO2qB,GAAWz9B,EAAO+7C,KAAM/7C,EAAOsgB,SAAUtgB,EAAQyvD,EAAcjJ,GAG1E,OAFAkJ,GAAS58C,EAAM9S,EAAO0c,UAAWta,GACjCutD,GAAgB78C,GACTA,EAEX,SAAS+lC,GAAekD,EAAMzoC,EAAKlR,GAC/B,IAAI0Q,EAAO2qB,GAAWse,EAAMA,EAAKz7B,SAAU,KAAM,KAAMhN,GAGvD,OAFAo8C,GAAS58C,EAAM1Q,EAASA,GACxButD,GAAgB78C,GACTA,EAEX,SAASgmC,GAAoBxkC,EAAYspC,EAAS4I,EAAS/lC,GACvD,IACImvC,EADAlvC,EAAek9B,EAAQp4B,QAAQ23B,sBAQnC,OAFIyS,EAJClvC,EAIcpM,EAAWynC,KAAKv0B,gBAAgBhH,eAAeC,EAAaC,GAH5DpM,EAAWynC,KAAKz7B,SAK5Bmd,GAAWnpB,EAAWynC,KAAM6T,EAAct7C,EAAYspC,EAAQp4B,QAAQ07B,kBAAmBsF,GAEpG,SAAS/oB,GAAWse,EAAMz7B,EAAUtgB,EAAQi8C,EAAe3oC,GACvD,IAAIglC,EAAQ,IAAIz9C,MAAMyY,EAAIglC,MAAMz8C,QAC5BmnD,EAAc1vC,EAAIg8C,YAAc,IAAIz0D,MAAMyY,EAAIg8C,aAAe,KAWjE,MAVW,CACPh8C,IAAKA,EACLtT,OAAQA,EACR07C,oBAAqB,KAAMO,cAAeA,EAC1C75C,QAAS,KACTsa,UAAW,KAAM47B,MAAOA,EACxB90B,MAAO,GAAkBu4B,KAAMA,EAAMz7B,SAAUA,EAC/Cu6B,UAAW,IAAIhgD,MAAMyY,EAAI+7C,cAAerM,YAAaA,EACrD7K,WAAY,GAIpB,SAASuX,GAAS58C,EAAM4J,EAAWta,GAC/B0Q,EAAK4J,UAAYA,EACjB5J,EAAK1Q,QAAUA,EAEnB,SAASutD,GAAgB78C,GACrB,IAAIoqC,EACAZ,GAAgBxpC,KAEhBoqC,EAAa3E,GAAczlC,EAAK9S,OADlB8S,EAAKmpC,cAC6Bj8C,OAAOiT,WAAWmpC,eAItE,IAFA,IAAI9oC,EAAMR,EAAKQ,IACXglC,EAAQxlC,EAAKwlC,MACR58C,EAAI,EAAGA,EAAI4X,EAAIglC,MAAMz8C,OAAQH,IAAK,CACvC,IAAIkiD,EAAUtqC,EAAIglC,MAAM58C,GACxBi9C,GAASC,eAAe9lC,EAAMpX,GAC9B,IAAIm0D,OAAW,EACf,OAAwB,UAAhBjS,EAAQxqC,OACZ,KAAK,EACD,IAAIq9B,EAAK3X,GAAchmB,EAAMoqC,EAAYU,GACrC57B,OAAgBxhB,EACpB,GAAoB,SAAhBo9C,EAAQxqC,MAAsC,CAC9C,IAAI08C,EAAcvS,GAAkBK,EAAQp4B,QAAQxD,eACpDA,EAAgB22B,GAASG,oBAAoBhmC,EAAM8qC,EAASkS,EAAarf,GAE7E+R,GAAuB1vC,EAAMkP,EAAe47B,EAASnN,GACrDof,EAAW,CACPzT,cAAe3L,EACfzuB,cAAeA,EACfy8B,cAAe,KACflrC,SAAUqqC,EAAQp4B,QAAQjS,SAAW60C,GAAmBt1C,EAAM8qC,QAAWp9C,GAEzD,SAAhBo9C,EAAQxqC,QACRy8C,EAASpR,cAAgBwI,GAAwBn0C,EAAM8qC,EAASiS,IAEpE,MACJ,KAAK,EACDA,EAAW7G,GAAWl2C,EAAMoqC,EAAYU,GACxC,MACJ,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACDiS,EAAWvX,EAAM58C,KACkB,KAAhBkiD,EAAQxqC,QAEvBy8C,EAAW,CAAExzC,SADE8uC,GAAuBr4C,EAAM8qC,KAGhD,MAEJ,KAAK,GAEDiS,EAAW,CAAExzC,SADEgvC,GAAmBv4C,EAAM8qC,IAExC,MAEJ,KAAK,OACDiS,EAAWvX,EAAM58C,MAGbm0D,EAAW,CAAExzC,SADEkvC,GAAwBz4C,EAAM8qC,KAG7B,MAAhBA,EAAQxqC,OAERs8C,GADenX,GAAczlC,EAAM8qC,EAAQ59C,OAAOiT,WAAW+O,cAC1C6tC,EAASxzC,SAAUwzC,EAASxzC,UAEnD,MAEJ,KAAK,GACL,KAAK,GACL,KAAK,IACDwzC,EA3iBL,CAAE7yD,WAAOwD,GA4iBJ,MACJ,KAAK,SACL,KAAK,UACDqvD,EAnyBL,IAAInf,GAoyBC,MACJ,KAAK,EACDid,GAAgB76C,EAAMoqC,EAAYU,GAElCiS,OAAWrvD,EAGnB83C,EAAM58C,GAAKm0D,EAIfE,GAAyBj9C,EAAMk9C,GAAWC,iBAE1CC,GAAkBp9C,EAAM,UAAiE,UAA6B,GAE1H,SAASsmC,GAAmBtmC,GACxBq9C,GAA2Br9C,GAC3B6lC,GAASc,iBAAiB3mC,EAAM,GAChCs9C,GAAwBt9C,EAAMk9C,GAAWK,gBACzC1X,GAASe,eAAe5mC,EAAM,GAC9Bi9C,GAAyBj9C,EAAMk9C,GAAWK,gBAG1Cv9C,EAAK0Q,QAAS,GAElB,SAAS21B,GAAmBrmC,GACP,EAAbA,EAAK0Q,OACL1Q,EAAK0Q,QAAS,EACd1Q,EAAK0Q,OAAS,GAGd1Q,EAAK0Q,QAAS,EAElBu0B,GAAejlC,EAAM,EAA8B,KACnDq9C,GAA2Br9C,GAC3B6lC,GAASc,iBAAiB3mC,EAAM,GAChCs9C,GAAwBt9C,EAAMk9C,GAAWM,gBACzCJ,GAAkBp9C,EAAM,SAAiC,UAA8B,GACvF,IAAIy9C,EAAWxY,GAAejlC,EAAM,IAAmC,KACvEq5C,GAAgCr5C,EAAM,SAAqCy9C,EAAW,QAAiC,IACvH5X,GAASe,eAAe5mC,EAAM,GAC9Bi9C,GAAyBj9C,EAAMk9C,GAAWM,gBAC1CJ,GAAkBp9C,EAAM,UAA+B,UAA8B,GAErFq5C,GAAgCr5C,EAAM,UADtCy9C,EAAWxY,GAAejlC,EAAM,IAA6C,MACM,QAA8B,IAC5F,EAAjBA,EAAKQ,IAAIF,QACTN,EAAK0Q,QAAS,GAElB1Q,EAAK0Q,QAAS,GACdu0B,GAAejlC,EAAM,IAA0C,MAEnE,SAAS09C,GAAmB19C,EAAM8qC,EAAS6S,EAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACrF,OAAiB,IAAbV,EAgCR,SAAkC39C,EAAM8qC,EAAS8S,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACjF,OAAwB,UAAhBvT,EAAQxqC,OACZ,KAAK,EACD,OAlzEZ,SAAqCN,EAAMQ,EAAKo9C,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAChF,IAAIC,EAAU99C,EAAIioC,SAAS1/C,OACvBw1D,GAAU,EAqBd,OApBID,EAAU,GAAKnO,GAA2BnwC,EAAMQ,EAAK,EAAGo9C,KACxDW,GAAU,GACVD,EAAU,GAAKnO,GAA2BnwC,EAAMQ,EAAK,EAAGq9C,KACxDU,GAAU,GACVD,EAAU,GAAKnO,GAA2BnwC,EAAMQ,EAAK,EAAGs9C,KACxDS,GAAU,GACVD,EAAU,GAAKnO,GAA2BnwC,EAAMQ,EAAK,EAAGu9C,KACxDQ,GAAU,GACVD,EAAU,GAAKnO,GAA2BnwC,EAAMQ,EAAK,EAAGw9C,KACxDO,GAAU,GACVD,EAAU,GAAKnO,GAA2BnwC,EAAMQ,EAAK,EAAGy9C,KACxDM,GAAU,GACVD,EAAU,GAAKnO,GAA2BnwC,EAAMQ,EAAK,EAAG09C,KACxDK,GAAU,GACVD,EAAU,GAAKnO,GAA2BnwC,EAAMQ,EAAK,EAAG29C,KACxDI,GAAU,GACVD,EAAU,GAAKnO,GAA2BnwC,EAAMQ,EAAK,EAAG49C,KACxDG,GAAU,GACVD,EAAU,GAAKnO,GAA2BnwC,EAAMQ,EAAK,EAAG69C,KACxDE,GAAU,GACPA,EA2xEQC,CAA4Bx+C,EAAM8qC,EAAS8S,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC1F,KAAK,EACD,OA5bZ,SAAkCr+C,EAAMQ,EAAKo9C,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC7E,IAAIE,GAAU,EACV9V,EAAWjoC,EAAIioC,SACf6V,EAAU7V,EAAS1/C,OAqBvB,GApBIu1D,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAGo9C,KACnDW,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAGq9C,KACnDU,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAGs9C,KACnDS,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAGu9C,KACnDQ,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAGw9C,KACnDO,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAGy9C,KACnDM,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAG09C,KACnDK,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAG29C,KACnDI,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAG49C,KACnDG,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAG69C,KACnDE,GAAU,GACVA,EAAS,CACT,IAAIr0D,EAAQsW,EAAIsc,KAAK0+B,OACjB8C,EAAU,IACVp0D,GAASuxD,GAAsBmC,EAAInV,EAAS,KAC5C6V,EAAU,IACVp0D,GAASuxD,GAAsBoC,EAAIpV,EAAS,KAC5C6V,EAAU,IACVp0D,GAASuxD,GAAsBqC,EAAIrV,EAAS,KAC5C6V,EAAU,IACVp0D,GAASuxD,GAAsBsC,EAAItV,EAAS,KAC5C6V,EAAU,IACVp0D,GAASuxD,GAAsBuC,EAAIvV,EAAS,KAC5C6V,EAAU,IACVp0D,GAASuxD,GAAsBwC,EAAIxV,EAAS,KAC5C6V,EAAU,IACVp0D,GAASuxD,GAAsByC,EAAIzV,EAAS,KAC5C6V,EAAU,IACVp0D,GAASuxD,GAAsB0C,EAAI1V,EAAS,KAC5C6V,EAAU,IACVp0D,GAASuxD,GAAsB2C,EAAI3V,EAAS,KAC5C6V,EAAU,IACVp0D,GAASuxD,GAAsB4C,EAAI5V,EAAS,KAChD,IAAI6H,EAAgB/K,GAAWvlC,EAAMQ,EAAIL,WAAWopC,WACpDvpC,EAAKwN,SAASypC,SAAS3G,EAAepmD,GAE1C,OAAOq0D,EA2YQE,CAAyBz+C,EAAM8qC,EAAS8S,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvF,KAAK,MACD,OAnyCZ,SAAuCr+C,EAAMQ,EAAKo9C,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAClF,IAAIlF,EAAezT,GAAe1lC,EAAMQ,EAAIL,WACxCkY,EAAY8gC,EAAa5vC,SACzBg1C,GAAU,EACVvgB,OAAUtwC,EACV4wD,EAAU99C,EAAIioC,SAAS1/C,OAmD3B,OAlDIu1D,EAAU,GAAKjW,GAAaroC,EAAMQ,EAAK,EAAGo9C,KAC1CW,GAAU,EACVvgB,EAAUob,GAAWp5C,EAAMm5C,EAAc34C,EAAK,EAAGo9C,EAAI5f,IAErDsgB,EAAU,GAAKjW,GAAaroC,EAAMQ,EAAK,EAAGq9C,KAC1CU,GAAU,EACVvgB,EAAUob,GAAWp5C,EAAMm5C,EAAc34C,EAAK,EAAGq9C,EAAI7f,IAErDsgB,EAAU,GAAKjW,GAAaroC,EAAMQ,EAAK,EAAGs9C,KAC1CS,GAAU,EACVvgB,EAAUob,GAAWp5C,EAAMm5C,EAAc34C,EAAK,EAAGs9C,EAAI9f,IAErDsgB,EAAU,GAAKjW,GAAaroC,EAAMQ,EAAK,EAAGu9C,KAC1CQ,GAAU,EACVvgB,EAAUob,GAAWp5C,EAAMm5C,EAAc34C,EAAK,EAAGu9C,EAAI/f,IAErDsgB,EAAU,GAAKjW,GAAaroC,EAAMQ,EAAK,EAAGw9C,KAC1CO,GAAU,EACVvgB,EAAUob,GAAWp5C,EAAMm5C,EAAc34C,EAAK,EAAGw9C,EAAIhgB,IAErDsgB,EAAU,GAAKjW,GAAaroC,EAAMQ,EAAK,EAAGy9C,KAC1CM,GAAU,EACVvgB,EAAUob,GAAWp5C,EAAMm5C,EAAc34C,EAAK,EAAGy9C,EAAIjgB,IAErDsgB,EAAU,GAAKjW,GAAaroC,EAAMQ,EAAK,EAAG09C,KAC1CK,GAAU,EACVvgB,EAAUob,GAAWp5C,EAAMm5C,EAAc34C,EAAK,EAAG09C,EAAIlgB,IAErDsgB,EAAU,GAAKjW,GAAaroC,EAAMQ,EAAK,EAAG29C,KAC1CI,GAAU,EACVvgB,EAAUob,GAAWp5C,EAAMm5C,EAAc34C,EAAK,EAAG29C,EAAIngB,IAErDsgB,EAAU,GAAKjW,GAAaroC,EAAMQ,EAAK,EAAG49C,KAC1CG,GAAU,EACVvgB,EAAUob,GAAWp5C,EAAMm5C,EAAc34C,EAAK,EAAG49C,EAAIpgB,IAErDsgB,EAAU,GAAKjW,GAAaroC,EAAMQ,EAAK,EAAG69C,KAC1CE,GAAU,EACVvgB,EAAUob,GAAWp5C,EAAMm5C,EAAc34C,EAAK,EAAG69C,EAAIrgB,IAErDA,GACA3lB,EAAUqmC,YAAY1gB,GAET,MAAZx9B,EAAIF,OACLglC,GAA4BtlC,EAAM,IAAmCQ,EAAIL,YACzEkY,EAAUsmC,WAEE,OAAZn+C,EAAIF,OACJ+X,EAAUumC,YAEPL,EA2uCQM,CAA8B7+C,EAAM8qC,EAAS8S,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5F,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA7oBZ,SAA4Cr+C,EAAMQ,EAAKo9C,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvF,IAAI5V,EAAWjoC,EAAIioC,SACf8V,GAAU,EACVD,EAAU7V,EAAS1/C,OAqBvB,GApBIu1D,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAGo9C,KACnDW,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAGq9C,KACnDU,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAGs9C,KACnDS,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAGu9C,KACnDQ,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAGw9C,KACnDO,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAGy9C,KACnDM,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAG09C,KACnDK,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAG29C,KACnDI,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAG49C,KACnDG,GAAU,GACVD,EAAU,GAAKhW,GAAsBtoC,EAAMQ,EAAK,EAAG69C,KACnDE,GAAU,GACVA,EAAS,CACT,IAAIt+C,EAAO0lC,GAAqB3lC,EAAMQ,EAAIL,WACtCjW,OAAQ,EACZ,OAAoB,UAAZsW,EAAIF,OACR,KAAK,GACDpW,EAAQ,IAAInC,MAAM0gD,EAAS1/C,QACvBu1D,EAAU,IACVp0D,EAAM,GAAK0zD,GACXU,EAAU,IACVp0D,EAAM,GAAK2zD,GACXS,EAAU,IACVp0D,EAAM,GAAK4zD,GACXQ,EAAU,IACVp0D,EAAM,GAAK6zD,GACXO,EAAU,IACVp0D,EAAM,GAAK8zD,GACXM,EAAU,IACVp0D,EAAM,GAAK+zD,GACXK,EAAU,IACVp0D,EAAM,GAAKg0D,GACXI,EAAU,IACVp0D,EAAM,GAAKi0D,GACXG,EAAU,IACVp0D,EAAM,GAAKk0D,GACXE,EAAU,IACVp0D,EAAM,GAAKm0D,GACf,MACJ,KAAK,GACDn0D,EAAQ,GACJo0D,EAAU,IACVp0D,EAAMu+C,EAAS,GAAGl9C,MAAQqyD,GAC1BU,EAAU,IACVp0D,EAAMu+C,EAAS,GAAGl9C,MAAQsyD,GAC1BS,EAAU,IACVp0D,EAAMu+C,EAAS,GAAGl9C,MAAQuyD,GAC1BQ,EAAU,IACVp0D,EAAMu+C,EAAS,GAAGl9C,MAAQwyD,GAC1BO,EAAU,IACVp0D,EAAMu+C,EAAS,GAAGl9C,MAAQyyD,GAC1BM,EAAU,IACVp0D,EAAMu+C,EAAS,GAAGl9C,MAAQ0yD,GAC1BK,EAAU,IACVp0D,EAAMu+C,EAAS,GAAGl9C,MAAQ2yD,GAC1BI,EAAU,IACVp0D,EAAMu+C,EAAS,GAAGl9C,MAAQ4yD,GAC1BG,EAAU,IACVp0D,EAAMu+C,EAAS,GAAGl9C,MAAQ6yD,GAC1BE,EAAU,IACVp0D,EAAMu+C,EAAS,GAAGl9C,MAAQ8yD,GAC9B,MACJ,KAAK,IACD,IAAIltD,EAAOysD,EACX,OAAQU,GACJ,KAAK,EACDp0D,EAAQiH,EAAK2tD,UAAUlB,GACvB,MACJ,KAAK,EACD1zD,EAAQiH,EAAK2tD,UAAUjB,GACvB,MACJ,KAAK,EACD3zD,EAAQiH,EAAK2tD,UAAUjB,EAAIC,GAC3B,MACJ,KAAK,EACD5zD,EAAQiH,EAAK2tD,UAAUjB,EAAIC,EAAIC,GAC/B,MACJ,KAAK,EACD7zD,EAAQiH,EAAK2tD,UAAUjB,EAAIC,EAAIC,EAAIC,GACnC,MACJ,KAAK,EACD9zD,EAAQiH,EAAK2tD,UAAUjB,EAAIC,EAAIC,EAAIC,EAAIC,GACvC,MACJ,KAAK,EACD/zD,EAAQiH,EAAK2tD,UAAUjB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC3C,MACJ,KAAK,EACDh0D,EAAQiH,EAAK2tD,UAAUjB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC/C,MACJ,KAAK,EACDj0D,EAAQiH,EAAK2tD,UAAUjB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACnD,MACJ,KAAK,GACDl0D,EAAQiH,EAAK2tD,UAAUjB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,IAKvEp+C,EAAK/V,MAAQA,EAEjB,OAAOq0D,EA6hBQQ,CAAmC/+C,EAAM8qC,EAAS8S,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACjG,QACI,KAAM,eA5CHW,CAAyBh/C,EAAM8qC,EAAS8S,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GA+C3F,SAAmCr+C,EAAM8qC,EAASnxC,GAC9C,OAAwB,UAAhBmxC,EAAQxqC,OACZ,KAAK,EACD,OAzyEZ,SAAsCN,EAAMQ,EAAK7G,GAE7C,IADA,IAAI4kD,GAAU,EACL31D,EAAI,EAAGA,EAAI+Q,EAAO5Q,OAAQH,IAC3BunD,GAA2BnwC,EAAMQ,EAAK5X,EAAG+Q,EAAO/Q,MAChD21D,GAAU,GAElB,OAAOA,EAmyEQU,CAA6Bj/C,EAAM8qC,EAASnxC,GACvD,KAAK,EACD,OAzZZ,SAAmCqG,EAAMQ,EAAK7G,GAG1C,IAFA,IAAI8uC,EAAWjoC,EAAIioC,SACf8V,GAAU,EACL31D,EAAI,EAAGA,EAAI+Q,EAAO5Q,OAAQH,IAG3B0/C,GAAsBtoC,EAAMQ,EAAK5X,EAAG+Q,EAAO/Q,MAC3C21D,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAIr0D,EAAQ,GACZ,IAAStB,EAAI,EAAGA,EAAI+Q,EAAO5Q,OAAQH,IAC/BsB,GAAgBuxD,GAAsB9hD,EAAO/Q,GAAI6/C,EAAS7/C,IAE9DsB,EAAQsW,EAAIsc,KAAK0+B,OAAStxD,EAC1B,IAAIomD,EAAgB/K,GAAWvlC,EAAMQ,EAAIL,WAAWopC,WACpDvpC,EAAKwN,SAASypC,SAAS3G,EAAepmD,GAE1C,OAAOq0D,EAsYQW,CAA0Bl/C,EAAM8qC,EAASnxC,GACpD,KAAK,MACD,OAzvCZ,SAAwCqG,EAAMQ,EAAK7G,GAK/C,IAJA,IAAIw/C,EAAezT,GAAe1lC,EAAMQ,EAAIL,WACxCkY,EAAY8gC,EAAa5vC,SACzBg1C,GAAU,EACVvgB,OAAUtwC,EACL9E,EAAI,EAAGA,EAAI+Q,EAAO5Q,OAAQH,IAC3By/C,GAAaroC,EAAMQ,EAAK5X,EAAG+Q,EAAO/Q,MAClC21D,GAAU,EACVvgB,EAAUob,GAAWp5C,EAAMm5C,EAAc34C,EAAK5X,EAAG+Q,EAAO/Q,GAAIo1C,IAapE,OAVIA,GACA3lB,EAAUqmC,YAAY1gB,GAET,MAAZx9B,EAAIF,OACLglC,GAA4BtlC,EAAM,IAAmCQ,EAAIL,YACzEkY,EAAUsmC,WAEE,OAAZn+C,EAAIF,OACJ+X,EAAUumC,YAEPL,EAouCQY,CAA+Bn/C,EAAM8qC,EAASnxC,GACzD,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA3iBZ,SAA6CqG,EAAMQ,EAAK7G,GAGpD,IAFA,IAAI8uC,EAAWjoC,EAAIioC,SACf8V,GAAU,EACL31D,EAAI,EAAGA,EAAI+Q,EAAO5Q,OAAQH,IAG3B0/C,GAAsBtoC,EAAMQ,EAAK5X,EAAG+Q,EAAO/Q,MAC3C21D,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAIt+C,EAAO0lC,GAAqB3lC,EAAMQ,EAAIL,WACtCjW,OAAQ,EACZ,OAAoB,UAAZsW,EAAIF,OACR,KAAK,GACDpW,EAAQyP,EACR,MACJ,KAAK,GAED,IADAzP,EAAQ,GACCtB,EAAI,EAAGA,EAAI+Q,EAAO5Q,OAAQH,IAC/BsB,EAAMu+C,EAAS7/C,GAAG2C,MAAQoO,EAAO/Q,GAErC,MACJ,KAAK,IACD,IAAIuI,EAAOwI,EAAO,GACdylD,EAASzlD,EAAOlH,MAAM,GAC1BvI,EAAQiH,EAAK2tD,UAAU71D,MAAMkI,EAAM/G,EAASg1D,IAGpDn/C,EAAK/V,MAAQA,EAEjB,OAAOq0D,EA4gBQc,CAAoCr/C,EAAM8qC,EAASnxC,GAC9D,QACI,KAAM,eAzDH2lD,CAA0Bt/C,EAAM8qC,EAAS8S,GAGxD,SAASP,GAA2Br9C,GAChC,IAAIQ,EAAMR,EAAKQ,IACf,GAAsB,EAAhBA,EAAIo0C,UAGV,IAAK,IAAIhsD,EAAI,EAAGA,EAAI4X,EAAIglC,MAAMz8C,OAAQH,IAAK,CACvC,IAAIkiD,EAAUtqC,EAAIglC,MAAM58C,GACxB,GAAoB,EAAhBkiD,EAAQxqC,MAAmC,CAC3C,IAAIo0C,EAAiBjP,GAAczlC,EAAMpX,GAAG6X,SAASk0C,gBACrD,GAAID,EACA,IAAK,IAAI6K,EAAM,EAAGA,EAAM7K,EAAe3rD,OAAQw2D,IAAO,CAClD,IAAI7E,EAAgBhG,EAAe6K,GACnC7E,EAAchqC,OAAS,GACvBm4B,GAAsC6R,EAAe16C,SAIH,IAA/B,EAArB8qC,EAAQkD,cAIdplD,GAAKkiD,EAAQE,aAoCzB,SAASwU,GAAmBx/C,EAAM8qC,EAAS6S,EAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAQrF,OAPiB,IAAbV,EASR,SAAkC39C,EAAM8qC,EAAS8S,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACjF,IAAIC,EAAUxT,EAAQrC,SAAS1/C,OAC3Bu1D,EAAU,GACV/V,GAAsBvoC,EAAM8qC,EAAS,EAAG8S,GACxCU,EAAU,GACV/V,GAAsBvoC,EAAM8qC,EAAS,EAAG+S,GACxCS,EAAU,GACV/V,GAAsBvoC,EAAM8qC,EAAS,EAAGgT,GACxCQ,EAAU,GACV/V,GAAsBvoC,EAAM8qC,EAAS,EAAGiT,GACxCO,EAAU,GACV/V,GAAsBvoC,EAAM8qC,EAAS,EAAGkT,GACxCM,EAAU,GACV/V,GAAsBvoC,EAAM8qC,EAAS,EAAGmT,GACxCK,EAAU,GACV/V,GAAsBvoC,EAAM8qC,EAAS,EAAGoT,GACxCI,EAAU,GACV/V,GAAsBvoC,EAAM8qC,EAAS,EAAGqT,GACxCG,EAAU,GACV/V,GAAsBvoC,EAAM8qC,EAAS,EAAGsT,GACxCE,EAAU,GACV/V,GAAsBvoC,EAAM8qC,EAAS,EAAGuT,GA7BxCoB,CAAyBz/C,EAAM8qC,EAAS8S,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GA+BpF,SAAmCr+C,EAAM8qC,EAASnxC,GAC9C,IAAK,IAAI/Q,EAAI,EAAGA,EAAI+Q,EAAO5Q,OAAQH,IAC/B2/C,GAAsBvoC,EAAM8qC,EAASliD,EAAG+Q,EAAO/Q,IA9B/C82D,CAA0B1/C,EAAM8qC,EAAS8S,IAGtC,EAkCX,SAAS+B,GAAoB3/C,EAAM8qC,GAE/B,GADgBlF,GAAY5lC,EAAM8qC,EAAQ3qC,WAC5B29B,MACV,MAAMgJ,GAA4CjB,GAASY,mBAAmBzmC,EAAM8qC,EAAQ3qC,WAAY,SAAW2qC,EAAQ/I,MAAMxrB,GAAK,aAAc,SAAWu0B,EAAQ/I,MAAMxrB,GAAK,SAAsD,IAA9B,EAAbvW,EAAK0Q,QAG1M,SAAS61B,GAAYvmC,GACjB,KAAiB,IAAbA,EAAK0Q,OAAT,CAMA,GAHA4sC,GAAwBt9C,EAAMk9C,GAAW0C,SACzC3C,GAAyBj9C,EAAMk9C,GAAW0C,SAC1CvG,GAAgCr5C,EAAM,QAClCA,EAAKkwC,YACL,IAAK,IAAItnD,EAAI,EAAGA,EAAIoX,EAAKkwC,YAAYnnD,OAAQH,IACzCoX,EAAKkwC,YAAYtnD,MA9gE7B,SAA6BoX,GACzB,GAAmB,GAAbA,EAAK0Q,MAAX,CAGA,IAAI+jC,EAAiBvL,GAAsBlpC,GAC3C,GAAIy0C,EAAgB,CAChB,IAAIC,EAAiBD,EAAeh0C,SAASk0C,gBACzCD,IACA/B,GAAgB+B,EAAgBA,EAAe1nD,QAAQgT,IACvD6lC,GAASgB,mBAAmB7mC,MAwgEpC6/C,CAAoB7/C,GAChBA,EAAKwN,SAAS+B,aAQtB,SAA0BvP,GAEtB,IADA,IAAI5T,EAAM4T,EAAKQ,IAAIglC,MAAMz8C,OAChBH,EAAI,EAAGA,EAAIwD,EAAKxD,IAAK,CAC1B,IAAI4X,EAAMR,EAAKQ,IAAIglC,MAAM58C,GACT,EAAZ4X,EAAIF,MACJN,EAAKwN,SAAS+B,YAAYk2B,GAAczlC,EAAMpX,GAAG0gD,eAEhC,EAAZ9oC,EAAIF,MACTN,EAAKwN,SAAS+B,YAAYg2B,GAAWvlC,EAAMpX,GAAG2gD,aAE7B,SAAZ/oC,EAAIF,OAAuD,UAAZE,EAAIF,QACxDslC,GAAY5lC,EAAMpX,GAAGwoB,WAlBzB0uC,CAAiB9/C,GAEjBwpC,GAAgBxpC,IAChBA,EAAKwN,SAAS4D,UAElBpR,EAAK0Q,OAAS,KAiBlB,IAAIwsC,GACJ,SAAWA,UACPA,EAAWA,EAA4B,gBAAI,GAAK,kBAChDA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAAoB,QAAI,GAAK,UANjCA,EAAX,CAOE,IACF,SAASD,GAAyBj9C,EAAM0O,GACpC,IAAIlO,EAAMR,EAAKQ,IACf,GAAsB,SAAhBA,EAAIo0C,UAGV,IAAK,IAAIhsD,EAAI,EAAGA,EAAI4X,EAAIglC,MAAMz8C,OAAQH,IAAK,CACvC,IAAIkiD,EAAUtqC,EAAIglC,MAAM58C,GACJ,SAAhBkiD,EAAQxqC,MAERy/C,GAAeta,GAAczlC,EAAMpX,GAAGsmB,cAAeR,GAEQ,IAAlC,SAArBo8B,EAAQkD,cAIdplD,GAAKkiD,EAAQE,aAIzB,SAASsS,GAAwBt9C,EAAM0O,GACnC,IAAIlO,EAAMR,EAAKQ,IACf,GAAsB,SAAhBA,EAAIo0C,UAGV,IAAK,IAAIhsD,EAAI,EAAGA,EAAI4X,EAAIglC,MAAMz8C,OAAQH,IAAK,CACvC,IAAIkiD,EAAUtqC,EAAIglC,MAAM58C,GACxB,GAAoB,SAAhBkiD,EAAQxqC,MAGR,IADA,IAAIorC,EAAgBjG,GAAczlC,EAAMpX,GAAG+iD,cAAcC,eAChDC,EAAI,EAAGA,EAAIH,EAAc3iD,OAAQ8iD,IACtCkU,GAAerU,EAAcG,GAAIn9B,QAGwB,IAAlC,SAArBo8B,EAAQkD,cAIdplD,GAAKkiD,EAAQE,aAIzB,SAAS+U,GAAe//C,EAAM0O,GAC1B,IAAIsxC,EAAYhgD,EAAK0Q,MACrB,OAAQhC,GACJ,KAAKwuC,GAAWK,eAC8B,IAAzB,IAAZyC,KAC+C,KAA/B,GAAZA,GACD1Z,GAAmBtmC,GAEF,GAAZggD,GACLC,GAAyBjgD,EAAMk9C,GAAWgD,+BAGlD,MACJ,KAAKhD,GAAWgD,6BAC8B,IAAzB,IAAZF,KACe,GAAZA,EACA1Z,GAAmBtmC,GAEF,GAAZggD,GACLC,GAAyBjgD,EAAM0O,IAGvC,MACJ,KAAKwuC,GAAWM,eAC8B,IAAzB,IAAZwC,KAC+C,KAA/B,GAAZA,GACD3Z,GAAmBrmC,GAEF,GAAZggD,GACLC,GAAyBjgD,EAAMk9C,GAAWiD,+BAGlD,MACJ,KAAKjD,GAAWiD,6BAC8B,IAAzB,IAAZH,KACe,GAAZA,EACA3Z,GAAmBrmC,GAEF,GAAZggD,GACLC,GAAyBjgD,EAAM0O,IAGvC,MACJ,KAAKwuC,GAAW0C,QAGZrZ,GAAYvmC,GACZ,MACJ,KAAKk9C,GAAWC,gBACZN,GAAgB78C,IAI5B,SAASigD,GAAyBjgD,EAAM0O,GACpC4uC,GAAwBt9C,EAAM0O,GAC9BuuC,GAAyBj9C,EAAM0O,GAEnC,SAAS0uC,GAAkBp9C,EAAMogD,EAAYC,EAAwBC,GACjE,GAAMtgD,EAAKQ,IAAIo0C,UAAYwL,GAAiBpgD,EAAKQ,IAAIo0C,UAAYyL,EAIjE,IADA,IAAI5D,EAAYz8C,EAAKQ,IAAIglC,MAAMz8C,OACtBH,EAAI,EAAGA,EAAI6zD,EAAW7zD,IAAK,CAChC,IAAIkiD,EAAU9qC,EAAKQ,IAAIglC,MAAM58C,GAC7B,GAAKkiD,EAAQxqC,MAAQ8/C,GAAgBtV,EAAQxqC,MAAQ+/C,EAEjD,OADAxa,GAASC,eAAe9lC,EAAM8qC,EAAQ3qC,WAC9BmgD,GACJ,KAAK,EACDpG,GAAoBl6C,EAAM8qC,GAC1B,MACJ,KAAK,EACD6U,GAAoB3/C,EAAM8qC,GAIhCA,EAAQkD,WAAaoS,GAAiBtV,EAAQkD,WAAaqS,IAG7Dz3D,GAAKkiD,EAAQE,aAYzB,IAAIlb,IAAc,EAmElB,SAASywB,GAAmBC,EAAYl/B,EAAkBC,EAAoB/gB,EAAK0e,EAAU5vB,GACzF,IAAIolB,EAAkBwK,EAAS1c,SAASQ,IAAIkhB,IAC5C,OAAO6hB,GAAe0a,GAAeD,EAAYthC,EAAUxK,EAAiB4M,EAAkBC,GAAqB/gB,EAAKlR,GAE5H,SAASoxD,GAAoBF,EAAYl/B,EAAkBC,EAAoB/gB,EAAK0e,EAAU5vB,GAC1F,IAAIolB,EAAkBwK,EAAS1c,SAASQ,IAAIkhB,IACxC+kB,EAAOwX,GAAeD,EAAYthC,EAAU,IAAIyhC,GAAsBjsC,GAAkB4M,EAAkBC,GAC1Gq/B,EAAkBC,GAA6BrgD,GACnD,OAAOsgD,GAAqBC,GAAYx4D,OAAQw9C,GAAgB,KAAM,CAACkD,EAAM2X,EAAiBtxD,IAElG,SAASmxD,GAAeD,EAAYthC,EAAUxK,EAAiB4M,EAAkBC,GAC7E,IAAI5M,EAAYuK,EAAS1c,SAASQ,IAAIuhB,IAClCqW,EAAe1b,EAAS1c,SAASQ,IAAIgsB,IACrCxhB,EAAWkH,EAAgBhH,eAAe,KAAM,MACpD,MAAO,CACHwR,SAAUA,EACV1c,SAAUg+C,EAAYl/B,iBAAkBA,EACxCkuB,eAAgBjuB,EAAoB5M,UAAWA,EAAWD,gBAAiBA,EAAiBlH,SAAUA,EAAUotB,aAAcA,GAGtI,SAASomB,GAAwBx/C,EAAYosC,EAAWqT,EAAY3xD,GAChE,IAAIsxD,EAAkBC,GAA6BI,GACnD,OAAOH,GAAqBC,GAAYx4D,OAAQgiC,GAAoB,KAAM,CAAC/oB,EAAYosC,EAAWgT,EAAiBtxD,IAEvH,SAAS4xD,GAAyB1/C,EAAYspC,EAASmW,EAAYtzC,GAQ/D,OALIszC,EAFwBE,GAAiBn+C,IAAI8nC,EAAQp4B,QAAQ07B,kBAAkB7yB,SAASxf,QAK3E8kD,GAA6BI,GAEvCH,GAAqBC,GAAYx4D,OAAQy9C,GAAqB,KAAM,CAACxkC,EAAYspC,EAASmW,EAAYtzC,IAEjH,SAASyzC,GAAuBl4B,EAAYC,EAAgBguB,EAAqB32C,GAE7E,OAAOylC,GAAkB/c,EAAYC,EAAgBguB,EAkFzD,SAA0C32C,GACtC,IAAIzG,EASJ,SAA0ByG,GACtB,IAAI6gD,GAAe,EACfC,GAAyB,EAC7B,OAA+B,IAA3BC,GAAkB9Z,KACX,CAAE4Z,aAAcA,EAAcC,uBAAwBA,IAEjE9gD,EAAI4Z,UAAUtpB,QAAQ,SAAU2a,GAC5B,IAAI+1C,EAAWD,GAAkBv+C,IAAIyI,EAAK1P,OACxB,KAAb0P,EAAKnL,OAA8CkhD,IACpDH,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,sBAGpEjhD,EAAIwqB,QAAQl6B,QAAQ,SAAUyqC,GAC1BmmB,GAA2B5wD,QAAQ,SAAU0wD,EAAUzlD,GAC/CjD,GAAiBiD,GAAOnD,aAAe2iC,IACvC8lB,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,wBAIjE,CAAEJ,aAAcA,EAAcC,uBAAwBA,IA9BxDK,CAAiBnhD,GAAsC8gD,EAAyBvnD,EAAGunD,uBAC5F,OAD+CvnD,EAAGsnD,cAgClD,SAAgC7gD,GAC5B,IAAK,IAAI5X,EAAI,EAAGA,EAAI4X,EAAI4Z,UAAUrxB,OAAQH,IAAK,CAC3C,IAAI2yB,EAAW/a,EAAI4Z,UAAUxxB,GACzB04D,IAIA/lC,EAASjb,OAAS,MAEtB,IAAIkhD,EAAWD,GAAkBv+C,IAAIuY,EAASxf,OAC1CylD,IACAjmC,EAASjb,OAA0B,KAAjBib,EAASjb,MAA8CkhD,EAASlhD,MAClFib,EAASH,KAAO6uB,GAAauX,EAASpmC,MACtCG,EAASrxB,MAAQs3D,EAASt3D,OAGlC,GAAIw3D,GAA2Bja,KAAO,EAAG,CACrC,IAAIma,EAAc,IAAI/jC,IAAIrd,EAAIwqB,SAC9B02B,GAA2B5wD,QAAQ,SAAU0wD,EAAUzlD,GACnD,GAAI6lD,EAAYtjC,IAAIxlB,GAAiBiD,GAAOnD,YAAa,CACrD,IAAI2iB,EAAW,CACXxf,MAAOA,EACPuE,MAAOkhD,EAASlhD,OAASghD,EAAyB,KAA0B,GAC5ElmC,KAAM6uB,GAAauX,EAASpmC,MAC5BlxB,MAAOs3D,EAASt3D,MAChBiC,MAAOqU,EAAI4Z,UAAUrxB,QAEzByX,EAAI4Z,UAAUnwB,KAAKsxB,GACnB/a,EAAIkxC,eAAelK,GAASzrC,IAAUwf,MArDtDsmC,CADArhD,EAAMA,EAAI3H,QAAQ,WAAc,OAAOyuC,MAEhC9mC,GANIA,EAtFWshD,CAAiCthD,IAG3D,IAAI+gD,GAAoB,IAAIhmD,IACxBmmD,GAA6B,IAAInmD,IACjC4lD,GAAmB,IAAI5lD,IAC3B,SAASwmD,GAAsBP,GAE3B,IAAIt+C,EADJq+C,GAAkBpmC,IAAIqmC,EAASzlD,MAAOylD,GAER,mBAAnBA,EAASzlD,QAAyBmH,EAAgBpK,GAAiB0oD,EAASzlD,SAC/C,mBAA7BmH,EAActK,YACrB8oD,GAA2BvmC,IAAIqmC,EAASzlD,MAAOylD,GAGvD,SAASQ,GAA2BC,EAAMC,GACtC,IAAIC,EAAc1X,GAAoDyX,EAhuE9C/O,gBAiuEpB6J,EAAcvS,GAAkB0X,EAAY3c,MAAM,GAAG9yB,QAAQxD,eACjEiyC,GAAiBhmC,IAAI8mC,EAAMjF,GAE/B,SAASoF,KACLb,GAAkB5iC,QAClB+iC,GAA2B/iC,QAC3BwiC,GAAiBxiC,QAQrB,SAASkiC,GAA6BrgD,GAClC,GAA+B,IAA3B+gD,GAAkB9Z,KAClB,OAAOjnC,EAEX,IAAI6hD,EAWJ,SAAoD7hD,GAGhD,IAFA,IAAI8hD,EAAoC,GACpCC,EAAiB,KACZ35D,EAAI,EAAGA,EAAI4X,EAAIglC,MAAMz8C,OAAQH,IAAK,CACvC,IAAIkiD,EAAUtqC,EAAIglC,MAAM58C,GACJ,EAAhBkiD,EAAQxqC,QACRiiD,EAAiBzX,GAEjByX,GAAkC,KAAhBzX,EAAQxqC,OAC1BihD,GAAkBjjC,IAAIwsB,EAAQvvB,SAASxf,SACvCumD,EAAkCr4D,KAAKs4D,EAAepiD,WACtDoiD,EAAiB,MAGzB,OAAOD,EAzBkCE,CAA2ChiD,GACxF,GAAsD,IAAlD6hD,EAAuCt5D,OACvC,OAAOyX,EAIXA,EAAMA,EAAI3H,QAAQ,WAAc,OAAOyuC,KACvC,IAAK,IAAI1+C,EAAI,EAAGA,EAAIy5D,EAAuCt5D,OAAQH,IAC/D65D,EAAgCjiD,EAAK6hD,EAAuCz5D,IAEhF,OAAO4X,EAiBP,SAASiiD,EAAgCxB,EAAYyB,GACjD,IAAK,IAAI95D,EAAI85D,EAAU,EAAG95D,EAAIq4D,EAAWzb,MAAMz8C,OAAQH,IAAK,CACxD,IAAIkiD,EAAUmW,EAAWzb,MAAM58C,GAC/B,GAAoB,EAAhBkiD,EAAQxqC,MAER,OAEJ,GAAoB,KAAhBwqC,EAAQxqC,MAA2C,CACnD,IAAIib,EAAWuvB,EAAQvvB,SACnBimC,EAAWD,GAAkBv+C,IAAIuY,EAASxf,OAC1CylD,IACA1W,EAAQxqC,OAAyB,KAAhBwqC,EAAQxqC,MAA8CkhD,EAASlhD,MAChFib,EAASH,KAAO6uB,GAAauX,EAASpmC,MACtCG,EAASrxB,MAAQs3D,EAASt3D,UA4E9C,SAASy4D,GAAuB3iD,EAAM+tC,EAAY4P,EAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5F,IAAIvT,EAAU9qC,EAAKQ,IAAIglC,MAAMuI,GAE7B,OADA2P,GAAmB19C,EAAM8qC,EAAS6S,EAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACxD,IAAhBvT,EAAQxqC,MACZqlC,GAAqB3lC,EAAM+tC,GAAY7jD,WACvCwD,EAER,SAASk1D,GAAuB5iD,EAAM+tC,EAAY4P,EAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5F,IAAIvT,EAAU9qC,EAAKQ,IAAIglC,MAAMuI,GAE7B,OADAyR,GAAmBx/C,EAAM8qC,EAAS6S,EAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACxD,IAAhBvT,EAAQxqC,MACZqlC,GAAqB3lC,EAAM+tC,GAAY7jD,WACvCwD,EAER,SAASm1D,GAAwB7iD,GAC7B,OAAO8gD,GAAqBC,GAAYh+B,cAAesjB,GAAoB,KAAM,CAACrmC,IAEtF,SAAS8iD,GAAwB9iD,GAC7B,OAAO8gD,GAAqBC,GAAY/9B,eAAgBsjB,GAAoB,KAAM,CAACtmC,IAEvF,SAAS+iD,GAAiB/iD,GACtB,OAAO8gD,GAAqBC,GAAY3vC,QAASm1B,GAAa,KAAM,CAACvmC,IAEzE,IAQIgjD,GACAC,GACAC,GAVAnC,GACJ,SAAWA,UACPA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAA2B,cAAI,GAAK,gBAChDA,EAAYA,EAA4B,eAAI,GAAK,iBACjDA,EAAYA,EAAqB,QAAI,GAAK,UAC1CA,EAAYA,EAAyB,YAAI,GAAK,cALvCA,EAAX,CAME,IAIF,SAASoC,GAAoBnjD,EAAMG,GAC/B8iD,GAAejjD,EACfkjD,GAAoB/iD,EAExB,SAASijD,GAAiBpjD,EAAMG,EAAWoiC,EAAWyG,GAElD,OADAma,GAAoBnjD,EAAMG,GACnB2gD,GAAqBC,GAAYra,YAAa1mC,EAAKQ,IAAIkmC,YAAa,KAAM,CAAC1mC,EAAMG,EAAWoiC,EAAWyG,IAElH,SAASqa,GAAsBrjD,EAAMsgD,GACjC,GAAiB,IAAbtgD,EAAK0Q,MACL,MAAM22B,GAAmB0Z,GAAYiC,KAGzC,OADAG,GAAoBnjD,EAAMsjD,GAAyBtjD,EAAM,IAClDA,EAAKQ,IAAImmC,iBAChB,SAAgC3mC,EAAMG,EAAWw9C,GAE7C,IADA,IAAIhkD,EAAS,GACJtI,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpCsI,EAAOtI,EAAK,GAAKvI,UAAUuI,GAE/B,IAAIy5C,EAAU9qC,EAAKQ,IAAIglC,MAAMrlC,GAU7B,OATkB,IAAdmgD,EACAiD,GAAwBvjD,EAAM8qC,EAAS6S,EAAUhkD,GAGjD6pD,GAAwBxjD,EAAM8qC,EAAS6S,EAAUhkD,GAEjC,MAAhBmxC,EAAQxqC,OACR6iD,GAAoBnjD,EAAMsjD,GAAyBtjD,EAAMG,IAErC,IAAhB2qC,EAAQxqC,MACZqlC,GAAqB3lC,EAAM8qC,EAAQ3qC,WAAWjW,WAC9CwD,GAlBiDsS,GAqB7D,SAASyjD,GAAoBzjD,EAAMsgD,GAC/B,GAAiB,IAAbtgD,EAAK0Q,MACL,MAAM22B,GAAmB0Z,GAAYiC,KAGzC,OADAG,GAAoBnjD,EAAM0jD,GAA0B1jD,EAAM,IACnDA,EAAKQ,IAAIomC,eAChB,SAAgC5mC,EAAMG,EAAWw9C,GAE7C,IADA,IAAIhkD,EAAS,GACJtI,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpCsI,EAAOtI,EAAK,GAAKvI,UAAUuI,GAE/B,IAAIy5C,EAAU9qC,EAAKQ,IAAIglC,MAAMrlC,GAU7B,OATkB,IAAdmgD,EACAiD,GAAwBvjD,EAAM8qC,EAAS6S,EAAUhkD,GAGjD6pD,GAAwBxjD,EAAM8qC,EAAS6S,EAAUhkD,GAEjC,EAAhBmxC,EAAQxqC,OACR6iD,GAAoBnjD,EAAM0jD,GAA0B1jD,EAAMG,IAEtC,IAAhB2qC,EAAQxqC,MACZqlC,GAAqB3lC,EAAM8qC,EAAQ3qC,WAAWjW,WAC9CwD,GAlB+CsS,GAqB3D,SAASujD,GAAwBvjD,EAAM8qC,EAAS6S,EAAUgG,GAEtD,GADcjG,GAAmBz0D,WAAM,EAAQmB,EAAS,CAAC4V,EAAM8qC,EAAS6S,GAAWgG,IACtE,CACT,IAAIhqD,EAAsB,IAAbgkD,EAA+BgG,EAAY,GAAKA,EAC7D,GAAoB,MAAhB7Y,EAAQxqC,MAAmC,CAE3C,IADA,IAAIsjD,EAAgB,GACXh7D,EAAI,EAAGA,EAAIkiD,EAAQrC,SAAS1/C,OAAQH,IAAK,CAC9C,IAAIwnD,EAAUtF,EAAQrC,SAAS7/C,GAC3BsB,EAAQyP,EAAO/Q,GACC,EAAhBwnD,EAAQ9vC,QACRsjD,GAnjoBer4D,EAmjoByB6kD,EAAQnB,gBAhjoBzD,cADoB1jD,EAAK4xB,QAAQ,QAAS,KAKpCA,QAAQpR,GAAmB,WAEpC,IADA,IAAItiB,EAAI,GACC4H,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpC5H,EAAE4H,GAAMvI,UAAUuI,GAEtB,MAAO,IAAM5H,EAAE,GAAGo6D,kBAwioBF73C,GAA2B9hB,IAGvC,IAAIqlD,EAAQzE,EAAQ59C,OAChBywC,EAAK8H,GAAczlC,EAAMuvC,EAAMpvC,WAAWmpC,cAC9C,GAAKiG,EAAM78B,QAAQnnB,KAMf,IAAK,IAAIo4C,KAAQigB,EAEA,OADT15D,EAAQ05D,EAAcjgB,IAEtB3jC,EAAKwN,SAASoL,aAAa+kB,EAAIgG,EAAMz5C,GAGrC8V,EAAKwN,SAASijC,gBAAgB9S,EAAIgG,QAV1C3jC,EAAKwN,SAASypC,SAAStZ,EAAI,YAAczgB,KAAKphB,UAAU8nD,EAAe,KAAM,KA3joB7F,IAAmCr4D,EA4koBnC,SAASi4D,GAAwBxjD,EAAM8qC,EAAS6S,EAAUhkD,GACtD6lD,GAAmBv2D,WAAM,EAAQmB,EAAS,CAAC4V,EAAM8qC,EAAS6S,GAAWhkD,IAEzE,SAAS2pD,GAAyBtjD,EAAMG,GACpC,IAAK,IAAIvX,EAAIuX,EAAWvX,EAAIoX,EAAKQ,IAAIglC,MAAMz8C,OAAQH,IAAK,CACpD,IAAIkiD,EAAU9qC,EAAKQ,IAAIglC,MAAM58C,GAC7B,GAAoB,MAAhBkiD,EAAQxqC,OAAqCwqC,EAAQrC,UAAYqC,EAAQrC,SAAS1/C,OAClF,OAAOH,EAGf,OAAO,KAEX,SAAS86D,GAA0B1jD,EAAMG,GACrC,IAAK,IAAIvX,EAAIuX,EAAWvX,EAAIoX,EAAKQ,IAAIglC,MAAMz8C,OAAQH,IAAK,CACpD,IAAIkiD,EAAU9qC,EAAKQ,IAAIglC,MAAM58C,GAC7B,GAAqB,EAAhBkiD,EAAQxqC,OAAkCwqC,EAAQrC,UAAYqC,EAAQrC,SAAS1/C,OAChF,OAAOH,EAGf,OAAO,KAEX,IAAIk7D,GAA+B,WAC/B,SAASC,EAAc/jD,EAAMG,GACzB/X,KAAK4X,KAAOA,EACZ5X,KAAK+X,UAAYA,EACA,MAAbA,IACA/X,KAAK+X,UAAYA,EAAY,GAEjC/X,KAAK0iD,QAAU9qC,EAAKQ,IAAIglC,MAAMrlC,GAG9B,IAFA,IAAIovC,EAAQnnD,KAAK0iD,QACbkZ,EAAShkD,EACNuvC,GAAiD,IAAzB,EAAdA,EAAMjvC,QACnBivC,EAAQA,EAAMriD,OAElB,IAAKqiD,EACD,MAAQA,GAASyU,GACbzU,EAAQnG,GAAa4a,GACrBA,EAASA,EAAO92D,OAGxB9E,KAAKmnD,MAAQA,EACbnnD,KAAK47D,OAASA,EA+GlB,OA7GAp8D,OAAO0S,eAAeypD,EAAcz7D,UAAW,eAAgB,CAC3D0a,IAAK,WAED,OAAOyiC,GAAcr9C,KAAK47D,OAAQ57D,KAAKmnD,MAAMpvC,WAAW+O,eAAiB9mB,KAAK4X,MAElFkiB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeypD,EAAcz7D,UAAW,WAAY,CACvD0a,IAAK,WAAc,OAAOyyC,GAAiBrtD,KAAK47D,OAAQ57D,KAAKmnD,QAC7DrtB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeypD,EAAcz7D,UAAW,YAAa,CACxD0a,IAAK,WAAc,OAAO5a,KAAK67D,aAAar6C,WAC5CsY,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeypD,EAAcz7D,UAAW,UAAW,CACtD0a,IAAK,WAAc,OAAO5a,KAAK67D,aAAa30D,SAC5C4yB,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeypD,EAAcz7D,UAAW,iBAAkB,CAC7D0a,IAAK,WACD,IAAI6Z,EAAS,GACb,GAAIz0B,KAAKmnD,MACL,IAAK,IAAI3mD,EAAIR,KAAKmnD,MAAMpvC,UAAY,EAAGvX,GAAKR,KAAKmnD,MAAMpvC,UAAY/X,KAAKmnD,MAAMvE,WAAYpiD,IAAK,CAC3F,IAAIs7D,EAAW97D,KAAK47D,OAAOxjD,IAAIglC,MAAM58C,GAChB,MAAjBs7D,EAAS5jD,OACTuc,EAAO5yB,KAAKi6D,EAAS3oC,SAASxf,OAElCnT,GAAKs7D,EAASlZ,WAGtB,OAAOnuB,GAEXqF,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeypD,EAAcz7D,UAAW,aAAc,CACzD0a,IAAK,WACD,IAAIm+B,EAAa,GACjB,GAAI/4C,KAAKmnD,MAAO,CACZ4U,GAAkB/7D,KAAK47D,OAAQ57D,KAAKmnD,MAAOpO,GAC3C,IAAK,IAAIv4C,EAAIR,KAAKmnD,MAAMpvC,UAAY,EAAGvX,GAAKR,KAAKmnD,MAAMpvC,UAAY/X,KAAKmnD,MAAMvE,WAAYpiD,IAAK,CAC3F,IAAIs7D,EAAW97D,KAAK47D,OAAOxjD,IAAIglC,MAAM58C,GAChB,MAAjBs7D,EAAS5jD,OACT6jD,GAAkB/7D,KAAK47D,OAAQE,EAAU/iB,GAE7Cv4C,GAAKs7D,EAASlZ,YAGtB,OAAO7J,GAEXjf,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeypD,EAAcz7D,UAAW,yBAA0B,CACrE0a,IAAK,WACD,IAAIqtC,EA6DhB,SAAyBrwC,GACrB,KAAOA,IAASwpC,GAAgBxpC,IAC5BA,EAAOA,EAAK9S,OAEhB,OAAI8S,EAAK9S,OACEu4C,GAAczlC,EAAK9S,OAAQk8C,GAAappC,GAAMG,WAElD,KApEcikD,CAAgBh8D,KAAK67D,cAClC,OAAO5T,EAASA,EAAO/G,mBAAgB57C,GAE3Cw0B,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAeypD,EAAcz7D,UAAW,aAAc,CACzD0a,IAAK,WACD,OAA4B,EAArB5a,KAAK0iD,QAAQxqC,MAA2B+oC,GAAWjhD,KAAK4X,KAAM5X,KAAK0iD,SACtEzB,GAAWjhD,KAAK47D,OAAQ57D,KAAKmnD,QAErCrtB,YAAY,EACZC,cAAc,IAElB4hC,EAAcz7D,UAAU8+C,SAAW,SAAUx2C,GAEzC,IADA,IAIIyzD,EACAC,EALA3qD,EAAS,GACJtI,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpCsI,EAAOtI,EAAK,GAAKvI,UAAUuI,GAIN,EAArBjJ,KAAK0iD,QAAQxqC,OACb+jD,EAAaj8D,KAAK4X,KAAKQ,IACvB8jD,EAAel8D,KAAK0iD,QAAQ3qC,YAG5BkkD,EAAaj8D,KAAK47D,OAAOxjD,IACzB8jD,EAAel8D,KAAKmnD,MAAMpvC,WAI9B,IAAIokD,EAoBZ,SAA4BtD,EAAY9gD,GAEpC,IADA,IAAIokD,GAAmB,EACd37D,EAAI,EAAGA,GAAKuX,EAAWvX,IAER,EADNq4D,EAAWzb,MAAM58C,GACnB0X,OACRikD,IAGR,OAAOA,EA5BmBC,CAAmBH,EAAYC,GACjDG,GAAuB,EAW3BJ,EAAWxrD,QAVM,WACb,IAAIkB,EAEJ,QADA0qD,IAC4BF,GAChBxqD,EAAKnJ,EAAQzG,OAAOoF,KAAKtG,MAAM8Q,EAAI3P,EAAS,CAACwG,GAAU+I,IAGxD2tC,KAIXmd,EAAsBF,IACtB3zD,EAAQzG,MAAM,qEACdyG,EAAQzG,MAAMlB,MAAM2H,EAASxG,EAASuP,MAGvCoqD,EAnIuB,GAwJlC,SAASI,GAAkBnkD,EAAM8qC,EAAS3J,GACtC,IAAK,IAAIujB,KAAW5Z,EAAQ3J,WACxBA,EAAWujB,GAAWlK,GAAcx6C,EAAM8qC,EAASA,EAAQ3J,WAAWujB,IAG9E,SAAS5D,GAAqBpyC,EAAQ5jB,EAAI+P,EAAMnB,GAC5C,IAAIirD,EAAY3B,GACZl9C,EAAUm9C,GACV2B,EAAe1B,GACnB,IACIF,GAAiBt0C,EACjB,IAAIra,EAASvJ,EAAG7B,MAAM4R,EAAMnB,GAI5B,OAHAupD,GAAen9C,EACfo9C,GAAoB0B,EACpB5B,GAAiB2B,EACVtwD,EAEX,MAAOxK,GACH,GAvpHKglC,GAupHgBhlC,KAAOo5D,GACxB,MAAMp5D,EAEV,MA7qHR,SAA+BuB,EAAKkE,GAOhC,OANMlE,aAAeH,QAGjBG,EAAM,IAAIH,MAAMG,EAAIC,aAExB67C,GAAiB97C,EAAKkE,GACflE,EAsqHGy5D,CAAsBh7D,EAAGi7D,OAGvC,SAASA,KACL,OAAO7B,GAAe,IAAIa,GAAcb,GAAcC,IAAqB,KAE/E,IAAIvC,GAAuC,WACvC,SAASA,EAAsB3sB,GAC3B5rC,KAAK4rC,SAAWA,EAqBpB,OAnBA2sB,EAAsBr4D,UAAUolB,eAAiB,SAAUgF,EAASqyC,GAChE,OAAO,IAAIC,GAAe58D,KAAK4rC,SAAStmB,eAAegF,EAASqyC,KAEpEpE,EAAsBr4D,UAAUqtB,MAAQ,WAChCvtB,KAAK4rC,SAASre,OACdvtB,KAAK4rC,SAASre,SAGtBgrC,EAAsBr4D,UAAUstB,IAAM,WAC9BxtB,KAAK4rC,SAASpe,KACdxtB,KAAK4rC,SAASpe,OAGtB+qC,EAAsBr4D,UAAU28D,kBAAoB,WAChD,OAAI78D,KAAK4rC,SAASixB,kBACP78D,KAAK4rC,SAASixB,oBAElBx3D,QAAQwD,QAAQ,OAEpB0vD,EAvB+B,GAyBtCqE,GAAgC,WAChC,SAASA,EAAehxB,GACpB5rC,KAAK4rC,SAAWA,EAShB5rC,KAAK88D,oBAAsBJ,GAC3B18D,KAAK6X,KAAO7X,KAAK4rC,SAAS/zB,KAoI9B,OAlIA+kD,EAAe18D,UAAUm+C,mBAAqB,SAAU1iB,GAAiB,OAAO37B,KAAK88D,oBAAoBnhC,IACzGihC,EAAe18D,UAAUinB,YAAc,SAAU9D,IA7nKrD,SAAkCA,GAC9Bg5B,GAAuBtM,OAAO1sB,EAAKq1B,YA6nK/BqkB,CAAyBzgB,GAAaj5B,IAClCrjB,KAAK4rC,SAASzkB,aACdnnB,KAAK4rC,SAASzkB,YAAY9D,IAGlCu5C,EAAe18D,UAAU8oB,QAAU,WAAchpB,KAAK4rC,SAAS5iB,WAC/D4zC,EAAe18D,UAAU09B,cAAgB,SAAUz6B,EAAM65D,GACrD,IAAIznB,EAAKv1C,KAAK4rC,SAAShO,cAAcz6B,EAAM65D,GACvCC,EAAWj9D,KAAKq+C,mBAAmB9I,GACvC,GAAI0nB,EAAU,CACV,IAAIC,EAAU,IAAIrkB,GAAuBtD,EAAI,KAAM0nB,GACnDC,EAAQ/5D,KAAOA,EACfo5C,GAAe2gB,GAEnB,OAAO3nB,GAEXqnB,EAAe18D,UAAU03C,cAAgB,SAAU91C,GAC/C,IAAI+rD,EAAU7tD,KAAK4rC,SAASgM,cAAc91C,GACtCm7D,EAAWj9D,KAAKq+C,mBAAmBwP,GAIvC,OAHIoP,GACA1gB,GAAe,IAAI9D,GAAoBoV,EAAS,KAAMoP,IAEnDpP,GAEX+O,EAAe18D,UAAU4tD,WAAa,SAAUhsD,GAC5C,IAAI4yB,EAAO10B,KAAK4rC,SAASkiB,WAAWhsD,GAChCm7D,EAAWj9D,KAAKq+C,mBAAmB3pB,GAIvC,OAHIuoC,GACA1gB,GAAe,IAAI9D,GAAoB/jB,EAAM,KAAMuoC,IAEhDvoC,GAEXkoC,EAAe18D,UAAUspB,YAAc,SAAU1kB,EAAQ20C,GACrD,IAAIyjB,EAAU5gB,GAAax3C,GACvBq4D,EAAe7gB,GAAa7C,GAC5ByjB,GAAWC,GAAgBD,aAAmBrkB,IAC9CqkB,EAAQpkB,SAASqkB,GAErBn9D,KAAK4rC,SAASpiB,YAAY1kB,EAAQ20C,IAEtCmjB,EAAe18D,UAAU+mB,aAAe,SAAUniB,EAAQ20C,EAAUD,GAChE,IAAI0jB,EAAU5gB,GAAax3C,GACvBq4D,EAAe7gB,GAAa7C,GAC5B2jB,EAAa9gB,GAAa9C,GAC1B0jB,GAAWC,GAAgBD,aAAmBrkB,IAC9CqkB,EAAQj2C,aAAam2C,EAAYD,GAErCn9D,KAAK4rC,SAAS3kB,aAAaniB,EAAQ20C,EAAUD,IAEjDojB,EAAe18D,UAAUgnB,YAAc,SAAUpiB,EAAQu4D,GACrD,IAAIH,EAAU5gB,GAAax3C,GACvBq4D,EAAe7gB,GAAa+gB,GAC5BH,GAAWC,GAAgBD,aAAmBrkB,IAC9CqkB,EAAQh2C,YAAYi2C,GAExBn9D,KAAK4rC,SAAS1kB,YAAYpiB,EAAQu4D,IAEtCT,EAAe18D,UAAU49B,kBAAoB,SAAUspB,EAAgBkW,GACnE,IAAI/nB,EAAKv1C,KAAK4rC,SAAS9N,kBAAkBspB,EAAgBkW,GACrDL,EAAWP,KAIf,OAHIO,GACA1gB,GAAe,IAAI1D,GAAuBtD,EAAI,KAAM0nB,IAEjD1nB,GAEXqnB,EAAe18D,UAAUswB,aAAe,SAAU+kB,EAAIpyC,EAAMrB,EAAOk7D,GAC/D,IAAIE,EAAU5gB,GAAa/G,GACvB2nB,GAAWA,aAAmBrkB,KAE9BqkB,EAAQhtC,WADO8sC,EAAYA,EAAY,IAAM75D,EAAOA,GACrBrB,GAEnC9B,KAAK4rC,SAASpb,aAAa+kB,EAAIpyC,EAAMrB,EAAOk7D,IAEhDJ,EAAe18D,UAAUmoD,gBAAkB,SAAU9S,EAAIpyC,EAAM65D,GAC3D,IAAIE,EAAU5gB,GAAa/G,GACvB2nB,GAAWA,aAAmBrkB,KAE9BqkB,EAAQhtC,WADO8sC,EAAYA,EAAY,IAAM75D,EAAOA,GACrB,MAEnCnD,KAAK4rC,SAASyc,gBAAgB9S,EAAIpyC,EAAM65D,IAE5CJ,EAAe18D,UAAUqoD,SAAW,SAAUhT,EAAIpyC,GAC9C,IAAI+5D,EAAU5gB,GAAa/G,GACvB2nB,GAAWA,aAAmBrkB,KAC9BqkB,EAAQhkB,QAAQ/1C,IAAQ,GAE5BnD,KAAK4rC,SAAS2c,SAAShT,EAAIpyC,IAE/By5D,EAAe18D,UAAUsoD,YAAc,SAAUjT,EAAIpyC,GACjD,IAAI+5D,EAAU5gB,GAAa/G,GACvB2nB,GAAWA,aAAmBrkB,KAC9BqkB,EAAQhkB,QAAQ/1C,IAAQ,GAE5BnD,KAAK4rC,SAAS4c,YAAYjT,EAAIpyC,IAElCy5D,EAAe18D,UAAU0oD,SAAW,SAAUrT,EAAIwG,EAAOj6C,EAAOoW,GAC5D,IAAIglD,EAAU5gB,GAAa/G,GACvB2nB,GAAWA,aAAmBrkB,KAC9BqkB,EAAQ/jB,OAAO4C,GAASj6C,GAE5B9B,KAAK4rC,SAASgd,SAASrT,EAAIwG,EAAOj6C,EAAOoW,IAE7C0kD,EAAe18D,UAAU2oD,YAAc,SAAUtT,EAAIwG,EAAO7jC,GACxD,IAAIglD,EAAU5gB,GAAa/G,GACvB2nB,GAAWA,aAAmBrkB,KAC9BqkB,EAAQ/jB,OAAO4C,GAAS,MAE5B/7C,KAAK4rC,SAASid,YAAYtT,EAAIwG,EAAO7jC,IAEzC0kD,EAAe18D,UAAUwwB,YAAc,SAAU6kB,EAAIpyC,EAAMrB,GACvD,IAAIo7D,EAAU5gB,GAAa/G,GACvB2nB,GAAWA,aAAmBrkB,KAC9BqkB,EAAQzxB,WAAWtoC,GAAQrB,GAE/B9B,KAAK4rC,SAASlb,YAAY6kB,EAAIpyC,EAAMrB,IAExC86D,EAAe18D,UAAU2nD,OAAS,SAAUrvC,EAAQ2hC,EAAWjgB,GAC3D,GAAsB,iBAAX1hB,EAAqB,CAC5B,IAAI0kD,EAAU5gB,GAAa9jC,GACvB0kD,GACAA,EAAQtkB,UAAU/2C,KAAK,IAAI22C,GAAc2B,EAAWjgB,IAG5D,OAAOl6B,KAAK4rC,SAASic,OAAOrvC,EAAQ2hC,EAAWjgB,IAEnD0iC,EAAe18D,UAAU+iB,WAAa,SAAUI,GAAQ,OAAOrjB,KAAK4rC,SAAS3oB,WAAWI,IACxFu5C,EAAe18D,UAAU43C,YAAc,SAAUz0B,GAAQ,OAAOrjB,KAAK4rC,SAASkM,YAAYz0B,IAC1Fu5C,EAAe18D,UAAU2uD,SAAW,SAAUxrC,EAAMvhB,GAAS,OAAO9B,KAAK4rC,SAASijB,SAASxrC,EAAMvhB,IAC1F86D,EAhJwB,GAwKnC,SAASW,GAAsBnmC,EAAc23B,EAAqByO,GAC9D,OAAO,IAAIC,GAAiBrmC,EAAc23B,EAAqByO,GAcnE,IAAIC,GAAkC,SAAU13D,GAE5C,SAAS23D,EAAiB58B,EAAYT,EAAsBs9B,GACxD,IAAIz3D,EAGJH,EAAOnF,KAAKZ,OAASA,KAIrB,OAHAkG,EAAM46B,WAAaA,EACnB56B,EAAMm6B,qBAAuBA,EAC7Bn6B,EAAMy3D,oBAAsBA,EACrBz3D,EAUX,OAnBApG,EAAU49D,EAAkB33D,GAW5B23D,EAAiBx9D,UAAUC,OAAS,SAAU4gC,IAhyBlD,WACI,IAAI2G,GAAJ,CAGAA,IAAc,EACd,IAAIk2B,EAAW39B,KA2CR,CACHyd,eAAgBqd,GAChBpd,eAAgB2a,GAChBn2B,mBAAoBy2B,GACpBhb,oBAAqBkb,GACrBjb,kBAAmBmb,GACnBlb,iBAAkB6b,GAClB5b,sBAAuB6b,GACvB5b,eAAgBgc,GAChB/b,mBAAoBwc,GACpBvc,mBAAoBwc,GACpBvc,YAAawc,GACbtc,mBAAoB,SAAUzmC,EAAMG,GAAa,OAAO,IAAI2jD,GAAc9jD,EAAMG,IAChFumC,YAAa0c,GACbzc,iBAAkB0c,GAClBzc,eAAgB6c,IAtCb,CACH3d,eAAgB,aAChBC,eAAgBwa,GAChBh2B,mBAAoBA,GACpByb,oBAAqBA,GACrBC,kBAAmBA,GACnBC,iBAAkBoB,GAClBnB,sBAAuBmB,GACvBlB,eAAgBkB,GAChBjB,mBAAoBA,GACpBC,mBAAoBA,GACpBC,YAAaA,GACbE,mBAAoB,SAAUzmC,EAAMG,GAAa,OAAO,IAAI2jD,GAAc9jD,EAAMG,IAChFumC,YAAa,SAAU1mC,EAAMG,EAAWoiC,EAAWyG,GAC/C,OAAOhpC,EAAKQ,IAAIkmC,YAAY1mC,EAAMG,EAAWoiC,EAAWyG,IAE5DrC,iBAAkB,SAAU3mC,EAAMsgD,GAAa,OAAOtgD,EAAKQ,IAAImmC,iBAA+B,IAAd2Z,EAAuCqC,GACnHC,GAAwB5iD,IAC5B4mC,eAAgB,SAAU5mC,EAAMsgD,GAAa,OAAOtgD,EAAKQ,IAAIomC,eAA6B,IAAd0Z,EAAuCqC,GAC/GC,GAAwB5iD,KAtChC6lC,GAASC,eAAiBkgB,EAASlgB,eACnCD,GAASE,eAAiBigB,EAASjgB,eACnCF,GAAStb,mBAAqBy7B,EAASz7B,mBACvCsb,GAASG,oBAAsBggB,EAAShgB,oBACxCH,GAASI,kBAAoB+f,EAAS/f,kBACtCJ,GAASK,iBAAmB8f,EAAS9f,iBACrCL,GAASM,sBAAwB6f,EAAS7f,sBAC1CN,GAASO,eAAiB4f,EAAS5f,eACnCP,GAASQ,mBAAqB2f,EAAS3f,mBACvCR,GAASS,mBAAqB0f,EAAS1f,mBACvCT,GAASU,YAAcyf,EAASzf,YAChCV,GAASW,WAAaA,GACtBX,GAASY,mBAAqBuf,EAASvf,mBACvCZ,GAASa,YAAcsf,EAAStf,YAChCb,GAASc,iBAAmBqf,EAASrf,iBACrCd,GAASe,eAAiBof,EAASpf,eACnCf,GAASgB,mBAAqBA,IA2wB1Bof,GAIA,IAAIzlD,EA7BZ,SAAiCA,GAC7B,IAAI4Z,EAAYryB,MAAMywC,KAAKh4B,EAAI4Z,WAC3B4Q,EAAUjjC,MAAMywC,KAAKh4B,EAAIwqB,SACzB0mB,EAAiB,GACrB,IAAK,IAAI/5C,KAAO6I,EAAIkxC,eAChBA,EAAe/5C,GAAO6I,EAAIkxC,eAAe/5C,GAE7C,MAAO,CACHkB,QAAS2H,EAAI3H,QACb84C,OAAQnxC,EAAImxC,OAAQv3B,UAAWA,EAAW4Q,QAASA,EAAS0mB,eAAgBA,GAoBlEwU,CAAwBzb,GAAkBriD,KAAK29D,sBACzD,OAAOlgB,GAASI,kBAAkB79C,KAAK8gC,WAAYC,GAAkBjP,GAASG,KAAMjyB,KAAKqgC,qBAAsBjoB,IAE5GslD,EApB0B,CAqBnCrkC,IM9xvBE0kC,GAAgB,SAASz+D,EAAGC,GAI5B,OAHAw+D,GAAgBv+D,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASy+D,GAAU1+D,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCy+D,GAAcz+D,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,IAAIk+D,GAAW,WAQlB,OAPAA,GAAWz+D,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAqEzB,SAASw9D,GAAS98D,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWf,EAAI,EAChE,OAAIa,EAAUA,EAAET,KAAKQ,GACd,CACHO,KAAM,WAEF,OADIP,GAAKZ,GAAKY,EAAET,SAAQS,OAAI,GACrB,CAAEU,MAAOV,GAAKA,EAAEZ,KAAMoB,MAAOR,KAKzC,SAAS+8D,GAAO/8D,EAAGX,GACtB,IAAIY,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBI,EAAYC,EAA3BjB,EAAIa,EAAET,KAAKQ,GAAOM,EAAK,GAC3B,IACI,WAAc,IAANjB,GAAgBA,KAAM,MAAQe,EAAIhB,EAAEmB,QAAQC,MAAMF,EAAGG,KAAKL,EAAEM,OAExE,MAAOC,GAASN,EAAI,CAAEM,MAAOA,WAEzB,IACQP,IAAMA,EAAEI,OAASP,EAAIb,EAAU,SAAIa,EAAET,KAAKJ,WAExC,GAAIiB,EAAG,MAAMA,EAAEM,OAE7B,OAAOL,EAGJ,SAAS08D,KACZ,IAAK,IAAI18D,EAAK,GAAIlB,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CkB,EAAKA,EAAGO,OAAOk8D,GAAOz9D,UAAUF,KACpC,OAAOkB,EC1HX,IAAI28D,GACJ,SAAWA,UACPA,EAAeA,EAAyB,SAAI,GAAK,WACjDA,EAAeA,EAAmC,mBAAI,GAAK,qBAC3DA,EAAeA,EAA8B,cAAI,GAAK,gBAH/CA,EAAX,CAIE,IACF,SAASC,GAAYC,GACjB,GAAsB,KAAlBA,EAAY,GACZ,MAAO,CAAC,KAAMA,GAElB,IAAIC,EAAaD,EAAY35D,QAAQ,IAAK,GAC1C,IAAmB,GAAf45D,EACA,MAAM,IAAI37D,MAAM,uBAA0B07D,EAAc,iCAE5D,MAAO,CAACA,EAAYl0D,MAAM,EAAGm0D,GAAaD,EAAYl0D,MAAMm0D,EAAa,IAG7E,SAASC,GAAcnwC,GACnB,MAAmC,iBAA5BgwC,GAAYhwC,GAAS,GAGhC,SAASowC,GAAYpwC,GACjB,MAAmC,eAA5BgwC,GAAYhwC,GAAS,GAMhC,SAASqwC,GAAYC,GACjB,OAAoB,OAAbA,EAAoB,KAAON,GAAYM,GAAU,GAE5D,SAASC,GAAezL,EAAQ0L,GAC5B,OAAO1L,EAAS,IAAMA,EAAS,IAAM0L,EAAYA,EAOrD,IAAIC,GAAiB,CACjBC,OAAU,OACVC,OAAU,OACVC,MAAS,OACTC,MAAS,OACTC,MAAS,OACTC,MAAS,OACTC,MAAS,OACTC,OAAU,OACVC,OAAU,OACVC,QAAW,SACXC,MAAS,SACTC,MAAS,SACTC,IAAO,IACPC,IAAO,SACPC,IAAO,SACPC,KAAQ,IACRC,MAAS,OACTC,MAAS,OACTC,MAAS,SACTC,OAAU,OACVC,OAAU,OACVC,KAAQ,OACRC,KAAQ,OACRC,MAAS,SACTC,KAAQ,SACRC,KAAQ,SACRC,OAAU,OACVC,KAAQ,SACRC,IAAO,SACPC,OAAU,OACVC,OAAU,OACVC,MAAS,OACTC,KAAQ,OACRC,IAAO,SACPC,IAAO,SACPC,KAAQ,SACRC,MAAS,SACTC,KAAQ,SACRj3D,KAAQ,OACRk3D,MAAS,SACTC,IAAO,SACPC,OAAU,OACVC,OAAU,SACVC,OAAU,SACVC,KAAQ,SACRC,KAAQ,SACRC,IAAO,OACPC,MAAS,SACTC,MAAS,SACTC,MAAS,SACTC,OAAU,OACVC,OAAU,OACVC,OAAU,OACVC,MAAS,OACTC,MAAS,OACTC,OAAU,OACVC,OAAU,OACV1+D,MAAS,SACT2+D,KAAQ,SACRC,KAAQ,SACRC,QAAW,SACXC,QAAW,SACXC,MAAS,SACTC,IAAO,SACPC,IAAO,SACPC,IAAO,OACPC,IAAO,OACPC,KAAQ,OACRC,KAAQ,OACRC,KAAQ,SACRC,MAAS,SACTC,KAAQ,SACRC,OAAU,SACVC,OAAU,OACVC,OAAU,OACVC,OAAU,OACVC,MAAS,SACTC,MAAS,SACTC,MAAS,SACTC,GAAM,SACNC,GAAM,IACNC,KAAQ,SACRC,KAAQ,SACRC,OAAU,SACVC,OAAU,SACVC,OAAU,OACVC,OAAU,OACVC,MAAS,OACTC,MAAS,OACTC,MAAS,OACTC,OAAU,OACVC,OAAU,OACVC,MAAS,SACTC,MAAS,SACTC,IAAO,SACPC,KAAQ,SACRC,KAAQ,SACRC,OAAU,OACVC,KAAQ,SACRC,KAAQ,OACRC,KAAQ,OACRC,MAAS,SACTC,MAAS,SACTC,OAAU,SACVC,OAAU,SACVC,KAAQ,SACRC,MAAS,OACTC,KAAQ,SACRC,KAAQ,SACRC,MAAS,SACTC,MAAS,SACTC,GAAM,SACNC,OAAU,SACVC,OAAU,SACVC,IAAO,SACPC,IAAO,SACPC,OAAU,SACVC,MAAS,SACTC,GAAM,IACNC,KAAQ,OACRC,MAAS,SACTC,MAAS,OACTC,OAAU,OACVC,MAAS,SACTC,GAAM,SACNC,GAAM,SACNC,MAAS,SACTC,KAAQ,OACRC,MAAS,SACTC,GAAM,SACNC,GAAM,SACNC,IAAO,OACPC,MAAS,SACTC,KAAQ,SACRC,OAAU,OACVC,OAAU,OACVC,GAAM,SACNC,GAAM,SACNC,OAAU,OACVC,OAAU,OACVC,MAAS,OACTC,MAAS,OACTC,MAAS,SACTC,MAAS,SACTC,OAAU,OACVC,OAAU,OACVC,MAAS,SACTC,MAAS,SACTC,MAAS,SACTC,QAAW,SACXC,QAAW,SACXC,MAAS,SACTC,GAAM,SACNC,KAAQ,OACRC,KAAQ,OACRC,OAAU,OACVC,OAAU,OACVC,OAAU,OACVC,OAAU,OACVC,OAAU,SACVC,KAAQ,OACRC,KAAQ,OACRC,KAAQ,OACRC,OAAU,SACVC,KAAQ,SACRC,IAAO,SACPC,IAAO,SACPC,GAAM,SACNC,GAAM,SACNC,IAAO,SACPC,OAAU,OACVC,MAAS,OACTC,MAAS,SACTC,MAAS,SACTC,KAAQ,SACR3kC,KAAQ,SACR4kC,IAAO,SACPC,IAAO,SACPC,KAAQ,IACRC,MAAS,SACTC,KAAQ,SACRC,MAAS,OACTC,KAAQ,SACRC,KAAQ,SACRC,MAAS,SACTC,MAAS,SACTC,KAAQ,SACRC,IAAO,OACPC,OAAU,SACVC,IAAO,SACPC,IAAO,SACPC,IAAO,SACPC,OAAU,SACVC,MAAS,SACTC,MAAS,SACTC,OAAU,SACVC,OAAU,SACVC,KAAQ,SACRC,KAAQ,OACRC,IAAO,OACPC,MAAS,SACTC,MAAS,SACTC,OAAU,SACVC,IAAO,SACPC,OAAU,SACVtnE,IAAO,SACPunE,KAAQ,SACRC,IAAO,SACPC,IAAO,SACPC,KAAQ,OACRC,KAAQ,OACRC,KAAQ,OACRC,KAAQ,SACRC,MAAS,OACTC,IAAO,SACPC,IAAO,SACPC,OAAU,SACVC,MAAS,SACTC,MAAS,SACTC,SAAY,SACZC,OAAU,SACVC,MAAS,OACTC,MAAS,OACTC,MAAS,SACTC,MAAS,OACTC,MAAS,SACTC,OAAU,OACVC,OAAU,OACVC,KAAQ,SACRC,KAAQ,SACRC,MAAS,OACTC,MAAS,OACTC,OAAU,OACVC,OAAU,OACVC,IAAO,OACPC,MAAS,SACTC,QAAW,SACXC,QAAW,SACXC,KAAQ,OACRC,KAAQ,OACRC,OAAU,SACVC,GAAM,SACNC,GAAM,SACNC,OAAU,OACVC,OAAU,OACVC,IAAO,OACPC,KAAQ,OACRC,KAAQ,SACRC,KAAQ,SACRC,KAAQ,SACRC,IAAO,SACPC,KAAQ,UAIRC,GAAe,SACnBzP,GAAqB,KAAIyP,GASzB,IAsCIC,GAGAC,GAzCAC,GAAmC,WACnC,SAASA,EAAkBh9D,GACvB,IAAIg5B,OAAY,IAAPh5B,EAAgB,GAAKA,EAAIi9D,EAAmBjkC,EAAGikC,iBAAkBC,EAAkBlkC,EAAGkkC,gBAAiBC,EAA0BnkC,EAAGmkC,wBAAyBvoB,EAAK5b,EAAGokC,YAAaA,OAAqB,IAAPxoB,EAAgB8X,GAAe2Q,cAAgBzoB,EAAIE,EAAK9b,EAAGskC,eAAgBA,OAAwB,IAAPxoB,GAAwBA,EAAIM,EAAKpc,EAAGukC,OAAQA,OAAgB,IAAPnoB,GAAwBA,EAAIooB,EAAKxkC,EAAGykC,cAAeA,OAAuB,IAAPD,GAAwBA,EACjbjpE,EAAQlG,KACZA,KAAK4uE,iBAAmB,GACxB5uE,KAAKivE,gBAAiB,EACtBjvE,KAAKqvE,cAAe,EAChBT,GAAoBA,EAAiBjuE,OAAS,GAC9CiuE,EAAiBlmE,QAAQ,SAAU4lB,GAAW,OAAOpoB,EAAM0oE,iBAAiBtgD,IAAW,IAE3FtuB,KAAKkvE,OAASA,EACdlvE,KAAKivE,eAAiBA,GAAkBC,EACpCL,GAAmBA,EAAgBluE,OAAS,IAC5CX,KAAK6uE,gBAAkB,GAEvB7uE,KAAKsvE,YAAcT,EAAgB,GACnCA,EAAgBnmE,QAAQ,SAAU4lB,GAAW,OAAOpoB,EAAM2oE,gBAAgBvgD,IAAW,KAEzFtuB,KAAK8uE,wBAA0BA,GAA2B,KAC1D9uE,KAAK+uE,YAAcA,EACnB/uE,KAAKovE,cAAgBA,EAgBzB,OAdAT,EAAkBzuE,UAAUqvE,mBAAqB,SAAU5b,GACvD,IAAK3zD,KAAK6uE,gBACN,OAAO,EAEX,IAAKlb,EACD,OAAO,EAEX,IAAI6b,EAAW7b,EAAc8H,cAE7B,QADoC,aAAb+T,GAA6C,gBAAlB7b,IACY,GAAlC3zD,KAAK6uE,gBAAgBW,IAErDb,EAAkBzuE,UAAUuvE,gBAAkB,SAAUtsE,GACpD,OAAOnD,KAAKkvE,QAAU/rE,EAAKs4D,gBAAiBz7D,KAAK4uE,kBAE9CD,EApC2B,GA0CtC,SAASe,GAAqBphD,GAwD1B,OAvDKogD,KACDD,GAA0B,IAAIE,GAC9BD,GAAkB,CACdiB,KAAQ,IAAIhB,GAAkB,CAAEO,QAAQ,IACxC/zD,KAAQ,IAAIwzD,GAAkB,CAAEO,QAAQ,IACxCU,KAAQ,IAAIjB,GAAkB,CAAEO,QAAQ,IACxCW,MAAS,IAAIlB,GAAkB,CAAEO,QAAQ,IACzCY,KAAQ,IAAInB,GAAkB,CAAEO,QAAQ,IACxCa,IAAO,IAAIpB,GAAkB,CAAEO,QAAQ,IACvC/lE,MAAS,IAAIwlE,GAAkB,CAAEO,QAAQ,IACzCc,MAAS,IAAIrB,GAAkB,CAAEO,QAAQ,IACzCe,GAAM,IAAItB,GAAkB,CAAEO,QAAQ,IACtCgB,GAAM,IAAIvB,GAAkB,CAAEO,QAAQ,IACtCjnE,OAAU,IAAI0mE,GAAkB,CAAEO,QAAQ,IAC1CiB,MAAS,IAAIxB,GAAkB,CAAEO,QAAQ,IACzCkB,IAAO,IAAIzB,GAAkB,CAAEO,QAAQ,IACvCtvE,EAAK,IAAI+uE,GAAkB,CACvBC,iBAAkB,CACd,UAAW,UAAW,QAAS,aAAc,MAAO,KAAM,WAC1D,SAAU,OAAQ,KAAM,KAAM,KAAM,KAAM,KAC1C,KAAM,SAAU,SAAU,KAAM,OAAQ,MAAO,KAC/C,IAAK,MAAO,UAAW,QAAS,MAEpCK,gBAAgB,IAEpBoB,MAAS,IAAI1B,GAAkB,CAAEC,iBAAkB,CAAC,QAAS,WAC7D0B,MAAS,IAAI3B,GAAkB,CAAEC,iBAAkB,CAAC,QAAS,SAAUK,gBAAgB,IACvFsB,MAAS,IAAI5B,GAAkB,CAAEC,iBAAkB,CAAC,SAAUK,gBAAgB,IAC9EuB,GAAM,IAAI7B,GAAkB,CACxBC,iBAAkB,CAAC,MACnBC,gBAAiB,CAAC,QAAS,QAAS,SACpCI,gBAAgB,IAEpBwB,GAAM,IAAI9B,GAAkB,CAAEC,iBAAkB,CAAC,KAAM,MAAOK,gBAAgB,IAC9EyB,GAAM,IAAI/B,GAAkB,CAAEC,iBAAkB,CAAC,KAAM,MAAOK,gBAAgB,IAC9E0B,IAAO,IAAIhC,GAAkB,CAAEE,gBAAiB,CAAC,YAAaK,QAAQ,IACtE0B,IAAO,IAAIjC,GAAkB,CAAEG,wBAAyB,QACxD+B,KAAQ,IAAIlC,GAAkB,CAAEG,wBAAyB,SACzDgC,GAAM,IAAInC,GAAkB,CAAEC,iBAAkB,CAAC,MAAOK,gBAAgB,IACxE8B,GAAM,IAAIpC,GAAkB,CAAEC,iBAAkB,CAAC,KAAM,QACvDoC,GAAM,IAAIrC,GAAkB,CAAEC,iBAAkB,CAAC,KAAM,MAAOK,gBAAgB,IAC9EgC,GAAM,IAAItC,GAAkB,CAAEC,iBAAkB,CAAC,KAAM,KAAM,MAAO,MAAOK,gBAAgB,IAC3FiC,GAAM,IAAIvC,GAAkB,CAAEC,iBAAkB,CAAC,KAAM,KAAM,MAAO,MAAOK,gBAAgB,IAC3FkC,IAAO,IAAIxC,GAAkB,CAAEC,iBAAkB,CAAC,KAAM,MAAO,MAAOK,gBAAgB,IACtFmC,GAAM,IAAIzC,GAAkB,CAAEC,iBAAkB,CAAC,KAAM,KAAM,MAAO,MAAOK,gBAAgB,IAC3FoC,SAAY,IAAI1C,GAAkB,CAAEC,iBAAkB,CAAC,YAAaK,gBAAgB,IACpFqC,OAAU,IAAI3C,GAAkB,CAAEC,iBAAkB,CAAC,SAAU,YAAaK,gBAAgB,IAC5FsC,IAAO,IAAI5C,GAAkB,CAAES,eAAe,IAC9CoC,QAAW,IAAI7C,GAAkB,CAAES,eAAe,IAClDrzB,MAAS,IAAI4yB,GAAkB,CAAEI,YAAa1Q,GAAeoT,WAC7DC,OAAU,IAAI/C,GAAkB,CAAEI,YAAa1Q,GAAeoT,WAC9DE,MAAS,IAAIhD,GAAkB,CAAEI,YAAa1Q,GAAeuT,qBAC7DC,SAAY,IAAIlD,GAAkB,CAAEI,YAAa1Q,GAAeuT,mBAAoBxC,eAAe,MAGpGV,GAAgBpgD,EAAQmtC,gBAAkBgT,GAUrD,IAAIqD,GAAmB,IAAIC,OAAO,8GASlC,KAMIC,GAA6B,WAC7B,SAASA,IACLhyE,KAAKsqB,QAAU,KACftqB,KAAKiyE,WAAa,GAYlBjyE,KAAKysB,MAAQ,GACbzsB,KAAKkyE,aAAe,GAkGxB,OAhGAF,EAAYG,MAAQ,SAAUn5C,GAC1B,IASI4qB,EATAwuB,EAAU,GACVC,EAAa,SAAUx+D,EAAKy+D,GACxBA,EAAOJ,aAAavxE,OAAS,IAAM2xE,EAAOhoD,SAAuC,GAA5BgoD,EAAOL,WAAWtxE,QAChD,GAAvB2xE,EAAO7lD,MAAM9rB,SACb2xE,EAAOhoD,QAAU,KAErBzW,EAAIhS,KAAKywE,IAETC,EAAc,IAAIP,EAElB1+D,EAAUi/D,EACVC,GAAQ,EAEZ,IADAV,GAAiBW,UAAY,EACtB7uB,EAAQkuB,GAAiB/tC,KAAK/K,IAAW,CAC5C,GAAI4qB,EAAM,GAAI,CACV,GAAI4uB,EACA,MAAM,IAAI3vE,MAAM,6CAEpB2vE,GAAQ,EACRl/D,EAAU,IAAI0+D,EACdO,EAAYL,aAAarwE,KAAKyR,GAelC,GAbIswC,EAAM,IACNtwC,EAAQo/D,WAAW9uB,EAAM,IAEzBA,EAAM,IACNtwC,EAAQq/D,aAAa/uB,EAAM,IAE3BA,EAAM,IACNtwC,EAAQs/D,aAAahvB,EAAM,GAAIA,EAAM,IAErCA,EAAM,KACN4uB,GAAQ,EACRl/D,EAAUi/D,GAEV3uB,EAAM,GAAI,CACV,GAAI4uB,EACA,MAAM,IAAI3vE,MAAM,gDAEpBwvE,EAAWD,EAASG,GACpBA,EAAcj/D,EAAU,IAAI0+D,GAIpC,OADAK,EAAWD,EAASG,GACbH,GAEXJ,EAAY9xE,UAAU2yE,kBAAoB,WACtC,OAAO7yE,KAAK8yE,sBAAkD,GAA1B9yE,KAAKiyE,WAAWtxE,QAAoC,GAArBX,KAAKysB,MAAM9rB,QAC7C,IAA7BX,KAAKkyE,aAAavxE,QAE1BqxE,EAAY9xE,UAAU4yE,mBAAqB,WAAc,QAAS9yE,KAAKsqB,SACvE0nD,EAAY9xE,UAAUwyE,WAAa,SAAUpoD,QACzB,IAAZA,IAAsBA,EAAU,MACpCtqB,KAAKsqB,QAAUA,GAGnB0nD,EAAY9xE,UAAU6yE,2BAA6B,WAI/C,IAHA,IAAIzkD,EAAUtuB,KAAKsqB,SAAW,MAC1B0oD,EAAYhzE,KAAKiyE,WAAWtxE,OAAS,EAAI,WAAcX,KAAKiyE,WAAW/uE,KAAK,KAAO,IAAO,GAC1FupB,EAAQ,GACHjsB,EAAI,EAAGA,EAAIR,KAAKysB,MAAM9rB,OAAQH,GAAK,EAGxCisB,GAAS,IAFMzsB,KAAKysB,MAAMjsB,IACY,KAAtBR,KAAKysB,MAAMjsB,EAAI,GAAY,KAAQR,KAAKysB,MAAMjsB,EAAI,GAAK,IAAO,IAGlF,OAAOkvE,GAAqBphD,GAAS4gD,OAAS,IAAM5gD,EAAU0kD,EAAYvmD,EAAQ,KAC9E,IAAM6B,EAAU0kD,EAAYvmD,EAAQ,MAAQ6B,EAAU,KAE9D0jD,EAAY9xE,UAAU+yE,SAAW,WAC7B,IAAIhnE,EAAS,GAIb,OAHIjM,KAAKiyE,WAAWtxE,OAAS,GACzBsL,EAAOpK,KAAK,QAAS7B,KAAKiyE,WAAW/uE,KAAK,MAEvC+I,EAAOhK,OAAOjC,KAAKysB,QAE9BulD,EAAY9xE,UAAU0yE,aAAe,SAAUzvE,EAAMrB,QACnC,IAAVA,IAAoBA,EAAQ,IAChC9B,KAAKysB,MAAM5qB,KAAKsB,EAAMrB,GAASA,EAAM25D,eAAiB,KAE1DuW,EAAY9xE,UAAUyyE,aAAe,SAAUxvE,GAAQnD,KAAKiyE,WAAWpwE,KAAKsB,EAAKs4D,gBACjFuW,EAAY9xE,UAAU+C,SAAW,WAC7B,IAAI4Q,EAAM7T,KAAKsqB,SAAW,GAI1B,GAHItqB,KAAKiyE,YACLjyE,KAAKiyE,WAAWvpE,QAAQ,SAAUwqE,GAAS,OAAOr/D,GAAO,IAAMq/D,IAE/DlzE,KAAKysB,MACL,IAAK,IAAIjsB,EAAI,EAAGA,EAAIR,KAAKysB,MAAM9rB,OAAQH,GAAK,EAAG,CAC3C,IACIsB,EAAQ9B,KAAKysB,MAAMjsB,EAAI,GAC3BqT,GAAO,IAFM7T,KAAKysB,MAAMjsB,IAEDsB,EAAQ,IAAMA,EAAQ,IAAM,IAI3D,OADA9B,KAAKkyE,aAAaxpE,QAAQ,SAAUyqE,GAAe,OAAOt/D,GAAO,QAAUs/D,EAAc,MAClFt/D,GAEJm+D,EAlHqB,GAwH5BoB,GAAiC,WACjC,SAASA,IACLpzE,KAAKqzE,YAAc,IAAIlgE,IACvBnT,KAAKszE,mBAAqB,IAAIngE,IAC9BnT,KAAKuzE,UAAY,IAAIpgE,IACrBnT,KAAKwzE,iBAAmB,IAAIrgE,IAC5BnT,KAAKyzE,cAAgB,IAAItgE,IACzBnT,KAAK0zE,qBAAuB,IAAIvgE,IAChCnT,KAAK2zE,cAAgB,GA+KzB,OA7KAP,EAAgBQ,iBAAmB,SAAU1B,GACzC,IAAI2B,EAAa,IAAIT,EAErB,OADAS,EAAWC,eAAe5B,EAAc,MACjC2B,GAEXT,EAAgBlzE,UAAU4zE,eAAiB,SAAUC,EAAcC,GAC/D,IAAIC,EAAc,KACdF,EAAapzE,OAAS,IACtBszE,EAAc,IAAIC,GAAoBH,GACtC/zE,KAAK2zE,cAAc9xE,KAAKoyE,IAE5B,IAAK,IAAIzzE,EAAI,EAAGA,EAAIuzE,EAAapzE,OAAQH,IACrCR,KAAKm0E,eAAeJ,EAAavzE,GAAIwzE,EAAcC,IAQ3Db,EAAgBlzE,UAAUi0E,eAAiB,SAAU5B,EAAayB,EAAcC,GAC5E,IAAIG,EAAUp0E,KACVsqB,EAAUioD,EAAYjoD,QACtB2nD,EAAaM,EAAYN,WACzBxlD,EAAQ8lD,EAAY9lD,MACpB4nD,EAAa,IAAIC,GAAgB/B,EAAayB,EAAcC,GAUhE,GATI3pD,IACkC,IAAjBmC,EAAM9rB,QAAsC,IAAtBsxE,EAAWtxE,OAE9CX,KAAKu0E,aAAaH,EAAQf,YAAa/oD,EAAS+pD,GAGhDD,EAAUp0E,KAAKw0E,YAAYJ,EAAQd,mBAAoBhpD,IAG3D2nD,EACA,IAAK,IAAIzxE,EAAI,EAAGA,EAAIyxE,EAAWtxE,OAAQH,IAAK,CACxC,IACIk7C,EAAYu2B,EAAWzxE,GADO,IAAjBisB,EAAM9rB,QAAgBH,IAAMyxE,EAAWtxE,OAAS,EAG7DX,KAAKu0E,aAAaH,EAAQb,UAAW73B,EAAW24B,GAGhDD,EAAUp0E,KAAKw0E,YAAYJ,EAAQZ,iBAAkB93B,GAIjE,GAAIjvB,EACA,IAASjsB,EAAI,EAAGA,EAAIisB,EAAM9rB,OAAQH,GAAK,EAAG,CACtC,IACIi0E,EAAShoD,EAAMjsB,GACfsB,EAAQ2qB,EAAMjsB,EAAI,GACtB,GAHiBA,IAAMisB,EAAM9rB,OAAS,EAGtB,CACZ,IAAI+zE,EAAcN,EAAQX,cACtBkB,EAAoBD,EAAY95D,IAAI65D,GACnCE,IACDA,EAAoB,IAAIxhE,IACxBuhE,EAAY3hD,IAAI0hD,EAAQE,IAE5B30E,KAAKu0E,aAAaI,EAAmB7yE,EAAOuyE,OAE3C,CACD,IAAIO,EAAaR,EAAQV,qBACrBmB,EAAmBD,EAAWh6D,IAAI65D,GACjCI,IACDA,EAAmB,IAAI1hE,IACvByhE,EAAW7hD,IAAI0hD,EAAQI,IAE3BT,EAAUp0E,KAAKw0E,YAAYK,EAAkB/yE,MAK7DsxE,EAAgBlzE,UAAUq0E,aAAe,SAAUxxE,EAAKI,EAAMkxE,GAC1D,IAAIS,EAAe/xE,EAAI6X,IAAIzX,GACtB2xE,GAED/xE,EAAIgwB,IAAI5vB,EADR2xE,EAAe,IAGnBA,EAAajzE,KAAKwyE,IAEtBjB,EAAgBlzE,UAAUs0E,YAAc,SAAUzxE,EAAKI,GACnD,IAAIixE,EAAUrxE,EAAI6X,IAAIzX,GAKtB,OAJKixE,IACDA,EAAU,IAAIhB,EACdrwE,EAAIgwB,IAAI5vB,EAAMixE,IAEXA,GASXhB,EAAgBlzE,UAAU0jD,MAAQ,SAAU2uB,EAAawC,GAKrD,IAJA,IAAI9oE,GAAS,EACTqe,EAAUioD,EAAYjoD,QACtB2nD,EAAaM,EAAYN,WACzBxlD,EAAQ8lD,EAAY9lD,MACfjsB,EAAI,EAAGA,EAAIR,KAAK2zE,cAAchzE,OAAQH,IAC3CR,KAAK2zE,cAAcnzE,GAAGw0E,gBAAiB,EAK3C,GAHA/oE,EAASjM,KAAKi1E,eAAej1E,KAAKqzE,YAAa/oD,EAASioD,EAAawC,IAAoB9oE,EACzFA,EAASjM,KAAKk1E,cAAcl1E,KAAKszE,mBAAoBhpD,EAASioD,EAAawC,IACvE9oE,EACAgmE,EACA,IAASzxE,EAAI,EAAGA,EAAIyxE,EAAWtxE,OAAQH,IAAK,CACxC,IAAIk7C,EAAYu2B,EAAWzxE,GAC3ByL,EACIjM,KAAKi1E,eAAej1E,KAAKuzE,UAAW73B,EAAW62B,EAAawC,IAAoB9oE,EACpFA,EACIjM,KAAKk1E,cAAcl1E,KAAKwzE,iBAAkB93B,EAAW62B,EAAawC,IAC9D9oE,EAGhB,GAAIwgB,EACA,IAASjsB,EAAI,EAAGA,EAAIisB,EAAM9rB,OAAQH,GAAK,EAAG,CACtC,IAAI20E,EAAS1oD,EAAMjsB,GACfsB,EAAQ2qB,EAAMjsB,EAAI,GAClBm0E,EAAoB30E,KAAKyzE,cAAc74D,IAAIu6D,GAC3CrzE,IACAmK,EACIjM,KAAKi1E,eAAeN,EAAmB,GAAIpC,EAAawC,IAAoB9oE,GAEpFA,EACIjM,KAAKi1E,eAAeN,EAAmB7yE,EAAOywE,EAAawC,IAAoB9oE,EACnF,IAAI4oE,EAAmB70E,KAAK0zE,qBAAqB94D,IAAIu6D,GACjDrzE,IACAmK,EAASjM,KAAKk1E,cAAcL,EAAkB,GAAItC,EAAawC,IAAoB9oE,GAEvFA,EACIjM,KAAKk1E,cAAcL,EAAkB/yE,EAAOywE,EAAawC,IAAoB9oE,EAGzF,OAAOA,GAGXmnE,EAAgBlzE,UAAU+0E,eAAiB,SAAUlyE,EAAKI,EAAMovE,EAAawC,GACzE,IAAKhyE,GAAuB,iBAATI,EACf,OAAO,EAEX,IAAIiyE,EAAcryE,EAAI6X,IAAIzX,IAAS,GAC/BkyE,EAAkBtyE,EAAI6X,IAAI,KAI9B,GAHIy6D,IACAD,EAAcA,EAAYnzE,OAAOozE,IAEV,IAAvBD,EAAYz0E,OACZ,OAAO,EAIX,IADA,IAAIsL,GAAS,EACJzL,EAAI,EAAGA,EAAI40E,EAAYz0E,OAAQH,IAEpCyL,EADampE,EAAY50E,GACL80E,SAAS/C,EAAawC,IAAoB9oE,EAElE,OAAOA,GAGXmnE,EAAgBlzE,UAAUg1E,cAAgB,SAAUnyE,EAAKI,EAAMovE,EAAawC,GACxE,IAAKhyE,GAAuB,iBAATI,EACf,OAAO,EAEX,IAAIoyE,EAAiBxyE,EAAI6X,IAAIzX,GAC7B,QAAKoyE,GAMEA,EAAe3xB,MAAM2uB,EAAawC,IAEtC3B,EAvLyB,GAyLhCc,GAAqC,WAKrC,OAJA,SAA6B92C,GACzBp9B,KAAKo9B,UAAYA,EACjBp9B,KAAKg1E,gBAAiB,GAHU,GAQpCV,GAAiC,WACjC,SAASA,EAAgBt7C,EAAUw8C,EAAWvB,GAC1Cj0E,KAAKg5B,SAAWA,EAChBh5B,KAAKw1E,UAAYA,EACjBx1E,KAAKi0E,YAAcA,EACnBj0E,KAAKkyE,aAAel5C,EAASk5C,aAgBjC,OAdAoC,EAAgBp0E,UAAUo1E,SAAW,SAAU/C,EAAar4C,GACxD,IAAIjuB,GAAS,EAWb,QAVIjM,KAAKkyE,aAAavxE,OAAS,IAAOX,KAAKi0E,aAAgBj0E,KAAKi0E,YAAYe,iBAExE/oE,GADiBmnE,GAAgBQ,iBAAiB5zE,KAAKkyE,cAClCtuB,MAAM2uB,EAAa,QAExCtmE,IAAUiuB,GAAcl6B,KAAKi0E,aAAgBj0E,KAAKi0E,YAAYe,iBAC1Dh1E,KAAKi0E,cACLj0E,KAAKi0E,YAAYe,gBAAiB,GAEtC96C,EAASl6B,KAAKg5B,SAAUh5B,KAAKw1E,YAE1BvpE,GAEJqoE,EArByB,GA+BhCmB,GAAeC,GAAoB,SAAU,SAAU/hE,GAAS,MAAO,CAAGA,MAAOA,KACjFgiE,GAAuBD,GAAoB,iBAAkB,SAAUllC,GAAQ,MAAO,CAAG1/B,MAAO0/B,EAAM3gC,qBAAiBvK,KACvHswE,GAAkBF,GAAoB,YAAa,SAAUG,GAAiB,MAAO,CAAGA,cAAeA,KACvGC,GAAwBJ,GAAoB,kBAAmB,SAAU18C,EAAUnhB,GAEnF,YADa,IAATA,IAAmBA,EAAO,IACtBomD,GAAS,CAAEjlC,SAAUA,EAAUod,OAAO,EAAO2/B,aAAa,EAAOC,aAAa,GAASn+D,KAE/Fo+D,GAAqBP,GAAoB,eAAgB,SAAU18C,EAAUnhB,GAE7E,YADa,IAATA,IAAmBA,EAAO,IACtBomD,GAAS,CAAEjlC,SAAUA,EAAUod,OAAO,EAAM2/B,aAAa,EAAOC,aAAa,GAAQn+D,KAE7Fq+D,GAAqBR,GAAoB,eAAgB,SAAU18C,EAAUnhB,GAE7E,YADa,IAATA,IAAmBA,EAAO,IACtBomD,GAAS,CAAEjlC,SAAUA,EAAUod,OAAO,EAAO2/B,aAAa,EAAMC,aAAa,GAAQn+D,KAE7Fs+D,GAAkBT,GAAoB,YAAa,SAAU18C,EAAUnhB,GACvE,OAAQomD,GAAS,CAAEjlC,SAAUA,EAAUod,OAAO,EAAM2/B,aAAa,EAAMC,aAAa,GAAQn+D,KAE5Fu+D,GAAkBV,GAAoB,YAAa,SAAUW,GAE7D,YADY,IAARA,IAAkBA,EAAM,IACrBA,IAEPC,GACJ,SAAWliE,UACPA,EAAkBA,EAA4B,SAAI,GAAK,WACvDA,EAAkBA,EAA0B,OAAI,GAAK,SACrDA,EAAkBA,EAAwB,KAAI,GAAK,OACnDA,EAAkBA,EAA6B,UAAI,GAAK,YAJjDA,EAAX,CAKE,IACEmiE,GACJ,SAAWlkE,UACPA,EAAwBA,EAAgC,OAAI,GAAK,SACjEA,EAAwBA,EAAiC,QAAI,GAAK,UAF3DA,EAAX,CAGE,IACEglC,GAAkBq+B,GAAoB,YAAa,SAAUjlC,GAE7D,YADU,IAANA,IAAgBA,EAAI,IAChBwtB,GAAS,CAAEuY,gBAAiBD,GAAwB77D,SAAW+1B,KAEvEgmC,GAAaf,GAAoB,OAAQ,SAAU91E,GAAK,OAAQq+D,GAAS,CAAEyY,MAAM,GAAQ92E,KACzF+2E,GAAcjB,GAAoB,QAAS,SAAUkB,GAAuB,MAAO,CAAGA,oBAAqBA,KAC3GC,GAAenB,GAAoB,SAAU,SAAUkB,GAAuB,MAAO,CAAGA,oBAAqBA,KAC7GE,GAAoBpB,GAAoB,cAAe,SAAUqB,GAAoB,MAAO,CAAGA,iBAAkBA,KACjHC,GAAqBtB,GAAoB,eAAgB,SAAUv7B,EAAW7oC,GAAQ,MAAO,CAAG6oC,UAAWA,EAAW7oC,KAAMA,KAC5H2lE,GAAiBvB,GAAoB,WAAY,SAAU5+C,GAAY,OAAOA,IAC9EogD,GAAmBxB,GAAoB,aAAc,SAAUzrB,GAE/D,YADmB,IAAfA,IAAyBA,EAAa,IACnCA,IAQPktB,GAAiBzB,GAAoB,YACrC0B,GAAa1B,GAAoB,QACjC2B,GAAiB3B,GAAoB,YACrC4B,GAAa5B,GAAoB,QACjC6B,GAAO1/C,SACP2/C,GACJ,SAAWt7C,UACPA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAuB,MAAI,GAAK,QAChDA,EAAgBA,EAAwB,OAAI,GAAK,SACjDA,EAAgBA,EAAqB,IAAI,GAAK,MAC9CA,EAAgBA,EAA8B,aAAI,GAAK,eANhDA,EAAX,CAOE,IACEu7C,GACJ,SAAW76B,UACPA,EAA2BA,EAAkC,MAAI,GAAK,QACtEA,EAA2BA,EAAoC,QAAI,GAAK,UACxEA,EAA2BA,EAAmC,OAAI,GAAK,SAHhEA,EAAX,CAIE,IACF,SAAS84B,GAAoBvyE,EAAMgO,GAC/B,IAAIV,EAAU,WAEV,IADA,IAAIa,EAAO,GACFrI,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpCqI,EAAKrI,GAAMvI,UAAUuI,GAEzB,IAAIsI,EAASJ,EAAQA,EAAMtQ,WAAM,EAAQu9D,GAAS9sD,IAAS,GAC3D,OAAO2sD,GAAS,CAAEjtD,eAAgB7N,GAAQoO,IAI9C,OAFAd,EAAQinE,SAAW,SAAU/rE,GAAO,OAAOA,GAAOA,EAAIqF,iBAAmB7N,GACzEsN,EAAQO,eAAiB7N,EAClBsN,EAmCX,IAuCIknE,GACJ,SAAWA,UACPA,EAAaA,EAAoB,MAAI,GAAK,QADnCA,EAAX,CAEE,IACEC,GAAwB,WACxB,SAAS70C,EAAK80C,QACQ,IAAdA,IAAwBA,EAAY,MACxC73E,KAAK63E,UAAYA,EACZA,IACD73E,KAAK63E,UAAY,IAIzB,OADA90C,EAAK7iC,UAAU43E,YAAc,SAAUC,GAAY,OAA6C,IAAtC/3E,KAAK63E,UAAUjzE,QAAQmzE,IAC1Eh1C,EATgB,GAWvBi1C,GACJ,SAAWA,UACPA,EAAgBA,EAAyB,QAAI,GAAK,UAClDA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAwB,OAAI,GAAK,SACjDA,EAAgBA,EAAqB,IAAI,GAAK,MAC9CA,EAAgBA,EAAwB,OAAI,GAAK,SACjDA,EAAgBA,EAA0B,SAAI,GAAK,WACnDA,EAAgBA,EAA0B,SAAI,GAAK,WACnDA,EAAgBA,EAAsB,KAAI,GAAK,OARxCA,EAAX,CASE,IACEC,GAA6B,SAAUlyE,GAEvC,SAASmyE,EAAY/0E,EAAM00E,QACL,IAAdA,IAAwBA,EAAY,MACxC,IAAI3xE,EAAQH,EAAOnF,KAAKZ,KAAM63E,IAAc73E,KAE5C,OADAkG,EAAM/C,KAAOA,EACN+C,EAKX,OAVA83D,GAAUka,EAAanyE,GAOvBmyE,EAAYh4E,UAAUi4E,UAAY,SAAUC,EAASlxE,GACjD,OAAOkxE,EAAQC,iBAAiBr4E,KAAMkH,IAEnCgxE,EAXqB,CAY9BN,IACEU,GAAgC,SAAUvyE,GAE1C,SAASwyE,EAAez2E,EAAO+1E,EAAWW,QACpB,IAAdX,IAAwBA,EAAY,WACrB,IAAfW,IAAyBA,EAAa,MAC1C,IAAItyE,EAAQH,EAAOnF,KAAKZ,KAAM63E,IAAc73E,KAG5C,OAFAkG,EAAMpE,MAAQA,EACdoE,EAAMsyE,WAAaA,EACZtyE,EAKX,OAZA83D,GAAUua,EAAgBxyE,GAS1BwyE,EAAer4E,UAAUi4E,UAAY,SAAUC,EAASlxE,GACpD,OAAOkxE,EAAQK,oBAAoBz4E,KAAMkH,IAEtCqxE,EAbwB,CAcjCX,IACEc,GAA2B,SAAU3yE,GAErC,SAAS4yE,EAAUC,EAAIf,QACD,IAAdA,IAAwBA,EAAY,MACxC,IAAI3xE,EAAQH,EAAOnF,KAAKZ,KAAM63E,IAAc73E,KAE5C,OADAkG,EAAM0yE,GAAKA,EACJ1yE,EAKX,OAVA83D,GAAU2a,EAAW5yE,GAOrB4yE,EAAUz4E,UAAUi4E,UAAY,SAAUC,EAASlxE,GAC/C,OAAOkxE,EAAQS,eAAe74E,KAAMkH,IAEjCyxE,EAXmB,CAY5Bf,IACEkB,GAAyB,SAAU/yE,GAEnC,SAASgzE,EAAQn3B,EAAWi2B,QACN,IAAdA,IAAwBA,EAAY,MACxC,IAAI3xE,EAAQH,EAAOnF,KAAKZ,KAAM63E,IAAc73E,KAE5C,OADAkG,EAAM07C,UAAYA,GAAa,KACxB17C,EAGX,OARA83D,GAAU+a,EAAShzE,GAOnBgzE,EAAQ74E,UAAUi4E,UAAY,SAAUC,EAASlxE,GAAW,OAAOkxE,EAAQY,aAAah5E,KAAMkH,IACvF6xE,EATiB,CAU1BnB,IACEqB,GAAe,IAAIhB,GAAYD,GAAgBkB,SAC/CC,GAAgB,IAAIlB,GAAYD,GAAgBoB,UAChDC,GAAY,IAAIpB,GAAYD,GAAgBsB,MAO5CC,GACJ,SAAWA,UACPA,EAAeA,EAAuB,OAAI,GAAK,SAC/CA,EAAeA,EAA0B,UAAI,GAAK,YAClDA,EAAeA,EAA0B,UAAI,GAAK,YAClDA,EAAeA,EAA6B,aAAI,GAAK,eACrDA,EAAeA,EAAsB,MAAI,GAAK,QAC9CA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAuB,OAAI,GAAK,SAC/CA,EAAeA,EAAyB,SAAI,GAAK,WACjDA,EAAeA,EAAuB,OAAI,GAAK,SAC/CA,EAAeA,EAAoB,IAAI,GAAK,MAC5CA,EAAeA,EAAmB,GAAI,IAAM,KAC5CA,EAAeA,EAA2B,WAAI,IAAM,aACpDA,EAAeA,EAAsB,MAAI,IAAM,QAC/CA,EAAeA,EAA4B,YAAI,IAAM,cACrDA,EAAeA,EAAuB,OAAI,IAAM,SAChDA,EAAeA,EAA6B,aAAI,IAAM,eAhB/CA,EAAX,CAiBE,IACF,SAASC,GAAqB7J,EAAM8J,GAChC,OAAY,MAAR9J,GAAyB,MAAT8J,EACT9J,GAAQ8J,EAEZ9J,EAAK+J,aAAaD,GAE7B,SAASE,GAAiBhK,EAAM8J,GAC5B,IAAIz1E,EAAM2rE,EAAKhvE,OACf,GAAIqD,IAAQy1E,EAAM94E,OACd,OAAO,EAEX,IAAK,IAAIH,EAAI,EAAGA,EAAIwD,EAAKxD,IACrB,IAAKmvE,EAAKnvE,GAAGk5E,aAAaD,EAAMj5E,IAC5B,OAAO,EAGf,OAAO,EAEX,IAAIo5E,GAA4B,WAC5B,SAASA,EAAWjpE,EAAMkpE,GACtB75E,KAAK2Q,KAAOA,GAAQ,KACpB3Q,KAAK65E,WAAaA,GAAc,KA+EpC,OA7EAD,EAAW15E,UAAU+kC,KAAO,SAAU9hC,EAAM02E,GACxC,OAAO,IAAIC,GAAa95E,KAAMmD,EAAM,KAAM02E,IAE9CD,EAAW15E,UAAUqP,IAAM,SAAUxL,EAAO4M,EAAMkpE,GAC9C,OAAO,IAAIE,GAAY/5E,KAAM+D,EAAO4M,EAAMkpE,IAE9CD,EAAW15E,UAAU85E,WAAa,SAAU72E,EAAM6zD,EAAQ6iB,GACtD,OAAO,IAAII,GAAiBj6E,KAAMmD,EAAM6zD,EAAQ,KAAM6iB,IAE1DD,EAAW15E,UAAUg6E,OAAS,SAAUljB,EAAQ6iB,GAC5C,OAAO,IAAIM,GAAmBn6E,KAAMg3D,EAAQ,KAAM6iB,IAEtDD,EAAW15E,UAAUk6E,YAAc,SAAUpjB,EAAQrmD,EAAMkpE,GACvD,OAAO,IAAIQ,GAAgBr6E,KAAMg3D,EAAQrmD,EAAMkpE,IAEnDD,EAAW15E,UAAUo6E,YAAc,SAAUC,EAAUC,EAAWX,GAE9D,YADkB,IAAdW,IAAwBA,EAAY,MACjC,IAAIC,GAAgBz6E,KAAMu6E,EAAUC,EAAW,KAAMX,IAEhED,EAAW15E,UAAUw6E,OAAS,SAAUC,EAAKd,GACzC,OAAO,IAAIe,GAAmBrB,GAAesB,OAAQ76E,KAAM26E,EAAK,KAAMd,IAE1ED,EAAW15E,UAAU46E,UAAY,SAAUH,EAAKd,GAC5C,OAAO,IAAIe,GAAmBrB,GAAewB,UAAW/6E,KAAM26E,EAAK,KAAMd,IAE7ED,EAAW15E,UAAU86E,UAAY,SAAUL,EAAKd,GAC5C,OAAO,IAAIe,GAAmBrB,GAAe0B,UAAWj7E,KAAM26E,EAAK,KAAMd,IAE7ED,EAAW15E,UAAUg7E,aAAe,SAAUP,EAAKd,GAC/C,OAAO,IAAIe,GAAmBrB,GAAe4B,aAAcn7E,KAAM26E,EAAK,KAAMd,IAEhFD,EAAW15E,UAAUumE,MAAQ,SAAUkU,EAAKd,GACxC,OAAO,IAAIe,GAAmBrB,GAAe6B,MAAOp7E,KAAM26E,EAAK,KAAMd,IAEzED,EAAW15E,UAAUm7E,KAAO,SAAUV,EAAKd,GACvC,OAAO,IAAIe,GAAmBrB,GAAe+B,KAAMt7E,KAAM26E,EAAK,KAAMd,IAExED,EAAW15E,UAAU+hE,OAAS,SAAU0Y,EAAKd,GACzC,OAAO,IAAIe,GAAmBrB,GAAegC,OAAQv7E,KAAM26E,EAAK,KAAMd,IAE1ED,EAAW15E,UAAUs7E,SAAW,SAAUb,EAAKd,GAC3C,OAAO,IAAIe,GAAmBrB,GAAekC,SAAUz7E,KAAM26E,EAAK,KAAMd,IAE5ED,EAAW15E,UAAUw7E,OAAS,SAAUf,EAAKd,GACzC,OAAO,IAAIe,GAAmBrB,GAAeoC,OAAQ37E,KAAM26E,EAAK,KAAMd,IAE1ED,EAAW15E,UAAU2/D,IAAM,SAAU8a,EAAKd,GACtC,OAAO,IAAIe,GAAmBrB,GAAeqC,IAAK57E,KAAM26E,EAAK,KAAMd,IAEvED,EAAW15E,UAAU27E,WAAa,SAAUlB,EAAKd,EAAYiC,GAEzD,YADe,IAAXA,IAAqBA,GAAS,GAC3B,IAAIlB,GAAmBrB,GAAewC,WAAY/7E,KAAM26E,EAAK,KAAMd,EAAYiC,IAE1FlC,EAAW15E,UAAUooE,GAAK,SAAUqS,EAAKd,GACrC,OAAO,IAAIe,GAAmBrB,GAAeyC,GAAIh8E,KAAM26E,EAAK,KAAMd,IAEtED,EAAW15E,UAAU+7E,MAAQ,SAAUtB,EAAKd,GACxC,OAAO,IAAIe,GAAmBrB,GAAe2C,MAAOl8E,KAAM26E,EAAK,KAAMd,IAEzED,EAAW15E,UAAUi8E,YAAc,SAAUxB,EAAKd,GAC9C,OAAO,IAAIe,GAAmBrB,GAAe6C,YAAap8E,KAAM26E,EAAK,KAAMd,IAE/ED,EAAW15E,UAAUm8E,OAAS,SAAU1B,EAAKd,GACzC,OAAO,IAAIe,GAAmBrB,GAAe+C,OAAQt8E,KAAM26E,EAAK,KAAMd,IAE1ED,EAAW15E,UAAUq8E,aAAe,SAAU5B,EAAKd,GAC/C,OAAO,IAAIe,GAAmBrB,GAAeiD,aAAcx8E,KAAM26E,EAAK,KAAMd,IAEhFD,EAAW15E,UAAUu8E,QAAU,SAAU5C,GAGrC,OAAO75E,KAAK06E,OAAOgC,GAAiB7C,IAExCD,EAAW15E,UAAUy8E,KAAO,SAAUhsE,EAAMkpE,GACxC,OAAO,IAAI+C,GAAS58E,KAAM2Q,EAAMkpE,IAEpCD,EAAW15E,UAAU28E,OAAS,WAAc,OAAO,IAAIC,GAAoB98E,KAAM,OAC1E45E,EAlFoB,GAoF3BmD,GACJ,SAAWA,UACPA,EAAWA,EAAiB,KAAI,GAAK,OACrCA,EAAWA,EAAkB,MAAI,GAAK,QACtCA,EAAWA,EAAuB,WAAI,GAAK,aAC3CA,EAAWA,EAAuB,WAAI,GAAK,aAJpCA,EAAX,CAKE,IACEC,GAA6B,SAAUj3E,GAEvC,SAASk3E,EAAY95E,EAAMwN,EAAMkpE,GAC7B,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMkpE,IAAe75E,KASnD,MARoB,iBAATmD,GACP+C,EAAM/C,KAAOA,EACb+C,EAAMg3E,QAAU,OAGhBh3E,EAAM/C,KAAO,KACb+C,EAAMg3E,QAAU/5E,GAEb+C,EAeX,OA1BA83D,GAAUif,EAAal3E,GAavBk3E,EAAY/8E,UAAUw5E,aAAe,SAAUj4E,GAC3C,OAAOA,aAAaw7E,GAAej9E,KAAKmD,OAAS1B,EAAE0B,MAAQnD,KAAKk9E,UAAYz7E,EAAEy7E,SAElFD,EAAY/8E,UAAUi9E,WAAa,WAAc,OAAO,GACxDF,EAAY/8E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACvD,OAAOkxE,EAAQiF,iBAAiBr9E,KAAMkH,IAE1C+1E,EAAY/8E,UAAU6yB,IAAM,SAAUjxB,GAClC,IAAK9B,KAAKmD,KACN,MAAM,IAAIN,MAAM,qBAAuB7C,KAAKk9E,QAAU,4BAE1D,OAAO,IAAII,GAAat9E,KAAKmD,KAAMrB,EAAO,KAAM9B,KAAK65E,aAElDoD,EA3BqB,CA4B9BrD,IACE2D,GAA4B,SAAUx3E,GAEtC,SAASy3E,EAAWC,EAAM9sE,EAAMkpE,GAC5B,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMkpE,IAAe75E,KAEnD,OADAkG,EAAMu3E,KAAOA,EACNv3E,EASX,OAbA83D,GAAUwf,EAAYz3E,GAMtBy3E,EAAWt9E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACtD,OAAOkxE,EAAQsF,gBAAgB19E,KAAMkH,IAEzCs2E,EAAWt9E,UAAUw5E,aAAe,SAAUj4E,GAC1C,OAAOA,aAAa+7E,GAAc/7E,EAAEg8E,KAAK/D,aAAa15E,KAAKy9E,OAE/DD,EAAWt9E,UAAUi9E,WAAa,WAAc,OAAOn9E,KAAKy9E,KAAKN,cAC1DK,EAdoB,CAe7B5D,IAiBE0D,GAA8B,SAAUv3E,GAExC,SAAS43E,EAAax6E,EAAMrB,EAAO6O,EAAMkpE,GACrC,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,GAAQ7O,EAAM6O,KAAMkpE,IAAe75E,KAGjE,OAFAkG,EAAM/C,KAAOA,EACb+C,EAAMpE,MAAQA,EACPoE,EAaX,OAlBA83D,GAAU2f,EAAc53E,GAOxB43E,EAAaz9E,UAAUw5E,aAAe,SAAUj4E,GAC5C,OAAOA,aAAak8E,GAAgB39E,KAAKmD,OAAS1B,EAAE0B,MAAQnD,KAAK8B,MAAM43E,aAAaj4E,EAAEK,QAE1F67E,EAAaz9E,UAAUi9E,WAAa,WAAc,OAAO,GACzDQ,EAAaz9E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACxD,OAAOkxE,EAAQwF,kBAAkB59E,KAAMkH,IAE3Cy2E,EAAaz9E,UAAU29E,WAAa,SAAUltE,EAAMknE,GAChD,OAAO,IAAIiG,GAAe99E,KAAKmD,KAAMnD,KAAK8B,MAAO6O,EAAMknE,EAAW73E,KAAK65E,aAE3E8D,EAAaz9E,UAAU69E,YAAc,WAAc,OAAO/9E,KAAK69E,WAAW1E,GAAe,CAAC6E,GAAaC,SAChGN,EAnBsB,CAoB/B/D,IACEsE,GAA8B,SAAUn4E,GAExC,SAASo4E,EAAaC,EAAUr6E,EAAOjC,EAAO6O,EAAMkpE,GAChD,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,GAAQ7O,EAAM6O,KAAMkpE,IAAe75E,KAIjE,OAHAkG,EAAMk4E,SAAWA,EACjBl4E,EAAMnC,MAAQA,EACdmC,EAAMpE,MAAQA,EACPoE,EAUX,OAhBA83D,GAAUmgB,EAAcp4E,GAQxBo4E,EAAaj+E,UAAUw5E,aAAe,SAAUj4E,GAC5C,OAAOA,aAAa08E,GAAgBn+E,KAAKo+E,SAAS1E,aAAaj4E,EAAE28E,WAC7Dp+E,KAAK+D,MAAM21E,aAAaj4E,EAAEsC,QAAU/D,KAAK8B,MAAM43E,aAAaj4E,EAAEK,QAEtEq8E,EAAaj+E,UAAUi9E,WAAa,WAAc,OAAO,GACzDgB,EAAaj+E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACxD,OAAOkxE,EAAQiG,kBAAkBr+E,KAAMkH,IAEpCi3E,EAjBsB,CAkB/BvE,IACE0E,GAA+B,SAAUv4E,GAEzC,SAASw4E,EAAcH,EAAUj7E,EAAMrB,EAAO6O,EAAMkpE,GAChD,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,GAAQ7O,EAAM6O,KAAMkpE,IAAe75E,KAIjE,OAHAkG,EAAMk4E,SAAWA,EACjBl4E,EAAM/C,KAAOA,EACb+C,EAAMpE,MAAQA,EACPoE,EAUX,OAhBA83D,GAAUugB,EAAex4E,GAQzBw4E,EAAcr+E,UAAUw5E,aAAe,SAAUj4E,GAC7C,OAAOA,aAAa88E,GAAiBv+E,KAAKo+E,SAAS1E,aAAaj4E,EAAE28E,WAC9Dp+E,KAAKmD,OAAS1B,EAAE0B,MAAQnD,KAAK8B,MAAM43E,aAAaj4E,EAAEK,QAE1Dy8E,EAAcr+E,UAAUi9E,WAAa,WAAc,OAAO,GAC1DoB,EAAcr+E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACzD,OAAOkxE,EAAQoG,mBAAmBx+E,KAAMkH,IAErCq3E,EAjBuB,CAkBhC3E,IACE6E,GACJ,SAAWA,UACPA,EAAcA,EAA2B,YAAI,GAAK,cAClDA,EAAcA,EAAmC,oBAAI,GAAK,sBAC1DA,EAAcA,EAAoB,KAAI,GAAK,OAHpCA,EAAX,CAIE,IACExE,GAAkC,SAAUl0E,GAE5C,SAAS24E,EAAiBN,EAAU34C,EAAQn0B,EAAMX,EAAMkpE,GACpD,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMkpE,IAAe75E,KAWnD,OAVAkG,EAAMk4E,SAAWA,EACjBl4E,EAAMoL,KAAOA,EACS,iBAAXm0B,GACPv/B,EAAM/C,KAAOsiC,EACbv/B,EAAMg3E,QAAU,OAGhBh3E,EAAM/C,KAAO,KACb+C,EAAMg3E,QAAUz3C,GAEbv/B,EAUX,OAvBA83D,GAAU0gB,EAAkB34E,GAe5B24E,EAAiBx+E,UAAUw5E,aAAe,SAAUj4E,GAChD,OAAOA,aAAai9E,GAAoB1+E,KAAKo+E,SAAS1E,aAAaj4E,EAAE28E,WACjEp+E,KAAKmD,OAAS1B,EAAE0B,MAAQnD,KAAKk9E,UAAYz7E,EAAEy7E,SAAWvD,GAAiB35E,KAAKsR,KAAM7P,EAAE6P,OAE5FotE,EAAiBx+E,UAAUi9E,WAAa,WAAc,OAAO,GAC7DuB,EAAiBx+E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GAC5D,OAAOkxE,EAAQuG,sBAAsB3+E,KAAMkH,IAExCw3E,EAxB0B,CAyBnC9E,IACEO,GAAoC,SAAUp0E,GAE9C,SAAS64E,EAAmBl8E,EAAI4O,EAAMX,EAAMkpE,EAAYnD,QACvC,IAATA,IAAmBA,GAAO,GAC9B,IAAIxwE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMkpE,IAAe75E,KAInD,OAHAkG,EAAMxD,GAAKA,EACXwD,EAAMoL,KAAOA,EACbpL,EAAMwwE,KAAOA,EACNxwE,EAUX,OAjBA83D,GAAU4gB,EAAoB74E,GAS9B64E,EAAmB1+E,UAAUw5E,aAAe,SAAUj4E,GAClD,OAAOA,aAAam9E,GAAsB5+E,KAAK0C,GAAGg3E,aAAaj4E,EAAEiB,KAC7Di3E,GAAiB35E,KAAKsR,KAAM7P,EAAE6P,OAAStR,KAAK02E,OAASj1E,EAAEi1E,MAE/DkI,EAAmB1+E,UAAUi9E,WAAa,WAAc,OAAO,GAC/DyB,EAAmB1+E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GAC9D,OAAOkxE,EAAQyG,wBAAwB7+E,KAAMkH,IAE1C03E,EAlB4B,CAmBrChF,IACES,GAAiC,SAAUt0E,GAE3C,SAAS+4E,EAAgBC,EAAWztE,EAAMX,EAAMkpE,GAC5C,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMkpE,IAAe75E,KAGnD,OAFAkG,EAAM64E,UAAYA,EAClB74E,EAAMoL,KAAOA,EACNpL,EAUX,OAfA83D,GAAU8gB,EAAiB/4E,GAO3B+4E,EAAgB5+E,UAAUw5E,aAAe,SAAUj4E,GAC/C,OAAOA,aAAaq9E,GAAmB9+E,KAAK++E,UAAUrF,aAAaj4E,EAAEs9E,YACjEpF,GAAiB35E,KAAKsR,KAAM7P,EAAE6P,OAEtCwtE,EAAgB5+E,UAAUi9E,WAAa,WAAc,OAAO,GAC5D2B,EAAgB5+E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GAC3D,OAAOkxE,EAAQ4G,qBAAqBh/E,KAAMkH,IAEvC43E,EAhByB,CAiBlClF,IACEqF,GAA6B,SAAUl5E,GAEvC,SAASm5E,EAAYp9E,EAAO6O,EAAMkpE,GAC9B,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMkpE,IAAe75E,KAEnD,OADAkG,EAAMpE,MAAQA,EACPoE,EASX,OAbA83D,GAAUkhB,EAAan5E,GAMvBm5E,EAAYh/E,UAAUw5E,aAAe,SAAUj4E,GAC3C,OAAOA,aAAay9E,GAAel/E,KAAK8B,QAAUL,EAAEK,OAExDo9E,EAAYh/E,UAAUi9E,WAAa,WAAc,OAAO,GACxD+B,EAAYh/E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACvD,OAAOkxE,EAAQ+G,iBAAiBn/E,KAAMkH,IAEnCg4E,EAdqB,CAe9BtF,IACEwF,GAA8B,SAAUr5E,GAExC,SAASs5E,EAAav9E,EAAO6O,EAAM6nE,EAAYqB,QACxB,IAAfrB,IAAyBA,EAAa,MAC1C,IAAItyE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMkpE,IAAe75E,KAGnD,OAFAkG,EAAMpE,MAAQA,EACdoE,EAAMsyE,WAAaA,EACZtyE,EAUX,OAhBA83D,GAAUqhB,EAAct5E,GAQxBs5E,EAAan/E,UAAUw5E,aAAe,SAAUj4E,GAC5C,OAAOA,aAAa49E,GAAgBr/E,KAAK8B,MAAMqB,OAAS1B,EAAEK,MAAMqB,MAC5DnD,KAAK8B,MAAMw9E,aAAe79E,EAAEK,MAAMw9E,YAAct/E,KAAK8B,MAAMikC,UAAYtkC,EAAEK,MAAMikC,SAEvFs5C,EAAan/E,UAAUi9E,WAAa,WAAc,OAAO,GACzDkC,EAAan/E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACxD,OAAOkxE,EAAQmH,kBAAkBv/E,KAAMkH,IAEpCm4E,EAjBsB,CAkB/BzF,IASEa,GAAiC,SAAU10E,GAE3C,SAASy5E,EAAgBC,EAAWlF,EAAUC,EAAW7pE,EAAMkpE,QACzC,IAAdW,IAAwBA,EAAY,MACxC,IAAIt0E,EAAQH,EAAOnF,KAAKZ,KAAM2Q,GAAQ4pE,EAAS5pE,KAAMkpE,IAAe75E,KAIpE,OAHAkG,EAAMu5E,UAAYA,EAClBv5E,EAAMs0E,UAAYA,EAClBt0E,EAAMq0E,SAAWA,EACVr0E,EAUX,OAjBA83D,GAAUwhB,EAAiBz5E,GAS3By5E,EAAgBt/E,UAAUw5E,aAAe,SAAUj4E,GAC/C,OAAOA,aAAa+9E,GAAmBx/E,KAAKy/E,UAAU/F,aAAaj4E,EAAEg+E,YACjEz/E,KAAKu6E,SAASb,aAAaj4E,EAAE84E,WAAaf,GAAqBx5E,KAAKw6E,UAAW/4E,EAAE+4E,YAEzFgF,EAAgBt/E,UAAUi9E,WAAa,WAAc,OAAO,GAC5DqC,EAAgBt/E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GAC3D,OAAOkxE,EAAQsH,qBAAqB1/E,KAAMkH,IAEvCs4E,EAlByB,CAmBlC5F,IACE+F,GAAyB,SAAU55E,GAEnC,SAAS65E,EAAQH,EAAW5F,GACxB,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAMq5E,GAAWQ,IAAe75E,KAExD,OADAkG,EAAMu5E,UAAYA,EACXv5E,EASX,OAbA83D,GAAU4hB,EAAS75E,GAMnB65E,EAAQ1/E,UAAUw5E,aAAe,SAAUj4E,GACvC,OAAOA,aAAam+E,GAAW5/E,KAAKy/E,UAAU/F,aAAaj4E,EAAEg+E,YAEjEG,EAAQ1/E,UAAUi9E,WAAa,WAAc,OAAO,GACpDyC,EAAQ1/E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACnD,OAAOkxE,EAAQyH,aAAa7/E,KAAMkH,IAE/B04E,EAdiB,CAe1BhG,IACEkG,GAA+B,SAAU/5E,GAEzC,SAASg6E,EAAcN,EAAW5F,GAC9B,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAMy/E,EAAU9uE,KAAMkpE,IAAe75E,KAE7D,OADAkG,EAAMu5E,UAAYA,EACXv5E,EASX,OAbA83D,GAAU+hB,EAAeh6E,GAMzBg6E,EAAc7/E,UAAUw5E,aAAe,SAAUj4E,GAC7C,OAAOA,aAAas+E,GAAiB//E,KAAKy/E,UAAU/F,aAAaj4E,EAAEg+E,YAEvEM,EAAc7/E,UAAUi9E,WAAa,WAAc,OAAO,GAC1D4C,EAAc7/E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACzD,OAAOkxE,EAAQ4H,uBAAuBhgF,KAAMkH,IAEzC64E,EAduB,CAehCnG,IACEgD,GAA0B,SAAU72E,GAEpC,SAASk6E,EAASn+E,EAAO6O,EAAMkpE,GAC3B,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMkpE,IAAe75E,KAEnD,OADAkG,EAAMpE,MAAQA,EACPoE,EASX,OAbA83D,GAAUiiB,EAAUl6E,GAMpBk6E,EAAS//E,UAAUw5E,aAAe,SAAUj4E,GACxC,OAAOA,aAAaw+E,GAAYjgF,KAAK8B,MAAM43E,aAAaj4E,EAAEK,QAE9Dm+E,EAAS//E,UAAUi9E,WAAa,WAAc,OAAO,GACrD8C,EAAS//E,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACpD,OAAOkxE,EAAQ8H,cAAclgF,KAAMkH,IAEhC+4E,EAdkB,CAe3BrG,IACEuG,GAAyB,WACzB,SAASA,EAAQh9E,EAAMwN,QACN,IAATA,IAAmBA,EAAO,MAC9B3Q,KAAKmD,KAAOA,EACZnD,KAAK2Q,KAAOA,EAGhB,OADAwvE,EAAQjgF,UAAUw5E,aAAe,SAAU1J,GAAS,OAAOhwE,KAAKmD,OAAS6sE,EAAM7sE,MACxEg9E,EAPiB,GASxBC,GAA8B,SAAUr6E,GAExC,SAASs6E,EAAarpB,EAAQspB,EAAY3vE,EAAMkpE,EAAY12E,GACxD,IAAI+C,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMkpE,IAAe75E,KAInD,OAHAkG,EAAM8wD,OAASA,EACf9wD,EAAMo6E,WAAaA,EACnBp6E,EAAM/C,KAAOA,EACN+C,EAcX,OApBA83D,GAAUqiB,EAAct6E,GAQxBs6E,EAAangF,UAAUw5E,aAAe,SAAUj4E,GAC5C,OAAOA,aAAa4+E,GAAgB1G,GAAiB35E,KAAKg3D,OAAQv1D,EAAEu1D,SAChE2iB,GAAiB35E,KAAKsgF,WAAY7+E,EAAE6+E,aAE5CD,EAAangF,UAAUi9E,WAAa,WAAc,OAAO,GACzDkD,EAAangF,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACxD,OAAOkxE,EAAQmI,kBAAkBvgF,KAAMkH,IAE3Cm5E,EAAangF,UAAU29E,WAAa,SAAU16E,EAAM00E,GAEhD,YADkB,IAAdA,IAAwBA,EAAY,MACjC,IAAI2I,GAAoBr9E,EAAMnD,KAAKg3D,OAAQh3D,KAAKsgF,WAAYtgF,KAAK2Q,KAAMknE,EAAW73E,KAAK65E,aAE3FwG,EArBsB,CAsB/BzG,IACEgB,GAAoC,SAAU70E,GAE9C,SAAS06E,EAAmBz4E,EAAU04E,EAAK/F,EAAKhqE,EAAMkpE,EAAYiC,QAC/C,IAAXA,IAAqBA,GAAS,GAClC,IAAI51E,EAAQH,EAAOnF,KAAKZ,KAAM2Q,GAAQ+vE,EAAI/vE,KAAMkpE,IAAe75E,KAK/D,OAJAkG,EAAM8B,SAAWA,EACjB9B,EAAMy0E,IAAMA,EACZz0E,EAAM41E,OAASA,EACf51E,EAAMw6E,IAAMA,EACLx6E,EAUX,OAlBA83D,GAAUyiB,EAAoB16E,GAU9B06E,EAAmBvgF,UAAUw5E,aAAe,SAAUj4E,GAClD,OAAOA,aAAag/E,GAAsBzgF,KAAKgI,WAAavG,EAAEuG,UAC1DhI,KAAK0gF,IAAIhH,aAAaj4E,EAAEi/E,MAAQ1gF,KAAK26E,IAAIjB,aAAaj4E,EAAEk5E,MAEhE8F,EAAmBvgF,UAAUi9E,WAAa,WAAc,OAAO,GAC/DsD,EAAmBvgF,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GAC9D,OAAOkxE,EAAQuI,wBAAwB3gF,KAAMkH,IAE1Cu5E,EAnB4B,CAoBrC7G,IACEE,GAA8B,SAAU/zE,GAExC,SAAS66E,EAAaxC,EAAUj7E,EAAMwN,EAAMkpE,GACxC,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMkpE,IAAe75E,KAGnD,OAFAkG,EAAMk4E,SAAWA,EACjBl4E,EAAM/C,KAAOA,EACN+C,EAaX,OAlBA83D,GAAU4iB,EAAc76E,GAOxB66E,EAAa1gF,UAAUw5E,aAAe,SAAUj4E,GAC5C,OAAOA,aAAam/E,GAAgB5gF,KAAKo+E,SAAS1E,aAAaj4E,EAAE28E,WAC7Dp+E,KAAKmD,OAAS1B,EAAE0B,MAExBy9E,EAAa1gF,UAAUi9E,WAAa,WAAc,OAAO,GACzDyD,EAAa1gF,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACxD,OAAOkxE,EAAQyI,kBAAkB7gF,KAAMkH,IAE3C05E,EAAa1gF,UAAU6yB,IAAM,SAAUjxB,GACnC,OAAO,IAAIw8E,GAAct+E,KAAKo+E,SAAUp+E,KAAKmD,KAAMrB,EAAO,KAAM9B,KAAK65E,aAElE+G,EAnBsB,CAoB/BhH,IACEG,GAA6B,SAAUh0E,GAEvC,SAAS+6E,EAAY1C,EAAUr6E,EAAO4M,EAAMkpE,GACxC,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMkpE,IAAe75E,KAGnD,OAFAkG,EAAMk4E,SAAWA,EACjBl4E,EAAMnC,MAAQA,EACPmC,EAaX,OAlBA83D,GAAU8iB,EAAa/6E,GAOvB+6E,EAAY5gF,UAAUw5E,aAAe,SAAUj4E,GAC3C,OAAOA,aAAaq/E,GAAe9gF,KAAKo+E,SAAS1E,aAAaj4E,EAAE28E,WAC5Dp+E,KAAK+D,MAAM21E,aAAaj4E,EAAEsC,QAElC+8E,EAAY5gF,UAAUi9E,WAAa,WAAc,OAAO,GACxD2D,EAAY5gF,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACvD,OAAOkxE,EAAQ2I,iBAAiB/gF,KAAMkH,IAE1C45E,EAAY5gF,UAAU6yB,IAAM,SAAUjxB,GAClC,OAAO,IAAIo8E,GAAal+E,KAAKo+E,SAAUp+E,KAAK+D,MAAOjC,EAAO,KAAM9B,KAAK65E,aAElEiH,EAnBqB,CAoB9BlH,IACEoH,GAAkC,SAAUj7E,GAE5C,SAASk7E,EAAiBC,EAASvwE,EAAMkpE,GACrC,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMkpE,IAAe75E,KAEnD,OADAkG,EAAMg7E,QAAUA,EACTh7E,EASX,OAbA83D,GAAUijB,EAAkBl7E,GAM5Bk7E,EAAiB/gF,UAAUi9E,WAAa,WAAc,OAAOn9E,KAAKkhF,QAAQC,MAAM,SAAU1/E,GAAK,OAAOA,EAAE07E,gBACxG8D,EAAiB/gF,UAAUw5E,aAAe,SAAUj4E,GAChD,OAAOA,aAAaw/E,GAAoBtH,GAAiB35E,KAAKkhF,QAASz/E,EAAEy/E,UAE7ED,EAAiB/gF,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GAC5D,OAAOkxE,EAAQgJ,sBAAsBphF,KAAMkH,IAExC+5E,EAd0B,CAenCrH,IACEyH,GAAiC,WACjC,SAASA,EAAgB9xE,EAAKzN,EAAOw/E,GACjCthF,KAAKuP,IAAMA,EACXvP,KAAK8B,MAAQA,EACb9B,KAAKshF,OAASA,EAKlB,OAHAD,EAAgBnhF,UAAUw5E,aAAe,SAAUj4E,GAC/C,OAAOzB,KAAKuP,MAAQ9N,EAAE8N,KAAOvP,KAAK8B,MAAM43E,aAAaj4E,EAAEK,QAEpDu/E,EATyB,GAWhCE,GAAgC,SAAUx7E,GAE1C,SAASy7E,EAAeN,EAASvwE,EAAMkpE,GACnC,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMkpE,IAAe75E,KAMnD,OALAkG,EAAMg7E,QAAUA,EAChBh7E,EAAM07C,UAAY,KACdjxC,IACAzK,EAAM07C,UAAYjxC,EAAKixC,WAEpB17C,EASX,OAjBA83D,GAAUwjB,EAAgBz7E,GAU1By7E,EAAethF,UAAUw5E,aAAe,SAAUj4E,GAC9C,OAAOA,aAAa+/E,GAAkB7H,GAAiB35E,KAAKkhF,QAASz/E,EAAEy/E,UAE3EM,EAAethF,UAAUi9E,WAAa,WAAc,OAAOn9E,KAAKkhF,QAAQC,MAAM,SAAU1/E,GAAK,OAAOA,EAAEK,MAAMq7E,gBAC5GqE,EAAethF,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GAC1D,OAAOkxE,EAAQqJ,oBAAoBzhF,KAAMkH,IAEtCs6E,EAlBwB,CAmBjC5H,IACE8H,GAA2B,SAAU37E,GAErC,SAAS47E,EAAU9sD,EAAOglD,GACtB,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM60B,EAAMA,EAAMl0B,OAAS,GAAGgQ,KAAMkpE,IAAe75E,KAE3E,OADAkG,EAAM2uB,MAAQA,EACP3uB,EASX,OAbA83D,GAAU2jB,EAAW57E,GAMrB47E,EAAUzhF,UAAUw5E,aAAe,SAAUj4E,GACzC,OAAOA,aAAakgF,GAAahI,GAAiB35E,KAAK60B,MAAOpzB,EAAEozB,QAEpE8sD,EAAUzhF,UAAUi9E,WAAa,WAAc,OAAO,GACtDwE,EAAUzhF,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GACrD,OAAOkxE,EAAQwJ,eAAe5hF,KAAMkH,IAEjCy6E,EAdmB,CAe5B/H,IAKEiI,GAAY,IAAI5C,GAAY,KAAM,KAAM,MACxCvC,GAAkB,IAAIuC,GAAY,KAAM9F,GAAe,MAEvD6E,GACJ,SAAWA,UACPA,EAAaA,EAAoB,MAAI,GAAK,QAC1CA,EAAaA,EAAsB,QAAI,GAAK,UAC5CA,EAAaA,EAAuB,SAAI,GAAK,WAC7CA,EAAaA,EAAqB,OAAI,GAAK,SAJpCA,EAAX,CAKE,IACE8D,GAA2B,WAC3B,SAASA,EAAUjK,EAAWgC,GAC1B75E,KAAK63E,UAAYA,GAAa,GAC9B73E,KAAK65E,WAAaA,GAAc,KAGpC,OADAiI,EAAU5hF,UAAU43E,YAAc,SAAUC,GAAY,OAA6C,IAAtC/3E,KAAK63E,UAAUjzE,QAAQmzE,IAC/E+J,EANmB,GAQ1BhE,GAAgC,SAAU/3E,GAE1C,SAASg8E,EAAe5+E,EAAMrB,EAAO6O,EAAMknE,EAAWgC,QAChC,IAAdhC,IAAwBA,EAAY,MACxC,IAAI3xE,EAAQH,EAAOnF,KAAKZ,KAAM63E,EAAWgC,IAAe75E,KAIxD,OAHAkG,EAAM/C,KAAOA,EACb+C,EAAMpE,MAAQA,EACdoE,EAAMyK,KAAOA,GAAS7O,GAASA,EAAM6O,MAAS,KACvCzK,EASX,OAhBA83D,GAAU+jB,EAAgBh8E,GAS1Bg8E,EAAe7hF,UAAUw5E,aAAe,SAAUsI,GAC9C,OAAOA,aAAgBD,GAAkB/hF,KAAKmD,OAAS6+E,EAAK7+E,OACvDnD,KAAK8B,QAAUkgF,EAAKlgF,OAAS9B,KAAK8B,MAAM43E,aAAasI,EAAKlgF,QAAUkgF,EAAKlgF,QAElFigF,EAAe7hF,UAAU+hF,eAAiB,SAAU7J,EAASlxE,GACzD,OAAOkxE,EAAQ8J,oBAAoBliF,KAAMkH,IAEtC66E,EAjBwB,CAkBjCD,IACEtB,GAAqC,SAAUz6E,GAE/C,SAASo8E,EAAoBh/E,EAAM6zD,EAAQspB,EAAY3vE,EAAMknE,EAAWgC,QAClD,IAAdhC,IAAwBA,EAAY,MACxC,IAAI3xE,EAAQH,EAAOnF,KAAKZ,KAAM63E,EAAWgC,IAAe75E,KAKxD,OAJAkG,EAAM/C,KAAOA,EACb+C,EAAM8wD,OAASA,EACf9wD,EAAMo6E,WAAaA,EACnBp6E,EAAMyK,KAAOA,GAAQ,KACdzK,EASX,OAjBA83D,GAAUmkB,EAAqBp8E,GAU/Bo8E,EAAoBjiF,UAAUw5E,aAAe,SAAUsI,GACnD,OAAOA,aAAgBG,GAAuBxI,GAAiB35E,KAAKg3D,OAAQgrB,EAAKhrB,SAC7E2iB,GAAiB35E,KAAKsgF,WAAY0B,EAAK1B,aAE/C6B,EAAoBjiF,UAAU+hF,eAAiB,SAAU7J,EAASlxE,GAC9D,OAAOkxE,EAAQgK,yBAAyBpiF,KAAMkH,IAE3Ci7E,EAlB6B,CAmBtCL,IACEhF,GAAqC,SAAU/2E,GAE/C,SAASs8E,EAAoB5E,EAAM5D,GAC/B,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM,KAAM65E,IAAe75E,KAEnD,OADAkG,EAAMu3E,KAAOA,EACNv3E,EAQX,OAZA83D,GAAUqkB,EAAqBt8E,GAM/Bs8E,EAAoBniF,UAAUw5E,aAAe,SAAUsI,GACnD,OAAOA,aAAgBK,GAAuBriF,KAAKy9E,KAAK/D,aAAasI,EAAKvE,OAE9E4E,EAAoBniF,UAAU+hF,eAAiB,SAAU7J,EAASlxE,GAC9D,OAAOkxE,EAAQkK,oBAAoBtiF,KAAMkH,IAEtCm7E,EAb6B,CActCP,IACES,GAAiC,SAAUx8E,GAE3C,SAASy8E,EAAgB1gF,EAAO+3E,GAC5B,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM,KAAM65E,IAAe75E,KAEnD,OADAkG,EAAMpE,MAAQA,EACPoE,EAQX,OAZA83D,GAAUwkB,EAAiBz8E,GAM3By8E,EAAgBtiF,UAAUw5E,aAAe,SAAUsI,GAC/C,OAAOA,aAAgBQ,GAAmBxiF,KAAK8B,MAAM43E,aAAasI,EAAKlgF,QAE3E0gF,EAAgBtiF,UAAU+hF,eAAiB,SAAU7J,EAASlxE,GAC1D,OAAOkxE,EAAQqK,gBAAgBziF,KAAMkH,IAElCs7E,EAbyB,CAclCV,IACEY,GAAmC,WACnC,SAASA,EAAkB/xE,EAAMknE,GAC7B73E,KAAK63E,UAAYA,EACZA,IACD73E,KAAK63E,UAAY,IAErB73E,KAAK2Q,KAAOA,GAAQ,KAGxB,OADA+xE,EAAkBxiF,UAAU43E,YAAc,SAAUC,GAAY,OAA6C,IAAtC/3E,KAAK63E,UAAUjzE,QAAQmzE,IACvF2K,EAT2B,GAuBlCC,GAA6B,SAAU58E,GAEvC,SAAS68E,EAAYz/E,EAAM6zD,EAAQ6rB,EAAMlyE,EAAMknE,QACzB,IAAdA,IAAwBA,EAAY,MACxC,IAAI3xE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMknE,IAAc73E,KAIlD,OAHAkG,EAAM/C,KAAOA,EACb+C,EAAM8wD,OAASA,EACf9wD,EAAM28E,KAAOA,EACN38E,EAKX,OAZA83D,GAAU4kB,EAAa78E,GASvB68E,EAAY1iF,UAAUw5E,aAAe,SAAUr4E,GAC3C,OAAOrB,KAAKmD,OAAS9B,EAAE8B,MAAQw2E,GAAiB35E,KAAK6iF,KAAMxhF,EAAEwhF,OAE1DD,EAbqB,CAc9BF,IACEI,GAA6B,SAAU/8E,GAEvC,SAASg9E,EAAY5/E,EAAM0/E,EAAMlyE,EAAMknE,QACjB,IAAdA,IAAwBA,EAAY,MACxC,IAAI3xE,EAAQH,EAAOnF,KAAKZ,KAAM2Q,EAAMknE,IAAc73E,KAGlD,OAFAkG,EAAM/C,KAAOA,EACb+C,EAAM28E,KAAOA,EACN38E,EAKX,OAXA83D,GAAU+kB,EAAah9E,GAQvBg9E,EAAY7iF,UAAUw5E,aAAe,SAAUr4E,GAC3C,OAAOrB,KAAKmD,OAAS9B,EAAE8B,MAAQw2E,GAAiB35E,KAAK6iF,KAAMxhF,EAAEwhF,OAE1DE,EAZqB,CAa9BL,IACEM,GAA2B,SAAUj9E,GAErC,SAASk9E,EAAU9/E,EAAM2B,EAAQo+E,EAAQC,EAASC,EAAmBC,EAASxL,EAAWgC,QACnE,IAAdhC,IAAwBA,EAAY,MACxC,IAAI3xE,EAAQH,EAAOnF,KAAKZ,KAAM63E,EAAWgC,IAAe75E,KAOxD,OANAkG,EAAM/C,KAAOA,EACb+C,EAAMpB,OAASA,EACfoB,EAAMg9E,OAASA,EACfh9E,EAAMi9E,QAAUA,EAChBj9E,EAAMk9E,kBAAoBA,EAC1Bl9E,EAAMm9E,QAAUA,EACTn9E,EAaX,OAvBA83D,GAAUilB,EAAWl9E,GAYrBk9E,EAAU/iF,UAAUw5E,aAAe,SAAUsI,GACzC,OAAOA,aAAgBiB,GAAajjF,KAAKmD,OAAS6+E,EAAK7+E,MACnDq2E,GAAqBx5E,KAAK8E,OAAQk9E,EAAKl9E,SACvC60E,GAAiB35E,KAAKkjF,OAAQlB,EAAKkB,SACnCvJ,GAAiB35E,KAAKmjF,QAASnB,EAAKmB,UACpCnjF,KAAKojF,kBAAkB1J,aAAasI,EAAKoB,oBACzCzJ,GAAiB35E,KAAKqjF,QAASrB,EAAKqB,UAE5CJ,EAAU/iF,UAAU+hF,eAAiB,SAAU7J,EAASlxE,GACpD,OAAOkxE,EAAQkL,sBAAsBtjF,KAAMkH,IAExC+7E,EAxBmB,CAyB5BnB,IACEyB,GAAwB,SAAUx9E,GAElC,SAASy9E,EAAO/D,EAAWlF,EAAUC,EAAWX,QAC1B,IAAdW,IAAwBA,EAAY,IACxC,IAAIt0E,EAAQH,EAAOnF,KAAKZ,KAAM,KAAM65E,IAAe75E,KAInD,OAHAkG,EAAMu5E,UAAYA,EAClBv5E,EAAMq0E,SAAWA,EACjBr0E,EAAMs0E,UAAYA,EACXt0E,EAUX,OAjBA83D,GAAUwlB,EAAQz9E,GASlBy9E,EAAOtjF,UAAUw5E,aAAe,SAAUsI,GACtC,OAAOA,aAAgBwB,GAAUxjF,KAAKy/E,UAAU/F,aAAasI,EAAKvC,YAC9D9F,GAAiB35E,KAAKu6E,SAAUyH,EAAKzH,WACrCZ,GAAiB35E,KAAKw6E,UAAWwH,EAAKxH,YAE9CgJ,EAAOtjF,UAAU+hF,eAAiB,SAAU7J,EAASlxE,GACjD,OAAOkxE,EAAQqL,YAAYzjF,KAAMkH,IAE9Bs8E,EAlBgB,CAmBzB1B,IAiCE4B,GAA8B,SAAU39E,GAExC,SAAS49E,EAAaC,EAAWC,EAAYhK,GACzC,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM,KAAM65E,IAAe75E,KAGnD,OAFAkG,EAAM09E,UAAYA,EAClB19E,EAAM29E,WAAaA,EACZ39E,EASX,OAdA83D,GAAU2lB,EAAc59E,GAOxB49E,EAAazjF,UAAUw5E,aAAe,SAAUsI,GAC5C,OAAOA,aAAgB2B,GAAgBhK,GAAiB35E,KAAK4jF,UAAW5B,EAAK4B,YACzEjK,GAAiB35E,KAAK6jF,WAAY7B,EAAK6B,aAE/CF,EAAazjF,UAAU+hF,eAAiB,SAAU7J,EAASlxE,GACvD,OAAOkxE,EAAQ0L,kBAAkB9jF,KAAMkH,IAEpCy8E,EAfsB,CAgB/B7B,IACEiC,GAA2B,SAAUh+E,GAErC,SAASi+E,EAAUjiF,EAAO83E,GACtB,IAAI3zE,EAAQH,EAAOnF,KAAKZ,KAAM,KAAM65E,IAAe75E,KAEnD,OADAkG,EAAMnE,MAAQA,EACPmE,EAQX,OAZA83D,GAAUgmB,EAAWj+E,GAMrBi+E,EAAU9jF,UAAUw5E,aAAe,SAAUsI,GACzC,OAAOA,aAAgB0B,IAAgB1jF,KAAK+B,MAAM23E,aAAasI,EAAKjgF,QAExEiiF,EAAU9jF,UAAU+hF,eAAiB,SAAU7J,EAASlxE,GACpD,OAAOkxE,EAAQ6L,eAAejkF,KAAMkH,IAEjC88E,EAbmB,CAc5BlC,IACEoC,GAAgC,WAChC,SAASA,KAmHT,OAjHAA,EAAehkF,UAAUikF,cAAgB,SAAU1G,EAAMv2E,GAAW,OAAOu2E,GAC3EyG,EAAehkF,UAAUkkF,cAAgB,SAAUpC,EAAM96E,GAAW,OAAO86E,GAC3EkC,EAAehkF,UAAUm9E,iBAAmB,SAAUgH,EAAKn9E,GAAW,OAAOlH,KAAKmkF,cAAcE,EAAKn9E,IACrGg9E,EAAehkF,UAAUokF,qBAAuB,SAAUD,EAAKn9E,GAC3D,OAAOlH,KAAKmkF,cAAcE,EAAKn9E,IAEnCg9E,EAAehkF,UAAUw9E,gBAAkB,SAAUD,EAAMv2E,GACvD,OAAOlH,KAAKmkF,cAAc,IAAI5G,GAAWE,EAAKA,KAAKL,gBAAgBp9E,KAAMkH,GAAUu2E,EAAK9sE,KAAM8sE,EAAK5D,YAAa3yE,IAEpHg9E,EAAehkF,UAAU09E,kBAAoB,SAAUH,EAAMv2E,GACzD,OAAOlH,KAAKmkF,cAAc,IAAI7G,GAAaG,EAAKt6E,KAAMs6E,EAAK37E,MAAMs7E,gBAAgBp9E,KAAMkH,GAAUu2E,EAAK9sE,KAAM8sE,EAAK5D,YAAa3yE,IAElIg9E,EAAehkF,UAAUm+E,kBAAoB,SAAUZ,EAAMv2E,GACzD,OAAOlH,KAAKmkF,cAAc,IAAIjG,GAAaT,EAAKW,SAAShB,gBAAgBp9E,KAAMkH,GAAUu2E,EAAK15E,MAAMq5E,gBAAgBp9E,KAAMkH,GAAUu2E,EAAK37E,MAAMs7E,gBAAgBp9E,KAAMkH,GAAUu2E,EAAK9sE,KAAM8sE,EAAK5D,YAAa3yE,IAEhNg9E,EAAehkF,UAAUs+E,mBAAqB,SAAUf,EAAMv2E,GAC1D,OAAOlH,KAAKmkF,cAAc,IAAI7F,GAAcb,EAAKW,SAAShB,gBAAgBp9E,KAAMkH,GAAUu2E,EAAKt6E,KAAMs6E,EAAK37E,MAAMs7E,gBAAgBp9E,KAAMkH,GAAUu2E,EAAK9sE,KAAM8sE,EAAK5D,YAAa3yE,IAEjLg9E,EAAehkF,UAAUy+E,sBAAwB,SAAU0F,EAAKn9E,GAC5D,IAAIu+B,EAAS4+C,EAAInH,SAAWmH,EAAIlhF,KAChC,OAAOnD,KAAKmkF,cAAc,IAAIlK,GAAiBoK,EAAIjG,SAAShB,gBAAgBp9E,KAAMkH,GAAUu+B,EAAQzlC,KAAKukF,oBAAoBF,EAAI/yE,KAAMpK,GAAUm9E,EAAI1zE,KAAM0zE,EAAIxK,YAAa3yE,IAEhLg9E,EAAehkF,UAAU2+E,wBAA0B,SAAUwF,EAAKn9E,GAC9D,OAAOlH,KAAKmkF,cAAc,IAAIhK,GAAmBkK,EAAI3hF,GAAG06E,gBAAgBp9E,KAAMkH,GAAUlH,KAAKukF,oBAAoBF,EAAI/yE,KAAMpK,GAAUm9E,EAAI1zE,KAAM0zE,EAAIxK,YAAa3yE,IAEpKg9E,EAAehkF,UAAU8+E,qBAAuB,SAAUqF,EAAKn9E,GAC3D,OAAOlH,KAAKmkF,cAAc,IAAI9J,GAAgBgK,EAAItF,UAAU3B,gBAAgBp9E,KAAMkH,GAAUlH,KAAKukF,oBAAoBF,EAAI/yE,KAAMpK,GAAUm9E,EAAI1zE,KAAM0zE,EAAIxK,YAAa3yE,IAExKg9E,EAAehkF,UAAUi/E,iBAAmB,SAAUkF,EAAKn9E,GAAW,OAAOlH,KAAKmkF,cAAcE,EAAKn9E,IACrGg9E,EAAehkF,UAAUq/E,kBAAoB,SAAU8E,EAAKn9E,GACxD,OAAOlH,KAAKmkF,cAAcE,EAAKn9E,IAEnCg9E,EAAehkF,UAAUw/E,qBAAuB,SAAU2E,EAAKn9E,GAC3D,OAAOlH,KAAKmkF,cAAc,IAAI1J,GAAgB4J,EAAI5E,UAAUrC,gBAAgBp9E,KAAMkH,GAAUm9E,EAAI9J,SAAS6C,gBAAgBp9E,KAAMkH,GAAUm9E,EAAI7J,UAAU4C,gBAAgBp9E,KAAMkH,GAAUm9E,EAAI1zE,KAAM0zE,EAAIxK,YAAa3yE,IAEtNg9E,EAAehkF,UAAU2/E,aAAe,SAAUwE,EAAKn9E,GACnD,OAAOlH,KAAKmkF,cAAc,IAAIxE,GAAQ0E,EAAI5E,UAAUrC,gBAAgBp9E,KAAMkH,GAAUm9E,EAAIxK,YAAa3yE,IAEzGg9E,EAAehkF,UAAU8/E,uBAAyB,SAAUqE,EAAKn9E,GAC7D,OAAOlH,KAAKmkF,cAAc,IAAIrE,GAAcuE,EAAI5E,UAAUrC,gBAAgBp9E,KAAMkH,GAAUm9E,EAAIxK,YAAa3yE,IAE/Gg9E,EAAehkF,UAAUggF,cAAgB,SAAUmE,EAAKn9E,GACpD,OAAOlH,KAAKmkF,cAAc,IAAIvH,GAASyH,EAAIviF,MAAMs7E,gBAAgBp9E,KAAMkH,GAAUm9E,EAAI1zE,KAAM0zE,EAAIxK,YAAa3yE,IAEhHg9E,EAAehkF,UAAUqgF,kBAAoB,SAAU8D,EAAKn9E,GACxD,OAAOlH,KAAKmkF,cAAc,IAAI/D,GAAaiE,EAAIrtB,OAAQh3D,KAAKwkF,mBAAmBH,EAAI/D,WAAYp5E,GAAUm9E,EAAI1zE,KAAM0zE,EAAIxK,YAAa3yE,IAExIg9E,EAAehkF,UAAUygF,wBAA0B,SAAU0D,EAAKn9E,GAC9D,OAAOlH,KAAKmkF,cAAc,IAAIvJ,GAAmByJ,EAAIr8E,SAAUq8E,EAAI3D,IAAItD,gBAAgBp9E,KAAMkH,GAAUm9E,EAAI1J,IAAIyC,gBAAgBp9E,KAAMkH,GAAUm9E,EAAI1zE,KAAM0zE,EAAIxK,YAAa3yE,IAE9Kg9E,EAAehkF,UAAU2gF,kBAAoB,SAAUwD,EAAKn9E,GACxD,OAAOlH,KAAKmkF,cAAc,IAAIrK,GAAauK,EAAIjG,SAAShB,gBAAgBp9E,KAAMkH,GAAUm9E,EAAIlhF,KAAMkhF,EAAI1zE,KAAM0zE,EAAIxK,YAAa3yE,IAEjIg9E,EAAehkF,UAAU6gF,iBAAmB,SAAUsD,EAAKn9E,GACvD,OAAOlH,KAAKmkF,cAAc,IAAIpK,GAAYsK,EAAIjG,SAAShB,gBAAgBp9E,KAAMkH,GAAUm9E,EAAItgF,MAAMq5E,gBAAgBp9E,KAAMkH,GAAUm9E,EAAI1zE,KAAM0zE,EAAIxK,YAAa3yE,IAEhKg9E,EAAehkF,UAAUkhF,sBAAwB,SAAUiD,EAAKn9E,GAC5D,OAAOlH,KAAKmkF,cAAc,IAAInD,GAAiBhhF,KAAKukF,oBAAoBF,EAAInD,QAASh6E,GAAUm9E,EAAI1zE,KAAM0zE,EAAIxK,YAAa3yE,IAE9Hg9E,EAAehkF,UAAUuhF,oBAAsB,SAAU4C,EAAKn9E,GAC1D,IAAIhB,EAAQlG,KACRkhF,EAAUmD,EAAInD,QAAQn+E,IAAI,SAAU0hF,GAAS,OAAO,IAAIpD,GAAgBoD,EAAMl1E,IAAKk1E,EAAM3iF,MAAMs7E,gBAAgBl3E,EAAOgB,GAAUu9E,EAAMnD,UACtIoD,EAAU,IAAI5L,GAAQuL,EAAIziC,UAAW,MACzC,OAAO5hD,KAAKmkF,cAAc,IAAI5C,GAAeL,EAASwD,EAASL,EAAIxK,YAAa3yE,IAEpFg9E,EAAehkF,UAAU0hF,eAAiB,SAAUyC,EAAKn9E,GACrD,OAAOlH,KAAKmkF,cAAc,IAAIzC,GAAU1hF,KAAKukF,oBAAoBF,EAAIxvD,MAAO3tB,GAAUm9E,EAAIxK,YAAa3yE,IAE3Gg9E,EAAehkF,UAAUqkF,oBAAsB,SAAUI,EAAOz9E,GAC5D,IAAIhB,EAAQlG,KACZ,OAAO2kF,EAAM5hF,IAAI,SAAU06E,GAAQ,OAAOA,EAAKL,gBAAgBl3E,EAAOgB,MAE1Eg9E,EAAehkF,UAAUgiF,oBAAsB,SAAUF,EAAM96E,GAC3D,IAAIpF,EAAQkgF,EAAKlgF,OAASkgF,EAAKlgF,MAAMs7E,gBAAgBp9E,KAAMkH,GAC3D,OAAOlH,KAAKokF,cAAc,IAAItG,GAAekE,EAAK7+E,KAAMrB,EAAOkgF,EAAKrxE,KAAMqxE,EAAKnK,UAAWmK,EAAKnI,YAAa3yE,IAEhHg9E,EAAehkF,UAAUkiF,yBAA2B,SAAUJ,EAAM96E,GAChE,OAAOlH,KAAKokF,cAAc,IAAI5D,GAAoBwB,EAAK7+E,KAAM6+E,EAAKhrB,OAAQh3D,KAAKwkF,mBAAmBxC,EAAK1B,WAAYp5E,GAAU86E,EAAKrxE,KAAMqxE,EAAKnK,UAAWmK,EAAKnI,YAAa3yE,IAE9Kg9E,EAAehkF,UAAUoiF,oBAAsB,SAAUN,EAAM96E,GAC3D,OAAOlH,KAAKokF,cAAc,IAAItH,GAAoBkF,EAAKvE,KAAKL,gBAAgBp9E,KAAMkH,GAAU86E,EAAKnI,YAAa3yE,IAElHg9E,EAAehkF,UAAUuiF,gBAAkB,SAAUT,EAAM96E,GACvD,OAAOlH,KAAKokF,cAAc,IAAI7B,GAAgBP,EAAKlgF,MAAMs7E,gBAAgBp9E,KAAMkH,GAAU86E,EAAKnI,YAAa3yE,IAE/Gg9E,EAAehkF,UAAUojF,sBAAwB,SAAUtB,EAAM96E,GAC7D,IAAIhB,EAAQlG,KACR8E,EAASk9E,EAAKl9E,OAAOs4E,gBAAgBp9E,KAAMkH,GAC3Ci8E,EAAUnB,EAAKmB,QAAQpgF,IAAI,SAAUwiC,GAAU,OAAO,IAAIu9C,GAAYv9C,EAAOpiC,KAAM+C,EAAMs+E,mBAAmBj/C,EAAOs9C,KAAM37E,GAAUq+B,EAAO50B,KAAM40B,EAAOsyC,aACvJ+M,EAAa5C,EAAKoB,mBAClB,IAAIT,GAAYX,EAAKoB,kBAAkBjgF,KAAM6+E,EAAKoB,kBAAkBpsB,OAAQh3D,KAAKwkF,mBAAmBxC,EAAKoB,kBAAkBP,KAAM37E,GAAU86E,EAAKoB,kBAAkBzyE,KAAMqxE,EAAKoB,kBAAkBvL,WAC/LwL,EAAUrB,EAAKqB,QAAQtgF,IAAI,SAAU0iC,GAAU,OAAO,IAAIk9C,GAAYl9C,EAAOtiC,KAAMsiC,EAAOuxB,OAAQ9wD,EAAMs+E,mBAAmB/+C,EAAOo9C,KAAM37E,GAAUu+B,EAAO90B,KAAM80B,EAAOoyC,aAC1K,OAAO73E,KAAKokF,cAAc,IAAIpB,GAAUhB,EAAK7+E,KAAM2B,EAAQk9E,EAAKkB,OAAQC,EAASyB,EAAYvB,EAASrB,EAAKnK,UAAWmK,EAAKnI,YAAa3yE,IAE5Ig9E,EAAehkF,UAAUujF,YAAc,SAAUzB,EAAM96E,GACnD,OAAOlH,KAAKokF,cAAc,IAAIb,GAAOvB,EAAKvC,UAAUrC,gBAAgBp9E,KAAMkH,GAAUlH,KAAKwkF,mBAAmBxC,EAAKzH,SAAUrzE,GAAUlH,KAAKwkF,mBAAmBxC,EAAKxH,UAAWtzE,GAAU86E,EAAKnI,YAAa3yE,IAE7Mg9E,EAAehkF,UAAU4jF,kBAAoB,SAAU9B,EAAM96E,GACzD,OAAOlH,KAAKokF,cAAc,IAAIV,GAAa1jF,KAAKwkF,mBAAmBxC,EAAK4B,UAAW18E,GAAUlH,KAAKwkF,mBAAmBxC,EAAK6B,WAAY38E,GAAU86E,EAAKnI,YAAa3yE,IAEtKg9E,EAAehkF,UAAU+jF,eAAiB,SAAUjC,EAAM96E,GACtD,OAAOlH,KAAKokF,cAAc,IAAIL,GAAU/B,EAAKjgF,MAAMq7E,gBAAgBp9E,KAAMkH,GAAU86E,EAAKnI,YAAa3yE,IAEzGg9E,EAAehkF,UAAU2kF,iBAAmB,SAAU7C,EAAM96E,GACxD,OAAOlH,KAAKokF,cAAcpC,EAAM96E,IAEpCg9E,EAAehkF,UAAU4kF,sBAAwB,SAAU9C,EAAM96E,GAC7D,OAAOlH,KAAKokF,cAAcpC,EAAM96E,IAEpCg9E,EAAehkF,UAAUskF,mBAAqB,SAAUO,EAAO79E,GAC3D,IAAIhB,EAAQlG,KACZ,OAAO+kF,EAAMhiF,IAAI,SAAUi/E,GAAQ,OAAOA,EAAKC,eAAe/7E,EAAOgB,MAElEg9E,EApHwB,GAsSnC,SAASc,GAAiBD,GACtB,IAAI3M,EAAU,IAAI6M,GAElB,OADA7M,EAAQoM,mBAAmBO,EAAO,MAC3B3M,EAAQ8M,SAEnB,IAAID,GAAiC,SAAUl/E,GAE3C,SAASo/E,IACL,IAAIj/E,EAAmB,OAAXH,GAAmBA,EAAOlF,MAAMb,KAAMU,YAAcV,KAEhE,OADAkG,EAAMg/E,SAAW,IAAIzvD,IACdvvB,EAgBX,OApBA83D,GAAUmnB,EAAiBp/E,GAM3Bo/E,EAAgBjlF,UAAUkiF,yBAA2B,SAAUJ,EAAM96E,GAEjE,OAAO86E,GAEXmD,EAAgBjlF,UAAUojF,sBAAwB,SAAUtB,EAAM96E,GAE9D,OAAO86E,GAEXmD,EAAgBjlF,UAAUm9E,iBAAmB,SAAUgH,EAAKn9E,GAIxD,OAHIm9E,EAAIlhF,MACJnD,KAAKklF,SAAS9gF,IAAIigF,EAAIlhF,MAEnB,MAEJgiF,EArByB,CArLK,WACrC,SAASC,KA6KT,OA3KAA,EAAoBllF,UAAUi4E,UAAY,SAAUkM,EAAKn9E,GAAW,OAAOm9E,GAC3Ee,EAAoBllF,UAAUk9E,gBAAkB,SAAUiH,EAAKn9E,GAI3D,OAHIm9E,EAAI1zE,MACJ0zE,EAAI1zE,KAAKwnE,UAAUn4E,KAAMkH,GAEtBm9E,GAEXe,EAAoBllF,UAAUm4E,iBAAmB,SAAU1nE,EAAMzJ,GAAW,OAAOlH,KAAKm4E,UAAUxnE,EAAMzJ,IACxGk+E,EAAoBllF,UAAUu4E,oBAAsB,SAAU9nE,EAAMzJ,GAChE,IAAIhB,EAAQlG,KAKZ,OAJA2Q,EAAK7O,MAAMs7E,gBAAgBp9E,KAAMkH,GACT,OAApByJ,EAAK6nE,YACL7nE,EAAK6nE,WAAW9vE,QAAQ,SAAUsnE,GAAS,OAAO9pE,EAAMiyE,UAAUnI,EAAO9oE,KAEtElH,KAAKm4E,UAAUxnE,EAAMzJ,IAEhCk+E,EAAoBllF,UAAU24E,eAAiB,SAAUloE,EAAMzJ,GAAW,OAAOlH,KAAKm4E,UAAUxnE,EAAMzJ,IACtGk+E,EAAoBllF,UAAU84E,aAAe,SAAUroE,EAAMzJ,GAAW,OAAOlH,KAAKm4E,UAAUxnE,EAAMzJ,IACpGk+E,EAAoBllF,UAAUokF,qBAAuB,SAAUD,EAAKn9E,GAAW,OAAOm9E,GACtFe,EAAoBllF,UAAUw9E,gBAAkB,SAAU2G,EAAKn9E,GAAW,OAAOlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAC3Gk+E,EAAoBllF,UAAUm9E,iBAAmB,SAAUgH,EAAKn9E,GAC5D,OAAOlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAU09E,kBAAoB,SAAUyG,EAAKn9E,GAE7D,OADAm9E,EAAIviF,MAAMs7E,gBAAgBp9E,KAAMkH,GACzBlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAUm+E,kBAAoB,SAAUgG,EAAKn9E,GAI7D,OAHAm9E,EAAIjG,SAAShB,gBAAgBp9E,KAAMkH,GACnCm9E,EAAItgF,MAAMq5E,gBAAgBp9E,KAAMkH,GAChCm9E,EAAIviF,MAAMs7E,gBAAgBp9E,KAAMkH,GACzBlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAUs+E,mBAAqB,SAAU6F,EAAKn9E,GAG9D,OAFAm9E,EAAIjG,SAAShB,gBAAgBp9E,KAAMkH,GACnCm9E,EAAIviF,MAAMs7E,gBAAgBp9E,KAAMkH,GACzBlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAUy+E,sBAAwB,SAAU0F,EAAKn9E,GAGjE,OAFAm9E,EAAIjG,SAAShB,gBAAgBp9E,KAAMkH,GACnClH,KAAKukF,oBAAoBF,EAAI/yE,KAAMpK,GAC5BlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAU2+E,wBAA0B,SAAUwF,EAAKn9E,GAGnE,OAFAm9E,EAAI3hF,GAAG06E,gBAAgBp9E,KAAMkH,GAC7BlH,KAAKukF,oBAAoBF,EAAI/yE,KAAMpK,GAC5BlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAU8+E,qBAAuB,SAAUqF,EAAKn9E,GAGhE,OAFAm9E,EAAItF,UAAU3B,gBAAgBp9E,KAAMkH,GACpClH,KAAKukF,oBAAoBF,EAAI/yE,KAAMpK,GAC5BlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAUi/E,iBAAmB,SAAUkF,EAAKn9E,GAC5D,OAAOlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAUq/E,kBAAoB,SAAU8E,EAAKn9E,GAC7D,IAAIhB,EAAQlG,KAIZ,OAHIqkF,EAAI7L,YACJ6L,EAAI7L,WAAW9vE,QAAQ,SAAUiI,GAAQ,OAAOA,EAAKwnE,UAAUjyE,EAAOgB,KAEnElH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAUw/E,qBAAuB,SAAU2E,EAAKn9E,GAIhE,OAHAm9E,EAAI5E,UAAUrC,gBAAgBp9E,KAAMkH,GACpCm9E,EAAI9J,SAAS6C,gBAAgBp9E,KAAMkH,GACnCm9E,EAAI7J,UAAU4C,gBAAgBp9E,KAAMkH,GAC7BlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAU2/E,aAAe,SAAUwE,EAAKn9E,GAExD,OADAm9E,EAAI5E,UAAUrC,gBAAgBp9E,KAAMkH,GAC7BlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAU8/E,uBAAyB,SAAUqE,EAAKn9E,GAElE,OADAm9E,EAAI5E,UAAUrC,gBAAgBp9E,KAAMkH,GAC7BlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAUggF,cAAgB,SAAUmE,EAAKn9E,GAEzD,OADAm9E,EAAIviF,MAAMs7E,gBAAgBp9E,KAAMkH,GACzBlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAUqgF,kBAAoB,SAAU8D,EAAKn9E,GAE7D,OADAlH,KAAKwkF,mBAAmBH,EAAI/D,WAAYp5E,GACjClH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAUygF,wBAA0B,SAAU0D,EAAKn9E,GAGnE,OAFAm9E,EAAI3D,IAAItD,gBAAgBp9E,KAAMkH,GAC9Bm9E,EAAI1J,IAAIyC,gBAAgBp9E,KAAMkH,GACvBlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAU2gF,kBAAoB,SAAUwD,EAAKn9E,GAE7D,OADAm9E,EAAIjG,SAAShB,gBAAgBp9E,KAAMkH,GAC5BlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAU6gF,iBAAmB,SAAUsD,EAAKn9E,GAG5D,OAFAm9E,EAAIjG,SAAShB,gBAAgBp9E,KAAMkH,GACnCm9E,EAAItgF,MAAMq5E,gBAAgBp9E,KAAMkH,GACzBlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAUkhF,sBAAwB,SAAUiD,EAAKn9E,GAEjE,OADAlH,KAAKukF,oBAAoBF,EAAInD,QAASh6E,GAC/BlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAUuhF,oBAAsB,SAAU4C,EAAKn9E,GAC/D,IAAIhB,EAAQlG,KAEZ,OADAqkF,EAAInD,QAAQx4E,QAAQ,SAAU+7E,GAAS,OAAOA,EAAM3iF,MAAMs7E,gBAAgBl3E,EAAOgB,KAC1ElH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAU0hF,eAAiB,SAAUyC,EAAKn9E,GAE1D,OADAlH,KAAKukF,oBAAoBF,EAAIxvD,MAAO3tB,GAC7BlH,KAAKo9E,gBAAgBiH,EAAKn9E,IAErCk+E,EAAoBllF,UAAUqkF,oBAAsB,SAAUI,EAAOz9E,GACjE,IAAIhB,EAAQlG,KACZ2kF,EAAMj8E,QAAQ,SAAU+0E,GAAQ,OAAOA,EAAKL,gBAAgBl3E,EAAOgB,MAEvEk+E,EAAoBllF,UAAUgiF,oBAAsB,SAAUF,EAAM96E,GAOhE,OANI86E,EAAKlgF,OACLkgF,EAAKlgF,MAAMs7E,gBAAgBp9E,KAAMkH,GAEjC86E,EAAKrxE,MACLqxE,EAAKrxE,KAAKwnE,UAAUn4E,KAAMkH,GAEvB86E,GAEXoD,EAAoBllF,UAAUkiF,yBAA2B,SAAUJ,EAAM96E,GAKrE,OAJAlH,KAAKwkF,mBAAmBxC,EAAK1B,WAAYp5E,GACrC86E,EAAKrxE,MACLqxE,EAAKrxE,KAAKwnE,UAAUn4E,KAAMkH,GAEvB86E,GAEXoD,EAAoBllF,UAAUoiF,oBAAsB,SAAUN,EAAM96E,GAEhE,OADA86E,EAAKvE,KAAKL,gBAAgBp9E,KAAMkH,GACzB86E,GAEXoD,EAAoBllF,UAAUuiF,gBAAkB,SAAUT,EAAM96E,GAE5D,OADA86E,EAAKlgF,MAAMs7E,gBAAgBp9E,KAAMkH,GAC1B86E,GAEXoD,EAAoBllF,UAAUojF,sBAAwB,SAAUtB,EAAM96E,GAClE,IAAIhB,EAAQlG,KAOZ,OANAgiF,EAAKl9E,OAAOs4E,gBAAgBp9E,KAAMkH,GAClC86E,EAAKmB,QAAQz6E,QAAQ,SAAU68B,GAAU,OAAOr/B,EAAMs+E,mBAAmBj/C,EAAOs9C,KAAM37E,KAClF86E,EAAKoB,mBACLpjF,KAAKwkF,mBAAmBxC,EAAKoB,kBAAkBP,KAAM37E,GAEzD86E,EAAKqB,QAAQ36E,QAAQ,SAAU+8B,GAAU,OAAOv/B,EAAMs+E,mBAAmB/+C,EAAOo9C,KAAM37E,KAC/E86E,GAEXoD,EAAoBllF,UAAUujF,YAAc,SAAUzB,EAAM96E,GAIxD,OAHA86E,EAAKvC,UAAUrC,gBAAgBp9E,KAAMkH,GACrClH,KAAKwkF,mBAAmBxC,EAAKzH,SAAUrzE,GACvClH,KAAKwkF,mBAAmBxC,EAAKxH,UAAWtzE,GACjC86E,GAEXoD,EAAoBllF,UAAU4jF,kBAAoB,SAAU9B,EAAM96E,GAG9D,OAFAlH,KAAKwkF,mBAAmBxC,EAAK4B,UAAW18E,GACxClH,KAAKwkF,mBAAmBxC,EAAK6B,WAAY38E,GAClC86E,GAEXoD,EAAoBllF,UAAU+jF,eAAiB,SAAUjC,EAAM96E,GAE3D,OADA86E,EAAKjgF,MAAMq7E,gBAAgBp9E,KAAMkH,GAC1B86E,GAEXoD,EAAoBllF,UAAU2kF,iBAAmB,SAAU7C,EAAM96E,GAAW,OAAO86E,GACnFoD,EAAoBllF,UAAU4kF,sBAAwB,SAAU9C,EAAM96E,GAAW,OAAO86E,GACxFoD,EAAoBllF,UAAUskF,mBAAqB,SAAUO,EAAO79E,GAChE,IAAIhB,EAAQlG,KACZ+kF,EAAMr8E,QAAQ,SAAUs5E,GAAQ,OAAOA,EAAKC,eAAe/7E,EAAOgB,MAE/Dk+E,EA9K6B,IA8NxC,SAASC,GAAmCrD,EAAMnI,GAC9C,IAAKA,EACD,OAAOmI,EAEX,IAAIsD,EAAc,IAAIC,GAA4B1L,GAClD,OAAOmI,EAAKC,eAAeqD,EAAa,MAE5C,SAASE,GAAoC/H,EAAM5D,GAC/C,IAAKA,EACD,OAAO4D,EAEX,IAAI6H,EAAc,IAAIC,GAA4B1L,GAClD,OAAO4D,EAAKL,gBAAgBkI,EAAa,MAE7C,IAAIC,GAA6C,SAAUx/E,GAEvD,SAAS0/E,EAA4B5L,GACjC,IAAI3zE,EAAQH,EAAOnF,KAAKZ,OAASA,KAEjC,OADAkG,EAAM2zE,WAAaA,EACZ3zE,EAuBX,OA3BA83D,GAAUynB,EAA6B1/E,GAMvC0/E,EAA4BvlF,UAAUwlF,OAAS,SAAU/5E,GACrD,IAAIg6E,EAAQnmF,OAAOW,OAAOwL,EAAI1L,YAAYC,WAC1C,IAAK,IAAI+kC,KAAQt5B,EACbg6E,EAAM1gD,GAAQt5B,EAAIs5B,GAEtB,OAAO0gD,GAEXF,EAA4BvlF,UAAUikF,cAAgB,SAAU1G,EAAMv2E,GAKlE,OAJKu2E,EAAK5D,cACN4D,EAAOz9E,KAAK0lF,OAAOjI,IACd5D,WAAa75E,KAAK65E,YAEpB4D,GAEXgI,EAA4BvlF,UAAUkkF,cAAgB,SAAUpC,EAAM96E,GAKlE,OAJK86E,EAAKnI,cACNmI,EAAOhiF,KAAK0lF,OAAO1D,IACdnI,WAAa75E,KAAK65E,YAEpBmI,GAEJyD,EA5BqC,CA6B9CvB,IACF,SAAS0B,GAASziF,EAAMwN,EAAMkpE,GAC1B,OAAO,IAAImD,GAAY75E,EAAMwN,EAAMkpE,GAEvC,SAASgM,GAAW13D,EAAIqqD,EAAYqB,GAEhC,YADmB,IAAfrB,IAAyBA,EAAa,MACnC,IAAI4G,GAAajxD,EAAI,KAAMqqD,EAAYqB,GAElD,SAASiM,GAAW33D,EAAIqqD,EAAYuN,GAGhC,YAFmB,IAAfvN,IAAyBA,EAAa,WACpB,IAAlBuN,IAA4BA,EAAgB,MACnC,MAAN53D,EAAa63D,GAAeH,GAAW13D,EAAIqqD,EAAY,MAAOuN,GAAiB,KAE1F,SAASC,GAAevI,EAAMsI,EAAevN,GAGzC,YAFsB,IAAlBuN,IAA4BA,EAAgB,WAC7B,IAAfvN,IAAyBA,EAAa,MACnC,IAAIF,GAAemF,EAAMsI,EAAevN,GAKnD,SAASyN,GAAW10E,EAAQZ,EAAMkpE,GAC9B,OAAO,IAAImH,GAAiBzvE,EAAQZ,EAAMkpE,GAE9C,SAASqM,GAAW30E,EAAQZ,GAExB,YADa,IAATA,IAAmBA,EAAO,MACvB,IAAI4wE,GAAehwE,EAAOxO,IAAI,SAAUtB,GAAK,OAAO,IAAI4/E,GAAgB5/E,EAAE8N,IAAK9N,EAAEK,MAAOL,EAAE6/E,UAAa3wE,EAAM,MAQxH,SAASw1E,GAAGnvB,EAAQ6rB,EAAMlyE,EAAMkpE,EAAY12E,GACxC,OAAO,IAAIi9E,GAAappB,EAAQ6rB,EAAMlyE,EAAMkpE,EAAY12E,GAK5D,SAASijF,GAAQtkF,EAAO6O,EAAMkpE,GAC1B,OAAO,IAAIoF,GAAYn9E,EAAO6O,EAAMkpE,GAsDxC,IAAIwM,GAAmB,gBAUvB,SAASC,GAAan9E,EAAOo9E,GACzB,OAAOC,GAASr9E,EAAO,IAAKo9E,GAKhC,SAASC,GAASr9E,EAAOs9E,EAAWF,GAChC,IAAIG,EAAiBv9E,EAAMvE,QAAQ6hF,GACnC,OAAuB,GAAnBC,EACOH,EACJ,CAACp9E,EAAMkB,MAAM,EAAGq8E,GAAgBC,OAAQx9E,EAAMkB,MAAMq8E,EAAiB,GAAGC,QAEnF,SAASC,GAAW9kF,EAAOs2E,EAASlxE,GAChC,OAAIvH,MAAMuC,QAAQJ,GACPs2E,EAAQyO,WAAW/kF,EAAOoF,GAsEf,iBADCyE,EAnED7J,IAoEoB,OAAR6J,GAAgBnM,OAAOygB,eAAetU,KAASm7E,GAnEtE1O,EAAQ2O,eAAejlF,EAAOoF,GAE5B,MAATpF,GAAiC,iBAATA,GAAqC,iBAATA,GACpC,kBAATA,EACAs2E,EAAQ4O,eAAellF,EAAOoF,GAElCkxE,EAAQ6O,WAAWnlF,EAAOoF,GA4DrC,IAA2ByE,EA1D3B,SAASu7E,GAAUC,GACf,OAAOA,QAEX,SAASC,GAAYD,GACjB,YAAe7hF,IAAR6hF,EAAoB,KAAOA,EAEtC,IAAIE,GAAkC,WAClC,SAASA,KAcT,OAZAA,EAAiBnnF,UAAU2mF,WAAa,SAAUpqE,EAAKvV,GACnD,IAAIhB,EAAQlG,KACZ,OAAOyc,EAAI1Z,IAAI,SAAUjB,GAAS,OAAO8kF,GAAW9kF,EAAOoE,EAAOgB,MAEtEmgF,EAAiBnnF,UAAU6mF,eAAiB,SAAUhkF,EAAKmE,GACvD,IAAIhB,EAAQlG,KACRiM,EAAS,GAEb,OADAzM,OAAOyT,KAAKlQ,GAAK2F,QAAQ,SAAU6G,GAAOtD,EAAOsD,GAAOq3E,GAAW7jF,EAAIwM,GAAMrJ,EAAOgB,KAC7E+E,GAEXo7E,EAAiBnnF,UAAU8mF,eAAiB,SAAUllF,EAAOoF,GAAW,OAAOpF,GAC/EulF,EAAiBnnF,UAAU+mF,WAAa,SAAUnlF,EAAOoF,GAAW,OAAOpF,GACpEulF,EAf0B,GAiBjCC,GACY,SAAUxlF,GAClB,GAAIylF,GAAUzlF,GACV,MAAM,IAAIe,MAAM,4CAEpB,OAAOf,GALXwlF,GAOM,SAAUxlF,EAAOusC,GAAM,OAAOk5C,GAAUzlF,GAASA,EAAMqJ,KAAKkjC,GAAMA,EAAGvsC,IAP3EwlF,GAQK,SAAUE,GACX,OAAOA,EAAgB1xC,KAAKyxC,IAAaliF,QAAQ2iC,IAAIw/C,GAAmBA,GAGhF,SAASC,GAAM5oC,GACX,MAAM,IAAIh8C,MAAM,mBAAqBg8C,GAEzC,SAAS6oC,GAAY7oC,EAAK8oC,GACtB,IAAI5lF,EAAQc,MAAMg8C,GAIlB,OAHA98C,EAAM6lF,KAAsB,EACxBD,IACA5lF,EAAM8lF,IAAsBF,GACzB5lF,EAEX,IAAI6lF,GAAqB,gBACrBC,GAAqB,gBAQzB,SAASC,GAAavnF,GAClB,OAAOA,EAAEw0B,QAAQ,6BAA8B,QAEnD,IAAI+xD,GAAmBtnF,OAAOygB,eAAe,IAI7C,SAAS8nE,GAAWC,GAEhB,IADA,IAAIC,EAAU,GACLlkF,EAAQ,EAAGA,EAAQikF,EAAIrnF,OAAQoD,IAAS,CAC7C,IAAImkF,EAAYF,EAAIhnE,WAAWjd,GAG/B,GAAImkF,GAAa,OAAUA,GAAa,OAAUF,EAAIrnF,OAAUoD,EAAQ,EAAI,CACxE,IAAIokF,EAAMH,EAAIhnE,WAAWjd,EAAQ,GAC7BokF,GAAO,OAAUA,GAAO,QACxBpkF,IACAmkF,GAAcA,EAAY,OAAW,IAAMC,EAAM,MAAS,OAG9DD,GAAa,IACbD,GAAWz1D,OAAO41D,aAAaF,GAE1BA,GAAa,KAClBD,GAAWz1D,OAAO41D,aAAeF,GAAa,EAAK,GAAQ,IAAmB,GAAZA,EAAoB,KAEjFA,GAAa,MAClBD,GAAWz1D,OAAO41D,aAAcF,GAAa,GAAM,IAAQA,GAAa,EAAK,GAAQ,IAAmB,GAAZA,EAAoB,KAE3GA,GAAa,UAClBD,GAAWz1D,OAAO41D,aAAeF,GAAa,GAAM,EAAQ,IAAQA,GAAa,GAAM,GAAQ,IAAQA,GAAa,EAAK,GAAQ,IAAmB,GAAZA,EAAoB,MAGpK,OAAOD,EAEX,SAASI,GAAU10E,GACf,GAAqB,iBAAVA,EACP,OAAOA,EAEX,GAAIA,aAAiBhU,MACjB,MAAO,IAAMgU,EAAM5Q,IAAIslF,IAAWnlF,KAAK,MAAQ,IAEnD,GAAa,MAATyQ,EACA,MAAO,GAAKA,EAEhB,GAAIA,EAAMC,eACN,MAAO,GAAKD,EAAMC,eAEtB,GAAID,EAAMxQ,KACN,MAAO,GAAKwQ,EAAMxQ,KAItB,IAAI0Q,EAAMF,EAAM1Q,WAChB,GAAW,MAAP4Q,EACA,MAAO,GAAKA,EAEhB,IAAIC,EAAeD,EAAIjP,QAAQ,MAC/B,OAAyB,IAAlBkP,EAAsBD,EAAMA,EAAIE,UAAU,EAAGD,GAKxD,SAASw0E,GAAkB33E,GACvB,MAAoB,mBAATA,GAAuBA,EAAK9Q,eAAe,mBAC3C8Q,IAGAA,EAMf,SAAS42E,GAAU57E,GAGf,QAASA,GAA2B,mBAAbA,EAAIR,KAYE,oBAAXoH,QAA0BA,OACnB,oBAATE,MAAqD,oBAAtBC,mBAC/CD,gBAAgBC,mBAAqBD,KAZzC,IAgCI81E,IAnB6B,oBAAX31E,QAA0BA,OAmB9B,IASd41E,GAAiC,SAAUziF,GAE3C,SAAS0iF,EAAgBC,GACrB,IAAIxiF,EAAQH,EAAOnF,KAAKZ,KAAM0oF,EAAS/3E,OAAS3Q,KAGhD,OAFAkG,EAAMwiF,SAAWA,EACjBxiF,EAAMyiF,SAAWD,EACVxiF,EAoBX,OAzBA83D,GAAUyqB,EAAiB1iF,GAO3B0iF,EAAgBvoF,UAAUk9E,gBAAkB,SAAUhF,EAASlxE,GAC3D,OAAIA,IAAYqhF,GAGLvoF,KAAK2oF,SAASvL,gBAAgBhF,EAASlxE,GAGvClH,KAAK0oF,SAAStL,gBAAgBhF,EAASlxE,IAGtDuhF,EAAgBvoF,UAAUw5E,aAAe,SAAUj4E,GAC/C,OAAOA,aAAagnF,GAAmBzoF,KAAK0oF,SAAShP,aAAaj4E,EAAEinF,WAExED,EAAgBvoF,UAAUi9E,WAAa,WAAc,OAAO,GAC5DsL,EAAgBvoF,UAAU0oF,MAAQ,SAAUC,GACxC7oF,KAAK0oF,SAAWG,EAChB7oF,KAAK8oF,QAAS,GAEXL,EA1ByB,CA2BlC7O,IAMEmP,GAA8B,WAC9B,SAASA,IACL/oF,KAAKsgF,WAAa,GAClBtgF,KAAKgpF,SAAW,IAAI71E,IACpBnT,KAAKipF,iBAAmB,IAAI91E,IAC5BnT,KAAKkpF,oBAAsB,IAAI/1E,IAC/BnT,KAAKmpF,qBAAuB,IAAIh2E,IAChCnT,KAAKopF,qBAAuB,IAAIj2E,IAChCnT,KAAKqpF,gBAAkB,IAAIl2E,IAC3BnT,KAAKspF,cAAgB,EAwHzB,OAtHAP,EAAa7oF,UAAUqpF,gBAAkB,SAAUC,EAAYC,GAC3D,GAAID,aAAsBvK,IAAeuK,aAAsBhB,GAG3D,OAAOgB,EAEX,IAAIj6E,EAAMvP,KAAK0pF,MAAMF,GACjBZ,EAAQ5oF,KAAKgpF,SAASpuE,IAAIrL,GAC1Bo6E,GAAW,EAMf,GALKf,IACDA,EAAQ,IAAIJ,GAAgBgB,GAC5BxpF,KAAKgpF,SAASj2D,IAAIxjB,EAAKq5E,GACvBe,GAAW,IAETA,IAAaf,EAAME,QAAYa,GAAYF,EAAc,CAE3D,IAAIhvC,EAASz6C,KAAK4pF,YAClB5pF,KAAKsgF,WAAWz+E,KAAK+jF,GAASnrC,GAAQ1nB,IAAIy2D,GAAY3L,WAAW1E,GAAe,CAAC6E,GAAaC,SAC9F2K,EAAMA,MAAMhD,GAASnrC,IAEzB,OAAOmuC,GAEXG,EAAa7oF,UAAU2pF,cAAgB,SAAUl5E,EAAMm5E,EAAMC,EAAKN,QAC1C,IAAhBA,IAA0BA,GAAc,GAC5C,IAAIO,EAAchqF,KAAKiqF,cAAcH,GACjClB,EAAQoB,EAAYpvE,IAAIjK,GACxBg5E,GAAW,EACf,IAAKf,EAAO,CACR,IAAIsB,EAAWlqF,KAAKmqF,eAAeL,GACnClB,EAAQ,IAAIJ,GAAgBuB,EAAIlE,WAAWl1E,GAAMs0B,KAAKilD,IACtDF,EAAYj3D,IAAIpiB,EAAMi4E,GACtBe,GAAW,EAEf,IAAMA,IAAaf,EAAME,QAAYa,GAAYF,EAAc,CAC3D,IAAIhV,EAASz0E,KAAK4pF,YAClB5pF,KAAKsgF,WAAWz+E,KAAK+jF,GAASnR,GAAQ1hD,IAAI61D,EAAMF,UAAU7K,WAAW1E,GAAe,CAAC6E,GAAaC,SAClG2K,EAAMA,MAAMhD,GAASnR,IAEzB,OAAOmU,GAEXG,EAAa7oF,UAAUkqF,kBAAoB,SAAUZ,GAEjD,GAAIA,aAAsBxI,GAAkB,CACxC,IAAIqJ,EAAkBb,EAAWtI,QAAQn+E,IAAI,SAAUtB,GAAK,OAAOA,EAAE07E,aAAe17E,EAAI2kF,GAAQ,QAC5F72E,EAAMvP,KAAK0pF,MAAMzD,GAAWoE,IAChC,OAAOrqF,KAAKsqF,mBAAmB/6E,EAAKi6E,EAAWtI,QAAS,SAAUA,GAAW,OAAO+E,GAAW/E,KAG/F,IAAIqJ,EAAmBrE,GAAWsD,EAAWtI,QAAQn+E,IAAI,SAAUtB,GAAK,MAAO,CAC3E8N,IAAK9N,EAAE8N,IACPzN,MAAOL,EAAEK,MAAMq7E,aAAe17E,EAAEK,MAAQskF,GAAQ,MAChD9E,OAAQ7/E,EAAE6/E,WAGd,OADI/xE,EAAMvP,KAAK0pF,MAAMa,GACdvqF,KAAKsqF,mBAAmB/6E,EAAKi6E,EAAWtI,QAAQn+E,IAAI,SAAUtB,GAAK,OAAOA,EAAEK,QAAW,SAAUo/E,GAAW,OAAOgF,GAAWhF,EAAQn+E,IAAI,SAAUjB,EAAOiC,GAAS,MAAO,CAC9KwL,IAAKi6E,EAAWtI,QAAQn9E,GAAOwL,IAC/BzN,MAAOA,EACPw/E,OAAQkI,EAAWtI,QAAQn9E,GAAOu9E,cAI9CyH,EAAa7oF,UAAUoqF,mBAAqB,SAAU/6E,EAAKgC,EAAQi5E,GAC/D,IAAItkF,EAAQlG,KACRyqF,EAAiBzqF,KAAKipF,iBAAiBruE,IAAIrL,GAC3Cm7E,EAA0Bn5E,EAAOq9B,OAAO,SAAWntC,GAAK,OAAQA,EAAE07E,eACtE,IAAKsN,EAAgB,CACjB,IAAIE,EAAoBp5E,EAAOxO,IAAI,SAAUtB,EAAGsC,GAAS,OAAOtC,EAAE07E,aAAej3E,EAAMqjF,gBAAgB9nF,GAAG,GAAQmkF,GAAS,IAAM7hF,KAE7H6mF,EAA0BzE,GADbwE,EAAkB/7C,OAAOi8C,IAAY9nF,IAAI,SAAUtB,GAAK,OAAO,IAAI0+E,GAAQ1+E,EAAE0B,KAAM81E,MACvD,CAAC,IAAIsJ,GAAgBiI,EAAUG,KAAsBxR,IAC9FhE,EAASn1E,KAAK4pF,YAClB5pF,KAAKsgF,WAAWz+E,KAAK+jF,GAASzQ,GAAQpiD,IAAI63D,GAAyB/M,WAAW1E,GAAe,CACzF6E,GAAaC,SAEjBwM,EAAiB7E,GAASzQ,GAC1Bn1E,KAAKipF,iBAAiBl2D,IAAIxjB,EAAKk7E,GAEnC,MAAO,CAAEA,eAAgBA,EAAgBC,wBAAyBA,IAStE3B,EAAa7oF,UAAU4qF,WAAa,SAAU13B,GAAU,MAAO,GAAKA,EAASpzD,KAAKspF,iBAClFP,EAAa7oF,UAAU+pF,cAAgB,SAAUH,GAC7C,OAAQA,GACJ,KAAK,EACD,OAAO9pF,KAAKopF,qBAChB,KAAK,EACD,OAAOppF,KAAKmpF,qBAChB,KAAK,EACD,OAAOnpF,KAAKkpF,oBAChB,KAAK,EACD,OAAOlpF,KAAKqpF,gBAGpB,OADA5B,GAAM,2BAA6BqC,GAC5B9pF,KAAKopF,sBAEhBL,EAAa7oF,UAAUiqF,eAAiB,SAAUL,GAC9C,OAAQA,GACJ,KAAK,EACD,MAAO,iBACX,KAAK,EACD,MAAO,iBACX,KAAK,EACD,MAAO,gBACX,KAAK,EACD,MAAO,YAGf,OADArC,GAAM,2BAA6BqC,GAC5B,aAEXf,EAAa7oF,UAAU0pF,UAAY,WAAc,OAAO5pF,KAAK8qF,WA9K3C,OA+KlB/B,EAAa7oF,UAAUwpF,MAAQ,SAAUb,GACrC,OAAOA,EAAWzL,gBAAgB,IAAI2N,GAAcxC,KAEjDQ,EAjIsB,GAyI7BgC,GAA4B,WAC5B,SAASA,IACL/qF,KAAKskF,qBAAuB0G,GAC5BhrF,KAAK49E,kBAAoBoN,GACzBhrF,KAAKq+E,kBAAoB2M,GACzBhrF,KAAKw+E,mBAAqBwM,GAC1BhrF,KAAK2+E,sBAAwBqM,GAC7BhrF,KAAK6+E,wBAA0BmM,GAC/BhrF,KAAKg/E,qBAAuBgM,GAC5BhrF,KAAK0/E,qBAAuBsL,GAC5BhrF,KAAK6/E,aAAemL,GACpBhrF,KAAKggF,uBAAyBgL,GAC9BhrF,KAAKkgF,cAAgB8K,GACrBhrF,KAAKugF,kBAAoByK,GACzBhrF,KAAK2gF,wBAA0BqK,GAC/BhrF,KAAK6gF,kBAAoBmK,GACzBhrF,KAAK+gF,iBAAmBiK,GACxBhrF,KAAK4hF,eAAiBoJ,GA4B1B,OA1BAD,EAAW7qF,UAAUi/E,iBAAmB,SAAUkF,GAC9C,MAAO,IAA2B,iBAAdA,EAAIviF,MAAqB,IAAMuiF,EAAIviF,MAAQ,IAAMuiF,EAAIviF,QAE7EipF,EAAW7qF,UAAUkhF,sBAAwB,SAAUiD,EAAKn9E,GACxD,IAAIhB,EAAQlG,KACZ,MAAO,IAAMqkF,EAAInD,QAAQn+E,IAAI,SAAU0hF,GAAS,OAAOA,EAAMrH,gBAAgBl3E,EAAOgB,KAAahE,KAAK,KAAO,KAEjH6nF,EAAW7qF,UAAUuhF,oBAAsB,SAAU4C,EAAKn9E,GACtD,IAAIhB,EAAQlG,KAQZ,MAAO,IAAMqkF,EAAInD,QAAQn+E,IAHV,SAAU0hF,GACrB,OALS,SAAUA,GACnB,IAAIwG,EAAQxG,EAAMnD,OAAS,IAAM,GACjC,MAAO,GAAK2J,EAAQxG,EAAMl1E,IAAM07E,EAGzBC,CAAOzG,GAAS,IAAMA,EAAM3iF,MAAMs7E,gBAAgBl3E,EAAOgB,KAE7BhE,KAAK,MAEhD6nF,EAAW7qF,UAAUq/E,kBAAoB,SAAU8E,GAC/C,OAAOA,EAAIviF,MAAMw9E,WAAa,MAAQ+E,EAAIviF,MAAMw9E,WAAa,IAAM+E,EAAIviF,MAAMqB,KACzE,MAAQkhF,EAAIviF,MAAMikC,QAAQ5iC,MAElC4nF,EAAW7qF,UAAUm9E,iBAAmB,SAAUh6D,GAAQ,MAAO,OAASA,EAAKlgB,MAC/E4nF,EAAW7qF,UAAUw9E,gBAAkB,SAAUr6D,EAAMnc,GACnD,MAAO,UAAYmc,EAAKo6D,KAAKL,gBAAgBp9E,KAAMkH,IAEhD6jF,EA7CoB,GA+C/B,SAASC,GAAQ/vE,GACb,MAAM,IAAIpY,MAAM,0BAA4B7C,KAAKC,YAAYkD,KAAO,mBAAqB8X,EAAIhb,YAAYkD,MAE7G,SAAS0nF,GAAWppF,GAChB,OAAOA,aAAau7E,GAUxB,IAAImO,GAAO,gBACPC,GAA6B,WAC7B,SAASA,KAoGT,OAlGAA,EAAYh5E,6BAA+B,CACvCjP,KAAM,+BACNm8E,WAAY6L,IAEhBC,EAAY1vD,WAAa,CAAEv4B,KAAM,aAAcm8E,WAAY6L,IAC3DC,EAAYhyD,YAAc,CAAEj2B,KAAM,cAAem8E,WAAY6L,IAC7DC,EAAY70C,iBAAmB,CAAEpzC,KAAM,mBAAoBm8E,WAAY6L,IACvEC,EAAYjzC,kBAAoB,CAC5Bh1C,KAAM,oBACNm8E,WAAY6L,IAEhBC,EAAY31C,UAAY,CAAEtyC,KAAM,YAAam8E,WAAY6L,IACzDC,EAAY3pD,YAAc,CAAEt+B,KAAM,cAAem8E,WAAY6L,IAC7DC,EAAYrvD,UAAY,CAAE54B,KAAM,YAAam8E,WAAY6L,IACzDC,EAAY3yD,gCAAkC,CAC1Ct1B,KAAM,wCACNm8E,WAAY6L,IAEhBC,EAAY5yD,yBAA2B,CACnCr1B,KAAM,2BACNm8E,WAAY6L,IAEhBC,EAAYpzD,iBAAmB,CAAE70B,KAAM,mBAAoBm8E,WAAY6L,IACvEC,EAAYrzD,aAAe,CAAE50B,KAAM,eAAgBm8E,WAAY6L,IAC/DC,EAAY/xD,gBAAkB,CAAEl2B,KAAM,kBAAmBm8E,WAAY6L,IACrEC,EAAYC,oBAAsB,CAC9BloF,KAAM,YACNm8E,WAAY6L,IAEhBC,EAAY/hC,UAAY,CACpBlmD,KAAM,YACNm8E,WAAY6L,IAEhBC,EAAYE,kBAAoB,CAC5BnoF,KAAM,YACNm8E,WAAY6L,IAEhBC,EAAYG,wBAA0B,CAClCpoF,KAAM,8BACNm8E,WAAY6L,IAEhBC,EAAY3wE,OAAS,CAAEtX,KAAM,SAAUm8E,WAAY6L,IACnDC,EAAYv1E,SAAW,CAAE1S,KAAM,WAAYm8E,WAAY6L,IACvDC,EAAYt5D,SAAW,CAAE3uB,KAAM,WAAYm8E,WAAY6L,IACvDC,EAAY96E,iBAAmB,CAAEnN,KAAM,mBAAoBm8E,WAAY6L,IACvEC,EAAYI,cAAgB,CAAEroF,KAAM,sBAAkBm8E,WAAY6L,IAClEC,EAAYh3E,kBAAoB,CAC5BjR,KAAM,oBACNm8E,WAAY6L,IAEhBC,EAAY/4E,wBAA0B,CAClClP,KAAM,0BACNm8E,WAAY6L,IAEhBC,EAAYlvD,gBAAkB,CAC1B/4B,KAAM,kBACNm8E,WAAY6L,IAEhBC,EAAY3uC,UAAY,CAAEt5C,KAAM,YAAam8E,WAAY6L,IACzDC,EAAYzuC,oBAAsB,CAC9Bx5C,KAAM,sBACNm8E,WAAY6L,IAEhBC,EAAYlnC,kBAAoB,CAC5B/gD,KAAM,0BACNm8E,WAAY6L,IAEhBC,EAAYtnC,YAAc,CAAE3gD,KAAM,oBAAgBm8E,WAAY6L,IAC9DC,EAAY92E,YAAc,CAAEnR,KAAM,oBAAgBm8E,WAAY6L,IAC9DC,EAAY7lC,UAAY,CAAEpiD,KAAM,kBAAcm8E,WAAY6L,IAC1DC,EAAYvvD,SAAW,CAAE14B,KAAM,WAAYm8E,WAAY6L,IACvDC,EAAY9/B,QAAU,CAAEnoD,KAAM,YAAQm8E,WAAY6L,IAClDC,EAAYjlC,WAAa,CAAEhjD,KAAM,YAAQm8E,WAAY6L,IACrDC,EAAY5lC,UAAY,CAAEriD,KAAM,YAAQm8E,WAAY6L,IACpDC,EAAYl4B,QAAU,CAAE/vD,KAAM,YAAQm8E,WAAY6L,IAClDC,EAAYt7B,aAAe,CAAE3sD,KAAM,YAAQm8E,WAAY6L,IACvDC,EAAYzhC,YAAc,CAAExmD,KAAM,YAAQm8E,WAAY6L,IACtDC,EAAY55B,SAAW,CAAEruD,KAAM,YAAQm8E,WAAY6L,IACnDC,EAAYv4B,aAAe,CAAE1vD,KAAM,YAAQm8E,WAAY6L,IACvDC,EAAYt4B,cAAgB,CAAE3vD,KAAM,YAAQm8E,WAAY6L,IACxDC,EAAY14B,YAAc,CAAEvvD,KAAM,YAAQm8E,WAAY6L,IACtDC,EAAYr7B,QAAU,CAAE5sD,KAAM,YAAQm8E,WAAY6L,IAClDC,EAAY99B,UAAY,CAAEnqD,KAAM,YAAQm8E,WAAY6L,IACpDC,EAAY54B,aAAe,CAAErvD,KAAM,YAAQm8E,WAAY6L,IACvDC,EAAYK,YAAc,CAAEtoF,KAAM,YAAQm8E,WAAY6L,IACtDC,EAAYtrC,oBAAsB,CAAE38C,KAAM,YAAQm8E,WAAY6L,IAE9DC,EAAYM,cAAgB,CACxBvoF,KAAM,gBACNm8E,WAAY6L,IAGhBC,EAAYO,eAAiB,CACzBxoF,KAAM,uBACNm8E,WAAY6L,IAEhBC,EAAYtgC,uBAAyB,CAAE3nD,KAAM,YAAQm8E,WAAY6L,IACjEC,EAAYQ,iBAAmB,CAAEzoF,KAAM,yBAAqBm8E,WAAY6L,IACjEC,EArGqB,GAuGhC,SAASS,GAAwBC,GAC7B,MAAO,CAAEC,WAAY,CAAED,UAAWA,IAEtC,SAASE,GAAgCC,EAAWH,GAChD,OAAOD,GAAwBI,EAAUC,yBAAyBJ,IAetE,IAAIK,GAA8B,WAC9B,SAASA,EAAaC,EAAUjpF,EAAM2iC,GAClC9lC,KAAKosF,SAAWA,EAChBpsF,KAAKmD,KAAOA,EACZnD,KAAK8lC,QAAUA,EAOnB,OALAqmD,EAAajsF,UAAUmsF,gBAAkB,WACrC,GAAIrsF,KAAK8lC,QAAQnlC,OACb,MAAM,IAAIkC,MAAM,2DAA6DiyB,KAAKphB,UAAU1T,MAAQ,MAGrGmsF,EAXsB,GAiB7BG,GAAmC,WACnC,SAASA,IACLtsF,KAAKusF,MAAQ,IAAIp5E,IAarB,OAXAm5E,EAAkBpsF,UAAU0a,IAAM,SAAU4xE,EAAiBrpF,EAAM2iC,GAE/D,IACIv2B,EAAM,IAAOi9E,EAAkB,KAAQrpF,IAF3C2iC,EAAUA,GAAW,IACMnlC,OAAS,IAAMmlC,EAAQ5iC,KAAK,KAAO,IAE1D+I,EAASjM,KAAKusF,MAAM3xE,IAAIrL,GAK5B,OAJKtD,IACDA,EAAS,IAAIkgF,GAAaK,EAAiBrpF,EAAM2iC,GACjD9lC,KAAKusF,MAAMx5D,IAAIxjB,EAAKtD,IAEjBA,GAEJqgF,EAf2B,GA6BlCG,GAAe,qDACnB,SAASC,GAAmBvpF,GACxB,OAAOA,EAAK4xB,QAAQ,MAAO,KAE/B,IAAI43D,GAAsB,EAC1B,SAASC,GAAeC,GACpB,IAAKA,IAAsBA,EAAkBf,UACzC,OAAO,KAEX,IAAI5/B,EAAM2gC,EAAkBf,UAC5B,GAAI5/B,aAAeigC,GACf,OAAOjgC,EAAI/oD,KAEf,GAAI+oD,EAAqB,gBACrB,OAAOA,EAAqB,gBAEhC,IAAI6/B,EAAa1D,GAAUn8B,GAS3B,OARI6/B,EAAWnnF,QAAQ,MAAQ,GAE3BmnF,EAAa,aAAeY,KAC5BzgC,EAAqB,gBAAI6/B,GAGzBA,EAAaW,GAAmBX,GAE7BA,EAEX,SAASe,GAAoBD,GACzB,IAAI3gC,EAAM2gC,EAAkBf,UAC5B,OAAI5/B,aAAeigC,GACRjgC,EAAIkgC,SAGR,KAAO/D,GAAUn8B,GAE5B,SAAS6gC,GAAcC,EAAUC,GAC7B,MAAO,QAAUL,GAAe,CAAEd,UAAWkB,IAAc,IAAMC,EAErE,SAASC,GAAiBF,GACtB,MAAO,cAAgBJ,GAAe,CAAEd,UAAWkB,IAQvD,IAAIG,GACJ,SAAWA,UACPA,EAAmBA,EAAyB,KAAI,GAAK,OACrDA,EAAmBA,EAA8B,UAAI,GAAK,YAC1DA,EAAmBA,EAA6B,SAAI,GAAK,WACzDA,EAAmBA,EAA+B,WAAI,GAAK,aAJpDA,EAAX,CAKE,IACF,SAASC,GAAUz5E,GACf,OAAsB,MAAfA,EAAM7R,MAAgB4qF,GAAmB/4E,EAAM7R,OAAS8qF,GAAej5E,EAAMo4E,YAExF,SAASsB,GAAe15E,GACpB,OAAwB,MAApBA,EAAMo4E,WACCp4E,EAAMo4E,WAAWD,UAGjBn4E,EAAM7R,MAMrB,IAAIwrF,GAA2C,WAO3C,OANA,SAAmC37E,GAC/B,IAAIg5B,OAAY,IAAPh5B,EAAgB,GAAKA,EAA8BwnC,EAASxO,EAAGwO,OAAQo0C,EAAY5iD,EAAG4iD,UAC/FvtF,KAAK6lC,UADyC8E,EAAG9E,WACnB,KAC9B7lC,KAAKm5C,OAASq0C,GAAgBr0C,GAC9Bn5C,KAAKutF,UAAYC,GAAgBD,IALK,GAY1CE,GAAyC,WACzC,SAASA,EAAwB97E,GAC7B,IAAsC0G,EAAW1G,EAAG0G,SAAUq1E,EAAc/7E,EAAG+7E,YAAaC,EAAUh8E,EAAGg8E,QAASx0C,EAASxnC,EAAGwnC,OAAQo0C,EAAY57E,EAAG47E,UAAWK,EAAsBj8E,EAAGi8E,oBAAqBC,EAAal8E,EAAGk8E,WAAY50D,EAAqBtnB,EAAGsnB,mBAAoB60D,EAAgBn8E,EAAGm8E,cAAeC,EAAWp8E,EAAGo8E,SAAUC,EAAsBr8E,EAAGq8E,oBAUzW,GATAhuF,KAAK+/C,cADepuC,EAAGouC,cAEvB//C,KAAKqY,SAAWA,EAChBrY,KAAK0tF,YAAcA,EACnB1tF,KAAK2tF,QAAUA,EACf3tF,KAAKm5C,OAASq0C,GAAgBr0C,GAC9Bn5C,KAAKutF,UAAYC,GAAgBD,GACjCvtF,KAAK4tF,oBAAsBJ,GAAgBI,GAC3C5tF,KAAK6tF,WAAaA,EAsQ1B,SAASI,EAAQ34C,GACb,OAAOA,EAAKvwC,OAAO,SAAUmxC,EAAM1qC,GAC/B,IAAI2qC,EAAWx2C,MAAMuC,QAAQsJ,GAAQyiF,EAAQziF,GAAQA,EACrD,OAAO0qC,EAAKj0C,OAAOk0C,IACpB,IA1QgC83C,CAAQJ,GAAc,GACrD7tF,KAAKi5B,mBAAqBA,GAAsB,GAC5C60D,GAAyC,GAAxBA,EAAcntF,OAC/B,MAAM,IAAIkC,MAAM,0DAEpB7C,KAAK8tF,cAAgBA,EACrB9tF,KAAK+tF,SAAWA,EAChB/tF,KAAKguF,oBAAsBA,EAU/B,OARAP,EAAwBvtF,UAAUguF,UAAY,WAC1C,MAAO,CACHj1D,mBAAoBj5B,KAAKi5B,mBACzB8mB,cAAe//C,KAAK+/C,cACpB5G,OAAQn5C,KAAKm5C,OACb00C,WAAY7tF,KAAK6tF,aAGlBJ,EA3BiC,GAgCxCU,GAA0C,WAC1C,SAASA,EAAyBx8E,GAC9B,IAAwBhB,EAAOgB,EAAGhB,KAAMsH,EAActG,EAAGsG,YAAa+gB,EAAWrnB,EAAGqnB,SAAUo1D,EAAWz8E,EAAGy8E,SAAU5X,EAAkB7kE,EAAG6kE,gBAAiB7nD,EAAShd,EAAGgd,OAAQC,EAAUjd,EAAGid,QAASy/D,EAAgB18E,EAAG08E,cAAeC,EAAiB38E,EAAG28E,eAAgBC,EAAiB58E,EAAG48E,eAAgBv8D,EAAYrgB,EAAGqgB,UAAWw8D,EAAgB78E,EAAG68E,cAAelsD,EAAU3wB,EAAG2wB,QAASgD,EAAS3zB,EAAG2zB,OAAQmpD,EAAc98E,EAAG88E,YAAaC,EAAkB/8E,EAAG+8E,gBAAiBr2E,EAAW1G,EAAG0G,SAAUs2E,EAAoBh9E,EAAGg9E,kBAAmBnpE,EAAe7T,EAAG6T,aAAcwvB,EAAmBrjC,EAAGqjC,iBACllBh1C,KAAK4uF,SADQj9E,EAAGi9E,OAEhB5uF,KAAK2Q,KAAOA,EACZ3Q,KAAKiY,YAAcA,EACnBjY,KAAKg5B,SAAWA,EAChBh5B,KAAKouF,SAAWA,EAChBpuF,KAAKw2E,gBAAkBA,EACvBx2E,KAAK2uB,OAASA,EACd3uB,KAAK4uB,QAAUA,EACf5uB,KAAKquF,cAAgBA,EACrBruF,KAAKsuF,eAAiBA,EACtBtuF,KAAKuuF,eAAiBA,EACtBvuF,KAAKgyB,UAAYw7D,GAAgBx7D,GACjChyB,KAAKwuF,cAAgBhB,GAAgBgB,GACrCxuF,KAAKsiC,QAAUkrD,GAAgBlrD,GAC/BtiC,KAAKslC,OAASA,EACdtlC,KAAKyuF,YAAcjB,GAAgBiB,GACnCzuF,KAAK0uF,gBAAkBlB,GAAgBkB,GACvC1uF,KAAKqY,SAAWA,EAChBrY,KAAK2uF,kBAAoBA,EACzB3uF,KAAKwlB,aAAeA,EACpBxlB,KAAKg1C,iBAAmBA,EAsF5B,OApFAm5C,EAAyBhuF,OAAS,SAAUwR,GACxC,IAAIi9E,EAASj9E,EAAGi9E,OAAQj+E,EAAOgB,EAAGhB,KAAMsH,EAActG,EAAGsG,YAAa+gB,EAAWrnB,EAAGqnB,SAAUo1D,EAAWz8E,EAAGy8E,SAAU5X,EAAkB7kE,EAAG6kE,gBAAiB7nD,EAAShd,EAAGgd,OAAQC,EAAUjd,EAAGid,QAASigE,EAAOl9E,EAAGk9E,KAAM78D,EAAYrgB,EAAGqgB,UAAWw8D,EAAgB78E,EAAG68E,cAAelsD,EAAU3wB,EAAG2wB,QAASgD,EAAS3zB,EAAG2zB,OAAQmpD,EAAc98E,EAAG88E,YAAaC,EAAkB/8E,EAAG+8E,gBAAiBr2E,EAAW1G,EAAG0G,SAAUs2E,EAAoBh9E,EAAGg9E,kBAAmBnpE,EAAe7T,EAAG6T,aAAcwvB,EAAmBrjC,EAAGqjC,iBACpfq5C,EAAgB,GAChBC,EAAiB,GACjBC,EAAiB,GACT,MAARM,GACArvF,OAAOyT,KAAK47E,GAAMnmF,QAAQ,SAAU6G,GAChC,IAAIzN,EAAQ+sF,EAAKt/E,GACbuqC,EAAUvqC,EAAIq0C,MAAM6oC,IACR,OAAZ3yC,EACAy0C,EAAeh/E,GAAOzN,EAEH,MAAdg4C,EAAQ,GACbw0C,EAAex0C,EAAQ,IAAMh4C,EAEV,MAAdg4C,EAAQ,KACbu0C,EAAcv0C,EAAQ,IAAMh4C,KAIxC,IAAIgtF,EAAY,GACF,MAAVngE,GACAA,EAAOjmB,QAAQ,SAAUqmF,GAGrB,IAAIl6D,EAAQyxD,GAAayI,EAAY,CAACA,EAAYA,IAClDD,EAAUj6D,EAAM,IAAMA,EAAM,KAGpC,IAAIm6D,EAAa,GASjB,OARe,MAAXpgE,GACAA,EAAQlmB,QAAQ,SAAUqmF,GAGtB,IAAIl6D,EAAQyxD,GAAayI,EAAY,CAACA,EAAYA,IAClDC,EAAWn6D,EAAM,IAAMA,EAAM,KAG9B,IAAIs5D,EAAyB,CAChCS,OAAQA,EACRj+E,KAAMA,EACNsH,cAAeA,EAAa+gB,SAAUA,EAAUo1D,SAAUA,EAAU5X,gBAAiBA,EACrF7nD,OAAQmgE,EACRlgE,QAASogE,EACTX,cAAeA,EACfC,eAAgBA,EAChBC,eAAgBA,EAChBv8D,UAAWA,EACXw8D,cAAeA,EACflsD,QAASA,EACTgD,OAAQA,EACRmpD,YAAaA,EACbC,gBAAiBA,EACjBr2E,SAAUA,EACVs2E,kBAAmBA,EACnBnpE,aAAcA,EACdwvB,iBAAkBA,KAG1Bm5C,EAAyBjuF,UAAUguF,UAAY,WAC3C,MAAO,CACHe,YAAa9B,GAAmB+B,UAChCv+E,KAAM3Q,KAAK2Q,KACXsH,YAAajY,KAAKiY,YAClB+gB,SAAUh5B,KAAKg5B,SACfo1D,SAAUpuF,KAAKouF,SACfz/D,OAAQ3uB,KAAK2uB,OACbC,QAAS5uB,KAAK4uB,QACdy/D,cAAeruF,KAAKquF,cACpBC,eAAgBtuF,KAAKsuF,eACrBC,eAAgBvuF,KAAKuuF,eACrBv8D,UAAWhyB,KAAKgyB,UAChBw8D,cAAexuF,KAAKwuF,cACpBlsD,QAAStiC,KAAKsiC,QACdgD,OAAQtlC,KAAKslC,OACbmpD,YAAazuF,KAAKyuF,YAClBC,gBAAiB1uF,KAAK0uF,gBACtBlY,gBAAiBx2E,KAAKw2E,gBACtBn+D,SAAUrY,KAAKqY,UAAYrY,KAAKqY,SAAS61E,YACzCS,kBAAmB3uF,KAAK2uF,kBACxBnpE,aAAcxlB,KAAKwlB,aACnBwvB,iBAAkBh1C,KAAKg1C,mBAGxBm5C,EA7GkC,GA+GzCgB,GAAqC,WACrC,SAASA,EAAoBx9E,GACzB,IAAoBxO,EAAOwO,EAAGxO,KAAMuzE,EAAO/kE,EAAG+kE,KAC9C12E,KAAK2Q,KADMgB,EAAGhB,KAEd3Q,KAAKmD,KAAOA,EACZnD,KAAK02E,OAASA,EAUlB,OARAyY,EAAoBjvF,UAAUguF,UAAY,WACtC,MAAO,CACHe,YAAa9B,GAAmBiC,KAChCz+E,KAAM3Q,KAAK2Q,KACXxN,KAAMnD,KAAKmD,KACXuzE,KAAM12E,KAAK02E,OAGZyY,EAf6B,GAyBpCE,GAAyC,WACzC,SAASA,EAAwB19E,GAC7B,IAAoBqgB,EAAYrgB,EAAGqgB,UAAWs9D,EAAqB39E,EAAG29E,mBAAoBC,EAAqB59E,EAAG49E,mBAAoBC,EAAgB79E,EAAG69E,cAAeC,EAAgB99E,EAAG89E,cAAef,EAAkB/8E,EAAG+8E,gBAAiB3/B,EAAsBp9C,EAAGo9C,oBAAqB2gC,EAAkB/9E,EAAG+9E,gBAAiBC,EAAkBh+E,EAAGg+E,gBAAiBC,EAAUj+E,EAAGi+E,QAASC,EAAmBl+E,EAAGk+E,iBAAkB1hE,EAAKxc,EAAGwc,GAChbnuB,KAAK2Q,KADMgB,EAAGhB,MACM,KACpB3Q,KAAKsvF,mBAAqB9B,GAAgB8B,GAC1CtvF,KAAKuvF,mBAAqB/B,GAAgB+B,GAC1CvvF,KAAKwvF,cAAgBhC,GAAgBgC,GACrCxvF,KAAKyvF,cAAgBjC,GAAgBiC,GACrCzvF,KAAKgyB,UAAYw7D,GAAgBx7D,GACjChyB,KAAK0uF,gBAAkBlB,GAAgBkB,GACvC1uF,KAAK+uD,oBAAsBy+B,GAAgBz+B,GAC3C/uD,KAAK0vF,gBAAkBlC,GAAgBkC,GACvC1vF,KAAK2vF,gBAAkBnC,GAAgBmC,GACvC3vF,KAAK4vF,QAAUpC,GAAgBoC,GAC/B5vF,KAAKmuB,GAAKA,GAAM,KAChBnuB,KAAK6vF,iBAAmBA,GAAoB,KAchD,OAZAR,EAAwBnvF,UAAUguF,UAAY,WAC1C,IAAI/6C,EAASnzC,KAAK6vF,iBAClB,MAAO,CACHZ,YAAa9B,GAAmB2C,SAChCn/E,KAAM3Q,KAAK2Q,KACX+9E,gBAAiBv7C,EAAOu7C,gBACxB18D,UAAWmhB,EAAOnhB,UAClB4Q,QAASuQ,EAAOvQ,QAChB2sD,mBAAoBp8C,EAAOo8C,mBAC3BE,cAAet8C,EAAOs8C,gBAGvBJ,EA7BiC,GA+BxCU,GAAmD,WACnD,SAASA,IACL/vF,KAAKgwF,cAAgB,IAAIv6D,IACzBz1B,KAAKyhB,WAAa,GAClBzhB,KAAKiwF,sBAAwB,IAAIx6D,IACjCz1B,KAAKuvF,mBAAqB,GAC1BvvF,KAAKkwF,SAAW,IAAIz6D,IACpBz1B,KAAK8tB,MAAQ,GACb9tB,KAAKmwF,iBAAmB,IAAI16D,IAC5Bz1B,KAAKyvF,cAAgB,GACrBzvF,KAAKowF,WAAa,IAAI36D,IACtBz1B,KAAK4iC,QAAU,GACf5iC,KAAKqwF,mBAAqB,IAAI56D,IAC9Bz1B,KAAK0uF,gBAAkB,GACvB1uF,KAAKgyB,UAAY,GAyCrB,OAvCA+9D,EAAkC7vF,UAAUowF,YAAc,SAAUn9D,EAAUggB,GAC1EnzC,KAAKgyB,UAAUnwB,KAAK,CAAEsxB,SAAUA,EAAUggB,OAAQA,KAEtD48C,EAAkC7vF,UAAUqwF,aAAe,SAAUpiE,GAC5DnuB,KAAKgwF,cAAc95D,IAAI/H,EAAG29D,aAC3B9rF,KAAKgwF,cAAc5rF,IAAI+pB,EAAG29D,WAC1B9rF,KAAKyhB,WAAW5f,KAAKssB,KAG7B4hE,EAAkC7vF,UAAUswF,qBAAuB,SAAUriE,GACpEnuB,KAAKiwF,sBAAsB/5D,IAAI/H,EAAG29D,aACnC9rF,KAAKiwF,sBAAsB7rF,IAAI+pB,EAAG29D,WAClC9rF,KAAKuvF,mBAAmB1tF,KAAKssB,KAGrC4hE,EAAkC7vF,UAAUuwF,QAAU,SAAUtiE,GACvDnuB,KAAKkwF,SAASh6D,IAAI/H,EAAG29D,aACtB9rF,KAAKkwF,SAAS9rF,IAAI+pB,EAAG29D,WACrB9rF,KAAK8tB,MAAMjsB,KAAKssB,KAGxB4hE,EAAkC7vF,UAAUwwF,gBAAkB,SAAUviE,GAC/DnuB,KAAKmwF,iBAAiBj6D,IAAI/H,EAAG29D,aAC9B9rF,KAAKmwF,iBAAiB/rF,IAAI+pB,EAAG29D,WAC7B9rF,KAAKyvF,cAAc5tF,KAAKssB,KAGhC4hE,EAAkC7vF,UAAUywF,UAAY,SAAUxiE,GACzDnuB,KAAKowF,WAAWl6D,IAAI/H,EAAG29D,aACxB9rF,KAAKowF,WAAWhsF,IAAI+pB,EAAG29D,WACvB9rF,KAAK4iC,QAAQ/gC,KAAKssB,KAG1B4hE,EAAkC7vF,UAAU0wF,kBAAoB,SAAUC,GACjE7wF,KAAKqwF,mBAAmBn6D,IAAI26D,EAAGh4D,iBAChC74B,KAAKqwF,mBAAmBjsF,IAAIysF,EAAGh4D,eAC/B74B,KAAK0uF,gBAAgB7sF,KAAKgvF,KAG3Bd,EAvD2C,GAyDtD,SAASvC,GAAgB7hF,GACrB,OAAOA,GAAO,GAElB,IAAImlF,GAA8B,WAW9B,OAVA,SAAsBn9E,EAAOhC,GACzB,IAAIgiB,EAAWhiB,EAAGgiB,SAAUlB,EAAW9gB,EAAG8gB,SAAUe,EAAc7hB,EAAG6hB,YAAaE,EAAa/hB,EAAG+hB,WAAYV,EAAOrhB,EAAGqhB,KAAMa,EAAQliB,EAAGkiB,MACzI7zB,KAAK2T,MAAQA,EACb3T,KAAK2zB,SAAWA,GAAY,KAC5B3zB,KAAKyyB,SAAWA,EAChBzyB,KAAKwzB,YAAcA,EACnBxzB,KAAK0zB,WAAaA,GAAc,KAChC1zB,KAAK+wF,aAAe/9D,GAAQ,KAC5BhzB,KAAK6zB,QAAUA,GATU,GAmBjC,SAASm9D,GAAaC,GAGlB,OAAOA,EAAIl8D,QAAQ,2BAA4B,UAEnD,SAASm8D,GAAkB95D,EAAc+5D,EAAUC,GAC/C,IAAIH,EAcJ,OATQA,EAJJG,EAAarD,SACToD,EAASxgF,KAAKm7E,qBAAqBK,GAG7BgF,EAASxgF,KAAKm7E,UAAUM,SAAW,IAAM+E,EAASxgF,KAAKm7E,UAAU3oF,KAAO,QAGxEypF,GAAex1D,GAAgB,IAAMw1D,GAAeuE,EAASxgF,MAAQ,QAIzEygF,EAAa1D,YAEhByD,EAASxgF,KAAKm7E,qBAAqBK,GAAe8E,EAAMD,GAAaC,GAqBhF,IA+III,GAAyB,WA6BzB,OApBA,SAAiBj0C,EAAOk0C,EAAcC,EAAsBC,EAASC,EAAatjE,GAC9EnuB,KAAKo9C,MAAQA,EACbp9C,KAAKsxF,aAAeA,EACpBtxF,KAAKuxF,qBAAuBA,EAC5BvxF,KAAKwxF,QAAUA,EACfxxF,KAAKyxF,YAAcA,EACnBzxF,KAAKmuB,GAAKA,EAENnuB,KAAK0xF,QADLt0C,EAAMz8C,OACS,CAAC,CACRyrF,SAAUhvC,EAAM,GAAGy8B,WAAW8X,MAAMC,KAAKX,IACzCY,UAAWz0C,EAAM,GAAGy8B,WAAW8X,MAAMG,KAAO,EAC5CC,SAAU30C,EAAM,GAAGy8B,WAAW8X,MAAMhhB,IAAM,EAC1CqhB,QAAS50C,EAAMA,EAAMz8C,OAAS,GAAGk5E,WAAWrsD,IAAIskE,KAAO,EACvDG,OAAQ70C,EAAM,GAAGy8B,WAAW8X,MAAMhhB,IAAM,IAIjC,IA1BC,GA+BxBuhB,GAAsB,WACtB,SAASA,EAAKpwF,EAAO+3E,GACjB75E,KAAK8B,MAAQA,EACb9B,KAAK65E,WAAaA,EAGtB,OADAqY,EAAKhyF,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAAW,OAAOkxE,EAAQga,UAAUpyF,KAAMkH,IAC7EgrF,EANc,GASrBG,GAA2B,WAC3B,SAASA,EAAUp2C,EAAU49B,GACzB75E,KAAKi8C,SAAWA,EAChBj8C,KAAK65E,WAAaA,EAGtB,OADAwY,EAAUnyF,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAAW,OAAOkxE,EAAQka,eAAetyF,KAAMkH,IACvFmrF,EANmB,GAQ1BE,GAAqB,WACrB,SAASA,EAAI1J,EAAYl4E,EAAM6hF,EAAO3Y,GAClC75E,KAAK6oF,WAAaA,EAClB7oF,KAAK2Q,KAAOA,EACZ3Q,KAAKwyF,MAAQA,EACbxyF,KAAK65E,WAAaA,EAGtB,OADA0Y,EAAIryF,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAAW,OAAOkxE,EAAQqa,SAASzyF,KAAMkH,IAC3EqrF,EARa,GAUpBG,GAAgC,WAChC,SAASA,EAAeC,EAAKlmE,EAAOmmE,EAAWC,EAAW52C,EAAUizB,EAAQ2K,GACxE75E,KAAK2yF,IAAMA,EACX3yF,KAAKysB,MAAQA,EACbzsB,KAAK4yF,UAAYA,EACjB5yF,KAAK6yF,UAAYA,EACjB7yF,KAAKi8C,SAAWA,EAChBj8C,KAAKkvE,OAASA,EACdlvE,KAAK65E,WAAaA,EAGtB,OADA6Y,EAAexyF,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAAW,OAAOkxE,EAAQ0a,oBAAoB9yF,KAAMkH,IACjGwrF,EAXwB,GAa/BK,GAA6B,WAC7B,SAASA,EAAYjxF,EAAOqB,EAAM02E,GAC9B75E,KAAK8B,MAAQA,EACb9B,KAAKmD,KAAOA,EACZnD,KAAK65E,WAAaA,EAGtB,OADAkZ,EAAY7yF,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAAW,OAAOkxE,EAAQ4a,iBAAiBhzF,KAAMkH,IAC3F6rF,EAPqB,GAS5BE,GAAgC,WAChC,SAASA,EAAenxF,EAAOqB,EAAM02E,GACjC75E,KAAK8B,MAAQA,EACb9B,KAAKmD,KAAOA,EACZnD,KAAK65E,WAAaA,EAGtB,OADAoZ,EAAe/yF,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAAW,OAAOkxE,EAAQ8a,oBAAoBlzF,KAAMkH,IACjG+rF,EAPwB,GAyC/BE,GAAgC,WAChC,SAASA,KAiBT,OAfAA,EAAejzF,UAAUkyF,UAAY,SAAU19D,EAAMxtB,KACrDisF,EAAejzF,UAAUoyF,eAAiB,SAAUpsE,EAAWhf,GAC3D,IAAIhB,EAAQlG,KACZkmB,EAAU+1B,SAASvzC,QAAQ,SAAUqZ,GAAS,OAAOA,EAAMowE,MAAMjsF,MAErEitF,EAAejzF,UAAUuyF,SAAW,SAAUW,EAAKlsF,GAC/C,IAAIhB,EAAQlG,KACZR,OAAOyT,KAAKmgF,EAAIZ,OAAO9pF,QAAQ,SAAU+6C,GAAK2vC,EAAIZ,MAAM/uC,GAAG0uC,MAAMjsF,MAErEitF,EAAejzF,UAAU4yF,oBAAsB,SAAUO,EAAInsF,GACzD,IAAIhB,EAAQlG,KACZqzF,EAAGp3C,SAASvzC,QAAQ,SAAUqZ,GAAS,OAAOA,EAAMowE,MAAMjsF,MAE9DitF,EAAejzF,UAAU8yF,iBAAmB,SAAUK,EAAInsF,KAC1DisF,EAAejzF,UAAUgzF,oBAAsB,SAAUG,EAAInsF,KACtDisF,EAlBwB,GA4BnC,SAASG,GAAOxwF,GACZ,OAAOA,EAAQqrB,IA4EnB,SAAc65D,GACV,IAAIr2E,EAAIg5B,EACJ4oD,EAAOxL,GAAWC,GAClBwL,EAqJR,SAAyBxL,EAAKyL,GAE1B,IADA,IAAID,EAAU7zF,MAAOqoF,EAAIrnF,OAAS,IAAO,GAChCH,EAAI,EAAGA,EAAIgzF,EAAQ7yF,OAAQH,IAChCgzF,EAAQhzF,GAAKkzF,GAAO1L,EAAS,EAAJxnF,EAAOizF,GAEpC,OAAOD,EA1JOG,CAAgBJ,EAAMK,GAAOC,KACvC7vF,EAAoB,EAAduvF,EAAK5yF,OACXmzF,EAAI,IAAIn0F,MAAM,IACd4mD,EAAK4X,GAAO,CAAC,WAAY,WAAY,WAAY,UAAY,YAAa,GAAI3qD,EAAI+yC,EAAG,GAAIhnD,EAAIgnD,EAAG,GAAI9V,EAAI8V,EAAG,GAAIjnD,EAAIinD,EAAG,GAAI9kD,EAAI8kD,EAAG,GACrIitC,EAAQxvF,GAAO,IAAM,KAAS,GAAKA,EAAM,GACzCwvF,EAAiC,IAAvBxvF,EAAM,IAAM,GAAM,IAAWA,EACvC,IAAK,IAAIxD,EAAI,EAAGA,EAAIgzF,EAAQ7yF,OAAQH,GAAK,GAAI,CAEzC,IADA,IAAIimD,EAAK0X,GAAO,CAAC3qD,EAAGjU,EAAGkxC,EAAGnxC,EAAGmC,GAAI,GAAIsyF,EAAKttC,EAAG,GAAIutC,EAAKvtC,EAAG,GAAIwtC,EAAKxtC,EAAG,GAAIytC,EAAKztC,EAAG,GAAI0tC,EAAK1tC,EAAG,GACpFvrC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAErB44E,EAAE54E,GADFA,EAAI,GACGs4E,EAAQhzF,EAAI0a,GAGZk5E,GAAMN,EAAE54E,EAAI,GAAK44E,EAAE54E,EAAI,GAAK44E,EAAE54E,EAAI,IAAM44E,EAAE54E,EAAI,IAAK,GAE9D,IAAI6rC,EAAKoX,GAAOk2B,GAAGn5E,EAAG3b,EAAGkxC,EAAGnxC,GAAI,GAAI2zC,EAAI8T,EAAG,GAAItD,EAAIsD,EAAG,GAClDutC,EAAO,CAACF,GAAM5gF,EAAG,GAAIy/B,EAAGxxC,EAAGgiD,EAAGqwC,EAAE54E,IAAInW,OAAOwvF,IACA9yF,GAA/CkQ,EAAKwsD,GAAO,CAAC7+D,EAAGmxC,EAAG2jD,GAAM70F,EAAG,IAAKiU,EAAG8gF,GAAO,IAAW,GAAIh1F,EAAIqS,EAAG,GAAI8+B,EAAI9+B,EAAG,GAAIpS,EAAIoS,EAAG,GAAI6B,EAAI7B,EAAG,GAEd6B,GAAxFm3B,EAAKwzB,GAAO,CAACo2B,GAAM/gF,EAAGugF,GAAKQ,GAAMh1F,EAAGy0F,GAAKO,GAAM9jD,EAAGwjD,GAAKM,GAAMj1F,EAAG40F,GAAKK,GAAM9yF,EAAG0yF,IAAM,IAAW,GAAI50F,EAAIorC,EAAG,GAAI8F,EAAI9F,EAAG,GAAIrrC,EAAIqrC,EAAG,GAAIlpC,EAAIkpC,EAAG,GAE/I,OAkKJ,SAA+Bq9C,GAE3B,IADA,IAAIwM,EAAM,GACDh0F,EAAI,EAAGA,EAAIwnF,EAAIrnF,OAAQH,IAAK,CACjC,IAAIjB,EAAIk1F,GAAOzM,EAAKxnF,GACpBg0F,IAAQj1F,IAAM,GAAG0D,SAAS,KAAW,GAAJ1D,GAAU0D,SAAS,IAExD,OAAOuxF,EAAI/4B,cAxKJi5B,CAAsBC,GAAoB,CAACnhF,EAAGjU,EAAGkxC,EAAGnxC,EAAGmC,KApGzCmzF,EA6CDx3C,EA7CqBt6C,EAAQs6C,MA8C1CA,EAAMr6C,IAAI,SAAUyQ,GAAK,OAAOA,EAAE2+E,MAAM0C,GAAmB,SA9CV3xF,KAAK,IAAO,IAAMJ,EAAQ0uF,QAAU,KA6ChG,IAAwBp0C,EA3CxB,SAAS03C,GAAchyF,GACnB,GAAIA,EAAQqrB,GACR,OAAOrrB,EAAQqrB,GAEnB,IAAIiqD,EAAU,IAAI2c,GAElB,OA2HJ,SAAsBl2C,EAAK2yC,GACvB,IAAI7/E,EACAg5B,EAAKwzB,GAAO62B,GAAYn2C,GAAM,GAAIo2C,EAAKtqD,EAAG,GAAIuqD,EAAKvqD,EAAG,GAC1D,GAAI6mD,EAAS,CACT,IAAIjrC,EAAK4X,GAAO62B,GAAYxD,GAAU,GAAI2D,EAAM5uC,EAAG,GAAI6uC,EAAM7uC,EAAG,GACT0uC,GAAvDtjF,EAAKwsD,GAqEb,SAAexsD,EAAIg5B,GACf,IAAI4b,EAAK4X,GAAOxsD,EAAI,GAAI0jF,EAAK9uC,EAAG,GAAI+uC,EAAK/uC,EAAG,GACxCE,EAAK0X,GAAOxzB,EAAI,GAAI4qD,EAAK9uC,EAAG,GAC5BM,EAAKoX,GAAOq3B,GAAUF,EADe7uC,EAAG,IACT,GAAIgvC,EAAQ1uC,EAAG,GAAI2uC,EAAI3uC,EAAG,GAE7D,MAAO,CADCwtC,GAAMA,GAAMc,EAAIE,GAAKE,GAClBC,GA1EKC,CAsFpB,SAAehkF,EAAI/E,GACf,IAAI+9B,EAAKwzB,GAAOxsD,EAAI,GAAIsjF,EAAKtqD,EAAG,GAAIuqD,EAAKvqD,EAAG,GAG5C,MAAO,CAFEsqD,GAxF6B,EAwFbC,IAAO,GACvBA,GAzF6B,EAyFbD,IAAO,IAzFVW,CAAM,CAACX,EAAIC,IAAS,CAACC,EAAKC,IAAO,IAAY,GAAIF,EAAKvjF,EAAG,GAE/E,OAqIJ,SAA+Bq2E,GAG3B,IAFA,IAAI6N,EAAU,GACVC,EAAa,IACRt1F,EAAIwnF,EAAIrnF,OAAS,EAAGH,GAAK,EAAGA,IACjCq1F,EAAUE,GAAUF,EAASG,GAAkBvB,GAAOzM,EAAKxnF,GAAIs1F,IAC/DA,EAAaE,GAAkB,IAAKF,GAExC,OAAOD,EAAQt5D,MAAM,IAAI05D,UAAU/yF,KAAK,IA5IjCgzF,CAAsBvB,GAAoB,CAAM,WAALM,EAAiBC,KAlI5DiB,CADKrzF,EAAQs6C,MAAMr6C,IAAI,SAAUyQ,GAAK,OAAOA,EAAE2+E,MAAM/Z,EAAS,QAC3Cl1E,KAAK,IAAKJ,EAAQ0uF,SAShD,IAAI4E,GAAoC,WACpC,SAASA,KAwBT,OAtBAA,EAAmBl2F,UAAUkyF,UAAY,SAAU19D,EAAMxtB,GAAW,OAAOwtB,EAAK5yB,OAChFs0F,EAAmBl2F,UAAUoyF,eAAiB,SAAUpsE,EAAWhf,GAC/D,IAAIhB,EAAQlG,KACZ,MAAO,IAAMkmB,EAAU+1B,SAASl5C,IAAI,SAAUgf,GAAS,OAAOA,EAAMowE,MAAMjsF,KAAWhD,KAAK,MAAQ,KAEtGkzF,EAAmBl2F,UAAUuyF,SAAW,SAAUW,EAAKlsF,GACnD,IAAIhB,EAAQlG,KACRq2F,EAAW72F,OAAOyT,KAAKmgF,EAAIZ,OAAOzvF,IAAI,SAAU0gD,GAAK,OAAOA,EAAI,KAAO2vC,EAAIZ,MAAM/uC,GAAG0uC,MAAMjsF,GAAS,MACvG,MAAO,IAAMktF,EAAIvK,WAAa,KAAOuK,EAAIziF,KAAO,KAAO0lF,EAASnzF,KAAK,MAAQ,KAEjFkzF,EAAmBl2F,UAAU4yF,oBAAsB,SAAUO,EAAInsF,GAC7D,IAAIhB,EAAQlG,KACZ,OAAOqzF,EAAGnkB,OACN,iBAAoBmkB,EAAGT,UAAY,MACnC,iBAAoBS,EAAGT,UAAY,KAAQS,EAAGp3C,SAASl5C,IAAI,SAAUgf,GAAS,OAAOA,EAAMowE,MAAMjsF,KAAWhD,KAAK,MAAQ,cAAiBmwF,EAAGR,UAAY,MAEjKuD,EAAmBl2F,UAAU8yF,iBAAmB,SAAUK,EAAInsF,GAC1D,OAAOmsF,EAAGvxF,MAAQ,aAAgBuxF,EAAGlwF,KAAO,KAAQkwF,EAAGvxF,MAAQ,QAAU,aAAgBuxF,EAAGlwF,KAAO,OAEvGizF,EAAmBl2F,UAAUgzF,oBAAsB,SAAUG,EAAInsF,GAC7D,MAAO,iBAAoBmsF,EAAGlwF,KAAO,KAAQkwF,EAAGvxF,MAAMqwF,MAAMnyF,MAAQ,SAEjEo2F,EAzB4B,GA2BnCvB,GAAoB,IAAIuB,GAWxBrB,GAAgD,SAAUhvF,GAE1D,SAASuwF,IACL,OAAkB,OAAXvwF,GAAmBA,EAAOlF,MAAMb,KAAMU,YAAcV,KAQ/D,OAVAg+D,GAAUs4B,EAAgCvwF,GAI1CuwF,EAA+Bp2F,UAAUuyF,SAAW,SAAUW,EAAKlsF,GAC/D,IAAIhB,EAAQlG,KACRq2F,EAAW72F,OAAOyT,KAAKmgF,EAAIZ,OAAOzvF,IAAI,SAAU0gD,GAAK,OAAOA,EAAI,KAAO2vC,EAAIZ,MAAM/uC,GAAG0uC,MAAMjsF,GAAS,MAEvG,MAAO,IAAMktF,EAAIziF,KAAO,KAAO0lF,EAASnzF,KAAK,MAAQ,KAElDozF,EAXwC,CAYjDF,IAmCF,SAAS/B,GAAGtwF,EAAOxE,EAAGkxC,EAAGnxC,GACrB,OAAIyE,EAAQ,GACD,CAAExE,EAAIkxC,GAAOlxC,EAAID,EAAI,YAE5ByE,EAAQ,GACD,CAACxE,EAAIkxC,EAAInxC,EAAG,YAEnByE,EAAQ,GACD,CAAExE,EAAIkxC,EAAMlxC,EAAID,EAAMmxC,EAAInxC,EAAI,YAElC,CAACC,EAAIkxC,EAAInxC,EAAG,YAUvB,SAAS01F,GAAYhN,GACjB,IAAIuL,EAAOxL,GAAWC,GAClBr2E,EAAKwsD,GAAO,CAACo4B,GAAOhD,EAAM,GAAIgD,GAAOhD,EAAM,SAAU,GAAI0B,EAAKtjF,EAAG,GAAIujF,EAAKvjF,EAAG,GAKjF,OAJU,GAANsjF,GAAkB,GAANC,GAAiB,GAANA,IACvBD,GAAU,UACVC,IAAW,YAER,CAACD,EAAIC,GAWhB,SAASqB,GAAOvO,EAAKv3C,GACjB,IAAI9+B,EAEAnR,EADAmqC,EAAKwzB,GAAO,CAAC,WAAY,YAAa,GAAI3qD,EAAIm3B,EAAG,GAAIprC,EAAIorC,EAAG,GAE5D3mC,EAAMgkF,EAAIrnF,OACd,IAAKH,EAAI,EAAGA,EAAI,IAAMwD,EAAKxD,GAAK,GAIIgT,GAAhC7B,EAAKwsD,GAAOq4B,GAAI,CAHhBhjF,EAAI+gF,GAAM/gF,EAAGkgF,GAAO1L,EAAKxnF,EAAGozF,GAAO6C,SACnCl3F,EAAIg1F,GAAMh1F,EAAGm0F,GAAO1L,EAAKxnF,EAAI,EAAGozF,GAAO6C,SACvChmD,EAAI8jD,GAAM9jD,EAAGijD,GAAO1L,EAAKxnF,EAAI,EAAGozF,GAAO6C,WACX,IAAW,GAAIl3F,EAAIoS,EAAG,GAAI8+B,EAAI9+B,EAAG,GAOjE,OALA6B,EAAI+gF,GAAM/gF,EAAGkgF,GAAO1L,EAAKxnF,EAAGozF,GAAO6C,SACnCl3F,EAAIg1F,GAAMh1F,EAAGm0F,GAAO1L,EAAKxnF,EAAI,EAAGozF,GAAO6C,SAEvChmD,EAAI8jD,GAAM9jD,EAAGzsC,GAENwyF,GAAI,CAAChjF,EAAGjU,EADfkxC,EAAI8jD,GAAM9jD,EAAGijD,GAAO1L,EAAKxnF,EAAI,EAAGozF,GAAO6C,SAAW,KAC5B,GAG1B,SAASD,GAAI7kF,GACT,IAAIg5B,EAAKwzB,GAAOxsD,EAAI,GAAI6B,EAAIm3B,EAAG,GAAIprC,EAAIorC,EAAG,GAAI8F,EAAI9F,EAAG,GA4BrD,OA3BAn3B,EAAIkjF,GAAMljF,EAAGjU,GACbiU,EAAIkjF,GAAMljF,EAAGi9B,GACbj9B,GAAKi9B,IAAM,GACXlxC,EAAIm3F,GAAMn3F,EAAGkxC,GACblxC,EAAIm3F,GAAMn3F,EAAGiU,GACbjU,GAAKiU,GAAK,EACVi9B,EAAIimD,GAAMjmD,EAAGj9B,GACbi9B,EAAIimD,GAAMjmD,EAAGlxC,GACbkxC,GAAKlxC,IAAM,GACXiU,EAAIkjF,GAAMljF,EAAGjU,GACbiU,EAAIkjF,GAAMljF,EAAGi9B,GACbj9B,GAAKi9B,IAAM,GACXlxC,EAAIm3F,GAAMn3F,EAAGkxC,GACblxC,EAAIm3F,GAAMn3F,EAAGiU,GACbjU,GAAKiU,GAAK,GACVi9B,EAAIimD,GAAMjmD,EAAGj9B,GACbi9B,EAAIimD,GAAMjmD,EAAGlxC,GACbkxC,GAAKlxC,IAAM,EACXiU,EAAIkjF,GAAMljF,EAAGjU,GACbiU,EAAIkjF,GAAMljF,EAAGi9B,GACbj9B,GAAKi9B,IAAM,EACXlxC,EAAIm3F,GAAMn3F,EAAGkxC,GACblxC,EAAIm3F,GAAMn3F,EAAGiU,GACbjU,GAAKiU,GAAK,GACVi9B,EAAIimD,GAAMjmD,EAAGj9B,GACbi9B,EAAIimD,GAAMjmD,EAAGlxC,GAEN,CAACiU,EAAGjU,EADXkxC,GAAKlxC,IAAM,IAKf,IAAIq0F,GACJ,SAAWA,UACPA,EAAOA,EAAe,OAAI,GAAK,SAC/BA,EAAOA,EAAY,IAAI,GAAK,MAFrBA,EAAX,CAGE,IACF,SAASW,GAAM/gF,EAAGjU,GACd,OAAOi2F,GAAUhiF,EAAGjU,GAAG,GAE3B,SAASi2F,GAAUhiF,EAAGjU,GAClB,IAAI4oF,GAAW,MAAJ30E,IAAmB,MAAJjU,GACtBo3F,GAAQnjF,IAAM,KAAOjU,IAAM,KAAO4oF,IAAQ,IAC9C,MAAO,CAACwO,IAAS,GAAKA,GAAQ,GAAa,MAANxO,GASzC,SAASuO,GAAMljF,EAAGjU,GACd,IAAI4oF,GAAW,MAAJ30E,IAAmB,MAAJjU,GAE1B,OADYiU,GAAK,KAAOjU,GAAK,KAAO4oF,GAAO,KAC3B,GAAa,MAANA,EAG3B,SAASiM,GAAM5gF,EAAG5G,GACd,OAAQ4G,GAAK5G,EAAU4G,IAAO,GAAK5G,EAgBvC,SAAS6nF,GAAOzM,EAAKjkF,GACjB,OAAOA,GAASikF,EAAIrnF,OAAS,EAA4B,IAAxBqnF,EAAIhnE,WAAWjd,GAEpD,SAAS2vF,GAAO1L,EAAKjkF,EAAO0vF,GACxB,IAAImD,EAAO,EACX,GAAInD,IAAWG,GAAOC,IAClB,IAAK,IAAIrzF,EAAI,EAAGA,EAAI,EAAGA,IACnBo2F,GAAQnC,GAAOzM,EAAKjkF,EAAQvD,IAAO,GAAK,EAAIA,OAIhD,IAASA,EAAI,EAAGA,EAAI,EAAGA,IACnBo2F,GAAQnC,GAAOzM,EAAKjkF,EAAQvD,IAAM,EAAIA,EAG9C,OAAOo2F,EAEX,SAASjC,GAAoBnB,GACzB,OAAOA,EAAQzuF,OAAO,SAAUijF,EAAK4O,GAAQ,OAAO5O,EAExD,SAA4B4O,GAExB,IADA,IAAI5O,EAAM,GACDxnF,EAAI,EAAGA,EAAI,EAAGA,IACnBwnF,GAAOx1D,OAAO41D,aAAcwO,IAAS,GAAK,EAAIp2F,GAAM,KAExD,OAAOwnF,EAPmD6O,CAAmBD,IAAU,IA4B3F,SAASb,GAAU5zF,EAAG20F,GAGlB,IAFA,IAAInrB,EAAM,GACN3nE,EAAM4B,KAAKmxF,IAAI50F,EAAExB,OAAQm2F,EAAEn2F,QACtBH,EAAI,EAAGi1F,EAAQ,EAAGj1F,EAAIwD,GAAOyxF,EAAOj1F,IAAK,CAC9C,IAAIw2F,EAASvB,KAAUtzF,EAAE3B,IAAM,MAAOs2F,EAAEt2F,IAAM,GAC1Cw2F,GAAU,IACVvB,EAAQ,EACR9pB,GAAOqrB,EAAS,KAGhBvB,EAAQ,EACR9pB,GAAOqrB,GAGf,OAAOrrB,EAEX,SAASqqB,GAAkBiB,EAAK13F,GAG5B,IAFA,IAAI23F,EAAU,GACVC,EAAc53F,EACH,IAAR03F,EAAWA,KAAc,EAClB,EAANA,IACAC,EAAUnB,GAAUmB,EAASC,IACjCA,EAAcpB,GAAUoB,EAAaA,GAEzC,OAAOD,EAUX,IAAIE,GAA4B,WAC5B,SAASA,KAKT,OADAA,EAAWl3F,UAAUm3F,iBAAmB,SAAUv0F,GAAW,OAAO,MAC7Ds0F,EANoB,GAW3BE,GAAyC,SAAUvxF,GAGnD,SAASwxF,EAAwBz0F,EAAS00F,GACtC,IAAItxF,EAAQH,EAAOnF,KAAKZ,OAASA,KAMjC,OALAkG,EAAMsxF,QAAUA,EAChBtxF,EAAMuxF,iBAAmB,GACzBvxF,EAAMwxF,eAAiB,GACvBxxF,EAAMyxF,iBAAmB,GACzB70F,EAAQs6C,MAAM10C,QAAQ,SAAU2a,GAAQ,OAAOA,EAAK8uE,MAAMjsF,KACnDA,EAuCX,OAhDA83D,GAAUu5B,EAAyBxxF,GAWnCwxF,EAAwBr3F,UAAU03F,aAAe,SAAUC,GACvD,OAAO73F,KAAKy3F,iBAAiB53F,eAAeg4F,GACxC73F,KAAKy3F,iBAAiBI,GACtB,MAERN,EAAwBr3F,UAAU43F,eAAiB,SAAU7iF,GACzD,OAAOjV,KAAK23F,iBAAiB93F,eAAeoV,GAAcjV,KAAK23F,iBAAiB1iF,GAC5E,MAERsiF,EAAwBr3F,UAAUkyF,UAAY,SAAU19D,EAAMxtB,GAAW,OAAO,MAChFqwF,EAAwBr3F,UAAU4yF,oBAAsB,SAAUO,EAAInsF,GAClElH,KAAK+3F,qBAAqB1E,EAAGT,WAC7B7sF,EAAO7F,UAAU4yF,oBAAoBlyF,KAAKZ,KAAMqzF,EAAInsF,GACpDlH,KAAK+3F,qBAAqB1E,EAAGR,YAEjC0E,EAAwBr3F,UAAU8yF,iBAAmB,SAAUK,EAAInsF,GAAWlH,KAAK+3F,qBAAqB1E,EAAGlwF,OAC3Go0F,EAAwBr3F,UAAUgzF,oBAAsB,SAAUG,EAAInsF,GAClElH,KAAK+3F,qBAAqB1E,EAAGlwF,OAGjCo0F,EAAwBr3F,UAAU63F,qBAAuB,SAAUF,GAC/D,GAAKA,IAAgB73F,KAAKy3F,iBAAiB53F,eAAeg4F,GAA1D,CAGA,IAAI5iF,EAAajV,KAAKw3F,QAAQK,GAC9B,GAAI73F,KAAK23F,iBAAiB93F,eAAeoV,GAAa,CAElD,IAAI+iF,EAASh4F,KAAK03F,eAAeziF,GACjCjV,KAAK03F,eAAeziF,GAAc+iF,EAAS,EAC3C/iF,EAAaA,EAAa,IAAM+iF,OAGhCh4F,KAAK03F,eAAeziF,GAAc,EAEtCjV,KAAKy3F,iBAAiBI,GAAgB5iF,EACtCjV,KAAK23F,iBAAiB1iF,GAAc4iF,IAEjCN,EAjDiC,CAkD1CpE,IAkCE8E,GAAW,IAzBe,WAC1B,SAASC,KAsBT,OApBAA,EAASh4F,UAAUi4F,SAAW,SAAUxF,GACpC,IAAIzsF,EAAQlG,KACRo4F,EAAWp4F,KAAKq4F,qBAAqB1F,EAAIlmE,OAC7C,GAA2B,GAAvBkmE,EAAI12C,SAASt7C,OACb,MAAO,IAAMgyF,EAAIxvF,KAAOi1F,EAAW,KAEvC,IAAIE,EAAc3F,EAAI12C,SAASl5C,IAAI,SAAUsgB,GAAQ,OAAOA,EAAK8uE,MAAMjsF,KACvE,MAAO,IAAMysF,EAAIxvF,KAAOi1F,EAAW,IAAME,EAAYp1F,KAAK,IAAM,KAAOyvF,EAAIxvF,KAAO,KAEtF+0F,EAASh4F,UAAUkyF,UAAY,SAAU19D,GAAQ,OAAOA,EAAK5yB,OAC7Do2F,EAASh4F,UAAUq4F,iBAAmB,SAAUC,GAC5C,MAAO,QAAUx4F,KAAKq4F,qBAAqBG,EAAK/rE,OAAS,OAE7DyrE,EAASh4F,UAAUm4F,qBAAuB,SAAU5rE,GAChD,IAAI2rE,EAAW54F,OAAOyT,KAAKwZ,GAAO1pB,IAAI,SAAUI,GAAQ,OAAOA,EAAO,KAAQspB,EAAMtpB,GAAQ,MAASD,KAAK,KAC1G,OAAOk1F,EAASz3F,OAAS,EAAI,IAAMy3F,EAAW,IAElDF,EAASh4F,UAAUu4F,aAAe,SAAUC,GACxC,MAAO,aAAeA,EAAQC,QAAU,OAASD,EAAQE,IAAM,QAE5DV,EAvBkB,IA0B7B,SAASW,GAAUz7C,GACf,OAAOA,EAAMr6C,IAAI,SAAUsgB,GAAQ,OAAOA,EAAK8uE,MAAM8F,MAAc/0F,KAAK,IAE5E,IAAI41F,GAA6B,WAC7B,SAASA,EAAYC,GACjB,IAAI7yF,EAAQlG,KACZA,KAAKysB,MAAQ,GACbjtB,OAAOyT,KAAK8lF,GAAgBrwF,QAAQ,SAAU+6C,GAC1Cv9C,EAAMumB,MAAMg3B,GAAKu1C,GAAUD,EAAet1C,MAIlD,OADAq1C,EAAY54F,UAAUiyF,MAAQ,SAAU/Z,GAAW,OAAOA,EAAQmgB,iBAAiBv4F,OAC5E84F,EATqB,GAW5BG,GAAyB,WACzB,SAASA,EAAQN,EAASC,GACtB54F,KAAK24F,QAAUA,EACf34F,KAAK44F,IAAMA,EAGf,OADAK,EAAQ/4F,UAAUiyF,MAAQ,SAAU/Z,GAAW,OAAOA,EAAQqgB,aAAaz4F,OACpEi5F,EANiB,GAQxBC,GAAqB,WACrB,SAASA,EAAI/1F,EAAM41F,EAAgB98C,QACR,IAAnB88C,IAA6BA,EAAiB,SACjC,IAAb98C,IAAuBA,EAAW,IACtC,IAAI/1C,EAAQlG,KACZA,KAAKmD,KAAOA,EACZnD,KAAKi8C,SAAWA,EAChBj8C,KAAKysB,MAAQ,GACbjtB,OAAOyT,KAAK8lF,GAAgBrwF,QAAQ,SAAU+6C,GAC1Cv9C,EAAMumB,MAAMg3B,GAAKu1C,GAAUD,EAAet1C,MAIlD,OADAy1C,EAAIh5F,UAAUiyF,MAAQ,SAAU/Z,GAAW,OAAOA,EAAQ+f,SAASn4F,OAC5Dk5F,EAba,GAepBC,GAAwB,WACxB,SAASjH,EAAKkH,GACVp5F,KAAK8B,MAAQk3F,GAAUI,GAG3B,OADAlH,EAAKhyF,UAAUiyF,MAAQ,SAAU/Z,GAAW,OAAOA,EAAQga,UAAUpyF,OAC9DkyF,EALgB,GAOvBmH,GAAoB,SAAUtzF,GAE9B,SAASuzF,EAAGC,GAER,YADW,IAAPA,IAAiBA,EAAK,GACnBxzF,EAAOnF,KAAKZ,KAAM,KAAO,IAAIL,MAAM45F,EAAK,GAAGr2F,KAAK,OAASlD,KAEpE,OALAg+D,GAAUs7B,EAAIvzF,GAKPuzF,EANY,CAOrBH,IACEK,GAAiB,CACjB,CAAC,KAAM,SACP,CAAC,KAAM,UACP,CAAC,KAAM,UACP,CAAC,KAAM,QACP,CAAC,KAAM,SAGX,SAASR,GAAUtkE,GACf,OAAO8kE,GAAez0F,OAAO,SAAU2vB,EAAM+vD,GAAS,OAAO/vD,EAAKK,QAAQ0vD,EAAM,GAAIA,EAAM,KAAQ/vD,GAUtG,IAMI+kE,GAAqB,SAAU1zF,GAE/B,SAAS2zF,IACL,OAAkB,OAAX3zF,GAAmBA,EAAOlF,MAAMb,KAAMU,YAAcV,KAuC/D,OAzCAg+D,GAAU07B,EAAK3zF,GAIf2zF,EAAIx5F,UAAUy5F,MAAQ,SAAUC,EAAUC,GACtC,IAAIC,EAAiB,IAAIC,GACrB3hB,EAAU,IAAI4hB,GACdC,EAAW,IAAIf,GAdP,iBAgCZ,OAjBAU,EAASlxF,QAAQ,SAAU5F,GACvB,IAAI2pB,EAAQ,CAAE0B,GAAIrrB,EAAQqrB,IACtBrrB,EAAQ2uF,cACRhlE,EAAY,KAAI3pB,EAAQ2uF,aAExB3uF,EAAQ0uF,UACR/kE,EAAe,QAAI3pB,EAAQ0uF,SAE/B,IAAI0I,EAAa,GACjBp3F,EAAQ4uF,QAAQhpF,QAAQ,SAAUT,GAC9BiyF,EAAWr4F,KAAK,IAAIq3F,GArBlB,SAqBmC,GAAI,CACrC,IAAIC,GAAOlxF,EAAOmkF,SAAW,IAAMnkF,EAAO4pF,WAAa5pF,EAAO+pF,UAAY/pF,EAAO4pF,UAAY,IAAM5pF,EAAO+pF,QAAU,UAG5HiI,EAASh+C,SAASp6C,KAAK,IAAIw3F,GAAG,GAAI,IAAIH,GA5B/B,MA4BiDzsE,EAAO2xC,GAAS87B,EAAY9hB,EAAQygB,UAAU/1F,EAAQs6C,YAElH68C,EAASh+C,SAASp6C,KAAK,IAAIw3F,IACpBR,GAAU,CACb,IAAIC,GAAY,CAAEqB,QAAS,MAAOC,SAAU,UAC5C,IAAIf,GACJ,IAAIJ,GAnCI,gBAKL,ujBA+BH,IAAII,GACJS,EAAeO,mBAAmBJ,GAClC,IAAIZ,MAGZK,EAAIx5F,UAAUo6F,KAAO,SAAUC,EAAStJ,GACpC,MAAM,IAAIpuF,MAAM,gBAEpB62F,EAAIx5F,UAAUozF,OAAS,SAAUxwF,GAAW,OAAO03F,GAAS13F,IAC5D42F,EAAIx5F,UAAUm3F,iBAAmB,SAAUv0F,GACvC,OAAO,IAAIw0F,GAAwBx0F,EAAS80F,KAEzC8B,EA1Ca,CA2CtBtC,IACE4C,GAA4B,WAC5B,SAAS9B,KAyDT,OAvDAA,EAASh4F,UAAUkyF,UAAY,SAAU19D,EAAMxtB,GAAW,MAAO,CAAC,IAAIiyF,GAAOzkE,EAAK5yB,SAClFo2F,EAASh4F,UAAUoyF,eAAiB,SAAUpsE,EAAWhf,GACrD,IAAIhB,EAAQlG,KACRo9C,EAAQ,GAEZ,OADAl3B,EAAU+1B,SAASvzC,QAAQ,SAAU2a,GAAQ,OAAO+5B,EAAMv7C,KAAKhB,MAAMu8C,EAAOghB,GAAS/6C,EAAK8uE,MAAMjsF,OACzFk3C,GAEX86C,EAASh4F,UAAUuyF,SAAW,SAAUW,EAAKlsF,GACzC,IAAIhB,EAAQlG,KACRo9C,EAAQ,CAAC,IAAI+7C,GAAO,IAAM/F,EAAIqH,sBAAwB,KAAOrH,EAAIziF,KAAO,OAK5E,OAJAnR,OAAOyT,KAAKmgF,EAAIZ,OAAO9pF,QAAQ,SAAU+nC,GACrC2M,EAAMv7C,KAAKhB,MAAMu8C,EAAOghB,GAAS,CAAC,IAAI+6B,GAAO1oD,EAAI,OAAQ2iD,EAAIZ,MAAM/hD,GAAG0hD,MAAMjsF,GAAQ,CAAC,IAAIizF,GAAO,WAEpG/7C,EAAMv7C,KAAK,IAAIs3F,GAAO,MACf/7C,GAEX86C,EAASh4F,UAAU4yF,oBAAsB,SAAUO,EAAInsF,GACnD,IAAIwzF,EAAiB,IAAIvB,GAAO,IAAM9F,EAAGV,IAAM,KAC3CgI,EAAU,IAAIzB,GApEP,KAoEyB,GAAI,CAACwB,IAErCE,EAAa,IAAI1B,GAvEN,KAuE4B,CAAE/1F,KAAMkwF,EAAGT,WAAa,CAAC+H,EAASD,IAC7E,GAAIrH,EAAGnkB,OAEH,MAAO,CAAC0rB,GAEZ,IAAIC,EAAiB,IAAI1B,GAAO,KAAO9F,EAAGV,IAAM,KAC5CmI,EAAU,IAAI5B,GA5EP,KA4EyB,GAAI,CAAC2B,IAErCE,EAAa,IAAI7B,GA/EN,KA+E4B,CAAE/1F,KAAMkwF,EAAGR,WAAa,CAACiI,EAASD,IAC7E,OAAOz8B,GAAS,CAACw8B,GAAa56F,KAAK64F,UAAUxF,EAAGp3C,UAAW,CAAC8+C,KAEhE7C,EAASh4F,UAAU8yF,iBAAmB,SAAUK,EAAInsF,GAChD,IAAI8zF,EAAsB,IAAI7B,GAAO,KAAO9F,EAAGvxF,MAAQ,MAEnDm5F,EAAQ,IAAI/B,GApFL,KAoFuB,GAAI,CAAC8B,IACvC,MAAO,CAEH,IAAI9B,GAxFO,KAwFe,CAAE/1F,KAAMkwF,EAAGlwF,MAAQ,CAAC83F,EAAOD,MAG7D9C,EAASh4F,UAAUgzF,oBAAsB,SAAUG,EAAInsF,GACnD,IAAIg0F,EAAgB7H,EAAGvxF,MAAM+mF,WACzBsS,EAAU9H,EAAGvxF,MAAM6O,KACnByqF,EAAW57F,OAAOyT,KAAKogF,EAAGvxF,MAAM0wF,OAAOzvF,IAAI,SAAUjB,GAAS,OAAOA,EAAQ,WAAaoB,KAAK,KAC/Fm4F,EAAY,IAAIlC,GAAO,IAAM+B,EAAgB,KAAOC,EAAU,KAAOC,EAAW,KAChFH,EAAQ,IAAI/B,GA/FL,KA+FuB,GAAI,CAACmC,IACvC,MAAO,CAEH,IAAInC,GAnGO,KAmGe,CAAE/1F,KAAMkwF,EAAGlwF,MAAQ,CAAC83F,EAAOI,MAG7DnD,EAASh4F,UAAU24F,UAAY,SAAUz7C,GACrC,IAAIl3C,EAAQlG,KACZ,MAAO,GAAGiC,OAAOpB,MAAM,GAAIu9D,GAAShhB,EAAMr6C,IAAI,SAAUsgB,GAAQ,OAAOA,EAAK8uE,MAAMjsF,QAE/EgyF,EA1DoB,GA4D/B,SAASsC,GAAS13F,GACd,OAAOgyF,GAAchyF,GAGzB,IAAIi3F,GAAgC,WAChC,SAASA,KAqBT,OAnBAA,EAAe75F,UAAUm6F,mBAAqB,SAAUh3E,GAEpD,OADAA,EAAK8uE,MAAMnyF,MACJqjB,GAEX02E,EAAe75F,UAAUi4F,SAAW,SAAUxF,GAC1C,IAAIzsF,EAAQlG,KACZ,GAzHe,OAyHX2yF,EAAIxvF,MACJ,IAAKwvF,EAAI12C,UAAmC,GAAvB02C,EAAI12C,SAASt7C,OAAa,CAC3C,IAAI26F,EAAS,IAAInC,GAAOxG,EAAIlmE,MAAY,MAAK,OAC7CkmE,EAAI12C,SAAW,CAAC,IAAIi9C,GA3HjB,KA2HmC,GAAI,CAACoC,WAG1C3I,EAAI12C,UACT02C,EAAI12C,SAASvzC,QAAQ,SAAU2a,GAAQ,OAAOA,EAAK8uE,MAAMjsF,MAGjE6zF,EAAe75F,UAAUkyF,UAAY,SAAU19D,KAC/CqlE,EAAe75F,UAAUq4F,iBAAmB,SAAUC,KACtDuB,EAAe75F,UAAUu4F,aAAe,SAAUC,KAC3CqB,EAtBwB,GAyBnC,SAASnC,GAAaC,GAClB,OAAOA,EAAa0D,cAAcxmE,QAAQ,cAAe,KAurB7D,SAASymE,GAAqBzP,EAAYjqF,GACtC,GAAa,MAATA,EAAJ,CAGA,IAAKnC,MAAMuC,QAAQJ,GACf,MAAM,IAAIe,MAAM,aAAekpF,EAAa,gCAEhD,IAAK,IAAIvrF,EAAI,EAAGA,EAAIsB,EAAMnB,OAAQH,GAAK,EACnC,GAAwB,iBAAbsB,EAAMtB,GACb,MAAM,IAAIqC,MAAM,aAAekpF,EAAa,iCAIxD,IAAI0P,GAAkC,CAClC,QACA,OACA,SACA,cACA,SAEJ,SAASC,GAA2B3P,EAAYjqF,GAC5C,KAAa,MAATA,GAAmBnC,MAAMuC,QAAQJ,IAA0B,GAAhBA,EAAMnB,QACjD,MAAM,IAAIkC,MAAM,aAAekpF,EAAa,mCAE3C,GAAa,MAATjqF,EAAe,CACpB,IAAI65F,EAAU75F,EAAM,GAChB85F,EAAQ95F,EAAM,GAElB25F,GAAgC/yF,QAAQ,SAAUmzF,GAC9C,GAAIA,EAAOC,KAAKH,IAAYE,EAAOC,KAAKF,GACpC,MAAM,IAAI/4F,MAAM,KAAO84F,EAAU,OAASC,EAAQ,iDAalE,IAAIG,GAAqC,WACrC,SAASA,EAAoBpK,EAAOnkE,GAChCxtB,KAAK2xF,MAAQA,EACb3xF,KAAKwtB,IAAMA,EASf,OAPAuuE,EAAoBlvF,UAAY,SAAUmvF,GACtC,OAAKA,GAGLN,GAA2B,gBAAiBM,GACrC,IAAID,EAAoBC,EAAQ,GAAIA,EAAQ,KAHxCC,IAKRF,EAZ6B,GAcpCE,GAA+B,IAAIF,GAAoB,KAAM,MAY7DG,GAAoC,WACpC,SAASA,EAAmBtK,QACX,IAATA,IAAmBA,EAAO,MAC9B5xF,KAAK4xF,KAAOA,EACZ5xF,KAAKm8F,eAAiB,IAAIhpF,IAC1BnT,KAAKo8F,MAAQ,GACbp8F,KAAKq8F,SAAW,EAChBr8F,KAAKs8F,aAAc,EAiGvB,OA9FAJ,EAAmBh8F,UAAUq8F,UAAY,SAAUtL,EAAKsJ,GAKpD,YAJgB,IAAZA,IAAsBA,EAAU,MAC/Bv6F,KAAKm8F,eAAejmE,IAAI+6D,IACzBjxF,KAAKm8F,eAAeppE,IAAIk+D,EAAKsJ,GAE1Bv6F,MAEXk8F,EAAmBh8F,UAAUs8F,QAAU,WAGnC,OAFAx8F,KAAKo8F,MAAMv6F,KAAK,IAChB7B,KAAKq8F,SAAW,EACTr8F,MAEXk8F,EAAmBh8F,UAAUu8F,WAAa,SAAUC,EAAMC,EAAWC,EAAaC,GAC9E,IAAK78F,KAAK88F,YACN,MAAM,IAAIj6F,MAAM,qDAEpB,GAAiB,MAAb85F,IAAsB38F,KAAKm8F,eAAejmE,IAAIymE,GAC9C,MAAM,IAAI95F,MAAM,wBAA2B85F,EAAY,KAE3D,GAAY,MAARD,EACA,MAAM,IAAI75F,MAAM,qDAEpB,GAAI65F,EAAO18F,KAAKq8F,SACZ,MAAM,IAAIx5F,MAAM,2CAEpB,GAAI85F,IAA6B,MAAfC,GAAqC,MAAdC,GACrC,MAAM,IAAIh6F,MAAM,sEAKpB,OAHA7C,KAAKs8F,aAAc,EACnBt8F,KAAKq8F,SAAWK,EAChB18F,KAAK88F,YAAYj7F,KAAK,CAAE66F,KAAMA,EAAMC,UAAWA,EAAWC,YAAaA,EAAaC,WAAYA,IACzF78F,MAEXR,OAAO0S,eAAegqF,EAAmBh8F,UAAW,cAAe,CAC/D0a,IAAK,WAAc,OAAO5a,KAAKo8F,MAAM/xF,OAAO,GAAG,IAC/CyvB,YAAY,EACZC,cAAc,IAElBmiE,EAAmBh8F,UAAU68F,OAAS,WAClC,IAAI72F,EAAQlG,KACZ,IAAKA,KAAKs8F,YACN,OAAO,KAEX,IAAIU,EAAe,IAAI7pF,IACnBu+E,EAAU,GACVyK,EAAiB,GACrBx8F,MAAMywC,KAAKpwC,KAAKm8F,eAAelpF,QAAQvK,QAAQ,SAAUuoF,EAAKzwF,GAC1Dw8F,EAAajqE,IAAIk+D,EAAKzwF,GACtBkxF,EAAQ7vF,KAAKovF,GACbkL,EAAet6F,KAAKqE,EAAMi2F,eAAevhF,IAAIq2E,IAAQ,QAEzD,IAAIgM,EAAW,GACXZ,EAAW,EACXa,EAAkB,EAClBC,EAAkB,EAClBC,EAAiB,EA0BrB,OAzBAp9F,KAAKo8F,MAAM1zF,QAAQ,SAAU20F,GACzBhB,EAAW,EACXY,GAAYI,EACPt6F,IAAI,SAAUu6F,GAEf,IAAIC,EAAWC,GAAYF,EAAQZ,KAAOL,GAc1C,OAbAA,EAAWiB,EAAQZ,KACM,MAArBY,EAAQX,YAERY,GACIC,GAAYR,EAAapiF,IAAI0iF,EAAQX,WAAaO,GACtDA,EAAkBF,EAAapiF,IAAI0iF,EAAQX,WAE3CY,GAAYC,GAAYF,EAAQV,YAAcO,GAC9CA,EAAkBG,EAAQV,YAE1BW,GAAYC,GAAYF,EAAQT,WAAaO,GAC7CA,EAAiBE,EAAQT,YAEtBU,IAENr6F,KAAK,KACV+5F,GAAY,MAEhBA,EAAWA,EAAS5yF,MAAM,GAAI,GACvB,CACHunF,KAAQ5xF,KAAK4xF,MAAQ,GACrBuI,QA/FE,EAgGFsD,WAAc,GACd/L,QAAWA,EACXyK,eAAkBA,EAClBc,SAAYA,IAGpBf,EAAmBh8F,UAAUw9F,YAAc,WACvC,OAAO19F,KAAKs8F,YAAc,qDAKlC,SAAwBx6F,GACpB,IAAI67F,EAAM,GACV77F,EAAQimF,GAAWjmF,GACnB,IAAK,IAAItB,EAAI,EAAGA,EAAIsB,EAAMnB,QAAS,CAC/B,IAAIi9F,EAAK97F,EAAMkf,WAAWxgB,KACtBq9F,EAAK/7F,EAAMkf,WAAWxgB,KACtBs9F,EAAKh8F,EAAMkf,WAAWxgB,KAC1Bm9F,GAAOI,GAAcH,GAAM,GAC3BD,GAAOI,IAAqB,EAALH,IAAW,GAAMnqF,MAAMoqF,GAAM,EAAIA,GAAM,IAC9DF,GAAOlqF,MAAMoqF,GAAM,IAAME,IAAqB,GAALF,IAAY,EAAMC,GAAM,GACjEH,GAAOlqF,MAAMoqF,IAAOpqF,MAAMqqF,GAAM,IAAMC,GAAmB,GAALD,GAExD,OAAOH,EAjB8CK,CAAelpE,KAAKphB,UAAU1T,KAAM,KAAM,IACvF,IAEDk8F,EAxG4B,GAwHvC,SAASsB,GAAY17F,GACjBA,EAAQA,EAAQ,EAAsB,IAAfA,GAAU,GAASA,GAAS,EACnD,IAAIm8F,EAAM,GACV,EAAG,CACC,IAAIC,EAAgB,GAARp8F,GACZA,IAAiB,GACL,IACRo8F,GAAgB,IAEpBD,GAAOF,GAAcG,SAChBp8F,EAAQ,GACjB,OAAOm8F,EAEX,IAAIE,GAAa,mEACjB,SAASJ,GAAcj8F,GACnB,GAAIA,EAAQ,GAAKA,GAAS,GACtB,MAAM,IAAIe,MAAM,8CAEpB,OAAOs7F,GAAWr8F,GAUtB,IAAIs8F,GAAiC,iBACjCC,GAAuB,wBACvBC,GAAe,KACfC,GAAoB3Y,GAAS,QAAS,KAAM,MAC5C4Y,GAAoB5Y,GAAS,QAAS,KAAM,MAC5C6Y,GAA8B,WAO9B,OANA,SAAsBC,GAClB1+F,KAAK0+F,OAASA,EACd1+F,KAAK2+F,YAAc,EACnB3+F,KAAK60B,MAAQ,GACb70B,KAAK4+F,SAAW,IALS,GAS7BC,GAAuC,WACvC,SAASA,EAAsBC,GAC3B9+F,KAAK8+F,QAAUA,EACf9+F,KAAK++F,SAAW,GAChB/+F,KAAKg/F,mBAAqB,EAC1Bh/F,KAAKi/F,OAAS,CAAC,IAAIR,GAAaK,IAuIpC,OArIAD,EAAsBK,WAAa,WAAc,OAAO,IAAIL,EAAsB,IAClFr/F,OAAO0S,eAAe2sF,EAAsB3+F,UAAW,eAAgB,CACnE0a,IAAK,WAAc,OAAO5a,KAAKi/F,OAAOj/F,KAAKi/F,OAAOt+F,OAAS,IAC3Dm5B,YAAY,EACZC,cAAc,IAElB8kE,EAAsB3+F,UAAUi/F,QAAU,SAAU/uD,EAAMgvD,QACrC,IAAbA,IAAuBA,EAAW,IACtCp/F,KAAKq/F,MAAMjvD,GAAQ,KAAMgvD,GAAU,IAEvCP,EAAsB3+F,UAAUo/F,YAAc,WAAc,OAA0C,IAAnCt/F,KAAKu/F,aAAa1qE,MAAMl0B,QAC3Fk+F,EAAsB3+F,UAAUs/F,WAAa,WACzC,OAAOx/F,KAAKu/F,aAAab,OAASJ,GAAa39F,OAASX,KAAKu/F,aAAaZ,aAE9EE,EAAsB3+F,UAAUm/F,MAAQ,SAAUjvD,EAAMqvD,EAAMC,QAC1C,IAAZA,IAAsBA,GAAU,GAChCD,EAAK9+F,OAAS,IACdX,KAAKu/F,aAAa1qE,MAAMhzB,KAAK49F,GAC7Bz/F,KAAKu/F,aAAaZ,aAAec,EAAK9+F,OACtCX,KAAKu/F,aAAaX,SAAS/8F,KAAKuuC,GAAQA,EAAKypC,YAAc,OAE3D6lB,GACA1/F,KAAKi/F,OAAOp9F,KAAK,IAAI48F,GAAaz+F,KAAK8+F,WAG/CD,EAAsB3+F,UAAUy/F,oBAAsB,WAC9C3/F,KAAKs/F,eACLt/F,KAAKi/F,OAAO3wD,OAGpBuwD,EAAsB3+F,UAAU0/F,UAAY,WACxC5/F,KAAK8+F,UACD9+F,KAAKs/F,gBACLt/F,KAAKu/F,aAAab,OAAS1+F,KAAK8+F,UAGxCD,EAAsB3+F,UAAU2/F,UAAY,WACxC7/F,KAAK8+F,UACD9+F,KAAKs/F,gBACLt/F,KAAKu/F,aAAab,OAAS1+F,KAAK8+F,UAGxCD,EAAsB3+F,UAAU4/F,UAAY,SAAUC,GAAS//F,KAAK++F,SAASl9F,KAAKk+F,IAClFlB,EAAsB3+F,UAAU8/F,SAAW,WAAc,OAAOhgG,KAAK++F,SAASzwD,OAC9E9uC,OAAO0S,eAAe2sF,EAAsB3+F,UAAW,eAAgB,CACnE0a,IAAK,WACD,OAAO5a,KAAK++F,SAASp+F,OAAS,EAAIX,KAAK++F,SAAS/+F,KAAK++F,SAASp+F,OAAS,GAAK,MAEhFm5B,YAAY,EACZC,cAAc,IAElB8kE,EAAsB3+F,UAAU+/F,SAAW,WACvC,OAAOjgG,KAAKkgG,YACPn9F,IAAI,SAAU2yF,GAAK,OAAOA,EAAE7gE,MAAMl0B,OAAS,EAAIw/F,GAAczK,EAAEgJ,QAAUhJ,EAAE7gE,MAAM3xB,KAAK,IAAM,KAC5FA,KAAK,OAEd27F,EAAsB3+F,UAAUkgG,qBAAuB,SAAUC,EAAaC,QACrD,IAAjBA,IAA2BA,EAAe,GAY9C,IAXA,IAAIv9F,EAAM,IAAIm5F,GAAmBmE,GAC7BE,GAAoB,EACpBC,EAAyB,WACpBD,IAIDx9F,EAAIw5F,UAAU8D,EAAa,KAAK5D,WAAW,EAAG4D,EAAa,EAAG,GAC9DE,GAAoB,IAGnB//F,EAAI,EAAGA,EAAI8/F,EAAc9/F,IAC9BuC,EAAIy5F,UACJgE,IAmCJ,OAjCAxgG,KAAKkgG,YAAYx3F,QAAQ,SAAUopF,EAAM2O,GACrC19F,EAAIy5F,UAMJ,IALA,IAAIkE,EAAQ5O,EAAK8M,SACb/pE,EAAQi9D,EAAKj9D,MACb6nE,EAAO5K,EAAK4M,OAASJ,GAAa39F,OAClCggG,EAAU,EAEPA,EAAUD,EAAM//F,SAAW+/F,EAAMC,IACpCjE,GAAQ7nE,EAAM8rE,GAAShgG,OACvBggG,IAQJ,IANIA,EAAUD,EAAM//F,QAAsB,IAAZ8/F,GAA0B,IAAT/D,EAC3C6D,GAAoB,EAGpBC,IAEGG,EAAUD,EAAM//F,QAAQ,CAC3B,IAAIigG,EAAOF,EAAMC,GACb14F,EAAS24F,EAAKjP,MAAMC,KACpBiP,EAAaD,EAAKjP,MAAMG,KACxBgP,EAAYF,EAAKjP,MAAMhhB,IAM3B,IALA5tE,EAAIw5F,UAAUt0F,EAAOgpF,IAAKhpF,EAAOsyF,SAC5BkC,WAAWC,EAAMz0F,EAAOgpF,IAAK4P,EAAYC,GAC9CpE,GAAQ7nE,EAAM8rE,GAAShgG,OACvBggG,IAEOA,EAAUD,EAAM//F,SAAWigG,IAASF,EAAMC,KAAaD,EAAMC,KAChEjE,GAAQ7nE,EAAM8rE,GAAShgG,OACvBggG,OAIL59F,GAEX87F,EAAsB3+F,UAAU6gG,qBAAuB,SAAUn0F,GAAS,OAAO5M,KAAKg/F,mBAAqBpyF,GAC3GiyF,EAAsB3+F,UAAU8gG,OAAS,SAAUlP,EAAMmP,GACrD,IAAIC,EAAclhG,KAAKi/F,OAAOnN,EAAO9xF,KAAKg/F,oBAC1C,GAAIkC,EAEA,IADA,IAAIC,EAAcF,EAASd,GAAce,EAAYxC,QAAQ/9F,OACpDygG,EAAY,EAAGA,EAAYF,EAAYrsE,MAAMl0B,OAAQygG,IAAa,CACvE,IAAI3B,EAAOyB,EAAYrsE,MAAMusE,GAC7B,GAAI3B,EAAK9+F,OAASwgG,EACd,OAAOD,EAAYtC,SAASwC,GAEhCD,GAAe1B,EAAK9+F,OAG5B,OAAO,MAEXnB,OAAO0S,eAAe2sF,EAAsB3+F,UAAW,cAAe,CAClE0a,IAAK,WACD,OAAI5a,KAAKi/F,OAAOt+F,QAA+D,IAArDX,KAAKi/F,OAAOj/F,KAAKi/F,OAAOt+F,OAAS,GAAGk0B,MAAMl0B,OACzDX,KAAKi/F,OAAO50F,MAAM,GAAI,GAE1BrK,KAAKi/F,QAEhBnlE,YAAY,EACZC,cAAc,IAEX8kE,EA5I+B,GA8ItCwC,GAAwC,WACxC,SAASA,EAAuBC,GAC5BthG,KAAKshG,uBAAyBA,EA8TlC,OA5TAD,EAAuBnhG,UAAUoiF,oBAAsB,SAAUN,EAAM+H,GAGnE,OAFA/H,EAAKvE,KAAKL,gBAAgBp9E,KAAM+pF,GAChCA,EAAIoV,QAAQnd,EAAM,KACX,MAEXqf,EAAuBnhG,UAAUuiF,gBAAkB,SAAUT,EAAM+H,GAI/D,OAHAA,EAAIsV,MAAMrd,EAAM,WAChBA,EAAKlgF,MAAMs7E,gBAAgBp9E,KAAM+pF,GACjCA,EAAIoV,QAAQnd,EAAM,KACX,MAEXqf,EAAuBnhG,UAAUujF,YAAc,SAAUzB,EAAM+H,GAC3DA,EAAIsV,MAAMrd,EAAM,QAChBA,EAAKvC,UAAUrC,gBAAgBp9E,KAAM+pF,GACrCA,EAAIsV,MAAMrd,EAAM,OAChB,IAAIuf,EAAgC,MAAlBvf,EAAKxH,WAAqBwH,EAAKxH,UAAU75E,OAAS,EAoBpE,OAnBIqhF,EAAKzH,SAAS55E,QAAU,IAAM4gG,GAC9BxX,EAAIsV,MAAMrd,EAAM,KAChBhiF,KAAKwkF,mBAAmBxC,EAAKzH,SAAUwP,GACvCA,EAAI4V,sBACJ5V,EAAIsV,MAAMrd,EAAM,OAGhB+H,EAAIoV,UACJpV,EAAI6V,YACJ5/F,KAAKwkF,mBAAmBxC,EAAKzH,SAAUwP,GACvCA,EAAI8V,YACA0B,IACAxX,EAAIoV,QAAQnd,EAAM,YAClB+H,EAAI6V,YACJ5/F,KAAKwkF,mBAAmBxC,EAAKxH,UAAWuP,GACxCA,EAAI8V,cAGZ9V,EAAIoV,QAAQnd,EAAM,KACX,MAEXqf,EAAuBnhG,UAAU+jF,eAAiB,SAAUjC,EAAM+H,GAI9D,OAHAA,EAAIsV,MAAMrd,EAAM,UAChBA,EAAKjgF,MAAMq7E,gBAAgBp9E,KAAM+pF,GACjCA,EAAIoV,QAAQnd,EAAM,KACX,MAEXqf,EAAuBnhG,UAAU2kF,iBAAmB,SAAU7C,EAAM+H,GAOhE,OANI/H,EAAKwf,UACLzX,EAAIoV,QAAQnd,EAAM,MAAQA,EAAKn0B,QAAU,OAGzCm0B,EAAKn0B,QAAQtxB,MAAM,MAAM7zB,QAAQ,SAAUopF,GAAQ/H,EAAIoV,QAAQnd,EAAM,MAAQ8P,KAE1E,MAEXuP,EAAuBnhG,UAAU4kF,sBAAwB,SAAU9C,EAAM+H,GAErE,OADAA,EAAIoV,QAAQnd,EAAM,KAAOA,EAAK/+E,WAAa,MACpC,MAEXo+F,EAAuBnhG,UAAU09E,kBAAoB,SAAUH,EAAMsM,GACjE,IAAI0X,EAAe1X,EAAIuV,cASvB,OARKmC,GACD1X,EAAIsV,MAAM5hB,EAAM,KAEpBsM,EAAIsV,MAAM5hB,EAAMA,EAAKt6E,KAAO,OAC5Bs6E,EAAK37E,MAAMs7E,gBAAgBp9E,KAAM+pF,GAC5B0X,GACD1X,EAAIsV,MAAM5hB,EAAM,KAEb,MAEX4jB,EAAuBnhG,UAAUm+E,kBAAoB,SAAUZ,EAAMsM,GACjE,IAAI0X,EAAe1X,EAAIuV,cAYvB,OAXKmC,GACD1X,EAAIsV,MAAM5hB,EAAM,KAEpBA,EAAKW,SAAShB,gBAAgBp9E,KAAM+pF,GACpCA,EAAIsV,MAAM5hB,EAAM,KAChBA,EAAK15E,MAAMq5E,gBAAgBp9E,KAAM+pF,GACjCA,EAAIsV,MAAM5hB,EAAM,QAChBA,EAAK37E,MAAMs7E,gBAAgBp9E,KAAM+pF,GAC5B0X,GACD1X,EAAIsV,MAAM5hB,EAAM,KAEb,MAEX4jB,EAAuBnhG,UAAUs+E,mBAAqB,SAAUf,EAAMsM,GAClE,IAAI0X,EAAe1X,EAAIuV,cAUvB,OATKmC,GACD1X,EAAIsV,MAAM5hB,EAAM,KAEpBA,EAAKW,SAAShB,gBAAgBp9E,KAAM+pF,GACpCA,EAAIsV,MAAM5hB,EAAM,IAAMA,EAAKt6E,KAAO,OAClCs6E,EAAK37E,MAAMs7E,gBAAgBp9E,KAAM+pF,GAC5B0X,GACD1X,EAAIsV,MAAM5hB,EAAM,KAEb,MAEX4jB,EAAuBnhG,UAAUy+E,sBAAwB,SAAUlB,EAAMsM,GACrEtM,EAAKW,SAAShB,gBAAgBp9E,KAAM+pF,GACpC,IAAI5mF,EAAOs6E,EAAKt6E,KAChB,OAAoB,MAAhBs6E,EAAKP,SAEO,OADZ/5E,EAAOnD,KAAK0hG,qBAAqBjkB,EAAKP,UAG3B,MAGf6M,EAAIsV,MAAM5hB,EAAM,IAAMt6E,EAAO,KAC7BnD,KAAKukF,oBAAoB9G,EAAKnsE,KAAMy4E,EAAK,KACzCA,EAAIsV,MAAM5hB,EAAM,KACT,OAEX4jB,EAAuBnhG,UAAU2+E,wBAA0B,SAAUpB,EAAMsM,GAKvE,OAJAtM,EAAK/6E,GAAG06E,gBAAgBp9E,KAAM+pF,GAC9BA,EAAIsV,MAAM5hB,EAAM,KAChBz9E,KAAKukF,oBAAoB9G,EAAKnsE,KAAMy4E,EAAK,KACzCA,EAAIsV,MAAM5hB,EAAM,KACT,MAEX4jB,EAAuBnhG,UAAUokF,qBAAuB,SAAUD,EAAK0F,GACnE,MAAM,IAAIlnF,MAAM,mDAEpBw+F,EAAuBnhG,UAAUw9E,gBAAkB,SAAUD,EAAMsM,GAC/DA,EAAIsV,MAAM5hB,EAAM,WAChBA,EAAKA,KAAKL,gBAAgBp9E,KAAM+pF,IAEpCsX,EAAuBnhG,UAAUm9E,iBAAmB,SAAUgH,EAAK0F,GAC/D,IAAI4X,EAAUtd,EAAIlhF,KAClB,GAAmB,MAAfkhF,EAAInH,QACJ,OAAQmH,EAAInH,SACR,KAAKH,GAAW6kB,MACZD,EAAU,QACV,MACJ,KAAK5kB,GAAW8kB,KACZF,EAAU,OACV,MACJ,KAAK5kB,GAAW+kB,WACZH,EAAUpD,GAAkBp7F,KAC5B,MACJ,KAAK45E,GAAWglB,WACZJ,EAAUnD,GAAkBr7F,KAC5B,MACJ,QACI,MAAM,IAAIN,MAAM,4BAA8BwhF,EAAInH,SAI9D,OADA6M,EAAIsV,MAAMhb,EAAKsd,GACR,MAEXN,EAAuBnhG,UAAU8+E,qBAAuB,SAAUqF,EAAK0F,GAMnE,OALAA,EAAIsV,MAAMhb,EAAK,QACfA,EAAItF,UAAU3B,gBAAgBp9E,KAAM+pF,GACpCA,EAAIsV,MAAMhb,EAAK,KACfrkF,KAAKukF,oBAAoBF,EAAI/yE,KAAMy4E,EAAK,KACxCA,EAAIsV,MAAMhb,EAAK,KACR,MAEXgd,EAAuBnhG,UAAUi/E,iBAAmB,SAAUkF,EAAK0F,GAC/D,IAAIjoF,EAAQuiF,EAAIviF,MAOhB,OALIioF,EAAIsV,MAAMhb,EADO,iBAAVviF,EACQkgG,GAAiBlgG,EAAO9B,KAAKshG,wBAG7B,GAAKx/F,GAEjB,MAEXu/F,EAAuBnhG,UAAUw/E,qBAAuB,SAAU2E,EAAK0F,GAQnE,OAPAA,EAAIsV,MAAMhb,EAAK,KACfA,EAAI5E,UAAUrC,gBAAgBp9E,KAAM+pF,GACpCA,EAAIsV,MAAMhb,EAAK,MACfA,EAAI9J,SAAS6C,gBAAgBp9E,KAAM+pF,GACnCA,EAAIsV,MAAMhb,EAAK,MACfA,EAAI7J,UAAU4C,gBAAgBp9E,KAAM+pF,GACpCA,EAAIsV,MAAMhb,EAAK,KACR,MAEXgd,EAAuBnhG,UAAU2/E,aAAe,SAAUwE,EAAK0F,GAG3D,OAFAA,EAAIsV,MAAMhb,EAAK,KACfA,EAAI5E,UAAUrC,gBAAgBp9E,KAAM+pF,GAC7B,MAEXsX,EAAuBnhG,UAAU8/E,uBAAyB,SAAUqE,EAAK0F,GAErE,OADA1F,EAAI5E,UAAUrC,gBAAgBp9E,KAAM+pF,GAC7B,MAEXsX,EAAuBnhG,UAAUygF,wBAA0B,SAAU0D,EAAK0F,GACtE,IAAIkY,EACJ,OAAQ5d,EAAIr8E,UACR,KAAKuxE,GAAesB,OAChBonB,EAAQ,KACR,MACJ,KAAK1oB,GAAe0B,UAChBgnB,EAAQ,MACR,MACJ,KAAK1oB,GAAewB,UAChBknB,EAAQ,KACR,MACJ,KAAK1oB,GAAe4B,aAChB8mB,EAAQ,MACR,MACJ,KAAK1oB,GAAeqC,IAChBqmB,EAAQ,KACR,MACJ,KAAK1oB,GAAewC,WAChBkmB,EAAQ,IACR,MACJ,KAAK1oB,GAAeyC,GAChBimB,EAAQ,KACR,MACJ,KAAK1oB,GAAe+B,KAChB2mB,EAAQ,IACR,MACJ,KAAK1oB,GAAe6B,MAChB6mB,EAAQ,IACR,MACJ,KAAK1oB,GAAegC,OAChB0mB,EAAQ,IACR,MACJ,KAAK1oB,GAAekC,SAChBwmB,EAAQ,IACR,MACJ,KAAK1oB,GAAeoC,OAChBsmB,EAAQ,IACR,MACJ,KAAK1oB,GAAe2C,MAChB+lB,EAAQ,IACR,MACJ,KAAK1oB,GAAe6C,YAChB6lB,EAAQ,KACR,MACJ,KAAK1oB,GAAe+C,OAChB2lB,EAAQ,IACR,MACJ,KAAK1oB,GAAeiD,aAChBylB,EAAQ,KACR,MACJ,QACI,MAAM,IAAIp/F,MAAM,oBAAsBwhF,EAAIr8E,UASlD,OAPIq8E,EAAIvI,QACJiO,EAAIsV,MAAMhb,EAAK,KACnBA,EAAI3D,IAAItD,gBAAgBp9E,KAAM+pF,GAC9BA,EAAIsV,MAAMhb,EAAK,IAAM4d,EAAQ,KAC7B5d,EAAI1J,IAAIyC,gBAAgBp9E,KAAM+pF,GAC1B1F,EAAIvI,QACJiO,EAAIsV,MAAMhb,EAAK,KACZ,MAEXgd,EAAuBnhG,UAAU2gF,kBAAoB,SAAUwD,EAAK0F,GAIhE,OAHA1F,EAAIjG,SAAShB,gBAAgBp9E,KAAM+pF,GACnCA,EAAIsV,MAAMhb,EAAK,KACf0F,EAAIsV,MAAMhb,EAAKA,EAAIlhF,MACZ,MAEXk+F,EAAuBnhG,UAAU6gF,iBAAmB,SAAUsD,EAAK0F,GAK/D,OAJA1F,EAAIjG,SAAShB,gBAAgBp9E,KAAM+pF,GACnCA,EAAIsV,MAAMhb,EAAK,KACfA,EAAItgF,MAAMq5E,gBAAgBp9E,KAAM+pF,GAChCA,EAAIsV,MAAMhb,EAAK,KACR,MAEXgd,EAAuBnhG,UAAUkhF,sBAAwB,SAAUiD,EAAK0F,GAIpE,OAHAA,EAAIsV,MAAMhb,EAAK,KACfrkF,KAAKukF,oBAAoBF,EAAInD,QAAS6I,EAAK,KAC3CA,EAAIsV,MAAMhb,EAAK,KACR,MAEXgd,EAAuBnhG,UAAUuhF,oBAAsB,SAAU4C,EAAK0F,GAClE,IAAI7jF,EAAQlG,KAOZ,OANA+pF,EAAIsV,MAAMhb,EAAK,KACfrkF,KAAKkiG,gBAAgB,SAAUzd,GAC3BsF,EAAIsV,MAAMhb,EAAK2d,GAAiBvd,EAAMl1E,IAAKrJ,EAAMo7F,uBAAwB7c,EAAMnD,QAAU,KACzFmD,EAAM3iF,MAAMs7E,gBAAgBl3E,EAAO6jF,IACpC1F,EAAInD,QAAS6I,EAAK,KACrBA,EAAIsV,MAAMhb,EAAK,KACR,MAEXgd,EAAuBnhG,UAAU0hF,eAAiB,SAAUyC,EAAK0F,GAI7D,OAHAA,EAAIsV,MAAMhb,EAAK,KACfrkF,KAAKukF,oBAAoBF,EAAIxvD,MAAOk1D,EAAK,KACzCA,EAAIsV,MAAMhb,EAAK,KACR,MAEXgd,EAAuBnhG,UAAUqkF,oBAAsB,SAAU4d,EAAapY,EAAKqY,GAC/E,IAAIl8F,EAAQlG,KACZA,KAAKkiG,gBAAgB,SAAUzkB,GAAQ,OAAOA,EAAKL,gBAAgBl3E,EAAO6jF,IAASoY,EAAapY,EAAKqY,IAEzGf,EAAuBnhG,UAAUgiG,gBAAkB,SAAUG,EAASF,EAAapY,EAAKqY,GAEpF,IADA,IAAIE,GAAoB,EACf9hG,EAAI,EAAGA,EAAI2hG,EAAYxhG,OAAQH,IAChCA,EAAI,IACAupF,EAAIyV,aAAe,IACnBzV,EAAIsV,MAAM,KAAM+C,GAAW,GACtBE,IAEDvY,EAAI6V,YACJ7V,EAAI6V,YACJ0C,GAAoB,IAIxBvY,EAAIsV,MAAM,KAAM+C,GAAW,IAGnCC,EAAQF,EAAY3hG,IAEpB8hG,IAEAvY,EAAI8V,YACJ9V,EAAI8V,cAGZwB,EAAuBnhG,UAAUskF,mBAAqB,SAAUlE,EAAYyJ,GACxE,IAAI7jF,EAAQlG,KACZsgF,EAAW53E,QAAQ,SAAUs5E,GAAQ,OAAOA,EAAKC,eAAe/7E,EAAO6jF,MAEpEsX,EAhUgC,GAkU3C,SAASW,GAAiB74F,EAAOo5F,EAAcC,GAE3C,QADoB,IAAhBA,IAA0BA,GAAc,GAC/B,MAATr5F,EACA,OAAO,KAEX,IAAI05E,EAAO15E,EAAM4rB,QAAQqpE,GAAgC,WAErD,IADA,IAAIx6C,EAAQ,GACH36C,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpC26C,EAAM36C,GAAMvI,UAAUuI,GAE1B,MAAgB,KAAZ26C,EAAM,GACC2+C,EAAe,MAAQ,IAEb,MAAZ3+C,EAAM,GACJ,MAEU,MAAZA,EAAM,GACJ,MAGA,KAAOA,EAAM,KAI5B,OADqB4+C,IAAgBnE,GAAqBvC,KAAKjZ,GACvC,IAAMA,EAAO,IAAMA,EAE/C,SAASsd,GAAcvzF,GAEnB,IADA,IAAIiH,EAAM,GACDrT,EAAI,EAAGA,EAAIoM,EAAOpM,IACvBqT,GAAOyqF,GAEX,OAAOzqF,EA2MX,IAAI4uF,GAAmC,SAAU18F,GAE7C,SAAS28F,EAAkBzW,GACvB,IAAI/lF,EAAQH,EAAOnF,KAAKZ,OAASA,KAKjC,OAJAkG,EAAM+lF,UAAYA,EAClB/lF,EAAMy8F,cAAgB,GACtBz8F,EAAM08F,eAAiB,GACvB18F,EAAM28F,kBAAoB,GACnB38F,EAiDX,OAxDA83D,GAAU0kC,EAAmB38F,GAS7B28F,EAAkBxiG,UAAU4iG,iBAAmB,SAAU/Y,GAC1C,IAAIxH,GAAgB,IAAIhB,GAAevhF,KAAK6iG,kBAAkB9/F,IAAI,SAAUggG,GAAa,OAAO,IAAI1hB,GAAgB0hB,EAAWnd,GAASmd,IAAY,OAC1J9gB,eAAejiF,KAAM+pF,IAE9B2Y,EAAkBxiG,UAAU8iG,QAAU,WAElC,IADA,IAAI/2F,EAAS,GACJzL,EAAI,EAAGA,EAAIR,KAAK2iG,cAAchiG,OAAQH,IAC3CyL,EAAOjM,KAAK2iG,cAAcniG,IAAMR,KAAK4iG,eAAepiG,GAExD,OAAOyL,GAEXy2F,EAAkBxiG,UAAUq/E,kBAAoB,SAAU8E,EAAK0F,GAE3D,OADA/pF,KAAKijG,yBAAyB5e,EAAKrkF,KAAKisF,UAAUC,yBAAyB7H,EAAIviF,OAAQioF,GAChF,MAEX2Y,EAAkBxiG,UAAUokF,qBAAuB,SAAUD,EAAK0F,GAE9D,OADA/pF,KAAKijG,yBAAyB5e,EAAKA,EAAIhhE,KAAM0mE,GACtC,MAEX2Y,EAAkBxiG,UAAUgiF,oBAAsB,SAAUF,EAAM+H,GAI9D,OAHI/H,EAAKlK,YAAYkG,GAAaklB,WAC9BljG,KAAK6iG,kBAAkBhhG,KAAKmgF,EAAK7+E,MAE9B4C,EAAO7F,UAAUgiF,oBAAoBthF,KAAKZ,KAAMgiF,EAAM+H,IAEjE2Y,EAAkBxiG,UAAUkiF,yBAA2B,SAAUJ,EAAM+H,GAInE,OAHI/H,EAAKlK,YAAYkG,GAAaklB,WAC9BljG,KAAK6iG,kBAAkBhhG,KAAKmgF,EAAK7+E,MAE9B4C,EAAO7F,UAAUkiF,yBAAyBxhF,KAAKZ,KAAMgiF,EAAM+H,IAEtE2Y,EAAkBxiG,UAAUojF,sBAAwB,SAAUtB,EAAM+H,GAIhE,OAHI/H,EAAKlK,YAAYkG,GAAaklB,WAC9BljG,KAAK6iG,kBAAkBhhG,KAAKmgF,EAAK7+E,MAE9B4C,EAAO7F,UAAUojF,sBAAsB1iF,KAAKZ,KAAMgiF,EAAM+H,IAEnE2Y,EAAkBxiG,UAAU+iG,yBAA2B,SAAU5e,EAAKviF,EAAOioF,GACzE,IAAI57D,EAAKnuB,KAAK4iG,eAAeh+F,QAAQ9C,GACrC,IAAY,IAARqsB,EAAW,CACXA,EAAKnuB,KAAK4iG,eAAejiG,OACzBX,KAAK4iG,eAAe/gG,KAAKC,GACzB,IAAI24C,EAASmyC,GAAe,CAAEd,UAAWhqF,KAAY,MACrD9B,KAAK2iG,cAAc9gG,KAAK,OAAS44C,EAAS,IAAMtsB,GAEpD47D,EAAIsV,MAAMhb,EAAKrkF,KAAK2iG,cAAcx0E,KAE/Bu0E,EAzD2B,CAjMQ,SAAU38F,GAEpD,SAASo9F,IACL,OAAOp9F,EAAOnF,KAAKZ,MAAM,IAAUA,KAyJvC,OA3JAg+D,GAAUmlC,EAA0Bp9F,GAIpCo9F,EAAyBjjG,UAAUojF,sBAAwB,SAAUtB,EAAM+H,GACvE,IAAI7jF,EAAQlG,KAWZ,OAVA+pF,EAAI+V,UAAU9d,GACdhiF,KAAKojG,uBAAuBphB,EAAM+H,GACf,MAAf/H,EAAKl9E,SACLilF,EAAIsV,MAAMrd,EAAMA,EAAK7+E,KAAO,+BAC5B6+E,EAAKl9E,OAAOs4E,gBAAgBp9E,KAAM+pF,GAClCA,EAAIoV,QAAQnd,EAAM,iBAEtBA,EAAKmB,QAAQz6E,QAAQ,SAAU68B,GAAU,OAAOr/B,EAAMm9F,kBAAkBrhB,EAAMz8C,EAAQwkD,KACtF/H,EAAKqB,QAAQ36E,QAAQ,SAAU+8B,GAAU,OAAOv/B,EAAMo9F,kBAAkBthB,EAAMv8C,EAAQskD,KACtFA,EAAIiW,WACG,MAEXmD,EAAyBjjG,UAAUkjG,uBAAyB,SAAUphB,EAAM+H,GACxEA,EAAIsV,MAAMrd,EAAM,YAAcA,EAAK7+E,KAAO,KACZ,MAA1B6+E,EAAKoB,mBACLpjF,KAAKujG,aAAavhB,EAAKoB,kBAAkBpsB,OAAQ+yB,GAErDA,EAAIoV,QAAQnd,EAAM,OAClB+H,EAAI6V,YAC0B,MAA1B5d,EAAKoB,mBACDpB,EAAKoB,kBAAkBP,KAAKliF,OAAS,IACrCopF,EAAIoV,QAAQnd,EAAM,oBAClBhiF,KAAKwkF,mBAAmBxC,EAAKoB,kBAAkBP,KAAMkH,IAG7DA,EAAI8V,YACJ9V,EAAIoV,QAAQnd,EAAM,MAEtBmhB,EAAyBjjG,UAAUmjG,kBAAoB,SAAUrhB,EAAMz8C,EAAQwkD,GAC3EA,EAAIoV,QAAQnd,EAAM,yBAA2BA,EAAK7+E,KAAO,gBAAkBoiC,EAAOpiC,KAAO,0BACzF4mF,EAAI6V,YACAr6D,EAAOs9C,KAAKliF,OAAS,IACrBopF,EAAIoV,QAAQnd,EAAM,oBAClBhiF,KAAKwkF,mBAAmBj/C,EAAOs9C,KAAMkH,IAEzCA,EAAI8V,YACJ9V,EAAIoV,QAAQnd,EAAM,SAEtBmhB,EAAyBjjG,UAAUojG,kBAAoB,SAAUthB,EAAMv8C,EAAQskD,GAC3EA,EAAIsV,MAAMrd,EAAMA,EAAK7+E,KAAO,cAAgBsiC,EAAOtiC,KAAO,gBAC1DnD,KAAKujG,aAAa99D,EAAOuxB,OAAQ+yB,GACjCA,EAAIoV,QAAQnd,EAAM,OAClB+H,EAAI6V,YACAn6D,EAAOo9C,KAAKliF,OAAS,IACrBopF,EAAIoV,QAAQnd,EAAM,oBAClBhiF,KAAKwkF,mBAAmB/+C,EAAOo9C,KAAMkH,IAEzCA,EAAI8V,YACJ9V,EAAIoV,QAAQnd,EAAM,OAEtBmhB,EAAyBjjG,UAAUokF,qBAAuB,SAAUD,EAAK0F,GACrE,MAAM,IAAIlnF,MAAM,iDAEpBsgG,EAAyBjjG,UAAUm9E,iBAAmB,SAAUgH,EAAK0F,GACjE,GAAI1F,EAAInH,UAAYH,GAAW8kB,KAC3B9X,EAAIsV,MAAMhb,EAAK,YAEd,IAAIA,EAAInH,UAAYH,GAAW6kB,MAChC,MAAM,IAAI/+F,MAAM,gFAGhBkD,EAAO7F,UAAUm9E,iBAAiBz8E,KAAKZ,KAAMqkF,EAAK0F,GAEtD,OAAO,MAEXoZ,EAAyBjjG,UAAUgiF,oBAAsB,SAAUF,EAAM+H,GAOrE,OANAA,EAAIsV,MAAMrd,EAAM,OAASA,EAAK7+E,MAC1B6+E,EAAKlgF,QACLioF,EAAIsV,MAAMrd,EAAM,OAChBA,EAAKlgF,MAAMs7E,gBAAgBp9E,KAAM+pF,IAErCA,EAAIoV,QAAQnd,EAAM,KACX,MAEXmhB,EAAyBjjG,UAAUggF,cAAgB,SAAUmE,EAAK0F,GAE9D,OADA1F,EAAIviF,MAAMs7E,gBAAgBp9E,KAAM+pF,GACzB,MAEXoZ,EAAyBjjG,UAAU2+E,wBAA0B,SAAUpB,EAAMsM,GACzE,IAAIyZ,EAAS/lB,EAAK/6E,GAalB,OAZI8gG,aAAkBxmB,IAAewmB,EAAOtmB,UAAYH,GAAW6kB,OAC/D7X,EAAI0Z,aAAa3+F,OAAOs4E,gBAAgBp9E,KAAM+pF,GAC9CA,EAAIsV,MAAM5hB,EAAM,cACZA,EAAKnsE,KAAK3Q,OAAS,IACnBopF,EAAIsV,MAAM5hB,EAAM,MAChBz9E,KAAKukF,oBAAoB9G,EAAKnsE,KAAMy4E,EAAK,MAE7CA,EAAIsV,MAAM5hB,EAAM,MAGhB13E,EAAO7F,UAAU2+E,wBAAwBj+E,KAAKZ,KAAMy9E,EAAMsM,GAEvD,MAEXoZ,EAAyBjjG,UAAUqgF,kBAAoB,SAAU8D,EAAK0F,GAQlE,OAPAA,EAAIsV,MAAMhb,EAAK,YAAcA,EAAIlhF,KAAO,IAAMkhF,EAAIlhF,KAAO,IAAM,KAC/DnD,KAAKujG,aAAalf,EAAIrtB,OAAQ+yB,GAC9BA,EAAIoV,QAAQ9a,EAAK,OACjB0F,EAAI6V,YACJ5/F,KAAKwkF,mBAAmBH,EAAI/D,WAAYyJ,GACxCA,EAAI8V,YACJ9V,EAAIsV,MAAMhb,EAAK,KACR,MAEX8e,EAAyBjjG,UAAUkiF,yBAA2B,SAAUJ,EAAM+H,GAQ1E,OAPAA,EAAIsV,MAAMrd,EAAM,YAAcA,EAAK7+E,KAAO,KAC1CnD,KAAKujG,aAAavhB,EAAKhrB,OAAQ+yB,GAC/BA,EAAIoV,QAAQnd,EAAM,OAClB+H,EAAI6V,YACJ5/F,KAAKwkF,mBAAmBxC,EAAK1B,WAAYyJ,GACzCA,EAAI8V,YACJ9V,EAAIoV,QAAQnd,EAAM,KACX,MAEXmhB,EAAyBjjG,UAAU4jF,kBAAoB,SAAU9B,EAAM+H,GACnEA,EAAIoV,QAAQnd,EAAM,SAClB+H,EAAI6V,YACJ5/F,KAAKwkF,mBAAmBxC,EAAK4B,UAAWmG,GACxCA,EAAI8V,YACJ9V,EAAIoV,QAAQnd,EAAM,YAAcuc,GAAkBp7F,KAAO,OACzD4mF,EAAI6V,YACJ,IAAI/b,EAAa,CAAC2a,GAAkBzrE,IAAIwrE,GAAkBt5D,KAAK,UAAU44C,WAAW,KAAM,CAClFG,GAAaC,SACbh8E,OAAO+/E,EAAK6B,YAIpB,OAHA7jF,KAAKwkF,mBAAmBX,EAAYkG,GACpCA,EAAI8V,YACJ9V,EAAIoV,QAAQnd,EAAM,KACX,MAEXmhB,EAAyBjjG,UAAUqjG,aAAe,SAAUvsC,EAAQ+yB,GAChE/pF,KAAKkiG,gBAAgB,SAAUlyB,GAAS,OAAO+Z,EAAIsV,MAAM,KAAMrvB,EAAM7sE,OAAU6zD,EAAQ+yB,EAAK,MAEhGoZ,EAAyBjjG,UAAUwhG,qBAAuB,SAAUj8D,GAChE,IAAItiC,EACJ,OAAQsiC,GACJ,KAAKg5C,GAAcilB,YACfvgG,EAAO,SACP,MACJ,KAAKs7E,GAAcklB,oBACfxgG,EAAO,YACP,MACJ,KAAKs7E,GAAcmlB,KACfzgG,EAAO,OACP,MACJ,QACI,MAAM,IAAIN,MAAM,2BAA6B4iC,GAErD,OAAOtiC,GAEJggG,EA5JkC,CA6J3C9B,KAgSEwC,GAA6B,WAO7B,OANA,SAAqB/gG,EAASqG,EAAO26F,EAAaC,GAC9C/jG,KAAKmJ,MAAQA,EACbnJ,KAAK8jG,YAAcA,EACnB9jG,KAAK+jG,YAAcA,EACnB/jG,KAAK8C,QAAU,iBAAmBA,EAAU,IAAMghG,EAAc,KAAO36F,EAAQ,QAAU46F,GALjE,GAS5BC,GAA2B,WAK3B,OAJA,SAAmBrS,EAAOnkE,GACtBxtB,KAAK2xF,MAAQA,EACb3xF,KAAKwtB,IAAMA,GAHW,GAO1By2E,GAAqB,WACrB,SAASA,EAAIrD,GACT5gG,KAAK4gG,KAAOA,EAOhB,OALAqD,EAAI/jG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAErC,YADgB,IAAZA,IAAsBA,EAAU,MAC7B,MAEX+8F,EAAI/jG,UAAU+C,SAAW,WAAc,MAAO,OACvCghG,EATa,GAwBpBC,GAAuB,SAAUn+F,GAEjC,SAASo+F,EAAMvD,EAAMxtC,EAAQgxC,EAAyBnrF,GAClD,IAAI/S,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAIvC,OAHAkG,EAAMktD,OAASA,EACfltD,EAAMk+F,wBAA0BA,EAChCl+F,EAAM+S,SAAWA,EACV/S,EAOX,OAbA83D,GAAUmmC,EAAOp+F,GAQjBo+F,EAAMjkG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAEvC,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQisB,WAAWrkG,KAAMkH,IAEpCi9F,EAAMjkG,UAAU+C,SAAW,WAAc,MAAO,SACzCkhG,EAde,CAexBF,IACEK,GAA2B,SAAUv+F,GAErC,SAASw+F,IACL,OAAkB,OAAXx+F,GAAmBA,EAAOlF,MAAMb,KAAMU,YAAcV,KAM/D,OARAg+D,GAAUumC,EAAWx+F,GAIrBw+F,EAAUrkG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,QAC3B,IAAZA,IAAsBA,EAAU,OAGjCq9F,EATmB,CAU5BN,IACEO,GAAkC,SAAUz+F,GAE5C,SAAS0+F,IACL,OAAkB,OAAX1+F,GAAmBA,EAAOlF,MAAMb,KAAMU,YAAcV,KAM/D,OARAg+D,GAAUymC,EAAkB1+F,GAI5B0+F,EAAiBvkG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAElD,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQssB,sBAAsB1kG,KAAMkH,IAExCu9F,EAT0B,CAUnCR,IAIEU,GAAuB,SAAU5+F,GAEjC,SAAS6+F,EAAMhE,EAAMuB,GACjB,IAAIj8F,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAEvC,OADAkG,EAAMi8F,YAAcA,EACbj8F,EAMX,OAVA83D,GAAU4mC,EAAO7+F,GAMjB6+F,EAAM1kG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAEvC,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQysB,WAAW7kG,KAAMkH,IAE7B09F,EAXe,CAYxBX,IACEa,GAA6B,SAAU/+F,GAEvC,SAASg/F,EAAYnE,EAAMnhB,EAAWulB,EAASC,GAC3C,IAAI/+F,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAIvC,OAHAkG,EAAMu5E,UAAYA,EAClBv5E,EAAM8+F,QAAUA,EAChB9+F,EAAM++F,SAAWA,EACV/+F,EAMX,OAZA83D,GAAU+mC,EAAah/F,GAQvBg/F,EAAY7kG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE7C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQ8sB,iBAAiBllG,KAAMkH,IAEnC69F,EAbqB,CAc9Bd,IACEkB,GAA8B,SAAUp/F,GAExC,SAASq/F,EAAaxE,EAAMxiB,EAAUj7E,GAClC,IAAI+C,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAGvC,OAFAkG,EAAMk4E,SAAWA,EACjBl4E,EAAM/C,KAAOA,EACN+C,EAMX,OAXA83D,GAAUonC,EAAcr/F,GAOxBq/F,EAAallG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE9C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQitB,kBAAkBrlG,KAAMkH,IAEpCk+F,EAZsB,CAa/BnB,IACEqB,GAA+B,SAAUv/F,GAEzC,SAASw/F,EAAc3E,EAAMxiB,EAAUj7E,EAAMrB,GACzC,IAAIoE,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAIvC,OAHAkG,EAAMk4E,SAAWA,EACjBl4E,EAAM/C,KAAOA,EACb+C,EAAMpE,MAAQA,EACPoE,EAMX,OAZA83D,GAAUunC,EAAex/F,GAQzBw/F,EAAcrlG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE/C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQotB,mBAAmBxlG,KAAMkH,IAErCq+F,EAbuB,CAchCtB,IACEwB,GAAkC,SAAU1/F,GAE5C,SAAS2/F,EAAiB9E,EAAMxiB,EAAUj7E,GACtC,IAAI+C,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAGvC,OAFAkG,EAAMk4E,SAAWA,EACjBl4E,EAAM/C,KAAOA,EACN+C,EAMX,OAXA83D,GAAU0nC,EAAkB3/F,GAO5B2/F,EAAiBxlG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAElD,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQutB,sBAAsB3lG,KAAMkH,IAExCw+F,EAZ0B,CAanCzB,IACE2B,GAA2B,SAAU7/F,GAErC,SAAS8/F,EAAUjF,EAAMj1F,EAAK4D,GAC1B,IAAIrJ,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAGvC,OAFAkG,EAAMyF,IAAMA,EACZzF,EAAMqJ,IAAMA,EACLrJ,EAMX,OAXA83D,GAAU6nC,EAAW9/F,GAOrB8/F,EAAU3lG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE3C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQ0tB,eAAe9lG,KAAMkH,IAEjC2+F,EAZmB,CAa5B5B,IACE8B,GAA4B,SAAUhgG,GAEtC,SAASigG,EAAWpF,EAAMj1F,EAAK4D,EAAKzN,GAChC,IAAIoE,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAIvC,OAHAkG,EAAMyF,IAAMA,EACZzF,EAAMqJ,IAAMA,EACZrJ,EAAMpE,MAAQA,EACPoE,EAMX,OAZA83D,GAAUgoC,EAAYjgG,GAQtBigG,EAAW9lG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE5C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQ6tB,gBAAgBjmG,KAAMkH,IAElC8+F,EAboB,CAc7B/B,IACEiC,GAA6B,SAAUngG,GAEvC,SAASogG,EAAYvF,EAAMwF,EAAKjjG,EAAMmO,GAClC,IAAIpL,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAIvC,OAHAkG,EAAMkgG,IAAMA,EACZlgG,EAAM/C,KAAOA,EACb+C,EAAMoL,KAAOA,EACNpL,EAMX,OAZA83D,GAAUmoC,EAAapgG,GAQvBogG,EAAYjmG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE7C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQiuB,UAAUrmG,KAAMkH,IAE5Bi/F,EAbqB,CAc9BlC,IACEqC,GAAkC,SAAUvgG,GAE5C,SAASwgG,EAAiB3F,EAAM9+F,GAC5B,IAAIoE,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAEvC,OADAkG,EAAMpE,MAAQA,EACPoE,EAMX,OAVA83D,GAAUuoC,EAAkBxgG,GAM5BwgG,EAAiBrmG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAElD,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQouB,sBAAsBxmG,KAAMkH,IAExCq/F,EAX0B,CAYnCtC,IACEwC,GAA8B,SAAU1gG,GAExC,SAAS2gG,EAAa9F,EAAMuB,GACxB,IAAIj8F,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAEvC,OADAkG,EAAMi8F,YAAcA,EACbj8F,EAMX,OAVA83D,GAAU0oC,EAAc3gG,GAMxB2gG,EAAaxmG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE9C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQuuB,kBAAkB3mG,KAAMkH,IAEpCw/F,EAXsB,CAY/BzC,IACE2C,GAA4B,SAAU7gG,GAEtC,SAAS8gG,EAAWjG,EAAM3tF,EAAM1B,GAC5B,IAAIrL,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAGvC,OAFAkG,EAAM+M,KAAOA,EACb/M,EAAMqL,OAASA,EACRrL,EAMX,OAXA83D,GAAU6oC,EAAY9gG,GAOtB8gG,EAAW3mG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE5C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQ0uB,gBAAgB9mG,KAAMkH,IAElC2/F,EAZoB,CAa7B5C,IACE8C,GAA+B,SAAUhhG,GAEzC,SAASihG,EAAcpG,EAAMqG,EAAS9E,GAClC,IAAIj8F,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAGvC,OAFAkG,EAAM+gG,QAAUA,EAChB/gG,EAAMi8F,YAAcA,EACbj8F,EAMX,OAXA83D,GAAUgpC,EAAejhG,GAOzBihG,EAAc9mG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE/C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQ8uB,mBAAmBlnG,KAAMkH,IAErC8/F,EAZuB,CAahC/C,IACEkD,GAAwB,SAAUphG,GAElC,SAASqhG,EAAOxG,EAAMyG,EAAWC,EAAMC,GACnC,IAAIrhG,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAIvC,OAHAkG,EAAMmhG,UAAYA,EAClBnhG,EAAMohG,KAAOA,EACbphG,EAAMqhG,MAAQA,EACPrhG,EAMX,OAZA83D,GAAUopC,EAAQrhG,GAQlBqhG,EAAOlnG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAExC,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQovB,YAAYxnG,KAAMkH,IAE9BkgG,EAbgB,CAczBnD,IACEwD,GAA2B,SAAU1hG,GAErC,SAAS2hG,EAAU9G,EAAM/X,GACrB,IAAI3iF,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAEvC,OADAkG,EAAM2iF,WAAaA,EACZ3iF,EAMX,OAVA83D,GAAU0pC,EAAW3hG,GAMrB2hG,EAAUxnG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE3C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQuvB,eAAe3nG,KAAMkH,IAEjCwgG,EAXmB,CAY5BzD,IACE2D,GAA+B,SAAU7hG,GAEzC,SAAS8hG,EAAcjH,EAAM/X,GACzB,IAAI3iF,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAEvC,OADAkG,EAAM2iF,WAAaA,EACZ3iF,EAMX,OAVA83D,GAAU6pC,EAAe9hG,GAMzB8hG,EAAc3nG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE/C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQ0vB,mBAAmB9nG,KAAMkH,IAErC2gG,EAXuB,CAYhC5D,IACE8D,GAA4B,SAAUhiG,GAEtC,SAASiiG,EAAWpH,EAAMxiB,EAAUj7E,EAAMmO,GACtC,IAAIpL,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAIvC,OAHAkG,EAAMk4E,SAAWA,EACjBl4E,EAAM/C,KAAOA,EACb+C,EAAMoL,KAAOA,EACNpL,EAMX,OAZA83D,GAAUgqC,EAAYjiG,GAQtBiiG,EAAW9nG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE5C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQ6vB,gBAAgBjoG,KAAMkH,IAElC8gG,EAboB,CAc7B/D,IACEiE,GAAgC,SAAUniG,GAE1C,SAASoiG,EAAevH,EAAMxiB,EAAUj7E,EAAMmO,GAC1C,IAAIpL,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAIvC,OAHAkG,EAAMk4E,SAAWA,EACjBl4E,EAAM/C,KAAOA,EACb+C,EAAMoL,KAAOA,EACNpL,EAMX,OAZA83D,GAAUmqC,EAAgBpiG,GAQ1BoiG,EAAejoG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAEhD,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQgwB,oBAAoBpoG,KAAMkH,IAEtCihG,EAbwB,CAcjClE,IACEoE,GAA8B,SAAUtiG,GAExC,SAASuiG,EAAa1H,EAAMpoF,EAAQlH,GAChC,IAAIpL,EAAQH,EAAOnF,KAAKZ,KAAM4gG,IAAS5gG,KAGvC,OAFAkG,EAAMsS,OAASA,EACftS,EAAMoL,KAAOA,EACNpL,EAMX,OAXA83D,GAAUsqC,EAAcviG,GAOxBuiG,EAAapoG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE9C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BkxE,EAAQmwB,kBAAkBvoG,KAAMkH,IAEpCohG,EAZsB,CAa/BrE,IACEuE,GAA+B,SAAUziG,GAEzC,SAAS0iG,EAAcpkB,EAAKp8E,EAAQgR,EAAUrW,GAC1C,IAAIsD,EAAQH,EAAOnF,KAAKZ,KAAM,IAAIgkG,GAAU,EAAa,MAAV/7F,EAAiB,EAAIA,EAAOtH,UAAYX,KAKvF,OAJAkG,EAAMm+E,IAAMA,EACZn+E,EAAM+B,OAASA,EACf/B,EAAM+S,SAAWA,EACjB/S,EAAMtD,OAASA,EACRsD,EAOX,OAdA83D,GAAUyqC,EAAe1iG,GASzB0iG,EAAcvoG,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAE/C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BlH,KAAKqkF,IAAI8N,MAAM/Z,EAASlxE,IAEnCuhG,EAAcvoG,UAAU+C,SAAW,WAAc,OAAOjD,KAAKiI,OAAS,OAASjI,KAAKiZ,UAC7EwvF,EAfuB,CAgBhCxE,IACEyE,GAAiC,WAQjC,OAPA,SAAyB9H,EAAMrxF,EAAKo5F,EAAUxlG,EAAM0lF,GAChD7oF,KAAK4gG,KAAOA,EACZ5gG,KAAKuP,IAAMA,EACXvP,KAAK2oG,SAAWA,EAChB3oG,KAAKmD,KAAOA,EACZnD,KAAK6oF,WAAaA,GANU,GAmChC+f,GAAuC,WACvC,SAASxjB,KA+ET,OA7EAA,EAAoBllF,UAAUsnG,YAAc,SAAUnjB,EAAKn9E,GAGvD,OAFAm9E,EAAIijB,KAAKnV,MAAMnyF,MACfqkF,EAAIkjB,MAAMpV,MAAMnyF,MACT,MAEXolF,EAAoBllF,UAAU2kG,WAAa,SAAUxgB,EAAKn9E,GAAW,OAAOlH,KAAK6oG,SAASxkB,EAAI8d,YAAaj7F,IAC3Gk+E,EAAoBllF,UAAUglG,iBAAmB,SAAU7gB,EAAKn9E,GAI5D,OAHAm9E,EAAI5E,UAAU0S,MAAMnyF,MACpBqkF,EAAI2gB,QAAQ7S,MAAMnyF,MAClBqkF,EAAI4gB,SAAS9S,MAAMnyF,MACZ,MAEXolF,EAAoBllF,UAAUmmG,UAAY,SAAUhiB,EAAKn9E,GAGrD,OAFAm9E,EAAI+hB,IAAIjU,MAAMnyF,MACdA,KAAK6oG,SAASxkB,EAAI/yE,KAAMpK,GACjB,MAEXk+E,EAAoBllF,UAAUqoG,kBAAoB,SAAUlkB,EAAKn9E,GAG7D,OAFAm9E,EAAI7rE,OAAO25E,MAAMnyF,MACjBA,KAAK6oG,SAASxkB,EAAI/yE,KAAMpK,GACjB,MAEXk+E,EAAoBllF,UAAUwkG,sBAAwB,SAAUrgB,EAAKn9E,GAAW,OAAO,MACvFk+E,EAAoBllF,UAAUgnG,mBAAqB,SAAU7iB,EAAKn9E,GAC9D,OAAOlH,KAAK6oG,SAASxkB,EAAI8d,YAAaj7F,IAE1Ck+E,EAAoBllF,UAAU4lG,eAAiB,SAAUzhB,EAAKn9E,GAG1D,OAFAm9E,EAAI14E,IAAIwmF,MAAMnyF,MACdqkF,EAAI90E,IAAI4iF,MAAMnyF,MACP,MAEXolF,EAAoBllF,UAAU+lG,gBAAkB,SAAU5hB,EAAKn9E,GAI3D,OAHAm9E,EAAI14E,IAAIwmF,MAAMnyF,MACdqkF,EAAI90E,IAAI4iF,MAAMnyF,MACdqkF,EAAIviF,MAAMqwF,MAAMnyF,MACT,MAEXolF,EAAoBllF,UAAUymG,kBAAoB,SAAUtiB,EAAKn9E,GAC7D,OAAOlH,KAAK6oG,SAASxkB,EAAI8d,YAAaj7F,IAE1Ck+E,EAAoBllF,UAAU4mG,gBAAkB,SAAUziB,EAAKn9E,GAAW,OAAOlH,KAAK6oG,SAASxkB,EAAI9yE,OAAQrK,IAC3Gk+E,EAAoBllF,UAAUsmG,sBAAwB,SAAUniB,EAAKn9E,GAAW,OAAO,MACvFk+E,EAAoBllF,UAAU+nG,gBAAkB,SAAU5jB,EAAKn9E,GAE3D,OADAm9E,EAAIjG,SAAS+T,MAAMnyF,MACZA,KAAK6oG,SAASxkB,EAAI/yE,KAAMpK,IAEnCk+E,EAAoBllF,UAAUynG,eAAiB,SAAUtjB,EAAKn9E,GAE1D,OADAm9E,EAAIwE,WAAWsJ,MAAMnyF,MACd,MAEXolF,EAAoBllF,UAAU4nG,mBAAqB,SAAUzjB,EAAKn9E,GAE9D,OADAm9E,EAAIwE,WAAWsJ,MAAMnyF,MACd,MAEXolF,EAAoBllF,UAAUmlG,kBAAoB,SAAUhhB,EAAKn9E,GAE7D,OADAm9E,EAAIjG,SAAS+T,MAAMnyF,MACZ,MAEXolF,EAAoBllF,UAAUslG,mBAAqB,SAAUnhB,EAAKn9E,GAG9D,OAFAm9E,EAAIjG,SAAS+T,MAAMnyF,MACnBqkF,EAAIviF,MAAMqwF,MAAMnyF,MACT,MAEXolF,EAAoBllF,UAAUylG,sBAAwB,SAAUthB,EAAKn9E,GAEjE,OADAm9E,EAAIjG,SAAS+T,MAAMnyF,MACZ,MAEXolF,EAAoBllF,UAAUkoG,oBAAsB,SAAU/jB,EAAKn9E,GAE/D,OADAm9E,EAAIjG,SAAS+T,MAAMnyF,MACZA,KAAK6oG,SAASxkB,EAAI/yE,KAAMpK,IAEnCk+E,EAAoBllF,UAAU2oG,SAAW,SAAUC,EAAM5hG,GACrD,IAAIhB,EAAQlG,KAEZ,OADA8oG,EAAKpgG,QAAQ,SAAU27E,GAAO,OAAOA,EAAI8N,MAAMjsF,EAAOgB,KAC/C,MAEXk+E,EAAoBllF,UAAUmkG,WAAa,SAAUhgB,EAAKn9E,GAAW,OAAO,MACrEk+E,EAhF+B,GAkFtC2jB,GAAkC,WAClC,SAAS7kB,KAmET,OAjEAA,EAAehkF,UAAUwkG,sBAAwB,SAAUrgB,EAAKn9E,GAAW,OAAOm9E,GAClFH,EAAehkF,UAAUgnG,mBAAqB,SAAU7iB,EAAKn9E,GACzD,OAAO,IAAI6/F,GAAc1iB,EAAIuc,KAAMvc,EAAI4iB,QAASjnG,KAAK6oG,SAASxkB,EAAI8d,eAEtEje,EAAehkF,UAAUsmG,sBAAwB,SAAUniB,EAAKn9E,GAC5D,OAAO,IAAIo/F,GAAiBjiB,EAAIuc,KAAMvc,EAAIviF,QAE9CoiF,EAAehkF,UAAUmlG,kBAAoB,SAAUhhB,EAAKn9E,GACxD,OAAO,IAAIi+F,GAAa9gB,EAAIuc,KAAMvc,EAAIjG,SAAS+T,MAAMnyF,MAAOqkF,EAAIlhF,OAEpE+gF,EAAehkF,UAAUslG,mBAAqB,SAAUnhB,EAAKn9E,GACzD,OAAO,IAAIo+F,GAAcjhB,EAAIuc,KAAMvc,EAAIjG,SAAS+T,MAAMnyF,MAAOqkF,EAAIlhF,KAAMkhF,EAAIviF,MAAMqwF,MAAMnyF,QAE3FkkF,EAAehkF,UAAUylG,sBAAwB,SAAUthB,EAAKn9E,GAC5D,OAAO,IAAIu+F,GAAiBphB,EAAIuc,KAAMvc,EAAIjG,SAAS+T,MAAMnyF,MAAOqkF,EAAIlhF,OAExE+gF,EAAehkF,UAAU+nG,gBAAkB,SAAU5jB,EAAKn9E,GACtD,OAAO,IAAI6gG,GAAW1jB,EAAIuc,KAAMvc,EAAIjG,SAAS+T,MAAMnyF,MAAOqkF,EAAIlhF,KAAMnD,KAAK6oG,SAASxkB,EAAI/yE,QAE1F4yE,EAAehkF,UAAUkoG,oBAAsB,SAAU/jB,EAAKn9E,GAC1D,OAAO,IAAIghG,GAAe7jB,EAAIuc,KAAMvc,EAAIjG,SAAS+T,MAAMnyF,MAAOqkF,EAAIlhF,KAAMnD,KAAK6oG,SAASxkB,EAAI/yE,QAE9F4yE,EAAehkF,UAAUqoG,kBAAoB,SAAUlkB,EAAKn9E,GACxD,OAAO,IAAImhG,GAAahkB,EAAIuc,KAAMvc,EAAI7rE,OAAO25E,MAAMnyF,MAAOA,KAAK6oG,SAASxkB,EAAI/yE,QAEhF4yE,EAAehkF,UAAUymG,kBAAoB,SAAUtiB,EAAKn9E,GACxD,OAAO,IAAIu/F,GAAapiB,EAAIuc,KAAM5gG,KAAK6oG,SAASxkB,EAAI8d,eAExDje,EAAehkF,UAAU4mG,gBAAkB,SAAUziB,EAAKn9E,GACtD,OAAO,IAAI0/F,GAAWviB,EAAIuc,KAAMvc,EAAIpxE,KAAMjT,KAAK6oG,SAASxkB,EAAI9yE,UAEhE2yE,EAAehkF,UAAUsnG,YAAc,SAAUnjB,EAAKn9E,GAClD,OAAO,IAAIigG,GAAO9iB,EAAIuc,KAAMvc,EAAIgjB,UAAWhjB,EAAIijB,KAAKnV,MAAMnyF,MAAOqkF,EAAIkjB,MAAMpV,MAAMnyF,QAErFkkF,EAAehkF,UAAUynG,eAAiB,SAAUtjB,EAAKn9E,GACrD,OAAO,IAAIugG,GAAUpjB,EAAIuc,KAAMvc,EAAIwE,WAAWsJ,MAAMnyF,QAExDkkF,EAAehkF,UAAU4nG,mBAAqB,SAAUzjB,EAAKn9E,GACzD,OAAO,IAAI0gG,GAAcvjB,EAAIuc,KAAMvc,EAAIwE,WAAWsJ,MAAMnyF,QAE5DkkF,EAAehkF,UAAUglG,iBAAmB,SAAU7gB,EAAKn9E,GACvD,OAAO,IAAI49F,GAAYzgB,EAAIuc,KAAMvc,EAAI5E,UAAU0S,MAAMnyF,MAAOqkF,EAAI2gB,QAAQ7S,MAAMnyF,MAAOqkF,EAAI4gB,SAAS9S,MAAMnyF,QAE5GkkF,EAAehkF,UAAUmmG,UAAY,SAAUhiB,EAAKn9E,GAChD,OAAO,IAAIg/F,GAAY7hB,EAAIuc,KAAMvc,EAAI+hB,IAAIjU,MAAMnyF,MAAOqkF,EAAIlhF,KAAMnD,KAAK6oG,SAASxkB,EAAI/yE,QAEtF4yE,EAAehkF,UAAU4lG,eAAiB,SAAUzhB,EAAKn9E,GACrD,OAAO,IAAI0+F,GAAUvhB,EAAIuc,KAAMvc,EAAI14E,IAAIwmF,MAAMnyF,MAAOqkF,EAAI90E,IAAI4iF,MAAMnyF,QAEtEkkF,EAAehkF,UAAU+lG,gBAAkB,SAAU5hB,EAAKn9E,GACtD,OAAO,IAAI6+F,GAAW1hB,EAAIuc,KAAMvc,EAAI14E,IAAIwmF,MAAMnyF,MAAOqkF,EAAI90E,IAAI4iF,MAAMnyF,MAAOqkF,EAAIviF,MAAMqwF,MAAMnyF,QAE9FkkF,EAAehkF,UAAU2oG,SAAW,SAAUC,GAE1C,IADA,IAAIj1F,EAAM,IAAIlU,MAAMmpG,EAAKnoG,QAChBH,EAAI,EAAGA,EAAIsoG,EAAKnoG,SAAUH,EAC/BqT,EAAIrT,GAAKsoG,EAAKtoG,GAAG2xF,MAAMnyF,MAE3B,OAAO6T,GAEXqwE,EAAehkF,UAAU2kG,WAAa,SAAUxgB,EAAKn9E,GACjD,OAAO,IAAIy9F,GAAMtgB,EAAIuc,KAAM5gG,KAAK6oG,SAASxkB,EAAI8d,eAEjDje,EAAehkF,UAAUmkG,WAAa,SAAUhgB,EAAKn9E,GACjD,OAAO,IAAIg9F,GAAM7f,EAAIuc,KAAMvc,EAAIjxB,OAAQixB,EAAI+f,wBAAyB/f,EAAIprE,WAErEirE,EApE0B,GAuRjC8kB,GAAgC,WAShC,OARA,SAAwB7lG,EAAM0lF,EAAYl4E,EAAMkpE,GAC5C75E,KAAKmD,KAAOA,EACZnD,KAAK6oF,WAAaA,EAClB7oF,KAAK2Q,KAAOA,EACZ3Q,KAAK65E,WAAaA,EAClB75E,KAAKipG,UAAYjpG,KAAK2Q,OAASu4F,GAAmBC,aAClDnpG,KAAKopG,YAAcppG,KAAK2Q,OAASu4F,GAAmBG,WAPzB,GAW/BH,GACJ,SAAWA,UACPA,EAAmBA,EAA4B,QAAI,GAAK,UACxDA,EAAmBA,EAAiC,aAAI,GAAK,eAC7DA,EAAmBA,EAA8B,UAAI,GAAK,YAHnDA,EAAX,CAIE,IACEI,GAA6B,WAU7B,OAPA,SAAqBnmG,EAAMomG,EAAe54F,EAAM0xF,EAASxoB,GACrD75E,KAAKmD,KAAOA,EACZnD,KAAKupG,cAAgBA,EACrBvpG,KAAK2Q,KAAOA,EACZ3Q,KAAKqiG,QAAUA,EACfriG,KAAK65E,WAAaA,GARM,GAY5B2vB,GAAgC,WAMhC,OALA,SAAwBrmG,EAAMrB,EAAO+3E,GACjC75E,KAAKmD,KAAOA,EACZnD,KAAK8B,MAAQA,EACb9B,KAAK65E,WAAaA,GAJS,GAQ/B4vB,GAAsC,WAStC,OARA,SAA8BtmG,EAAMwN,EAAMg2C,EAAiB7kD,EAAO6mD,EAAMkxB,GACpE75E,KAAKmD,KAAOA,EACZnD,KAAK2Q,KAAOA,EACZ3Q,KAAK2mD,gBAAkBA,EACvB3mD,KAAK8B,MAAQA,EACb9B,KAAK2oD,KAAOA,EACZ3oD,KAAK65E,WAAaA,GAPe,GAmBrC6vB,GAAkC,WAClC,SAASA,KAGT,OADAA,EAAiB9oD,MAAQglC,GAAS,UAC3B8jB,EAJ0B,GAMjCC,GAA4C,WAuC5C,OAtCA,SAIA5kB,EAIA6kB,GACI5pG,KAAK+kF,MAAQA,EACb/kF,KAAK4pG,aAAeA,EAmBpB5pG,KAAK6pG,aAAe9kB,EAAMhiF,IAAI,SAAU+mG,GACpC,OAAIA,aAAqBhsB,IAAkBgsB,EAAU3mG,MAAQymG,EAAazmG,MACtE2mG,EAAUhoG,iBAAiB84E,GAEpB,IAAI2H,GADDunB,EAAUhoG,MAAM4+E,IACK5+E,OAE5BgoG,KApC4B,GAyF/C,SAASC,GAA+BC,EAAkB3lB,GACtD,OAyCJ,SAAyB2lB,EAAkB3lB,GACvC,IAAIjM,EAAU,IAAI6xB,GAAqBD,GACvC,OAAO3lB,EAAI8N,MAAM/Z,GA3CV8xB,CAAgBF,EAAkB3lB,GAE7C,IAAI8lB,GAA8C,WAK9C,OAJA,SAAsCplB,EAAOqlB,GACzCpqG,KAAK+kF,MAAQA,EACb/kF,KAAKoqG,YAAcA,GAHsB,GAO7CC,GACJ,SAAWA,UAEPA,EAAYA,EAAqB,QAAI,GAAK,UAG1CA,EAAYA,EAAuB,UAAI,GAAK,YALrCA,EAAX,CAME,IA6BF,SAASC,GAAcC,EAAWC,GAC9B,MAAO,OAASD,EAAY,IAAMC,EAEtC,SAASC,GAAqBF,EAAWC,GACrC,OAAO,IAAI1sB,GAAewsB,GAAcC,EAAWC,GAAkB3oB,IAOzE,IAAI6oB,GACJ,SAAWA,UACPA,EAAMA,EAAiB,UAAI,GAAK,YAChCA,EAAMA,EAAkB,WAAI,GAAK,aAF1BA,EAAX,CAGE,IAMF,SAASC,GAAqBxtF,EAAMknE,GAChC,GAAIlnE,IAASutF,GAAM9wB,WACf,MAAM,IAAI/2E,MAAM,mCAAqCwhF,GAG7D,SAASumB,GAA2BztF,EAAMsgE,GACtC,OAAItgE,IAASutF,GAAM5oB,UACRrE,EAAKZ,SAGLY,EAGf,IAAIwsB,GAAsC,SAAUlkG,GAEhD,SAAS8kG,EAAqBC,GAC1B,IAAI5kG,EAAQH,EAAOnF,KAAKZ,OAASA,KAEjC,OADAkG,EAAM4kG,kBAAoBA,EACnB5kG,EAiBX,OArBA83D,GAAU6sC,EAAsB9kG,GAMhC8kG,EAAqB3qG,UAAUmmG,UAAY,SAAUhiB,EAAKn9E,GACtD,IAAIhB,EAAQlG,KACRsR,EAAO8sD,GAAS,CAACimB,EAAI+hB,KAAM/hB,EAAI/yE,MAAMvO,IAAI,SAAUshF,GAAO,OAAOA,EAAI8N,MAAMjsF,EAAOgB,KACtF,OAAO,IAAI6jG,GAAoB1mB,EAAIuc,KAAMtvF,EAAMtR,KAAK8qG,kBAAkBE,oBAAoB3mB,EAAIlhF,KAAMmO,EAAK3Q,UAE7GkqG,EAAqB3qG,UAAUymG,kBAAoB,SAAUtiB,EAAKn9E,GAC9D,IAAIhB,EAAQlG,KACRsR,EAAO+yE,EAAI8d,YAAYp/F,IAAI,SAAUshF,GAAO,OAAOA,EAAI8N,MAAMjsF,EAAOgB,KACxE,OAAO,IAAI6jG,GAAoB1mB,EAAIuc,KAAMtvF,EAAMtR,KAAK8qG,kBAAkBG,4BAA4B5mB,EAAI8d,YAAYxhG,UAEtHkqG,EAAqB3qG,UAAU4mG,gBAAkB,SAAUziB,EAAKn9E,GAC5D,IAAIhB,EAAQlG,KACRsR,EAAO+yE,EAAI9yE,OAAOxO,IAAI,SAAUshF,GAAO,OAAOA,EAAI8N,MAAMjsF,EAAOgB,KACnE,OAAO,IAAI6jG,GAAoB1mB,EAAIuc,KAAMtvF,EAAMtR,KAAK8qG,kBAAkBI,0BAA0B7mB,EAAIpxE,QAEjG43F,EAtB8B,CAuBvC9B,IACEoC,GAAiC,WACjC,SAASA,EAAgBC,EAAgBC,EAAmBd,EAAWe,GACnEtrG,KAAKorG,eAAiBA,EACtBprG,KAAKqrG,kBAAoBA,EACzBrrG,KAAKuqG,UAAYA,EACjBvqG,KAAKsrG,sBAAwBA,EAC7BtrG,KAAKurG,SAAW,IAAIp4F,IACpBnT,KAAKwrG,WAAa,IAAIr4F,IACtBnT,KAAKyrG,kBAAoB,EACzBzrG,KAAK0rG,eAAiB,EAsX1B,OApXAP,EAAgBjrG,UAAUsnG,YAAc,SAAUnjB,EAAKlnE,GACnD,IAAIwuF,EACJ,OAAQtnB,EAAIgjB,WACR,IAAK,IACDsE,EAAKpyB,GAAe+B,KACpB,MACJ,IAAK,IACDqwB,EAAKpyB,GAAe6B,MACpB,MACJ,IAAK,IACDuwB,EAAKpyB,GAAekC,SACpB,MACJ,IAAK,IACDkwB,EAAKpyB,GAAegC,OACpB,MACJ,IAAK,IACDowB,EAAKpyB,GAAeoC,OACpB,MACJ,IAAK,KACDgwB,EAAKpyB,GAAeqC,IACpB,MACJ,IAAK,KACD+vB,EAAKpyB,GAAeyC,GACpB,MACJ,IAAK,KACD2vB,EAAKpyB,GAAesB,OACpB,MACJ,IAAK,KACD8wB,EAAKpyB,GAAewB,UACpB,MACJ,IAAK,MACD4wB,EAAKpyB,GAAe0B,UACpB,MACJ,IAAK,MACD0wB,EAAKpyB,GAAe4B,aACpB,MACJ,IAAK,IACDwwB,EAAKpyB,GAAe2C,MACpB,MACJ,IAAK,IACDyvB,EAAKpyB,GAAe+C,OACpB,MACJ,IAAK,KACDqvB,EAAKpyB,GAAe6C,YACpB,MACJ,IAAK,KACDuvB,EAAKpyB,GAAeiD,aACpB,MACJ,QACI,MAAM,IAAI35E,MAAM,yBAA2BwhF,EAAIgjB,WAEvD,OAAOuD,GAA2BztF,EAAM,IAAIy9D,GAAmB+wB,EAAI3rG,KAAK4rG,OAAOvnB,EAAIijB,KAAMoD,GAAM9wB,YAAa55E,KAAK4rG,OAAOvnB,EAAIkjB,MAAOmD,GAAM9wB,eAE7IuxB,EAAgBjrG,UAAU2kG,WAAa,SAAUxgB,EAAKlnE,GAElD,OA5GR,SAA6BA,EAAMknE,GAC/B,GAAIlnE,IAASutF,GAAM5oB,UACf,MAAM,IAAIj/E,MAAM,iCAAmCwhF,GAyGnDwnB,CAAoB1uF,EAAMknE,GACnBrkF,KAAK6oG,SAASxkB,EAAI8d,YAAahlF,IAE1CguF,EAAgBjrG,UAAUglG,iBAAmB,SAAU7gB,EAAKlnE,GAExD,OAAOytF,GAA2BztF,EADtBnd,KAAK4rG,OAAOvnB,EAAI5E,UAAWirB,GAAM9wB,YACCU,YAAYt6E,KAAK4rG,OAAOvnB,EAAI2gB,QAAS0F,GAAM9wB,YAAa55E,KAAK4rG,OAAOvnB,EAAI4gB,SAAUyF,GAAM9wB,eAE1IuxB,EAAgBjrG,UAAUmmG,UAAY,SAAUhiB,EAAKlnE,GACjD,MAAM,IAAIta,MAAM,yEAA2EwhF,EAAIlhF,OAEnGgoG,EAAgBjrG,UAAUqoG,kBAAoB,SAAUlkB,EAAKlnE,GACzD,IAAI2uF,EAAgB9rG,KAAK6oG,SAASxkB,EAAI/yE,KAAMo5F,GAAM9wB,YAQlD,OAAOgxB,GAA2BztF,EAN9BknE,aAAe0mB,GACJ1mB,EAAI0nB,UAAUD,GAGd9rG,KAAK4rG,OAAOvnB,EAAI7rE,OAAQkyF,GAAM9wB,YAAYM,OAAO4xB,KAIpEX,EAAgBjrG,UAAUwkG,sBAAwB,SAAUrgB,EAAKlnE,GAE7D,OADAwtF,GAAqBxtF,EAAMknE,GACpBrkF,KAAKqrG,mBAEhBF,EAAgBjrG,UAAUgnG,mBAAqB,SAAU7iB,EAAKlnE,GAC1DwtF,GAAqBxtF,EAAMknE,GAE3B,IADA,IAAI/yE,EAAO,CAAC80E,GAAQ/B,EAAI8d,YAAYxhG,SAC3BH,EAAI,EAAGA,EAAI6jF,EAAI4iB,QAAQtmG,OAAS,EAAGH,IACxC8Q,EAAKzP,KAAKukF,GAAQ/B,EAAI4iB,QAAQzmG,KAC9B8Q,EAAKzP,KAAK7B,KAAK4rG,OAAOvnB,EAAI8d,YAAY3hG,GAAIkqG,GAAM9wB,aAGpD,OADAtoE,EAAKzP,KAAKukF,GAAQ/B,EAAI4iB,QAAQ5iB,EAAI4iB,QAAQtmG,OAAS,KAC/CX,KAAKsrG,sBACEtrG,KAAKsrG,sBAAsBh6F,GAE/B+yE,EAAI8d,YAAYxhG,QAAU,EAC7BklF,GAAWuF,GAAYlnC,mBAAmBg2B,OAAO5oE,GACjDu0E,GAAWuF,GAAYtnC,aAAao2B,OAAO,CAAC5oE,EAAK,GAAI20E,GAAW30E,EAAKjH,MAAM,OAEnF8gG,EAAgBjrG,UAAU4lG,eAAiB,SAAUzhB,EAAKlnE,GACtD,IAAI6uF,EAAehsG,KAAKisG,iBAAiB5nB,GACzC,OAAI2nB,EACOhsG,KAAKksG,kBAAkB7nB,EAAK2nB,EAAc7uF,GAG1CytF,GAA2BztF,EAAMnd,KAAK4rG,OAAOvnB,EAAI14E,IAAK++F,GAAM9wB,YAAYrqE,IAAIvP,KAAK4rG,OAAOvnB,EAAI90E,IAAKm7F,GAAM9wB,eAGtHuxB,EAAgBjrG,UAAU+lG,gBAAkB,SAAU5hB,EAAKlnE,GACvD,IAAIxR,EAAM3L,KAAK4rG,OAAOvnB,EAAI14E,IAAK++F,GAAM9wB,YACjCrqE,EAAMvP,KAAK4rG,OAAOvnB,EAAI90E,IAAKm7F,GAAM9wB,YACjC93E,EAAQ9B,KAAK4rG,OAAOvnB,EAAIviF,MAAO4oG,GAAM9wB,YACzC,OAAOgxB,GAA2BztF,EAAMxR,EAAI4D,IAAIA,GAAKwjB,IAAIjxB,KAE7DqpG,EAAgBjrG,UAAUymG,kBAAoB,SAAUtiB,EAAKlnE,GACzD,MAAM,IAAIta,MAAM,4EAEpBsoG,EAAgBjrG,UAAU4mG,gBAAkB,SAAUziB,EAAKlnE,GACvD,MAAM,IAAIta,MAAM,0EAEpBsoG,EAAgBjrG,UAAUsmG,sBAAwB,SAAUniB,EAAKlnE,GAM7D,OAAOytF,GAA2BztF,EAAMipE,GAAQ/B,EAAIviF,MAHzCuiF,QAAIviF,QAA2D,IAAduiF,EAAIviF,QAAgC,IAAduiF,EAAIviF,MAClFq3E,QACA7zE,KAGR6lG,EAAgBjrG,UAAUisG,UAAY,SAAUhpG,GAAQ,OAAOnD,KAAKorG,eAAegB,SAASjpG,IAC5FgoG,EAAgBjrG,UAAU+nG,gBAAkB,SAAU5jB,EAAKlnE,GACvD,GAAIknE,EAAIjG,oBAAoBomB,IAAgC,QAAZngB,EAAIlhF,KAAgB,CAEhE,GAAmB,IADfmO,EAAOtR,KAAK6oG,SAASxkB,EAAI/yE,KAAMo5F,GAAM9wB,aAChCj5E,OACL,MAAM,IAAIkC,MAAM,2DAA6DyO,EAAK3Q,QAAU,SAEhG,OAAO2Q,EAAK,GAAGqrE,KAAK1D,IAExB,IAAI+yB,EAAehsG,KAAKisG,iBAAiB5nB,GACzC,GAAI2nB,EACA,OAAOhsG,KAAKksG,kBAAkB7nB,EAAK2nB,EAAc7uF,GAGjD,IAAI7L,EAAOtR,KAAK6oG,SAASxkB,EAAI/yE,KAAMo5F,GAAM9wB,YACrC3tE,EAAS,KACTmyE,EAAWp+E,KAAK4rG,OAAOvnB,EAAIjG,SAAUssB,GAAM9wB,YAC/C,GAAIwE,IAAap+E,KAAKqrG,kBAAmB,CACrC,IAAIgB,EAAUrsG,KAAKmsG,UAAU9nB,EAAIlhF,MAC7BkpG,IACApgG,EAASogG,EAAQnyB,OAAO5oE,IAMhC,OAHc,MAAVrF,IACAA,EAASmyE,EAASpE,WAAWqK,EAAIlhF,KAAMmO,IAEpCs5F,GAA2BztF,EAAMlR,IAGhDk/F,EAAgBjrG,UAAUynG,eAAiB,SAAUtjB,EAAKlnE,GACtD,OAAOytF,GAA2BztF,GAz6J7BsgE,EAy6JuCz9E,KAAK4rG,OAAOvnB,EAAIwE,WAAY6hB,GAAM9wB,YAx6J3E,IAAI+F,GAAQlC,OADJ5D,KAAnB,IAAa4D,GA26JT0tB,EAAgBjrG,UAAU4nG,mBAAqB,SAAUzjB,EAAKlnE,GAC1D,OAAOytF,GAA2BztF,GAz6JnBsgE,EAy6JuCz9E,KAAK4rG,OAAOvnB,EAAIwE,WAAY6hB,GAAM9wB,YAx6JrF,IAAIkG,GAAcrC,OADA5D,KAA7B,IAAuB4D,GA26JnB0tB,EAAgBjrG,UAAUmlG,kBAAoB,SAAUhhB,EAAKlnE,GACzD,IAAI6uF,EAAehsG,KAAKisG,iBAAiB5nB,GACzC,GAAI2nB,EACA,OAAOhsG,KAAKksG,kBAAkB7nB,EAAK2nB,EAAc7uF,GAGjD,IAAIlR,EAAS,KACTmyE,EAAWp+E,KAAK4rG,OAAOvnB,EAAIjG,SAAUssB,GAAM9wB,YAO/C,OANIwE,IAAap+E,KAAKqrG,oBAClBp/F,EAASjM,KAAKmsG,UAAU9nB,EAAIlhF,OAElB,MAAV8I,IACAA,EAASmyE,EAASn5C,KAAKo/C,EAAIlhF,OAExBynG,GAA2BztF,EAAMlR,IAGhDk/F,EAAgBjrG,UAAUslG,mBAAqB,SAAUnhB,EAAKlnE,GAC1D,IAAIihE,EAAWp+E,KAAK4rG,OAAOvnB,EAAIjG,SAAUssB,GAAM9wB,YAC3CyyB,EAAU,KACd,GAAIjuB,IAAap+E,KAAKqrG,kBAAmB,CACrC,IAAIiB,EAAYtsG,KAAKmsG,UAAU9nB,EAAIlhF,MACnC,GAAImpG,EAAW,CACX,KAAIA,aAAqBxyB,IAQrB,MAAM,IAAIj3E,MAAM,6CAJhBwpG,EAAUC,GAatB,OAHgB,OAAZD,IACAA,EAAUjuB,EAASn5C,KAAKo/C,EAAIlhF,OAEzBynG,GAA2BztF,EAAMkvF,EAAQt5E,IAAI/yB,KAAK4rG,OAAOvnB,EAAIviF,MAAO4oG,GAAM9wB,eAErFuxB,EAAgBjrG,UAAUylG,sBAAwB,SAAUthB,EAAKlnE,GAC7D,OAAOnd,KAAKksG,kBAAkB7nB,EAAKrkF,KAAKisG,iBAAiB5nB,GAAMlnE,IAEnEguF,EAAgBjrG,UAAUkoG,oBAAsB,SAAU/jB,EAAKlnE,GAC3D,OAAOnd,KAAKksG,kBAAkB7nB,EAAKrkF,KAAKisG,iBAAiB5nB,GAAMlnE,IAEnEguF,EAAgBjrG,UAAU2oG,SAAW,SAAUC,EAAM3rF,GACjD,IAAIjX,EAAQlG,KACZ,OAAO8oG,EAAK/lG,IAAI,SAAUshF,GAAO,OAAOn+E,EAAM0lG,OAAOvnB,EAAKlnE,MAE9DguF,EAAgBjrG,UAAUmkG,WAAa,SAAUhgB,EAAKlnE,GAClD,MAAM,IAAIta,MAAM,gEAAkEwhF,EAAI+f,wBAA0B,eAAiB/f,EAAIprE,WAEzIkyF,EAAgBjrG,UAAU0rG,OAAS,SAAUvnB,EAAKlnE,GAE9C,OADand,KAAKwrG,WAAW5wF,IAAIypE,KAGzBrkF,KAAKurG,SAAS3wF,IAAIypE,IAAQA,GAAK8N,MAAMnyF,KAAMmd,IAEvDguF,EAAgBjrG,UAAUgsG,kBAAoB,SAAU7nB,EAAK2nB,EAAc7uF,GAoCvE,IAAIovF,EAAoBvsG,KAAK4rG,OAAOI,EAAa5tB,SAAUssB,GAAM9wB,YAC7D4yB,OAAYlnG,EACZtF,KAAKysG,eAAeT,EAAa5tB,YAKjCmuB,GAFAC,EAAYxsG,KAAK0sG,qBAEa35E,IAAIw5E,GAElCvsG,KAAKwrG,WAAWz4E,IAAIi5E,EAAa5tB,SAAUouB,IAE/C,IAAI/sB,EAAY8sB,EAAkB9vB,UAI9Bz8E,KAAKurG,SAASx4E,IAAIi5E,EADlBA,aAAwB9D,GACQ,IAAIH,GAAWiE,EAAapL,KAAMoL,EAAa5tB,SAAU4tB,EAAa7oG,KAAM6oG,EAAa16F,MAGzF,IAAI6zF,GAAa6G,EAAapL,KAAMoL,EAAa5tB,SAAU4tB,EAAa7oG,OAG5G,IAAIwpG,EAAS3sG,KAAK4rG,OAAOvnB,EAAKqmB,GAAM9wB,YASpC,OANA55E,KAAKurG,SAASx7D,OAAOi8D,GAEjBQ,GACAxsG,KAAK4sG,iBAAiBJ,GAGnB5B,GAA2BztF,EAAMsiE,EAAUnF,YAAY8L,GAAQ,MAAOumB,KASjFxB,EAAgBjrG,UAAU+rG,iBAAmB,SAAU5nB,GACnD,IAAIn+E,EAAQlG,KACRmyF,EAAQ,SAAU/Z,EAASiM,GAC3B,OAAQn+E,EAAMqlG,SAAS3wF,IAAIypE,IAAQA,GAAK8N,MAAM/Z,IAElD,OAAOiM,EAAI8N,MAAM,CACbqV,YAAa,SAAUnjB,GAAO,OAAO,MACrCwgB,WAAY,SAAUxgB,GAAO,OAAO,MACpC6gB,iBAAkB,SAAU7gB,GAAO,OAAO,MAC1CkkB,kBAAmB,SAAUlkB,GAAO,OAAO,MAC3CqgB,sBAAuB,SAAUrgB,GAAO,OAAO,MAC/C6iB,mBAAoB,SAAU7iB,GAAO,OAAO,MAC5CyhB,eAAgB,SAAUzhB,GAAO,OAAO8N,EAAMnyF,KAAMqkF,EAAI14E,MACxDs6F,gBAAiB,SAAU5hB,GAAO,OAAO,MACzCsiB,kBAAmB,SAAUtiB,GAAO,OAAO,MAC3CyiB,gBAAiB,SAAUziB,GAAO,OAAO,MACzCmiB,sBAAuB,SAAUniB,GAAO,OAAO,MAC/C4jB,gBAAiB,SAAU5jB,GAAO,OAAO8N,EAAMnyF,KAAMqkF,EAAIjG,WACzDioB,UAAW,SAAUhiB,GAAO,OAAO,MACnCsjB,eAAgB,SAAUtjB,GAAO,OAAO,MACxCyjB,mBAAoB,SAAUzjB,GAAO,OAAO,MAC5CghB,kBAAmB,SAAUhhB,GAAO,OAAO8N,EAAMnyF,KAAMqkF,EAAIjG,WAC3DonB,mBAAoB,SAAUnhB,GAAO,OAAO,MAC5CggB,WAAY,SAAUhgB,GAAO,OAAO,MACpC+jB,oBAAqB,SAAU/jB,GAAO,OAAO8N,EAAMnyF,KAAMqkF,EAAIjG,WAAaiG,GAC1EshB,sBAAuB,SAAUthB,GAC7B,OAAO8N,EAAMnyF,KAAMqkF,EAAIjG,WAAaiG,MAOhD8mB,EAAgBjrG,UAAUusG,eAAiB,SAAUpoB,GACjD,IAAIn+E,EAAQlG,KACRmyF,EAAQ,SAAU/Z,EAASiM,GAC3B,OAAOA,IAAQn+E,EAAMqlG,SAAS3wF,IAAIypE,IAAQA,GAAK8N,MAAM/Z,IAKzD,OAAOiM,EAAI8N,MAAM,CACbqV,YAAa,SAAUnjB,GAAO,OAAO8N,EAAMnyF,KAAMqkF,EAAIijB,OAASnV,EAAMnyF,KAAMqkF,EAAIkjB,QAC9E1C,WAAY,SAAUxgB,GAAO,OAAO,GACpC6gB,iBAAkB,SAAU7gB,GACxB,OAAO8N,EAAMnyF,KAAMqkF,EAAI5E,YAAc0S,EAAMnyF,KAAMqkF,EAAI2gB,UACjD7S,EAAMnyF,KAAMqkF,EAAI4gB,WAExBsD,kBAAmB,SAAUlkB,GAAO,OAAO,GAC3CqgB,sBAAuB,SAAUrgB,GAAO,OAAO,GAC/C6iB,mBAAoB,SAAU7iB,GAAO,OAZzB,SAAUjM,EAASiM,GAC/B,OAAOA,EAAIvuC,KAAK,SAAUuuC,GAAO,OAAO8N,EAAM/Z,EAASiM,KAWXwoB,CAAU7sG,KAAMqkF,EAAI8d,cAChE2D,eAAgB,SAAUzhB,GAAO,OAAO,GACxC4hB,gBAAiB,SAAU5hB,GAAO,OAAO,GACzCsiB,kBAAmB,SAAUtiB,GAAO,OAAO,GAC3CyiB,gBAAiB,SAAUziB,GAAO,OAAO,GACzCmiB,sBAAuB,SAAUniB,GAAO,OAAO,GAC/C4jB,gBAAiB,SAAU5jB,GAAO,OAAO,GACzCgiB,UAAW,SAAUhiB,GAAO,OAAO,GACnCsjB,eAAgB,SAAUtjB,GAAO,OAAO8N,EAAMnyF,KAAMqkF,EAAIwE,aACxDif,mBAAoB,SAAUzjB,GAAO,OAAO8N,EAAMnyF,KAAMqkF,EAAIwE,aAC5Dwc,kBAAmB,SAAUhhB,GAAO,OAAO,GAC3CmhB,mBAAoB,SAAUnhB,GAAO,OAAO,GAC5CggB,WAAY,SAAUhgB,GAAO,OAAO,GACpC+jB,oBAAqB,SAAU/jB,GAAO,OAAO,GAC7CshB,sBAAuB,SAAUthB,GAAO,OAAO,MAGvD8mB,EAAgBjrG,UAAUwsG,kBAAoB,WAC1C,IAAII,EAAa9sG,KAAKyrG,oBAEtB,OADAzrG,KAAK0rG,eAAiB9lG,KAAKmxF,IAAI/2F,KAAKyrG,kBAAmBzrG,KAAK0rG,gBACrD,IAAI1uB,GAAYstB,GAActqG,KAAKuqG,UAAWuC,KAEzD3B,EAAgBjrG,UAAU0sG,iBAAmB,SAAUJ,GAEnD,GADAxsG,KAAKyrG,oBACDe,EAAUrpG,MAAQmnG,GAActqG,KAAKuqG,UAAWvqG,KAAKyrG,mBACrD,MAAM,IAAI5oG,MAAM,aAAe2pG,EAAUrpG,KAAO,2BAGjDgoG,EA/XyB,GAyYhC4B,GAAsC,WACtC,SAASA,KAQT,OANAA,EAAqB7sG,UAAUksG,SAAW,SAAUjpG,GAChD,OAAIA,IAASumG,GAAiB9oD,MAAMz9C,KACzBumG,GAAiB9oD,MAErB,MAEJmsD,EAT8B,GA0BrChC,GAAqC,SAAUhlG,GAE/C,SAASinG,EAAoBpM,EAAMtvF,EAAMy6F,GACrC,IAAI7lG,EAAQH,EAAOnF,KAAKZ,KAAM4gG,EAAM,KAAMtvF,IAAStR,KAGnD,OAFAkG,EAAMoL,KAAOA,EACbpL,EAAM6lG,UAAYA,EACX7lG,EAEX,OAPA83D,GAAUgvC,EAAqBjnG,GAOxBinG,EAR6B,CAStC3E,IASE4E,GACJ,SAAWA,UACPA,EAAeA,EAAuB,OAAI,GAAK,SAC/CA,EAAeA,EAA0B,UAAI,GAAK,YAClDA,EAAeA,EAAwB,QAAI,GAAK,UAChDA,EAAeA,EAA0B,UAAI,GAAK,YAClDA,EAAeA,EAAiC,iBAAI,GAAK,mBACzDA,EAAeA,EAAoC,oBAAI,GAAK,sBAC5DA,EAAeA,EAA8B,cAAI,GAAK,gBACtDA,EAAeA,EAAiC,iBAAI,GAAK,mBARlDA,EAAX,CASE,IACEC,GAAyB,CACzBD,GAAeE,OAAQF,GAAeG,UAAWH,GAAeI,QAASJ,GAAeK,UACxFL,GAAeM,iBAAkBN,GAAeO,oBAAqBP,GAAeQ,cACpFR,GAAeS,kBA2CfC,GAAO,EACPC,GAAO,EACPC,GAAM,GACNC,GAAQ,GACRC,GAAM,GACNC,GAAM,GACNC,GAAS,GAETC,GAAM,GAENC,GAAK,GAGLC,GAAM,GAINC,GAAQ,GAERC,GAAS,GAETC,GAAS,GAETC,GAAa,GAEbC,GAAM,GACNC,GAAM,GAENC,GAAK,GACLC,GAAK,GACLC,GAAK,GAELC,GAAK,GAELC,GAAK,GAKLC,GAAK,GACLC,GAAK,GAELC,GAAK,IACLC,GAAK,IACLC,GAAK,IACLC,GAAK,IAELC,GAAK,IAELC,GAAK,IACLC,GAAU,IAGVC,GAAQ,IAEZ,SAASC,GAAaC,GAClB,OAAQA,GAAQ/B,IAAQ+B,GAAQ1B,IAAY0B,GAAQF,GAExD,SAASG,GAAQD,GACb,OAAOhB,IAAMgB,GAAQA,GAAQf,GAEjC,SAASiB,GAAcF,GACnB,OAAOA,GAAQV,IAAMU,GAAQJ,IAAMI,GAAQd,IAAMc,GAAQZ,GAa7D,IAAIe,GAA+B,WAC/B,SAASA,EAAcle,EAAMme,EAAQje,EAAMnhB,GACvC3wE,KAAK4xF,KAAOA,EACZ5xF,KAAK+vG,OAASA,EACd/vG,KAAK8xF,KAAOA,EACZ9xF,KAAK2wE,IAAMA,EA6Ef,OA3EAm/B,EAAc5vG,UAAU+C,SAAW,WAC/B,OAAsB,MAAfjD,KAAK+vG,OAAiB/vG,KAAK4xF,KAAKX,IAAM,IAAMjxF,KAAK8xF,KAAO,IAAM9xF,KAAK2wE,IAAM3wE,KAAK4xF,KAAKX,KAE9F6e,EAAc5vG,UAAU8vG,OAAS,SAAUjuC,GAMvC,IALA,IAAI95D,EAASjI,KAAK4xF,KAAK2I,QACnBv2F,EAAMiE,EAAOtH,OACbovG,EAAS/vG,KAAK+vG,OACdje,EAAO9xF,KAAK8xF,KACZnhB,EAAM3wE,KAAK2wE,IACRo/B,EAAS,GAAKhuC,EAAQ,GAIzB,GAFAA,KACIkuC,EAAKhoG,EAAO+Y,aAFhB+uF,KAGUlC,GAAK,CACX/b,IACA,IAAIoe,EAAYjoG,EAAO2sB,OAAO,EAAGm7E,EAAS,GAAGI,YAAY39E,OAAO41D,aAAaylB,KAC7El9B,EAAMu/B,EAAY,EAAIH,EAASG,EAAYH,OAG3Cp/B,IAGR,KAAOo/B,EAAS/rG,GAAO+9D,EAAQ,GAAG,CAC9B,IAAIkuC,EAAKhoG,EAAO+Y,WAAW+uF,GAC3BA,IACAhuC,IACIkuC,GAAMpC,IACN/b,IACAnhB,EAAM,GAGNA,IAGR,OAAO,IAAIm/B,EAAc9vG,KAAK4xF,KAAMme,EAAQje,EAAMnhB,IAItDm/B,EAAc5vG,UAAUkwG,WAAa,SAAUC,EAAUC,GACrD,IAAI/V,EAAUv6F,KAAK4xF,KAAK2I,QACpBgW,EAAcvwG,KAAK+vG,OACvB,GAAmB,MAAfQ,EAAqB,CACjBA,EAAchW,EAAQ55F,OAAS,IAC/B4vG,EAAchW,EAAQ55F,OAAS,GAKnC,IAHA,IAAI6vG,EAAYD,EACZE,EAAW,EACXC,EAAW,EACRD,EAAWJ,GAAYE,EAAc,IAExCE,IAC4B,MAAxBlW,IAFJgW,MAGUG,GAAYJ,KAO1B,IAFAG,EAAW,EACXC,EAAW,EACJD,EAAWJ,GAAYG,EAAYjW,EAAQ55F,OAAS,IAEvD8vG,IAC0B,MAAtBlW,IAFJiW,MAGUE,GAAYJ,KAK1B,MAAO,CACHK,OAAQpW,EAAQxmF,UAAUw8F,EAAavwG,KAAK+vG,QAC5Ca,MAAOrW,EAAQxmF,UAAU/T,KAAK+vG,OAAQS,EAAY,IAG1D,OAAO,MAEJV,EAlFuB,GAoF9Be,GAAiC,WAKjC,OAJA,SAAyBtW,EAAStJ,GAC9BjxF,KAAKu6F,QAAUA,EACfv6F,KAAKixF,IAAMA,GAHiB,GAOhC6f,GAAiC,WACjC,SAASA,EAAgBnf,EAAOnkE,EAAKujF,QACjB,IAAZA,IAAsBA,EAAU,MACpC/wG,KAAK2xF,MAAQA,EACb3xF,KAAKwtB,IAAMA,EACXxtB,KAAK+wG,QAAUA,EAKnB,OAHAD,EAAgB5wG,UAAU+C,SAAW,WACjC,OAAOjD,KAAK2xF,MAAMC,KAAK2I,QAAQxmF,UAAU/T,KAAK2xF,MAAMoe,OAAQ/vG,KAAKwtB,IAAIuiF,SAElEe,EAVyB,GAYhCE,GACJ,SAAWA,UACPA,EAAgBA,EAAyB,QAAI,GAAK,UAClDA,EAAgBA,EAAuB,MAAI,GAAK,QAFzCA,EAAX,CAGE,IACEC,GAA4B,WAC5B,SAASA,EAAWrQ,EAAM/hD,EAAKqyD,QACb,IAAVA,IAAoBA,EAAQF,GAAgBG,OAChDnxG,KAAK4gG,KAAOA,EACZ5gG,KAAK6+C,IAAMA,EACX7+C,KAAKkxG,MAAQA,EAWjB,OATAD,EAAW/wG,UAAUkxG,kBAAoB,WACrC,IAAIrnB,EAAM/pF,KAAK4gG,KAAKjP,MAAMye,WAAW,IAAK,GAC1C,OAAOrmB,EAAM/pF,KAAK6+C,IAAM,MAASkrC,EAAI4mB,OAAS,IAAMK,GAAgBhxG,KAAKkxG,OAAS,OAASnnB,EAAI6mB,MAAQ,KACnG5wG,KAAK6+C,KAEboyD,EAAW/wG,UAAU+C,SAAW,WAC5B,IAAI8tG,EAAU/wG,KAAK4gG,KAAKmQ,QAAU,KAAO/wG,KAAK4gG,KAAKmQ,QAAU,GAC7D,OAAO/wG,KAAKoxG,oBAAsB,KAAOpxG,KAAK4gG,KAAKjP,MAAQof,GAExDE,EAhBoB,GA6J3BI,GAA2B,WAC3B,SAASC,IACLtxG,KAAKuxG,eAAgB,EAsUzB,OA5TAD,EAAUpxG,UAAUsxG,YAAc,SAAUC,EAASz4E,EAAU04E,QACtC,IAAjBA,IAA2BA,EAAe,IAC9C,IAAIC,EAA2CF,EA2XtC7tD,MAAMguD,KAAuB,GAvXtC,OAHAH,EAAwBA,EAsXf18E,QAAQ88E,GAAY,IArX7BJ,EAAUzxG,KAAK8xG,kBAAkBL,GAE1BrzC,GAAS,CADIp+D,KAAK+xG,cAAcN,EAASz4E,EAAU04E,IACzBC,GAAkBzuG,KAAK,OAE5DouG,EAAUpxG,UAAU4xG,kBAAoB,SAAUL,GAE9C,OADAA,EAAUzxG,KAAKgyG,mCAAmCP,GAC3CzxG,KAAKiyG,8BAA8BR,IAgB9CH,EAAUpxG,UAAU8xG,mCAAqC,SAAUP,GAE/D,OAAOA,EAAQ18E,QAAQm9E,GAA2B,WAE9C,IADA,IAAI7wG,EAAI,GACC4H,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpC5H,EAAE4H,GAAMvI,UAAUuI,GAEtB,OAAO5H,EAAE,GAAK,OAkBtBiwG,EAAUpxG,UAAU+xG,8BAAgC,SAAUR,GAE1D,OAAOA,EAAQ18E,QAAQo9E,GAAmB,WAEtC,IADA,IAAI9wG,EAAI,GACC4H,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpC5H,EAAE4H,GAAMvI,UAAUuI,GAEtB,IAAImpG,EAAO/wG,EAAE,GAAG0zB,QAAQ1zB,EAAE,GAAI,IAAI0zB,QAAQ1zB,EAAE,GAAI,IAChD,OAAOA,EAAE,GAAK+wG,KAWtBd,EAAUpxG,UAAU6xG,cAAgB,SAAUN,EAASY,EAAeX,GAClE,IAAIY,EAAgBtyG,KAAKuyG,iCAAiCd,GAU1D,OARAA,EAAUzxG,KAAKwyG,6BAA6Bf,GAC5CA,EAAUzxG,KAAKyyG,kBAAkBhB,GACjCA,EAAUzxG,KAAK0yG,yBAAyBjB,GACxCA,EAAUzxG,KAAK2yG,2BAA2BlB,GACtCY,IACAZ,EAAUzxG,KAAK4yG,gBAAgBnB,EAASY,EAAeX,KAE3DD,EAAUA,EAAU,KAAOa,GACZ3rB,QAiBnB2qB,EAAUpxG,UAAUqyG,iCAAmC,SAAUd,GAE7D,IACIpwG,EADAG,EAAI,GAGR,IADAqxG,GAA0BpgC,UAAY,EACmB,QAAjDpxE,EAAIwxG,GAA0B9uE,KAAK0tE,KAEvCjwG,GADWH,EAAE,GAAG0zB,QAAQ1zB,EAAE,GAAI,IAAI0zB,QAAQ1zB,EAAE,GAAIA,EAAE,IACtC,OAEhB,OAAOG,GASX8vG,EAAUpxG,UAAUuyG,kBAAoB,SAAUhB,GAC9C,OAAOzxG,KAAK8yG,kBAAkBrB,EAASsB,GAAiB/yG,KAAKgzG,yBAiBjE1B,EAAUpxG,UAAUwyG,yBAA2B,SAAUjB,GACrD,OAAOzxG,KAAK8yG,kBAAkBrB,EAASwB,GAAwBjzG,KAAKkzG,gCAExE5B,EAAUpxG,UAAU4yG,kBAAoB,SAAUrB,EAAS0B,EAAQC,GAE/D,OAAO3B,EAAQ18E,QAAQo+E,EAAQ,WAE3B,IADA,IAAI9xG,EAAI,GACC4H,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpC5H,EAAE4H,GAAMvI,UAAUuI,GAEtB,GAAI5H,EAAE,GAAI,CAGN,IAFA,IAAIwzB,EAAQxzB,EAAE,GAAGk7B,MAAM,KACnB/6B,EAAI,GACChB,EAAI,EAAGA,EAAIq0B,EAAMl0B,OAAQH,IAAK,CACnC,IAAIZ,EAAIi1B,EAAMr0B,GAAGmmF,OACjB,IAAK/mF,EACD,MACJ4B,EAAEK,KAAKuxG,EAAaC,GAA2BzzG,EAAGyB,EAAE,KAExD,OAAOG,EAAE0B,KAAK,KAGd,OAAOmwG,GAA4BhyG,EAAE,MAIjDiwG,EAAUpxG,UAAUgzG,8BAAgC,SAAUrkB,EAAM4Q,EAAM74C,GACtE,OAAI64C,EAAK76F,QAAQ0uG,KAAkB,EACxBtzG,KAAKgzG,uBAAuBnkB,EAAM4Q,EAAM74C,GAGxCioC,EAAO4Q,EAAO74C,EAAS,KAAO64C,EAAO,IAAM5Q,EAAOjoC,GAGjE0qD,EAAUpxG,UAAU8yG,uBAAyB,SAAUnkB,EAAM4Q,EAAM74C,GAC/D,OAAOioC,EAAO4Q,EAAK1qE,QAAQu+E,GAAe,IAAM1sD,GAMpD0qD,EAAUpxG,UAAUyyG,2BAA6B,SAAUlB,GACvD,OAAO8B,GAAsBxuG,OAAO,SAAUkH,EAAQunG,GAAW,OAAOvnG,EAAO8oB,QAAQy+E,EAAS,MAAS/B,IAG7GH,EAAUpxG,UAAU0yG,gBAAkB,SAAUnB,EAASY,EAAeX,GACpE,IAuNqB+B,EACrBC,EACAC,EAzNIztG,EAAQlG,KACZ,OAsNqByzG,EAtNQ,SAAUrB,GACnC,IAAIp5E,EAAWo5E,EAAKp5E,SAChBuhE,EAAU6X,EAAK7X,QASnB,MARwB,KAApB6X,EAAKp5E,SAAS,GACdA,EACI9yB,EAAM0tG,eAAexB,EAAKp5E,SAAUq5E,EAAeX,EAAcxrG,EAAMqrG,gBAEtEa,EAAKp5E,SAAS66E,WAAW,WAAazB,EAAKp5E,SAAS66E,WAAW,cACpEzB,EAAKp5E,SAAS66E,WAAW,UAAYzB,EAAKp5E,SAAS66E,WAAW,gBAC9DtZ,EAAUr0F,EAAM0sG,gBAAgBR,EAAK7X,QAAS8X,EAAeX,IAE1D,IAAIoC,GAAQ96E,EAAUuhE,IA4MjCmZ,EA2BR,SAAsBvqG,GAMlB,IALA,IAAI4qG,EAnPoBtC,EAmPDl1E,MAAMy3E,IACzBC,EAAc,GACdC,EAAgB,GAChBC,EAAe,EACfC,EAAoB,GACfhT,EAAY,EAAGA,EAAY2S,EAAWpzG,OAAQygG,IAAa,CAChE,IAAI3B,EAAOsU,EAAW3S,GAClB3B,GAAQ4U,IACRF,IAEAA,EAAe,EACfC,EAAkBvyG,KAAK49F,IAGnB2U,EAAkBzzG,OAAS,IAC3BuzG,EAAcryG,KAAKuyG,EAAkBlxG,KAAK,KAC1C+wG,EAAYpyG,KAAKyyG,IACjBF,EAAoB,IAExBH,EAAYpyG,KAAK49F,IAEjBA,GAAQ8U,IACRJ,IAOR,OAJIC,EAAkBzzG,OAAS,IAC3BuzG,EAAcryG,KAAKuyG,EAAkBlxG,KAAK,KAC1C+wG,EAAYpyG,KAAKyyG,KAEd,IAAIE,GAAwBP,EAAY/wG,KAAK,IAAKgxG,GAzD5BO,GACzBd,EAAiB,EACdD,EAAuBgB,cAAc3/E,QAAQ4/E,GAAS,WAEzD,IADA,IAAItzG,EAAI,GACC4H,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpC5H,EAAE4H,GAAMvI,UAAUuI,GAEtB,IAAI+vB,EAAW33B,EAAE,GACbk5F,EAAU,GACV3zC,EAASvlD,EAAE,GACXuzG,EAAgB,GAChBhuD,GAAUA,EAAOitD,WAAW,IAAMS,MAClC/Z,EAAUmZ,EAAuBmB,OAAOlB,KACxC/sD,EAASA,EAAO7yC,UAAUugG,GAAkB3zG,OAAS,GACrDi0G,EAAgB,KAEpB,IAAIxC,EAAOqB,EAAa,IAAIK,GAAQ96E,EAAUuhE,IAC9C,MAAO,GAAKl5F,EAAE,GAAK+wG,EAAKp5E,SAAW33B,EAAE,GAAKuzG,EAAgBxC,EAAK7X,QAAU3zC,KA1N7E0qD,EAAUpxG,UAAU0zG,eAAiB,SAAU56E,EAAUq5E,EAAeX,EAAcoD,GAClF,IAAI5uG,EAAQlG,KACZ,OAAOg5B,EAASuD,MAAM,KACjBx5B,IAAI,SAAU08F,GAAQ,OAAOA,EAAK9Y,OAAOpqD,MAAMw4E,MAC/ChyG,IAAI,SAAUiyG,GACf,IAAIrjG,EAAKwsD,GAAO62C,GAAYC,EAActjG,EAAG,GAAIujG,EAAavjG,EAAGtH,MAAM,GAWvE,OAAO+zD,GAAS,CAVC,SAAU62C,GACvB,OAAI/uG,EAAMivG,sBAAsBF,EAAa5C,GAClCyC,EACH5uG,EAAMkvG,0BAA0BH,EAAa5C,EAAeX,GAC5DxrG,EAAMmvG,oBAAoBJ,EAAa5C,EAAeX,GAGnDuD,EAGEK,CAAWL,IAAeC,GAAYhyG,KAAK,OAE3DA,KAAK,OAEdouG,EAAUpxG,UAAUi1G,sBAAwB,SAAUn8E,EAAUq5E,GAE5D,OADSryG,KAAKu1G,kBAAkBlD,GACrBvW,KAAK9iE,IAEpBs4E,EAAUpxG,UAAUq1G,kBAAoB,SAAUlD,GAI9C,OADAA,EAAgBA,EAAct9E,QAFpB,MAEiC,OAAOA,QADxC,MACqD,OACxD,IAAIg9C,OAAO,KAAOsgC,EAAgB,IAAMmD,GAAmB,MAEtElE,EAAUpxG,UAAUm1G,oBAAsB,SAAUr8E,EAAUq5E,EAAeX,GAEzE,OAAO1xG,KAAKy1G,0BAA0Bz8E,EAAUq5E,EAAeX,IAGnEJ,EAAUpxG,UAAUu1G,0BAA4B,SAAUz8E,EAAUq5E,EAAeX,GAG/E,GADAgE,GAAgBjjC,UAAY,EACxBijC,GAAgB5Z,KAAK9iE,GAAW,CAChC,IAAI28E,EAAc31G,KAAKuxG,cAAgB,IAAMG,EAAe,IAAMW,EAClE,OAAOr5E,EACFjE,QAAQ6gF,GAA6B,SAAUC,EAAK78E,GACrD,OAAOA,EAASjE,QAAQ,kBAAmB,SAAU+gF,EAAGnF,EAAQoF,EAAOnF,GACnE,OAAOD,EAASgF,EAAcI,EAAQnF,MAGzC77E,QAAQ2gF,GAAiBC,EAAc,KAEhD,OAAOtD,EAAgB,IAAMr5E,GAIjCs4E,EAAUpxG,UAAUk1G,0BAA4B,SAAUp8E,EAAUq5E,EAAeX,GAmD/E,IAlDA,IAkCI79F,EAlCA3N,EAAQlG,KASRowB,EAAW,KAPfiiF,EAAgBA,EAAct9E,QADnB,mBACiC,SAAU+gF,GAElD,IADA,IAAIjhF,EAAQ,GACH5rB,EAAK,EAAGA,EAAKvI,UAAUC,OAAQsI,IACpC4rB,EAAM5rB,EAAK,GAAKvI,UAAUuI,GAE9B,OAAO4rB,EAAM,MAEoB,IACjCmhF,EAAqB,SAAUp2G,GAC/B,IAAIq2G,EAAUr2G,EAAE+mF,OAChB,IAAKsvB,EACD,MAAO,GAEX,GAAIr2G,EAAEgF,QAAQyuG,KAA8B,EACxC4C,EAAU/vG,EAAMuvG,0BAA0B71G,EAAGyyG,EAAeX,OAE3D,CAED,IAAIpxG,EAAIV,EAAEm1B,QAAQ2gF,GAAiB,IACnC,GAAIp1G,EAAEK,OAAS,EAAG,CACd,IAAIm5C,EAAUx5C,EAAEsjD,MAAM,mBAClB9J,IACAm8D,EAAUn8D,EAAQ,GAAK1pB,EAAW0pB,EAAQ,GAAKA,EAAQ,KAInE,OAAOm8D,GAEPC,EAAc,IAAIC,GAAan9E,GAE/Bo9E,EAAiB,GACjB3zD,EAAa,EAEb4zD,EAAM,sBAcNC,KAlBJt9E,EAAWk9E,EAAY3b,WAgBA31F,QAAQyuG,KAA8B,GAGvB,QAA9Bx/F,EAAMwiG,EAAItyE,KAAK/K,KAAqB,CACxC,IAAIopE,EAAYvuF,EAAI,GAChB0iG,EAASv9E,EAAS3uB,MAAMo4C,EAAY5uC,EAAI9P,OAAO4iF,OAGnDyvB,KAFAE,EAAcA,GAAeC,EAAO3xG,QAAQyuG,KAA8B,GAC3C2C,EAAmBO,GAAUA,GAC7B,IAAMnU,EAAY,IACjD3/C,EAAa4zD,EAAI5jC,UAErB,IAAIgtB,EAAOzmE,EAASjlB,UAAU0uC,GAI9B,OAFA2zD,IADAE,EAAcA,GAAe7W,EAAK76F,QAAQyuG,KAA8B,GACxC2C,EAAmBvW,GAAQA,EAEpDyW,EAAYM,QAAQJ,IAE/B9E,EAAUpxG,UAAUsyG,6BAA+B,SAAUx5E,GACzD,OAAOA,EAASjE,QAAQ0hF,GAAqBC,IACxC3hF,QAAQ4hF,GAAcrD,KAExBhC,EAxUmB,GA0U1B6E,GAA8B,WAC9B,SAASA,EAAan9E,GAClB,IAAI9yB,EAAQlG,KACZA,KAAKsxF,aAAe,GACpBtxF,KAAK+D,MAAQ,EAGbi1B,EAAWA,EAASjE,QAAQ,gBAAiB,SAAU+gF,EAAGc,GACtD,IAAIC,EAAY,QAAU3wG,EAAMnC,MAAQ,KAGxC,OAFAmC,EAAMorF,aAAazvF,KAAK+0G,GACxB1wG,EAAMnC,QACC8yG,IAIX72G,KAAK82G,SAAW99E,EAASjE,QAAQ,4BAA6B,SAAU+gF,EAAGiB,EAAQ3Q,GAC/E,IAAIyQ,EAAY,QAAU3wG,EAAMnC,MAAQ,KAGxC,OAFAmC,EAAMorF,aAAazvF,KAAKukG,GACxBlgG,EAAMnC,QACCgzG,EAASF,IAQxB,OALAV,EAAaj2G,UAAUs2G,QAAU,SAAUjc,GACvC,IAAIr0F,EAAQlG,KACZ,OAAOu6F,EAAQxlE,QAAQ,gBAAiB,SAAUs+D,EAAItvF,GAAS,OAAOmC,EAAMorF,cAAcvtF,MAE9FoyG,EAAaj2G,UAAUq6F,QAAU,WAAc,OAAOv6F,KAAK82G,UACpDX,EA3BsB,GA6B7BjE,GAA4B,4EAC5BC,GAAoB,kEACpBU,GAA4B,2EAC5BS,GAAgB,iBAEhBoD,GAAuB,oBACvBM,GAAe,kDAGfjE,GAAkB,IAAIhhC,OAAO,IAAMuhC,GAAgB0D,GAAc,OACjE/D,GAAyB,IAAIlhC,OAAO,IAAM2kC,GAAuBM,GAAc,OAC/E3D,GAA4BC,GAAgB,iBAC5CsC,GAA8B,uCAC9BrC,GAAwB,CACxB,YACA,aAEA,mBACA,eAKAwB,GAAuB,sCACvBS,GAAoB,6BACpBE,GAAkB,oBAClBiB,GAAe,WACfF,GAAsB,mBACtB5E,GAAa,uBAIbD,GAAqB,+CAIrB+C,GAAU,wDACVX,GAAW,UACXO,GAAa,IACbF,GAAc,IACdC,GAAoB,UACpBR,GAAyB,WAKzB,OAJA,SAAiB96E,EAAUuhE,GACvBv6F,KAAKg5B,SAAWA,EAChBh5B,KAAKu6F,QAAUA,GAHK,GA4BxBia,GAAyC,WAKzC,OAJA,SAAiCE,EAAeG,GAC5C70G,KAAK00G,cAAgBA,EACrB10G,KAAK60G,OAASA,GAHsB,GAkDxCoC,GAAyC,WAMzC,OALA,SAAiC9zG,EAAM0iC,EAAWgpB,GAC9C7uD,KAAKmD,KAAOA,EACZnD,KAAK6lC,UAAYA,EACjB7lC,KAAK6uD,SAAWA,GAJoB,GAQxCqoD,GAAoC,WAQpC,OAPA,SAA4BC,EAAWC,EAAWrmB,EAAcsmB,EAAWl8F,GACvEnb,KAAKm3G,UAAYA,EACjBn3G,KAAKo3G,UAAYA,EACjBp3G,KAAK+wF,aAAeA,EACpB/wF,KAAKq3G,UAAYA,EACjBr3G,KAAKmb,KAAOA,GANmB,GAUnCm8F,GAA+B,WAC/B,SAASA,EAAcC,GACnBv3G,KAAKu3G,aAAeA,EACpBv3G,KAAKw3G,WAAa,IAAInG,GAyC1B,OAvCAiG,EAAcp3G,UAAUu3G,iBAAmB,SAAUN,EAAWt9C,GAC5D,IAAIxhD,EAAWwhD,EAAKxhD,SACpB,OAAOrY,KAAK03G,eAAeP,EAAWt9C,EAAM,IAAIyzB,GAA0B,CACtEn0C,OAAQ9gC,EAAS8gC,OACjBo0C,UAAWl1E,EAASk1E,UACpB1nD,UAAWinD,GAAoBjzB,EAAKlpD,QACpC3Q,KAAK23G,eAAe99C,IAAO,IAEnCy9C,EAAcp3G,UAAU03G,cAAgB,SAAUT,EAAWt9C,EAAMg+C,EAAYC,GAE3E,YADa,IAATA,IAAmBA,EAAO93G,KAAK23G,eAAe99C,IAC3C75D,KAAK03G,eAAeP,EAAWt9C,EAAMg+C,EAAYC,GAAM,IAElER,EAAcp3G,UAAUy3G,eAAiB,SAAU99C,GAC/C,OAAOA,EAAKxhD,SAAS0nC,gBAAkBu2B,GAAkByhC,UAE7DT,EAAcp3G,UAAUw3G,eAAiB,SAAUP,EAAWt9C,EAAMg+C,EAAYC,EAAME,GAClF,IAAI9xG,EAAQlG,KACRi4G,EAAmBJ,EAAW1+D,OAAOp2C,IAAI,SAAUm1G,GAAc,OAAO9xB,GAAQlgF,EAAMiyG,cAAcD,EAAYJ,MAChH/mB,EAAe,GACnB8mB,EAAWtqB,UAAU7kF,QAAQ,SAAU0vG,GACnC,IAAIC,EAAYJ,EAAiBt3G,OAEjCs3G,EAAiBp2G,KAAK,MACtBkvF,EAAalvF,KAAK,IAAIo1G,GAAwBqB,GAAiB,MAAOF,EAAU,SAAUt2G,GAAS,OAAOm2G,EAAiBI,GAAalB,EAAUtxB,WAAW/jF,QAIjK,IAAIs1G,EAAYkB,GAAiBN,EAAwBn+C,EAAO,MAC5DmoB,EAAO4D,GAASwxB,GACfrkF,IAAIkzD,GAAWgyB,EAAkB,IAAIv/B,GAAUO,GAAc,CAACtB,GAAa4gC,UAC3E16B,WAAW,KAAMm6B,EAAwB,CAACh6B,GAAaC,OAAS,CACjED,GAAaC,MAAOD,GAAaklB,WAGrC,OADAiU,EAAU72B,WAAWz+E,KAAKmgF,GACnB,IAAIk1B,GAAmBC,EAAWC,EAAWrmB,EAAc+mB,EAAMD,IAE5EP,EAAcp3G,UAAUi4G,cAAgB,SAAUp8D,EAAO+7D,GACrD,OAAOA,EAAO93G,KAAKw3G,WAAWhG,YAAYz1D,EA7D/B,oBADH,kBA8DoEA,GAEzEu7D,EA5CuB,GA8ClC,SAASgB,GAAiB92F,GACtB,IAAIvV,EAAS,SAIb,OAHIuV,IACAvV,GAAU,IAAM2gF,GAAeprE,EAAU7Q,OAEtC1E,EAofX,IAAIusG,GACJ,SAAWA,UACPA,EAAUA,EAAqB,UAAI,GAAK,YACxCA,EAAUA,EAAsB,WAAI,GAAK,aACzCA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAiB,MAAI,GAAK,QAP7BA,EAAX,CAQE,IACEC,GAAW,CAAC,MAAO,MAAO,KAAM,OAAQ,YAAa,OAAQ,QAAS,KAAM,OAAQ,QACpFC,GAAuB,WACvB,SAASA,KAYT,OAVAA,EAAMx4G,UAAUy4G,SAAW,SAAUjkF,GAIjC,IAHA,IAAIkkF,EAAU,IAAIC,GAASnkF,GACvBD,EAAS,GACT9gB,EAAQilG,EAAQE,YACJ,MAATnlG,GACH8gB,EAAO5yB,KAAK8R,GACZA,EAAQilG,EAAQE,YAEpB,OAAOrkF,GAEJikF,EAbe,GAetBK,GAAuB,WACvB,SAASA,EAAMh1G,EAAO4M,EAAMqoG,EAAUC,GAClCj5G,KAAK+D,MAAQA,EACb/D,KAAK2Q,KAAOA,EACZ3Q,KAAKg5G,SAAWA,EAChBh5G,KAAKi5G,SAAWA,EAsCpB,OApCAF,EAAM74G,UAAUg5G,YAAc,SAAUvJ,GACpC,OAAO3vG,KAAK2Q,MAAQ6nG,GAAUW,WAAan5G,KAAKg5G,UAAYrJ,GAEhEoJ,EAAM74G,UAAUk5G,SAAW,WAAc,OAAOp5G,KAAK2Q,MAAQ6nG,GAAUtrG,QACvE6rG,EAAM74G,UAAUm5G,SAAW,WAAc,OAAOr5G,KAAK2Q,MAAQ6nG,GAAUhmF,QACvEumF,EAAM74G,UAAUo5G,WAAa,SAAUtxG,GACnC,OAAOhI,KAAK2Q,MAAQ6nG,GAAUe,UAAYv5G,KAAKi5G,UAAYjxG,GAE/D+wG,EAAM74G,UAAUs5G,aAAe,WAAc,OAAOx5G,KAAK2Q,MAAQ6nG,GAAUiB,YAC3EV,EAAM74G,UAAUw5G,UAAY,WAAc,OAAO15G,KAAK2Q,MAAQ6nG,GAAUmB,SACxEZ,EAAM74G,UAAU05G,aAAe,WAAc,OAAO55G,KAAK2Q,MAAQ6nG,GAAUmB,SAA4B,OAAjB35G,KAAKi5G,UAC3FF,EAAM74G,UAAU25G,YAAc,WAAc,OAAO75G,KAAK2Q,MAAQ6nG,GAAUmB,SAA4B,MAAjB35G,KAAKi5G,UAC1FF,EAAM74G,UAAU45G,cAAgB,WAAc,OAAO95G,KAAK2Q,MAAQ6nG,GAAUmB,SAA4B,QAAjB35G,KAAKi5G,UAC5FF,EAAM74G,UAAU65G,mBAAqB,WACjC,OAAO/5G,KAAK2Q,MAAQ6nG,GAAUmB,SAA4B,aAAjB35G,KAAKi5G,UAElDF,EAAM74G,UAAU85G,cAAgB,WAAc,OAAOh6G,KAAK2Q,MAAQ6nG,GAAUmB,SAA4B,QAAjB35G,KAAKi5G,UAC5FF,EAAM74G,UAAU+5G,eAAiB,WAAc,OAAOj6G,KAAK2Q,MAAQ6nG,GAAUmB,SAA4B,SAAjB35G,KAAKi5G,UAC7FF,EAAM74G,UAAUg6G,cAAgB,WAAc,OAAOl6G,KAAK2Q,MAAQ6nG,GAAUmB,SAA4B,QAAjB35G,KAAKi5G,UAC5FF,EAAM74G,UAAUi6G,QAAU,WAAc,OAAOn6G,KAAK2Q,MAAQ6nG,GAAU31G,OACtEk2G,EAAM74G,UAAUk6G,SAAW,WAAc,OAAOp6G,KAAK2Q,MAAQ6nG,GAAUtrG,OAASlN,KAAKg5G,UAAY,GACjGD,EAAM74G,UAAU+C,SAAW,WACvB,OAAQjD,KAAK2Q,MACT,KAAK6nG,GAAUW,UACf,KAAKX,GAAUiB,WACf,KAAKjB,GAAUmB,QACf,KAAKnB,GAAUe,SACf,KAAKf,GAAUhmF,OACf,KAAKgmF,GAAU31G,MACX,OAAO7C,KAAKi5G,SAChB,KAAKT,GAAUtrG,OACX,OAAOlN,KAAKg5G,SAAS/1G,WACzB,QACI,OAAO,OAGZ81G,EA3Ce,GA6C1B,SAASsB,GAAkBt2G,EAAO4rG,GAC9B,OAAO,IAAIoJ,GAAMh1G,EAAOy0G,GAAUW,UAAWxJ,EAAMn9E,OAAO41D,aAAaunB,IAQ3E,SAAS2K,GAAiBv2G,EAAO2wB,GAC7B,OAAO,IAAIqkF,GAAMh1G,EAAOy0G,GAAUe,SAAU,EAAG7kF,GAWnD,IAAI6lF,GAAM,IAAIxB,IAAO,EAAGP,GAAUW,UAAW,EAAG,IAC5CN,GAA0B,WAC1B,SAASA,EAAS1vG,GACdnJ,KAAKmJ,MAAQA,EACbnJ,KAAKw6G,KAAO,EACZx6G,KAAK+D,OAAS,EACd/D,KAAKW,OAASwI,EAAMxI,OACpBX,KAAKy6G,UA6LT,OA3LA5B,EAAS34G,UAAUu6G,QAAU,WACzBz6G,KAAKw6G,OAASx6G,KAAK+D,OAAS/D,KAAKW,OAASgtG,GAAO3tG,KAAKmJ,MAAM6X,WAAWhhB,KAAK+D,QAEhF80G,EAAS34G,UAAU44G,UAAY,WAI3B,IAHA,IAAI3vG,EAAQnJ,KAAKmJ,MAAOxI,EAASX,KAAKW,OAClC65G,EAAOx6G,KAAKw6G,KAAMz2G,EAAQ/D,KAAK+D,MAE5By2G,GAAQvM,IAAQ,CACnB,KAAMlqG,GAASpD,EAAQ,CACnB65G,EAAO7M,GACP,MAGA6M,EAAOrxG,EAAM6X,WAAWjd,GAKhC,GAFA/D,KAAKw6G,KAAOA,EACZx6G,KAAK+D,MAAQA,EACTA,GAASpD,EACT,OAAO,KAGX,GAAI+5G,GAAkBF,GAClB,OAAOx6G,KAAK26G,iBAChB,GAAI/K,GAAQ4K,GACR,OAAOx6G,KAAK46G,WAAW72G,GAC3B,IAAI4tF,EAAQ5tF,EACZ,OAAQy2G,GACJ,KAx9CE,GA09CE,OADAx6G,KAAKy6G,UACE7K,GAAQ5vG,KAAKw6G,MAAQx6G,KAAK46G,WAAWjpB,GACxC0oB,GAAkB1oB,EA39CxB,IA49CF,KAl+CE,GAm+CF,KAl+CE,GAm+CF,KAAK6d,GACL,KA/7CE,IAg8CF,KAj9CI,GAk9CJ,KAh9CI,GAi9CJ,KAp+CC,GAq+CD,KAj+CC,GAk+CD,KAAKhB,GACD,OAAOxuG,KAAK66G,cAAclpB,EAAO6oB,GACrC,KAAKpM,GACL,KAAKF,GACD,OAAOluG,KAAK86G,aAChB,KAp/CA,GAq/CA,KAAKzM,GACL,KAAKC,GACL,KAh/CA,GAi/CA,KAAKC,GACL,KAv/CG,GAw/CH,KA79CC,GA89CG,OAAOvuG,KAAK+6G,aAAappB,EAAOn/D,OAAO41D,aAAaoyB,IACxD,KA1+CI,GA2+CA,OAAOx6G,KAAKg7G,oBAAoBrpB,EAAO,IAl/CzC,GAk/CuD,KACzD,KA/+CF,GAg/CE,KAAK+c,GACD,OAAO1uG,KAAKg7G,oBAAoBrpB,EAAOn/D,OAAO41D,aAAaoyB,GAAO/L,GAAK,KAC3E,KAngDA,GAogDA,KAAKA,GACD,OAAOzuG,KAAKg7G,oBAAoBrpB,EAAOn/D,OAAO41D,aAAaoyB,GAAO/L,GAAK,IAAKA,GAAK,KACrF,KAjgDK,GAkgDD,OAAOzuG,KAAKg7G,oBAAoBrpB,EAAO,IAlgDtC,GAkgDuD,KAC5D,KA59CD,IA69CK,OAAO3xF,KAAKg7G,oBAAoBrpB,EAAO,IA79C5C,IA69CuD,KACtD,KAAK8d,GACD,KAAOC,GAAa1vG,KAAKw6G,OACrBx6G,KAAKy6G,UACT,OAAOz6G,KAAK84G,YAGpB,OADA94G,KAAKy6G,UACEz6G,KAAK+B,MAAM,yBAA2BywB,OAAO41D,aAAaoyB,GAAQ,IAAK,IAElF3B,EAAS34G,UAAU26G,cAAgB,SAAUlpB,EAAOge,GAEhD,OADA3vG,KAAKy6G,UACEJ,GAAkB1oB,EAAOge,IAEpCkJ,EAAS34G,UAAU66G,aAAe,SAAUppB,EAAO3J,GAE/C,OADAhoF,KAAKy6G,UACEH,GAAiB3oB,EAAO3J,IAYnC6wB,EAAS34G,UAAU86G,oBAAsB,SAAUrpB,EAAOspB,EAAKC,EAASC,EAAKC,EAAWC,GACpFr7G,KAAKy6G,UACL,IAAIzyB,EAAMizB,EASV,OARIj7G,KAAKw6G,MAAQU,IACbl7G,KAAKy6G,UACLzyB,GAAOmzB,GAEM,MAAbC,GAAqBp7G,KAAKw6G,MAAQY,IAClCp7G,KAAKy6G,UACLzyB,GAAOqzB,GAEJf,GAAiB3oB,EAAO3J,IAEnC6wB,EAAS34G,UAAUy6G,eAAiB,WAChC,IAAIhpB,EAAQ3xF,KAAK+D,MAEjB,IADA/D,KAAKy6G,UACEa,GAAiBt7G,KAAKw6G,OACzBx6G,KAAKy6G,UACT,IAAIzyB,EAAMhoF,KAAKmJ,MAAM4K,UAAU49E,EAAO3xF,KAAK+D,OAC3C,OAAO00G,GAAS7zG,QAAQojF,IAAQ,EArI7B,IAAI+wB,GAqI6CpnB,EArIhC6mB,GAAUmB,QAAS,EAqIoB3xB,GAxIxD,IAAI+wB,GAyIgBpnB,EAzIH6mB,GAAUiB,WAAY,EAyIZzxB,IAElC6wB,EAAS34G,UAAU06G,WAAa,SAAUjpB,GACtC,IAiGiBge,EAjGb4L,EAAUv7G,KAAK+D,QAAU4tF,EAE7B,IADA3xF,KAAKy6G,YACQ,CACT,GAAI7K,GAAQ5vG,KAAKw6G,YACZ,GAljDH,IAkjDOx6G,KAAKw6G,KACVe,GAAS,MAER,IAhiDR,MA0nDgB5L,EA1FY3vG,KAAKw6G,OA1iDjC,IAqoDgB7K,EAlFT,MALA,GAHA3vG,KAAKy6G,UACDe,GAAex7G,KAAKw6G,OACpBx6G,KAAKy6G,WACJ7K,GAAQ5vG,KAAKw6G,MACd,OAAOx6G,KAAK+B,MAAM,oBAAqB,GAC3Cw5G,GAAS,EAKbv7G,KAAKy6G,UAET,IAAIzyB,EAAMhoF,KAAKmJ,MAAM4K,UAAU49E,EAAO3xF,KAAK+D,OACvCjC,EAAQy5G,EAqGpB,SAA2B7mF,GACvB,IAAIzoB,EAASwvG,SAAS/mF,GACtB,GAAIjhB,MAAMxH,GACN,MAAM,IAAIpJ,MAAM,wCAA0C6xB,GAE9D,OAAOzoB,EA1GkByvG,CAAkB1zB,GAAO2zB,WAAW3zB,GACzD,OAtJG,IAAI+wB,GAsJepnB,EAtJF6mB,GAAUtrG,OAsJDpL,EAtJY,KAwJ7C+2G,EAAS34G,UAAU46G,WAAa,WAC5B,IAAInpB,EAAQ3xF,KAAK+D,MACbknF,EAAQjrF,KAAKw6G,KACjBx6G,KAAKy6G,UAIL,IAHA,IAAIltG,EAAS,GACT2jC,EAASlxC,KAAK+D,MACdoF,EAAQnJ,KAAKmJ,MACVnJ,KAAKw6G,MAAQvvB,GAChB,GA9jDK,IA8jDDjrF,KAAKw6G,KAAoB,CACzBjtG,GAAUpE,EAAM4K,UAAUm9B,EAAQlxC,KAAK+D,OACvC/D,KAAKy6G,UACL,IAAImB,OAAgB,EAGpB,GADA57G,KAAKw6G,KAAOx6G,KAAKw6G,KAzjDxB,KA0jDWx6G,KAAKw6G,KAAY,CAEjB,IAAIhmB,EAAMrrF,EAAM4K,UAAU/T,KAAK+D,MAAQ,EAAG/D,KAAK+D,MAAQ,GACvD,IAAI,eAAe+3F,KAAKtH,GAIpB,OAAOx0F,KAAK+B,MAAM,8BAAgCyyF,EAAM,IAAK,GAH7DonB,EAAgBH,SAASjnB,EAAK,IAKlC,IAAK,IAAIh0F,EAAI,EAAGA,EAAI,EAAGA,IACnBR,KAAKy6G,eAITmB,EAAgBC,GAAS77G,KAAKw6G,MAC9Bx6G,KAAKy6G,UAETltG,GAAUilB,OAAO41D,aAAawzB,GAC9B1qE,EAASlxC,KAAK+D,UAEb,IAAI/D,KAAKw6G,MAAQ7M,GAClB,OAAO3tG,KAAK+B,MAAM,qBAAsB,GAGxC/B,KAAKy6G,UAGb,IAAInmE,EAAOnrC,EAAM4K,UAAUm9B,EAAQlxC,KAAK+D,OAExC,OADA/D,KAAKy6G,UArMF,IAAI1B,GAsMepnB,EAtMF6mB,GAAUhmF,OAAQ,EAsMTjlB,EAAS+mC,IAE1CukE,EAAS34G,UAAU6B,MAAQ,SAAUe,EAASitG,GAC1C,IAAI+L,EAAW97G,KAAK+D,MAAQgsG,EAC5B,OArMR,SAAuBhsG,EAAOjB,GAC1B,OAAO,IAAIi2G,GAoMc+C,EApMDtD,GAAU31G,MAAO,EAAGC,GAoMjCi5G,CAAcD,EAAU,gBAAkBh5G,EAAU,cAAgBg5G,EAAW,mBAAqB97G,KAAKmJ,MAAQ,MAErH0vG,EAnMkB,GAqM7B,SAAS6B,GAAkB/K,GACvB,OAAQV,IAAMU,GAAQA,GAAQJ,IAAQV,IAAMc,GAAQA,GAAQZ,IACvDY,GAAQX,IAAQW,GAAQxB,GAgBjC,SAASmN,GAAiB3L,GACtB,OAAOE,GAAcF,IAASC,GAAQD,IAAUA,GAAQX,IACnDW,GAAQxB,GAKjB,SAASqN,GAAe7L,GACpB,OAAOA,GAAQrB,IAAUqB,GAAQtB,GAKrC,SAASwN,GAASlM,GACd,OAAQA,GACJ,KAAKR,GACD,OAAOtB,GACX,KAAKqB,GACD,OAAOnB,GACX,KAAKqB,GACD,OAAOpB,GACX,KAAKqB,GACD,OAAOzB,GACX,KAAK0B,GACD,OAAOxB,GACX,QACI,OAAO6B,GAkBnB,IAAIqM,GAAoC,WAMpC,OALA,SAA4B/U,EAAS9E,EAAa8Z,GAC9Cj8G,KAAKinG,QAAUA,EACfjnG,KAAKmiG,YAAcA,EACnBniG,KAAKi8G,QAAUA,GAJgB,GAQnCC,GAA4C,WAM5C,OALA,SAAoCC,EAAkBC,EAAUx5G,GAC5D5C,KAAKm8G,iBAAmBA,EACxBn8G,KAAKo8G,SAAWA,EAChBp8G,KAAK4C,OAASA,GAJyB,GAQ/C,SAASy5G,GAAyBC,GAC9B,IAAI9I,EAAU1rB,GAAaw0B,EAAO3qB,OAAS,eAAiB7J,GAAaw0B,EAAO9uF,KAChF,OAAO,IAAIukD,OAAOyhC,EAAS,KAE/B,IAAI+I,GAAwB,WACxB,SAASA,EAAOC,GACZx8G,KAAKw8G,OAASA,EACdx8G,KAAK4C,OAAS,GAiJlB,OA/IA25G,EAAOr8G,UAAUu8G,YAAc,SAAUtzG,EAAO8P,EAAUyjG,QAC1B,IAAxBA,IAAkCA,EAAsBzgB,IAC5Dj8F,KAAK28G,sBAAsBxzG,EAAO8P,EAAUyjG,GAC5C,IAAIE,EAAc58G,KAAK68G,eAAe1zG,GAClCsrB,EAASz0B,KAAKw8G,OAAO7D,SAAS34G,KAAK68G,eAAe1zG,IAClDk7E,EAAM,IAAIy4B,GAAU3zG,EAAO8P,EAAUwb,EAAQmoF,EAAYj8G,QAAQ,EAAMX,KAAK4C,OAAQuG,EAAMxI,OAASi8G,EAAYj8G,QAC9Go8G,aACL,OAAO,IAAIvU,GAAcnkB,EAAKl7E,EAAO8P,EAAUjZ,KAAK4C,SAExD25G,EAAOr8G,UAAU88G,aAAe,SAAU7zG,EAAO8P,EAAUyjG,QAC3B,IAAxBA,IAAkCA,EAAsBzgB,IAC5D,IAAI5X,EAAMrkF,KAAKi9G,iBAAiB9zG,EAAO8P,EAAUyjG,GACjD,OAAO,IAAIlU,GAAcnkB,EAAKl7E,EAAO8P,EAAUjZ,KAAK4C,SAExD25G,EAAOr8G,UAAUg9G,mBAAqB,SAAU/zG,EAAO8P,EAAUyjG,QACjC,IAAxBA,IAAkCA,EAAsBzgB,IAC5D,IAAI5X,EAAMrkF,KAAKi9G,iBAAiB9zG,EAAO8P,EAAUyjG,GAC7C95G,EAASu6G,GAAwBC,MAAM/4B,GAI3C,OAHIzhF,EAAOjC,OAAS,GAChBX,KAAKq9G,aAAa,0CAA4Cz6G,EAAOM,KAAK,KAAMiG,EAAO8P,GAEpF,IAAIuvF,GAAcnkB,EAAKl7E,EAAO8P,EAAUjZ,KAAK4C,SAExD25G,EAAOr8G,UAAUm9G,aAAe,SAAUv6G,EAASqG,EAAO26F,EAAaC,GACnE/jG,KAAK4C,OAAOf,KAAK,IAAIgiG,GAAY/gG,EAASqG,EAAO26F,EAAaC,KAElEwY,EAAOr8G,UAAU+8G,iBAAmB,SAAU9zG,EAAO8P,EAAUyjG,GAG3D,IAAIzxB,EAAQjrF,KAAKs9G,YAAYn0G,EAAO8P,GACpC,GAAa,MAATgyE,EACA,OAAOA,EAEXjrF,KAAK28G,sBAAsBxzG,EAAO8P,EAAUyjG,GAC5C,IAAIE,EAAc58G,KAAK68G,eAAe1zG,GAClCsrB,EAASz0B,KAAKw8G,OAAO7D,SAASiE,GAClC,OAAO,IAAIE,GAAU3zG,EAAO8P,EAAUwb,EAAQmoF,EAAYj8G,QAAQ,EAAOX,KAAK4C,OAAQuG,EAAMxI,OAASi8G,EAAYj8G,QAC5Go8G,cAETR,EAAOr8G,UAAUo9G,YAAc,SAAUn0G,EAAO8P,GAC5C,GAAa,MAAT9P,EACA,OAAO,KACX,IAAIo0G,EAAuBp0G,EAAMvE,QAAQ,KACzC,IAA6B,GAAzB24G,EACA,OAAO,KACX,IAAInqD,EAASjqD,EAAM4K,UAAU,EAAGwpG,GAAsB52B,OACtD,IAjIR,SAAsBx9E,GAClB,GAAoB,GAgIEiqD,EAhIZzyD,OACN,OAAO,EACX,IAAIi4G,EAAU,IAAIC,GA8HIzlD,GA7HtB,IAAKsnD,GAAkB9B,EAAQ4B,MAC3B,OAAO,EAEX,IADA5B,EAAQ6B,UACD7B,EAAQ4B,OAAS7M,IAAM,CAC1B,IAAK2N,GAAiB1C,EAAQ4B,MAC1B,OAAO,EACX5B,EAAQ6B,UAEZ,OAAO,EAqHEjB,GACD,OAAO,KACX,IAAIpV,EAA0Bj7F,EAAM4K,UAAUwpG,EAAuB,GACrE,OAAO,IAAIrZ,GAAM,IAAIF,GAAU,EAAG76F,EAAMxI,QAASyyD,EAAQgxC,EAAyBnrF,IAEtFsjG,EAAOr8G,UAAUs9G,sBAAwB,SAAUC,EAAQC,EAAUzkG,GACjE,IAAIwb,EAASz0B,KAAKw8G,OAAO7D,SAAS+E,GAClC,OAAO,IAAIZ,GAAUY,EAAUzkG,EAAUwb,EAAQipF,EAAS/8G,QAAQ,EAAOX,KAAK4C,OAAQ,GACjF46G,sBAAsBC,IAE/BlB,EAAOr8G,UAAUy9G,mBAAqB,SAAUx0G,EAAO8P,EAAUyjG,QACjC,IAAxBA,IAAkCA,EAAsBzgB,IAC5D,IAAI1/D,EAAQv8B,KAAK49G,mBAAmBz0G,EAAO8P,EAAUyjG,GACrD,GAAa,MAATngF,EACA,OAAO,KAEX,IADA,IAAI4lE,EAAc,GACT3hG,EAAI,EAAGA,EAAI+7B,EAAM4lE,YAAYxhG,SAAUH,EAAG,CAC/C,IAAIq9G,EAAiBthF,EAAM4lE,YAAY3hG,GACnCo8G,EAAc58G,KAAK68G,eAAegB,GAClCppF,EAASz0B,KAAKw8G,OAAO7D,SAASiE,GAC9Bv4B,EAAM,IAAIy4B,GAAU3zG,EAAO8P,EAAUwb,EAAQmoF,EAAYj8G,QAAQ,EAAOX,KAAK4C,OAAQ25B,EAAM0/E,QAAQz7G,IAAMq9G,EAAel9G,OAASi8G,EAAYj8G,SAC5Io8G,aACL5a,EAAYtgG,KAAKwiF,GAErB,OAAO,IAAImkB,GAAc,IAAIzB,GAAc,IAAI/C,GAAU,EAAY,MAAT76F,EAAgB,EAAIA,EAAMxI,QAAS47B,EAAM0qE,QAAS9E,GAAch5F,EAAO8P,EAAUjZ,KAAK4C,SAEtJ25G,EAAOr8G,UAAU09G,mBAAqB,SAAUz0G,EAAO8P,EAAUyjG,QACjC,IAAxBA,IAAkCA,EAAsBzgB,IAC5D,IAAIJ,EAASwgB,GAAyBK,GAClC7nF,EAAQ1rB,EAAMozB,MAAMs/D,GACxB,GAAIhnE,EAAMl0B,QAAU,EAChB,OAAO,KAMX,IAJA,IAAIsmG,EAAU,GACV9E,EAAc,GACd8Z,EAAU,GACVlM,EAAS,EACJvvG,EAAI,EAAGA,EAAIq0B,EAAMl0B,OAAQH,IAAK,CACnC,IAAIi/F,EAAO5qE,EAAMr0B,GACbA,EAAI,GAAM,GAEVymG,EAAQplG,KAAK49F,GACbsQ,GAAUtQ,EAAK9+F,QAEV8+F,EAAK9Y,OAAOhmF,OAAS,GAC1BovG,GAAU2M,EAAoB/qB,MAAMhxF,OACpCwhG,EAAYtgG,KAAK49F,GACjBwc,EAAQp6G,KAAKkuG,GACbA,GAAUtQ,EAAK9+F,OAAS+7G,EAAoBlvF,IAAI7sB,SAGhDX,KAAKq9G,aAAa,4DAA6Dl0G,EAAO,aAAenJ,KAAK89G,8BAA8BjpF,EAAOr0B,EAAGk8G,GAAuB,MAAOzjG,GAChLkpF,EAAYtgG,KAAK,YACjBo6G,EAAQp6G,KAAKkuG,IAGrB,OAAO,IAAIiM,GAAmB/U,EAAS9E,EAAa8Z,IAExDM,EAAOr8G,UAAU69G,qBAAuB,SAAU50G,EAAO8P,GACrD,OAAO,IAAIuvF,GAAc,IAAIlC,GAAiB,IAAItC,GAAU,EAAY,MAAT76F,EAAgB,EAAIA,EAAMxI,QAASwI,GAAQA,EAAO8P,EAAUjZ,KAAK4C,SAEpI25G,EAAOr8G,UAAU28G,eAAiB,SAAU1zG,GACxC,IAAI3I,EAAIR,KAAKg+G,cAAc70G,GAC3B,OAAY,MAAL3I,EAAY2I,EAAM4K,UAAU,EAAGvT,GAAGmmF,OAASx9E,GAEtDozG,EAAOr8G,UAAU89G,cAAgB,SAAU70G,GAEvC,IADA,IA3KSwmG,EA2KLsO,EAAa,KACRz9G,EAAI,EAAGA,EAAI2I,EAAMxI,OAAS,EAAGH,IAAK,CACvC,IAAI09G,EAAO/0G,EAAM6X,WAAWxgB,GACxB29G,EAAWh1G,EAAM6X,WAAWxgB,EAAI,GACpC,GAAI09G,IAAS3P,IAAU4P,GAAY5P,IAAwB,MAAd0P,EACzC,OAAOz9G,EACPy9G,IAAeC,EACfD,EAAa,KAEM,MAAdA,KApLJtO,EAoLkCuO,KAnL/B9P,IAAOuB,IAASzB,IApnD1B,KAonDiCyB,KAoL3BsO,EAAaC,GAGrB,OAAO,MAEX3B,EAAOr8G,UAAUy8G,sBAAwB,SAAUxzG,EAAO8P,EAAUyjG,GAChE,IAAI7gB,EAASwgB,GAAyBK,GAClC7nF,EAAQ1rB,EAAMozB,MAAMs/D,GACpBhnE,EAAMl0B,OAAS,GACfX,KAAKq9G,aAAa,sBAAwBX,EAAoB/qB,MAAQ+qB,EAAoBlvF,IAAM,kCAAmCrkB,EAAO,aAAenJ,KAAK89G,8BAA8BjpF,EAAO,EAAG6nF,GAAuB,MAAOzjG,IAG5OsjG,EAAOr8G,UAAU49G,8BAAgC,SAAUjpF,EAAOupF,EAAc1B,GAE5E,IADA,IAAI5Y,EAAc,GACT5oF,EAAI,EAAGA,EAAIkjG,EAAcljG,IAC9B4oF,GAAe5oF,EAAI,GAAM,EACrB2Z,EAAM3Z,GACN,GAAKwhG,EAAoB/qB,MAAQ98D,EAAM3Z,GAAKwhG,EAAoBlvF,IAExE,OAAOs2E,EAAYnjG,QAEhB47G,EApJgB,GAsJvBO,GAA2B,WAC3B,SAASA,EAAU3zG,EAAO8P,EAAUwb,EAAQ4pF,EAAa5B,EAAa75G,EAAQmtG,GAC1E/vG,KAAKmJ,MAAQA,EACbnJ,KAAKiZ,SAAWA,EAChBjZ,KAAKy0B,OAASA,EACdz0B,KAAKq+G,YAAcA,EACnBr+G,KAAKy8G,YAAcA,EACnBz8G,KAAK4C,OAASA,EACd5C,KAAK+vG,OAASA,EACd/vG,KAAKs+G,gBAAkB,EACvBt+G,KAAKu+G,kBAAoB,EACzBv+G,KAAKw+G,gBAAkB,EACvBx+G,KAAK+D,MAAQ,EA8gBjB,OA5gBA+4G,EAAU58G,UAAUs6G,KAAO,SAAUzK,GACjC,IAAIvvG,EAAIR,KAAK+D,MAAQgsG,EACrB,OAAOvvG,EAAIR,KAAKy0B,OAAO9zB,OAASX,KAAKy0B,OAAOj0B,GAAK+5G,IAErD/6G,OAAO0S,eAAe4qG,EAAU58G,UAAW,OAAQ,CAC/C0a,IAAK,WAAc,OAAO5a,KAAKw6G,KAAK,IACpC1gF,YAAY,EACZC,cAAc,IAElBv6B,OAAO0S,eAAe4qG,EAAU58G,UAAW,aAAc,CACrD0a,IAAK,WACD,OAAQ5a,KAAK+D,MAAQ/D,KAAKy0B,OAAO9zB,OAAUX,KAAK2B,KAAKoC,MAAQ/D,KAAK+vG,OAC9D/vG,KAAKq+G,YAAcr+G,KAAK+vG,QAEhCj2E,YAAY,EACZC,cAAc,IAElB+iF,EAAU58G,UAAU0gG,KAAO,SAAUjP,GAAS,OAAO,IAAIqS,GAAUrS,EAAO3xF,KAAKy+G,aAC/E3B,EAAU58G,UAAUu6G,QAAU,WAAcz6G,KAAK+D,SACjD+4G,EAAU58G,UAAUw+G,kBAAoB,SAAU/O,GAC9C,QAAI3vG,KAAK2B,KAAKu3G,YAAYvJ,KACtB3vG,KAAKy6G,WACE,IAMfqC,EAAU58G,UAAUy+G,eAAiB,WAAc,OAAO3+G,KAAK2B,KAAKi4G,gBACpEkD,EAAU58G,UAAU0+G,cAAgB,WAAc,OAAO5+G,KAAK2B,KAAKk4G,eACnEiD,EAAU58G,UAAU2+G,gBAAkB,SAAUlP,GACxC3vG,KAAK0+G,kBAAkB/O,IAE3B3vG,KAAK+B,MAAM,oBAAsBywB,OAAO41D,aAAaunB,KAEzDmN,EAAU58G,UAAU4+G,iBAAmB,SAAUnT,GAC7C,QAAI3rG,KAAK2B,KAAK23G,WAAW3N,KACrB3rG,KAAKy6G,WACE,IAMfqC,EAAU58G,UAAU6+G,eAAiB,SAAU/2G,GACvChI,KAAK8+G,iBAAiB92G,IAE1BhI,KAAK+B,MAAM,6BAA+BiG,IAE9C80G,EAAU58G,UAAU8+G,0BAA4B,WAC5C,IAAIv+G,EAAIT,KAAK2B,KACb,OAAKlB,EAAE+4G,gBAAmB/4G,EAAEi5G,aAI5B15G,KAAKy6G,UACEh6G,EAAEwC,aAJLjD,KAAK+B,MAAM,oBAAsBtB,EAAI,oCAC9B,KAKfq8G,EAAU58G,UAAU++G,kCAAoC,WACpD,IAAIx+G,EAAIT,KAAK2B,KACb,OAAKlB,EAAE+4G,gBAAmB/4G,EAAEi5G,aAAgBj5G,EAAE44G,YAI9Cr5G,KAAKy6G,UACEh6G,EAAEwC,aAJLjD,KAAK+B,MAAM,oBAAsBtB,EAAI,6CAC9B,KAKfq8G,EAAU58G,UAAU68G,WAAa,WAG7B,IAFA,IAAIp4B,EAAQ,GACRgN,EAAQ3xF,KAAKy+G,WACVz+G,KAAK+D,MAAQ/D,KAAKy0B,OAAO9zB,QAAQ,CACpC,IAAI88E,EAAOz9E,KAAKk/G,YAEhB,GADAv6B,EAAM9iF,KAAK47E,GACPz9E,KAAK0+G,kBAAkBlQ,IAIvB,IAHKxuG,KAAKy8G,aACNz8G,KAAK+B,MAAM,wDAER/B,KAAK0+G,kBAAkBlQ,WAGzBxuG,KAAK+D,MAAQ/D,KAAKy0B,OAAO9zB,QAC9BX,KAAK+B,MAAM,qBAAuB/B,KAAK2B,KAAO,KAGtD,OAAoB,GAAhBgjF,EAAMhkF,OACC,IAAI2jG,GAAUtkG,KAAK4gG,KAAKjP,IACf,GAAhBhN,EAAMhkF,OACCgkF,EAAM,GACV,IAAIggB,GAAM3kG,KAAK4gG,KAAKjP,GAAQhN,IAEvCm4B,EAAU58G,UAAUg/G,UAAY,WAC5B,IAAIjzG,EAASjM,KAAKm/G,kBAClB,GAAIn/G,KAAK8+G,iBAAiB,KAAM,CACxB9+G,KAAKy8G,aACLz8G,KAAK+B,MAAM,8CAEf,EAAG,CAGC,IAFA,IAAI04C,EAASz6C,KAAKg/G,4BACd1tG,EAAO,GACJtR,KAAK0+G,kBAh9Df,KAi9DOptG,EAAKzP,KAAK7B,KAAKm/G,mBAEnBlzG,EAAS,IAAIi6F,GAAYlmG,KAAK4gG,KAAK30F,EAAO20F,KAAKjP,OAAQ1lF,EAAQwuC,EAAQnpC,SAClEtR,KAAK8+G,iBAAiB,MAEnC,OAAO7yG,GAEX6wG,EAAU58G,UAAUi/G,gBAAkB,WAAc,OAAOn/G,KAAKo/G,oBAChEtC,EAAU58G,UAAUk/G,iBAAmB,WACnC,IAAIztB,EAAQ3xF,KAAKy+G,WACbxyG,EAASjM,KAAKq/G,iBAClB,GAAIr/G,KAAK8+G,iBAAiB,KAAM,CAC5B,IAAIQ,EAAMt/G,KAAKk/G,YACXK,OAAK,EACT,GAAKv/G,KAAK0+G,kBA/9DT,IAs+DGa,EAAKv/G,KAAKk/G,gBAPuB,CACjC,IACIr2B,EAAa7oF,KAAKmJ,MAAM4K,UAAU49E,EAD5B3xF,KAAKy+G,YAEfz+G,KAAK+B,MAAM,0BAA4B8mF,EAAa,+BACpD02B,EAAK,IAAIjb,GAAUtkG,KAAK4gG,KAAKjP,IAKjC,OAAO,IAAImT,GAAY9kG,KAAK4gG,KAAKjP,GAAQ1lF,EAAQqzG,EAAKC,GAGtD,OAAOtzG,GAGf6wG,EAAU58G,UAAUm/G,eAAiB,WAGjC,IADA,IAAIpzG,EAASjM,KAAKw/G,kBACXx/G,KAAK8+G,iBAAiB,OAAO,CAChC,IAAIvX,EAAQvnG,KAAKw/G,kBACjBvzG,EAAS,IAAIk7F,GAAOnnG,KAAK4gG,KAAK30F,EAAO20F,KAAKjP,OAAQ,KAAM1lF,EAAQs7F,GAEpE,OAAOt7F,GAEX6wG,EAAU58G,UAAUs/G,gBAAkB,WAGlC,IADA,IAAIvzG,EAASjM,KAAKy/G,gBACXz/G,KAAK8+G,iBAAiB,OAAO,CAChC,IAAIvX,EAAQvnG,KAAKy/G,gBACjBxzG,EAAS,IAAIk7F,GAAOnnG,KAAK4gG,KAAK30F,EAAO20F,KAAKjP,OAAQ,KAAM1lF,EAAQs7F,GAEpE,OAAOt7F,GAEX6wG,EAAU58G,UAAUu/G,cAAgB,WAGhC,IADA,IAAIxzG,EAASjM,KAAK0/G,kBACX1/G,KAAK2B,KAAKgP,MAAQ6nG,GAAUe,UAAU,CACzC,IAAIvxG,EAAWhI,KAAK2B,KAAKs3G,SACzB,OAAQjxG,GACJ,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,MACDhI,KAAKy6G,UACL,IAAIlT,EAAQvnG,KAAK0/G,kBACjBzzG,EAAS,IAAIk7F,GAAOnnG,KAAK4gG,KAAK30F,EAAO20F,KAAKjP,OAAQ3pF,EAAUiE,EAAQs7F,GACpE,SAER,MAEJ,OAAOt7F,GAEX6wG,EAAU58G,UAAUw/G,gBAAkB,WAGlC,IADA,IAAIzzG,EAASjM,KAAK2/G,gBACX3/G,KAAK2B,KAAKgP,MAAQ6nG,GAAUe,UAAU,CACzC,IAAIvxG,EAAWhI,KAAK2B,KAAKs3G,SACzB,OAAQjxG,GACJ,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACDhI,KAAKy6G,UACL,IAAIlT,EAAQvnG,KAAK2/G,gBACjB1zG,EAAS,IAAIk7F,GAAOnnG,KAAK4gG,KAAK30F,EAAO20F,KAAKjP,OAAQ3pF,EAAUiE,EAAQs7F,GACpE,SAER,MAEJ,OAAOt7F,GAEX6wG,EAAU58G,UAAUy/G,cAAgB,WAGhC,IADA,IAAI1zG,EAASjM,KAAK4/G,sBACX5/G,KAAK2B,KAAKgP,MAAQ6nG,GAAUe,UAAU,CACzC,IAAIvxG,EAAWhI,KAAK2B,KAAKs3G,SACzB,OAAQjxG,GACJ,IAAK,IACL,IAAK,IACDhI,KAAKy6G,UACL,IAAIlT,EAAQvnG,KAAK4/G,sBACjB3zG,EAAS,IAAIk7F,GAAOnnG,KAAK4gG,KAAK30F,EAAO20F,KAAKjP,OAAQ3pF,EAAUiE,EAAQs7F,GACpE,SAER,MAEJ,OAAOt7F,GAEX6wG,EAAU58G,UAAU0/G,oBAAsB,WAGtC,IADA,IAAI3zG,EAASjM,KAAK6/G,cACX7/G,KAAK2B,KAAKgP,MAAQ6nG,GAAUe,UAAU,CACzC,IAAIvxG,EAAWhI,KAAK2B,KAAKs3G,SACzB,OAAQjxG,GACJ,IAAK,IACL,IAAK,IACL,IAAK,IACDhI,KAAKy6G,UACL,IAAIlT,EAAQvnG,KAAK6/G,cACjB5zG,EAAS,IAAIk7F,GAAOnnG,KAAK4gG,KAAK30F,EAAO20F,KAAKjP,OAAQ3pF,EAAUiE,EAAQs7F,GACpE,SAER,MAEJ,OAAOt7F,GAEX6wG,EAAU58G,UAAU2/G,YAAc,WAC9B,GAAI7/G,KAAK2B,KAAKgP,MAAQ6nG,GAAUe,SAAU,CACtC,IAAI5nB,EAAQ3xF,KAAKy+G,WACbz2G,EAAWhI,KAAK2B,KAAKs3G,SACrBhtG,OAAS,EACb,OAAQjE,GACJ,IAAK,IAGD,OAFAhI,KAAKy6G,UACLxuG,EAASjM,KAAK6/G,cACP,IAAI1Y,GAAOnnG,KAAK4gG,KAAKjP,GAAQ,IAAK1lF,EAAQ,IAAIq6F,GAAiB,IAAItC,GAAUrS,EAAOA,GAAQ,IACvG,IAAK,IAGD,OAFA3xF,KAAKy6G,UACLxuG,EAASjM,KAAK6/G,cACP,IAAI1Y,GAAOnnG,KAAK4gG,KAAKjP,GAAQ3pF,EAAU,IAAIs+F,GAAiB,IAAItC,GAAUrS,EAAOA,GAAQ,GAAI1lF,GACxG,IAAK,IAGD,OAFAjM,KAAKy6G,UACLxuG,EAASjM,KAAK6/G,cACP,IAAIpY,GAAUznG,KAAK4gG,KAAKjP,GAAQ1lF,IAGnD,OAAOjM,KAAK8/G,kBAEhBhD,EAAU58G,UAAU4/G,eAAiB,WAEjC,IADA,IAAI7zG,EAASjM,KAAK+/G,iBAEd,GAAI//G,KAAK0+G,kBApmEP,IAqmEEzyG,EAASjM,KAAKggH,8BAA8B/zG,GAAQ,QAEnD,GAAIjM,KAAK8+G,iBAAiB,MAC3B7yG,EAASjM,KAAKggH,8BAA8B/zG,GAAQ,QAEnD,GAAIjM,KAAK0+G,kBA3lEV,IA2lEwC,CACxC1+G,KAAKu+G,oBACL,IAAIhvG,EAAMvP,KAAKk/G,YAGf,GAFAl/G,KAAKu+G,oBACLv+G,KAAK6+G,gBA7lEL,IA8lEI7+G,KAAK8+G,iBAAiB,KAAM,CAC5B,IAAIh9G,EAAQ9B,KAAKo/G,mBACjBnzG,EAAS,IAAI85F,GAAW/lG,KAAK4gG,KAAK30F,EAAO20F,KAAKjP,OAAQ1lF,EAAQsD,EAAKzN,QAGnEmK,EAAS,IAAI25F,GAAU5lG,KAAK4gG,KAAK30F,EAAO20F,KAAKjP,OAAQ1lF,EAAQsD,QAGhE,GAAIvP,KAAK0+G,kBA7nEZ,IA6nEwC,CACtC1+G,KAAKs+G,kBACL,IAAIhtG,EAAOtR,KAAKigH,qBAChBjgH,KAAKs+G,kBACLt+G,KAAK6+G,gBAhoEP,IAioEE5yG,EAAS,IAAIo8F,GAAaroG,KAAK4gG,KAAK30F,EAAO20F,KAAKjP,OAAQ1lF,EAAQqF,OAE/D,KAAItR,KAAK8+G,iBAAiB,KAI3B,OAAO7yG,EAHPA,EAAS,IAAI27F,GAAc5nG,KAAK4gG,KAAK30F,EAAO20F,KAAKjP,OAAQ1lF,KAOrE6wG,EAAU58G,UAAU6/G,aAAe,WAC/B,IAAIpuB,EAAQ3xF,KAAKy+G,WACjB,GAAIz+G,KAAK0+G,kBA9oEH,IA8oE+B,CACjC1+G,KAAKs+G,kBACL,IAAIryG,EAASjM,KAAKk/G,YAGlB,OAFAl/G,KAAKs+G,kBACLt+G,KAAK6+G,gBAjpEH,IAkpEK5yG,EAEN,GAAIjM,KAAK2B,KAAKm4G,gBAEf,OADA95G,KAAKy6G,UACE,IAAInU,GAAiBtmG,KAAK4gG,KAAKjP,GAAQ,MAE7C,GAAI3xF,KAAK2B,KAAKo4G,qBAEf,OADA/5G,KAAKy6G,UACE,IAAInU,GAAiBtmG,KAAK4gG,KAAKjP,QAAQ,GAE7C,GAAI3xF,KAAK2B,KAAKq4G,gBAEf,OADAh6G,KAAKy6G,UACE,IAAInU,GAAiBtmG,KAAK4gG,KAAKjP,IAAQ,GAE7C,GAAI3xF,KAAK2B,KAAKs4G,iBAEf,OADAj6G,KAAKy6G,UACE,IAAInU,GAAiBtmG,KAAK4gG,KAAKjP,IAAQ,GAE7C,GAAI3xF,KAAK2B,KAAKu4G,gBAEf,OADAl6G,KAAKy6G,UACE,IAAIjW,GAAiBxkG,KAAK4gG,KAAKjP,IAErC,GAAI3xF,KAAK0+G,kBAppEN,IAopEoC,CACxC1+G,KAAKu+G,oBACL,IAAI2B,EAAWlgH,KAAKmgH,oBAppEhB,IAupEJ,OAFAngH,KAAKu+G,oBACLv+G,KAAK6+G,gBAtpED,IAupEG,IAAIpY,GAAazmG,KAAK4gG,KAAKjP,GAAQuuB,GAEzC,GAAIlgH,KAAK2B,KAAKu3G,YAAY1J,IAC3B,OAAOxvG,KAAKogH,kBAEX,GAAIpgH,KAAK2B,KAAK63G,eACf,OAAOx5G,KAAKggH,8BAA8B,IAAIxb,GAAiBxkG,KAAK4gG,KAAKjP,KAAS,GAEjF,GAAI3xF,KAAK2B,KAAKy3G,WAAY,CAC3B,IAAIt3G,EAAQ9B,KAAK2B,KAAKy4G,WAEtB,OADAp6G,KAAKy6G,UACE,IAAInU,GAAiBtmG,KAAK4gG,KAAKjP,GAAQ7vF,GAE7C,GAAI9B,KAAK2B,KAAK03G,WAAY,CAC3B,IAAIgH,EAAergH,KAAK2B,KAAKsB,WAE7B,OADAjD,KAAKy6G,UACE,IAAInU,GAAiBtmG,KAAK4gG,KAAKjP,GAAQ0uB,GAE7C,OAAIrgH,KAAK+D,OAAS/D,KAAKy0B,OAAO9zB,QAC/BX,KAAK+B,MAAM,iCAAmC/B,KAAKmJ,OAC5C,IAAIm7F,GAAUtkG,KAAK4gG,KAAKjP,MAG/B3xF,KAAK+B,MAAM,oBAAsB/B,KAAK2B,MAC/B,IAAI2iG,GAAUtkG,KAAK4gG,KAAKjP,MAGvCmrB,EAAU58G,UAAUigH,oBAAsB,SAAUG,GAChD,IAAIr0G,EAAS,GACb,IAAKjM,KAAK2B,KAAKu3G,YAAYoH,GACvB,GACIr0G,EAAOpK,KAAK7B,KAAKk/G,mBACZl/G,KAAK0+G,kBA1sEb,KA4sEL,OAAOzyG,GAEX6wG,EAAU58G,UAAUkgH,gBAAkB,WAClC,IAAIntG,EAAO,GACP1B,EAAS,GACTogF,EAAQ3xF,KAAKy+G,WAEjB,GADAz+G,KAAK6+G,gBAAgBrP,KAChBxvG,KAAK0+G,kBAjrEJ,KAirEgC,CAClC1+G,KAAKw+G,kBACL,EAAG,CACC,IAAIl9B,EAASthF,KAAK2B,KAAK03G,WACnB9pG,EAAMvP,KAAKi/G,oCACfhsG,EAAKpR,KAAK,CAAE0N,IAAKA,EAAK+xE,OAAQA,IAC9BthF,KAAK6+G,gBArtER,IAstEGttG,EAAO1P,KAAK7B,KAAKk/G,mBACZl/G,KAAK0+G,kBA3tEb,KA4tED1+G,KAAKw+G,kBACLx+G,KAAK6+G,gBA3rEH,KA6rEN,OAAO,IAAIjY,GAAW5mG,KAAK4gG,KAAKjP,GAAQ1+E,EAAM1B,IAElDurG,EAAU58G,UAAU8/G,8BAAgC,SAAU5hC,EAAUmiC,QACrD,IAAXA,IAAqBA,GAAS,GAClC,IAAI5uB,EAAQvT,EAASwiB,KAAKjP,MACtBxjE,EAAKnuB,KAAKg/G,4BACd,GAAIh/G,KAAK0+G,kBAzuEH,IAyuE+B,CACjC1+G,KAAKs+G,kBACL,IAAIhtG,EAAOtR,KAAKigH,qBAChBjgH,KAAK6+G,gBA3uEH,IA4uEF7+G,KAAKs+G,kBACL,IAAI1d,EAAO5gG,KAAK4gG,KAAKjP,GACrB,OAAO4uB,EAAS,IAAIrY,GAAetH,EAAMxiB,EAAUjwD,EAAI7c,GACnD,IAAIy2F,GAAWnH,EAAMxiB,EAAUjwD,EAAI7c,GAGvC,GAAIivG,EACA,OAAIvgH,KAAK8+G,iBAAiB,MACtB9+G,KAAK+B,MAAM,sDACJ,IAAIuiG,GAAUtkG,KAAK4gG,KAAKjP,KAGxB,IAAI8T,GAAiBzlG,KAAK4gG,KAAKjP,GAAQvT,EAAUjwD,GAI5D,GAAInuB,KAAK8+G,iBAAiB,KAAM,CAC5B,IAAK9+G,KAAKy8G,YAEN,OADAz8G,KAAK+B,MAAM,uCACJ,IAAIuiG,GAAUtkG,KAAK4gG,KAAKjP,IAEnC,IAAI7vF,EAAQ9B,KAAKo/G,mBACjB,OAAO,IAAI9Z,GAActlG,KAAK4gG,KAAKjP,GAAQvT,EAAUjwD,EAAIrsB,GAGzD,OAAO,IAAIqjG,GAAanlG,KAAK4gG,KAAKjP,GAAQvT,EAAUjwD,IAKpE2uF,EAAU58G,UAAU+/G,mBAAqB,WACrC,GAAIjgH,KAAK2B,KAAKu3G,YA3wER,IA4wEF,MAAO,GACX,IAAIsH,EAAc,GAClB,GACIA,EAAY3+G,KAAK7B,KAAKk/G,mBACjBl/G,KAAK0+G,kBA7wET,KA8wEL,OAAO8B,GAKX1D,EAAU58G,UAAUugH,yBAA2B,WAC3C,IAAIx0G,EAAS,GACTy0G,GAAgB,EACpB,GACIz0G,GAAUjM,KAAKi/G,qCACfyB,EAAgB1gH,KAAK8+G,iBAAiB,QAElC7yG,GAAU,WAETy0G,GACT,OAAOz0G,EAAOhJ,YAGlB65G,EAAU58G,UAAUs9G,sBAAwB,SAAUC,GAClD,IAAIkD,GAAe,EACftgE,EAAW,GAEf,EAAG,CACC,IAAIsxC,EAAQ3xF,KAAKy+G,WACbmC,OAAS,EACTrxG,OAAM,EACNsxG,GAAQ,EACRF,GACAC,EAASrxG,EAAMkuG,EACfkD,GAAe,KAGfE,EAAQ7gH,KAAK2+G,mBAET3+G,KAAKy6G,UACTmG,EAAS5gH,KAAKygH,2BACdlxG,EAAMsxG,EAAQD,EAASnD,EAASmD,EAAO,GAAGrlB,cAAgBqlB,EAAO7sG,UAAU,GAC3E/T,KAAK0+G,kBA/yER,KAizED,IAAIjqC,EAAS,KACToU,EAAa,KACjB,GAAIg4B,EAEIpsC,EADAz0E,KAAK8+G,iBAAiB,KACb9+G,KAAKygH,2BAGL,iBAGZ,GAAIzgH,KAAK4+G,gBACV5+G,KAAKy6G,UACLhmC,EAASmsC,EACTrxG,EAAMvP,KAAKygH,2BACXI,GAAQ,OAEP,GAAI7gH,KAAK2B,OAAS44G,KAAQv6G,KAAK2+G,iBAAkB,CAClD,IAAIhjB,EAAU37F,KAAKy+G,WACfp6B,EAAMrkF,KAAKk/G,YACXj3G,EAASjI,KAAKmJ,MAAM4K,UAAU4nF,EAAU37F,KAAK+vG,OAAQ/vG,KAAKy+G,WAAaz+G,KAAK+vG,QAChFlnB,EAAa,IAAI2f,GAAcnkB,EAAKp8E,EAAQjI,KAAKiZ,SAAUjZ,KAAK4C,QAGpE,GADAy9C,EAASx+C,KAAK,IAAI6mG,GAAgB1oG,KAAK4gG,KAAKjP,GAAQpiF,EAAKsxG,EAAOpsC,EAAQoU,IACpE7oF,KAAK4+G,kBAAoBiC,EAAO,CAChC,IAAIC,EAAW9gH,KAAKy+G,WACpBz+G,KAAKy6G,UACL,IAAIsG,EAAU/gH,KAAKygH,2BACnBpgE,EAASx+C,KAAK,IAAI6mG,GAAgB1oG,KAAK4gG,KAAKkgB,GAAWC,GAAS,EAAMxxG,EAAK,OAE1EvP,KAAK0+G,kBAAkBlQ,KACxBxuG,KAAK0+G,kBAn1ER,UAq1EI1+G,KAAK+D,MAAQ/D,KAAKy0B,OAAO9zB,QAClC,OAAO,IAAIu7G,GAA2B77D,EAnDvB,GAmD2CrgD,KAAK4C,SAEnEk6G,EAAU58G,UAAU6B,MAAQ,SAAUe,EAASiB,QAC7B,IAAVA,IAAoBA,EAAQ,MAChC/D,KAAK4C,OAAOf,KAAK,IAAIgiG,GAAY/gG,EAAS9C,KAAKmJ,MAAOnJ,KAAKghH,aAAaj9G,GAAQ/D,KAAKiZ,WACrFjZ,KAAKihH,QAETnE,EAAU58G,UAAU8gH,aAAe,SAAUj9G,GAIzC,YAHc,IAAVA,IAAoBA,EAAQ,MACnB,MAATA,IACAA,EAAQ/D,KAAK+D,OACTA,EAAQ/D,KAAKy0B,OAAO9zB,OAAU,cAAgBX,KAAKy0B,OAAO1wB,GAAOA,MAAQ,GAAK,MAClF,gCAcR+4G,EAAU58G,UAAU+gH,KAAO,WAEvB,IADA,IAAIxgH,EAAIT,KAAK2B,KACN3B,KAAK+D,MAAQ/D,KAAKy0B,OAAO9zB,SAAWF,EAAEy4G,YAAY1K,MACpDxuG,KAAKs+G,iBAAmB,IAAM79G,EAAEy4G,YAt3E/B,OAu3EDl5G,KAAKw+G,iBAAmB,IAAM/9G,EAAEy4G,YAl1E/B,QAm1EDl5G,KAAKu+G,mBAAqB,IAAM99G,EAAEy4G,YAl2E/B,MAm2EAl5G,KAAK2B,KAAKw4G,WACVn6G,KAAK4C,OAAOf,KAAK,IAAIgiG,GAAY7jG,KAAK2B,KAAKsB,WAAYjD,KAAKmJ,MAAOnJ,KAAKghH,eAAgBhhH,KAAKiZ,WAEjGjZ,KAAKy6G,UACLh6G,EAAIT,KAAK2B,MAGVm7G,EA1hBmB,GA4hB1BK,GAAyC,WACzC,SAASA,IACLn9G,KAAK4C,OAAS,GA+BlB,OA7BAu6G,EAAwBC,MAAQ,SAAU/4B,GACtC,IAAI9jF,EAAI,IAAI48G,EAEZ,OADA94B,EAAI8N,MAAM5xF,GACHA,EAAEqC,QAEbu6G,EAAwBj9G,UAAUwkG,sBAAwB,SAAUrgB,EAAKn9E,KACzEi2G,EAAwBj9G,UAAUgnG,mBAAqB,SAAU7iB,EAAKn9E,KACtEi2G,EAAwBj9G,UAAUsmG,sBAAwB,SAAUniB,EAAKn9E,KACzEi2G,EAAwBj9G,UAAUmlG,kBAAoB,SAAUhhB,EAAKn9E,KACrEi2G,EAAwBj9G,UAAUslG,mBAAqB,SAAUnhB,EAAKn9E,KACtEi2G,EAAwBj9G,UAAUylG,sBAAwB,SAAUthB,EAAKn9E,KACzEi2G,EAAwBj9G,UAAU+nG,gBAAkB,SAAU5jB,EAAKn9E,KACnEi2G,EAAwBj9G,UAAUkoG,oBAAsB,SAAU/jB,EAAKn9E,KACvEi2G,EAAwBj9G,UAAUqoG,kBAAoB,SAAUlkB,EAAKn9E,KACrEi2G,EAAwBj9G,UAAUymG,kBAAoB,SAAUtiB,EAAKn9E,GAAWlH,KAAK6oG,SAASxkB,EAAI8d,cAClGgb,EAAwBj9G,UAAU4mG,gBAAkB,SAAUziB,EAAKn9E,GAAWlH,KAAK6oG,SAASxkB,EAAI9yE,SAChG4rG,EAAwBj9G,UAAUsnG,YAAc,SAAUnjB,EAAKn9E,KAC/Di2G,EAAwBj9G,UAAUynG,eAAiB,SAAUtjB,EAAKn9E,KAClEi2G,EAAwBj9G,UAAU4nG,mBAAqB,SAAUzjB,EAAKn9E,KACtEi2G,EAAwBj9G,UAAUglG,iBAAmB,SAAU7gB,EAAKn9E,KACpEi2G,EAAwBj9G,UAAUmmG,UAAY,SAAUhiB,EAAKn9E,GAAWlH,KAAK4C,OAAOf,KAAK,UACzFs7G,EAAwBj9G,UAAU4lG,eAAiB,SAAUzhB,EAAKn9E,KAClEi2G,EAAwBj9G,UAAU+lG,gBAAkB,SAAU5hB,EAAKn9E,KACnEi2G,EAAwBj9G,UAAU2oG,SAAW,SAAUC,GACnD,IAAI5iG,EAAQlG,KACZ,OAAO8oG,EAAK/lG,IAAI,SAAUsgB,GAAQ,OAAOA,EAAK8uE,MAAMjsF,MAExDi3G,EAAwBj9G,UAAU2kG,WAAa,SAAUxgB,EAAKn9E,KAC9Di2G,EAAwBj9G,UAAUmkG,WAAa,SAAUhgB,EAAKn9E,KACvDi2G,EAjCiC,GAwGxC+D,GAAwB,WACxB,SAAShvB,EAAKpwF,EAAO+3E,EAAYsnC,GAC7BnhH,KAAK8B,MAAQA,EACb9B,KAAK65E,WAAaA,EAClB75E,KAAKmhH,KAAOA,EAGhB,OADAjvB,EAAKhyF,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAAW,OAAOkxE,EAAQga,UAAUpyF,KAAMkH,IAC7EgrF,EAPgB,GASvBkvB,GAA2B,WAC3B,SAASA,EAAUC,EAAa1wG,EAAM6hF,EAAO3Y,EAAYynC,EAAuBH,GAC5EnhH,KAAKqhH,YAAcA,EACnBrhH,KAAK2Q,KAAOA,EACZ3Q,KAAKwyF,MAAQA,EACbxyF,KAAK65E,WAAaA,EAClB75E,KAAKshH,sBAAwBA,EAC7BthH,KAAKmhH,KAAOA,EAGhB,OADAC,EAAUlhH,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAAW,OAAOkxE,EAAQmpC,eAAevhH,KAAMkH,IACvFk6G,EAVmB,GAY1BI,GAA+B,WAC/B,SAASA,EAAc1/G,EAAO+mF,EAAYhP,EAAY4nC,EAAiBC,GACnE1hH,KAAK8B,MAAQA,EACb9B,KAAK6oF,WAAaA,EAClB7oF,KAAK65E,WAAaA,EAClB75E,KAAKyhH,gBAAkBA,EACvBzhH,KAAK0hH,cAAgBA,EAGzB,OADAF,EAActhH,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAAW,OAAOkxE,EAAQupC,mBAAmB3hH,KAAMkH,IAC/Fs6G,EATuB,GAW9BI,GAA2B,WAC3B,SAASC,EAAU1+G,EAAMrB,EAAO+3E,EAAYioC,EAAWX,GACnDnhH,KAAKmD,KAAOA,EACZnD,KAAK8B,MAAQA,EACb9B,KAAK65E,WAAaA,EAClB75E,KAAK8hH,UAAYA,EACjB9hH,KAAKmhH,KAAOA,EAGhB,OADAU,EAAU3hH,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAAW,OAAOkxE,EAAQ2pC,eAAe/hH,KAAMkH,IACvF26G,EATmB,GAW1BG,GAAyB,WACzB,SAASC,EAAQ9+G,EAAMspB,EAAOwvB,EAAU49B,EAAYqoC,EAAiBC,EAAehB,QACxD,IAApBe,IAA8BA,EAAkB,WAC9B,IAAlBC,IAA4BA,EAAgB,MAChDniH,KAAKmD,KAAOA,EACZnD,KAAKysB,MAAQA,EACbzsB,KAAKi8C,SAAWA,EAChBj8C,KAAK65E,WAAaA,EAClB75E,KAAKkiH,gBAAkBA,EACvBliH,KAAKmiH,cAAgBA,EACrBniH,KAAKmhH,KAAOA,EAGhB,OADAc,EAAQ/hH,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAAW,OAAOkxE,EAAQgqC,aAAapiH,KAAMkH,IACnF+6G,EAbiB,GAexBI,GAAyB,WACzB,SAASA,EAAQvgH,EAAO+3E,GACpB75E,KAAK8B,MAAQA,EACb9B,KAAK65E,WAAaA,EAGtB,OADAwoC,EAAQniH,UAAUiyF,MAAQ,SAAU/Z,EAASlxE,GAAW,OAAOkxE,EAAQkqC,aAAatiH,KAAMkH,IACnFm7G,EANiB,GAQ5B,SAASxZ,GAASzwB,EAASh7B,EAAOl2C,QACd,IAAZA,IAAsBA,EAAU,MACpC,IAAI+E,EAAS,GACTkmF,EAAQ/Z,EAAQ+Z,MAChB,SAAU9N,GAAO,OAAOjM,EAAQ+Z,MAAM9N,EAAKn9E,IAAYm9E,EAAI8N,MAAM/Z,EAASlxE,IAC1E,SAAUm9E,GAAO,OAAOA,EAAI8N,MAAM/Z,EAASlxE,IAO/C,OANAk2C,EAAM10C,QAAQ,SAAU27E,GACpB,IAAIk+B,EAAYpwB,EAAM9N,GAClBk+B,GACAt2G,EAAOpK,KAAK0gH,KAGbt2G,EAyEX,IAAIu2G,GACJ,SAAWhK,UACPA,EAAUA,EAA0B,eAAI,GAAK,iBAC7CA,EAAUA,EAAwB,aAAI,GAAK,eAC3CA,EAAUA,EAA6B,kBAAI,GAAK,oBAChDA,EAAUA,EAAqB,UAAI,GAAK,YACxCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAA8B,mBAAI,GAAK,qBACjDA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAyB,cAAI,GAAK,gBAC5CA,EAAUA,EAAuB,YAAI,GAAK,cAC1CA,EAAUA,EAAuB,YAAI,GAAK,cAC1CA,EAAUA,EAAqB,UAAI,IAAM,YACzCA,EAAUA,EAAqB,UAAI,IAAM,YACzCA,EAAUA,EAAsB,WAAI,IAAM,aAC1CA,EAAUA,EAAoB,SAAI,IAAM,WACxCA,EAAUA,EAAgC,qBAAI,IAAM,uBACpDA,EAAUA,EAAgC,qBAAI,IAAM,uBACpDA,EAAUA,EAAoC,yBAAI,IAAM,2BACxDA,EAAUA,EAAkC,uBAAI,IAAM,yBACtDA,EAAUA,EAA8B,mBAAI,IAAM,qBAClDA,EAAUA,EAAe,IAAI,IAAM,MApB5BA,EAAX,CAqBE,IACEiK,GAAyB,WAMzB,OALA,SAAe9xG,EAAMkkB,EAAOglD,GACxB75E,KAAK2Q,KAAOA,EACZ3Q,KAAK60B,MAAQA,EACb70B,KAAK65E,WAAaA,GAJE,GAQxB6oC,GAA4B,SAAU38G,GAEtC,SAAS48G,EAAWC,EAAUC,EAAWjiB,GACrC,IAAI16F,EAAQH,EAAOnF,KAAKZ,KAAM4gG,EAAMgiB,IAAa5iH,KAEjD,OADAkG,EAAM28G,UAAYA,EACX38G,EAEX,OANA83D,GAAU2kD,EAAY58G,GAMf48G,EAPoB,CAQ7B1R,IACE6R,GAAgC,WAKhC,OAJA,SAAwBruF,EAAQ7xB,GAC5B5C,KAAKy0B,OAASA,EACdz0B,KAAK4C,OAASA,GAHa,GAa/BmgH,GAAqB,SACzB,SAASC,GAA6BC,GAElC,MAAO,0BADIA,IAAatV,GAAO,MAAQn7E,OAAO41D,aAAa66B,IACjB,IAE9C,SAASC,GAAuBC,GAC5B,MAAO,mBAAsBA,EAAY,oDAE7C,IAAIC,GAAmC,WAInC,OAHA,SAA2BrhH,GACvB/B,KAAK+B,MAAQA,GAFiB,GAOlCshH,GAA4B,WAO5B,SAASA,EAAWC,EAAOC,EAAmBC,EAAcC,QAC3B,IAAzBA,IAAmCA,EAAuBxnB,IAC9Dj8F,KAAKsjH,MAAQA,EACbtjH,KAAKujH,kBAAoBA,EACzBvjH,KAAKwjH,aAAeA,EACpBxjH,KAAKyjH,qBAAuBA,EAE5BzjH,KAAK0jH,OAAS,EACd1jH,KAAK2jH,WAAa,EAClB3jH,KAAK4jH,QAAU,EACf5jH,KAAK6jH,MAAQ,EACb7jH,KAAK8jH,SAAW,EAChB9jH,KAAK+jH,oBAAsB,GAC3B/jH,KAAKgkH,kBAAmB,EACxBhkH,KAAKy0B,OAAS,GACdz0B,KAAK4C,OAAS,GACd5C,KAAKikH,OAASX,EAAM/oB,QACpBv6F,KAAKkkH,QAAUZ,EAAM/oB,QAAQ55F,OAC7BX,KAAKmkH,WAufT,OArfAd,EAAWnjH,UAAUkkH,wBAA0B,SAAU7pB,GAKrD,OAAOA,EAAQxlE,QAAQguF,GAAoB,OAE/CM,EAAWnjH,UAAUy4G,SAAW,WAC5B,KAAO34G,KAAK0jH,QAAU/V,IAAM,CACxB,IAAIhc,EAAQ3xF,KAAKqkH,eACjB,IACQrkH,KAAKskH,iBAluFf,IAmuFctkH,KAAKskH,iBApvFjB,IAqvFgBtkH,KAAKskH,iBAztFjB,IA0tFYtkH,KAAKukH,cAAc5yB,GAEd3xF,KAAKskH,iBAAiBhW,IAC3BtuG,KAAKwkH,gBAAgB7yB,GAGrB3xF,KAAKykH,gBAAgB9yB,GAGpB3xF,KAAKskH,iBAAiB/V,IAC3BvuG,KAAK0kH,iBAAiB/yB,GAGtB3xF,KAAK2kH,gBAAgBhzB,GAGlB3xF,KAAKwjH,cAAgBxjH,KAAK4kH,0BACjC5kH,KAAK6kH,eAGb,MAAOpjH,GACH,KAAIA,aAAa2hH,IAIb,MAAM3hH,EAHNzB,KAAK4C,OAAOf,KAAKJ,EAAEM,QAS/B,OAFA/B,KAAK8kH,YAAYtC,GAAYjI,KAC7Bv6G,KAAK+kH,UAAU,IACR,IAAIjC,GAwenB,SAAyBkC,GAGrB,IAFA,IAAIC,EAAY,GACZC,OAAe5/G,EACV9E,EAAI,EAAGA,EAAIwkH,EAAUrkH,OAAQH,IAAK,CACvC,IAAImT,EAAQqxG,EAAUxkH,GAClB0kH,GAAgBA,EAAav0G,MAAQ6xG,GAAY2C,MAAQxxG,EAAMhD,MAAQ6xG,GAAY2C,MACnFD,EAAarwF,MAAM,IAAMlhB,EAAMkhB,MAAM,GACrCqwF,EAAarrC,WAAWrsD,IAAM7Z,EAAMkmE,WAAWrsD,KAI/Cy3F,EAAUpjH,KADVqjH,EAAevxG,GAIvB,OAAOsxG,EAtfuBG,CAAgBplH,KAAKy0B,QAASz0B,KAAK4C,SAMjEygH,EAAWnjH,UAAU0kH,uBAAyB,WAC1C,GAAIS,GAAqBrlH,KAAKikH,OAAQjkH,KAAK4jH,OAAQ5jH,KAAKyjH,sBAEpD,OADAzjH,KAAKslH,8BACE,EAEX,KAodsB9K,EApdGx6G,KAAK0jH,SAqdlBjV,IAAOoB,GAAc2K,IAAS5K,GAAQ4K,KArdVx6G,KAAKulH,qBAEzC,OADAvlH,KAAKwlH,8BACE,EAkdnB,IAA8BhL,EAhdtB,GAvvFM,MAuvFFx6G,KAAK0jH,MAAmB,CACxB,GAAI1jH,KAAKylH,qBAEL,OADAzlH,KAAK0lH,4BACE,EAEX,GAAI1lH,KAAKulH,qBAEL,OADAvlH,KAAK2lH,4BACE,EAGf,OAAO,GAEXtC,EAAWnjH,UAAUmkH,aAAe,WAChC,OAAO,IAAIvU,GAAc9vG,KAAKsjH,MAAOtjH,KAAK4jH,OAAQ5jH,KAAK6jH,MAAO7jH,KAAK8jH,UAEvET,EAAWnjH,UAAU0lH,SAAW,SAAUj0B,EAAOnkE,GAG7C,YAFc,IAAVmkE,IAAoBA,EAAQ3xF,KAAKqkH,qBACzB,IAAR72F,IAAkBA,EAAMxtB,KAAKqkH,gBAC1B,IAAIvT,GAAgBnf,EAAOnkE,IAEtC61F,EAAWnjH,UAAU4kH,YAAc,SAAUn0G,EAAMghF,QACjC,IAAVA,IAAoBA,EAAQ3xF,KAAKqkH,gBACrCrkH,KAAK6lH,mBAAqBl0B,EAC1B3xF,KAAK8lH,kBAAoBn1G,GAE7B0yG,EAAWnjH,UAAU6kH,UAAY,SAAUlwF,EAAOrH,QAClC,IAARA,IAAkBA,EAAMxtB,KAAKqkH,gBACjC,IAAI1wG,EAAQ,IAAI8uG,GAAQziH,KAAK8lH,kBAAmBjxF,EAAO,IAAIi8E,GAAgB9wG,KAAK6lH,mBAAoBr4F,IAIpG,OAHAxtB,KAAKy0B,OAAO5yB,KAAK8R,GACjB3T,KAAK6lH,mBAAqB,KAC1B7lH,KAAK8lH,kBAAoB,KAClBnyG,GAEX0vG,EAAWnjH,UAAU6lH,aAAe,SAAUlnE,EAAK+hD,GAC3C5gG,KAAKulH,uBACL1mE,GAAO,sFAEX,IAAI98C,EAAQ,IAAI2gH,GAAW7jE,EAAK7+C,KAAK8lH,kBAAmBllB,GAGxD,OAFA5gG,KAAK6lH,mBAAqB,KAC1B7lH,KAAK8lH,kBAAoB,KAClB,IAAI1C,GAAkBrhH,IAEjCshH,EAAWnjH,UAAUikH,SAAW,WAC5B,GAAInkH,KAAK4jH,QAAU5jH,KAAKkkH,QACpB,MAAMlkH,KAAK+lH,aAAa/C,GAA6BrV,IAAO3tG,KAAK4lH,YAEjE5lH,KAAK0jH,QAAU7V,IACf7tG,KAAK6jH,QACL7jH,KAAK8jH,QAAU,GAEV9jH,KAAK0jH,QAAU7V,IAAO7tG,KAAK0jH,QAAU1V,IAC1ChuG,KAAK8jH,UAET9jH,KAAK4jH,SACL5jH,KAAK0jH,MAAQ1jH,KAAK4jH,QAAU5jH,KAAKkkH,QAAUvW,GAAO3tG,KAAKikH,OAAOjjG,WAAWhhB,KAAK4jH,QAC9E5jH,KAAK2jH,UACD3jH,KAAK4jH,OAAS,GAAK5jH,KAAKkkH,QAAUvW,GAAO3tG,KAAKikH,OAAOjjG,WAAWhhB,KAAK4jH,OAAS,IAEtFP,EAAWnjH,UAAUokH,iBAAmB,SAAUrB,GAC9C,OAAIjjH,KAAK0jH,QAAUT,IACfjjH,KAAKmkH,YACE,IAIfd,EAAWnjH,UAAU8lH,gCAAkC,SAAU/C,GAC7D,OAiZuCgD,EAjZQhD,EAkZ5CiD,GAlZgClmH,KAAK0jH,QAkZPwC,GAAoBD,KAjZjDjmH,KAAKmkH,YACE,GA+YnB,IAA+C8B,GA3Y3C5C,EAAWnjH,UAAUimH,iBAAmB,SAAUlD,GAC9C,IAAIhqG,EAAWjZ,KAAKqkH,eACpB,IAAKrkH,KAAKskH,iBAAiBrB,GACvB,MAAMjjH,KAAK+lH,aAAa/C,GAA6BhjH,KAAK0jH,OAAQ1jH,KAAK4lH,SAAS3sG,EAAUA,KAGlGoqG,EAAWnjH,UAAUkmH,YAAc,SAAUC,GACzC,IAAIriH,EAAMqiH,EAAM1lH,OAChB,GAAIX,KAAK4jH,OAAS5/G,EAAMhE,KAAKkkH,QACzB,OAAO,EAGX,IADA,IAAIoC,EAAkBtmH,KAAKumH,gBAClB/lH,EAAI,EAAGA,EAAIwD,EAAKxD,IACrB,IAAKR,KAAKskH,iBAAiB+B,EAAMrlG,WAAWxgB,IAIxC,OADAR,KAAKwmH,iBAAiBF,IACf,EAGf,OAAO,GAEXjD,EAAWnjH,UAAUumH,2BAA6B,SAAUJ,GACxD,IAAK,IAAI7lH,EAAI,EAAGA,EAAI6lH,EAAM1lH,OAAQH,IAC9B,IAAKR,KAAKgmH,gCAAgCK,EAAMrlG,WAAWxgB,IACvD,OAAO,EAGf,OAAO,GAEX6iH,EAAWnjH,UAAUwmH,YAAc,SAAUL,GACzC,IAAIptG,EAAWjZ,KAAKqkH,eACpB,IAAKrkH,KAAKomH,YAAYC,GAClB,MAAMrmH,KAAK+lH,aAAa/C,GAA6BhjH,KAAK0jH,OAAQ1jH,KAAK4lH,SAAS3sG,KAGxFoqG,EAAWnjH,UAAUymH,wBAA0B,SAAU/sE,GACrD,MAAQA,EAAU55C,KAAK0jH,QACnB1jH,KAAKmkH,YAGbd,EAAWnjH,UAAU0mH,wBAA0B,SAAUhtE,EAAW51C,GAChE,IAAI2tF,EAAQ3xF,KAAKqkH,eAEjB,GADArkH,KAAK2mH,wBAAwB/sE,GACzB55C,KAAK4jH,OAASjyB,EAAMoe,OAAS/rG,EAC7B,MAAMhE,KAAK+lH,aAAa/C,GAA6BhjH,KAAK0jH,OAAQ1jH,KAAK4lH,SAASj0B,EAAOA,KAG/F0xB,EAAWnjH,UAAU2mH,kBAAoB,SAAU3I,GAC/C,KAAOl+G,KAAK0jH,QAAUxF,GAClBl+G,KAAKmkH,YAGbd,EAAWnjH,UAAU4mH,UAAY,SAAUC,GACvC,GAAIA,GA75FK,KA65Fa/mH,KAAK0jH,MACvB,OAAO1jH,KAAKgnH,gBAGZ,IAAIjjH,EAAQ/D,KAAK4jH,OAEjB,OADA5jH,KAAKmkH,WACEnkH,KAAKikH,OAAOlgH,IAG3Bs/G,EAAWnjH,UAAU8mH,cAAgB,WACjC,IAAIr1B,EAAQ3xF,KAAKqkH,eAEjB,GADArkH,KAAKmkH,YACDnkH,KAAKskH,iBA56FL,IA87FC,CACD,IAAI2C,EAAgBjnH,KAAKumH,gBAEzB,GADAvmH,KAAK2mH,wBAAwBO,IACzBlnH,KAAK0jH,OAASlV,GAEd,OADAxuG,KAAKwmH,iBAAiBS,GACf,IAEXjnH,KAAKmkH,WACL,IAAI1pE,EAASz6C,KAAKikH,OAAOlwG,UAAU49E,EAAMoe,OAAS,EAAG/vG,KAAK4jH,OAAS,GAC/D1F,EAAOn/C,GAAetkB,GAC1B,IAAKyjE,EACD,MAAMl+G,KAAK+lH,aAAa7C,GAAuBzoE,GAASz6C,KAAK4lH,SAASj0B,IAE1E,OAAOusB,EA9BP,IAAIiJ,EAAQnnH,KAAKskH,iBAt4FpB,MAs4F4CtkH,KAAKskH,iBAr5FjD,IAs5FO8C,EAAcpnH,KAAKqkH,eAAetU,OAEtC,GADA/vG,KAAK2mH,wBAAwBU,IACzBrnH,KAAK0jH,OAASlV,GACd,MAAMxuG,KAAK+lH,aAAa/C,GAA6BhjH,KAAK0jH,OAAQ1jH,KAAK4lH,YAE3E5lH,KAAKmkH,WACL,IAAImD,EAAStnH,KAAKikH,OAAOlwG,UAAUqzG,EAAapnH,KAAK4jH,OAAS,GAC9D,IACI,IAAIX,EAAWxH,SAAS6L,EAAQH,EAAQ,GAAK,IAC7C,OAAO30F,OAAO41D,aAAa66B,GAE/B,MAAOtxG,GACH,IAAI41G,EAASvnH,KAAKikH,OAAOlwG,UAAU49E,EAAMoe,OAAS,EAAG/vG,KAAK4jH,OAAS,GACnE,MAAM5jH,KAAK+lH,aAAa7C,GAAuBqE,GAASvnH,KAAK4lH,SAASj0B,MAmBlF0xB,EAAWnjH,UAAUsnH,gBAAkB,SAAUT,EAAgBU,EAAgBC,GAC7E,IAAIC,EACAC,EAAY5nH,KAAKqkH,eACrBrkH,KAAK8kH,YAAYiC,EAAiBvE,GAAY5wC,mBAAqB4wC,GAAY/wC,SAAUm2C,GAEzF,IADA,IAAI/yF,EAAQ,GAER8yF,EAAgB3nH,KAAKqkH,gBACjBrkH,KAAKskH,iBAAiBmD,KAAmBC,KAO7C,IAJI1nH,KAAK4jH,OAAS+D,EAAc5X,QAE5Bl7E,EAAMhzB,KAAK7B,KAAKikH,OAAOlwG,UAAU4zG,EAAc5X,OAAQ/vG,KAAK4jH,SAEzD5jH,KAAK0jH,QAAU+D,GAClB5yF,EAAMhzB,KAAK7B,KAAK8mH,UAAUC,IAGlC,OAAO/mH,KAAK+kH,UAAU,CAAC/kH,KAAKokH,wBAAwBvvF,EAAM3xB,KAAK,MAAOykH,IAE1EtE,EAAWnjH,UAAUskH,gBAAkB,SAAU7yB,GAC7C,IAAIzrF,EAAQlG,KACZA,KAAK8kH,YAAYtC,GAAYqF,cAAel2B,GAC5C3xF,KAAKmmH,iBAAiB7X,IACtBtuG,KAAK+kH,UAAU,IACf,IAAI+C,EAAY9nH,KAAKwnH,iBAAgB,EAAOlZ,GAAQ,WAAc,OAAOpoG,EAAMkgH,YAAY,QAC3FpmH,KAAK8kH,YAAYtC,GAAYuF,YAAaD,EAAUjuC,WAAWrsD,KAC/DxtB,KAAK+kH,UAAU,KAEnB1B,EAAWnjH,UAAUqkH,cAAgB,SAAU5yB,GAC3C,IAAIzrF,EAAQlG,KACZA,KAAK8kH,YAAYtC,GAAYwF,YAAar2B,GAC1C3xF,KAAK0mH,YAAY,UACjB1mH,KAAK+kH,UAAU,IACf,IAAI+C,EAAY9nH,KAAKwnH,iBAAgB,EAp9F7B,GAo9F+C,WAAc,OAAOthH,EAAMkgH,YAAY,QAC9FpmH,KAAK8kH,YAAYtC,GAAYyF,UAAWH,EAAUjuC,WAAWrsD,KAC7DxtB,KAAK+kH,UAAU,KAEnB1B,EAAWnjH,UAAUukH,gBAAkB,SAAU9yB,GAC7C3xF,KAAK8kH,YAAYtC,GAAY0F,SAAUv2B,GACvC3xF,KAAK6mH,kBAAkBnY,IACvB1uG,KAAKmkH,WACLnkH,KAAK+kH,UAAU,CAAC/kH,KAAKikH,OAAOlwG,UAAU49E,EAAMoe,OAAS,EAAG/vG,KAAK4jH,OAAS,MAE1EP,EAAWnjH,UAAUioH,sBAAwB,WAGzC,IAFA,IAyOaxY,EApOTyY,EALAC,EAAoBroH,KAAK4jH,OACzBxwD,EAAS,KA/+FR,KAg/FEpzD,KAAK0jH,WAuOC/T,EAvOgC3vG,KAAK0jH,OAwOvCzU,IAAMM,GAAKI,KAAUA,EAAOd,IAAME,GAAKY,KACjDA,EAAOhB,IAAMgB,EAAOf,MAxOjB5uG,KAAKmkH,WAaT,OA9/FK,KAo/FDnkH,KAAK0jH,OACL1jH,KAAKmkH,WACL/wD,EAASpzD,KAAKikH,OAAOlwG,UAAUs0G,EAAmBroH,KAAK4jH,OAAS,GAChEwE,EAAYpoH,KAAK4jH,QAGjBwE,EAAYC,EAEhBroH,KAAK4mH,wBAAwB0B,GAAWtoH,KAAK4jH,SAAWwE,EAAY,EAAI,GAEjE,CAACh1D,EADGpzD,KAAKikH,OAAOlwG,UAAUq0G,EAAWpoH,KAAK4jH,UAGrDP,EAAWnjH,UAAUykH,gBAAkB,SAAUhzB,GAC7C,IACIrjE,EACAi6F,EAFAC,EAAWxoH,KAAKumH,gBAGpB,IACI,IAAK1W,GAAc7vG,KAAK0jH,OACpB,MAAM1jH,KAAK+lH,aAAa/C,GAA6BhjH,KAAK0jH,OAAQ1jH,KAAK4lH,YAE3E,IAAIwC,EAAYpoH,KAAK4jH,OAKrB,IAJA5jH,KAAKyoH,qBAAqB92B,GAE1B42B,GADAj6F,EAAUtuB,KAAKikH,OAAOlwG,UAAUq0G,EAAWpoH,KAAK4jH,SACrBnoD,cAC3Bz7D,KAAK2mH,wBAAwB+B,IACtB1oH,KAAK0jH,QAAUnV,IAAUvuG,KAAK0jH,QAAUhV,IAC3C1uG,KAAK2oH,wBACL3oH,KAAK2mH,wBAAwB+B,IACzB1oH,KAAKskH,iBAAiB7V,MACtBzuG,KAAK2mH,wBAAwB+B,IAC7B1oH,KAAK4oH,0BAET5oH,KAAK2mH,wBAAwB+B,IAEjC1oH,KAAK6oH,qBAET,MAAOpnH,GACH,GAAIA,aAAa2hH,GAMb,OAJApjH,KAAKwmH,iBAAiBgC,GAEtBxoH,KAAK8kH,YAAYtC,GAAY2C,KAAMxzB,QACnC3xF,KAAK+kH,UAAU,CAAC,MAGpB,MAAMtjH,EAEV,IAAIqnH,EAAmB9oH,KAAKujH,kBAAkBj1F,GAASygD,YACnD+5C,IAAqBzqD,GAAeoT,SACpCzxE,KAAK+oH,4BAA4BR,GAAkB,GAE9CO,IAAqBzqD,GAAeuT,oBACzC5xE,KAAK+oH,4BAA4BR,GAAkB,IAG3DlF,EAAWnjH,UAAU6oH,4BAA8B,SAAUR,EAAkBxB,GAC3E,IAAI7gH,EAAQlG,KACR8nH,EAAY9nH,KAAKwnH,gBAAgBT,EA3iGnC,GA2iGwD,WACtD,QAAK7gH,EAAMo+G,iBAAiB/V,MAE5BroG,EAAMygH,wBAAwB+B,MACzBxiH,EAAMugH,2BAA2B8B,KAEtCriH,EAAMygH,wBAAwB+B,IACvBxiH,EAAMo+G,iBAAiB5V,QAElC1uG,KAAK8kH,YAAYtC,GAAYwG,UAAWlB,EAAUjuC,WAAWrsD,KAC7DxtB,KAAK+kH,UAAU,CAAC,KAAMwD,KAE1BlF,EAAWnjH,UAAUuoH,qBAAuB,SAAU92B,GAClD3xF,KAAK8kH,YAAYtC,GAAYyG,eAAgBt3B,GAC7C,IAAI98D,EAAQ70B,KAAKmoH,wBACjBnoH,KAAK+kH,UAAUlwF,IAEnBwuF,EAAWnjH,UAAUyoH,sBAAwB,WACzC3oH,KAAK8kH,YAAYtC,GAAY0G,WAC7B,IAAIC,EAAgBnpH,KAAKmoH,wBACzBnoH,KAAK+kH,UAAUoE,IAEnB9F,EAAWnjH,UAAU0oH,uBAAyB,WAE1C,IAAI9mH,EACJ,GAFA9B,KAAK8kH,YAAYtC,GAAY4G,YAEzBppH,KAAK0jH,QAAUtV,IAAOpuG,KAAK0jH,QAAUxV,GAAK,CAC1C,IAAImb,EAAYrpH,KAAK0jH,MACrB1jH,KAAKmkH,WAEL,IADA,IAAItvF,EAAQ,GACL70B,KAAK0jH,QAAU2F,GAClBx0F,EAAMhzB,KAAK7B,KAAK8mH,WAAU,IAE9BhlH,EAAQ+yB,EAAM3xB,KAAK,IACnBlD,KAAKmkH,eAEJ,CACD,IAAImF,EAAatpH,KAAK4jH,OACtB5jH,KAAK4mH,wBAAwB0B,GAAW,GACxCxmH,EAAQ9B,KAAKikH,OAAOlwG,UAAUu1G,EAAYtpH,KAAK4jH,QAEnD5jH,KAAK+kH,UAAU,CAAC/kH,KAAKokH,wBAAwBtiH,MAEjDuhH,EAAWnjH,UAAU2oH,mBAAqB,WACtC,IAAIhG,EAAY7iH,KAAKskH,iBAAiB/V,IAAUiU,GAAY+G,kBAAoB/G,GAAYgH,aAC5FxpH,KAAK8kH,YAAYjC,GACjB7iH,KAAKmmH,iBAAiBzX,IACtB1uG,KAAK+kH,UAAU,KAEnB1B,EAAWnjH,UAAUwkH,iBAAmB,SAAU/yB,GAC9C3xF,KAAK8kH,YAAYtC,GAAYwG,UAAWr3B,GACxC3xF,KAAK2mH,wBAAwB+B,IAC7B,IAAIS,EAAgBnpH,KAAKmoH,wBACzBnoH,KAAK2mH,wBAAwB+B,IAC7B1oH,KAAKmmH,iBAAiBzX,IACtB1uG,KAAK+kH,UAAUoE,IAEnB9F,EAAWnjH,UAAUolH,2BAA6B,WAC9CtlH,KAAK8kH,YAAYtC,GAAYiH,qBAAsBzpH,KAAKqkH,gBACxDrkH,KAAKmmH,iBAAiB3W,IACtBxvG,KAAK+kH,UAAU,IACf/kH,KAAK+jH,oBAAoBliH,KAAK2gH,GAAYiH,sBAC1CzpH,KAAK8kH,YAAYtC,GAAY/wC,SAAUzxE,KAAKqkH,gBAC5C,IAAI5kC,EAAYz/E,KAAK0pH,WA/mGhB,IAgnGL1pH,KAAK+kH,UAAU,CAACtlC,GAAYz/E,KAAKqkH,gBACjCrkH,KAAKmmH,iBAjnGA,IAknGLnmH,KAAK2mH,wBAAwB+B,IAC7B1oH,KAAK8kH,YAAYtC,GAAY/wC,SAAUzxE,KAAKqkH,gBAC5C,IAAI1zG,EAAO3Q,KAAK0pH,WApnGX,IAqnGL1pH,KAAK+kH,UAAU,CAACp0G,GAAO3Q,KAAKqkH,gBAC5BrkH,KAAKmmH,iBAtnGA,IAunGLnmH,KAAK2mH,wBAAwB+B,KAEjCrF,EAAWnjH,UAAUslH,2BAA6B,WAC9CxlH,KAAK8kH,YAAYtC,GAAYmH,qBAAsB3pH,KAAKqkH,gBACxD,IAAIviH,EAAQ9B,KAAK0pH,WAAWla,IAAS7oB,OACrC3mF,KAAK+kH,UAAU,CAACjjH,GAAQ9B,KAAKqkH,gBAC7BrkH,KAAK2mH,wBAAwB+B,IAC7B1oH,KAAK8kH,YAAYtC,GAAYoH,yBAA0B5pH,KAAKqkH,gBAC5DrkH,KAAKmmH,iBAAiB3W,IACtBxvG,KAAK+kH,UAAU,GAAI/kH,KAAKqkH,gBACxBrkH,KAAK2mH,wBAAwB+B,IAC7B1oH,KAAK+jH,oBAAoBliH,KAAK2gH,GAAYoH,2BAE9CvG,EAAWnjH,UAAUwlH,yBAA2B,WAC5C1lH,KAAK8kH,YAAYtC,GAAYqH,uBAAwB7pH,KAAKqkH,gBAC1DrkH,KAAKmmH,iBApmGC,KAqmGNnmH,KAAK+kH,UAAU,GAAI/kH,KAAKqkH,gBACxBrkH,KAAK2mH,wBAAwB+B,IAC7B1oH,KAAK+jH,oBAAoBz1E,OAE7B+0E,EAAWnjH,UAAUylH,yBAA2B,WAC5C3lH,KAAK8kH,YAAYtC,GAAYsH,mBAAoB9pH,KAAKqkH,gBACtDrkH,KAAKmmH,iBA3mGC,KA4mGNnmH,KAAK+kH,UAAU,IACf/kH,KAAK+jH,oBAAoBz1E,OAE7B+0E,EAAWnjH,UAAU2kH,aAAe,WAChC,IAAIlzB,EAAQ3xF,KAAKqkH,eACjBrkH,KAAK8kH,YAAYtC,GAAY2C,KAAMxzB,GACnC,IAAI98D,EAAQ,GACZ,GACQ70B,KAAKyjH,sBAAwBzjH,KAAKomH,YAAYpmH,KAAKyjH,qBAAqB9xB,QACxE98D,EAAMhzB,KAAK7B,KAAKyjH,qBAAqB9xB,OACrC3xF,KAAKgkH,kBAAmB,GAEnBhkH,KAAKyjH,sBAAwBzjH,KAAKgkH,kBACvChkH,KAAKomH,YAAYpmH,KAAKyjH,qBAAqBj2F,MAC3CqH,EAAMhzB,KAAK7B,KAAKyjH,qBAAqBj2F,KACrCxtB,KAAKgkH,kBAAmB,GAGxBnvF,EAAMhzB,KAAK7B,KAAK8mH,WAAU,WAExB9mH,KAAK+pH,cACf/pH,KAAK+kH,UAAU,CAAC/kH,KAAKokH,wBAAwBvvF,EAAM3xB,KAAK,QAE5DmgH,EAAWnjH,UAAU6pH,WAAa,WAC9B,GAhqGE,KAgqGE/pH,KAAK0jH,OAAiB1jH,KAAK0jH,QAAU/V,GACrC,OAAO,EAEX,GAAI3tG,KAAKwjH,eAAiBxjH,KAAKgkH,iBAAkB,CAC7C,GAAIqB,GAAqBrlH,KAAKikH,OAAQjkH,KAAK4jH,OAAQ5jH,KAAKyjH,sBAEpD,OAAO,EAEX,GA5oGE,MA4oGEzjH,KAAK0jH,OAAqB1jH,KAAKylH,qBAE/B,OAAO,EAGf,OAAO,GAEXpC,EAAWnjH,UAAUqmH,cAAgB,WACjC,MAAO,CAACvmH,KAAK0jH,MAAO1jH,KAAK4jH,OAAQ5jH,KAAK8jH,QAAS9jH,KAAK6jH,MAAO7jH,KAAKy0B,OAAO9zB,SAE3E0iH,EAAWnjH,UAAUwpH,WAAa,SAAUxL,GACxC,IAAIvsB,EAAQ3xF,KAAK4jH,OAEjB,OADA5jH,KAAK6mH,kBAAkB3I,GAChBl+G,KAAKikH,OAAOlwG,UAAU49E,EAAO3xF,KAAK4jH,SAE7CP,EAAWnjH,UAAUsmH,iBAAmB,SAAU1K,GAC9C97G,KAAK0jH,MAAQ5H,EAAS,GACtB97G,KAAK4jH,OAAS9H,EAAS,GACvB97G,KAAK8jH,QAAUhI,EAAS,GACxB97G,KAAK6jH,MAAQ/H,EAAS,GACtB,IAAIkO,EAAWlO,EAAS,GACpBkO,EAAWhqH,KAAKy0B,OAAO9zB,SAEvBX,KAAKy0B,OAASz0B,KAAKy0B,OAAOpqB,MAAM,EAAG2/G,KAG3C3G,EAAWnjH,UAAUulH,mBAAqB,WACtC,OAAOzlH,KAAK+jH,oBAAoBpjH,OAAS,GACrCX,KAAK+jH,oBAAoB/jH,KAAK+jH,oBAAoBpjH,OAAS,KACvD6hH,GAAYoH,0BAExBvG,EAAWnjH,UAAUqlH,mBAAqB,WACtC,OAAOvlH,KAAK+jH,oBAAoBpjH,OAAS,GACrCX,KAAK+jH,oBAAoB/jH,KAAK+jH,oBAAoBpjH,OAAS,KACvD6hH,GAAYiH,sBAEjBpG,EAhhBoB,GAkhB/B,SAASqF,GAAgB/Y,GACrB,OAAQD,GAAaC,IAASA,IAAShC,GAE3C,SAAS2a,GAAU3Y,GACf,OAAOD,GAAaC,IAASA,IAASjB,IAAOiB,IAASpB,IAClDoB,IAASvB,IAAOuB,IAASzB,IAAOyB,IAASlB,GAMjD,SAAS4Y,GAAiB1X,GACtB,OAAOA,GAAQnB,IAAcmB,GAAQhC,KAlrGzC,SAAyBgC,GACrB,OAAOA,GAAQV,IAAMU,GAAQT,IAAMS,GAAQd,IAAMc,GAAQb,IAAMc,GAAQD,GAirGzBsa,CAAgBta,GAElE,SAASuX,GAAiBvX,GACtB,OAAOA,GAAQnB,IAAcmB,GAAQhC,KAASkC,GAAcF,GAEhE,SAAS0V,GAAqBl8G,EAAO4mG,EAAQ2M,GACzC,IAAIwN,IAAuBxN,GAAsBvzG,EAAMvE,QAAQ83G,EAAoB/qB,MAAOoe,IAAWA,EACrG,OAAO5mG,EAAM6X,WAAW+uF,IAAWP,KAAY0a,EAQnD,SAAShE,GAAoBvW,GACzB,OAAOA,GAAQV,IAAMU,GAAQJ,GAAKI,EAAOV,GAAKJ,GAAKc,EA0BvD,IAAIwa,GAA2B,SAAUpkH,GAErC,SAASqkH,EAAU7rD,EAAaqiC,EAAM/hD,GAClC,IAAI34C,EAAQH,EAAOnF,KAAKZ,KAAM4gG,EAAM/hD,IAAQ7+C,KAE5C,OADAkG,EAAMq4D,YAAcA,EACbr4D,EAKX,OATA83D,GAAUosD,EAAWrkH,GAMrBqkH,EAAUjqH,OAAS,SAAUo+D,EAAaqiC,EAAM/hD,GAC5C,OAAO,IAAIurE,EAAU7rD,EAAaqiC,EAAM/hD,IAErCurE,EAVmB,CAW5BnZ,IACEoZ,GAAiC,WAKjC,OAJA,SAAyBC,EAAW1nH,GAChC5C,KAAKsqH,UAAYA,EACjBtqH,KAAK4C,OAASA,GAHc,GAOhC2nH,GAA0B,WAC1B,SAAShO,EAAOiO,GACZxqH,KAAKwqH,iBAAmBA,EAS5B,OAPAjO,EAAOr8G,UAAUiyE,MAAQ,SAAUlqE,EAAQgpF,EAAKw5B,EAAqB/N,QACrC,IAAxB+N,IAAkCA,GAAsB,QAChC,IAAxB/N,IAAkCA,EAAsBzgB,IAC5D,IAAIyuB,EAvnBZ,SAAkBziH,EAAQgpF,EAAKu5B,EAAkBG,EAAwBjO,GAGrE,YAF+B,IAA3BiO,IAAqCA,GAAyB,QACtC,IAAxBjO,IAAkCA,EAAsBzgB,IACrD,IAAIonB,GAAW,IAAIxS,GAAgB5oG,EAAQgpF,GAAMu5B,EAAkBG,EAAwBjO,GAC7F/D,WAmnBqBA,CAAS1wG,EAAQgpF,EAAKjxF,KAAKwqH,iBAAkBC,EAAqB/N,GACpFkO,EAAgB,IAAIC,GAAaH,EAAgBj2F,OAAQz0B,KAAKwqH,kBAAkBM,QACpF,OAAO,IAAIT,GAAgBO,EAAcN,UAAWI,EAAgB9nH,OAAOX,OAAO2oH,EAAchoH,UAE7F25G,EAXkB,GAazBsO,GAA8B,WAC9B,SAASA,EAAap2F,EAAQ+1F,GAC1BxqH,KAAKy0B,OAASA,EACdz0B,KAAKwqH,iBAAmBA,EACxBxqH,KAAK4jH,QAAU,EACf5jH,KAAK+qH,WAAa,GAClB/qH,KAAKgrH,QAAU,GACfhrH,KAAKirH,cAAgB,GACrBjrH,KAAKmkH,WA8ST,OA5SA0G,EAAa3qH,UAAU4qH,MAAQ,WAC3B,KAAO9qH,KAAK0jH,MAAM/yG,OAAS6xG,GAAYjI,KAC/Bv6G,KAAK0jH,MAAM/yG,OAAS6xG,GAAYyG,eAChCjpH,KAAKkrH,iBAAiBlrH,KAAKmkH,YAEtBnkH,KAAK0jH,MAAM/yG,OAAS6xG,GAAYwG,UACrChpH,KAAKmrH,eAAenrH,KAAKmkH,YAEpBnkH,KAAK0jH,MAAM/yG,OAAS6xG,GAAYwF,aACrChoH,KAAKorH,oBACLprH,KAAKukH,cAAcvkH,KAAKmkH,aAEnBnkH,KAAK0jH,MAAM/yG,OAAS6xG,GAAYqF,eACrC7nH,KAAKorH,oBACLprH,KAAKwkH,gBAAgBxkH,KAAKmkH,aAErBnkH,KAAK0jH,MAAM/yG,OAAS6xG,GAAY2C,MAAQnlH,KAAK0jH,MAAM/yG,OAAS6xG,GAAY/wC,UAC7EzxE,KAAK0jH,MAAM/yG,OAAS6xG,GAAY5wC,oBAChC5xE,KAAKorH,oBACLprH,KAAK6kH,aAAa7kH,KAAKmkH,aAElBnkH,KAAK0jH,MAAM/yG,OAAS6xG,GAAYiH,qBACrCzpH,KAAKqrH,kBAAkBrrH,KAAKmkH,YAI5BnkH,KAAKmkH,WAGb,OAAO,IAAIkG,GAAgBrqH,KAAK+qH,WAAY/qH,KAAKgrH,UAErDH,EAAa3qH,UAAUikH,SAAW,WAC9B,IAAI/6G,EAAOpJ,KAAK0jH,MAMhB,OALI1jH,KAAK4jH,OAAS5jH,KAAKy0B,OAAO9zB,OAAS,GAEnCX,KAAK4jH,SAET5jH,KAAK0jH,MAAQ1jH,KAAKy0B,OAAOz0B,KAAK4jH,QACvBx6G,GAEXyhH,EAAa3qH,UAAUorH,WAAa,SAAU36G,GAC1C,OAAI3Q,KAAK0jH,MAAM/yG,OAASA,EACb3Q,KAAKmkH,WAET,MAEX0G,EAAa3qH,UAAUqkH,cAAgB,SAAUgH,GAC7CvrH,KAAK6kH,aAAa7kH,KAAKmkH,YACvBnkH,KAAKsrH,WAAW9I,GAAYyF,YAEhC4C,EAAa3qH,UAAUskH,gBAAkB,SAAU7wG,GAC/C,IAAI+gB,EAAO10B,KAAKsrH,WAAW9I,GAAY/wC,UACvCzxE,KAAKsrH,WAAW9I,GAAYuF,aAC5B,IAAIjmH,EAAgB,MAAR4yB,EAAeA,EAAKG,MAAM,GAAG8xD,OAAS,KAClD3mF,KAAKwrH,aAAa,IAAInJ,GAAQvgH,EAAO6R,EAAMkmE,cAE/CgxC,EAAa3qH,UAAUmrH,kBAAoB,SAAU13G,GAKjD,IAJA,IAAI0tG,EAAcrhH,KAAKmkH,WACnBxzG,EAAO3Q,KAAKmkH,WACZ3xB,EAAQ,GAELxyF,KAAK0jH,MAAM/yG,OAAS6xG,GAAYmH,sBAAsB,CACzD,IAAI8B,EAAUzrH,KAAK0rH,sBACnB,IAAKD,EACD,OACJj5B,EAAM3wF,KAAK4pH,GAGf,GAAIzrH,KAAK0jH,MAAM/yG,OAAS6xG,GAAYsH,mBAApC,CAIA,IAAIjwC,EAAa,IAAIi3B,GAAgBn9F,EAAMkmE,WAAW8X,MAAO3xF,KAAK0jH,MAAM7pC,WAAWrsD,KACnFxtB,KAAKwrH,aAAa,IAAIpK,GAAUC,EAAYxsF,MAAM,GAAIlkB,EAAKkkB,MAAM,GAAI29D,EAAO3Y,EAAYwnC,EAAYxnC,aACpG75E,KAAKmkH,gBALDnkH,KAAKgrH,QAAQnpH,KAAKsoH,GAAUhqH,OAAO,KAAMH,KAAK0jH,MAAM7pC,WAAY,uCAOxEgxC,EAAa3qH,UAAUwrH,oBAAsB,WACzC,IAAI5pH,EAAQ9B,KAAKmkH,WAEjB,GAAInkH,KAAK0jH,MAAM/yG,OAAS6xG,GAAYoH,yBAEhC,OADA5pH,KAAKgrH,QAAQnpH,KAAKsoH,GAAUhqH,OAAO,KAAMH,KAAK0jH,MAAM7pC,WAAY,sCACzD,KAGX,IAAI8X,EAAQ3xF,KAAKmkH,WACb/d,EAAMpmG,KAAK2rH,2BAA2Bh6B,GAC1C,IAAKyU,EACD,OAAO,KACX,IAAI54E,EAAMxtB,KAAKmkH,WACf/d,EAAIvkG,KAAK,IAAI4gH,GAAQD,GAAYjI,IAAK,GAAI/sF,EAAIqsD,aAE9C,IAAI+xC,EAAY,IAAIf,EAAazkB,EAAKpmG,KAAKwqH,kBAAkBM,QAC7D,GAAIc,EAAUhpH,OAAOjC,OAAS,EAE1B,OADAX,KAAKgrH,QAAUhrH,KAAKgrH,QAAQ/oH,OAAO2pH,EAAUhpH,QACtC,KAEX,IAAIi3E,EAAa,IAAIi3B,GAAgBhvG,EAAM+3E,WAAW8X,MAAOnkE,EAAIqsD,WAAWrsD,KACxEk0F,EAAgB,IAAI5Q,GAAgBnf,EAAM9X,WAAW8X,MAAOnkE,EAAIqsD,WAAWrsD,KAC/E,OAAO,IAAIg0F,GAAc1/G,EAAM+yB,MAAM,GAAI+2F,EAAUtB,UAAWzwC,EAAY/3E,EAAM+3E,WAAY6nC,IAEhGmJ,EAAa3qH,UAAUyrH,2BAA6B,SAAUh6B,GAG1D,IAFA,IAAIyU,EAAM,GACNylB,EAAqB,CAACrJ,GAAYoH,4BACzB,CAKT,GAJI5pH,KAAK0jH,MAAM/yG,OAAS6xG,GAAYiH,sBAChCzpH,KAAK0jH,MAAM/yG,OAAS6xG,GAAYoH,0BAChCiC,EAAmBhqH,KAAK7B,KAAK0jH,MAAM/yG,MAEnC3Q,KAAK0jH,MAAM/yG,OAAS6xG,GAAYqH,uBAAwB,CACxD,IAAIiC,GAAYD,EAAoBrJ,GAAYoH,0BAO5C,OADA5pH,KAAKgrH,QAAQnpH,KAAKsoH,GAAUhqH,OAAO,KAAMwxF,EAAM9X,WAAY,sCACpD,KALP,GADAgyC,EAAmBv9E,MACc,GAA7Bu9E,EAAmBlrH,OACnB,OAAOylG,EAOnB,GAAIpmG,KAAK0jH,MAAM/yG,OAAS6xG,GAAYsH,mBAAoB,CACpD,IAAIgC,GAAYD,EAAoBrJ,GAAYiH,sBAK5C,OADAzpH,KAAKgrH,QAAQnpH,KAAKsoH,GAAUhqH,OAAO,KAAMwxF,EAAM9X,WAAY,sCACpD,KAJPgyC,EAAmBv9E,MAO3B,GAAItuC,KAAK0jH,MAAM/yG,OAAS6xG,GAAYjI,IAEhC,OADAv6G,KAAKgrH,QAAQnpH,KAAKsoH,GAAUhqH,OAAO,KAAMwxF,EAAM9X,WAAY,sCACpD,KAEXusB,EAAIvkG,KAAK7B,KAAKmkH,cAGtB0G,EAAa3qH,UAAU2kH,aAAe,SAAUlxG,GAC5C,IAAI+gB,EAAO/gB,EAAMkhB,MAAM,GACvB,GAAIH,EAAK/zB,OAAS,GAAgB,MAAX+zB,EAAK,GAAY,CACpC,IAAI1R,EAAWhjB,KAAK+rH,oBACJ,MAAZ/oG,GAAgD,GAA5BA,EAASi5B,SAASt7C,QACtCX,KAAKwqH,iBAAiBxnG,EAAS7f,MAAMisE,gBACrC16C,EAAOA,EAAK3gB,UAAU,IAG1B2gB,EAAK/zB,OAAS,GACdX,KAAKwrH,aAAa,IAAItK,GAAOxsF,EAAM/gB,EAAMkmE,cAGjDgxC,EAAa3qH,UAAUkrH,kBAAoB,WACvC,IAAI71E,EAAKv1C,KAAK+rH,oBACVx2E,GAAMv1C,KAAKwqH,iBAAiBj1E,EAAGpyC,MAAM+rE,QACrClvE,KAAKirH,cAAc38E,OAG3Bu8E,EAAa3qH,UAAUgrH,iBAAmB,SAAUc,GAIhD,IAHA,IAAI54D,EAAS44D,EAAcn3F,MAAM,GAC7B1xB,EAAO6oH,EAAcn3F,MAAM,GAC3BpI,EAAQ,GACLzsB,KAAK0jH,MAAM/yG,OAAS6xG,GAAY0G,WACnCz8F,EAAM5qB,KAAK7B,KAAKisH,aAAajsH,KAAKmkH,aAEtC,IAAIvlD,EAAW5+D,KAAKksH,oBAAoB94D,EAAQjwD,EAAMnD,KAAK+rH,qBACvDI,GAAc,EAGlB,GAAInsH,KAAK0jH,MAAM/yG,OAAS6xG,GAAY+G,kBAAmB,CACnDvpH,KAAKmkH,WACLgI,GAAc,EACd,IAAIC,EAASpsH,KAAKwqH,iBAAiB5rD,GAC7BwtD,EAAO/8C,cAA0C,OAA1B1Q,GAAYC,IAAsBwtD,EAAOl9C,QAClElvE,KAAKgrH,QAAQnpH,KAAKsoH,GAAUhqH,OAAOy+D,EAAUotD,EAAcnyC,WAAY,sDAAyDmyC,EAAcn3F,MAAM,GAAK,WAGxJ70B,KAAK0jH,MAAM/yG,OAAS6xG,GAAYgH,eACrCxpH,KAAKmkH,WACLgI,GAAc,GAElB,IACIvrB,EAAO,IAAIkQ,GAAgBkb,EAAcnyC,WAAW8X,MAD9C3xF,KAAK0jH,MAAM7pC,WAAW8X,OAE5Bp8C,EAAK,IAAIysE,GAAQpjD,EAAUnyC,EAAO,GAAIm0E,EAAMA,OAAMt7F,GACtDtF,KAAKqsH,aAAa92E,GACd42E,IACAnsH,KAAKssH,YAAY1tD,GACjBrpB,EAAG4sE,cAAgBvhB,IAG3BiqB,EAAa3qH,UAAUmsH,aAAe,SAAU92E,GAC5C,IAAI5rB,EAAW3pB,KAAK+rH,oBAChBpiG,GAAY3pB,KAAKwqH,iBAAiB7gG,EAASxmB,MAAMssE,gBAAgBl6B,EAAGpyC,OACpEnD,KAAKirH,cAAc38E,MAEvB,IAAI89E,EAASpsH,KAAKwqH,iBAAiBj1E,EAAGpyC,MAClCwO,EAAK3R,KAAKusH,sCAAuCznH,EAAS6M,EAAG7M,OAAQohB,EAAYvU,EAAGuU,UACxF,GAAIphB,GAAUsnH,EAAO78C,mBAAmBzqE,EAAO3B,MAAO,CAClD,IAAI8wD,EAAY,IAAI+tD,GAAQoK,EAAO98C,YAAa,GAAI,GAAI/5B,EAAGskC,WAAYtkC,EAAG2sE,gBAAiB3sE,EAAG4sE,eAC9FniH,KAAKwsH,uBAAuB1nH,EAAQohB,EAAW+tC,GAEnDj0D,KAAKwrH,aAAaj2E,GAClBv1C,KAAKirH,cAAcppH,KAAK0zC,IAE5Bs1E,EAAa3qH,UAAUirH,eAAiB,SAAUsB,GAC9C,IAAI7tD,EAAW5+D,KAAKksH,oBAAoBO,EAAY53F,MAAM,GAAI43F,EAAY53F,MAAM,GAAI70B,KAAK+rH,qBACrF/rH,KAAK+rH,sBACL/rH,KAAK+rH,oBAAoB5J,cAAgBsK,EAAY5yC,YAErD75E,KAAKwqH,iBAAiB5rD,GAAUsQ,OAChClvE,KAAKgrH,QAAQnpH,KAAKsoH,GAAUhqH,OAAOy+D,EAAU6tD,EAAY5yC,WAAY,uCAA0C4yC,EAAY53F,MAAM,GAAK,MAEhI70B,KAAKssH,YAAY1tD,IAEvB5+D,KAAKgrH,QAAQnpH,KAAKsoH,GAAUhqH,OAAOy+D,EAAU6tD,EAAY5yC,WAD5C,2BAA8Bjb,EAAW,iLAI9DisD,EAAa3qH,UAAUosH,YAAc,SAAU1tD,GAC3C,IAAK,IAAI8tD,EAAa1sH,KAAKirH,cAActqH,OAAS,EAAG+rH,GAAc,EAAGA,IAAc,CAChF,IAAIn3E,EAAKv1C,KAAKirH,cAAcyB,GAC5B,GAAIn3E,EAAGpyC,MAAQy7D,EAEX,OADA5+D,KAAKirH,cAAcpmH,OAAO6nH,EAAY1sH,KAAKirH,cAActqH,OAAS+rH,IAC3D,EAEX,IAAK1sH,KAAKwqH,iBAAiBj1E,EAAGpyC,MAAM8rE,eAChC,OAAO,EAGf,OAAO,GAEX47C,EAAa3qH,UAAU+rH,aAAe,SAAU77F,GAC5C,IAAIwuC,EAAWC,GAAezuC,EAASyE,MAAM,GAAIzE,EAASyE,MAAM,IAC5DrH,EAAM4C,EAASypD,WAAWrsD,IAC1B1rB,EAAQ,GACRggH,OAAYx8G,EAChB,GAAItF,KAAK0jH,MAAM/yG,OAAS6xG,GAAY4G,WAAY,CAC5C,IAAIuD,EAAa3sH,KAAKmkH,WACtBriH,EAAQ6qH,EAAW93F,MAAM,GACzBrH,EAAMm/F,EAAW9yC,WAAWrsD,IAC5Bs0F,EAAY6K,EAAW9yC,WAE3B,OAAO,IAAI+nC,GAAUhjD,EAAU98D,EAAO,IAAIgvG,GAAgB1gF,EAASypD,WAAW8X,MAAOnkE,GAAMs0F,IAE/F+I,EAAa3qH,UAAU6rH,kBAAoB,WACvC,OAAO/rH,KAAKirH,cAActqH,OAAS,EAAIX,KAAKirH,cAAcjrH,KAAKirH,cAActqH,OAAS,GAAK,MAO/FkqH,EAAa3qH,UAAUqsH,oCAAsC,WAEzD,IADA,IAAIrmG,EAAY,KACP1lB,EAAIR,KAAKirH,cAActqH,OAAS,EAAGH,GAAK,EAAGA,IAAK,CACrD,IAAKi+D,GAAcz+D,KAAKirH,cAAczqH,GAAG2C,MACrC,MAAO,CAAE2B,OAAQ9E,KAAKirH,cAAczqH,GAAI0lB,UAAWA,GAEvDA,EAAYlmB,KAAKirH,cAAczqH,GAEnC,MAAO,CAAEsE,OAAQ,KAAMohB,UAAWA,IAEtC2kG,EAAa3qH,UAAUsrH,aAAe,SAAUnoG,GAC5C,IAAIve,EAAS9E,KAAK+rH,oBACJ,MAAVjnH,EACAA,EAAOm3C,SAASp6C,KAAKwhB,GAGrBrjB,KAAK+qH,WAAWlpH,KAAKwhB,IAU7BwnG,EAAa3qH,UAAUssH,uBAAyB,SAAU1nH,EAAQohB,EAAW7C,GACzE,GAAK6C,EAIA,CACD,GAAIphB,EAAQ,CAER,IAAIf,EAAQe,EAAOm3C,SAASr3C,QAAQshB,GACpCphB,EAAOm3C,SAASl4C,GAASsf,OAGzBrjB,KAAK+qH,WAAWlpH,KAAKwhB,GAEzBA,EAAK44B,SAASp6C,KAAKqkB,GACnBlmB,KAAKirH,cAAcpmH,OAAO7E,KAAKirH,cAAcrmH,QAAQshB,GAAY,EAAG7C,QAbpErjB,KAAKwrH,aAAanoG,GAClBrjB,KAAKirH,cAAcppH,KAAKwhB,IAehCwnG,EAAa3qH,UAAUgsH,oBAAsB,SAAU94D,EAAQ0L,EAAWlR,GAOtE,OANc,MAAVwF,GAEc,OADdA,EAASpzD,KAAKwqH,iBAAiB1rD,GAAWgQ,0BACH,MAAjBlhB,IAClBwF,EAASuL,GAAY/Q,EAAczqD,OAGpC07D,GAAezL,EAAQ0L,IAE3B+rD,EAtTsB,GAwTjC,SAASiB,GAAYc,EAAOtiG,GACxB,OAAOsiG,EAAMjsH,OAAS,GAAKisH,EAAMA,EAAMjsH,OAAS,KAAO2pB,EAU3D,IAAIuiG,GAA4B,SAAU9mH,GAEtC,SAAS+mH,IACL,OAAO/mH,EAAOnF,KAAKZ,KAAM0vE,KAAyB1vE,KAOtD,OATAg+D,GAAU8uD,EAAY/mH,GAItB+mH,EAAW5sH,UAAUiyE,MAAQ,SAAUlqE,EAAQgpF,EAAKw5B,EAAqB/N,GAGrE,YAF4B,IAAxB+N,IAAkCA,GAAsB,QAChC,IAAxB/N,IAAkCA,EAAsBzgB,IACrDl2F,EAAO7F,UAAUiyE,MAAMvxE,KAAKZ,KAAMiI,EAAQgpF,EAAKw5B,EAAqB/N,IAExEoQ,EAVoB,CAW7BvC,IAUEwC,GAAoB,IAAIt3F,IAAI,CAAC,MAAO,WAAY,WAAY,SAAU,UAGtEu3F,GAAW,2EACXC,GAAe,IAAIl7C,OAAO,KAAOi7C,GAAW,KAC5CE,GAAoB,IAAIn7C,OAAO,IAAMi7C,GAAW,QAAS,KAU7D,SAASG,GAAYrrH,GAEjB,OAAOA,EAAMizB,QAAQ,IAAIg9C,OAAOvD,GAAc,KAAM,KAgBxD,IAgDI4+C,GAhDAC,GAAmC,WACnC,SAASA,KAuBT,OArBAA,EAAkBntH,UAAUkiH,aAAe,SAAU93F,EAASpjB,GAC1D,OAAI6lH,GAAkB72F,IAAI5L,EAAQnnB,OAAoCmnB,EAAQmC,MA9BrEqpB,KAAK,SAAUyF,GAAQ,MARZ,0BAQmBA,EAAKp4C,OAiCjC,IAAI6+G,GAAQ13F,EAAQnnB,KAAM0lG,GAAS7oG,KAAMsqB,EAAQmC,OAAQnC,EAAQ2xB,SAAU3xB,EAAQuvD,WAAYvvD,EAAQ43F,gBAAiB53F,EAAQ63F,cAAe73F,EAAQ62F,MAE3J,IAAIa,GAAQ13F,EAAQnnB,KAAMmnB,EAAQmC,MAAOo8E,GAAS7oG,KAAMsqB,EAAQ2xB,UAAW3xB,EAAQuvD,WAAYvvD,EAAQ43F,gBAAiB53F,EAAQ63F,cAAe73F,EAAQ62F,OAElKkM,EAAkBntH,UAAU6hH,eAAiB,SAAUuL,EAAWpmH,GAC9D,MA9CoB,0BA8CbomH,EAAUnqH,KAAiCmqH,EAAY,MAElED,EAAkBntH,UAAUkyF,UAAY,SAAU19D,EAAMxtB,GAEpD,OADiBwtB,EAAK5yB,MAAM8hD,MAAMqpE,IAEvB,IAAI/L,GAAOiM,GAAYz4F,EAAK5yB,OAAOizB,QAAQm4F,GAAmB,KAAMx4F,EAAKmlD,WAAYnlD,EAAKysF,MAE9F,MAEXkM,EAAkBntH,UAAUoiH,aAAe,SAAUz0D,EAAS3mD,GAAW,OAAO2mD,GAChFw/D,EAAkBntH,UAAUqhH,eAAiB,SAAUgM,EAAWrmH,GAAW,OAAOqmH,GACpFF,EAAkBntH,UAAUyhH,mBAAqB,SAAU6L,EAAetmH,GAAW,OAAOsmH,GACrFH,EAxB2B,GAiDtC,SAASI,KAiCL,OAhCKL,KACDA,GAAmB,GAEnBM,GAAgBl2C,GAAgBm2C,KAAM,CAClC,gBACA,cACA,gBAEJD,GAAgBl2C,GAAgB9uB,MAAO,CAAC,YAExCglE,GAAgBl2C,GAAgBo2C,IAAK,CACjC,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhEF,GAAgBl2C,GAAgBq2C,aAAc,CAC1C,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA,gBAGDT,GAEX,SAASM,GAAgB3jC,EAAK+jC,GAC1B,IAAIC,EAAKp8G,EACT,IACI,IAAK,IAAIq8G,EAAU9vD,GAAS4vD,GAAQG,EAAYD,EAAQrsH,QAASssH,EAAUrsH,KAAMqsH,EAAYD,EAAQrsH,OAEjGyrH,GADWa,EAAUnsH,MACC25D,eAAiBsuB,EAG/C,MAAOmkC,GAASH,EAAM,CAAEhsH,MAAOmsH,WAE3B,IACQD,IAAcA,EAAUrsH,OAAS+P,EAAKq8G,EAAQviH,SAASkG,EAAG/Q,KAAKotH,WAE7D,GAAID,EAAK,MAAMA,EAAIhsH,QAWrC,IAAIosH,GAAuC,WAGvC,OAFA,aADsC,GAatCC,GAAU,UACVC,GAAS,SACTC,GAAS,SACTC,GAAS,SAuDTC,GAAS,CACT,iYAGA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,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","file":"main.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x != null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n","/** PURE_IMPORTS_START _errorObject PURE_IMPORTS_END */\nimport { errorObject } from './errorObject';\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nexport function tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n//# sourceMappingURL=tryCatch.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction UnsubscriptionErrorImpl(errors) {\n    Error.call(this);\n    this.message = errors ?\n        errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n}\nUnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_tryCatch,_util_errorObject,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        while (_parent) {\n            _parent.remove(this);\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function') {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport var config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; });\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = typeof Symbol === 'function'\n    ? /*@__PURE__*/ Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        _this._parentSubscription = null;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        this._parentSubscription = null;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n//# sourceMappingURL=observable.js.map\n","/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_internal_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=canReportError.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction ObjectUnsubscribedErrorImpl() {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n}\nObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nexport var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\nvar InnerSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.outerValue = outerValue;\n        _this.outerIndex = outerIndex;\n        _this.index = 0;\n        return _this;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\nexport { InnerSubscriber };\n//# sourceMappingURL=InnerSubscriber.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        if (!subscriber.closed) {\n            subscriber.complete();\n        }\n    };\n};\n//# sourceMappingURL=subscribeToArray.js.map\n","/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nimport { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function (promise) {\n    return function (subscriber) {\n        promise.then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, hostReportError);\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToPromise.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = /*@__PURE__*/ getSymbolIterator();\nexport var $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport var subscribeToIterable = function (iterable) {\n    return function (subscriber) {\n        var iterator = iterable[Symbol_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                subscriber.complete();\n                break;\n            }\n            subscriber.next(item.value);\n            if (subscriber.closed) {\n                break;\n            }\n        } while (true);\n        if (typeof iterator.return === 'function') {\n            subscriber.add(function () {\n                if (iterator.return) {\n                    iterator.return();\n                }\n            });\n        }\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToIterable.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeToObservable = function (obj) {\n    return function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            throw new TypeError('Provided object does not correctly implement Symbol.observable');\n        }\n        else {\n            return obs.subscribe(subscriber);\n        }\n    };\n};\n//# sourceMappingURL=subscribeToObservable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map\n","/** PURE_IMPORTS_START _Observable,_subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeTo = function (result) {\n    if (result instanceof Observable) {\n        return function (subscriber) {\n            if (result._isScalar) {\n                subscriber.next(result.value);\n                subscriber.complete();\n                return undefined;\n            }\n            else {\n                return result.subscribe(subscriber);\n            }\n        };\n    }\n    else if (result && typeof result[Symbol_observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (result && typeof result[Symbol_iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\nvar OuterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\nexport { OuterSubscriber };\n//# sourceMappingURL=OuterSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var i = 0;\n            sub.add(scheduler.schedule(function () {\n                if (i === input.length) {\n                    subscriber.complete();\n                    return;\n                }\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    sub.add(this.schedule());\n                }\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromArray.js.map\n","/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(mergeMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };\n}\nvar MergeMapOperator = /*@__PURE__*/ (function () {\n    function MergeMapOperator(project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexport { MergeMapOperator };\nvar MergeMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        subscribeToResult(this, ish, value, index, innerSubscriber);\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber));\nexport { MergeMapSubscriber };\n//# sourceMappingURL=mergeMap.js.map\n","/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo PURE_IMPORTS_END */\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeTo } from './subscribeTo';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, destination) {\n    if (destination === void 0) {\n        destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    }\n    if (destination.closed) {\n        return;\n    }\n    return subscribeTo(result)(destination);\n}\n//# sourceMappingURL=subscribeToResult.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=refCount.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nvar ConnectableObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subjectFactory = subjectFactory;\n        _this._refCount = 0;\n        _this._isComplete = false;\n        return _this;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return higherOrderRefCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\nexport { ConnectableObservable };\nvar connectableProto = ConnectableObservable.prototype;\nexport var connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber));\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map\n","/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\nexport function share() {\n    return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };\n}\n//# sourceMappingURL=share.js.map\n","/**\n * @license Angular v7.2.0\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { __decorate, __metadata, __spread, __extends, __param, __read, __assign, __values } from 'tslib';\nimport { Subject, Subscription, Observable, merge } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param target The target to set properties on\n * @param source The source of the property keys and values to set\n */\nfunction fillProperties(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n            target[key] = source[key];\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\nvar NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\nvar NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\nvar NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\nvar NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\nvar NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\nvar NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n/**\n * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nvar NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @publicApi\n */\nfunction defineInjectable(opts) {\n    return {\n        providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n    };\n}\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @publicApi\n */\nfunction defineInjector(options) {\n    return {\n        factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n    };\n}\n/**\n * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have `ngInjectableDef`\n */\nfunction getInjectableDef(type) {\n    return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n}\n/**\n * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have `ngInjectorDef`\n */\nfunction getInjectorDef(type) {\n    return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Example\n *\n * ### Plain InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n *\n * @publicApi\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /** @internal */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            this.ngInjectableDef = undefined;\n        }\n    }\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__parameters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n */\nfunction makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n    var metaCtor = makeMetadataCtor(props);\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, __spread([this], args));\n            return this;\n        }\n        var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        return function TypeDecorator(cls) {\n            if (typeFn)\n                typeFn.apply(void 0, __spread([cls], args));\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                cls[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            if (additionalProcessing)\n                additionalProcessing(cls);\n            return cls;\n        };\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    DecoratorFactory.annotationCls = DecoratorFactory;\n    return DecoratorFactory;\n}\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var values = props.apply(void 0, __spread(args));\n            for (var propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\nfunction makeParamDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        ParamDecorator.annotation = annotationInstance;\n        return ParamDecorator;\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                cls[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\nfunction makePropDecorator(name, props, parentClass, additionalProcessing) {\n    var metaCtor = makeMetadataCtor(props);\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        function PropDecorator(target, name) {\n            var constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                constructor[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n            if (additionalProcessing)\n                additionalProcessing.apply(void 0, __spread([target, name], args));\n        }\n        return PropDecorator;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * @usageNotes\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @publicApi\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n *\n * @publicApi\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * ContentChildren decorator and metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n *\n * @publicApi\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The strategy that the default change detector uses to detect changes.\n * When set, takes effect the next time change detection is triggered.\n *\n * @publicApi\n */\nvar ChangeDetectionStrategy;\n(function (ChangeDetectionStrategy) {\n    /**\n     * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n     * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n     * Change detection can still be explicitly invoked.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * Use the default `CheckAlways` strategy, in which change detection is automatic until\n     * explicitly deactivated.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(ChangeDetectionStrategy || (ChangeDetectionStrategy = {}));\n/**\n * Defines the possible states of the default change detector.\n * @see `ChangeDetectorRef`\n */\nvar ChangeDetectorStatus;\n(function (ChangeDetectorStatus) {\n    /**\n     * A state in which, after calling `detectChanges()`, the change detector\n     * state becomes `Checked`, and must be explicitly invoked or reactivated.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n    /**\n     * A state in which change detection is skipped until the change detector mode\n     * becomes `CheckOnce`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n    /**\n     * A state in which change detection continues automatically until explicitly\n     * deactivated.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n    /**\n     * A state in which a change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n    /**\n     * Indicates that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state do not detect changes.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n    /**\n     * Indicates that the change detector has been destroyed.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n})(ChangeDetectorStatus || (ChangeDetectorStatus = {}));\n/**\n * Reports whether a given strategy is currently the default for change detection.\n * @param changeDetectionStrategy The strategy to check.\n * @returns True if the given strategy is the current default, false otherwise.\n * @see `ChangeDetectorStatus`\n * @see `ChangeDetectorRef`\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nvar _global = __global || __window || __self;\nvar promise = Promise.resolve(0);\nvar _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n// JS has NaN !== NaN\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Convince closure compiler that the wrapped function has no side-effects.\n *\n * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n * It is important that the return value for the `noSideEffects` function be assigned\n * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n * compiler.\n */\nfunction noSideEffects(fn) {\n    return '' + { toString: fn };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @publicApi\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () { return stringify(this()); };\n    return forwardRefFn;\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @publicApi\n */\nfunction resolveForwardRef(type) {\n    var fn = type;\n    if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n        fn.__forward_ref__ === forwardRef) {\n        return fn();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * @Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponnent{\n * }\n *\n * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n * // needs to be resolved because `renderComponent` is synchronous process.\n * // renderComponent(MyComponent);\n *\n * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n * // Use browser's `fetch` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n * URL. Browser's `fetch` method is a good default implementation.\n */\nfunction resolveComponentResources(resourceResolver) {\n    // Store all promises which are fetching the resources.\n    var urlFetches = [];\n    // Cache so that we don't fetch the same resource more than once.\n    var urlMap = new Map();\n    function cachedResourceResolve(url) {\n        var promise = urlMap.get(url);\n        if (!promise) {\n            var resp = resourceResolver(url);\n            urlMap.set(url, promise = resp.then(unwrapResponse));\n            urlFetches.push(promise);\n        }\n        return promise;\n    }\n    componentResourceResolutionQueue.forEach(function (component) {\n        if (component.templateUrl) {\n            cachedResourceResolve(component.templateUrl).then(function (template) {\n                component.template = template;\n                component.templateUrl = undefined;\n            });\n        }\n        var styleUrls = component.styleUrls;\n        var styles = component.styles || (component.styles = []);\n        var styleOffset = component.styles.length;\n        styleUrls && styleUrls.forEach(function (styleUrl, index) {\n            styles.push(''); // pre-allocate array.\n            cachedResourceResolve(styleUrl).then(function (style) {\n                styles[styleOffset + index] = style;\n                styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                if (styleUrls.length == 0) {\n                    component.styleUrls = undefined;\n                }\n            });\n        });\n    });\n    componentResourceResolutionQueue.clear();\n    return Promise.all(urlFetches).then(function () { return null; });\n}\nvar componentResourceResolutionQueue = new Set();\nfunction maybeQueueResolutionOfComponentResources(metadata) {\n    if (componentNeedsResolution(metadata)) {\n        componentResourceResolutionQueue.add(metadata);\n    }\n}\nfunction componentNeedsResolution(component) {\n    return component.templateUrl || component.styleUrls && component.styleUrls.length;\n}\nfunction unwrapResponse(response) {\n    return typeof response == 'string' ? response : response.text();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/ts/metadata/encapsulation.ts region='longform'}\n *\n * @publicApi\n */\nvar ViewEncapsulation;\n(function (ViewEncapsulation) {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n     * selectors.\n     *\n     * This is the default option.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    /**\n     * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using the deprecated [Shadow DOM\n     * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    /**\n     * Use Shadow DOM to encapsulate styles.\n     *\n     * For the DOM this means using modern [Shadow\n     * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n})(ViewEncapsulation || (ViewEncapsulation = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngDevModeResetPerfCounters() {\n    var newCounters = {\n        firstTemplatePass: 0,\n        tNode: 0,\n        tView: 0,\n        rendererCreateTextNode: 0,\n        rendererSetText: 0,\n        rendererCreateElement: 0,\n        rendererAddEventListener: 0,\n        rendererSetAttribute: 0,\n        rendererRemoveAttribute: 0,\n        rendererSetProperty: 0,\n        rendererSetClassName: 0,\n        rendererAddClass: 0,\n        rendererRemoveClass: 0,\n        rendererSetStyle: 0,\n        rendererRemoveStyle: 0,\n        rendererDestroy: 0,\n        rendererDestroyNode: 0,\n        rendererMoveNode: 0,\n        rendererRemoveNode: 0,\n        rendererCreateComment: 0,\n    };\n    // NOTE: Under Ivy we may have both window & global defined in the Node\n    //    environment since ensureDocument() in render3.ts sets global.window.\n    if (typeof window != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        window['ngDevMode'] = newCounters;\n    }\n    if (typeof global != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        global['ngDevMode'] = newCounters;\n    }\n    if (typeof self != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        self['ngDevMode'] = newCounters;\n    }\n    return newCounters;\n}\n/**\n * This checks to see if the `ngDevMode` has been set. If yes,\n * than we honor it, otherwise we default to dev mode with additional checks.\n *\n * The idea is that unless we are doing production build where we explicitly\n * set `ngDevMode == false` we should be helping the developer by providing\n * as much early warning and errors as possible.\n */\nif (typeof ngDevMode === 'undefined' || ngDevMode) {\n    ngDevModeResetPerfCounters();\n}\n\n/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n/**\n * This file contains reuseable \"empty\" symbols that can be used as default return values\n * in different parts of the rendering code. Because the same symbols are returned, this\n * allows for identity checks against these values to be consistently used by the framework\n * code.\n */\nvar EMPTY_OBJ = {};\nvar EMPTY_ARRAY = [];\n// freezing the values prevents any code from accidentally inserting new values in\nif (typeof ngDevMode !== 'undefined' && ngDevMode) {\n    Object.freeze(EMPTY_OBJ);\n    Object.freeze(EMPTY_ARRAY);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _renderCompCount = 0;\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n */\nfunction defineComponent(componentDefinition) {\n    var type = componentDefinition.type;\n    var typePrototype = type.prototype;\n    var declaredInputs = {};\n    var def = {\n        type: type,\n        providersResolver: null,\n        consts: componentDefinition.consts,\n        vars: componentDefinition.vars,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || null,\n        hostBindings: componentDefinition.hostBindings || null,\n        contentQueries: componentDefinition.contentQueries || null,\n        contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n        attributes: componentDefinition.attributes || null,\n        declaredInputs: declaredInputs,\n        inputs: null,\n        outputs: null,\n        exportAs: componentDefinition.exportAs || null,\n        onInit: typePrototype.ngOnInit || null,\n        doCheck: typePrototype.ngDoCheck || null,\n        afterContentInit: typePrototype.ngAfterContentInit || null,\n        afterContentChecked: typePrototype.ngAfterContentChecked || null,\n        afterViewInit: typePrototype.ngAfterViewInit || null,\n        afterViewChecked: typePrototype.ngAfterViewChecked || null,\n        onDestroy: typePrototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === ChangeDetectionStrategy.OnPush,\n        directiveDefs: null,\n        pipeDefs: null,\n        selectors: componentDefinition.selectors,\n        viewQuery: componentDefinition.viewQuery || null,\n        features: componentDefinition.features || null,\n        data: componentDefinition.data || {},\n        // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n        // next line. Also `None` should be 0 not 2.\n        encapsulation: componentDefinition.encapsulation || ViewEncapsulation.Emulated,\n        id: 'c',\n        styles: componentDefinition.styles || EMPTY_ARRAY,\n        _: null,\n    };\n    def._ = noSideEffects(function () {\n        var directiveTypes = componentDefinition.directives;\n        var feature = componentDefinition.features;\n        var pipeTypes = componentDefinition.pipes;\n        def.id += _renderCompCount++;\n        def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n            def.outputs = invertObject(componentDefinition.outputs),\n            feature && feature.forEach(function (fn) { return fn(def); });\n        def.directiveDefs = directiveTypes ?\n            function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef); } :\n            null;\n        def.pipeDefs = pipeTypes ?\n            function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n            null;\n    });\n    return def;\n}\nfunction extractDirectiveDef(type) {\n    var def = getComponentDef(type) || getDirectiveDef(type);\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n    }\n    return def;\n}\nfunction extractPipeDef(type) {\n    var def = getPipeDef(type);\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n    }\n    return def;\n}\nfunction defineNgModule(def) {\n    var res = {\n        type: def.type,\n        bootstrap: def.bootstrap || EMPTY_ARRAY,\n        declarations: def.declarations || EMPTY_ARRAY,\n        imports: def.imports || EMPTY_ARRAY,\n        exports: def.exports || EMPTY_ARRAY,\n        transitiveCompileScopes: null,\n    };\n    return res;\n}\n/**\n * Inverts an inputs or outputs lookup such that the keys, which were the\n * minified keys, are part of the values, and the values are parsed so that\n * the publicName of the property is the new key\n *\n * e.g. for\n *\n * ```\n * class Comp {\n *   @Input()\n *   propName1: string;\n *\n *   @Input('publicName2')\n *   declaredPropName2: number;\n * }\n * ```\n *\n * will be serialized as\n *\n * ```\n * {\n *   propName1: 'propName1',\n *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n * }\n * ```\n *\n * which is than translated by the minifier as:\n *\n * ```\n * {\n *   minifiedPropName1: 'propName1',\n *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n * }\n * ```\n *\n * becomes: (public name => minifiedName)\n *\n * ```\n * {\n *  'propName1': 'minifiedPropName1',\n *  'publicName2': 'minifiedPropName2',\n * }\n * ```\n *\n * Optionally the function can take `secondary` which will result in: (public name => declared name)\n *\n * ```\n * {\n *  'propName1': 'propName1',\n *  'publicName2': 'declaredPropName2',\n * }\n * ```\n *\n\n */\nfunction invertObject(obj, secondary) {\n    if (obj == null)\n        return EMPTY_OBJ;\n    var newLookup = {};\n    for (var minifiedKey in obj) {\n        if (obj.hasOwnProperty(minifiedKey)) {\n            var publicName = obj[minifiedKey];\n            var declaredName = publicName;\n            if (Array.isArray(publicName)) {\n                declaredName = publicName[1];\n                publicName = publicName[0];\n            }\n            newLookup[publicName] = minifiedKey;\n            if (secondary) {\n                (secondary[publicName] = declaredName);\n            }\n        }\n    }\n    return newLookup;\n}\n/**\n * Create a base definition\n *\n * # Example\n * ```\n * class ShouldBeInherited {\n *   static ngBaseDef = defineBase({\n *      ...\n *   })\n * }\n * @param baseDefinition The base definition parameters\n */\nfunction defineBase(baseDefinition) {\n    var declaredInputs = {};\n    return {\n        inputs: invertObject(baseDefinition.inputs, declaredInputs),\n        declaredInputs: declaredInputs,\n        outputs: invertObject(baseDefinition.outputs),\n    };\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nvar defineDirective = defineComponent;\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n */\nfunction definePipe(pipeDef) {\n    return {\n        name: pipeDef.name,\n        factory: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    };\n}\n/**\n * The following getter methods retrieve the definition form the type. Currently the retrieval\n * honors inheritance, but in the future we may change the rule to require that definitions are\n * explicit. This would require some sort of migration strategy.\n */\nfunction getComponentDef(type) {\n    return type[NG_COMPONENT_DEF] || null;\n}\nfunction getDirectiveDef(type) {\n    return type[NG_DIRECTIVE_DEF] || null;\n}\nfunction getPipeDef(type) {\n    return type[NG_PIPE_DEF] || null;\n}\nfunction getNgModuleDef(type, throwNotFound) {\n    var ngModuleDef = type[NG_MODULE_DEF] || null;\n    if (!ngModuleDef && throwNotFound === true) {\n        throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n    }\n    return ngModuleDef;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\nfunction assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\nfunction assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\nfunction assertComponentType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n    if (!getComponentDef(actual)) {\n        throwError(msg);\n    }\n}\nfunction assertNgModuleType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n    if (!getNgModuleDef(actual)) {\n        throwError(msg);\n    }\n}\nfunction throwError(msg) {\n    // tslint:disable-next-line\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\nfunction assertDomNode(node) {\n    assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n}\nfunction assertPreviousIsParent(isParent) {\n    assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n}\nfunction assertHasParent(tNode) {\n    assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n}\nfunction assertDataInRange(arr, index) {\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Below are constants for LView indices to help us look up LView members\n// without having to remember the specific indices.\n// Uglify will inline these when minifying so there shouldn't be a cost.\nvar TVIEW = 0;\nvar FLAGS = 1;\nvar PARENT = 2;\nvar NEXT = 3;\nvar QUERIES = 4;\nvar HOST = 5;\nvar HOST_NODE = 6; // Rename to `T_HOST`?\nvar BINDING_INDEX = 7;\nvar CLEANUP = 8;\nvar CONTEXT = 9;\nvar INJECTOR = 10;\nvar RENDERER_FACTORY = 11;\nvar RENDERER = 12;\nvar SANITIZER = 13;\nvar TAIL = 14;\nvar CONTAINER_INDEX = 15;\nvar CONTENT_QUERIES = 16;\nvar DECLARATION_VIEW = 17;\n/** Size of LView's header. Necessary to adjust for it when setting slots.  */\nvar HEADER_OFFSET = 18;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n */\nvar ACTIVE_INDEX = 0;\nvar VIEWS = 1;\n// PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n// As we already have these constants in LView, we don't need to re-create them.\nvar NATIVE = 6;\nvar RENDER_PARENT = 7;\n// Because interfaces in TS/JS cannot be instanceof-checked this means that we\n// need to rely on predictable characteristics of data-structures to check if they\n// are what we expect for them to be. The `LContainer` interface code below has a\n// fixed length and the constant value below references that. Using the length value\n// below we can predictably gaurantee that we are dealing with an `LContainer` array.\n// This value MUST be kept up to date with the length of the `LContainer` array\n// interface below so that runtime type checking can work.\nvar LCONTAINER_LENGTH = 8;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This property will be monkey-patched on elements, components and directives\n */\nvar MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TNODE = 8;\nvar PARENT_INJECTOR = 8;\nvar INJECTOR_BLOOM_PARENT_SIZE = 9;\nvar NO_PARENT_INJECTOR = -1;\n/**\n * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n * `TView.data`. This allows us to store information about the current node's tokens (which\n * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n * shared, so they live in `LView`).\n *\n * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n * determines whether a directive is available on the associated node or not. This prevents us\n * from searching the directives array at this level unless it's probable the directive is in it.\n *\n * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n *\n * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n * will differ based on where it is flattened into the main array, so it's not possible to know\n * the indices ahead of time and save their types here. The interfaces are still included here\n * for documentation purposes.\n *\n * export interface LInjector extends Array<any> {\n *\n *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Cumulative bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Cumulative bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Cumulative bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Cumulative bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Cumulative bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Cumulative bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Cumulative bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // We need to store a reference to the injector's parent so DI can keep looking up\n *    // the injector tree until it finds the dependency it's looking for.\n *    [PARENT_INJECTOR]: number;\n * }\n *\n * export interface TInjector extends Array<any> {\n *\n *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Shared node bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Shared node bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Shared node bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Shared node bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Shared node bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Shared node bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Shared node bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // Necessary to find directive indices for a particular node.\n *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n *  }\n */\n/**\n* Factory for creating instances of injectors in the NodeInjector.\n*\n* This factory is complicated by the fact that it can resolve `multi` factories as well.\n*\n* NOTE: Some of the fields are optional which means that this class has two hidden classes.\n* - One without `multi` support (most common)\n* - One with `multi` values, (rare).\n*\n* Since VMs can cache up to 4 inline hidden classes this is OK.\n*\n* - Single factory: Only `resolving` and `factory` is defined.\n* - `providers` factory: `componentProviders` is a number and `index = -1`.\n* - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n*/\nvar NodeInjectorFactory = /** @class */ (function () {\n    function NodeInjectorFactory(\n    /**\n     * Factory to invoke in order to create a new instance.\n     */\n    factory, \n    /**\n     * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n     */\n    isViewProvider, injectImplementation) {\n        this.factory = factory;\n        /**\n         * Marker set to true during factory invocation to see if we get into recursive loop.\n         * Recursive loop causes an error to be displayed.\n         */\n        this.resolving = false;\n        this.canSeeViewProviders = isViewProvider;\n        this.injectImpl = injectImplementation;\n    }\n    return NodeInjectorFactory;\n}());\nvar FactoryPrototype = NodeInjectorFactory.prototype;\nfunction isFactory(obj) {\n    // See: https://jsperf.com/instanceof-vs-getprototypeof\n    return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns whether the values are different from a change detection stand point.\n *\n * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n */\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    if (typeof value == 'object' && typeof value.type == 'function')\n        return value.type.name || value.type;\n    return '' + value;\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n */\nfunction flatten(list) {\n    var result = [];\n    var i = 0;\n    while (i < list.length) {\n        var item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n/** Retrieves a value from any `LView` or `TData`. */\nfunction loadInternal(view, index) {\n    ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n    return view[index + HEADER_OFFSET];\n}\n/**\n * Takes the value of a slot in `LView` and returns the element node.\n *\n * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n * it might be wrapped in a styling context. Or if that node has a directive that injects\n * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n * it will be wrapped in LView. It could even have all three, so we keep looping\n * until we find something that isn't an array.\n *\n * @param value The initial value in `LView`\n */\nfunction readElementValue(value) {\n    while (Array.isArray(value)) {\n        value = value[HOST];\n    }\n    return value;\n}\n/**\n * Retrieves an element value from the provided `viewData`, by unwrapping\n * from any containers, component views, or style contexts.\n */\nfunction getNativeByIndex(index, lView) {\n    return readElementValue(lView[index + HEADER_OFFSET]);\n}\nfunction getNativeByTNode(tNode, hostView) {\n    return readElementValue(hostView[tNode.index]);\n}\nfunction getTNode(index, view) {\n    ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n    ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n    return view[TVIEW].data[index + HEADER_OFFSET];\n}\nfunction getComponentViewByIndex(nodeIndex, hostView) {\n    // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n    var slotValue = hostView[nodeIndex];\n    return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n}\nfunction isContentQueryHost(tNode) {\n    return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n}\nfunction isComponent(tNode) {\n    return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n}\nfunction isComponentDef(def) {\n    return def.template !== null;\n}\nfunction isLContainer(value) {\n    // Styling contexts are also arrays, but their first index contains an element node\n    return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n}\nfunction isRootView(target) {\n    return (target[FLAGS] & 128 /* IsRoot */) !== 0;\n}\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootView(target) {\n    ngDevMode && assertDefined(target, 'component');\n    var lView = Array.isArray(target) ? target : readPatchedLView(target);\n    while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n        lView = lView[PARENT];\n    }\n    return lView;\n}\nfunction getRootContext(viewOrComponent) {\n    var rootView = getRootView(viewOrComponent);\n    ngDevMode &&\n        assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n    return rootView[CONTEXT];\n}\n/**\n * Returns the monkey-patch value data present on the target (which could be\n * a component, directive or a DOM node).\n */\nfunction readPatchedData(target) {\n    ngDevMode && assertDefined(target, 'Target expected');\n    return target[MONKEY_PATCH_KEY_NAME];\n}\nfunction readPatchedLView(target) {\n    var value = readPatchedData(target);\n    if (value) {\n        return Array.isArray(value) ? value : value.lView;\n    }\n    return null;\n}\nfunction hasParentInjector(parentLocation) {\n    return parentLocation !== NO_PARENT_INJECTOR;\n}\nfunction getParentInjectorIndex(parentLocation) {\n    return parentLocation & 32767 /* InjectorIndexMask */;\n}\nfunction getParentInjectorViewOffset(parentLocation) {\n    return parentLocation >> 16 /* ViewOffsetShift */;\n}\n/**\n * Unwraps a parent injector location number to find the view offset from the current injector,\n * then walks up the declaration view tree until the view is found that contains the parent\n * injector.\n *\n * @param location The location of the parent injector, which contains the view offset\n * @param startView The LView instance from which to start walking up the view tree\n * @returns The LView instance that contains the parent injector\n */\nfunction getParentInjectorView(location, startView) {\n    var viewOffset = getParentInjectorViewOffset(location);\n    var parentView = startView;\n    // For most cases, the parent injector can be found on the host node (e.g. for component\n    // or container), but we must keep the loop here to support the rarer case of deeply nested\n    // <ng-template> tags or inline views, where the parent injector might live many views\n    // above the child injector.\n    while (viewOffset > 0) {\n        parentView = parentView[DECLARATION_VIEW];\n        viewOffset--;\n    }\n    return parentView;\n}\n/**\n * Unwraps a parent injector location number to find the view offset from the current injector,\n * then walks up the declaration view tree until the TNode of the parent injector is found.\n *\n * @param location The location of the parent injector, which contains the view offset\n * @param startView The LView instance from which to start walking up the view tree\n * @param startTNode The TNode instance of the starting element\n * @returns The TNode of the parent injector\n */\nfunction getParentInjectorTNode(location, startView, startTNode) {\n    if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n        // view offset is 0\n        var injectorIndex = startTNode.parent.injectorIndex;\n        var parentTNode_1 = startTNode.parent;\n        while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n            parentTNode_1 = parentTNode_1.parent;\n        }\n        return parentTNode_1;\n    }\n    var viewOffset = getParentInjectorViewOffset(location);\n    // view offset is 1\n    var parentView = startView;\n    var parentTNode = startView[HOST_NODE];\n    // view offset is superior to 1\n    while (viewOffset > 1) {\n        parentView = parentView[DECLARATION_VIEW];\n        parentTNode = parentView[HOST_NODE];\n        viewOffset--;\n    }\n    return parentTNode;\n}\nvar defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n    setTimeout // everything else\n).bind(_global);\n/**\n * Equivalent to ES6 spread, add each item to an array.\n *\n * @param items The items to add\n * @param arr The array to which you want to add the items\n */\nfunction addAllToArray(items, arr) {\n    for (var i = 0; i < items.length; i++) {\n        arr.push(items[i]);\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param lView LView for which we want a host element node\n * @returns The host node\n */\nfunction findComponentView(lView) {\n    var rootTNode = lView[HOST_NODE];\n    while (rootTNode && rootTNode.type === 2 /* View */) {\n        ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n        lView = lView[DECLARATION_VIEW];\n        rootTNode = lView[HOST_NODE];\n    }\n    return lView;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar R3ResolvedDependencyType;\n(function (R3ResolvedDependencyType) {\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n})(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getCompilerFacade() {\n    var globalNg = _global.ng;\n    if (!globalNg || !globalNg.ɵcompilerFacade) {\n        throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n            \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n            \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n            \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n    }\n    return globalNg.ɵcompilerFacade;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Self = makeParamDecorator('Self');\n/**\n * SkipSelf decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection flags for DI.\n *\n * @publicApi\n */\nvar InjectFlags;\n(function (InjectFlags) {\n    // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n    InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n    /**\n     * Specifies that an injector should retrieve a dependency from any injector until reaching the\n     * host element of the current component. (Only used with Element Injector)\n     */\n    InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n    /** Don't descend into ancestors of the node requesting injection. */\n    InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n    /** Skip the node that is requesting injection. */\n    InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n    /** Inject `defaultValue` instead if token not found. */\n    InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n})(InjectFlags || (InjectFlags = {}));\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nvar _currentInjector = undefined;\nfunction setCurrentInjector(injector) {\n    var former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\n/**\n * Current implementation of inject.\n *\n * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n * way for two reasons:\n *  1. `Injector` should not depend on ivy logic.\n *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n */\nvar _injectImplementation;\n/**\n * Sets the current inject implementation.\n */\nfunction setInjectImplementation(impl) {\n    var previous = _injectImplementation;\n    _injectImplementation = impl;\n    return previous;\n}\nfunction injectInjectorOnly(token, flags) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    if (_currentInjector === undefined) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    else if (_currentInjector === null) {\n        return injectRootLimpMode(token, undefined, flags);\n    }\n    else {\n        return _currentInjector.get(token, flags & InjectFlags.Optional ? null : undefined, flags);\n    }\n}\nfunction inject(token, flags) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    return (_injectImplementation || injectInjectorOnly)(token, flags);\n}\n/**\n * Injects `root` tokens in limp mode.\n *\n * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n * `InjectableDef`.\n */\nfunction injectRootLimpMode(token, notFoundValue, flags) {\n    var injectableDef = getInjectableDef(token);\n    if (injectableDef && injectableDef.providedIn == 'root') {\n        return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n            injectableDef.value;\n    }\n    if (flags & InjectFlags.Optional)\n        return null;\n    if (notFoundValue !== undefined)\n        return notFoundValue;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n}\nfunction injectArgs(types) {\n    var args = [];\n    for (var i = 0; i < types.length; i++) {\n        var arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            var type = undefined;\n            var flags = InjectFlags.Default;\n            for (var j = 0; j < arg.length; j++) {\n                var meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                    flags |= InjectFlags.Optional;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                    flags |= InjectFlags.SkipSelf;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                    flags |= InjectFlags.Self;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(type, flags));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertNodeType(tNode, type) {\n    assertDefined(tNode, 'should be called with a TNode');\n    assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n}\nfunction assertNodeOfPossibleTypes(tNode) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertDefined(tNode, 'should be called with a TNode');\n    var found = types.some(function (type) { return tNode.type === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n}\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    if (type == 4 /* ElementContainer */)\n        return 'ElementContainer';\n    return '<unknown>';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param index The index of the directive in LView\n * @param hooks The static hooks map on the directive def\n * @param tView The current TView\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n */\nfunction queueLifecycleHooks(tView, tNode) {\n    if (tView.firstTemplatePass) {\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var def = tView.data[i];\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/** Queues afterContentInit and afterContentChecked hooks on TView */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/** Queues afterViewInit and afterViewChecked hooks on TView */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/** Queues onDestroy hooks on TView */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param currentView The current view\n */\nfunction executeInitHooks(currentView, tView, checkNoChangesMode) {\n    if (!checkNoChangesMode && currentView[FLAGS] & 32 /* RunInit */) {\n        executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\n        currentView[FLAGS] &= ~32 /* RunInit */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param currentView The current view\n */\nfunction executeHooks(currentView, allHooks, checkHooks, checkNoChangesMode) {\n    if (checkNoChangesMode)\n        return;\n    var hooksToCall = currentView[FLAGS] & 2 /* FirstLViewPass */ ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(currentView, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * the first LView pass.\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n */\nfunction callHooks(currentView, arr) {\n    for (var i = 0; i < arr.length; i += 2) {\n        arr[i + 1].call(currentView[arr[i]]);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store the element depth count. This is used to identify the root elements of the template\n * so that we can than attach `LView` to only those elements.\n */\nvar elementDepthCount;\nfunction getElementDepthCount() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return elementDepthCount;\n}\nfunction increaseElementDepthCount() {\n    elementDepthCount++;\n}\nfunction decreaseElementDepthCount() {\n    elementDepthCount--;\n}\nvar currentDirectiveDef = null;\nfunction getCurrentDirectiveDef() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return currentDirectiveDef;\n}\nfunction setCurrentDirectiveDef(def) {\n    currentDirectiveDef = def;\n}\n/**\n * Stores whether directives should be matched to elements.\n *\n * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n * directives on children of that element.\n *\n * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n * </div>\n * ```\n */\nvar bindingsEnabled;\nfunction getBindingsEnabled() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return bindingsEnabled;\n}\n/**\n * Enables directive matching on elements.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- disabledBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- enableBindings() -->\n * </div>\n * ```\n */\nfunction enableBindings() {\n    bindingsEnabled = true;\n}\n/**\n * Disables directive matching on element.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- disabledBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- enableBindings() -->\n * </div>\n * ```\n */\nfunction disableBindings() {\n    bindingsEnabled = false;\n}\nfunction getLView() {\n    return lView;\n}\n/**\n * Restores `contextViewData` to the given OpaqueViewState instance.\n *\n * Used in conjunction with the getCurrentView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n *\n * @param viewToRestore The OpaqueViewState instance to restore.\n */\nfunction restoreView(viewToRestore) {\n    contextLView = viewToRestore;\n}\n/** Used to set the parent property when nodes are created and track query results. */\nvar previousOrParentTNode;\nfunction getPreviousOrParentTNode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return previousOrParentTNode;\n}\nfunction setPreviousOrParentTNode(tNode) {\n    previousOrParentTNode = tNode;\n}\nfunction setTNodeAndViewData(tNode, view) {\n    previousOrParentTNode = tNode;\n    lView = view;\n}\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentTNode` points to a parent node.\n *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n */\nvar isParent;\nfunction getIsParent() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return isParent;\n}\nfunction setIsParent(value) {\n    isParent = value;\n}\n/**\n * Query instructions can ask for \"current queries\" in 2 different cases:\n * - when creating view queries (at the root of a component view, before any node is created - in\n * this case currentQueries points to view queries)\n * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n * create content queries).\n */\nfunction getOrCreateCurrentQueries(QueryType) {\n    var lView = getLView();\n    var currentQueries = lView[QUERIES];\n    // if this is the first content query on a node, any existing LQueries needs to be cloned\n    // in subsequent template passes, the cloning occurs before directive instantiation.\n    if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n        !isContentQueryHost(previousOrParentTNode)) {\n        currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n        previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n    }\n    return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n}\n/** Checks whether a given view is in creation mode */\nfunction isCreationMode(view) {\n    if (view === void 0) { view = lView; }\n    return (view[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n}\n/**\n * State of the current view being processed.\n *\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar lView;\n/**\n * The last viewData retrieved by nextContext().\n * Allows building nextContext() and reference() calls.\n *\n * e.g. const inner = x().$implicit; const outer = x().$implicit;\n */\nvar contextLView = null;\nfunction getContextLView() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return contextLView;\n}\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nvar checkNoChangesMode = false;\nfunction getCheckNoChangesMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return checkNoChangesMode;\n}\nfunction setCheckNoChangesMode(mode) {\n    checkNoChangesMode = mode;\n}\n/** Whether or not this is the first time the current view has been processed. */\nvar firstTemplatePass = true;\nfunction getFirstTemplatePass() {\n    return firstTemplatePass;\n}\nfunction setFirstTemplatePass(value) {\n    firstTemplatePass = value;\n}\n/**\n * The root index from which pure function instructions should calculate their binding\n * indices. In component views, this is TView.bindingStartIndex. In a host binding\n * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n */\nvar bindingRootIndex = -1;\n// top level variables should not be exported for performance reasons (PERF_NOTES.md)\nfunction getBindingRoot() {\n    return bindingRootIndex;\n}\nfunction setBindingRoot(value) {\n    bindingRootIndex = value;\n}\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nfunction enterView(newView, hostTNode) {\n    var oldView = lView;\n    if (newView) {\n        var tView = newView[TVIEW];\n        firstTemplatePass = tView.firstTemplatePass;\n        bindingRootIndex = tView.bindingStartIndex;\n    }\n    previousOrParentTNode = hostTNode;\n    isParent = true;\n    lView = contextLView = newView;\n    return oldView;\n}\nfunction nextContextImpl(level) {\n    if (level === void 0) { level = 1; }\n    contextLView = walkUpViews(level, contextLView);\n    return contextLView[CONTEXT];\n}\nfunction walkUpViews(nestingLevel, currentView) {\n    while (nestingLevel > 0) {\n        ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n        currentView = currentView[DECLARATION_VIEW];\n        nestingLevel--;\n    }\n    return currentView;\n}\n/**\n * Resets the application state.\n */\nfunction resetComponentState() {\n    isParent = false;\n    previousOrParentTNode = null;\n    elementDepthCount = 0;\n    bindingsEnabled = true;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param newView New state to become active\n */\nfunction leaveView(newView) {\n    var tView = lView[TVIEW];\n    if (isCreationMode(lView)) {\n        lView[FLAGS] &= ~1 /* CreationMode */;\n    }\n    else {\n        executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\n        // Views are clean and in update mode after being checked, so these bits are cleared\n        lView[FLAGS] &= ~(8 /* Dirty */ | 2 /* FirstLViewPass */);\n        lView[FLAGS] |= 32 /* RunInit */;\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    enterView(newView, null);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines if the call to `inject` should include `viewProviders` in its resolution.\n *\n * This is set to true when we try to instantiate a component. This value is reset in\n * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n * instantiated. This is done so that if we are injecting a token which was declared outside of\n * `viewProviders` we don't accidentally pull `viewProviders` in.\n *\n * Example:\n *\n * ```\n * @Injectable()\n * class MyService {\n *   constructor(public value: String) {}\n * }\n *\n * @Component({\n *   providers: [\n *     MyService,\n *     {provide: String, value: 'providers' }\n *   ]\n *   viewProviders: [\n *     {provide: String, value: 'viewProviders'}\n *   ]\n * })\n * class MyComponent {\n *   constructor(myService: MyService, value: String) {\n *     // We expect that Component can see into `viewProviders`.\n *     expect(value).toEqual('viewProviders');\n *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n *     expect(myService.value).toEqual('providers');\n *   }\n * }\n *\n * ```\n */\nvar includeViewProviders = true;\nfunction setIncludeViewProviders(v) {\n    var oldValue = includeViewProviders;\n    includeViewProviders = v;\n    return oldValue;\n}\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nvar BLOOM_SIZE = 256;\nvar BLOOM_MASK = BLOOM_SIZE - 1;\n/** Counter used to generate unique IDs for directives. */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injectorIndex The index of the node injector where this token should be registered\n * @param tView The TView for the injector's bloom filters\n * @param type The directive token to register\n */\nfunction bloomAdd(injectorIndex, tView, type) {\n    ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n    var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = type[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n    var bloomBit = id & BLOOM_MASK;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    var b7 = bloomBit & 0x80;\n    var b6 = bloomBit & 0x40;\n    var b5 = bloomBit & 0x20;\n    var tData = tView.data;\n    if (b7) {\n        b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n            (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n    }\n    else {\n        b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n            (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n    }\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param tNode for which an injector should be retrieved / created.\n * @param hostView View where the node is stored\n * @returns Node injector\n */\nfunction getOrCreateNodeInjectorForNode(tNode, hostView) {\n    var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n    if (existingInjectorIndex !== -1) {\n        return existingInjectorIndex;\n    }\n    var tView = hostView[TVIEW];\n    if (tView.firstTemplatePass) {\n        tNode.injectorIndex = hostView.length;\n        insertBloom(tView.data, tNode); // foundation for node bloom\n        insertBloom(hostView, null); // foundation for cumulative bloom\n        insertBloom(tView.blueprint, null);\n        ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n    }\n    var parentLoc = getParentInjectorLocation(tNode, hostView);\n    var parentIndex = getParentInjectorIndex(parentLoc);\n    var parentLView = getParentInjectorView(parentLoc, hostView);\n    var injectorIndex = tNode.injectorIndex;\n    // If a parent injector can't be found, its location is set to -1.\n    // In that case, we don't need to set up a cumulative bloom\n    if (hasParentInjector(parentLoc)) {\n        var parentData = parentLView[TVIEW].data;\n        // Creates a cumulative bloom filter that merges the parent's bloom filter\n        // and its own cumulative bloom (which contains tokens for all ancestors)\n        for (var i = 0; i < 8; i++) {\n            hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n        }\n    }\n    hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n    return injectorIndex;\n}\nfunction insertBloom(arr, footer) {\n    arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n}\nfunction getInjectorIndex(tNode, hostView) {\n    if (tNode.injectorIndex === -1 ||\n        // If the injector index is the same as its parent's injector index, then the index has been\n        // copied down from the parent node. No injector has been created yet on this node.\n        (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n        // After the first template pass, the injector index might exist but the parent values\n        // might not have been calculated yet for this instance\n        hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n        return -1;\n    }\n    else {\n        return tNode.injectorIndex;\n    }\n}\n/**\n * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n * parent injector initially.\n *\n * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n */\nfunction getParentInjectorLocation(tNode, view) {\n    if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n        return tNode.parent.injectorIndex; // ViewOffset is 0\n    }\n    // For most cases, the parent injector index can be found on the host node (e.g. for component\n    // or container), so this loop will be skipped, but we must keep the loop here to support\n    // the rarer case of deeply nested <ng-template> tags or inline views.\n    var hostTNode = view[HOST_NODE];\n    var viewOffset = 1;\n    while (hostTNode && hostTNode.injectorIndex === -1) {\n        view = view[DECLARATION_VIEW];\n        hostTNode = view ? view[HOST_NODE] : null;\n        viewOffset++;\n    }\n    return hostTNode ?\n        hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n        -1;\n}\n/**\n * Makes a type or an injection token public to the DI system by adding it to an\n * injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param token The type or the injection token to be made public\n */\nfunction diPublicInInjector(injectorIndex, view, token) {\n    bloomAdd(injectorIndex, view[TVIEW], token);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @publicApi\n */\nfunction injectAttributeImpl(tNode, attrNameToInject) {\n    ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n    ngDevMode && assertDefined(tNode, 'expecting tNode');\n    var attrs = tNode.attrs;\n    if (attrs) {\n        for (var i = 0; i < attrs.length; i = i + 2) {\n            var attrName = attrs[i];\n            if (attrName === 3 /* SelectOnly */)\n                break;\n            if (attrName == attrNameToInject) {\n                return attrs[i + 1];\n            }\n        }\n    }\n    return null;\n}\n/**\n * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n *\n * Look for the injector providing the token by walking up the node injector tree and then\n * the module injector tree.\n *\n * @param tNode The Node where the search for the injector should start\n * @param lView The `LView` that contains the `tNode`\n * @param token The token to look for\n * @param flags Injection flags\n * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n */\nfunction getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    if (tNode) {\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lView);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & InjectFlags.Optional)) {\n                    throw new Error(\"No provider for \" + stringify$1(token) + \"!\");\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element\n            // injector tree. This is used to know if viewProviders can be accessed on the current\n            // injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lView);\n            var parentLocation = NO_PARENT_INJECTOR;\n            var hostTElementNode = flags & InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n            // If we should skip this injector, or if there is no injector on this node, start by\n            // searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                    lView[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, false)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lView[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lView[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                    bloomHasToken(bloomHash, injectorIndex, lView)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n    }\n    if (flags & InjectFlags.Optional && notFoundValue === undefined) {\n        // This must be set or the NullInjector will throw for optional deps\n        notFoundValue = null;\n    }\n    if ((flags & (InjectFlags.Self | InjectFlags.Host)) === 0) {\n        var moduleInjector = lView[INJECTOR];\n        if (moduleInjector) {\n            return moduleInjector.get(token, notFoundValue, flags & InjectFlags.Optional);\n        }\n        else {\n            return injectRootLimpMode(token, notFoundValue, flags & InjectFlags.Optional);\n        }\n    }\n    if (flags & InjectFlags.Optional) {\n        return notFoundValue;\n    }\n    else {\n        throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n    }\n}\nvar NOT_FOUND = {};\nfunction searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n    var currentTView = lView[TVIEW];\n    var tNode = currentTView.data[injectorIndex + TNODE];\n    // First, we need to determine if view providers can be accessed by the starting element.\n    // There are two possibities\n    var canAccessViewProviders = previousTView == null ?\n        // 1) This is the first invocation `previousTView == null` which means that we are at the\n        // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n        // to look into the ViewProviders is if:\n        // - we are on a component\n        // - AND the injector set `includeViewProviders` to true (implying that the token can see\n        // ViewProviders because it is the Component or a Service which itself was declared in\n        // ViewProviders)\n        (isComponent(tNode) && includeViewProviders) :\n        // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n        // In such a case we are only allowed to look into the ViewProviders if:\n        // - We just crossed from child View to Parent View `previousTView != currentTView`\n        // - AND the parent TNode is an Element.\n        // This means that we just came from the Component's View and therefore are allowed to see\n        // into the ViewProviders.\n        (previousTView != currentTView && (tNode.type === 3 /* Element */));\n    // This special case happens when there is a @host on the inject and when we are searching\n    // on the host element node.\n    var isHostSpecialCase = (flags & InjectFlags.Host) && hostTElementNode === tNode;\n    var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n    if (injectableIdx !== null) {\n        return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n    }\n    else {\n        return NOT_FOUND;\n    }\n}\n/**\n * Searches for the given token among the node's directives and providers.\n *\n * @param tNode TNode on which directives are present.\n * @param lView The view we are currently processing\n * @param token Provider token or type of a directive to look for.\n * @param canAccessViewProviders Whether view providers should be considered.\n * @param isHostSpecialCase Whether the host special case applies.\n * @returns Index of a found directive or provider, or null when none found.\n */\nfunction locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n    var tView = lView[TVIEW];\n    var nodeProviderIndexes = tNode.providerIndexes;\n    var tInjectables = tView.data;\n    var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n    var directivesStart = tNode.directiveStart;\n    var directiveEnd = tNode.directiveEnd;\n    var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n    var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n    // When the host special case applies, only the viewProviders and the component are visible\n    var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n    for (var i = startingIndex; i < endIndex; i++) {\n        var providerTokenOrDef = tInjectables[i];\n        if (i < directivesStart && token === providerTokenOrDef ||\n            i >= directivesStart && providerTokenOrDef.type === token) {\n            return i;\n        }\n    }\n    if (isHostSpecialCase) {\n        var dirDef = tInjectables[directivesStart];\n        if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n            return directivesStart;\n        }\n    }\n    return null;\n}\n/**\n* Retrieve or instantiate the injectable from the `lData` at particular `index`.\n*\n* This function checks to see if the value has already been instantiated and if so returns the\n* cached `injectable`. Otherwise if it detects that the value is still a factory it\n* instantiates the `injectable` and caches the value.\n*/\nfunction getNodeInjectable(tData, lData, index, tNode) {\n    var value = lData[index];\n    if (isFactory(value)) {\n        var factory = value;\n        if (factory.resolving) {\n            throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n        }\n        var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n        factory.resolving = true;\n        var previousInjectImplementation = void 0;\n        if (factory.injectImpl) {\n            previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n        }\n        var savePreviousOrParentTNode = getPreviousOrParentTNode();\n        var saveLView = getLView();\n        setTNodeAndViewData(tNode, lData);\n        try {\n            value = lData[index] = factory.factory(null, tData, lData, tNode);\n        }\n        finally {\n            if (factory.injectImpl)\n                setInjectImplementation(previousInjectImplementation);\n            setIncludeViewProviders(previousIncludeViewProviders);\n            factory.resolving = false;\n            setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n        }\n    }\n    return value;\n}\n/**\n * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n * the directive might be provided by the injector.\n *\n * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n * is returned as the node injector can not possibly provide that token.\n *\n * @param token the injection token\n * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n */\nfunction bloomHashBitOrFactory(token) {\n    ngDevMode && assertDefined(token, 'token must be defined');\n    if (typeof token === 'string') {\n        return token.charCodeAt(0) || 0;\n    }\n    var tokenId = token[NG_ELEMENT_ID];\n    return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n}\nfunction bloomHasToken(bloomHash, injectorIndex, injectorView) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomHash;\n    var b7 = bloomHash & 0x80;\n    var b6 = bloomHash & 0x40;\n    var b5 = bloomHash & 0x20;\n    // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n    // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n    // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n    var value;\n    if (b7) {\n        value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n            (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n    }\n    else {\n        value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n            (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n    }\n    // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n    // this injector is a potential match.\n    return !!(value & mask);\n}\n/** Returns true if flags prevent parent injector from being searched for tokens */\nfunction shouldSearchParent(flags, isFirstHostTNode) {\n    return !(flags & InjectFlags.Self) && !(flags & InjectFlags.Host && isFirstHostTNode);\n}\nfunction injectInjector() {\n    var tNode = getPreviousOrParentTNode();\n    return new NodeInjector(tNode, getLView());\n}\nvar NodeInjector = /** @class */ (function () {\n    function NodeInjector(_tNode, _lView) {\n        this._tNode = _tNode;\n        this._lView = _lView;\n    }\n    NodeInjector.prototype.get = function (token, notFoundValue) {\n        return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n    };\n    return NodeInjector;\n}());\nfunction getFactoryOf(type) {\n    var typeAny = type;\n    var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n        getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n    if (!def || def.factory === undefined) {\n        return null;\n    }\n    return def.factory;\n}\nfunction getInheritedFactory(type) {\n    var proto = Object.getPrototypeOf(type.prototype).constructor;\n    var factory = getFactoryOf(proto);\n    if (factory !== null) {\n        return factory;\n    }\n    else {\n        // There is no factory defined. Either this was improper usage of inheritance\n        // (no Angular decorator on the superclass) or there is no constructor at all\n        // in the inheritance chain. Since the two cases cannot be distinguished, the\n        // latter has to be assumed.\n        return function (t) { return new t(); };\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n *\n * This function will examine the provided DOM element, component, or directive instance\\'s\n * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n * value will be that of the newly created `LContext`.\n *\n * If the monkey-patched value is the `LView` instance then the context value for that\n * target will be created and the monkey-patch reference will be updated. Therefore when this\n * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n * directive\\'s monkey-patch values.\n *\n * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n * is found which contains a monkey-patch reference. When that occurs then the provided element\n * will be updated with a new context (which is then returned). If the monkey-patch value is not\n * detected for a component/directive instance then it will throw an error (all components and\n * directives should be automatically monkey-patched by ivy).\n *\n * @param target Component, Directive or DOM Node.\n */\nfunction getLContext(target) {\n    var mpValue = readPatchedData(target);\n    if (mpValue) {\n        // only when it's an array is it considered an LView instance\n        // ... otherwise it's an already constructed LContext instance\n        if (Array.isArray(mpValue)) {\n            var lView = mpValue;\n            var nodeIndex = void 0;\n            var component = undefined;\n            var directives = undefined;\n            if (isComponentInstance(target)) {\n                nodeIndex = findViaComponent(lView, target);\n                if (nodeIndex == -1) {\n                    throw new Error('The provided component was not found in the application');\n                }\n                component = target;\n            }\n            else if (isDirectiveInstance(target)) {\n                nodeIndex = findViaDirective(lView, target);\n                if (nodeIndex == -1) {\n                    throw new Error('The provided directive was not found in the application');\n                }\n                directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n            }\n            else {\n                nodeIndex = findViaNativeElement(lView, target);\n                if (nodeIndex == -1) {\n                    return null;\n                }\n            }\n            // the goal is not to fill the entire context full of data because the lookups\n            // are expensive. Instead, only the target data (the element, component, container, ICU\n            // expression or directive details) are filled into the context. If called multiple times\n            // with different target values then the missing target data will be filled in.\n            var native = readElementValue(lView[nodeIndex]);\n            var existingCtx = readPatchedData(native);\n            var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                existingCtx :\n                createLContext(lView, nodeIndex, native);\n            // only when the component has been discovered then update the monkey-patch\n            if (component && context.component === undefined) {\n                context.component = component;\n                attachPatchData(context.component, context);\n            }\n            // only when the directives have been discovered then update the monkey-patch\n            if (directives && context.directives === undefined) {\n                context.directives = directives;\n                for (var i = 0; i < directives.length; i++) {\n                    attachPatchData(directives[i], context);\n                }\n            }\n            attachPatchData(context.native, context);\n            mpValue = context;\n        }\n    }\n    else {\n        var rElement = target;\n        ngDevMode && assertDomNode(rElement);\n        // if the context is not found then we need to traverse upwards up the DOM\n        // to find the nearest element that has already been monkey patched with data\n        var parent_1 = rElement;\n        while (parent_1 = parent_1.parentNode) {\n            var parentContext = readPatchedData(parent_1);\n            if (parentContext) {\n                var lView = void 0;\n                if (Array.isArray(parentContext)) {\n                    lView = parentContext;\n                }\n                else {\n                    lView = parentContext.lView;\n                }\n                // the edge of the app was also reached here through another means\n                // (maybe because the DOM was changed manually).\n                if (!lView) {\n                    return null;\n                }\n                var index = findViaNativeElement(lView, rElement);\n                if (index >= 0) {\n                    var native = readElementValue(lView[index]);\n                    var context = createLContext(lView, index, native);\n                    attachPatchData(native, context);\n                    mpValue = context;\n                    break;\n                }\n            }\n        }\n    }\n    return mpValue || null;\n}\n/**\n * Creates an empty instance of a `LContext` context\n */\nfunction createLContext(lView, nodeIndex, native) {\n    return {\n        lView: lView,\n        nodeIndex: nodeIndex,\n        native: native,\n        component: undefined,\n        directives: undefined,\n        localRefs: undefined,\n    };\n}\n/**\n * Takes a component instance and returns the view for that component.\n *\n * @param componentInstance\n * @returns The component's view\n */\nfunction getComponentViewByInstance(componentInstance) {\n    var lView = readPatchedData(componentInstance);\n    var view;\n    if (Array.isArray(lView)) {\n        var nodeIndex = findViaComponent(lView, componentInstance);\n        view = getComponentViewByIndex(nodeIndex, lView);\n        var context = createLContext(lView, nodeIndex, view[HOST]);\n        context.component = componentInstance;\n        attachPatchData(componentInstance, context);\n        attachPatchData(context.native, context);\n    }\n    else {\n        var context = lView;\n        view = getComponentViewByIndex(context.nodeIndex, context.lView);\n    }\n    return view;\n}\n/**\n * Assigns the given data to the given target (which could be a component,\n * directive or DOM node instance) using monkey-patching.\n */\nfunction attachPatchData(target, data) {\n    target[MONKEY_PATCH_KEY_NAME] = data;\n}\nfunction isComponentInstance(instance) {\n    return instance && instance.constructor && instance.constructor.ngComponentDef;\n}\nfunction isDirectiveInstance(instance) {\n    return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n}\n/**\n * Locates the element within the given LView and returns the matching index\n */\nfunction findViaNativeElement(lView, target) {\n    var tNode = lView[TVIEW].firstChild;\n    while (tNode) {\n        var native = getNativeByTNode(tNode, lView);\n        if (native === target) {\n            return tNode.index;\n        }\n        tNode = traverseNextElement(tNode);\n    }\n    return -1;\n}\n/**\n * Locates the next tNode (child, sibling or parent).\n */\nfunction traverseNextElement(tNode) {\n    if (tNode.child) {\n        return tNode.child;\n    }\n    else if (tNode.next) {\n        return tNode.next;\n    }\n    else {\n        // Let's take the following template: <div><span>text</span></div><component/>\n        // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n        // in this case the parent `div`, so that we can find the component.\n        while (tNode.parent && !tNode.parent.next) {\n            tNode = tNode.parent;\n        }\n        return tNode.parent && tNode.parent.next;\n    }\n}\n/**\n * Locates the component within the given LView and returns the matching index\n */\nfunction findViaComponent(lView, componentInstance) {\n    var componentIndices = lView[TVIEW].components;\n    if (componentIndices) {\n        for (var i = 0; i < componentIndices.length; i++) {\n            var elementComponentIndex = componentIndices[i];\n            var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n            if (componentView[CONTEXT] === componentInstance) {\n                return elementComponentIndex;\n            }\n        }\n    }\n    else {\n        var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n        var rootComponent = rootComponentView[CONTEXT];\n        if (rootComponent === componentInstance) {\n            // we are dealing with the root element here therefore we know that the\n            // element is the very first element after the HEADER data in the lView\n            return HEADER_OFFSET;\n        }\n    }\n    return -1;\n}\n/**\n * Locates the directive within the given LView and returns the matching index\n */\nfunction findViaDirective(lView, directiveInstance) {\n    // if a directive is monkey patched then it will (by default)\n    // have a reference to the LView of the current view. The\n    // element bound to the directive being search lives somewhere\n    // in the view data. We loop through the nodes and check their\n    // list of directives for the instance.\n    var tNode = lView[TVIEW].firstChild;\n    while (tNode) {\n        var directiveIndexStart = tNode.directiveStart;\n        var directiveIndexEnd = tNode.directiveEnd;\n        for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n            if (lView[i] === directiveInstance) {\n                return tNode.index;\n            }\n        }\n        tNode = traverseNextElement(tNode);\n    }\n    return -1;\n}\n/**\n * Returns a list of directives extracted from the given view based on the\n * provided list of directive index values.\n *\n * @param nodeIndex The node index\n * @param lView The target view data\n * @param includeComponents Whether or not to include components in returned directives\n */\nfunction getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n    var tNode = lView[TVIEW].data[nodeIndex];\n    var directiveStartIndex = tNode.directiveStart;\n    if (directiveStartIndex == 0)\n        return EMPTY_ARRAY;\n    var directiveEndIndex = tNode.directiveEnd;\n    if (!includeComponents && tNode.flags & 1 /* isComponent */)\n        directiveStartIndex++;\n    return lView.slice(directiveStartIndex, directiveEndIndex);\n}\nfunction getComponentAtNodeIndex(nodeIndex, lView) {\n    var tNode = lView[TVIEW].data[nodeIndex];\n    var directiveStartIndex = tNode.directiveStart;\n    return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n}\n/**\n * Returns a map of local references (local reference name => element or directive instance) that\n * exist on a given element.\n */\nfunction discoverLocalRefs(lView, nodeIndex) {\n    var tNode = lView[TVIEW].data[nodeIndex];\n    if (tNode && tNode.localNames) {\n        var result = {};\n        for (var i = 0; i < tNode.localNames.length; i += 2) {\n            var localRefName = tNode.localNames[i];\n            var directiveIndex = tNode.localNames[i + 1];\n            result[localRefName] =\n                directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n        }\n        return result;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns the component instance associated with a given DOM host element.\n * Elements which don't represent components return `null`.\n *\n * @param element Host DOM element from which the component should be retrieved.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n * ```\n *\n * @publicApi\n */\nfunction getComponent(element) {\n    var context = loadLContextFromNode(element);\n    if (context.component === undefined) {\n        context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n    }\n    return context.component;\n}\n/**\n * Returns the component instance associated with a given DOM host element.\n * Elements which don't represent components return `null`.\n *\n * @param element Host DOM element from which the component should be retrieved.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n * ```\n *\n * @publicApi\n */\nfunction getContext(element) {\n    var context = loadLContextFromNode(element);\n    return context.lView[CONTEXT];\n}\n/**\n * Returns the component instance associated with view which owns the DOM element (`null`\n * otherwise).\n *\n * @param element DOM element which is owned by an existing component's view.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n * expect(getViewComponent(<my-app>)).toEqual(null);\n * ```\n *\n * @publicApi\n */\nfunction getViewComponent(element) {\n    var context = loadLContext(element);\n    var lView = context.lView;\n    while (lView[PARENT] && lView[HOST] === null) {\n        // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n        lView = lView[PARENT];\n    }\n    return lView[FLAGS] & 128 /* IsRoot */ ? null : lView[CONTEXT];\n}\n/**\n * Returns the `RootContext` instance that is associated with\n * the application where the target is situated.\n *\n */\nfunction getRootContext$1(target) {\n    var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n    var rootLView = getRootView$1(lViewData);\n    return rootLView[CONTEXT];\n}\n/**\n * Retrieve all root components.\n *\n * Root components are those which have been bootstrapped by Angular.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nfunction getRootComponents(target) {\n    return __spread(getRootContext$1(target).components);\n}\n/**\n * Retrieves an `Injector` associated with the element, component or directive.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nfunction getInjector(target) {\n    var context = loadLContext(target);\n    var tNode = context.lView[TVIEW].data[context.nodeIndex];\n    return new NodeInjector(tNode, context.lView);\n}\n/**\n * Retrieve a set of injection tokens at a given DOM node.\n *\n * @param element Element for which the injection tokens should be retrieved.\n * @publicApi\n */\nfunction getInjectionTokens(element) {\n    var context = loadLContext(element, false);\n    if (!context)\n        return [];\n    var lView = context.lView;\n    var tView = lView[TVIEW];\n    var tNode = tView.data[context.nodeIndex];\n    var providerTokens = [];\n    var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n    var endIndex = tNode.directiveEnd;\n    for (var i = startIndex; i < endIndex; i++) {\n        var value = tView.data[i];\n        if (isDirectiveDefHack(value)) {\n            // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n            // design flaw.  We should always store same type so that we can be monomorphic. The issue\n            // is that for Components/Directives we store the def instead the type. The correct behavior\n            // is that we should always be storing injectable type in this location.\n            value = value.type;\n        }\n        providerTokens.push(value);\n    }\n    return providerTokens;\n}\n/**\n * Retrieves directives associated with a given DOM host element.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nfunction getDirectives(target) {\n    var context = loadLContext(target);\n    if (context.directives === undefined) {\n        context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n    }\n    return context.directives || [];\n}\nfunction loadLContext(target, throwOnNotFound) {\n    if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n    var context = getLContext(target);\n    if (!context && throwOnNotFound) {\n        throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n            'Invalid ng target');\n    }\n    return context;\n}\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param componentOrView any component or view\n *\n */\nfunction getRootView$1(componentOrView) {\n    var lView;\n    if (Array.isArray(componentOrView)) {\n        ngDevMode && assertDefined(componentOrView, 'lView');\n        lView = componentOrView;\n    }\n    else {\n        ngDevMode && assertDefined(componentOrView, 'component');\n        lView = readPatchedLView(componentOrView);\n    }\n    while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n        lView = lView[PARENT];\n    }\n    return lView;\n}\n/**\n * Retrieve map of local references.\n *\n * The references are retrieved as a map of local reference name to element or directive instance.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nfunction getLocalRefs(target) {\n    var context = loadLContext(target);\n    if (context.localRefs === undefined) {\n        context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n    }\n    return context.localRefs || {};\n}\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param directive Component or Directive for which the host element should be retrieved.\n *\n * @publicApi\n */\nfunction getHostElement(directive) {\n    return getLContext(directive).native;\n}\nfunction loadLContextFromNode(node) {\n    if (!(node instanceof Node))\n        throw new Error('Expecting instance of DOM Node');\n    return loadLContext(node);\n}\nfunction isBrowserEvents(listener) {\n    // Browser events are those which don't have `useCapture` as boolean.\n    return typeof listener.useCapture === 'boolean';\n}\n/**\n * Retrieves a list of DOM listeners.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div (click)=\"doSomething()\">\n *     </div>\n * </mp-app>\n *\n * expect(getListeners(<div>)).toEqual({\n *   name: 'click',\n *   element: <div>,\n *   callback: () => doSomething(),\n *   useCapture: false\n * });\n * ```\n *\n * @param element Element for which the DOM listeners should be retrieved.\n * @publicApi\n */\nfunction getListeners(element) {\n    var lContext = loadLContextFromNode(element);\n    var lView = lContext.lView;\n    var tView = lView[TVIEW];\n    var lCleanup = lView[CLEANUP];\n    var tCleanup = tView.cleanup;\n    var listeners = [];\n    if (tCleanup && lCleanup) {\n        for (var i = 0; i < tCleanup.length;) {\n            var firstParam = tCleanup[i++];\n            var secondParam = tCleanup[i++];\n            if (typeof firstParam === 'string') {\n                var name_1 = firstParam;\n                var listenerElement = readElementValue(lView[secondParam]);\n                var callback = lCleanup[tCleanup[i++]];\n                var useCaptureOrIndx = tCleanup[i++];\n                // if useCaptureOrIndx is boolean then report it as is.\n                // if useCaptureOrIndx is positive number then it in unsubscribe method\n                // if useCaptureOrIndx is negative number then it is a Subscription\n                var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                    useCaptureOrIndx :\n                    (useCaptureOrIndx >= 0 ? false : null);\n                if (element == listenerElement) {\n                    listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                }\n            }\n        }\n    }\n    listeners.sort(sortListeners);\n    return listeners;\n}\nfunction sortListeners(a, b) {\n    if (a.name == b.name)\n        return 0;\n    return a.name < b.name ? -1 : 1;\n}\n/**\n * This function should not exist because it is megamorphic and only mostly correct.\n *\n * See call site for more info.\n */\nfunction isDirectiveDefHack(obj) {\n    return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction devModeEqual(a, b) {\n    var isListLikeIterableA = isListLikeIterable(a);\n    var isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n * @publicApi\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n *\n * @publicApi\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n    return SimpleChange;\n}());\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nfunction areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var item1 = iterator1.next();\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/** Called when directives inject each other (creating a circular dependency) */\n/** Called when there are multiple component selectors that match a given node */\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n}\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nfunction throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (creationMode) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    // TODO: include debug context\n    throw new Error(msg);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A special value which designates that a value has not changed. */\nvar NO_CHANGE = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(misko): consider inlining\n/** Updates binding and returns the value. */\nfunction updateBinding(lView, bindingIndex, value) {\n    return lView[bindingIndex] = value;\n}\n/** Gets the current binding value. */\nfunction getBinding(lView, bindingIndex) {\n    ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n    ngDevMode &&\n        assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return lView[bindingIndex];\n}\n/** Updates binding if changed, then returns whether it was updated. */\nfunction bindingUpdated(lView, bindingIndex, value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    ngDevMode &&\n        assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n    if (lView[bindingIndex] === NO_CHANGE) {\n        // initial pass\n        lView[bindingIndex] = value;\n    }\n    else if (isDifferent(lView[bindingIndex], value)) {\n        if (ngDevMode && getCheckNoChangesMode()) {\n            if (!devModeEqual(lView[bindingIndex], value)) {\n                throwErrorIfNoChangesMode(isCreationMode(lView), lView[bindingIndex], value);\n            }\n        }\n        lView[bindingIndex] = value;\n    }\n    else {\n        return false;\n    }\n    return true;\n}\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nfunction bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n    var different = bindingUpdated(lView, bindingIndex, exp1);\n    return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n}\n/** Updates 3 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n    var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n    return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n}\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n    var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n    return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: cleanup once the code is merged in angular/angular\nvar RendererStyleFlags3;\n(function (RendererStyleFlags3) {\n    RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nfunction isProceduralRenderer(renderer) {\n    return !!(renderer.listen);\n}\nvar domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Retrieves the parent element of a given node. */\nfunction getParentNative(tNode, currentView) {\n    if (tNode.parent == null) {\n        return getHostNative(currentView);\n    }\n    else {\n        var parentTNode = getFirstParentNative(tNode);\n        return getNativeByTNode(parentTNode, currentView);\n    }\n}\n/**\n * Get the first parent of a node that isn't an IcuContainer TNode\n */\nfunction getFirstParentNative(tNode) {\n    var parent = tNode.parent;\n    while (parent && parent.type === 5 /* IcuContainer */) {\n        parent = parent.parent;\n    }\n    return parent;\n}\n/**\n * Gets the host element given a view. Will return null if the current view is an embedded view,\n * which does not have a host element.\n */\nfunction getHostNative(currentView) {\n    var hostTNode = currentView[HOST_NODE];\n    return hostTNode && hostTNode.type !== 2 /* View */ ?\n        getNativeByTNode(hostTNode, currentView[PARENT]) :\n        null;\n}\nfunction getLContainer(tNode, embeddedView) {\n    if (tNode.index === -1) {\n        // This is a dynamically created view inside a dynamic container.\n        // If the host index is -1, the view has not yet been inserted, so it has no parent.\n        var containerHostIndex = embeddedView[CONTAINER_INDEX];\n        return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n    }\n    else {\n        // This is a inline view node (e.g. embeddedViewStart)\n        return embeddedView[PARENT][tNode.parent.index];\n    }\n}\n/**\n * Retrieves render parent for a given view.\n * Might be null if a view is not yet attached to any container.\n */\nfunction getContainerRenderParent(tViewNode, view) {\n    var container = getLContainer(tViewNode, view);\n    return container ? container[RENDER_PARENT] : null;\n}\n/**\n * Stack used to keep track of projection nodes in walkTNodeTree.\n *\n * This is deliberately created outside of walkTNodeTree to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n */\nvar projectionNodeStack = [];\n/**\n * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n * one found, or on all of them.\n *\n * @param viewToWalk the view to walk\n * @param action identifies the action to be performed on the elements\n * @param renderer the current renderer.\n * @param renderParent Optional the render parent node to be set in all LContainers found,\n * required for action modes Insert and Destroy.\n * @param beforeNode Optional the node before which elements should be added, required for action\n * Insert.\n */\nfunction walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n    var rootTNode = viewToWalk[TVIEW].node;\n    var projectionNodeIndex = -1;\n    var currentView = viewToWalk;\n    var tNode = rootTNode.child;\n    while (tNode) {\n        var nextTNode = null;\n        if (tNode.type === 3 /* Element */) {\n            executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n            var nodeOrContainer = currentView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                // This element has an LContainer, and its comment needs to be handled\n                executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            var lContainer = currentView[tNode.index];\n            executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n            if (renderParent)\n                lContainer[RENDER_PARENT] = renderParent;\n            if (lContainer[VIEWS].length) {\n                currentView = lContainer[VIEWS][0];\n                nextTNode = currentView[TVIEW].node;\n                // When the walker enters a container, then the beforeNode has to become the local native\n                // comment node.\n                beforeNode = lContainer[NATIVE];\n            }\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            var componentView = findComponentView(currentView);\n            var componentHost = componentView[HOST_NODE];\n            var head = componentHost.projection[tNode.projection];\n            // Must store both the TNode and the view because this projection node could be nested\n            // deeply inside embedded views, and we need to get back down to this particular nested view.\n            projectionNodeStack[++projectionNodeIndex] = tNode;\n            projectionNodeStack[++projectionNodeIndex] = currentView;\n            if (head) {\n                currentView = componentView[PARENT];\n                nextTNode = currentView[TVIEW].data[head.index];\n            }\n        }\n        else {\n            // Otherwise, this is a View or an ElementContainer\n            nextTNode = tNode.child;\n        }\n        if (nextTNode === null) {\n            // this last node was projected, we need to get back down to its projection node\n            if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                currentView = projectionNodeStack[projectionNodeIndex--];\n                tNode = projectionNodeStack[projectionNodeIndex--];\n            }\n            nextTNode = tNode.next;\n            /**\n             * Find the next node in the TNode tree, taking into account the place where a node is\n             * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n             *\n             * If there is no sibling node, then it goes to the next sibling of the parent node...\n             * until it reaches rootNode (at which point null is returned).\n             */\n            while (!nextTNode) {\n                // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                tNode = tNode.parent || currentView[TVIEW].node;\n                if (tNode === null || tNode === rootTNode)\n                    return null;\n                // When exiting a container, the beforeNode must be restored to the previous value\n                if (tNode.type === 0 /* Container */) {\n                    currentView = currentView[PARENT];\n                    beforeNode = currentView[tNode.index][NATIVE];\n                }\n                if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                    currentView = currentView[NEXT];\n                    nextTNode = currentView[TVIEW].node;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n            }\n        }\n        tNode = nextTNode;\n    }\n}\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n */\nfunction executeNodeAction(action, renderer, parent, node, beforeNode) {\n    if (action === 0 /* Insert */) {\n        isProceduralRenderer(renderer) ?\n            renderer.insertBefore(parent, node, beforeNode) :\n            parent.insertBefore(node, beforeNode, true);\n    }\n    else if (action === 1 /* Detach */) {\n        isProceduralRenderer(renderer) ?\n            renderer.removeChild(parent, node) :\n            parent.removeChild(node);\n    }\n    else if (action === 2 /* Destroy */) {\n        ngDevMode && ngDevMode.rendererDestroyNode++;\n        renderer.destroyNode(node);\n    }\n}\nfunction createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n        renderer.createTextNode(stringify$1(value));\n}\nfunction addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n    var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n    ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n    if (renderParent) {\n        var renderer = viewToWalk[RENDERER];\n        walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n    }\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nfunction destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    if (rootView[TVIEW].childIndex === -1) {\n        return cleanUpView(rootView);\n    }\n    var viewOrContainer = getLViewChild(rootView);\n    while (viewOrContainer) {\n        var next = null;\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            // If LView, traverse down to child.\n            var view = viewOrContainer;\n            if (view[TVIEW].childIndex > -1)\n                next = getLViewChild(view);\n        }\n        else {\n            // If container, traverse down to its first LView.\n            var container = viewOrContainer;\n            if (container[VIEWS].length)\n                next = container[VIEWS][0];\n        }\n        if (next == null) {\n            // Only clean up view when moving to the side or up, as destroy hooks\n            // should be called in order from the bottom up.\n            while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && viewOrContainer[NEXT];\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param lView The view to insert\n * @param lContainer The container into which the view should be inserted\n * @param parentView The new parent of the inserted view\n * @param index The index at which to insert the view\n * @param containerIndex The index of the container node, if dynamic\n */\nfunction insertView(lView, lContainer, parentView, index, containerIndex) {\n    var views = lContainer[VIEWS];\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        views[index - 1][NEXT] = lView;\n    }\n    if (index < views.length) {\n        lView[NEXT] = views[index];\n        views.splice(index, 0, lView);\n    }\n    else {\n        views.push(lView);\n        lView[NEXT] = null;\n    }\n    // Dynamically inserted views need a reference to their parent container's host so it's\n    // possible to jump from a view to its container's next when walking the node tree.\n    if (containerIndex > -1) {\n        lView[CONTAINER_INDEX] = containerIndex;\n        lView[PARENT] = parentView;\n    }\n    // Notify query that a new view has been added\n    if (lView[QUERIES]) {\n        lView[QUERIES].insertView(index);\n    }\n    // Sets the attached flag\n    lView[FLAGS] |= 16 /* Attached */;\n}\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param lContainer The container from which to detach a view\n * @param removeIndex The index of the view to detach\n * @param detached Whether or not this view is already detached.\n * @returns Detached LView instance.\n */\nfunction detachView(lContainer, removeIndex, detached) {\n    var views = lContainer[VIEWS];\n    var viewToDetach = views[removeIndex];\n    if (removeIndex > 0) {\n        views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n    }\n    views.splice(removeIndex, 1);\n    if (!detached) {\n        addRemoveViewFromContainer(viewToDetach, false);\n    }\n    if (viewToDetach[QUERIES]) {\n        viewToDetach[QUERIES].removeView();\n    }\n    viewToDetach[CONTAINER_INDEX] = -1;\n    viewToDetach[PARENT] = null;\n    // Unsets the attached flag\n    viewToDetach[FLAGS] &= ~16 /* Attached */;\n    return viewToDetach;\n}\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param lContainer The container from which to remove a view\n * @param tContainer The TContainer node associated with the LContainer\n * @param removeIndex The index of the view to remove\n */\nfunction removeView(lContainer, containerHost, removeIndex) {\n    var view = lContainer[VIEWS][removeIndex];\n    detachView(lContainer, removeIndex, !!containerHost.detached);\n    destroyLView(view);\n}\n/** Gets the child of the given LView */\nfunction getLViewChild(lView) {\n    var childIndex = lView[TVIEW].childIndex;\n    return childIndex === -1 ? null : lView[childIndex];\n}\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param view The view to be destroyed.\n */\nfunction destroyLView(view) {\n    var renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n        walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n    }\n    destroyViewTree(view);\n    // Sets the destroyed flag\n    view[FLAGS] |= 64 /* Destroyed */;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param state The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    var tNode;\n    if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n        tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return getLContainer(tNode, state);\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state[PARENT] === rootView ? null : state[PARENT];\n    }\n}\n/**\n * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n * can be propagated to @Output listeners.\n *\n * @param view The LView to clean up\n */\nfunction cleanUpView(viewOrContainer) {\n    if (viewOrContainer.length >= HEADER_OFFSET) {\n        var view = viewOrContainer;\n        executeOnDestroys(view);\n        executePipeOnDestroys(view);\n        removeListeners(view);\n        var hostTNode = view[HOST_NODE];\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            view[RENDERER].destroy();\n        }\n    }\n}\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(lView) {\n    var tCleanup = lView[TVIEW].cleanup;\n    if (tCleanup != null) {\n        var lCleanup = lView[CLEANUP];\n        for (var i = 0; i < tCleanup.length - 1; i += 2) {\n            if (typeof tCleanup[i] === 'string') {\n                // This is a listener with the native renderer\n                var idx = tCleanup[i + 1];\n                var listener = lCleanup[tCleanup[i + 2]];\n                var native = readElementValue(lView[idx]);\n                var useCaptureOrSubIdx = tCleanup[i + 3];\n                if (typeof useCaptureOrSubIdx === 'boolean') {\n                    // DOM listener\n                    native.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                }\n                else {\n                    if (useCaptureOrSubIdx >= 0) {\n                        // unregister\n                        lCleanup[useCaptureOrSubIdx]();\n                    }\n                    else {\n                        // Subscription\n                        lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                    }\n                }\n                i += 2;\n            }\n            else if (typeof tCleanup[i] === 'number') {\n                // This is a listener with renderer2 (cleanup fn can be found by index)\n                var cleanupFn = lCleanup[tCleanup[i]];\n                cleanupFn();\n            }\n            else {\n                // This is a cleanup function that is grouped with the index of its context\n                var context = lCleanup[tCleanup[i + 1]];\n                tCleanup[i].call(context);\n            }\n        }\n        lView[CLEANUP] = null;\n    }\n}\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view) {\n    var tView = view[TVIEW];\n    var destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(view, destroyHooks);\n    }\n}\n/** Calls pipe destroy hooks for this view */\nfunction executePipeOnDestroys(lView) {\n    var pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks(lView, pipeDestroyHooks);\n    }\n}\nfunction getRenderParent(tNode, currentView) {\n    if (canInsertNativeNode(tNode, currentView)) {\n        // If we are asked for a render parent of the root component we need to do low-level DOM\n        // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n        // parent of the topmost host node if the root component injects ViewContainerRef.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        var hostTNode = currentView[HOST_NODE];\n        var tNodeParent = tNode.parent;\n        if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n            tNode = getHighestElementContainer(tNodeParent);\n        }\n        return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n            getContainerRenderParent(hostTNode, currentView) :\n            getParentNative(tNode, currentView);\n    }\n    return null;\n}\nfunction canInsertNativeChildOfElement(tNode) {\n    // If the parent is null, then we are inserting across views. This happens when we\n    // insert a root element of the component view into the component host element and it\n    // should always be eager.\n    if (tNode.parent == null ||\n        // We should also eagerly insert if the parent is a regular, non-component element\n        // since we know that this relationship will never be broken.\n        tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 1 /* isComponent */)) {\n        return true;\n    }\n    // Parent is a Component. Component's content nodes are not inserted immediately\n    // because they will be projected, and so doing insert at this point would be wasteful.\n    // Since the projection would than move it to its final destination.\n    return false;\n}\n/**\n * We might delay insertion of children for a given view if it is disconnected.\n * This might happen for 2 main reasons:\n * - view is not inserted into any container (view was created but not inserted yet)\n * - view is inserted into a container but the container itself is not inserted into the DOM\n * (container might be part of projection or child of a view that is not inserted yet).\n *\n * In other words we can insert children of a given view if this view was inserted into a container\n * and\n * the container itself has its render parent determined.\n */\nfunction canInsertNativeChildOfView(viewTNode, view) {\n    // Because we are inserting into a `View` the `View` may be disconnected.\n    var container = getLContainer(viewTNode, view);\n    if (container == null || container[RENDER_PARENT] == null) {\n        // The `View` is not inserted into a `Container` or the parent `Container`\n        // itself is disconnected. So we have to delay.\n        return false;\n    }\n    // The parent `Container` is in inserted state, so we can eagerly insert into\n    // this location.\n    return true;\n}\n/**\n * Returns whether a native element can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is mare for projection but has not been inserted\n *   into destination.\n *\n\n *\n * @param tNode The tNode of the node that we want to insert.\n * @param currentView Current LView being processed.\n * @return boolean Whether the node should be inserted now (or delayed until later).\n */\nfunction canInsertNativeNode(tNode, currentView) {\n    var currentNode = tNode;\n    var parent = tNode.parent;\n    if (tNode.parent) {\n        if (tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        else if (tNode.parent.type === 5 /* IcuContainer */) {\n            currentNode = getFirstParentNative(currentNode);\n            parent = currentNode.parent;\n        }\n    }\n    if (parent === null)\n        parent = currentView[HOST_NODE];\n    if (parent && parent.type === 2 /* View */) {\n        return canInsertNativeChildOfView(parent, currentView);\n    }\n    else {\n        // Parent is a regular element or a component\n        return canInsertNativeChildOfElement(currentNode);\n    }\n}\n/**\n * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n * This is a utility function that can be used when native nodes were determined - it abstracts an\n * actual renderer being used.\n */\nfunction nativeInsertBefore(renderer, parent, child, beforeNode) {\n    if (isProceduralRenderer(renderer)) {\n        renderer.insertBefore(parent, child, beforeNode);\n    }\n    else {\n        parent.insertBefore(child, beforeNode, true);\n    }\n}\n/**\n * Returns a native parent of a given native node.\n */\nfunction nativeParentNode(renderer, node) {\n    return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n}\n/**\n * Returns a native sibling of a given native node.\n */\nfunction nativeNextSibling(renderer, node) {\n    return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}.\n *\n * @param childEl The child that should be appended\n * @param childTNode The TNode of the child element\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nfunction appendChild(childEl, childTNode, currentView) {\n    if (childEl === void 0) { childEl = null; }\n    if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n        var renderer = currentView[RENDERER];\n        var parentEl = getParentNative(childTNode, currentView);\n        var parentTNode = childTNode.parent || currentView[HOST_NODE];\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, currentView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(currentView);\n            nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */) {\n            var renderParent = getRenderParent(childTNode, currentView);\n            nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n        }\n        else if (parentTNode.type === 5 /* IcuContainer */) {\n            var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n            nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n        }\n        else {\n            isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                parentEl.appendChild(childEl);\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Gets the top-level ng-container if ng-containers are nested.\n *\n * @param ngContainer The TNode of the starting ng-container\n * @returns tNode The TNode of the highest level ng-container\n */\nfunction getHighestElementContainer(ngContainer) {\n    while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n        ngContainer = ngContainer.parent;\n    }\n    return ngContainer;\n}\nfunction getBeforeNodeForView(index, views, containerNative) {\n    if (index + 1 < views.length) {\n        var view = views[index + 1];\n        var viewTNode = view[HOST_NODE];\n        return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n    }\n    else {\n        return containerNative;\n    }\n}\n/**\n * Removes the `child` element from the DOM if not in view and not projected.\n *\n * @param childTNode The TNode of the child to remove\n * @param childEl The child that should be removed\n * @param currentView The current LView\n * @returns Whether or not the child was removed\n */\nfunction removeChild(childTNode, childEl, currentView) {\n    // We only remove the element if not in View or not projected.\n    if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n        var parentNative = getParentNative(childTNode, currentView);\n        var renderer = currentView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n            parentNative.removeChild(childEl);\n        return true;\n    }\n    return false;\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param projectedTNode The TNode to be projected\n * @param tProjectionNode The projection (ng-content) TNode\n * @param currentView Current LView\n * @param projectionView Projection view (view above current)\n */\nfunction appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n    var native = getNativeByTNode(projectedTNode, projectionView);\n    appendChild(native, tProjectionNode, currentView);\n    // the projected contents are processed while in the shadow view (which is the currentView)\n    // therefore we need to extract the view where the host element lives since it's the\n    // logical container of the content projected views\n    attachPatchData(native, projectionView);\n    var renderParent = getRenderParent(tProjectionNode, currentView);\n    var nodeOrContainer = projectionView[projectedTNode.index];\n    if (projectedTNode.type === 0 /* Container */) {\n        // The node we are adding is a container and we are adding it to an element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assign the final projection location in those cases.\n        nodeOrContainer[RENDER_PARENT] = renderParent;\n        var views = nodeOrContainer[VIEWS];\n        for (var i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n        }\n    }\n    else {\n        if (projectedTNode.type === 4 /* ElementContainer */) {\n            var ngContainerChildTNode = projectedTNode.child;\n            while (ngContainerChildTNode) {\n                appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                ngContainerChildTNode = ngContainerChildTNode.next;\n            }\n        }\n        if (isLContainer(nodeOrContainer)) {\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_TEMPLATE_SELECTOR = 'ng-template';\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    var nodeClassesLen = nodeClassAttrVal.length;\n    var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n    var matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n     {\n        return false;\n    }\n    return true;\n}\n/**\n * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n *\n * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n * is of expected type:\n * - whether tNode has either Element or ElementContainer type\n * - or if we want to match \"ng-template\" tag, we check for Container type\n */\nfunction hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n    return currentSelector === tNode.tagName &&\n        (isProjectionMode ||\n            (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n            (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data to match\n * @param selector\n * @returns true if node matches the selector.\n */\nfunction isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n    ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n    var mode = 4 /* ELEMENT */;\n    var nodeAttrs = tNode.attrs;\n    var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n    // When processing \":not\" selectors, we skip to the next \":not\" if the\n    // current one doesn't match\n    var skipToNextSelector = false;\n    for (var i = 0; i < selector.length; i++) {\n        var current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = current | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                current === '' && selector.length === 1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n            var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            if (selectorAttrValue !== '') {\n                var nodeAttrValue = void 0;\n                var maybeAttrName = nodeAttrs[attrIndexInNode];\n                if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                    nodeAttrValue = '';\n                }\n                else {\n                    ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                    nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                }\n                if (mode & 8 /* CLASS */ &&\n                    !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\n/**\n * Examines an attributes definition array from a node to find the index of the\n * attribute with the specified name.\n *\n * NOTE: Will not find namespaced attributes.\n *\n * @param name the name of the attribute to find\n * @param attrs the attribute array to examine\n */\nfunction findAttrIndexInNode(name, attrs) {\n    if (attrs === null)\n        return -1;\n    var selectOnlyMode = false;\n    var i = 0;\n    while (i < attrs.length) {\n        var maybeAttrName = attrs[i];\n        if (maybeAttrName === name) {\n            return i;\n        }\n        else if (maybeAttrName === 0 /* NamespaceURI */) {\n            // NOTE(benlesh): will not find namespaced attributes. This is by design.\n            i += 4;\n        }\n        else {\n            if (maybeAttrName === 3 /* SelectOnly */) {\n                selectOnlyMode = true;\n            }\n            i += selectOnlyMode ? 1 : 2;\n        }\n    }\n    return -1;\n}\nfunction isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n    if (isProjectionMode === void 0) { isProjectionMode = false; }\n    for (var i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getProjectAsAttrValue(tNode) {\n    var nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return nodeAttrs[ngProjectAsAttrIdx + 1];\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n */\nfunction matchingSelectorIndex(tNode, selectors, textSelectors) {\n    var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (var i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null &&\n                isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/**\n * Combines the binding value and a factory for an animation player.\n *\n * Used to bind a player to an element template binding (currently only\n * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n * supported). The provided `factoryFn` function will be run once all\n * the associated bindings have been evaluated on the element and is\n * designed to return a player which will then be placed on the element.\n *\n * @param factoryFn The function that is used to create a player\n *   once all the rendering-related (styling values) have been\n *   processed for the element binding.\n * @param value The raw value that will be exposed to the binding\n *   so that the binding can update its internal values when\n *   any changes are evaluated.\n */\nfunction bindPlayerFactory(factoryFn, value) {\n    return new BoundPlayerFactory(factoryFn, value);\n}\nvar BoundPlayerFactory = /** @class */ (function () {\n    function BoundPlayerFactory(fn, value) {\n        this.fn = fn;\n        this.value = value;\n    }\n    return BoundPlayerFactory;\n}());\n\nvar CorePlayerHandler = /** @class */ (function () {\n    function CorePlayerHandler() {\n        this._players = [];\n    }\n    CorePlayerHandler.prototype.flushPlayers = function () {\n        for (var i = 0; i < this._players.length; i++) {\n            var player = this._players[i];\n            if (!player.parent && player.state === 0 /* Pending */) {\n                player.play();\n            }\n        }\n        this._players.length = 0;\n    };\n    CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n    return CorePlayerHandler;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANIMATION_PROP_PREFIX = '@';\nfunction createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n    return [\n        0,\n        [null, -1, false, sanitizer || null],\n        initialStyles || [null],\n        initialClasses || [null],\n        [0, 0],\n        element || null,\n        null,\n        null,\n        null,\n    ];\n}\n/**\n * Used clone a copy of a pre-computed template of a styling context.\n *\n * A pre-computed template is designed to be computed once for a given element\n * (instructions.ts has logic for caching this).\n */\nfunction allocStylingContext(element, templateStyleContext) {\n    // each instance gets a copy\n    var context = templateStyleContext.slice();\n    context[5 /* ElementPosition */] = element;\n    // this will prevent any other directives from extending the context\n    context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n    return context;\n}\n/**\n * Retrieve the `StylingContext` at a given index.\n *\n * This method lazily creates the `StylingContext`. This is because in most cases\n * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n * which would create unnecessary memory pressure.\n *\n * @param index Index of the style allocation. See: `elementStyling`.\n * @param viewData The view to search for the styling context\n */\nfunction getStylingContext(index, viewData) {\n    var storageIndex = index;\n    var slotValue = viewData[storageIndex];\n    var wrapper = viewData;\n    while (Array.isArray(slotValue)) {\n        wrapper = slotValue;\n        slotValue = slotValue[HOST];\n    }\n    if (isStylingContext(wrapper)) {\n        return wrapper;\n    }\n    else {\n        // This is an LView or an LContainer\n        var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n        if (wrapper !== viewData) {\n            storageIndex = HOST;\n        }\n        return wrapper[storageIndex] = stylingTemplate ?\n            allocStylingContext(slotValue, stylingTemplate) :\n            createEmptyStylingContext(slotValue);\n    }\n}\nfunction isStylingContext(value) {\n    // Not an LView or an LContainer\n    return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n        Array.isArray(value[2 /* InitialStyleValuesPosition */]);\n}\nfunction isAnimationProp(name) {\n    return name[0] === ANIMATION_PROP_PREFIX;\n}\nfunction addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n    ref = ref || element;\n    if (playerContextIndex) {\n        playerContext[playerContextIndex] = player;\n    }\n    else {\n        playerContext.push(player);\n    }\n    if (player) {\n        player.addEventListener(200 /* Destroyed */, function () {\n            var index = playerContext.indexOf(player);\n            var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            // if the player is being removed from the factory side of the context\n            // (which is where the [style] and [class] bindings do their thing) then\n            // that side of the array cannot be resized since the respective bindings\n            // have pointer index values that point to the associated factory instance\n            if (index) {\n                if (index < nonFactoryPlayerIndex) {\n                    playerContext[index] = null;\n                }\n                else {\n                    playerContext.splice(index, 1);\n                }\n            }\n            player.destroy();\n        });\n        var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n        playerHandler.queuePlayer(player, ref);\n        return true;\n    }\n    return false;\n}\nfunction getPlayersInternal(playerContext) {\n    var players = [];\n    var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n    // add all factory-based players (which are apart of [style] and [class] bindings)\n    for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n        var player = playerContext[i];\n        if (player) {\n            players.push(player);\n        }\n    }\n    // add all custom players (not apart of [style] and [class] bindings)\n    for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n        players.push(playerContext[i]);\n    }\n    return players;\n}\nfunction getOrCreatePlayerContext(target, context) {\n    context = context || getLContext(target);\n    if (!context) {\n        ngDevMode && throwInvalidRefError();\n        return null;\n    }\n    var lView = context.lView, nodeIndex = context.nodeIndex;\n    var stylingContext = getStylingContext(nodeIndex, lView);\n    return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n}\nfunction getPlayerContext(stylingContext) {\n    return stylingContext[8 /* PlayerContext */];\n}\nfunction allocPlayerContext(data) {\n    return data[8 /* PlayerContext */] =\n        [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n}\nfunction throwInvalidRefError() {\n    throw new Error('Only elements that exist in an Angular application can be used for animations');\n}\nfunction hasStyling(attrs) {\n    for (var i = 0; i < attrs.length; i++) {\n        var attr = attrs[i];\n        if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n            return true;\n    }\n    return false;\n}\nfunction hasClassInput(tNode) {\n    return tNode.flags & 8 /* hasClassInput */ ? true : false;\n}\n\n/**\n * This file includes the code to power all styling-binding operations in Angular.\n *\n * These include:\n * [style]=\"myStyleObj\"\n * [class]=\"myClassObj\"\n * [style.prop]=\"myPropValue\"\n * [class.name]=\"myClassValue\"\n *\n * There are many different ways in which these functions below are called. Please see\n * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n */\n/**\n * Creates a new StylingContext an fills it with the provided static styling attribute values.\n */\nfunction initializeStaticContext(attrs) {\n    var context = createEmptyStylingContext();\n    var initialClasses = context[3 /* InitialClassValuesPosition */] =\n        [null];\n    var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n        [null];\n    // The attributes array has marker values (numbers) indicating what the subsequent\n    // values represent. When we encounter a number, we set the mode to that type of attribute.\n    var mode = -1;\n    for (var i = 0; i < attrs.length; i++) {\n        var attr = attrs[i];\n        if (typeof attr == 'number') {\n            mode = attr;\n        }\n        else if (mode === 2 /* Styles */) {\n            initialStyles.push(attr, attrs[++i]);\n        }\n        else if (mode === 1 /* Classes */) {\n            initialClasses.push(attr, true);\n        }\n        else if (mode === 3 /* SelectOnly */) {\n            break;\n        }\n    }\n    return context;\n}\n/**\n * Designed to update an existing styling context with new static styling\n * data (classes and styles).\n *\n * @param context the existing styling context\n * @param attrs an array of new static styling attributes that will be\n *              assigned to the context\n * @param directive the directive instance with which static data is associated with.\n */\nfunction patchContextWithStaticAttrs(context, attrs, directive) {\n    // If the styling context has already been patched with the given directive's bindings,\n    // then there is no point in doing it again. The reason why this may happen (the directive\n    // styling being patched twice) is because the `stylingBinding` function is called each time\n    // an element is created (both within a template function and within directive host bindings).\n    var directives = context[1 /* DirectiveRegistryPosition */];\n    if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n        // this is a new directive which we have not seen yet.\n        directives.push(directive, -1, false, null);\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n            }\n        }\n    }\n}\n/**\n * Designed to add a style or class value into the existing set of initial styles.\n *\n * The function will search and figure out if a style/class value is already present\n * within the provided initial styling array. If and when a style/class value is not\n * present (or if it's value is falsy) then it will be inserted/updated in the list\n * of initial styling values.\n */\nfunction patchInitialStylingValue(initialStyling, prop, value) {\n    // Even values are keys; Odd numbers are values; Search keys only\n    for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n        var key = initialStyling[i];\n        if (key === prop) {\n            var existingValue = initialStyling[i + 1 /* ValueOffset */];\n            // If there is no previous style value (when `null`) or no previous class\n            // applied (when `false`) then we update the the newly given value.\n            if (existingValue == null || existingValue == false) {\n                initialStyling[i + 1 /* ValueOffset */] = value;\n            }\n            return;\n        }\n        i = i + 2 /* Size */;\n    }\n    // We did not find existing key, add a new one.\n    initialStyling.push(prop, value);\n}\n/**\n * Runs through the initial styling data present in the context and renders\n * them via the renderer on the element.\n */\nfunction renderInitialStylesAndClasses(element, context, renderer) {\n    var initialClasses = context[3 /* InitialClassValuesPosition */];\n    renderInitialStylingValues(element, renderer, initialClasses, true);\n    var initialStyles = context[2 /* InitialStyleValuesPosition */];\n    renderInitialStylingValues(element, renderer, initialStyles, false);\n}\n/**\n * This is a helper function designed to render each entry present within the\n * provided list of initialStylingValues.\n */\nfunction renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n    for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n        var value = initialStylingValues[i + 1 /* ValueOffset */];\n        if (value) {\n            if (isEntryClassBased) {\n                setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            else {\n                setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n            }\n        }\n    }\n}\n/**\n * Adds in new binding values to a styling context.\n *\n * If a directive value is provided then all provided class/style binding names will\n * reference the provided directive.\n *\n * @param context the existing styling context\n * @param directiveRef the directive that the new bindings will reference\n * @param classBindingNames an array of class binding names that will be added to the context\n * @param styleBindingNames an array of style binding names that will be added to the context\n * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n *    instance will only be active if and when the directive updates the bindings that it owns.\n */\nfunction updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n    if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n        return;\n    // this means the context has already been patched with the directive's bindings\n    var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n    if (directiveIndex === -1) {\n        // this means the directive has already been patched in ... No point in doing anything\n        return;\n    }\n    // there are alot of variables being used below to track where in the context the new\n    // binding values will be placed. Because the context consists of multiple types of\n    // entries (single classes/styles and multi classes/styles) alot of the index positions\n    // need to be computed ahead of time and the context needs to be extended before the values\n    // are inserted in.\n    var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n    var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n    var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n    var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n    var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n    var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n    var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n    var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n    var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n    // because we're inserting more bindings into the context, this means that the\n    // binding values need to be referenced the singlePropOffsetValues array so that\n    // the template/directive can easily find them inside of the `elementStyleProp`\n    // and the `elementClassProp` functions without iterating through the entire context.\n    // The first step to setting up these reference points is to mark how many bindings\n    // are being added. Even if these bindings already exist in the context, the directive\n    // or template code will still call them unknowingly. Therefore the total values need\n    // to be registered so that we know how many bindings are assigned to each directive.\n    var currentSinglePropsLength = singlePropOffsetValues.length;\n    singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n    // the code below will check to see if a new style binding already exists in the context\n    // if so then there is no point in inserting it into the context again. Whether or not it\n    // exists the styling offset code will now know exactly where it is\n    var insertionOffset = 0;\n    var filteredStyleBindingNames = [];\n    if (styleBindingNames && styleBindingNames.length) {\n        for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n            var name_1 = styleBindingNames[i_1];\n            var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n            if (singlePropIndex == -1) {\n                singlePropIndex = singleClassesStartIndex + insertionOffset;\n                insertionOffset += 4 /* Size */;\n                filteredStyleBindingNames.push(name_1);\n            }\n            singlePropOffsetValues.push(singlePropIndex);\n        }\n    }\n    // just like with the style binding loop above, the new class bindings get the same treatment...\n    var filteredClassBindingNames = [];\n    if (classBindingNames && classBindingNames.length) {\n        for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n            var name_2 = classBindingNames[i_2];\n            var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n            if (singlePropIndex == -1) {\n                singlePropIndex = multiStylesStartIndex + insertionOffset;\n                insertionOffset += 4 /* Size */;\n                filteredClassBindingNames.push(name_2);\n            }\n            else {\n                singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n            }\n            singlePropOffsetValues.push(singlePropIndex);\n        }\n    }\n    // because new styles are being inserted, this means the existing collection of style offset\n    // index values are incorrect (they point to the wrong values). The code below will run through\n    // the entire offset array and update the existing set of index values to point to their new\n    // locations while taking the new binding values into consideration.\n    var i = 2 /* ValueStartPosition */;\n    if (filteredStyleBindingNames.length) {\n        while (i < currentSinglePropsLength) {\n            var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n            var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n            if (totalClasses) {\n                var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                for (var j = start; j < start + totalClasses; j++) {\n                    singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n            }\n            var total = totalStyles + totalClasses;\n            i += 2 /* ValueStartPosition */ + total;\n        }\n    }\n    var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n    // in the event that there are new style values being inserted, all existing class and style\n    // bindings need to have their pointer values offsetted with the new amount of space that is\n    // used for the new style/class bindings.\n    for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n        var isMultiBased = i_3 >= multiStylesStartIndex;\n        var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n        var flag = getPointers(context, i_3);\n        var staticIndex = getInitialIndex(flag);\n        var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n        if (isMultiBased) {\n            singleOrMultiIndex +=\n                isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n        }\n        else {\n            singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n        }\n        setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n    }\n    // this is where we make space in the context for the new style bindings\n    for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n        context.splice(multiClassesStartIndex, 0, null);\n        context.splice(singleClassesStartIndex, 0, null);\n        singleClassesStartIndex++;\n        multiStylesStartIndex++;\n        multiClassesStartIndex += 2; // both single + multi slots were inserted\n    }\n    // this is where we make space in the context for the new class bindings\n    for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n        context.splice(multiStylesStartIndex, 0, null);\n        context.push(null);\n        multiStylesStartIndex++;\n        multiClassesStartIndex++;\n    }\n    var initialClasses = context[3 /* InitialClassValuesPosition */];\n    var initialStyles = context[2 /* InitialStyleValuesPosition */];\n    // the code below will insert each new entry into the context and assign the appropriate\n    // flags and index values to them. It's important this runs at the end of this function\n    // because the context, property offset and index values have all been computed just before.\n    for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n        var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n        var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n        var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n            filteredStyleBindingNames[adjustedIndex];\n        var multiIndex = void 0, singleIndex = void 0;\n        if (entryIsClassBased) {\n            multiIndex = multiClassesStartIndex +\n                ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            singleIndex = singleClassesStartIndex +\n                ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n        }\n        else {\n            multiIndex =\n                multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            singleIndex = singleStylesStartIndex +\n                ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n        }\n        // if a property is not found in the initial style values list then it\n        // is ALWAYS added incase a follow-up directive introduces the same initial\n        // style/class value later on.\n        var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n        var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n        if (indexForInitial === -1) {\n            indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n            initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n        }\n        else {\n            indexForInitial += 1 /* ValueOffset */;\n        }\n        var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n        setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n        setProp(context, singleIndex, propName);\n        setValue(context, singleIndex, null);\n        setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n        setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n        setProp(context, multiIndex, propName);\n        setValue(context, multiIndex, null);\n        setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n    }\n    // the total classes/style values are updated so the next time the context is patched\n    // additional style/class bindings from another directive then it knows exactly where\n    // to insert them in the context\n    singlePropOffsetValues[1 /* ClassesCountPosition */] =\n        totalCurrentClassBindings + filteredClassBindingNames.length;\n    singlePropOffsetValues[0 /* StylesCountPosition */] =\n        totalCurrentStyleBindings + filteredStyleBindingNames.length;\n    // there is no initial value flag for the master index since it doesn't\n    // reference an initial style value\n    var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n        (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n    setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n}\n/**\n * Searches through the existing registry of directives\n */\nfunction findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n    var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n    var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n    var directiveIndex;\n    var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n    if (detectedIndex === -1) {\n        directiveIndex = directiveRefs.length / 4 /* Size */;\n        directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n    }\n    else {\n        var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n        if (directiveRefs[singlePropStartPosition] >= 0) {\n            // the directive has already been patched into the context\n            return -1;\n        }\n        directiveIndex = detectedIndex / 4 /* Size */;\n        // because the directive already existed this means that it was set during elementHostAttrs or\n        // elementStart which means that the binding values were not here. Therefore, the values below\n        // need to be applied so that single class and style properties can be assigned later.\n        var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n        directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n        // the sanitizer is also apart of the binding process and will be used when bindings are\n        // applied.\n        var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n        directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n    }\n    return directiveIndex;\n}\nfunction getMatchingBindingIndex(context, bindingName, start, end) {\n    for (var j = start; j < end; j += 4 /* Size */) {\n        if (getProp(context, j) === bindingName)\n            return j;\n    }\n    return -1;\n}\n/**\n * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n * applied to the element once `renderStyling` is called.\n *\n * All missing styles/class (any values that are not provided in the new `styles`\n * or `classes` params) will resolve to `null` within their respective positions\n * in the context.\n *\n * @param context The styling context that will be updated with the\n *    newly provided style values.\n * @param classesInput The key/value map of CSS class names that will be used for the update.\n * @param stylesInput The key/value map of CSS styles that will be used for the update.\n */\nfunction updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n    stylesInput = stylesInput || null;\n    var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n    var element = context[5 /* ElementPosition */];\n    var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n        new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n        null;\n    var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n        new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n        null;\n    var classesValue = classesPlayerBuilder ?\n        classesInput.value :\n        classesInput;\n    var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n    // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n    var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n        classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n    var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n    if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n        return;\n    context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n    context[7 /* CachedStyleValue */] = stylesValue;\n    var classNames = EMPTY_ARRAY;\n    var applyAllClasses = false;\n    var playerBuildersAreDirty = false;\n    var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n    if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n        setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n        playerBuildersAreDirty = true;\n    }\n    var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n    if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n        setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n        playerBuildersAreDirty = true;\n    }\n    // each time a string-based value pops up then it shouldn't require a deep\n    // check of what's changed.\n    if (!ignoreAllClassUpdates) {\n        if (typeof classesValue == 'string') {\n            classNames = classesValue.split(/\\s+/);\n            // this boolean is used to avoid having to create a key/value map of `true` values\n            // since a classname string implies that all those classes are added\n            applyAllClasses = true;\n        }\n        else {\n            classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n        }\n    }\n    var classes = (classesValue || EMPTY_OBJ);\n    var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n    var styles = stylesValue || EMPTY_OBJ;\n    var classesStartIndex = styleProps.length;\n    var multiStartIndex = getMultiStartIndex(context);\n    var dirty = false;\n    var ctxIndex = multiStartIndex;\n    var propIndex = 0;\n    var propLimit = styleProps.length + classNames.length;\n    // the main loop here will try and figure out how the shape of the provided\n    // styles differ with respect to the context. Later if the context/styles/classes\n    // are off-balance then they will be dealt in another loop after this one\n    while (ctxIndex < context.length && propIndex < propLimit) {\n        var isClassBased = propIndex >= classesStartIndex;\n        var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n        // when there is a cache-hit for a string-based class then we should\n        // avoid doing any work diffing any of the changes\n        if (processValue) {\n            var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n            var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n            var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n            var prop = getProp(context, ctxIndex);\n            if (prop === newProp) {\n                var value = getValue(context, ctxIndex);\n                var flag = getPointers(context, ctxIndex);\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                if (hasValueChanged(flag, value, newValue)) {\n                    setValue(context, ctxIndex, newValue);\n                    playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                    var initialValue = getInitialValue(context, flag);\n                    // SKIP IF INITIAL CHECK\n                    // If the former `value` is `null` then it means that an initial value\n                    // could be being rendered on screen. If that is the case then there is\n                    // no point in updating the value incase it matches. In other words if the\n                    // new value is the exact same as the previously rendered value (which\n                    // happens to be the initial value) then do nothing.\n                    if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                        setDirty(context, ctxIndex, true);\n                        dirty = true;\n                    }\n                }\n            }\n            else {\n                var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                if (indexOfEntry > 0) {\n                    // it was found at a later point ... just swap the values\n                    var valueToCompare = getValue(context, indexOfEntry);\n                    var flagToCompare = getPointers(context, indexOfEntry);\n                    swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                    if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                        var initialValue = getInitialValue(context, flagToCompare);\n                        setValue(context, ctxIndex, newValue);\n                        // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                        if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    // we only care to do this if the insertion is in the middle\n                    var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                    playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                    insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n        }\n        ctxIndex += 4 /* Size */;\n        propIndex++;\n    }\n    // this means that there are left-over values in the context that\n    // were not included in the provided styles/classes and in this\n    // case the  goal is to \"remove\" them from the context (by nullifying)\n    while (ctxIndex < context.length) {\n        var flag = getPointers(context, ctxIndex);\n        var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n        var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n        if (processValue) {\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                // we keep the player factory the same so that the `nulled` value can\n                // be instructed into the player because removing a style and/or a class\n                // is a valid animation player instruction.\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n        }\n        ctxIndex += 4 /* Size */;\n    }\n    // this means that there are left-over properties in the context that\n    // were not detected in the context during the loop above. In that\n    // case we want to add the new entries into the list\n    var sanitizer = getStyleSanitizer(context, directiveIndex);\n    while (propIndex < propLimit) {\n        var isClassBased = propIndex >= classesStartIndex;\n        var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n        if (processValue) {\n            var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n            var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n            var ctxIndex_1 = context.length;\n            context.push(flag, prop, value, 0);\n            setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n            dirty = true;\n        }\n        propIndex++;\n    }\n    if (dirty) {\n        setContextDirty(context, true);\n        setDirectiveDirty(context, directiveIndex, true);\n    }\n    if (playerBuildersAreDirty) {\n        setContextPlayersDirty(context, true);\n    }\n}\n/**\n * This method will toggle the referenced CSS class (by the provided index)\n * within the given context.\n *\n * @param context The styling context that will be updated with the\n *    newly provided class value.\n * @param offset The index of the CSS class which is being updated.\n * @param addOrRemove Whether or not to add or remove the CSS class\n */\nfunction updateClassProp(context, offset, addOrRemove, directiveRef) {\n    _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n}\n/**\n * Sets and resolves a single style value on the provided `StylingContext` so\n * that they can be applied to the element once `renderStyling` is called.\n *\n * Note that prop-level styling values are considered higher priority than any styling that\n * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n * then any styles/classes that have been applied using this function will be considered first\n * (then multi values second and then initial values as a backup).\n *\n * @param context The styling context that will be updated with the\n *    newly provided style value.\n * @param offset The index of the property which is being updated.\n * @param value The CSS style value that will be assigned\n * @param directiveRef an optional reference to the directive responsible\n *    for this binding change. If present then style binding will only\n *    actualize if the directive has ownership over this binding\n *    (see styling.ts#directives for more information about the algorithm).\n */\nfunction updateStyleProp(context, offset, input, directiveRef) {\n    _updateSingleStylingValue(context, offset, input, false, directiveRef);\n}\nfunction _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n    var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n    var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n    var currValue = getValue(context, singleIndex);\n    var currFlag = getPointers(context, singleIndex);\n    var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n    var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n    if (hasValueChanged(currFlag, currValue, value) &&\n        allowValueChange(currValue, value, currDirective, directiveIndex)) {\n        var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n        var element = context[5 /* ElementPosition */];\n        var playerBuilder = input instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n            null;\n        var value_1 = (playerBuilder ? input.value : input);\n        var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n        var playerBuildersAreDirty = false;\n        var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n        if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n            var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n            playerBuilderIndex = playerBuilder ? newIndex : 0;\n            playerBuildersAreDirty = true;\n        }\n        if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n            setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n        }\n        if (currDirective !== directiveIndex) {\n            var prop = getProp(context, singleIndex);\n            var sanitizer = getStyleSanitizer(context, directiveIndex);\n            setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n        }\n        // the value will always get updated (even if the dirty flag is skipped)\n        setValue(context, singleIndex, value_1);\n        var indexForMulti = getMultiOrSingleIndex(currFlag);\n        // if the value is the same in the multi-area then there's no point in re-assembling\n        var valueForMulti = getValue(context, indexForMulti);\n        if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n            var multiDirty = false;\n            var singleDirty = true;\n            // only when the value is set to `null` should the multi-value get flagged\n            if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                multiDirty = true;\n                singleDirty = false;\n            }\n            setDirty(context, indexForMulti, multiDirty);\n            setDirty(context, singleIndex, singleDirty);\n            setDirectiveDirty(context, directiveIndex, true);\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n}\n/**\n * Renders all queued styling using a renderer onto the given element.\n *\n * This function works by rendering any styles (that have been applied\n * using `updateStylingMap`) and any classes (that have been applied using\n * `updateStyleProp`) onto the provided element using the provided renderer.\n * Just before the styles/classes are rendered a final key/value style map\n * will be assembled (if `styleStore` or `classStore` are provided).\n *\n * @param lElement the element that the styles will be rendered on\n * @param context The styling context that will be used to determine\n *      what styles will be rendered\n * @param renderer the renderer that will be used to apply the styling\n * @param classesStore if provided, the updated class values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @param stylesStore if provided, the updated style values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @param directiveRef an optional directive that will be used to target which\n *    styling values are rendered. If left empty, only the bindings that are\n *    registered on the template will be rendered.\n * @returns number the total amount of players that got queued for animation (if any)\n */\nfunction renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n    var totalPlayersQueued = 0;\n    var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n    if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n        var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n        var native = context[5 /* ElementPosition */];\n        var multiStartIndex = getMultiStartIndex(context);\n        var onlySingleClasses = limitToSingleClasses(context);\n        var stillDirty = false;\n        for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n            // there is no point in rendering styles that have not changed on screen\n            if (isDirty(context, i)) {\n                var flag = getPointers(context, i);\n                var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                if (targetDirectiveIndex !== directiveIndex) {\n                    stillDirty = true;\n                    continue;\n                }\n                var prop = getProp(context, i);\n                var value = getValue(context, i);\n                var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                var playerBuilder = getPlayerBuilder(context, i);\n                var isClassBased = flag & 2 /* Class */ ? true : false;\n                var isInSingleRegion = i < multiStartIndex;\n                var readInitialValue = !isClassBased || !onlySingleClasses;\n                var valueToApply = value;\n                // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                // this check implies that a single value was removed and we\n                // should now defer to a multi value and use that (if set).\n                if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                    // single values ALWAYS have a reference to a multi index\n                    var multiIndex = getMultiOrSingleIndex(flag);\n                    valueToApply = getValue(context, multiIndex);\n                }\n                // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                // the initial value will always be a string or null,\n                // therefore we can safely adopt it incase there's nothing else\n                // note that this should always be a falsy check since `false` is used\n                // for both class and style comparisons (styles can't be false and false\n                // classes are turned off and should therefore defer to their initial values)\n                // Note that we ignore class-based deferals because otherwise a class can never\n                // be removed in the case that it exists as true in the initial classes list...\n                if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                    valueToApply = getInitialValue(context, flag);\n                }\n                // if the first render is true then we do not want to start applying falsy\n                // values to the DOM element's styling. Otherwise then we know there has\n                // been a change and even if it's falsy then it's removing something that\n                // was truthy before.\n                var doApplyValue = isFirstRender ? valueToApply : true;\n                if (doApplyValue) {\n                    if (isClassBased) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                    }\n                    else {\n                        setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                    }\n                }\n                setDirty(context, i, false);\n            }\n        }\n        if (flushPlayerBuilders) {\n            var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n            var playerContext = getPlayerContext(context);\n            var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                var builder = playerContext[i];\n                var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                var oldPlayer = playerContext[playerInsertionIndex];\n                if (builder) {\n                    var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                    if (player !== undefined) {\n                        if (player != null) {\n                            var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                            wasQueued && totalPlayersQueued++;\n                        }\n                        if (oldPlayer) {\n                            oldPlayer.destroy();\n                        }\n                    }\n                }\n                else if (oldPlayer) {\n                    // the player builder has been removed ... therefore we should delete the associated\n                    // player\n                    oldPlayer.destroy();\n                }\n            }\n            setContextPlayersDirty(context, false);\n        }\n        setDirectiveDirty(context, targetDirectiveIndex, false);\n        setContextDirty(context, stillDirty);\n    }\n    return totalPlayersQueued;\n}\n/**\n * This function renders a given CSS prop/value entry using the\n * provided renderer. If a `store` value is provided then\n * that will be used a render context instead of the provided\n * renderer.\n *\n * @param native the DOM Element\n * @param prop the CSS style property that will be rendered\n * @param value the CSS style value that will be rendered\n * @param renderer\n * @param store an optional key/value map that will be used as a context to render styles on\n */\nfunction setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n    value = sanitizer && value ? sanitizer(prop, value) : value;\n    if (store || playerBuilder) {\n        if (store) {\n            store.setValue(prop, value);\n        }\n        if (playerBuilder) {\n            playerBuilder.setValue(prop, value);\n        }\n    }\n    else if (value) {\n        value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n        // assign as numbers\n        ngDevMode && ngDevMode.rendererSetStyle++;\n        isProceduralRenderer(renderer) ?\n            renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n            native['style'].setProperty(prop, value);\n    }\n    else {\n        ngDevMode && ngDevMode.rendererRemoveStyle++;\n        isProceduralRenderer(renderer) ?\n            renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n            native['style'].removeProperty(prop);\n    }\n}\n/**\n * This function renders a given CSS class value using the provided\n * renderer (by adding or removing it from the provided element).\n * If a `store` value is provided then that will be used a render\n * context instead of the provided renderer.\n *\n * @param native the DOM Element\n * @param prop the CSS style property that will be rendered\n * @param value the CSS style value that will be rendered\n * @param renderer\n * @param store an optional key/value map that will be used as a context to render styles on\n */\nfunction setClass(native, className, add, renderer, store, playerBuilder) {\n    if (store || playerBuilder) {\n        if (store) {\n            store.setValue(className, add);\n        }\n        if (playerBuilder) {\n            playerBuilder.setValue(className, add);\n        }\n    }\n    else if (add) {\n        ngDevMode && ngDevMode.rendererAddClass++;\n        isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n            native['classList'].add(className);\n    }\n    else {\n        ngDevMode && ngDevMode.rendererRemoveClass++;\n        isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n            native['classList'].remove(className);\n    }\n}\nfunction setSanitizeFlag(context, index, sanitizeYes) {\n    if (sanitizeYes) {\n        context[index] |= 4 /* Sanitize */;\n    }\n    else {\n        context[index] &= ~4 /* Sanitize */;\n    }\n}\nfunction setDirty(context, index, isDirtyYes) {\n    var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    if (isDirtyYes) {\n        context[adjustedIndex] |= 1 /* Dirty */;\n    }\n    else {\n        context[adjustedIndex] &= ~1 /* Dirty */;\n    }\n}\nfunction isDirty(context, index) {\n    var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n}\nfunction isClassBasedValue(context, index) {\n    var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n}\nfunction isSanitizable(context, index) {\n    var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n}\nfunction pointers(configFlag, staticIndex, dynamicIndex) {\n    return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n        (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n}\nfunction getInitialValue(context, flag) {\n    var index = getInitialIndex(flag);\n    var entryIsClassBased = flag & 2 /* Class */;\n    var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n        context[2 /* InitialStyleValuesPosition */];\n    return initialValues[index];\n}\nfunction getInitialIndex(flag) {\n    return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n}\nfunction getMultiOrSingleIndex(flag) {\n    var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n    return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n}\nfunction getMultiStartIndex(context) {\n    return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n}\nfunction setProp(context, index, prop) {\n    context[index + 1 /* PropertyOffset */] = prop;\n}\nfunction setValue(context, index, value) {\n    context[index + 2 /* ValueOffset */] = value;\n}\nfunction hasPlayerBuilderChanged(context, builder, index) {\n    var playerContext = context[8 /* PlayerContext */];\n    if (builder) {\n        if (!playerContext || index === 0) {\n            return true;\n        }\n    }\n    else if (!playerContext) {\n        return false;\n    }\n    return playerContext[index] !== builder;\n}\nfunction setPlayerBuilder(context, builder, insertionIndex) {\n    var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n    if (insertionIndex > 0) {\n        playerContext[insertionIndex] = builder;\n    }\n    else {\n        insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n        playerContext.splice(insertionIndex, 0, builder, null);\n        playerContext[0 /* NonBuilderPlayersStart */] +=\n            2 /* PlayerAndPlayerBuildersTupleSize */;\n    }\n    return insertionIndex;\n}\nfunction directiveOwnerPointers(directiveIndex, playerIndex) {\n    return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n}\nfunction setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n    var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n    context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n}\nfunction getPlayerBuilderIndex(context, index) {\n    var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n    var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n        65535 /* BitMask */;\n    return playerBuilderIndex;\n}\nfunction getPlayerBuilder(context, index) {\n    var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n    if (playerBuilderIndex) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (playerContext) {\n            return playerContext[playerBuilderIndex];\n        }\n    }\n    return null;\n}\nfunction setFlag(context, index, flag) {\n    var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n    context[adjustedIndex] = flag;\n}\nfunction getPointers(context, index) {\n    var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n    return context[adjustedIndex];\n}\nfunction getValue(context, index) {\n    return context[index + 2 /* ValueOffset */];\n}\nfunction getProp(context, index) {\n    return context[index + 1 /* PropertyOffset */];\n}\nfunction isContextDirty(context) {\n    return isDirty(context, 0 /* MasterFlagPosition */);\n}\nfunction limitToSingleClasses(context) {\n    return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n}\nfunction setContextDirty(context, isDirtyYes) {\n    setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n}\nfunction setContextPlayersDirty(context, isDirtyYes) {\n    if (isDirtyYes) {\n        context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n    }\n    else {\n        context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n    }\n}\nfunction findEntryPositionByProp(context, prop, startIndex) {\n    for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n        var thisProp = context[i];\n        if (thisProp == prop) {\n            return i - 1 /* PropertyOffset */;\n        }\n    }\n    return -1;\n}\nfunction swapMultiContextEntries(context, indexA, indexB) {\n    var tmpValue = getValue(context, indexA);\n    var tmpProp = getProp(context, indexA);\n    var tmpFlag = getPointers(context, indexA);\n    var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n    var flagA = tmpFlag;\n    var flagB = getPointers(context, indexB);\n    var singleIndexA = getMultiOrSingleIndex(flagA);\n    if (singleIndexA >= 0) {\n        var _flag = getPointers(context, singleIndexA);\n        var _initial = getInitialIndex(_flag);\n        setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n    }\n    var singleIndexB = getMultiOrSingleIndex(flagB);\n    if (singleIndexB >= 0) {\n        var _flag = getPointers(context, singleIndexB);\n        var _initial = getInitialIndex(_flag);\n        setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n    }\n    setValue(context, indexA, getValue(context, indexB));\n    setProp(context, indexA, getProp(context, indexB));\n    setFlag(context, indexA, getPointers(context, indexB));\n    var playerIndexA = getPlayerBuilderIndex(context, indexB);\n    var directiveIndexA = 0;\n    setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n    setValue(context, indexB, tmpValue);\n    setProp(context, indexB, tmpProp);\n    setFlag(context, indexB, tmpFlag);\n    setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n}\nfunction updateSinglePointerValues(context, indexStartPosition) {\n    for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n        var multiFlag = getPointers(context, i);\n        var singleIndex = getMultiOrSingleIndex(multiFlag);\n        if (singleIndex > 0) {\n            var singleFlag = getPointers(context, singleIndex);\n            var initialIndexForSingle = getInitialIndex(singleFlag);\n            var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n            var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n            setFlag(context, singleIndex, updatedFlag);\n        }\n    }\n}\nfunction insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n    var doShift = index < context.length;\n    // prop does not exist in the list, add it in\n    context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n    setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n    if (doShift) {\n        // because the value was inserted midway into the array then we\n        // need to update all the shifted multi values' single value\n        // pointers to point to the newly shifted location\n        updateSinglePointerValues(context, index + 4 /* Size */);\n    }\n}\nfunction valueExists(value, isClassBased) {\n    if (isClassBased) {\n        return value ? true : false;\n    }\n    return value !== null;\n}\nfunction prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n    var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n    var initialIndex;\n    if (entryIsClassBased) {\n        flag |= 2 /* Class */;\n        initialIndex =\n            getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n    }\n    else {\n        initialIndex =\n            getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n    }\n    initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n    return pointers(flag, initialIndex, 0);\n}\nfunction hasValueChanged(flag, a, b) {\n    var isClassBased = flag & 2 /* Class */;\n    var hasValues = a && b;\n    var usesSanitizer = flag & 4 /* Sanitize */;\n    // the toString() comparison ensures that a value is checked\n    // ... otherwise (during sanitization bypassing) the === comparsion\n    // would fail since a new String() instance is created\n    if (!isClassBased && hasValues && usesSanitizer) {\n        // we know for sure we're dealing with strings at this point\n        return a.toString() !== b.toString();\n    }\n    // everything else is safe to check with a normal equality check\n    return a !== b;\n}\nvar ClassAndStylePlayerBuilder = /** @class */ (function () {\n    function ClassAndStylePlayerBuilder(factory, _element, _type) {\n        this._element = _element;\n        this._type = _type;\n        this._values = {};\n        this._dirty = false;\n        this._factory = factory;\n    }\n    ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n        if (this._values[prop] !== value) {\n            this._values[prop] = value;\n            this._dirty = true;\n        }\n    };\n    ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n        // if no values have been set here then this means the binding didn't\n        // change and therefore the binding values were not updated through\n        // `setValue` which means no new player will be provided.\n        if (this._dirty) {\n            var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n            this._values = {};\n            this._dirty = false;\n            return player;\n        }\n        return undefined;\n    };\n    return ClassAndStylePlayerBuilder;\n}());\nfunction getDirectiveIndexFromEntry(context, index) {\n    var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n    return value & 65535 /* BitMask */;\n}\nfunction getDirectiveIndexFromRegistry(context, directive) {\n    var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n    ngDevMode &&\n        assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n    return index > 0 ? index / 4 /* Size */ : 0;\n    // return index / DirectiveRegistryValuesIndex.Size;\n}\nfunction getDirectiveRegistryValuesIndexOf(directives, directive) {\n    for (var i = 0; i < directives.length; i += 4 /* Size */) {\n        if (directives[i] === directive) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction getInitialStylingValuesIndexOf(keyValues, key) {\n    for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n        if (keyValues[i] === key)\n            return i;\n    }\n    return -1;\n}\nfunction getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n    var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n        1 /* SinglePropValuesIndexOffset */];\n    var offsets = context[4 /* SinglePropOffsetPositions */];\n    var indexForOffset = singlePropOffsetRegistryIndex +\n        2 /* ValueStartPosition */ +\n        (isClassBased ?\n            offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n            0) +\n        offset;\n    return offsets[indexForOffset];\n}\nfunction getStyleSanitizer(context, directiveIndex) {\n    var dirs = context[1 /* DirectiveRegistryPosition */];\n    var value = dirs[directiveIndex * 4 /* Size */ +\n        3 /* StyleSanitizerOffset */] ||\n        dirs[3 /* StyleSanitizerOffset */] || null;\n    return value;\n}\nfunction isDirectiveDirty(context, directiveIndex) {\n    var dirs = context[1 /* DirectiveRegistryPosition */];\n    return dirs[directiveIndex * 4 /* Size */ +\n        2 /* DirtyFlagOffset */];\n}\nfunction setDirectiveDirty(context, directiveIndex, dirtyYes) {\n    var dirs = context[1 /* DirectiveRegistryPosition */];\n    dirs[directiveIndex * 4 /* Size */ +\n        2 /* DirtyFlagOffset */] = dirtyYes;\n}\nfunction allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n    // the code below relies the importance of directive's being tied to their\n    // index value. The index values for each directive are derived from being\n    // registered into the styling context directive registry. The most important\n    // directive is the parent component directive (the template) and each directive\n    // that is added after is considered less important than the previous entry. This\n    // prioritization of directives enables the styling algorithm to decide if a style\n    // or class should be allowed to be updated/replaced incase an earlier directive\n    // already wrote to the exact same style-property or className value. In other words\n    // ... this decides what to do if and when there is a collision.\n    if (currentValue) {\n        if (newValue) {\n            // if a directive index is lower than it always has priority over the\n            // previous directive's value...\n            return newDirectiveOwner <= currentDirectiveOwner;\n        }\n        else {\n            // only write a null value incase it's the same owner writing it.\n            // this avoids having a higher-priority directive write to null\n            // only to have a lesser-priority directive change right to a\n            // non-null value immediately afterwards.\n            return currentDirectiveOwner === newDirectiveOwner;\n        }\n    }\n    return true;\n}\n/**\n * This function is only designed to be called for `[class]` bindings when\n * `[ngClass]` (or something that uses `class` as an input) is present. Once\n * directive host bindings fully work for `[class]` and `[style]` inputs\n * then this can be deleted.\n */\nfunction getInitialClassNameValue(context) {\n    var className = context[6 /* CachedClassValueOrInitialClassString */];\n    if (className == null) {\n        className = '';\n        var initialClassValues = context[3 /* InitialClassValuesPosition */];\n        for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n            var isPresent = initialClassValues[i + 1];\n            if (isPresent) {\n                className += (className.length ? ' ' : '') + initialClassValues[i];\n            }\n        }\n        context[6 /* CachedClassValueOrInitialClassString */] = className;\n    }\n    return className;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nvar _CLEAN_PROMISE = Promise.resolve(null);\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n * bindings, refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n */\nfunction refreshDescendantViews(lView) {\n    var tView = lView[TVIEW];\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = false;\n    setFirstTemplatePass(false);\n    // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n    // This will be done in the update pass.\n    if (!isCreationMode(lView)) {\n        var checkNoChangesMode = getCheckNoChangesMode();\n        executeInitHooks(lView, tView, checkNoChangesMode);\n        refreshDynamicEmbeddedViews(lView);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode);\n        setHostBindings(tView, lView);\n    }\n    refreshChildComponents(tView.components);\n}\n/** Sets the host bindings for the current view. */\nfunction setHostBindings(tView, viewData) {\n    if (tView.expandoInstructions) {\n        var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n        setBindingRoot(bindingRootIndex);\n        var currentDirectiveIndex = -1;\n        var currentElementIndex = -1;\n        for (var i = 0; i < tView.expandoInstructions.length; i++) {\n            var instruction = tView.expandoInstructions[i];\n            if (typeof instruction === 'number') {\n                if (instruction <= 0) {\n                    // Negative numbers mean that we are starting new EXPANDO block and need to update\n                    // the current element and directive index.\n                    currentElementIndex = -instruction;\n                    // Injector block and providers are taken into account.\n                    var providerCount = tView.expandoInstructions[++i];\n                    bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                    currentDirectiveIndex = bindingRootIndex;\n                }\n                else {\n                    // This is either the injector size (so the binding root can skip over directives\n                    // and get to the first set of host bindings on this node) or the host var count\n                    // (to get to the next set of host bindings on this node).\n                    bindingRootIndex += instruction;\n                }\n                setBindingRoot(bindingRootIndex);\n            }\n            else {\n                // If it's not a number, it's a host binding function that needs to be executed.\n                if (instruction !== null) {\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                }\n                currentDirectiveIndex++;\n            }\n        }\n    }\n}\n/** Refreshes content queries for all directives in the given view. */\nfunction refreshContentQueries(tView) {\n    if (tView.contentQueries != null) {\n        for (var i = 0; i < tView.contentQueries.length; i += 2) {\n            var directiveDefIdx = tView.contentQueries[i];\n            var directiveDef = tView.data[directiveDefIdx];\n            directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n        }\n    }\n}\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(components) {\n    if (components != null) {\n        for (var i = 0; i < components.length; i++) {\n            componentRefresh(components[i]);\n        }\n    }\n}\nfunction createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n    var lView = tView.blueprint.slice();\n    lView[FLAGS] = flags | 1 /* CreationMode */ | 16 /* Attached */ | 32 /* RunInit */ |\n        2 /* FirstLViewPass */;\n    lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n    lView[CONTEXT] = context;\n    lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n    ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n    lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n    ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n    lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n    lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n    return lView;\n}\nfunction createNodeAtIndex(index, type, native, name, attrs) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    var adjustedIndex = index + HEADER_OFFSET;\n    ngDevMode &&\n        assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n    lView[adjustedIndex] = native;\n    var tNode = tView.data[adjustedIndex];\n    if (tNode == null) {\n        // TODO(misko): Refactor createTNode so that it does not depend on LView.\n        tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n    }\n    // Now link ourselves into the tree.\n    // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n    // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    var isParent = getIsParent();\n    if (previousOrParentTNode) {\n        if (isParent && previousOrParentTNode.child == null &&\n            (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n            // We are in the same view, which means we are adding content node to the parent view.\n            previousOrParentTNode.child = tNode;\n        }\n        else if (!isParent) {\n            previousOrParentTNode.next = tNode;\n        }\n    }\n    if (tView.firstChild == null) {\n        tView.firstChild = tNode;\n    }\n    setPreviousOrParentTNode(tNode);\n    setIsParent(true);\n    return tNode;\n}\nfunction createViewNode(index, view) {\n    // View nodes are not stored in data because they can be added / removed at runtime (which\n    // would cause indices to change). Their TNodes are instead stored in tView.node.\n    if (view[TVIEW].node == null) {\n        view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n    }\n    return view[HOST_NODE] = view[TVIEW].node;\n}\n/**\n * When elements are created dynamically after a view blueprint is created (e.g. through\n * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n * template passes.\n */\nfunction allocExpando(view) {\n    var tView = view[TVIEW];\n    if (tView.firstTemplatePass) {\n        tView.expandoStartIndex++;\n        tView.blueprint.push(null);\n        tView.data.push(null);\n        view.push(null);\n    }\n}\n/**\n * Used for creating the LViewNode of a dynamic embedded view,\n * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n */\nfunction createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n    var _isParent = getIsParent();\n    var _previousOrParentTNode = getPreviousOrParentTNode();\n    setIsParent(true);\n    setPreviousOrParentTNode(null);\n    var lView = createLView(declarationView, tView, context, 4 /* CheckAlways */);\n    lView[DECLARATION_VIEW] = declarationView;\n    if (queries) {\n        lView[QUERIES] = queries.createView();\n    }\n    createViewNode(-1, lView);\n    if (tView.firstTemplatePass) {\n        tView.node.injectorIndex = injectorIndex;\n    }\n    setIsParent(_isParent);\n    setPreviousOrParentTNode(_previousOrParentTNode);\n    return lView;\n}\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n */\nfunction renderEmbeddedTemplate(viewToRender, tView, context) {\n    var _isParent = getIsParent();\n    var _previousOrParentTNode = getPreviousOrParentTNode();\n    setIsParent(true);\n    setPreviousOrParentTNode(null);\n    var oldView;\n    if (viewToRender[FLAGS] & 128 /* IsRoot */) {\n        // This is a root view inside the view tree\n        tickRootContext(getRootContext(viewToRender));\n    }\n    else {\n        try {\n            setIsParent(true);\n            setPreviousOrParentTNode(null);\n            oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n            namespaceHTML();\n            tView.template(getRenderFlags(viewToRender), context);\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            viewToRender[TVIEW].firstTemplatePass = false;\n            setFirstTemplatePass(false);\n            refreshDescendantViews(viewToRender);\n        }\n        finally {\n            leaveView(oldView);\n            setIsParent(_isParent);\n            setPreviousOrParentTNode(_previousOrParentTNode);\n        }\n    }\n}\n/**\n * Retrieves a context at the level specified and saves it as the global, contextViewData.\n * Will get the next level up if level is not specified.\n *\n * This is used to save contexts of parent views so they can be bound in embedded views, or\n * in conjunction with reference() to bind a ref from a parent view.\n *\n * @param level The relative level of the view from which to grab context compared to contextVewData\n * @returns context\n */\nfunction nextContext(level) {\n    if (level === void 0) { level = 1; }\n    return nextContextImpl(level);\n}\nfunction renderComponentOrTemplate(hostView, context, templateFn) {\n    var rendererFactory = hostView[RENDERER_FACTORY];\n    var oldView = enterView(hostView, hostView[HOST_NODE]);\n    var normalExecutionPath = !getCheckNoChangesMode();\n    try {\n        if (normalExecutionPath && rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (isCreationMode(hostView)) {\n            // creation mode pass\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(1 /* Create */, context);\n            }\n            refreshDescendantViews(hostView);\n            hostView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        // update mode pass\n        templateFn && templateFn(2 /* Update */, context);\n        refreshDescendantViews(hostView);\n    }\n    finally {\n        if (normalExecutionPath && rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. Update block and create block are\n * always run separately.\n */\nfunction getRenderFlags(view) {\n    return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n}\n//////////////////////////\n//// Namespace\n//////////////////////////\nvar _currentNamespace = null;\nfunction namespaceSVG() {\n    _currentNamespace = 'http://www.w3.org/2000/svg';\n}\nfunction namespaceMathML() {\n    _currentNamespace = 'http://www.w3.org/1998/MathML/';\n}\nfunction namespaceHTML() {\n    _currentNamespace = null;\n}\n//////////////////////////\n//// Element\n//////////////////////////\n/**\n * Creates an empty element using {@link elementStart} and {@link elementEnd}\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction element(index, name, attrs, localRefs) {\n    elementStart(index, name, attrs, localRefs);\n    elementEnd();\n}\n/**\n * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n * The instruction must later be followed by `elementContainerEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param attrs Set of attributes to be used when matching directives.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n * matching purposes and setting initial inputs of directives.\n */\nfunction elementContainerStart(index, attrs, localRefs) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    var renderer = lView[RENDERER];\n    var tagName = 'ng-container';\n    ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateComment++;\n    var native = renderer.createComment(ngDevMode ? tagName : '');\n    ngDevMode && assertDataInRange(lView, index - 1);\n    var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n    appendChild(native, tNode, lView);\n    createDirectivesAndLocals(tView, lView, localRefs);\n    attachPatchData(native, lView);\n}\n/** Mark the end of the <ng-container>. */\nfunction elementContainerEnd() {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    if (getIsParent()) {\n        setIsParent(false);\n    }\n    else {\n        ngDevMode && assertHasParent(getPreviousOrParentTNode());\n        previousOrParentTNode = previousOrParentTNode.parent;\n        setPreviousOrParentTNode(previousOrParentTNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n    var currentQueries = lView[QUERIES];\n    if (currentQueries) {\n        lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n    }\n    queueLifecycleHooks(tView, previousOrParentTNode);\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n */\nfunction elementStart(index, name, attrs, localRefs) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    var native = elementCreate(name);\n    ngDevMode && assertDataInRange(lView, index - 1);\n    var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n    if (attrs) {\n        // it's important to only prepare styling-related datastructures once for a given\n        // tNode and not each time an element is created. Also, the styling code is designed\n        // to be patched and constructed at various points, but only up until the first element\n        // is created. Then the styling context is locked and can only be instantiated for each\n        // successive element that is created.\n        if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        setUpAttributes(native, attrs);\n    }\n    appendChild(native, tNode, lView);\n    createDirectivesAndLocals(tView, lView, localRefs);\n    // any immediate children of a component or template container must be pre-emptively\n    // monkey-patched with the component view data so that the element can be inspected\n    // later on using any element discovery utility methods (see `element_discovery.ts`)\n    if (getElementDepthCount() === 0) {\n        attachPatchData(native, lView);\n    }\n    increaseElementDepthCount();\n    // if a directive contains a host binding for \"class\" then all class-based data will\n    // flow through that (except for `[class.prop]` bindings). This also includes initial\n    // static class values as well. (Note that this will be fixed once map-based `[style]`\n    // and `[class]` bindings work for multiple directives.)\n    if (tView.firstTemplatePass) {\n        var inputData = initializeTNodeInputs(tNode);\n        if (inputData && inputData.hasOwnProperty('class')) {\n            tNode.flags |= 8 /* hasClassInput */;\n        }\n    }\n    // There is no point in rendering styles when a class directive is present since\n    // it will take that over for us (this will be removed once #FW-882 is in).\n    if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n        renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n    }\n}\n/**\n * Creates a native element from a tag name, using a renderer.\n * @param name the tag name\n * @param overriddenRenderer Optional A renderer to override the default one\n * @returns the element created\n */\nfunction elementCreate(name, overriddenRenderer) {\n    var native;\n    var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n    if (isProceduralRenderer(rendererToUse)) {\n        native = rendererToUse.createElement(name, _currentNamespace);\n    }\n    else {\n        if (_currentNamespace === null) {\n            native = rendererToUse.createElement(name);\n        }\n        else {\n            native = rendererToUse.createElementNS(_currentNamespace, name);\n        }\n    }\n    return native;\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param localRefs Local refs of the node in question\n * @param localRefExtractor mapping function that extracts local ref value from TNode\n */\nfunction createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n    if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n    if (!getBindingsEnabled())\n        return;\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    if (getFirstTemplatePass()) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n    }\n    instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n    invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n    saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LView in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n    var localNames = tNode.localNames;\n    if (localNames) {\n        var localIndex = tNode.index + 1;\n        for (var i = 0; i < localNames.length; i += 2) {\n            var index = localNames[i + 1];\n            var value = index === -1 ?\n                localRefExtractor(tNode, viewData) :\n                viewData[index];\n            viewData[localIndex++] = value;\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param templateFn The template from which to get static data\n * @param consts The number of nodes, local refs, and pipes in this view\n * @param vars The number of bindings and pure function bindings in this view\n * @param directives Directive defs that should be saved on TView\n * @param pipes Pipe defs that should be saved on TView\n * @returns TView\n */\nfunction getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n    // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n    // 1. It is a megamorphic call on each invocation.\n    // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n    //    outer template invocation, which means that no such property will exist\n    // Correct solution is to only put `ngPrivateData` on the Component template\n    // and not on embedded templates.\n    return templateFn.ngPrivateData ||\n        (templateFn.ngPrivateData =\n            createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n}\n/**\n * Creates a TView instance\n *\n * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param templateFn Template function\n * @param consts The number of nodes, local refs, and pipes in this template\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n */\nfunction createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n    ngDevMode && ngDevMode.tView++;\n    var bindingStartIndex = HEADER_OFFSET + consts;\n    // This length does not yet contain host bindings from child directives because at this point,\n    // we don't know which directives are active on this template. As soon as a directive is matched\n    // that has a host binding, we will update the blueprint with that def's hostVars count.\n    var initialViewLength = bindingStartIndex + vars;\n    var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n    return blueprint[TVIEW] = {\n        id: viewIndex,\n        blueprint: blueprint,\n        template: templateFn,\n        viewQuery: viewQuery,\n        node: null,\n        data: blueprint.slice(),\n        childIndex: -1,\n        bindingStartIndex: bindingStartIndex,\n        expandoStartIndex: initialViewLength,\n        expandoInstructions: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        cleanup: null,\n        contentQueries: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        firstChild: null,\n    };\n}\nfunction createViewBlueprint(bindingStartIndex, initialViewLength) {\n    var blueprint = new Array(initialViewLength)\n        .fill(null, 0, bindingStartIndex)\n        .fill(NO_CHANGE, bindingStartIndex);\n    blueprint[CONTAINER_INDEX] = -1;\n    blueprint[BINDING_INDEX] = bindingStartIndex;\n    return blueprint;\n}\nfunction setUpAttributes(native, attrs) {\n    var renderer = getLView()[RENDERER];\n    var isProc = isProceduralRenderer(renderer);\n    var i = 0;\n    while (i < attrs.length) {\n        var attrName = attrs[i++];\n        if (typeof attrName == 'number') {\n            if (attrName === 0 /* NamespaceURI */) {\n                // Namespaced attributes\n                var namespaceURI = attrs[i++];\n                var attrName_1 = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer\n                        .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n            }\n            else {\n                // All other `AttributeMarker`s are ignored here.\n                break;\n            }\n        }\n        else {\n            /// attrName is string;\n            var attrVal = attrs[i++];\n            if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n            }\n        }\n    }\n}\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    var defaultRenderer = factory.createRenderer(null, null);\n    var rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener.\n */\nfunction listener(eventName, listenerFn, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    var lView = getLView();\n    var tNode = getPreviousOrParentTNode();\n    var tView = lView[TVIEW];\n    var firstTemplatePass = tView.firstTemplatePass;\n    var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n    // add native event listener - applicable to elements only\n    if (tNode.type === 3 /* Element */) {\n        var native = getNativeByTNode(tNode, lView);\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        var renderer = lView[RENDERER];\n        var lCleanup = getCleanup(lView);\n        var lCleanupIndex = lCleanup.length;\n        var useCaptureOrSubIdx = useCapture;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var cleanupFn = renderer.listen(native, eventName, listenerFn);\n            lCleanup.push(listenerFn, cleanupFn);\n            useCaptureOrSubIdx = lCleanupIndex + 1;\n        }\n        else {\n            var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            lCleanup.push(wrappedListener);\n        }\n        tCleanup && tCleanup.push(eventName, tNode.index, lCleanupIndex, useCaptureOrSubIdx);\n    }\n    // subscribe to directive outputs\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n    }\n    var outputs = tNode.outputs;\n    var props;\n    if (outputs && (props = outputs[eventName])) {\n        var propsLength = props.length;\n        if (propsLength) {\n            var lCleanup = getCleanup(lView);\n            for (var i = 0; i < propsLength; i += 2) {\n                ngDevMode && assertDataInRange(lView, props[i]);\n                var subscription = lView[props[i]][props[i + 1]].subscribe(listenerFn);\n                var idx = lCleanup.length;\n                lCleanup.push(listenerFn, subscription);\n                tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n            }\n        }\n    }\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n */\nfunction storeCleanupWithContext(lView, context, cleanupFn) {\n    var lCleanup = getCleanup(lView);\n    lCleanup.push(context);\n    if (lView[TVIEW].firstTemplatePass) {\n        getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n    }\n}\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n */\nfunction storeCleanupFn(view, cleanupFn) {\n    getCleanup(view).push(cleanupFn);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n    }\n}\n/** Mark the end of the element. */\nfunction elementEnd() {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    if (getIsParent()) {\n        setIsParent(false);\n    }\n    else {\n        ngDevMode && assertHasParent(getPreviousOrParentTNode());\n        previousOrParentTNode = previousOrParentTNode.parent;\n        setPreviousOrParentTNode(previousOrParentTNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n    var lView = getLView();\n    var currentQueries = lView[QUERIES];\n    if (currentQueries) {\n        lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n    }\n    queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n    decreaseElementDepthCount();\n    // this is fired at the end of elementEnd because ALL of the stylingBindings code\n    // (for directives and the template) have now executed which means the styling\n    // context can be instantiated properly.\n    if (hasClassInput(previousOrParentTNode)) {\n        var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n        setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n    }\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param number index The index of the element in the data array\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        var lView = getLView();\n        var renderer = lView[RENDERER];\n        var element_1 = getNativeByIndex(index, lView);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                element_1.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                element_1.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n * @param nativeOnly Whether or not we should only set native properties and skip input check\n * (this is necessary for host property bindings)\n */\nfunction elementProperty(index, propName, value, sanitizer, nativeOnly) {\n    elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n}\n/**\n * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n *\n * This instruction is for compatibility purposes and is designed to ensure that a\n * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n * the component's renderer. Normally all host bindings are evaluated with the parent\n * component's renderer, but, in the case of animation @triggers, they need to be\n * evaluated with the sub components renderer (because that's where the animation\n * triggers are defined).\n *\n * Do not use this instruction as a replacement for `elementProperty`. This instruction\n * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n * @param nativeOnly Whether or not we should only set native properties and skip input check\n * (this is necessary for host property bindings)\n */\nfunction componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n    elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n}\nfunction loadComponentRenderer(tNode, lView) {\n    var componentLView = lView[tNode.index];\n    return componentLView[RENDERER];\n}\nfunction elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n    if (value === NO_CHANGE)\n        return;\n    var lView = getLView();\n    var element = getNativeByIndex(index, lView);\n    var tNode = getTNode(index, lView);\n    var inputData;\n    var dataValue;\n    if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n        (dataValue = inputData[propName])) {\n        setInputsForProperty(lView, dataValue, value);\n        if (isComponent(tNode))\n            markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n        if (ngDevMode) {\n            if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n    }\n    else if (tNode.type === 3 /* Element */) {\n        var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? sanitizer(value) : value;\n        ngDevMode && ngDevMode.rendererSetProperty++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.setProperty(element, propName, value);\n        }\n        else if (!isAnimationProp(propName)) {\n            element.setProperty ? element.setProperty(propName, value) :\n                element[propName] = value;\n        }\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param type The type of the node\n * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nfunction createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    ngDevMode && ngDevMode.tNode++;\n    var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n    // Parents cannot cross component boundaries because components will be used in multiple places,\n    // so it's only set if the view is the same.\n    var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n    var tParent = parentInSameView ? parent : null;\n    return {\n        type: type,\n        index: adjustedIndex,\n        injectorIndex: tParent ? tParent.injectorIndex : -1,\n        directiveStart: -1,\n        directiveEnd: -1,\n        flags: 0,\n        providerIndexes: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        tViews: tViews,\n        next: null,\n        child: null,\n        parent: tParent,\n        detached: null,\n        stylingTemplate: null,\n        projection: null\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n */\nfunction setInputsForProperty(lView, inputs, value) {\n    for (var i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(lView, inputs[i]);\n        lView[inputs[i]][inputs[i + 1]] = value;\n    }\n}\nfunction setNgReflectProperties(lView, element, type, inputs, value) {\n    var _a;\n    for (var i = 0; i < inputs.length; i += 2) {\n        var renderer = lView[RENDERER];\n        var attrName = normalizeDebugBindingName(inputs[i + 1]);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            isProceduralRenderer(renderer) ?\n                renderer.setAttribute(element, attrName, debugValue) :\n                element.setAttribute(attrName, debugValue);\n        }\n        else if (value !== undefined) {\n            var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, value_1);\n            }\n            else {\n                element.textContent = value_1;\n            }\n        }\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param tNodeFlags node flags\n * @param direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNode, direction) {\n    var tView = getLView()[TVIEW];\n    var propStore = null;\n    var start = tNode.directiveStart;\n    var end = tNode.directiveEnd;\n    if (end > start) {\n        var isInput = direction === 0 /* Input */;\n        var defs = tView.data;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    var internalName = propertyAliasMap[publicName];\n                    var hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Assign any inline style values to the element during creation mode.\n *\n * This instruction is meant to be called during creation mode to register all\n * dynamic style and class bindings on the element. Note for static values (no binding)\n * see `elementStart` and `elementHostAttrs`.\n *\n * @param classBindingNames An array containing bindable class names.\n *        The `elementClassProp` refers to the class name by index in this array.\n *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n * @param styleBindingNames An array containing bindable style properties.\n *        The `elementStyleProp` refers to the class name by index in this array.\n *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n *        property values that are applied to the element (during rendering).\n *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n * @param directive A directive instance the styling is associated with. If not provided\n *        current view's controller instance is assumed.\n *\n * @publicApi\n */\nfunction elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n    var tNode = getPreviousOrParentTNode();\n    if (!tNode.stylingTemplate) {\n        tNode.stylingTemplate = createEmptyStylingContext();\n    }\n    updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n}\n/**\n * Assign static styling values to a host element.\n *\n * NOTE: This instruction is meant to used from `hostBindings` function only.\n *\n * @param directive A directive instance the styling is associated with.\n * @param attrs An array containing class and styling information. The values must be marked with\n *              `AttributeMarker`.\n *\n *        ```\n *        var attrs = [AttributeMarker.Classes, 'foo', 'bar',\n *                     AttributeMarker.Styles, 'width', '100px', 'height, '200px']\n *        elementHostAttrs(directive, attrs);\n *        ```\n *\n * @publicApi\n */\nfunction elementHostAttrs(directive, attrs) {\n    var tNode = getPreviousOrParentTNode();\n    if (!tNode.stylingTemplate) {\n        tNode.stylingTemplate = initializeStaticContext(attrs);\n    }\n    patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, directive);\n}\n/**\n * Apply styling binding to the element.\n *\n * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n * if any styling bindings have changed then the changes are flushed to the element.\n *\n *\n * @param index Index of the element's with which styling is associated.\n * @param directive Directive instance that is attempting to change styling. (Defaults to the\n *        component of the current view).\ncomponents\n *\n * @publicApi\n */\nfunction elementStylingApply(index, directive) {\n    var lView = getLView();\n    var isFirstRender = (lView[FLAGS] & 2 /* FirstLViewPass */) !== 0;\n    var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n    if (totalPlayersQueued > 0) {\n        var rootContext = getRootContext(lView);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n}\n/**\n * Update a style bindings value on an element.\n *\n * If the style value is `null` then it will be removed from the element\n * (or assigned a different value depending if there are any styles placed\n * on the element with `elementStyle` or any styles that are present\n * from when the element was created (with `elementStyling`).\n *\n * (Note that the styling element is updated as part of `elementStylingApply`.)\n *\n * @param index Index of the element's with which styling is associated.\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `elementStlyingBindings`.\n * @param value New value to write (null to remove). Note that if a directive also\n *        attempts to write to the same binding value then it will only be able to\n *        do so if the template binding value is `null` (or doesn't exist at all).\n * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n *        Note that when a suffix is provided then the underlying sanitizer will\n *        be ignored.\n * @param directive Directive instance that is attempting to change styling. (Defaults to the\n *        component of the current view).\ncomponents\n *\n * @publicApi\n */\nfunction elementStyleProp(index, styleIndex, value, suffix, directive) {\n    var valueToAdd = null;\n    if (value !== null) {\n        if (suffix) {\n            // when a suffix is applied then it will bypass\n            // sanitization entirely (b/c a new string is created)\n            valueToAdd = stringify$1(value) + suffix;\n        }\n        else {\n            // sanitization happens by dealing with a String value\n            // this means that the string value will be passed through\n            // into the style rendering later (which is where the value\n            // will be sanitized before it is applied)\n            valueToAdd = value;\n        }\n    }\n    updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n}\n/**\n * Add or remove a class via a class binding on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n * the class itself must already be applied using `elementStyling` within\n * the creation block.\n *\n * @param index Index of the element's with which styling is associated.\n * @param classIndex Index of class to toggle. This index value refers to the\n *        index of the class in the class bindings array that was passed into\n *        `elementStlyingBindings` (which is meant to be called before this\n *        function is).\n * @param value A true/false value which will turn the class on or off.\n * @param directive Directive instance that is attempting to change styling. (Defaults to the\n *        component of the current view).\ncomponents\n *\n * @publicApi\n */\nfunction elementClassProp(index, classIndex, value, directive) {\n    var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n    updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n}\n/**\n * Update style and/or class bindings using object literal.\n *\n * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n * bindings. When styles are applied to the Element they will then be placed with respect to\n * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n * removed from the element.\n *\n * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n *\n * @param index Index of the element's with which styling is associated.\n * @param classes A key/value style map of CSS classes that will be added to the given element.\n *        Any missing classes (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's list of CSS classes.\n * @param styles A key/value style map of the styles that will be applied to the given element.\n *        Any missing styles (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's styling.\n * @param directive Directive instance that is attempting to change styling. (Defaults to the\n *        component of the current view).\n *\n * @publicApi\n */\nfunction elementStylingMap(index, classes, styles, directive) {\n    if (directive != undefined)\n        return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n    var lView = getLView();\n    var tNode = getTNode(index, lView);\n    var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n    if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n        var initialClasses = getInitialClassNameValue(stylingContext);\n        var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n        setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n    }\n    else {\n        updateStylingMap(stylingContext, classes, styles);\n    }\n}\n/* START OF HACK BLOCK */\nfunction hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n    throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n}\n/* END OF HACK BLOCK */\n//////////////////////////\n//// Text\n//////////////////////////\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array\n * @param value Value to write. This value will be stringified.\n */\nfunction text(index, value) {\n    var lView = getLView();\n    ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    var textNative = createTextNode(value, lView[RENDERER]);\n    var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n    // Text nodes are self closing.\n    setIsParent(false);\n    appendChild(textNative, tNode, lView);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @param index Index of the node in the data array.\n * @param value Stringified value to write.\n */\nfunction textBinding(index, value) {\n    if (value !== NO_CHANGE) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element_2 = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element_2, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n            element_2.textContent = stringify$1(value);\n    }\n}\n//////////////////////////\n//// Directive\n//////////////////////////\n/**\n * Instantiate a root component.\n */\nfunction instantiateRootComponent(tView, viewData, def) {\n    var rootTNode = getPreviousOrParentTNode();\n    if (tView.firstTemplatePass) {\n        if (def.providersResolver)\n            def.providersResolver(def);\n        generateExpandoInstructionBlock(tView, rootTNode, 1);\n        baseResolveDirective(tView, viewData, def, def.factory);\n    }\n    var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n    postProcessBaseDirective(viewData, rootTNode, directive, def);\n    return directive;\n}\n/**\n * Resolve the matched directives on a node.\n */\nfunction resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n    // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n    ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n    var exportsMap = localRefs ? { '': -1 } : null;\n    if (directives) {\n        initNodeFlags(tNode, tView.data.length, directives.length);\n        // When the same token is provided by several directives on the same node, some rules apply in\n        // the viewEngine:\n        // - viewProviders have priority over providers\n        // - the last directive in NgModule.declarations has priority over the previous one\n        // So to match these rules, the order in which providers are added in the arrays is very\n        // important.\n        for (var i = 0; i < directives.length; i++) {\n            var def = directives[i];\n            if (def.providersResolver)\n                def.providersResolver(def);\n        }\n        generateExpandoInstructionBlock(tView, tNode, directives.length);\n        for (var i = 0; i < directives.length; i++) {\n            var def = directives[i];\n            var directiveDefIdx = tView.data.length;\n            baseResolveDirective(tView, viewData, def, def.factory);\n            saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/**\n * Instantiate all the directives that were previously resolved on the current node.\n */\nfunction instantiateAllDirectives(tView, lView, tNode) {\n    var start = tNode.directiveStart;\n    var end = tNode.directiveEnd;\n    if (!getFirstTemplatePass() && start < end) {\n        getOrCreateNodeInjectorForNode(tNode, lView);\n    }\n    for (var i = start; i < end; i++) {\n        var def = tView.data[i];\n        if (isComponentDef(def)) {\n            addComponentLogic(lView, tNode, def);\n        }\n        var directive = getNodeInjectable(tView.data, lView, i, tNode);\n        postProcessDirective(lView, directive, def, i);\n    }\n}\nfunction invokeDirectivesHostBindings(tView, viewData, tNode) {\n    var start = tNode.directiveStart;\n    var end = tNode.directiveEnd;\n    var expando = tView.expandoInstructions;\n    var firstTemplatePass = getFirstTemplatePass();\n    for (var i = start; i < end; i++) {\n        var def = tView.data[i];\n        var directive = viewData[i];\n        if (def.hostBindings) {\n            var previousExpandoLength = expando.length;\n            setCurrentDirectiveDef(def);\n            def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n            // `hostBindings` function may or may not contain `allocHostVars` call\n            // (e.g. it may not if it only contains host listeners), so we need to check whether\n            // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n            // expando block, to make sure we execute it for DI cycle\n            if (previousExpandoLength === expando.length && firstTemplatePass) {\n                expando.push(def.hostBindings);\n            }\n        }\n        else if (firstTemplatePass) {\n            expando.push(null);\n        }\n    }\n}\n/**\n* Generates a new block in TView.expandoInstructions for this node.\n*\n* Each expando block starts with the element index (turned negative so we can distinguish\n* it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n*/\nfunction generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n    ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n    var elementIndex = -(tNode.index - HEADER_OFFSET);\n    var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n    var providerCount = tView.data.length - providerStartIndex;\n    (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n}\n/**\n* On the first template pass, we need to reserve space for host binding values\n* after directives are matched (so all directives are saved, then bindings).\n* Because we are updating the blueprint, we only need to do this once.\n*/\nfunction prefillHostVars(tView, lView, totalHostVars) {\n    ngDevMode &&\n        assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n    for (var i = 0; i < totalHostVars; i++) {\n        lView.push(NO_CHANGE);\n        tView.blueprint.push(NO_CHANGE);\n        tView.data.push(null);\n    }\n}\n/**\n * Process a directive on the current node after its creation.\n */\nfunction postProcessDirective(viewData, directive, def, directiveDefIdx) {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n    ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n    if (previousOrParentTNode && previousOrParentTNode.attrs) {\n        setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n    }\n    if (def.contentQueries) {\n        def.contentQueries(directiveDefIdx);\n    }\n    if (isComponentDef(def)) {\n        var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n        componentView[CONTEXT] = directive;\n    }\n}\n/**\n * A lighter version of postProcessDirective() that is used for the root component.\n */\nfunction postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n    var native = getNativeByTNode(previousOrParentTNode, lView);\n    ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent(getIsParent());\n    attachPatchData(directive, lView);\n    if (native) {\n        attachPatchData(native, lView);\n    }\n    // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n    if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n        setUpAttributes(native, def.attributes);\n    }\n}\n/**\n* Matches the current node against all available selectors.\n* If a component is matched (at most one), it is returned in first position in the array.\n*/\nfunction findDirectiveMatches(tView, viewData, tNode) {\n    ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n    var registry = tView.directiveRegistry;\n    var matches = null;\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                matches || (matches = []);\n                diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                if (isComponentDef(def)) {\n                    if (tNode.flags & 1 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 1 /* isComponent */;\n                    // The component is always stored first with directives after.\n                    matches.unshift(def);\n                }\n                else {\n                    matches.push(def);\n                }\n            }\n        }\n    }\n    return matches;\n}\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nfunction queueComponentIndexForCheck(previousOrParentTNode) {\n    ngDevMode &&\n        assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n    var tView = getLView()[TVIEW];\n    (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n}\n/**\n * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n * CD.\n*/\nfunction queueHostBindingForCheck(tView, def, hostVars) {\n    ngDevMode &&\n        assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n    var expando = tView.expandoInstructions;\n    var length = expando.length;\n    // Check whether a given `hostBindings` function already exists in expandoInstructions,\n    // which can happen in case directive definition was extended from base definition (as a part of\n    // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n    // list, we just increase the number of host vars associated with that function, but do not add it\n    // into the list again.\n    if (length >= 2 && expando[length - 2] === def.hostBindings) {\n        expando[length - 1] = expando[length - 1] + hostVars;\n    }\n    else {\n        expando.push(def.hostBindings, hostVars);\n    }\n}\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        var localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (var i = 0; i < localRefs.length; i += 2) {\n            var index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n* Builds up an export map as directives are created, so local refs can be quickly mapped\n* to their directive instances.\n*/\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if (def.template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Initializes the flags on the current node, setting all indices to the initial index,\n * the directive count to 0, and adding the isComponent flag.\n * @param index the initial index\n */\nfunction initNodeFlags(tNode, index, numberOfDirectives) {\n    ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n    var flags = tNode.flags;\n    ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n    ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n    // When the first directive is created on a node, save the index\n    tNode.flags = flags & 1 /* isComponent */;\n    tNode.directiveStart = index;\n    tNode.directiveEnd = index + numberOfDirectives;\n    tNode.providerIndexes = index;\n}\nfunction baseResolveDirective(tView, viewData, def, directiveFactory) {\n    tView.data.push(def);\n    var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n    tView.blueprint.push(nodeInjectorFactory);\n    viewData.push(nodeInjectorFactory);\n}\nfunction addComponentLogic(lView, previousOrParentTNode, def) {\n    var native = getNativeByTNode(previousOrParentTNode, lView);\n    var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n    // Only component views should be added to the view tree directly. Embedded views are\n    // accessed through their containers because they may be removed / re-added later.\n    var rendererFactory = lView[RENDERER_FACTORY];\n    var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n    componentView[HOST_NODE] = previousOrParentTNode;\n    // Component view will always be created before any injected LContainers,\n    // so this is a regular element, wrap it with the component view\n    componentView[HOST] = lView[previousOrParentTNode.index];\n    lView[previousOrParentTNode.index] = componentView;\n    if (getFirstTemplatePass()) {\n        queueComponentIndexForCheck(previousOrParentTNode);\n    }\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    var initialInputData = tNode.initialInputs;\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    var initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var i = 0; i < initialInputs.length; i += 2) {\n            instance[initialInputs[i]] = initialInputs[i + 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var attrs = tNode.attrs;\n    var i = 0;\n    while (i < attrs.length) {\n        var attrName = attrs[i];\n        if (attrName === 3 /* SelectOnly */)\n            break;\n        if (attrName === 0 /* NamespaceURI */) {\n            // We do not allow inputs on namespaced attributes.\n            i += 4;\n            continue;\n        }\n        var minifiedInputName = inputs[attrName];\n        var attrValue = attrs[i + 1];\n        if (minifiedInputName !== undefined) {\n            var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrValue);\n        }\n        i += 2;\n    }\n    return initialInputData;\n}\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param hostNative The host element for the LContainer\n * @param hostTNode The host TNode for the LContainer\n * @param currentView The parent view of the LContainer\n * @param native The native comment element\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nfunction createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n    return [\n        isForViewContainerRef ? -1 : 0,\n        [],\n        currentView,\n        null,\n        null,\n        hostNative,\n        native,\n        getRenderParent(hostTNode, currentView) // renderParent\n    ];\n}\n/**\n * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n *\n * <ng-template #foo>\n *    <div></div>\n * </ng-template>\n *\n * @param index The index of the container in the data array\n * @param templateFn Inline template\n * @param consts The number of nodes, local refs, and pipes for this template\n * @param vars The number of bindings for this template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n * @param localRefExtractor A function which extracts local-refs values from the template.\n *        Defaults to the current element associated with the local-ref.\n */\nfunction template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    // TODO: consider a separate node type for templates\n    var tNode = containerInternal(index, tagName || null, attrs || null);\n    if (getFirstTemplatePass()) {\n        tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n    }\n    createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n    var currentQueries = lView[QUERIES];\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    var native = getNativeByTNode(previousOrParentTNode, lView);\n    attachPatchData(native, lView);\n    if (currentQueries) {\n        lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n    }\n    queueLifecycleHooks(tView, tNode);\n    setIsParent(false);\n}\n/**\n * Creates an LContainer for inline views, e.g.\n *\n * % if (showing) {\n *   <div></div>\n * % }\n *\n * @param index The index of the container in the data array\n */\nfunction container(index) {\n    var tNode = containerInternal(index, null, null);\n    getFirstTemplatePass() && (tNode.tViews = []);\n    setIsParent(false);\n}\nfunction containerInternal(index, tagName, attrs) {\n    var lView = getLView();\n    ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n    var adjustedIndex = index + HEADER_OFFSET;\n    var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n    ngDevMode && ngDevMode.rendererCreateComment++;\n    var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n    var lContainer = lView[adjustedIndex] =\n        createLContainer(lView[adjustedIndex], tNode, lView, comment);\n    appendChild(comment, tNode, lView);\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n    var currentQueries = lView[QUERIES];\n    if (currentQueries) {\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer[QUERIES] = currentQueries.container();\n    }\n    ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n    return tNode;\n}\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n */\nfunction containerRefreshStart(index) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    var previousOrParentTNode = loadInternal(tView.data, index);\n    setPreviousOrParentTNode(previousOrParentTNode);\n    ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n    setIsParent(true);\n    lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n    // We need to execute init hooks here so ngOnInit hooks are called in top level views\n    // before they are called in embedded views (for backwards compatibility).\n    executeInitHooks(lView, tView, getCheckNoChangesMode());\n}\n/**\n * Marks the end of the LContainer.\n *\n * Marking the end of LContainer is the time when to child views get inserted or removed.\n */\nfunction containerRefreshEnd() {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    if (getIsParent()) {\n        setIsParent(false);\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n        ngDevMode && assertHasParent(previousOrParentTNode);\n        previousOrParentTNode = previousOrParentTNode.parent;\n        setPreviousOrParentTNode(previousOrParentTNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n    var lContainer = getLView()[previousOrParentTNode.index];\n    var nextIndex = lContainer[ACTIVE_INDEX];\n    // remove extra views at the end of the container\n    while (nextIndex < lContainer[VIEWS].length) {\n        removeView(lContainer, previousOrParentTNode, nextIndex);\n    }\n}\n/**\n * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n * by executing an associated template function.\n */\nfunction refreshDynamicEmbeddedViews(lView) {\n    for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n        // Note: current can be an LView or an LContainer instance, but here we are only interested\n        // in LContainer. We can tell it's an LContainer because its length is less than the LView\n        // header.\n        if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n            var container_1 = current;\n            for (var i = 0; i < container_1[VIEWS].length; i++) {\n                var dynamicViewData = container_1[VIEWS][i];\n                // The directives and pipes are not needed here as an existing view is only being refreshed.\n                ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n            }\n        }\n    }\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param lContainer to search for views\n * @param tContainerNode to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n * @returns index of a found view or -1 if not found\n */\nfunction scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n    var views = lContainer[VIEWS];\n    for (var i = startIdx; i < views.length; i++) {\n        var viewAtPositionId = views[i][TVIEW].id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(lContainer, tContainerNode, i);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the searchdef.cont here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId, consts, vars) {\n    var lView = getLView();\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    // The previous node can be a view node if we are processing an inline for loop\n    var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n        previousOrParentTNode.parent :\n        previousOrParentTNode;\n    var lContainer = lView[containerTNode.index];\n    ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n    var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n    if (viewToRender) {\n        setIsParent(true);\n        enterView(viewToRender, viewToRender[TVIEW].node);\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 4 /* CheckAlways */);\n        if (lContainer[QUERIES]) {\n            viewToRender[QUERIES] = lContainer[QUERIES].createView();\n        }\n        createViewNode(viewBlockId, viewToRender);\n        enterView(viewToRender, viewToRender[TVIEW].node);\n    }\n    if (lContainer) {\n        if (isCreationMode(viewToRender)) {\n            // it is a new view, insert it into collection of views for a given container\n            insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n        }\n        lContainer[ACTIVE_INDEX]++;\n    }\n    return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param viewIndex The index of the TView in TNode.tViews\n * @param consts The number of nodes, local refs, and pipes in this template\n * @param vars The number of bindings and pure function bindings in this template\n * @param container The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var containerTViews = parent.tViews;\n    ngDevMode && assertDefined(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n    }\n    return containerTViews[viewIndex];\n}\n/** Marks the end of an embedded view. */\nfunction embeddedViewEnd() {\n    var lView = getLView();\n    var viewHost = lView[HOST_NODE];\n    if (isCreationMode(lView)) {\n        refreshDescendantViews(lView); // creation mode pass\n        lView[FLAGS] &= ~1 /* CreationMode */;\n    }\n    refreshDescendantViews(lView); // update mode pass\n    leaveView(lView[PARENT]);\n    setPreviousOrParentTNode(viewHost);\n    setIsParent(false);\n}\n/////////////\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n */\nfunction componentRefresh(adjustedElementIndex) {\n    var lView = getLView();\n    ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n    var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n    ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView[FLAGS] & (4 /* CheckAlways */ | 8 /* Dirty */)) {\n        syncViewWithBlueprint(hostView);\n        checkView(hostView, hostView[CONTEXT]);\n    }\n}\n/**\n * Syncs an LView instance with its blueprint if they have gotten out of sync.\n *\n * Typically, blueprints and their view instances should always be in sync, so the loop here\n * will be skipped. However, consider this case of two components side-by-side:\n *\n * App template:\n * ```\n * <comp></comp>\n * <comp></comp>\n * ```\n *\n * The following will happen:\n * 1. App template begins processing.\n * 2. First <comp> is matched as a component and its LView is created.\n * 3. Second <comp> is matched as a component and its LView is created.\n * 4. App template completes processing, so it's time to check child templates.\n * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n * <comp> template, but its LView was created before this update, so it is out of sync.\n *\n * Note that embedded views inside ngFor loops will never be out of sync because these views\n * are processed as soon as they are created.\n *\n * @param componentView The view to sync\n */\nfunction syncViewWithBlueprint(componentView) {\n    var componentTView = componentView[TVIEW];\n    for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n        componentView[i] = componentTView.blueprint[i];\n    }\n}\n/** Returns a boolean for whether the view is attached */\nfunction viewAttached(view) {\n    return (view[FLAGS] & 16 /* Attached */) === 16 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param selectors A collection of parsed CSS selectors\n * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n */\nfunction projectionDef(selectors, textSelectors) {\n    var componentNode = findComponentView(getLView())[HOST_NODE];\n    if (!componentNode.projection) {\n        var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n        var pData = componentNode.projection =\n            new Array(noOfNodeBuckets).fill(null);\n        var tails = pData.slice();\n        var componentChild = componentNode.child;\n        while (componentChild !== null) {\n            var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n            var nextNode = componentChild.next;\n            if (tails[bucketIndex]) {\n                tails[bucketIndex].next = componentChild;\n            }\n            else {\n                pData[bucketIndex] = componentChild;\n                componentChild.next = null;\n            }\n            tails[bucketIndex] = componentChild;\n            componentChild = nextNode;\n        }\n    }\n}\n/**\n * Stack used to keep track of projection nodes in projection() instruction.\n *\n * This is deliberately created outside of projection() to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n */\nvar projectionNodeStack$1 = [];\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n */\nfunction projection(nodeIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var lView = getLView();\n    var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n    // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n    if (tProjectionNode.projection === null)\n        tProjectionNode.projection = selectorIndex;\n    // `<ng-content>` has no content\n    setIsParent(false);\n    // re-distribution of projectable nodes is stored on a component's view level\n    var componentView = findComponentView(lView);\n    var componentNode = componentView[HOST_NODE];\n    var nodeToProject = componentNode.projection[selectorIndex];\n    var projectedView = componentView[PARENT];\n    var projectionNodeIndex = -1;\n    while (nodeToProject) {\n        if (nodeToProject.type === 1 /* Projection */) {\n            // This node is re-projected, so we must go up the tree to get its projected nodes.\n            var currentComponentView = findComponentView(projectedView);\n            var currentComponentHost = currentComponentView[HOST_NODE];\n            var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n            if (firstProjectedNode) {\n                projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                nodeToProject = firstProjectedNode;\n                projectedView = currentComponentView[PARENT];\n                continue;\n            }\n        }\n        else {\n            // This flag must be set now or we won't know that this node is projected\n            // if the nodes are inserted into a container later.\n            nodeToProject.flags |= 2 /* isProjected */;\n            appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n        }\n        // If we are finished with a list of re-projected nodes, we need to get\n        // back to the root projection node that was re-projected.\n        if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n            projectedView = projectionNodeStack$1[projectionNodeIndex--];\n            nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n        }\n        nodeToProject = nodeToProject.next;\n    }\n}\n/**\n * Adds LView or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param lView The view where LView or LContainer should be added\n * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n * @param state The LView or LContainer to add to the view tree\n * @returns The state passed in\n */\nfunction addToViewTree(lView, adjustedHostIndex, state) {\n    var tView = lView[TVIEW];\n    var firstTemplatePass = getFirstTemplatePass();\n    if (lView[TAIL]) {\n        lView[TAIL][NEXT] = state;\n    }\n    else if (firstTemplatePass) {\n        tView.childIndex = adjustedHostIndex;\n    }\n    lView[TAIL] = state;\n    return state;\n}\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n/** If node is an OnPush component, marks its LView dirty. */\nfunction markDirtyIfOnPush(lView, viewIndex) {\n    var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n    if (!(childComponentLView[FLAGS] & 4 /* CheckAlways */)) {\n        childComponentLView[FLAGS] |= 8 /* Dirty */;\n    }\n}\n/** Wraps an event listener with preventDefault behavior. */\nfunction wrapListenerWithPreventDefault(listenerFn) {\n    return function wrapListenerIn_preventDefault(e) {\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/** Marks current view and all ancestors dirty */\nfunction markViewDirty(lView) {\n    while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n        lView[FLAGS] |= 8 /* Dirty */;\n        lView = lView[PARENT];\n    }\n    lView[FLAGS] |= 8 /* Dirty */;\n    ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n    var rootContext = lView[CONTEXT];\n    scheduleTick(rootContext, 1 /* DetectChanges */);\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nfunction scheduleTick(rootContext, flags) {\n    var nothingScheduled = rootContext.flags === 0 /* Empty */;\n    rootContext.flags |= flags;\n    if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n        var res_1;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            if (rootContext.flags & 1 /* DetectChanges */) {\n                rootContext.flags &= ~1 /* DetectChanges */;\n                tickRootContext(rootContext);\n            }\n            if (rootContext.flags & 2 /* FlushPlayers */) {\n                rootContext.flags &= ~2 /* FlushPlayers */;\n                var playerHandler = rootContext.playerHandler;\n                if (playerHandler) {\n                    playerHandler.flushPlayers();\n                }\n            }\n            rootContext.clean = _CLEAN_PROMISE;\n            res_1(null);\n        });\n    }\n}\nfunction tickRootContext(rootContext) {\n    for (var i = 0; i < rootContext.components.length; i++) {\n        var rootComponent = rootContext.components[i];\n        renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n    }\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nfunction detectChanges(component) {\n    var view = getComponentViewByInstance(component);\n    detectChangesInternal(view, component);\n}\nfunction detectChangesInternal(view, context) {\n    var rendererFactory = view[RENDERER_FACTORY];\n    if (rendererFactory.begin)\n        rendererFactory.begin();\n    if (isCreationMode(view)) {\n        checkView(view, context); // creation mode pass\n    }\n    checkView(view, context); // update mode pass\n    if (rendererFactory.end)\n        rendererFactory.end();\n}\n/**\n * Synchronously perform change detection on a root view and its components.\n *\n * @param lView The view which the change detection should be performed on.\n */\nfunction detectChangesInRootView(lView) {\n    tickRootContext(lView[CONTEXT]);\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n */\nfunction checkNoChanges(component) {\n    setCheckNoChangesMode(true);\n    try {\n        detectChanges(component);\n    }\n    finally {\n        setCheckNoChangesMode(false);\n    }\n}\n/**\n * Checks the change detector on a root view and its components, and throws if any changes are\n * detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n *\n * @param lView The view which the change detection should be checked on.\n */\nfunction checkNoChangesInRootView(lView) {\n    setCheckNoChangesMode(true);\n    try {\n        detectChangesInRootView(lView);\n    }\n    finally {\n        setCheckNoChangesMode(false);\n    }\n}\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\nfunction checkView(hostView, component) {\n    var hostTView = hostView[TVIEW];\n    var oldView = enterView(hostView, hostView[HOST_NODE]);\n    var templateFn = hostTView.template;\n    var viewQuery = hostTView.viewQuery;\n    try {\n        namespaceHTML();\n        createViewQuery(viewQuery, hostView, component);\n        templateFn(getRenderFlags(hostView), component);\n        refreshDescendantViews(hostView);\n        updateViewQuery(viewQuery, hostView, component);\n    }\n    finally {\n        leaveView(oldView);\n    }\n}\nfunction createViewQuery(viewQuery, view, component) {\n    if (viewQuery && isCreationMode(view)) {\n        viewQuery(1 /* Create */, component);\n    }\n}\nfunction updateViewQuery(viewQuery, view, component) {\n    if (viewQuery && !isCreationMode(view)) {\n        viewQuery(2 /* Update */, component);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n *\n * @publicApi\n */\nfunction markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    markViewDirty(getComponentViewByInstance(component));\n}\n///////////////////////////////\n//// Bindings & interpolations\n///////////////////////////////\n/**\n * Creates a single value binding.\n *\n * @param value Value to diff\n */\nfunction bind(value) {\n    var lView = getLView();\n    return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n}\n/**\n * Allocates the necessary amount of slots for host vars.\n *\n * @param count Amount of vars to be allocated\n */\nfunction allocHostVars(count) {\n    if (!getFirstTemplatePass())\n        return;\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n    prefillHostVars(tView, lView, count);\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    var different = false;\n    var lView = getLView();\n    var bindingIndex = lView[BINDING_INDEX];\n    for (var i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n    }\n    lView[BINDING_INDEX] = bindingIndex;\n    if (!different) {\n        return NO_CHANGE;\n    }\n    // Build the updated content\n    var content = values[0];\n    for (var i = 1; i < values.length; i += 2) {\n        content += stringify$1(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nfunction interpolation1(prefix, v0, suffix) {\n    var lView = getLView();\n    var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n    lView[BINDING_INDEX] += 1;\n    return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation binding with 2 expressions. */\nfunction interpolation2(prefix, v0, i0, v1, suffix) {\n    var lView = getLView();\n    var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n    lView[BINDING_INDEX] += 2;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation binding with 3 expressions. */\nfunction interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var lView = getLView();\n    var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n    lView[BINDING_INDEX] += 3;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/** Create an interpolation binding with 4 expressions. */\nfunction interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var lView = getLView();\n    var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n    lView[BINDING_INDEX] += 4;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 5 expressions. */\nfunction interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var lView = getLView();\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n    lView[BINDING_INDEX] += 5;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 6 expressions. */\nfunction interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var lView = getLView();\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n    lView[BINDING_INDEX] += 6;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 7 expressions. */\nfunction interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var lView = getLView();\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n    lView[BINDING_INDEX] += 7;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 8 expressions. */\nfunction interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var lView = getLView();\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n    lView[BINDING_INDEX] += 8;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/** Store a value in the `data` at a given `index`. */\nfunction store(index, value) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    // We don't store any static data for local variables, so the first time\n    // we see the template, we should store as null to avoid a sparse array\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (adjustedIndex >= tView.data.length) {\n        tView.data[adjustedIndex] = null;\n    }\n    lView[adjustedIndex] = value;\n}\n/**\n * Retrieves a local reference from the current contextViewData.\n *\n * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n *\n * @param index The index of the local ref in contextViewData.\n */\nfunction reference(index) {\n    var contextLView = getContextLView();\n    return loadInternal(contextLView, index);\n}\nfunction loadQueryList(queryListIdx) {\n    var lView = getLView();\n    ngDevMode &&\n        assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n    ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n    return lView[CONTENT_QUERIES][queryListIdx];\n}\n/** Retrieves a value from current `viewData`. */\nfunction load(index) {\n    return loadInternal(getLView(), index);\n}\nfunction directiveInject(token, flags) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    token = resolveForwardRef(token);\n    return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n}\n/**\n * Facade for the attribute injection from DI.\n */\nfunction injectAttribute(attrNameToInject) {\n    return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n}\n/**\n * Registers a QueryList, associated with a content query, for later refresh (part of a view\n * refresh).\n */\nfunction registerContentQuery(queryList, currentDirectiveIndex) {\n    var viewData = getLView();\n    var tView = viewData[TVIEW];\n    var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n    if (getFirstTemplatePass()) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n        if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n        }\n    }\n}\nvar CLEAN_PROMISE = _CLEAN_PROMISE;\nfunction initializeTNodeInputs(tNode) {\n    // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked.\n    if (tNode) {\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    return null;\n}\n/**\n * Returns the current OpaqueViewState instance.\n *\n * Used in conjunction with the restoreView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n */\nfunction getCurrentView() {\n    return getLView();\n}\nfunction getCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view[CLEANUP] || (view[CLEANUP] = []);\n}\nfunction getTViewCleanup(view) {\n    return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Adds a player to an element, directive or component instance that will later be\n * animated once change detection has passed.\n *\n * When a player is added to a reference it will stay active until `player.destroy()`\n * is called. Once called then the player will be removed from the active players\n * present on the associated ref instance.\n *\n * To get a list of all the active players on an element see [getPlayers].\n *\n * @param ref The element, directive or component that the player will be placed on.\n * @param player The player that will be triggered to play once change detection has run.\n */\nfunction addPlayer(ref, player) {\n    var context = getLContext(ref);\n    if (!context) {\n        ngDevMode && throwInvalidRefError();\n        return;\n    }\n    var element$$1 = context.native;\n    var lView = context.lView;\n    var playerContext = getOrCreatePlayerContext(element$$1, context);\n    var rootContext = getRootContext$1(lView);\n    addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n    scheduleTick(rootContext, 2 /* FlushPlayers */);\n}\n/**\n * Returns a list of all the active players present on the provided ref instance (which can\n * be an instance of a directive, component or element).\n *\n * This function will only return players that have been added to the ref instance using\n * `addPlayer` or any players that are active through any template styling bindings\n * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n *\n * @publicApi\n */\nfunction getPlayers(ref) {\n    var context = getLContext(ref);\n    if (!context) {\n        ngDevMode && throwInvalidRefError();\n        return [];\n    }\n    var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n    var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n    return playerContext ? getPlayersInternal(playerContext) : [];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file introduces series of globally accessible debug tools\n * to allow for the Angular debugging story to function.\n *\n * To see this in action run the following command:\n *\n *   bazel run --define=compile=aot\n *   //packages/core/test/bundling/todo:devserver\n *\n *  Then load `localhost:5432` and start using the console tools.\n */\n/**\n * This value reflects the property on the window where the dev\n * tools are patched (window.ng).\n * */\nvar GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n/*\n * Publishes a collection of default debug tools onto `window._ng_`.\n *\n * These functions are available globally when Angular is in development\n * mode and are automatically stripped away from prod mode is on.\n */\nvar _published = false;\nfunction publishDefaultGlobalUtils() {\n    if (!_published) {\n        _published = true;\n        publishGlobalUtil('getComponent', getComponent);\n        publishGlobalUtil('getContext', getContext);\n        publishGlobalUtil('getListeners', getListeners);\n        publishGlobalUtil('getViewComponent', getViewComponent);\n        publishGlobalUtil('getHostElement', getHostElement);\n        publishGlobalUtil('getInjector', getInjector);\n        publishGlobalUtil('getRootComponents', getRootComponents);\n        publishGlobalUtil('getDirectives', getDirectives);\n        publishGlobalUtil('getPlayers', getPlayers);\n        publishGlobalUtil('markDirty', markDirty);\n    }\n}\n/**\n * Publishes the given function to `window.ngDevMode` so that it can be\n * used from the browser console when an application is not in production.\n */\nfunction publishGlobalUtil(name, fn) {\n    var w = _global;\n    ngDevMode && assertDefined(fn, 'function not defined');\n    if (w) {\n        var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n        if (!container) {\n            container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n        }\n        container[name] = fn;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nfunction renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n    if (opts === void 0) { opts = {}; }\n    ngDevMode && publishDefaultGlobalUtils();\n    ngDevMode && assertComponentType(componentType);\n    var rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var sanitizer = opts.sanitizer || null;\n    var componentDef = getComponentDef(componentType);\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    // The first index of the first selector is the tag name.\n    var componentTag = componentDef.selectors[0][0];\n    var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    var rootFlags = componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n        4 /* CheckAlways */ | 128 /* IsRoot */;\n    var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n    var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n    var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n    var oldView = enterView(rootView, null);\n    var component;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n        component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n        refreshDescendantViews(rootView); // creation mode pass\n        rootView[FLAGS] &= ~1 /* CreationMode */;\n        refreshDescendantViews(rootView); // update mode pass\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\n/**\n * Creates the root component view and the root component node.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n * @param rootView The parent view where the host node is stored\n * @param renderer The current renderer\n * @param sanitizer The sanitizer, if provided\n *\n * @returns Component view created\n */\nfunction createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n    resetComponentState();\n    var tView = rootView[TVIEW];\n    var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n    var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n    if (tView.firstTemplatePass) {\n        diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n        tNode.flags = 1 /* isComponent */;\n        initNodeFlags(tNode, rootView.length, 1);\n        queueComponentIndexForCheck(tNode);\n    }\n    // Store component view at node index, with node as the HOST\n    componentView[HOST] = rootView[HEADER_OFFSET];\n    componentView[HOST_NODE] = tNode;\n    return rootView[HEADER_OFFSET] = componentView;\n}\n/**\n * Creates a root component and sets it up with features and host bindings. Shared by\n * renderComponent() and ViewContainerRef.createComponent().\n */\nfunction createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n    var tView = rootView[TVIEW];\n    // Create directive instance with factory() and store at next index in viewData\n    var component = instantiateRootComponent(tView, rootView, componentDef);\n    rootContext.components.push(component);\n    componentView[CONTEXT] = component;\n    hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n    if (tView.firstTemplatePass && componentDef.hostBindings) {\n        var rootTNode = getPreviousOrParentTNode();\n        setCurrentDirectiveDef(componentDef);\n        componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n        setCurrentDirectiveDef(null);\n    }\n    return component;\n}\nfunction createRootContext(scheduler, playerHandler) {\n    return {\n        components: [],\n        scheduler: scheduler || defaultScheduler,\n        clean: CLEAN_PROMISE,\n        playerHandler: playerHandler || null,\n        flags: 0 /* Empty */\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\nfunction LifecycleHooksFeature(component, def) {\n    var rootTView = readPatchedLView(component)[TVIEW];\n    var dirIndex = rootTView.data.length - 1;\n    queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n    // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n    // LNode).\n    queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n}\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootContext$2(component) {\n    var rootContext = getRootView(component)[CONTEXT];\n    ngDevMode && assertDefined(rootContext, 'rootContext');\n    return rootContext;\n}\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nfunction whenRendered(component) {\n    return getRootContext$2(component).clean;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n * @param definition The definition to examine\n */\nfunction isComponentDef$1(definition) {\n    var def = definition;\n    return typeof def.template === 'function';\n}\nfunction getSuperType(type) {\n    return Object.getPrototypeOf(type.prototype).constructor;\n}\n/**\n * Merges the definition from a super class to a sub class.\n * @param definition The definition that is a SubClass of another directive of component\n */\nfunction InheritDefinitionFeature(definition) {\n    var superType = getSuperType(definition.type);\n    var _loop_1 = function () {\n        var e_1, _a;\n        var superDef = undefined;\n        if (isComponentDef$1(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n        }\n        else {\n            if (superType.ngComponentDef) {\n                throw new Error('Directives cannot inherit Components');\n            }\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ngDirectiveDef;\n        }\n        var baseDef = superType.ngBaseDef;\n        // Some fields in the definition may be empty, if there were no values to put in them that\n        // would've justified object creation. Unwrap them if necessary.\n        if (baseDef || superDef) {\n            var writeableDef = definition;\n            writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n            writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n            writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n        }\n        if (baseDef) {\n            // Merge inputs and outputs\n            fillProperties(definition.inputs, baseDef.inputs);\n            fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n            fillProperties(definition.outputs, baseDef.outputs);\n        }\n        if (superDef) {\n            // Merge hostBindings\n            var prevHostBindings_1 = definition.hostBindings;\n            var superHostBindings_1 = superDef.hostBindings;\n            if (superHostBindings_1) {\n                if (prevHostBindings_1) {\n                    definition.hostBindings = function (rf, ctx, elementIndex) {\n                        superHostBindings_1(rf, ctx, elementIndex);\n                        prevHostBindings_1(rf, ctx, elementIndex);\n                    };\n                }\n                else {\n                    definition.hostBindings = superHostBindings_1;\n                }\n            }\n            // Merge View Queries\n            if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                var prevViewQuery_1 = definition.viewQuery;\n                var superViewQuery_1 = superDef.viewQuery;\n                if (superViewQuery_1) {\n                    if (prevViewQuery_1) {\n                        definition.viewQuery = function (rf, ctx) {\n                            superViewQuery_1(rf, ctx);\n                            prevViewQuery_1(rf, ctx);\n                        };\n                    }\n                    else {\n                        definition.viewQuery = superViewQuery_1;\n                    }\n                }\n            }\n            // Merge Content Queries\n            var prevContentQueries_1 = definition.contentQueries;\n            var superContentQueries_1 = superDef.contentQueries;\n            if (superContentQueries_1) {\n                if (prevContentQueries_1) {\n                    definition.contentQueries = function (dirIndex) {\n                        superContentQueries_1(dirIndex);\n                        prevContentQueries_1(dirIndex);\n                    };\n                }\n                else {\n                    definition.contentQueries = superContentQueries_1;\n                }\n            }\n            // Merge Content Queries Refresh\n            var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n            var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n            if (superContentQueriesRefresh_1) {\n                if (prevContentQueriesRefresh_1) {\n                    definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                        superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                    };\n                }\n                else {\n                    definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                }\n            }\n            // Merge inputs and outputs\n            fillProperties(definition.inputs, superDef.inputs);\n            fillProperties(definition.declaredInputs, superDef.declaredInputs);\n            fillProperties(definition.outputs, superDef.outputs);\n            // Inherit hooks\n            // Assume super class inheritance feature has already run.\n            definition.afterContentChecked =\n                definition.afterContentChecked || superDef.afterContentChecked;\n            definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n            definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n            definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n            definition.doCheck = definition.doCheck || superDef.doCheck;\n            definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n            definition.onInit = definition.onInit || superDef.onInit;\n            // Run parent features\n            var features = superDef.features;\n            if (features) {\n                try {\n                    for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                        var feature = features_1_1.value;\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            return \"break\";\n        }\n        else {\n            // Even if we don't have a definition, check the type for the hooks and use those if need be\n            var superPrototype = superType.prototype;\n            if (superPrototype) {\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superPrototype.afterContentChecked;\n                definition.afterContentInit =\n                    definition.afterContentInit || superPrototype.afterContentInit;\n                definition.afterViewChecked =\n                    definition.afterViewChecked || superPrototype.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                definition.onInit = definition.onInit || superPrototype.onInit;\n            }\n        }\n        superType = Object.getPrototypeOf(superType);\n    };\n    while (superType) {\n        var state_1 = _loop_1();\n        if (state_1 === \"break\")\n            break;\n    }\n}\nfunction maybeUnwrapEmpty(value) {\n    if (value === EMPTY_OBJ) {\n        return {};\n    }\n    else if (value === EMPTY_ARRAY) {\n        return [];\n    }\n    else {\n        return value;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature]\n * });\n * ```\n */\nfunction NgOnChangesFeature(definition) {\n    var publicToDeclaredInputs = definition.declaredInputs;\n    var publicToMinifiedInputs = definition.inputs;\n    var proto = definition.type.prototype;\n    var _loop_1 = function (publicName) {\n        if (publicToDeclaredInputs.hasOwnProperty(publicName)) {\n            var minifiedKey = publicToMinifiedInputs[publicName];\n            var declaredKey_1 = publicToDeclaredInputs[publicName];\n            var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n            // Walk the prototype chain to see if we find a property descriptor\n            // That way we can honor setters and getters that were inherited.\n            var originalProperty = undefined;\n            var checkProto = proto;\n            while (!originalProperty && checkProto &&\n                Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                checkProto = Object.getPrototypeOf(checkProto);\n            }\n            var getter = originalProperty && originalProperty.get;\n            var setter_1 = originalProperty && originalProperty.set;\n            // create a getter and setter for property\n            Object.defineProperty(proto, minifiedKey, {\n                get: getter ||\n                    (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                set: function (value) {\n                    var simpleChanges = this[PRIVATE_PREFIX];\n                    if (!simpleChanges) {\n                        simpleChanges = {};\n                        // Place where we will store SimpleChanges if there is a change\n                        Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                    }\n                    var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                    var currentChange = simpleChanges[declaredKey_1];\n                    if (currentChange) {\n                        currentChange.currentValue = value;\n                    }\n                    else {\n                        simpleChanges[declaredKey_1] =\n                            new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                    }\n                    if (isFirstChange) {\n                        // Create a place where the actual value will be stored and make it non-enumerable\n                        Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                    }\n                    else {\n                        this[privateMinKey_1] = value;\n                    }\n                    if (setter_1)\n                        setter_1.call(this, value);\n                },\n                // Make the property configurable in dev mode to allow overriding in tests\n                configurable: !!ngDevMode\n            });\n        }\n    };\n    for (var publicName in publicToDeclaredInputs) {\n        _loop_1(publicName);\n    }\n    // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n    // so the call order is changes-init-check in creation mode. In subsequent\n    // change detection runs, only the check wrapper will be called.\n    if (definition.onInit != null) {\n        definition.onInit = onChangesWrapper(definition.onInit);\n    }\n    definition.doCheck = onChangesWrapper(definition.doCheck);\n}\n// This option ensures that the ngOnChanges lifecycle hook will be inherited\n// from superclasses (in InheritDefinitionFeature).\nNgOnChangesFeature.ngInherit = true;\nfunction onChangesWrapper(delegateHook) {\n    return function () {\n        var simpleChanges = this[PRIVATE_PREFIX];\n        if (simpleChanges != null) {\n            this.ngOnChanges(simpleChanges);\n            this[PRIVATE_PREFIX] = null;\n        }\n        if (delegateHook)\n            delegateHook.apply(this);\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noop() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    // Do nothing.\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @publicApi\n */\nvar INJECTOR$1 = new InjectionToken('INJECTOR');\nvar NullInjector = /** @class */ (function () {\n    function NullInjector() {\n    }\n    NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n            // if(ngDevMode) debugger;\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return NullInjector;\n}());\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * @publicApi\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    Injector.create = function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new NullInjector();\n    /** @nocollapse */\n    Injector.ngInjectableDef = defineInjectable({\n        providedIn: 'any',\n        factory: function () { return inject(INJECTOR$1); },\n    });\n    /** @internal */\n    Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n    return Injector;\n}());\nvar SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n    return injectInjector();\n};\nvar SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\nvar SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__POST_R3__;\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = [];\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR$1 = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR$1; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var records = this._records = new Map();\n        records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        recursivelyProcessProviders(records, providers);\n    }\n    StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = InjectFlags.Default; }\n        var record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            var tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    StaticInjector.prototype.toString = function () {\n        var tokens = [], records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nfunction resolveProvider(provider) {\n    var deps = computeDeps(provider);\n    var fn = IDENT;\n    var value = EMPTY;\n    var useNew = false;\n    var provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = provider.useValue;\n    }\n    else if (provider.useFactory) {\n        fn = provider.useFactory;\n    }\n    else if (provider.useExisting) ;\n    else if (provider.useClass) {\n        useNew = true;\n        fn = resolveForwardRef(provider.useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var token = resolveForwardRef(provider.provide);\n            var resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = {\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    });\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var _a;\n    var value;\n    if (record && !(flags & InjectFlags.SkipSelf)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var obj = undefined;\n            var useNew = record.useNew;\n            var fn = record.fn;\n            var depRecords = record.deps;\n            var deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var i = 0; i < depRecords.length; i++) {\n                    var depRecord = depRecords[i];\n                    var options = depRecord.options;\n                    var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, \n                    // A record which describes how to resolve the token.\n                    // If undefined, this means we don't have such a record\n                    childRecord, \n                    // Other records we know about.\n                    records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, InjectFlags.Default));\n                }\n            }\n            record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & InjectFlags.Self)) {\n        value = parent.get(token, notFoundValue, InjectFlags.Default);\n    }\n    return value;\n}\nfunction computeDeps(provider) {\n    var deps = EMPTY;\n    var providerDeps = provider.deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var i = 0; i < providerDeps.length; i++) {\n            var options = 6 /* Default */;\n            var token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var j = 0, annotations = token; j < annotations.length; j++) {\n                    var annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = annotation.token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if (provider.useExisting) {\n        var token = resolveForwardRef(provider.useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var parts = [];\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nvar APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nvar NOT_YET = {};\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nvar CIRCULAR$1 = {};\nvar EMPTY_ARRAY$1 = [];\n/**\n * A lazily initialized NullInjector.\n */\nvar NULL_INJECTOR$2 = undefined;\nfunction getNullInjector() {\n    if (NULL_INJECTOR$2 === undefined) {\n        NULL_INJECTOR$2 = new NullInjector();\n    }\n    return NULL_INJECTOR$2;\n}\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * @publicApi\n */\nfunction createInjector(defType, parent, additionalProviders) {\n    if (parent === void 0) { parent = null; }\n    if (additionalProviders === void 0) { additionalProviders = null; }\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, additionalProviders, parent);\n}\nvar R3Injector = /** @class */ (function () {\n    function R3Injector(def, additionalProviders, parent) {\n        var _this = this;\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        this.destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in `def`.\n        var dedupStack = [];\n        deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n        additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR$1, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    R3Injector.prototype.destroy = function () {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    };\n    R3Injector.prototype.get = function (token, notFoundValue, flags) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (flags === void 0) { flags = InjectFlags.Default; }\n        this.assertNotDestroyed();\n        // Set the injection context.\n        var previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & InjectFlags.SkipSelf)) {\n                // SkipSelf isn't set, check if the record belongs to this injector.\n                var record = this.records.get(token);\n                if (record === undefined) {\n                    // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                    // with a scope matching this injector.\n                    var def = couldBeInjectableType(token) && getInjectableDef(token);\n                    if (def && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            // Select the next injector based on the Self flag - if self is set, the next injector is\n            // the NullInjector, otherwise it's the parent.\n            var nextInjector = !(flags & InjectFlags.Self) ? this.parent : getNullInjector();\n            return nextInjector.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    };\n    R3Injector.prototype.assertNotDestroyed = function () {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    };\n    /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     */\n    R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n        var _this = this;\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        if (!defOrWrappedDef)\n            return;\n        // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n        // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n        // read, so care is taken to only do the read once.\n        // First attempt to read the ngInjectorDef.\n        var def = getInjectorDef(defOrWrappedDef);\n        // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n        var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n        // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n        // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n        // is the `ngModule`.\n        var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n        // Check for circular dependencies.\n        if (ngDevMode && parents.indexOf(defType) !== -1) {\n            var defName = stringify(defType);\n            throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n        }\n        // Check for multiple imports of the same module\n        var isDuplicate = dedupStack.indexOf(defType) !== -1;\n        // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n        // extra providers.\n        var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n            EMPTY_ARRAY$1;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = getInjectorDef(ngModule);\n        }\n        // If no definition was found, it might be from exports. Remove it.\n        if (def == null) {\n            return;\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory, NOT_YET));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null && !isDuplicate) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            ngDevMode && parents.push(defType);\n            // Add it to the set of dedups. This way we can detect multiple imports of the same module\n            dedupStack.push(defType);\n            try {\n                deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                ngDevMode && parents.pop();\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        var defProviders = def.providers;\n        if (defProviders != null && !isDuplicate) {\n            var injectorType_1 = defOrWrappedDef;\n            deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        var ngModuleType = defOrWrappedDef.ngModule;\n        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n    };\n    /**\n     * Process a `SingleProvider` and add it.\n     */\n    R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n        // Construct a `Record` for the provider.\n        var record = providerToRecord(provider, ngModuleType, providers);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            // If the provider indicates that it's a multi-provider, process it specially.\n            // First check whether it's been defined already.\n            var multiRecord_1 = this.records.get(token);\n            if (multiRecord_1) {\n                // It has. Throw a nice error if\n                if (multiRecord_1.multi === undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                }\n            }\n            else {\n                multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                this.records.set(token, multiRecord_1);\n            }\n            token = provider;\n            multiRecord_1.multi.push(provider);\n        }\n        else {\n            var existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throw new Error(\"Mixed multi-provider for \" + stringify(token));\n            }\n        }\n        this.records.set(token, record);\n    };\n    R3Injector.prototype.hydrate = function (token, record) {\n        if (record.value === CIRCULAR$1) {\n            throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR$1;\n            record.value = record.factory();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return record.value;\n    };\n    R3Injector.prototype.injectableDefInScope = function (def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    };\n    return R3Injector;\n}());\nfunction injectableDefOrInjectorDefFactory(token) {\n    var injectableDef = getInjectableDef(token);\n    if (injectableDef === null) {\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        else if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        else if (token instanceof Function) {\n            var paramLength = token.length;\n            if (paramLength > 0) {\n                var args = new Array(paramLength).fill('?');\n                throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n            }\n            return function () { return new token(); };\n        }\n        throw new Error('unreachable');\n    }\n    return injectableDef.factory;\n}\nfunction providerToRecord(provider, ngModuleType, providers) {\n    var factory = providerToFactory(provider, ngModuleType, providers);\n    if (isValueProvider(provider)) {\n        return makeRecord(undefined, provider.useValue);\n    }\n    else {\n        return makeRecord(factory, NOT_YET);\n    }\n}\n/**\n * Converts a `SingleProvider` into a factory function.\n *\n * @param provider provider to convert to factory\n */\nfunction providerToFactory(provider, ngModuleType, providers) {\n    var factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n    }\n    else {\n        if (isValueProvider(provider)) {\n            factory = function () { return resolveForwardRef(provider.useValue); };\n        }\n        else if (isExistingProvider(provider)) {\n            factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n        }\n        else {\n            var classRef_1 = resolveForwardRef(provider &&\n                (provider.useClass || provider.provide));\n            if (!classRef_1) {\n                var ngModuleDetail = '';\n                if (ngModuleType && providers) {\n                    var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                    ngModuleDetail =\n                        \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                }\n                throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n            }\n            if (hasDeps(provider)) {\n                factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n            }\n            else {\n                return injectableDefOrInjectorDefFactory(classRef_1);\n            }\n        }\n    }\n    return factory;\n}\nfunction makeRecord(factory, value, multi) {\n    if (multi === void 0) { multi = false; }\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\nfunction deepForEach(input, fn) {\n    input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n}\nfunction isValueProvider(value) {\n    return value && typeof value == 'object' && USE_VALUE in value;\n}\nfunction isExistingProvider(value) {\n    return !!(value && value.useExisting);\n}\nfunction isFactoryProvider(value) {\n    return !!(value && value.useFactory);\n}\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\nfunction hasDeps(value) {\n    return !!value.deps;\n}\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && value.ngOnDestroy &&\n        typeof value.ngOnDestroy === 'function';\n}\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves the providers which are defined in the DirectiveDef.\n *\n * When inserting the tokens and the factories in their respective arrays, we can assume that\n * this method is called first for the component (if any), and then for other directives on the same\n * node.\n * As a consequence,the providers are always processed in that order:\n * 1) The view providers of the component\n * 2) The providers of the component\n * 3) The providers of the other directives\n * This matches the structure of the injectables arrays of a view (for each node).\n * So the tokens and the factories can be pushed at the end of the arrays, except\n * in one case for multi providers.\n *\n * @param def the directive definition\n * @param providers: Array of `providers`.\n * @param viewProviders: Array of `viewProviders`.\n */\nfunction providersResolver(def, providers, viewProviders) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    if (tView.firstTemplatePass) {\n        var isComponent$$1 = isComponentDef(def);\n        // The list of view providers is processed first, and the flags are updated\n        resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n        // Then, the list of providers is processed, and the flags are updated\n        resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n    }\n}\n/**\n * Resolves a provider and publishes it to the DI system.\n */\nfunction resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n    provider = resolveForwardRef(provider);\n    if (Array.isArray(provider)) {\n        // Recursively call `resolveProvider`\n        // Recursion is OK in this case because this code will not be in hot-path once we implement\n        // cloning of the initial state.\n        for (var i = 0; i < provider.length; i++) {\n            resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n        }\n    }\n    else {\n        var lView = getLView();\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        var providerFactory = providerToFactory(provider);\n        var tNode = getPreviousOrParentTNode();\n        var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveStart;\n        var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n        if (isTypeProvider(provider) || !provider.multi) {\n            // Single provider case: the factory is created and pushed immediately\n            var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n            var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n            if (existingFactoryIndex == -1) {\n                diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                tInjectables.push(token);\n                tNode.directiveStart++;\n                tNode.directiveEnd++;\n                if (isViewProvider) {\n                    tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                }\n                lInjectablesBlueprint.push(factory);\n                lView.push(factory);\n            }\n            else {\n                lInjectablesBlueprint[existingFactoryIndex] = factory;\n                lView[existingFactoryIndex] = factory;\n            }\n        }\n        else {\n            // Multi provider case:\n            // We create a multi factory which is going to aggregate all the values.\n            // Since the output of such a factory depends on content or view injection,\n            // we create two of them, which are linked together.\n            //\n            // The first one (for view providers) is always in the first block of the injectables array,\n            // and the second one (for providers) is always in the second block.\n            // This is important because view providers have higher priority. When a multi token\n            // is being looked up, the view providers should be found first.\n            // Note that it is not possible to have a multi factory in the third block (directive block).\n            //\n            // The algorithm to process multi providers is as follows:\n            // 1) If the multi provider comes from the `viewProviders` of the component:\n            //   a) If the special view providers factory doesn't exist, it is created and pushed.\n            //   b) Else, the multi provider is added to the existing multi factory.\n            // 2) If the multi provider comes from the `providers` of the component or of another\n            // directive:\n            //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n            //      It is also linked to the multi factory for view providers, if it exists.\n            //   b) Else, the multi provider is added to the existing multi factory.\n            var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n            var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n            var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                lInjectablesBlueprint[existingProvidersFactoryIndex];\n            var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n            if (isViewProvider && !doesViewProvidersFactoryExist ||\n                !isViewProvider && !doesProvidersFactoryExist) {\n                // Cases 1.a and 2.a\n                diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                if (!isViewProvider && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                }\n                tInjectables.push(token);\n                tNode.directiveStart++;\n                tNode.directiveEnd++;\n                if (isViewProvider) {\n                    tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                }\n                lInjectablesBlueprint.push(factory);\n                lView.push(factory);\n            }\n            else {\n                // Cases 1.b and 2.b\n                multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n            }\n            if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n            }\n        }\n    }\n}\n/**\n * Add a factory in a multi factory.\n */\nfunction multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n    multiFactory.multi.push(factory);\n    if (isComponentProvider) {\n        multiFactory.componentProviders++;\n    }\n}\n/**\n * Returns the index of item in the array, but only in the begin to end range.\n */\nfunction indexOf(item, arr, begin, end) {\n    for (var i = begin; i < end; i++) {\n        if (arr[i] === item)\n            return i;\n    }\n    return -1;\n}\n/**\n * Use this with `multi` `providers`.\n */\nfunction multiProvidersFactoryResolver(_, tData, lData, tNode) {\n    return multiResolve(this.multi, []);\n}\n/**\n * Use this with `multi` `viewProviders`.\n *\n * This factory knows how to concatenate itself with the existing `multi` `providers`.\n */\nfunction multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n    var factories = this.multi;\n    var result;\n    if (this.providerFactory) {\n        var componentCount = this.providerFactory.componentProviders;\n        var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n        // Copy the section of the array which contains `multi` `providers` from the component\n        result = multiProviders.slice(0, componentCount);\n        // Insert the `viewProvider` instances.\n        multiResolve(factories, result);\n        // Copy the section of the array which contains `multi` `providers` from other directives\n        for (var i = componentCount; i < multiProviders.length; i++) {\n            result.push(multiProviders[i]);\n        }\n    }\n    else {\n        result = [];\n        // Insert the `viewProvider` instances.\n        multiResolve(factories, result);\n    }\n    return result;\n}\n/**\n * Maps an array of factories into an array of values.\n */\nfunction multiResolve(factories, result) {\n    for (var i = 0; i < factories.length; i++) {\n        var factory = factories[i];\n        result.push(factory());\n    }\n    return result;\n}\n/**\n * Creates a multi factory.\n */\nfunction multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n    var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n    factory.multi = [];\n    factory.index = index;\n    factory.componentProviders = 0;\n    multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n    return factory;\n}\n\n/**\n * This feature resolves the providers of a directive (or component),\n * and publish them into the DI system, making it visible to others for injection.\n *\n * For example:\n * class ComponentWithProviders {\n *   constructor(private greeter: GreeterDE) {}\n *\n *   static ngComponentDef = defineComponent({\n *     type: ComponentWithProviders,\n *     selectors: [['component-with-providers']],\n *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n *    consts: 1,\n *    vars: 1,\n *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n *      if (fs & RenderFlags.Create) {\n *        text(0);\n *      }\n *      if (fs & RenderFlags.Update) {\n *        textBinding(0, bind(ctx.greeter.greet()));\n *      }\n *    },\n *    features: [ProvidersFeature([GreeterDE])]\n *  });\n * }\n *\n * @param definition\n */\nfunction ProvidersFeature(providers, viewProviders) {\n    if (viewProviders === void 0) { viewProviders = []; }\n    return function (definition) {\n        definition.providersResolver = function (def) {\n            return providersResolver(def, providers, viewProviders);\n        };\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * @publicApi\n */\nvar ComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * @publicApi\n */\nvar ComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noComponentFactoryError(component) {\n    var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    error[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * @publicApi\n */\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * @publicApi\n */\nvar NgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @publicApi\n */\nvar NgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef = /** @class */ (function () {\n    function ViewRef(_lView, _context, _componentIndex) {\n        this._context = _context;\n        this._componentIndex = _componentIndex;\n        this._appRef = null;\n        this._viewContainerRef = null;\n        /**\n         * @internal\n         */\n        this._tViewNode = null;\n        this._lView = _lView;\n    }\n    Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n        get: function () {\n            if (this._lView[HOST] == null) {\n                var tView = this._lView[HOST_NODE];\n                return collectNativeNodes(this._lView, tView, []);\n            }\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef.prototype, \"context\", {\n        get: function () { return this._context ? this._context : this._lookUpContext(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n        get: function () {\n            return (this._lView[FLAGS] & 64 /* Destroyed */) === 64 /* Destroyed */;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            var index = this._viewContainerRef.indexOf(this);\n            if (index > -1) {\n                this._viewContainerRef.detach(index);\n            }\n            this._viewContainerRef = null;\n        }\n        destroyLView(this._lView);\n    };\n    ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~16 /* Attached */; };\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 16 /* Attached */; };\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n    ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n    ViewRef.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef.prototype._lookUpContext = function () {\n        return this._context = this._lView[PARENT][this._componentIndex];\n    };\n    return ViewRef;\n}());\n/** @internal */\nvar RootViewRef = /** @class */ (function (_super) {\n    __extends(RootViewRef, _super);\n    function RootViewRef(_view) {\n        var _this = _super.call(this, _view, null, -1) || this;\n        _this._view = _view;\n        return _this;\n    }\n    RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n    RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n    Object.defineProperty(RootViewRef.prototype, \"context\", {\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return RootViewRef;\n}(ViewRef));\nfunction collectNativeNodes(lView, parentTNode, result) {\n    var tNodeChild = parentTNode.child;\n    while (tNodeChild) {\n        result.push(getNativeByTNode(tNodeChild, lView));\n        if (tNodeChild.type === 4 /* ElementContainer */) {\n            collectNativeNodes(lView, tNodeChild, result);\n        }\n        tNodeChild = tNodeChild.next;\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates an ElementRef from the most recent node.\n *\n * @returns The ElementRef instance to use\n */\nfunction injectElementRef(ElementRefToken) {\n    return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n}\nvar R3ElementRef;\n/**\n * Creates an ElementRef given a node.\n *\n * @param ElementRefToken The ElementRef type\n * @param tNode The node for which you'd like an ElementRef\n * @param view The view to which the node belongs\n * @returns The ElementRef instance to use\n */\nfunction createElementRef(ElementRefToken, tNode, view) {\n    if (!R3ElementRef) {\n        // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n        R3ElementRef = /** @class */ (function (_super) {\n            __extends(ElementRef_, _super);\n            function ElementRef_() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return ElementRef_;\n        }(ElementRefToken));\n    }\n    return new R3ElementRef(getNativeByTNode(tNode, view));\n}\nvar R3TemplateRef;\n/**\n * Creates a TemplateRef given a node.\n *\n * @returns The TemplateRef instance to use\n */\nfunction injectTemplateRef(TemplateRefToken, ElementRefToken) {\n    return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n}\n/**\n * Creates a TemplateRef and stores it on the injector.\n *\n * @param TemplateRefToken The TemplateRef type\n * @param ElementRefToken The ElementRef type\n * @param hostTNode The node that is requesting a TemplateRef\n * @param hostView The view to which the node belongs\n * @returns The TemplateRef instance to use\n */\nfunction createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n    if (!R3TemplateRef) {\n        // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n        R3TemplateRef = /** @class */ (function (_super) {\n            __extends(TemplateRef_, _super);\n            function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                var _this = _super.call(this) || this;\n                _this._declarationParentView = _declarationParentView;\n                _this.elementRef = elementRef;\n                _this._tView = _tView;\n                _this._renderer = _renderer;\n                _this._queries = _queries;\n                _this._injectorIndex = _injectorIndex;\n                return _this;\n            }\n            TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                if (container$$1) {\n                    insertView(lView, container$$1, hostView, index, hostTNode.index);\n                }\n                renderEmbeddedTemplate(lView, this._tView, context);\n                var viewRef = new ViewRef(lView, context, -1);\n                viewRef._tViewNode = lView[HOST_NODE];\n                return viewRef;\n            };\n            return TemplateRef_;\n        }(TemplateRefToken));\n    }\n    if (hostTNode.type === 0 /* Container */) {\n        var hostContainer = hostView[hostTNode.index];\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n    }\n    else {\n        return null;\n    }\n}\nvar R3ViewContainerRef;\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n    var previousTNode = getPreviousOrParentTNode();\n    return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector.\n *\n * @param ViewContainerRefToken The ViewContainerRef type\n * @param ElementRefToken The ElementRef type\n * @param hostTNode The node that is requesting a ViewContainerRef\n * @param hostView The view to which the node belongs\n * @returns The ViewContainerRef instance to use\n */\nfunction createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n    if (!R3ViewContainerRef) {\n        // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n        R3ViewContainerRef = /** @class */ (function (_super) {\n            __extends(ViewContainerRef_, _super);\n            function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                var _this = _super.call(this) || this;\n                _this._lContainer = _lContainer;\n                _this._hostTNode = _hostTNode;\n                _this._hostView = _hostView;\n                _this._viewRefs = [];\n                return _this;\n            }\n            Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                get: function () {\n                    return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                /** @deprecated No replacement */\n                get: function () {\n                    var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                    var parentView = getParentInjectorView(parentLocation, this._hostView);\n                    var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                    return !hasParentInjector(parentLocation) || parentTNode == null ?\n                        new NodeInjector(null, this._hostView) :\n                        new NodeInjector(parentTNode, parentView);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            ViewContainerRef_.prototype.clear = function () {\n                while (this._lContainer[VIEWS].length) {\n                    this.remove(0);\n                }\n            };\n            ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n            Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                get: function () { return this._lContainer[VIEWS].length; },\n                enumerable: true,\n                configurable: true\n            });\n            ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                var adjustedIdx = this._adjustIndex(index);\n                var viewRef = templateRef\n                    .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                viewRef.attachToViewContainerRef(this);\n                this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                return viewRef;\n            };\n            ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                var contextInjector = injector || this.parentInjector;\n                if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                    ngModuleRef = contextInjector.get(NgModuleRef, null);\n                }\n                var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                this.insert(componentRef.hostView, index);\n                return componentRef;\n            };\n            ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                if (viewRef.destroyed) {\n                    throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                }\n                var lView = viewRef._lView;\n                var adjustedIdx = this._adjustIndex(index);\n                insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                addRemoveViewFromContainer(lView, true, beforeNode);\n                viewRef.attachToViewContainerRef(this);\n                this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                return viewRef;\n            };\n            ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                if (viewRef.destroyed) {\n                    throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                }\n                var index = this.indexOf(viewRef);\n                this.detach(index);\n                this.insert(viewRef, this._adjustIndex(newIndex));\n                return viewRef;\n            };\n            ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n            ViewContainerRef_.prototype.remove = function (index) {\n                var adjustedIdx = this._adjustIndex(index, -1);\n                removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                this._viewRefs.splice(adjustedIdx, 1);\n            };\n            ViewContainerRef_.prototype.detach = function (index) {\n                var adjustedIdx = this._adjustIndex(index, -1);\n                var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n            };\n            ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                if (shift === void 0) { shift = 0; }\n                if (index == null) {\n                    return this._lContainer[VIEWS].length + shift;\n                }\n                if (ngDevMode) {\n                    assertGreaterThan(index, -1, 'index must be positive');\n                    // +1 because it's legal to insert at the end.\n                    assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                }\n                return index;\n            };\n            return ViewContainerRef_;\n        }(ViewContainerRefToken));\n    }\n    ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n    var lContainer;\n    var slotValue = hostView[hostTNode.index];\n    if (isLContainer(slotValue)) {\n        // If the host is a container, we don't need to create a new LContainer\n        lContainer = slotValue;\n        lContainer[ACTIVE_INDEX] = -1;\n    }\n    else {\n        var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        // A container can be created on the root (topmost / bootstrapped) component and in this case we\n        // can't use LTree to insert container's marker node (both parent of a comment node and the\n        // commend node itself is located outside of elements hold by LTree). In this specific case we\n        // use low-level DOM manipulation to insert container's marker (comment) node.\n        if (isRootView(hostView)) {\n            var renderer = hostView[RENDERER];\n            var hostNative = getNativeByTNode(hostTNode, hostView);\n            var parentOfHostNative = nativeParentNode(renderer, hostNative);\n            nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n        }\n        else {\n            appendChild(commentNode, hostTNode, hostView);\n        }\n        hostView[hostTNode.index] = lContainer =\n            createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n        addToViewTree(hostView, hostTNode.index, lContainer);\n    }\n    return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n}\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nfunction injectChangeDetectorRef() {\n    return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n *\n * @param hostTNode The node that is requesting a ChangeDetectorRef\n * @param hostView The view to which the node belongs\n * @param context The context for this change detector ref\n * @returns The ChangeDetectorRef to use\n */\nfunction createViewRef(hostTNode, hostView, context) {\n    if (isComponent(hostTNode)) {\n        var componentIndex = hostTNode.directiveStart;\n        var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n        return new ViewRef(componentView, context, componentIndex);\n    }\n    else if (hostTNode.type === 3 /* Element */) {\n        var hostComponentView = findComponentView(hostView);\n        return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n    }\n    return null;\n}\nfunction getOrCreateRenderer2(view) {\n    var renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer)) {\n        return renderer;\n    }\n    else {\n        throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n    }\n}\n/** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\nfunction injectRenderer2() {\n    return getOrCreateRenderer2(getLView());\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    /** @internal */\n    ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n    return ElementRef;\n}());\nvar SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\nvar SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\nvar SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n * @publicApi\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handled internally in the view engine now.\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @publicApi\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @publicApi\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * @publicApi\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * Flags for renderer-specific style modifiers.\n * @publicApi\n */\nvar RendererStyleFlags2;\n(function (RendererStyleFlags2) {\n    /**\n     * Marks a style as important.\n     */\n    RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n    /**\n     * Marks a style as using dash case naming (this-is-dash-case).\n     */\n    RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags2 || (RendererStyleFlags2 = {}));\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * @publicApi\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    /** @internal */\n    Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n    return Renderer2;\n}());\nvar SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\nvar SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\nvar SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n * @publicApi\n */\nvar SecurityContext;\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(SecurityContext || (SecurityContext = {}));\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * @publicApi\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description Represents the version of Angular\n *\n * @publicApi\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @publicApi\n */\nvar VERSION = new Version('7.2.0');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactoryResolver$$1, _super);\n    /**\n     * @param ngModule The NgModuleRef to which all resolved factories are bound.\n     */\n    function ComponentFactoryResolver$$1(ngModule) {\n        var _this = _super.call(this) || this;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n        ngDevMode && assertComponentType(component);\n        var componentDef = getComponentDef(component);\n        return new ComponentFactory$1(componentDef, this.ngModule);\n    };\n    return ComponentFactoryResolver$$1;\n}(ComponentFactoryResolver));\nfunction toRefArray(map) {\n    var array = [];\n    for (var nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            var minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\n/**\n * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n */\nvar ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n/**\n * A change detection scheduler token for {@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n */\nvar SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n    providedIn: 'root',\n    factory: function () { return defaultScheduler; },\n});\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\nfunction createChainedInjector(rootViewInjector, moduleInjector) {\n    return {\n        get: function (token, notFoundValue) {\n            var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n            if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                // Return the value from the root element injector when\n                // - it provides it\n                //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                // - the module injector should not be checked\n                //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                return value;\n            }\n            return moduleInjector.get(token, notFoundValue);\n        }\n    };\n}\n/**\n * Render3 implementation of {@link viewEngine_ComponentFactory}.\n */\nvar ComponentFactory$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactory$$1, _super);\n    /**\n     * @param componentDef The component definition.\n     * @param ngModule The NgModuleRef to which the factory is bound.\n     */\n    function ComponentFactory$$1(componentDef, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.componentDef = componentDef;\n        _this.ngModule = ngModule;\n        _this.componentType = componentDef.type;\n        _this.selector = componentDef.selectors[0][0];\n        _this.ngContentSelectors = [];\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.inputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.outputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        var isInternalRootView = rootSelectorOrNode === undefined;\n        ngModule = ngModule || this.ngModule;\n        var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n        var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n        var sanitizer = rootViewInjector.get(Sanitizer, null);\n        var hostRNode = isInternalRootView ?\n            elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n            locateHostElement(rendererFactory, rootSelectorOrNode);\n        var rootFlags = this.componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n            4 /* CheckAlways */ | 128 /* IsRoot */;\n        var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n        var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n        if (rootSelectorOrNode && hostRNode) {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            isProceduralRenderer(renderer) ?\n                renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                hostRNode.setAttribute('ng-version', VERSION.full);\n        }\n        // Create the root view. Uses empty TView and ContentTemplate.\n        var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n        // rootView is the parent when bootstrapping\n        var oldLView = enterView(rootLView, null);\n        var component;\n        var tElementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n            tElementNode = getTNode(0, rootLView);\n            // Transform the arrays of native nodes into a structure that can be consumed by the\n            // projection instruction. This is needed to support the reprojection of these nodes.\n            if (projectableNodes) {\n                var index = 0;\n                var tView = rootLView[TVIEW];\n                var projection$$1 = tElementNode.projection = [];\n                for (var i = 0; i < projectableNodes.length; i++) {\n                    var nodeList = projectableNodes[i];\n                    var firstTNode = null;\n                    var previousTNode = null;\n                    for (var j = 0; j < nodeList.length; j++) {\n                        if (tView.firstTemplatePass) {\n                            // For dynamically created components such as ComponentRef, we create a new TView for\n                            // each insert. This is not ideal since we should be sharing the TViews.\n                            // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                            // method.\n                            tView.expandoStartIndex++;\n                            tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                            tView.data.splice(index + HEADER_OFFSET, 0, null);\n                            rootLView.splice(index + HEADER_OFFSET, 0, null);\n                        }\n                        var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                        previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                        previousTNode = tNode;\n                    }\n                    projection$$1.push(firstTNode);\n                }\n            }\n            // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n            // executed here?\n            // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n            component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n            addToViewTree(rootLView, HEADER_OFFSET, componentView);\n            refreshDescendantViews(rootLView);\n        }\n        finally {\n            leaveView(oldLView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n        if (isInternalRootView) {\n            // The host element of the internal root view is attached to the component's host view node\n            componentRef.hostView._tViewNode.child = tElementNode;\n        }\n        return componentRef;\n    };\n    return ComponentFactory$$1;\n}(ComponentFactory));\nvar componentFactoryResolver = new ComponentFactoryResolver$1();\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef$1 = /** @class */ (function (_super) {\n    __extends(ComponentRef$$1, _super);\n    function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n        var _this = _super.call(this) || this;\n        _this.location = location;\n        _this._rootLView = _rootLView;\n        _this._tNode = _tNode;\n        _this.destroyCbs = [];\n        _this.instance = instance;\n        _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n        _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n        _this.componentType = componentType;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n        get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n        this.hostView.destroy();\n    };\n    ComponentRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return ComponentRef$$1;\n}(ComponentRef));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n *\n * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n * please see [BAZEL.md](./docs/BAZEL.md).\n */\nvar _devMode = true;\nvar _runModeLocked = false;\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @publicApi\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * @publicApi\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nvar InertBodyHelper = /** @class */ (function () {\n    function InertBodyHelper(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so\n            // we need to create one.\n            var inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     */\n    InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (_a) {\n            return null;\n        }\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(undefined);\n        var body = xhr.response.body;\n        body.removeChild(body.firstChild);\n        return body;\n    };\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     */\n    InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            var body = new window\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body;\n            body.removeChild(body.firstChild);\n            return body;\n        }\n        catch (_a) {\n            return null;\n        }\n    };\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     */\n    InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n        // Prefer using <template> element if supported.\n        var templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if (this.defaultDoc.documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    };\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n        var elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (var i = elAttrs.length - 1; 0 < i; i--) {\n            var attrib = elAttrs.item(i);\n            var attrName = attrib.name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        var childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(childNode);\n            childNode = childNode.nextSibling;\n        }\n    };\n    return InertBodyHelper;\n}());\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!window.DOMParser;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction tagSet(tags) {\n    var e_1, _a;\n    var res = {};\n    try {\n        for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var t = _c.value;\n            res[t] = true;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return res;\n}\nfunction merge$1() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var e_2, _a;\n    var res = {};\n    try {\n        for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n            var s = sets_1_1.value;\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return res;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge$1(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge$1(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n        // because characters were re-encoded.\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var current = el.firstChild;\n        var elementValid = true;\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                elementValid = this.startElement(current);\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(current.nodeValue);\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (elementValid && current.firstChild) {\n                current = current.firstChild;\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(current);\n                }\n                var next = this.checkClobberedElement(current, current.nextSibling);\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, current.parentNode);\n            }\n        }\n        return this.buf.join('');\n    };\n    /**\n     * Outputs only valid Elements.\n     *\n     * Invalid elements are skipped.\n     *\n     * @param element element to sanitize\n     * Returns true if the element is valid.\n     */\n    SanitizingHtmlSerializer.prototype.startElement = function (element) {\n        var tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return false;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var elAttr = elAttrs.item(i);\n            var attrName = elAttr.name;\n            var lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            var value = elAttr.value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n        return true;\n    };\n    SanitizingHtmlSerializer.prototype.endElement = function (current) {\n        var tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var hi = match.charCodeAt(0);\n        var low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    var inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var mXSSAttempts = 5;\n        var parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = inertBodyElement.innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        var sanitizer = new SanitizingHtmlSerializer();\n        var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\nfunction getTemplateContent(el) {\n    return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n        el.content :\n        null;\n}\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marks that the next string is for element.\n *\n * See `I18nMutateOpCodes` documentation.\n */\nvar ELEMENT_MARKER = {\n    marker: 'element'\n};\n/**\n * Marks that the next string is for comment.\n *\n * See `I18nMutateOpCodes` documentation.\n */\nvar COMMENT_MARKER = {\n    marker: 'comment'\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MARKER = \"\\uFFFD\";\nvar ICU_BLOCK_REGEX = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\nvar SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\nvar PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\nvar BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\nvar ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n// i18nPostproocess regexps\nvar PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\nvar PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\nvar PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n/**\n * Breaks pattern into strings and top level {...} blocks.\n * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n * keys and cases.\n * Original code from closure library, modified for Angular.\n *\n * @param pattern (sub)Pattern to be broken.\n *\n */\nfunction extractParts(pattern) {\n    if (!pattern) {\n        return [];\n    }\n    var prevPos = 0;\n    var braceStack = [];\n    var results = [];\n    var braces = /[{}]/g;\n    // lastIndex doesn't get set to 0 so we have to.\n    braces.lastIndex = 0;\n    var match;\n    while (match = braces.exec(pattern)) {\n        var pos = match.index;\n        if (match[0] == '}') {\n            braceStack.pop();\n            if (braceStack.length == 0) {\n                // End of the block.\n                var block = pattern.substring(prevPos, pos);\n                if (ICU_BLOCK_REGEX.test(block)) {\n                    results.push(parseICUBlock(block));\n                }\n                else if (block) { // Don't push empty strings\n                    results.push(block);\n                }\n                prevPos = pos + 1;\n            }\n        }\n        else {\n            if (braceStack.length == 0) {\n                var substring_1 = pattern.substring(prevPos, pos);\n                results.push(substring_1);\n                prevPos = pos + 1;\n            }\n            braceStack.push('{');\n        }\n    }\n    var substring = pattern.substring(prevPos);\n    if (substring != '') {\n        results.push(substring);\n    }\n    return results;\n}\n/**\n * Parses text containing an ICU expression and produces a JSON object for it.\n * Original code from closure library, modified for Angular.\n *\n * @param pattern Text containing an ICU expression that needs to be parsed.\n *\n */\nfunction parseICUBlock(pattern) {\n    var cases = [];\n    var values = [];\n    var icuType = 1 /* plural */;\n    var mainBinding = 0;\n    pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n        if (type === 'select') {\n            icuType = 0 /* select */;\n        }\n        else {\n            icuType = 1 /* plural */;\n        }\n        mainBinding = parseInt(binding.substr(1), 10);\n        return '';\n    });\n    var parts = extractParts(pattern);\n    // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n    for (var pos = 0; pos < parts.length;) {\n        var key = parts[pos++].trim();\n        if (icuType === 1 /* plural */) {\n            // Key can be \"=x\", we just want \"x\"\n            key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n        }\n        if (key.length) {\n            cases.push(key);\n        }\n        var blocks = extractParts(parts[pos++]);\n        if (blocks.length) {\n            values.push(blocks);\n        }\n    }\n    assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n    // TODO(ocombe): support ICU expressions in attributes, see #21615\n    return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n}\n/**\n * Removes everything inside the sub-templates of a message.\n */\nfunction removeInnerTemplateTranslation(message) {\n    var match;\n    var res = '';\n    var index = 0;\n    var inTemplate = false;\n    var tagMatched;\n    while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n        if (!inTemplate) {\n            res += message.substring(index, match.index + match[0].length);\n            tagMatched = match[1];\n            inTemplate = true;\n        }\n        else {\n            if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                index = match.index;\n                inTemplate = false;\n            }\n        }\n    }\n    ngDevMode &&\n        assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n    res += message.substr(index);\n    return res;\n}\n/**\n * Extracts a part of a message and removes the rest.\n *\n * This method is used for extracting a part of the message associated with a template. A translated\n * message can span multiple templates.\n *\n * Example:\n * ```\n * <div i18n>Translate <span *ngIf>me</span>!</div>\n * ```\n *\n * @param message The message to crop\n * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n * external template and removes all sub-templates.\n */\nfunction getTranslationForTemplate(message, subTemplateIndex) {\n    if (typeof subTemplateIndex !== 'number') {\n        // We want the root template message, ignore all sub-templates\n        return removeInnerTemplateTranslation(message);\n    }\n    else {\n        // We want a specific sub-template\n        var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n        var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n        return removeInnerTemplateTranslation(message.substring(start, end));\n    }\n}\n/**\n * Generate the OpCodes to update the bindings of a string.\n *\n * @param str The string containing the bindings.\n * @param destinationNode Index of the destination node which will receive the binding.\n * @param attrName Name of the attribute, if the string belongs to an attribute.\n * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n */\nfunction generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n    if (sanitizeFn === void 0) { sanitizeFn = null; }\n    var updateOpCodes = [null, null]; // Alloc space for mask and size\n    var textParts = str.split(BINDING_REGEXP);\n    var mask = 0;\n    for (var j = 0; j < textParts.length; j++) {\n        var textValue = textParts[j];\n        if (j & 1) {\n            // Odd indexes are bindings\n            var bindingIndex = parseInt(textValue, 10);\n            updateOpCodes.push(-1 - bindingIndex);\n            mask = mask | toMaskBit(bindingIndex);\n        }\n        else if (textValue !== '') {\n            // Even indexes are text\n            updateOpCodes.push(textValue);\n        }\n    }\n    updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n        (attrName ? 1 /* Attr */ : 0 /* Text */));\n    if (attrName) {\n        updateOpCodes.push(attrName, sanitizeFn);\n    }\n    updateOpCodes[0] = mask;\n    updateOpCodes[1] = updateOpCodes.length - 2;\n    return updateOpCodes;\n}\nfunction getBindingMask(icuExpression, mask) {\n    if (mask === void 0) { mask = 0; }\n    mask = mask | toMaskBit(icuExpression.mainBinding);\n    var match;\n    for (var i = 0; i < icuExpression.values.length; i++) {\n        var valueArr = icuExpression.values[i];\n        for (var j = 0; j < valueArr.length; j++) {\n            var value = valueArr[j];\n            if (typeof value === 'string') {\n                while (match = BINDING_REGEXP.exec(value)) {\n                    mask = mask | toMaskBit(parseInt(match[1], 10));\n                }\n            }\n            else {\n                mask = getBindingMask(value, mask);\n            }\n        }\n    }\n    return mask;\n}\nvar i18nIndexStack = [];\nvar i18nIndexStackPointer = -1;\n/**\n * Convert binding index to mask bit.\n *\n * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n * that we will execute binding code more often than necessary. (penalty of performance)\n */\nfunction toMaskBit(bindingIndex) {\n    return 1 << Math.min(bindingIndex, 31);\n}\nvar parentIndexStack = [];\n/**\n * Marks a block of text as translatable.\n *\n * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param index A unique index of the translation in the static block.\n * @param message The translation message.\n * @param subTemplateIndex Optional sub-template index in the `message`.\n */\nfunction i18nStart(index, message, subTemplateIndex) {\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertDefined(tView, \"tView should be defined\");\n    i18nIndexStack[++i18nIndexStackPointer] = index;\n    if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n        i18nStartFirstPass(tView, index, message, subTemplateIndex);\n    }\n}\n/**\n * See `i18nStart` above.\n */\nfunction i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n    var viewData = getLView();\n    var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n        previousOrParentTNode && previousOrParentTNode.parent;\n    var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n        parentTNode.index - HEADER_OFFSET :\n        index;\n    var parentIndexPointer = 0;\n    parentIndexStack[parentIndexPointer] = parentIndex;\n    var createOpCodes = [];\n    // If the previous node wasn't the direct parent then we have a translation without top level\n    // element and we need to keep a reference of the previous element if there is one\n    if (index > 0 && previousOrParentTNode !== parentTNode) {\n        // Create an OpCode to select the previous TNode\n        createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n    }\n    var updateOpCodes = [];\n    var icuExpressions = [];\n    var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n    var msgParts = templateTranslation.split(PH_REGEXP);\n    for (var i = 0; i < msgParts.length; i++) {\n        var value = msgParts[i];\n        if (i & 1) {\n            // Odd indexes are placeholders (elements and sub-templates)\n            if (value.charAt(0) === '/') {\n                // It is a closing tag\n                if (value.charAt(1) === '#') {\n                    var phIndex = parseInt(value.substr(2), 10);\n                    parentIndex = parentIndexStack[--parentIndexPointer];\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                }\n            }\n            else {\n                var phIndex = parseInt(value.substr(1), 10);\n                // The value represents a placeholder that we move to the designated index\n                createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                if (value.charAt(0) === '#') {\n                    parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                }\n            }\n        }\n        else {\n            // Even indexes are text (including bindings & ICU expressions)\n            var parts = value.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // Create the comment node that will anchor the ICU expression\n                    allocExpando(viewData);\n                    var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                    createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    // Update codes for the ICU expression\n                    var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                    var mask = getBindingMask(icuExpression);\n                    icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                    // Since this is recursive, the last TIcu that was pushed is the one we want\n                    var tIcuIndex = icuExpressions.length - 1;\n                    updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                    3, // skip 3 opCodes if not changed\n                    -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                    2, // skip 2 opCodes if not changed\n                    icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = value.match(BINDING_REGEXP);\n                    // Create text nodes\n                    allocExpando(viewData);\n                    createOpCodes.push(\n                    // If there is a binding, the value will be set during update\n                    hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                    }\n                }\n            }\n        }\n    }\n    // NOTE: local var needed to properly assert the type of `TI18n`.\n    var tI18n = {\n        vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n        expandoStartIndex: expandoStartIndex,\n        create: createOpCodes,\n        update: updateOpCodes,\n        icus: icuExpressions.length ? icuExpressions : null,\n    };\n    tView.data[index + HEADER_OFFSET] = tI18n;\n}\nfunction appendI18nNode(tNode, parentTNode, previousTNode) {\n    ngDevMode && ngDevMode.rendererMoveNode++;\n    var viewData = getLView();\n    if (!previousTNode) {\n        previousTNode = parentTNode;\n    }\n    // re-organize node tree to put this node in the correct position.\n    if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n        tNode.next = parentTNode.child;\n        parentTNode.child = tNode;\n    }\n    else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n        tNode.next = previousTNode.next;\n        previousTNode.next = tNode;\n    }\n    else {\n        tNode.next = null;\n    }\n    if (parentTNode !== viewData[HOST_NODE]) {\n        tNode.parent = parentTNode;\n    }\n    appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n    var slotValue = viewData[tNode.index];\n    if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n        // Nodes that inject ViewContainerRef also have a comment node that should be moved\n        appendChild(slotValue[NATIVE], tNode, viewData);\n    }\n    return tNode;\n}\n/**\n * Handles message string post-processing for internationalization.\n *\n * Handles message string post-processing by transforming it from intermediate\n * format (that might contain some markers that we need to replace) to the final\n * form, consumable by i18nStart instruction. Post processing steps include:\n *\n * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n *    in case multiple ICUs have the same placeholder name\n *\n * @param message Raw translation string for post processing\n * @param replacements Set of replacements that should be applied\n *\n * @returns Transformed string that can be consumed by i18nStart instruction\n *\n * @publicAPI\n */\nfunction i18nPostprocess(message, replacements) {\n    //\n    // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n    //\n    var matches = {};\n    var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n        if (!matches[content]) {\n            matches[content] = content.split('|');\n        }\n        if (!matches[content].length) {\n            throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n        }\n        return matches[content].shift();\n    });\n    // verify that we injected all values\n    var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n    if (hasUnmatchedValues) {\n        throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n    }\n    // return current result if no replacements specified\n    if (!Object.keys(replacements).length) {\n        return result;\n    }\n    //\n    // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n    //\n    result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n        return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n    });\n    //\n    // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n    // in case multiple ICUs have the same placeholder name\n    //\n    result = result.replace(PP_ICUS, function (match, key) {\n        if (replacements.hasOwnProperty(key)) {\n            var list = replacements[key];\n            if (!list.length) {\n                throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n            }\n            return list.shift();\n        }\n        return match;\n    });\n    return result;\n}\n/**\n * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n */\nfunction i18nEnd() {\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertDefined(tView, \"tView should be defined\");\n    i18nEndFirstPass(tView);\n}\n/**\n * See `i18nEnd` above.\n */\nfunction i18nEndFirstPass(tView) {\n    var viewData = getLView();\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n    var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n    var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n    ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n    // The last placeholder that was added before `i18nEnd`\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n    // Remove deleted placeholders\n    // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n    for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n        if (visitedPlaceholders.indexOf(i) === -1) {\n            removeNode(i, viewData);\n        }\n    }\n}\nfunction readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n    var renderer = getLView()[RENDERER];\n    var currentTNode = null;\n    var previousTNode = null;\n    var visitedPlaceholders = [];\n    for (var i = 0; i < createOpCodes.length; i++) {\n        var opCode = createOpCodes[i];\n        if (typeof opCode == 'string') {\n            var textRNode = createTextNode(opCode, renderer);\n            ngDevMode && ngDevMode.rendererCreateTextNode++;\n            previousTNode = currentTNode;\n            currentTNode =\n                createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n            setIsParent(false);\n        }\n        else if (typeof opCode == 'number') {\n            switch (opCode & 7 /* MASK_OPCODE */) {\n                case 1 /* AppendChild */:\n                    var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                    var destinationTNode = void 0;\n                    if (destinationNodeIndex === index) {\n                        // If the destination node is `i18nStart`, we don't have a\n                        // top-level node and we should use the host node instead\n                        destinationTNode = viewData[HOST_NODE];\n                    }\n                    else {\n                        destinationTNode = getTNode(destinationNodeIndex, viewData);\n                    }\n                    ngDevMode &&\n                        assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                    previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                    destinationTNode.next = null;\n                    break;\n                case 0 /* Select */:\n                    var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                    visitedPlaceholders.push(nodeIndex);\n                    previousTNode = currentTNode;\n                    currentTNode = getTNode(nodeIndex, viewData);\n                    if (currentTNode) {\n                        setPreviousOrParentTNode(currentTNode);\n                        if (currentTNode.type === 3 /* Element */) {\n                            setIsParent(true);\n                        }\n                    }\n                    break;\n                case 5 /* ElementEnd */:\n                    var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                    previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                    setPreviousOrParentTNode(currentTNode);\n                    setIsParent(false);\n                    break;\n                case 4 /* Attr */:\n                    var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                    var attrName = createOpCodes[++i];\n                    var attrValue = createOpCodes[++i];\n                    elementAttribute(elementNodeIndex, attrName, attrValue);\n                    break;\n                default:\n                    throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n            }\n        }\n        else {\n            switch (opCode) {\n                case COMMENT_MARKER:\n                    var commentValue = createOpCodes[++i];\n                    ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                    var commentRNode = renderer.createComment(commentValue);\n                    ngDevMode && ngDevMode.rendererCreateComment++;\n                    previousTNode = currentTNode;\n                    currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                    attachPatchData(commentRNode, viewData);\n                    currentTNode.activeCaseIndex = null;\n                    // We will add the case nodes later, during the update phase\n                    setIsParent(false);\n                    break;\n                case ELEMENT_MARKER:\n                    var tagNameValue = createOpCodes[++i];\n                    ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                    var elementRNode = renderer.createElement(tagNameValue);\n                    ngDevMode && ngDevMode.rendererCreateElement++;\n                    previousTNode = currentTNode;\n                    currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                    break;\n                default:\n                    throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n            }\n        }\n    }\n    setIsParent(false);\n    return visitedPlaceholders;\n}\nfunction readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n    if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n    var caseCreated = false;\n    for (var i = 0; i < updateOpCodes.length; i++) {\n        // bit code to check if we should apply the next update\n        var checkBit = updateOpCodes[i];\n        // Number of opCodes to skip until next set of update codes\n        var skipCodes = updateOpCodes[++i];\n        if (bypassCheckBit || (checkBit & changeMask)) {\n            // The value has been updated since last checked\n            var value = '';\n            for (var j = i + 1; j <= (i + skipCodes); j++) {\n                var opCode = updateOpCodes[j];\n                if (typeof opCode == 'string') {\n                    value += opCode;\n                }\n                else if (typeof opCode == 'number') {\n                    if (opCode < 0) {\n                        // It's a binding index whose value is negative\n                        value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                    }\n                    else {\n                        var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                        switch (opCode & 3 /* MASK_OPCODE */) {\n                            case 1 /* Attr */:\n                                var attrName = updateOpCodes[++j];\n                                var sanitizeFn = updateOpCodes[++j];\n                                elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                break;\n                            case 0 /* Text */:\n                                textBinding(nodeIndex, value);\n                                break;\n                            case 2 /* IcuSwitch */:\n                                var tIcuIndex = updateOpCodes[++j];\n                                var tIcu = icus[tIcuIndex];\n                                var icuTNode = getTNode(nodeIndex, viewData);\n                                // If there is an active case, delete the old nodes\n                                if (icuTNode.activeCaseIndex !== null) {\n                                    var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                    for (var k = 0; k < removeCodes.length; k++) {\n                                        var removeOpCode = removeCodes[k];\n                                        switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                            case 3 /* Remove */:\n                                                var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                removeNode(nodeIndex_1, viewData);\n                                                break;\n                                            case 6 /* RemoveNestedIcu */:\n                                                var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                if (activeIndex !== null) {\n                                                    var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    var nestedTIcu = icus[nestedIcuTIndex];\n                                                    addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                }\n                                                break;\n                                        }\n                                    }\n                                }\n                                // Update the active caseIndex\n                                var caseIndex = getCaseIndex(tIcu, value);\n                                icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                // Add the nodes for the new case\n                                readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                caseCreated = true;\n                                break;\n                            case 3 /* IcuUpdate */:\n                                tIcuIndex = updateOpCodes[++j];\n                                tIcu = icus[tIcuIndex];\n                                icuTNode = getTNode(nodeIndex, viewData);\n                                readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        i += skipCodes;\n    }\n}\nfunction removeNode(index, viewData) {\n    var removedPhTNode = getTNode(index, viewData);\n    var removedPhRNode = getNativeByIndex(index, viewData);\n    removeChild(removedPhTNode, removedPhRNode || null, viewData);\n    removedPhTNode.detached = true;\n    ngDevMode && ngDevMode.rendererRemoveNode++;\n    var slotValue = load(index);\n    if (isLContainer(slotValue)) {\n        var lContainer = slotValue;\n        if (removedPhTNode.type !== 0 /* Container */) {\n            removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n        }\n        lContainer[RENDER_PARENT] = null;\n    }\n}\n/**\n *\n * Use this instruction to create a translation block that doesn't contain any placeholder.\n * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n *\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param index A unique index of the translation in the static block.\n * @param message The translation message.\n * @param subTemplateIndex Optional sub-template index in the `message`.\n */\nfunction i18n(index, message, subTemplateIndex) {\n    i18nStart(index, message, subTemplateIndex);\n    i18nEnd();\n}\n/**\n * Marks a list of attributes as translatable.\n *\n * @param index A unique index in the static block\n * @param values\n */\nfunction i18nAttributes(index, values) {\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertDefined(tView, \"tView should be defined\");\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n    if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n        i18nAttributesFirstPass(tView, index, values);\n    }\n}\n/**\n * See `i18nAttributes` above.\n */\nfunction i18nAttributesFirstPass(tView, index, values) {\n    var previousElement = getPreviousOrParentTNode();\n    var previousElementIndex = previousElement.index - HEADER_OFFSET;\n    var updateOpCodes = [];\n    for (var i = 0; i < values.length; i += 2) {\n        var attrName = values[i];\n        var message = values[i + 1];\n        var parts = message.split(ICU_REGEXP);\n        for (var j = 0; j < parts.length; j++) {\n            var value = parts[j];\n            if (j & 1) ;\n            else if (value !== '') {\n                // Even indexes are text (including bindings)\n                var hasBinding = !!value.match(BINDING_REGEXP);\n                if (hasBinding) {\n                    addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                }\n                else {\n                    elementAttribute(previousElementIndex, attrName, value);\n                }\n            }\n        }\n    }\n    tView.data[index + HEADER_OFFSET] = updateOpCodes;\n}\nvar changeMask = 0;\nvar shiftsCounter = 0;\n/**\n * Stores the values of the bindings during each update cycle in order to determine if we need to\n * update the translated nodes.\n *\n * @param expression The binding's new value or NO_CHANGE\n */\nfunction i18nExp(expression) {\n    if (expression !== NO_CHANGE) {\n        changeMask = changeMask | (1 << shiftsCounter);\n    }\n    shiftsCounter++;\n}\n/**\n * Updates a translation block or an i18n attribute when the bindings have changed.\n *\n * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n * (i18n attribute) on which it should update the content.\n */\nfunction i18nApply(index) {\n    if (shiftsCounter) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        var tI18n = tView.data[index + HEADER_OFFSET];\n        var updateOpCodes = void 0;\n        var icus = null;\n        if (Array.isArray(tI18n)) {\n            updateOpCodes = tI18n;\n        }\n        else {\n            updateOpCodes = tI18n.update;\n            icus = tI18n.icus;\n        }\n        var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n        readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n        // Reset changeMask & maskBit to default for the next update cycle\n        changeMask = 0;\n        shiftsCounter = 0;\n    }\n}\nvar Plural;\n(function (Plural) {\n    Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n    Plural[Plural[\"One\"] = 1] = \"One\";\n    Plural[Plural[\"Two\"] = 2] = \"Two\";\n    Plural[Plural[\"Few\"] = 3] = \"Few\";\n    Plural[Plural[\"Many\"] = 4] = \"Many\";\n    Plural[Plural[\"Other\"] = 5] = \"Other\";\n})(Plural || (Plural = {}));\n/**\n * Returns the plural case based on the locale.\n * This is a copy of the deprecated function that we used in Angular v4.\n * // TODO(ocombe): remove this once we can the real getPluralCase function\n *\n * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n */\nfunction getPluralCase(locale, nLike) {\n    if (typeof nLike === 'string') {\n        nLike = parseInt(nLike, 10);\n    }\n    var n = nLike;\n    var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n    var i = Math.floor(Math.abs(n));\n    var v = nDecimal.length;\n    var f = parseInt(nDecimal, 10);\n    var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n    var lang = locale.split('-')[0].toLowerCase();\n    switch (lang) {\n        case 'af':\n        case 'asa':\n        case 'az':\n        case 'bem':\n        case 'bez':\n        case 'bg':\n        case 'brx':\n        case 'ce':\n        case 'cgg':\n        case 'chr':\n        case 'ckb':\n        case 'ee':\n        case 'el':\n        case 'eo':\n        case 'es':\n        case 'eu':\n        case 'fo':\n        case 'fur':\n        case 'gsw':\n        case 'ha':\n        case 'haw':\n        case 'hu':\n        case 'jgo':\n        case 'jmc':\n        case 'ka':\n        case 'kk':\n        case 'kkj':\n        case 'kl':\n        case 'ks':\n        case 'ksb':\n        case 'ky':\n        case 'lb':\n        case 'lg':\n        case 'mas':\n        case 'mgo':\n        case 'ml':\n        case 'mn':\n        case 'nb':\n        case 'nd':\n        case 'ne':\n        case 'nn':\n        case 'nnh':\n        case 'nyn':\n        case 'om':\n        case 'or':\n        case 'os':\n        case 'ps':\n        case 'rm':\n        case 'rof':\n        case 'rwk':\n        case 'saq':\n        case 'seh':\n        case 'sn':\n        case 'so':\n        case 'sq':\n        case 'ta':\n        case 'te':\n        case 'teo':\n        case 'tk':\n        case 'tr':\n        case 'ug':\n        case 'uz':\n        case 'vo':\n        case 'vun':\n        case 'wae':\n        case 'xog':\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ak':\n        case 'ln':\n        case 'mg':\n        case 'pa':\n        case 'ti':\n            if (n === Math.floor(n) && n >= 0 && n <= 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'am':\n        case 'as':\n        case 'bn':\n        case 'fa':\n        case 'gu':\n        case 'hi':\n        case 'kn':\n        case 'mr':\n        case 'zu':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ar':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                return Plural.Many;\n            return Plural.Other;\n        case 'ast':\n        case 'ca':\n        case 'de':\n        case 'en':\n        case 'et':\n        case 'fi':\n        case 'fy':\n        case 'gl':\n        case 'it':\n        case 'nl':\n        case 'sv':\n        case 'sw':\n        case 'ur':\n        case 'yi':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            return Plural.Other;\n        case 'be':\n            if (n % 10 === 1 && !(n % 100 === 11))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                !(n % 100 >= 12 && n % 100 <= 14))\n                return Plural.Few;\n            if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'br':\n            if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                return Plural.One;\n            if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                return Plural.Two;\n            if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                    n % 100 >= 90 && n % 100 <= 99))\n                return Plural.Few;\n            if (!(n === 0) && n % 1e6 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'bs':\n        case 'hr':\n        case 'sr':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14) ||\n                f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                    !(f % 100 >= 12 && f % 100 <= 14))\n                return Plural.Few;\n            return Plural.Other;\n        case 'cs':\n        case 'sk':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'cy':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === 3)\n                return Plural.Few;\n            if (n === 6)\n                return Plural.Many;\n            return Plural.Other;\n        case 'da':\n            if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                return Plural.One;\n            return Plural.Other;\n        case 'dsb':\n        case 'hsb':\n            if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ff':\n        case 'fr':\n        case 'hy':\n        case 'kab':\n            if (i === 0 || i === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'fil':\n            if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                return Plural.One;\n            return Plural.Other;\n        case 'ga':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === Math.floor(n) && n >= 3 && n <= 6)\n                return Plural.Few;\n            if (n === Math.floor(n) && n >= 7 && n <= 10)\n                return Plural.Many;\n            return Plural.Other;\n        case 'gd':\n            if (n === 1 || n === 11)\n                return Plural.One;\n            if (n === 2 || n === 12)\n                return Plural.Two;\n            if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                return Plural.Few;\n            return Plural.Other;\n        case 'gv':\n            if (v === 0 && i % 10 === 1)\n                return Plural.One;\n            if (v === 0 && i % 10 === 2)\n                return Plural.Two;\n            if (v === 0 &&\n                (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'he':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === 2 && v === 0)\n                return Plural.Two;\n            if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'is':\n            if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'ksh':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'kw':\n        case 'naq':\n        case 'se':\n        case 'smn':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            return Plural.Other;\n        case 'lag':\n            if (n === 0)\n                return Plural.Zero;\n            if ((i === 0 || i === 1) && !(n === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'lt':\n            if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.Few;\n            if (!(f === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'lv':\n        case 'prg':\n            if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                return Plural.Zero;\n            if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                !(v === 2) && f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mk':\n            if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mt':\n            if (n === 1)\n                return Plural.One;\n            if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pl':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pt':\n            if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                return Plural.One;\n            return Plural.Other;\n        case 'ro':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (!(v === 0) || n === 0 ||\n                !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ru':\n        case 'uk':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && i % 10 === 0 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'shi':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            if (n === Math.floor(n) && n >= 2 && n <= 10)\n                return Plural.Few;\n            return Plural.Other;\n        case 'si':\n            if (n === 0 || n === 1 || i === 0 && f === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'sl':\n            if (v === 0 && i % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                return Plural.Few;\n            return Plural.Other;\n        case 'tzm':\n            if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                return Plural.One;\n            return Plural.Other;\n        // When there is no specification, the default is always \"other\"\n        // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n        // > other (required—general plural form — also used if the language only has a single form)\n        default:\n            return Plural.Other;\n    }\n}\nfunction getPluralCategory(value, locale) {\n    var plural = getPluralCase(locale, value);\n    switch (plural) {\n        case Plural.Zero:\n            return 'zero';\n        case Plural.One:\n            return 'one';\n        case Plural.Two:\n            return 'two';\n        case Plural.Few:\n            return 'few';\n        case Plural.Many:\n            return 'many';\n        default:\n            return 'other';\n    }\n}\n/**\n * Returns the index of the current case of an ICU expression depending on the main binding value\n *\n * @param icuExpression\n * @param bindingValue The value of the main binding used by this ICU expression\n */\nfunction getCaseIndex(icuExpression, bindingValue) {\n    var index = icuExpression.cases.indexOf(bindingValue);\n    if (index === -1) {\n        switch (icuExpression.type) {\n            case 1 /* plural */: {\n                // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                var locale = 'en-US';\n                var resolvedCase = getPluralCategory(bindingValue, locale);\n                index = icuExpression.cases.indexOf(resolvedCase);\n                if (index === -1 && resolvedCase !== 'other') {\n                    index = icuExpression.cases.indexOf('other');\n                }\n                break;\n            }\n            case 0 /* select */: {\n                index = icuExpression.cases.indexOf('other');\n                break;\n            }\n        }\n    }\n    return index;\n}\n/**\n * Generate the OpCodes for ICU expressions.\n *\n * @param tIcus\n * @param icuExpression\n * @param startIndex\n * @param expandoStartIndex\n */\nfunction icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n    var createCodes = [];\n    var removeCodes = [];\n    var updateCodes = [];\n    var vars = [];\n    var childIcus = [];\n    for (var i = 0; i < icuExpression.values.length; i++) {\n        // Each value is an array of strings & other ICU expressions\n        var valueArr = icuExpression.values[i];\n        var nestedIcus = [];\n        for (var j = 0; j < valueArr.length; j++) {\n            var value = valueArr[j];\n            if (typeof value !== 'string') {\n                // It is an nested ICU expression\n                var icuIndex = nestedIcus.push(value) - 1;\n                // Replace nested ICU expression by a comment node\n                valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n            }\n        }\n        var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n        createCodes.push(icuCase.create);\n        removeCodes.push(icuCase.remove);\n        updateCodes.push(icuCase.update);\n        vars.push(icuCase.vars);\n        childIcus.push(icuCase.childIcus);\n    }\n    var tIcu = {\n        type: icuExpression.type,\n        vars: vars,\n        expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n        cases: icuExpression.cases,\n        create: createCodes,\n        remove: removeCodes,\n        update: updateCodes\n    };\n    tIcus.push(tIcu);\n    var lView = getLView();\n    var worstCaseSize = Math.max.apply(Math, __spread(vars));\n    for (var i = 0; i < worstCaseSize; i++) {\n        allocExpando(lView);\n    }\n}\n/**\n * Transforms a string template into an HTML template and a list of instructions used to update\n * attributes or nodes that contain bindings.\n *\n * @param unsafeHtml The string to parse\n * @param parentIndex\n * @param nestedIcus\n * @param tIcus\n * @param expandoStartIndex\n */\nfunction parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n    var inertBodyHelper = new InertBodyHelper(document);\n    var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n    if (!inertBodyElement) {\n        throw new Error('Unable to generate inert body element');\n    }\n    var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n    var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n    parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n    return opCodes;\n}\nvar NESTED_ICU = /�(\\d+)�/;\n/**\n * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n *\n * @param currentNode The first node to parse\n * @param icuCase The data for the ICU expression case that contains those nodes\n * @param parentIndex Index of the current node's parent\n * @param nestedIcus Data for the nested ICU expressions that this case contains\n * @param tIcus Data for all ICU expressions of the current message\n * @param expandoStartIndex Expando start index for the current ICU expression\n */\nfunction parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n    if (currentNode) {\n        var nestedIcusToCreate = [];\n        while (currentNode) {\n            var nextNode = currentNode.nextSibling;\n            var newIndex = expandoStartIndex + ++icuCase.vars;\n            switch (currentNode.nodeType) {\n                case Node.ELEMENT_NODE:\n                    var element$$1 = currentNode;\n                    var tagName = element$$1.tagName.toLowerCase();\n                    if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                        // This isn't a valid element, we won't create an element for it\n                        icuCase.vars--;\n                    }\n                    else {\n                        icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        var elAttrs = element$$1.attributes;\n                        for (var i = 0; i < elAttrs.length; i++) {\n                            var attr = elAttrs.item(i);\n                            var lowerAttrName = attr.name.toLowerCase();\n                            var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                            // we assume the input string is safe, unless it's using a binding\n                            if (hasBinding_1) {\n                                if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                    if (URI_ATTRS[lowerAttrName]) {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                    }\n                                    else if (SRCSET_ATTRS[lowerAttrName]) {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                    }\n                                    else {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                    }\n                                }\n                                else {\n                                    ngDevMode &&\n                                        console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                }\n                            }\n                            else {\n                                icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                            }\n                        }\n                        // Parse the children of this node (if any)\n                        parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                        // Remove the parent node after the children\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                    }\n                    break;\n                case Node.TEXT_NODE:\n                    var value = currentNode.textContent || '';\n                    var hasBinding = value.match(BINDING_REGEXP);\n                    icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                    }\n                    break;\n                case Node.COMMENT_NODE:\n                    // Check if the comment node is a placeholder for a nested ICU\n                    var match = NESTED_ICU.exec(currentNode.textContent || '');\n                    if (match) {\n                        var nestedIcuIndex = parseInt(match[1], 10);\n                        var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                        // Create the comment node that will anchor the ICU expression\n                        icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        var nestedIcu = nestedIcus[nestedIcuIndex];\n                        nestedIcusToCreate.push([nestedIcu, newIndex]);\n                    }\n                    else {\n                        // We do not handle any other type of comment\n                        icuCase.vars--;\n                    }\n                    break;\n                default:\n                    // We do not handle any other type of element\n                    icuCase.vars--;\n            }\n            currentNode = nextNode;\n        }\n        for (var i = 0; i < nestedIcusToCreate.length; i++) {\n            var nestedIcu = nestedIcusToCreate[i][0];\n            var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n            icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n            // Since this is recursive, the last TIcu that was pushed is the one we want\n            var nestTIcuIndex = tIcus.length - 1;\n            icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n            icuCase.childIcus.push(nestTIcuIndex);\n            var mask = getBindingMask(nestedIcu);\n            icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n            3, // skip 3 opCodes if not changed\n            -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n            2, // skip 2 opCodes if not changed\n            nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n            icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_FACTORY_RESOLVER = {\n    provide: ComponentFactoryResolver,\n    useClass: ComponentFactoryResolver$1,\n    deps: [NgModuleRef],\n};\nvar NgModuleRef$1 = /** @class */ (function (_super) {\n    __extends(NgModuleRef$$1, _super);\n    function NgModuleRef$$1(ngModuleType, _parent) {\n        var _this = _super.call(this) || this;\n        _this._parent = _parent;\n        // tslint:disable-next-line:require-internal-with-underscore\n        _this._bootstrapComponents = [];\n        _this.injector = _this;\n        _this.destroyCbs = [];\n        var ngModuleDef = getNgModuleDef(ngModuleType);\n        ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n        _this._bootstrapComponents = ngModuleDef.bootstrap;\n        var additionalProviders = [\n            {\n                provide: NgModuleRef,\n                useValue: _this,\n            },\n            COMPONENT_FACTORY_RESOLVER\n        ];\n        _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n        _this.instance = _this.get(ngModuleType);\n        return _this;\n    }\n    NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = InjectFlags.Default; }\n        if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {\n            return this;\n        }\n        return this._r3Injector.get(token, notFoundValue, injectFlags);\n    };\n    Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n        get: function () {\n            return this.get(ComponentFactoryResolver);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    NgModuleRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return NgModuleRef$$1;\n}(NgModuleRef));\nvar NgModuleFactory$1 = /** @class */ (function (_super) {\n    __extends(NgModuleFactory$$1, _super);\n    function NgModuleFactory$$1(moduleType) {\n        var _this = _super.call(this) || this;\n        _this.moduleType = moduleType;\n        return _this;\n    }\n    NgModuleFactory$$1.prototype.create = function (parentInjector) {\n        return new NgModuleRef$1(this.moduleType, parentInjector);\n    };\n    return NgModuleFactory$$1;\n}(NgModuleFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n * on the type.\n *\n * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n *\n * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n * tree-shaken away during production builds.\n */\nfunction setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n    var _a;\n    var clazz = type;\n    if (decorators !== null) {\n        if (clazz.decorators !== undefined) {\n            (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n        }\n        else {\n            clazz.decorators = decorators;\n        }\n    }\n    if (ctorParameters !== null) {\n        // Rather than merging, clobber the existing parameters. If other projects exist which use\n        // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n        // but that is vanishingly unlikely.\n        clazz.ctorParameters = ctorParameters;\n    }\n    if (propDecorators !== null) {\n        // The property decorator objects are merged as it is possible different fields have different\n        // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n        // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n        // decorator that's also been downleveled.\n        if (clazz.propDecorators !== undefined) {\n            clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n        }\n        else {\n            clazz.propDecorators = propDecorators;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Bindings for pure functions are stored after regular bindings.\n *\n * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n * ------------------------------------------------------------------------------------------\n * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n * ------------------------------------------------------------------------------------------\n *                    ^                      ^\n *      TView.bindingStartIndex      TView.expandoStartIndex\n *\n * Pure function instructions are given an offset from the binding root. Adding the offset to the\n * binding root gives the first index where the bindings are stored. In component views, the binding\n * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n * any directive instances + any hostVars in directives evaluated before it.\n *\n * See VIEW_DATA.md for more information about host binding resolution.\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns a value\n * @param thisArg Optional calling context of pureFn\n * @returns value\n */\nfunction pureFunction0(slotOffset, pureFn, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    return isCreationMode() ?\n        updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n        getBinding(lView, bindingIndex);\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction1(slotOffset, pureFn, exp, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var lView = getLView();\n    var bindingIndex = getBindingRoot() + slotOffset;\n    return bindingUpdated(lView, bindingIndex, exp) ?\n        updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        getBinding(lView, bindingIndex + 1);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n        updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        getBinding(lView, bindingIndex + 2);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n        updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        getBinding(lView, bindingIndex + 3);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n        updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        getBinding(lView, bindingIndex + 4);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n        updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        getBinding(lView, bindingIndex + 5);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n        updateBinding(lView, bindingIndex + 6, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        getBinding(lView, bindingIndex + 6);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n        updateBinding(lView, bindingIndex + 7, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        getBinding(lView, bindingIndex + 7);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n        updateBinding(lView, bindingIndex + 8, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        getBinding(lView, bindingIndex + 8);\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var different = false;\n    var lView = getLView();\n    for (var i = 0; i < exps.length; i++) {\n        bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n    }\n    return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n        getBinding(lView, bindingIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n */\nfunction pipe(index, pipeName) {\n    var tView = getLView()[TVIEW];\n    var pipeDef;\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n        tView.data[adjustedIndex] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = tView.data[adjustedIndex];\n    }\n    var pipeInstance = pipeDef.factory(null);\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef$1(name, registry) {\n    if (registry) {\n        for (var i = registry.length - 1; i >= 0; i--) {\n            var pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind1(index, slotOffset, v1) {\n    var pipeInstance = load(index);\n    return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1));\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind2(index, slotOffset, v1, v2) {\n    var pipeInstance = load(index);\n    return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2));\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind3(index, slotOffset, v1, v2, v3) {\n    var pipeInstance = load(index);\n    return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3));\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    var pipeInstance = load(index);\n    return unwrapValue(isPure(index) ?\n        pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4));\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n */\nfunction pipeBindV(index, slotOffset, values) {\n    var pipeInstance = load(index);\n    return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values));\n}\nfunction isPure(index) {\n    return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n}\n/**\n * Unwrap the output of a pipe transformation.\n * In order to trick change detection into considering that the new value is always different from\n * the old one, the old value is overwritten by NO_CHANGE.\n *\n * @param newValue the pipe transformation output.\n */\nfunction unwrapValue(newValue) {\n    if (WrappedValue.isWrapped(newValue)) {\n        newValue = WrappedValue.unwrap(newValue);\n        getLView()[getBindingRoot()] = NO_CHANGE;\n    }\n    return newValue;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * @usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * @publicApi\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of this class that can\n     * deliver events synchronously or asynchronously.\n     *\n     * @param isAsync When true, deliver events asynchronously.\n     *\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * Emits an event containing a given value.\n     * @param value The value to emit.\n     */\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * Registers handlers for events emitted by this instance.\n     * @param generatorOrNext When supplied, a custom handler for emitted events.\n     * @param error When supplied, a custom handler for an error notification\n     * from this emitter.\n     * @param complete When supplied, a custom handler for a completion\n     * notification from this emitter.\n     */\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(Subject));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an embedded template that can be used to instantiate embedded views.\n * To instantiate embedded views based on a template, use the `ViewContainerRef`\n * method `createEmbeddedView()`.\n *\n * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n * is injected into the constructor of the directive,\n * using the `TemplateRef` token.\n *\n * You can also use a `Query` to find a `TemplateRef` associated with\n * a component or a directive.\n *\n * @see `ViewContainerRef`\n * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n *\n * @publicApi\n */\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    /** @internal */\n    TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n    return TemplateRef;\n}());\nvar SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\nvar SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\nvar SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(parent, shallow, deep) {\n        this.parent = parent;\n        this.shallow = shallow;\n        this.deep = deep;\n    }\n    LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n        if (descend) {\n            this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n    LQueries_.prototype.container = function () {\n        var shallowResults = copyQueriesToContainer(this.shallow);\n        var deepResults = copyQueriesToContainer(this.deep);\n        return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n    };\n    LQueries_.prototype.createView = function () {\n        var shallowResults = copyQueriesToView(this.shallow);\n        var deepResults = copyQueriesToView(this.deep);\n        return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n    };\n    LQueries_.prototype.insertView = function (index) {\n        insertView$1(index, this.shallow);\n        insertView$1(index, this.deep);\n    };\n    LQueries_.prototype.addNode = function (tNode) {\n        add(this.deep, tNode);\n        if (isContentQueryHost(tNode)) {\n            add(this.shallow, tNode);\n            if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                // if node has a content query and parent also has a content query\n                // both queries need to check this node for shallow matches\n                add(this.parent.shallow, tNode);\n            }\n            return this.parent;\n        }\n        isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n        return this;\n    };\n    LQueries_.prototype.removeView = function () {\n        removeView$1(this.shallow);\n        removeView$1(this.deep);\n    };\n    return LQueries_;\n}());\nfunction isRootNodeOfQuery(tNode) {\n    return tNode.parent === null || isContentQueryHost(tNode.parent);\n}\nfunction copyQueriesToContainer(query) {\n    var result = null;\n    while (query) {\n        var containerValues = []; // prepare room for views\n        query.values.push(containerValues);\n        var clonedQuery = {\n            next: result,\n            list: query.list,\n            predicate: query.predicate,\n            values: containerValues,\n            containerValues: null\n        };\n        result = clonedQuery;\n        query = query.next;\n    }\n    return result;\n}\nfunction copyQueriesToView(query) {\n    var result = null;\n    while (query) {\n        var clonedQuery = {\n            next: result,\n            list: query.list,\n            predicate: query.predicate,\n            values: [],\n            containerValues: query.values\n        };\n        result = clonedQuery;\n        query = query.next;\n    }\n    return result;\n}\nfunction insertView$1(index, query) {\n    while (query) {\n        ngDevMode &&\n            assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n        query.containerValues.splice(index, 0, query.values);\n        query = query.next;\n    }\n}\nfunction removeView$1(query) {\n    while (query) {\n        ngDevMode &&\n            assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n        var containerValues = query.containerValues;\n        var viewValuesIdx = containerValues.indexOf(query.values);\n        var removed = containerValues.splice(viewValuesIdx, 1);\n        // mark a query as dirty only when removed view had matching modes\n        ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n        if (removed[0].length) {\n            query.list.setDirty();\n        }\n        query = query.next;\n    }\n}\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    var localNames = tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return localNames[i + 1];\n            }\n        }\n    }\n    return null;\n}\n// TODO: \"read\" should be an AbstractType (FW-486)\nfunction queryByReadToken(read, tNode, currentView) {\n    var factoryFn = read[NG_ELEMENT_ID];\n    if (typeof factoryFn === 'function') {\n        return factoryFn();\n    }\n    else {\n        var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n        if (matchingIdx !== null) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n    }\n    return null;\n}\nfunction queryByTNodeType(tNode, currentView) {\n    if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n        return createElementRef(ElementRef, tNode, currentView);\n    }\n    if (tNode.type === 0 /* Container */) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    return null;\n}\nfunction queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n    var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n    if (read) {\n        return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n    }\n    return templateRefResult;\n}\nfunction queryRead(tNode, currentView, read, matchingIdx) {\n    if (read) {\n        return queryByReadToken(read, tNode, currentView);\n    }\n    if (matchingIdx > -1) {\n        return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n    }\n    // if read token and / or strategy is not specified,\n    // detect it using appropriate tNode type\n    return queryByTNodeType(tNode, currentView);\n}\nfunction add(query, tNode) {\n    var currentView = getLView();\n    while (query) {\n        var predicate = query.predicate;\n        var type = predicate.type;\n        if (type) {\n            var result = null;\n            if (type === TemplateRef) {\n                result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n            }\n            else {\n                var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                if (matchingIdx !== null) {\n                    result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                }\n            }\n            if (result !== null) {\n                addMatch(query, result);\n            }\n        }\n        else {\n            var selector = predicate.selector;\n            for (var i = 0; i < selector.length; i++) {\n                var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                if (matchingIdx !== null) {\n                    var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\nfunction createPredicate(predicate, read) {\n    var isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : predicate,\n        selector: isArray ? predicate : null,\n        read: read\n    };\n}\nfunction createQuery(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: queryList._valuesTree,\n        containerValues: null\n    };\n}\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /** @internal */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList_.prototype.filter = function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList_.prototype.find = function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList_.prototype.reduce = function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList_.prototype.some = function (fn) {\n        return this._values.some(fn);\n    };\n    QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n    QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n    QueryList_.prototype.toString = function () { return this._values.toString(); };\n    QueryList_.prototype.reset = function (res) {\n        this._values = flatten(res);\n        this.dirty = false;\n    };\n    QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    QueryList_.prototype.setDirty = function () { this.dirty = true; };\n    QueryList_.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList_;\n}());\nvar QueryList = QueryList_;\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, \n// TODO: \"read\" should be an AbstractType (FW-486)\nread) {\n    ngDevMode && assertPreviousIsParent(getIsParent());\n    var queryList = new QueryList();\n    var queries = getOrCreateCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nfunction queryRefresh(queryList) {\n    var queryListImpl = queryList;\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n * `<ng-template>` element.\n */\nfunction templateRefExtractor(tNode, currentView) {\n    return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BRAND = '__SANITIZER_TRUSTED_BRAND__';\nfunction allowSanitizationBypass(value, type) {\n    return (value instanceof String && value[BRAND] === type);\n}\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n}\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    var trusted = new String(trustedString);\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value) {\n    var outsideSingle = true;\n    var outsideDouble = true;\n    for (var i = 0; i < value.length; i++) {\n        var c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nfunction sanitizeHtml(unsafeHtml) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify$1(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nfunction sanitizeStyle(unsafeStyle) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify$1(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nfunction sanitizeUrl(unsafeUrl) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify$1(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nfunction sanitizeResourceUrl(unsafeResourceUrl) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link\n * bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts` have been allowed to pass.\n */\nfunction sanitizeScript(unsafeScript) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.SCRIPT, unsafeScript) || '';\n    }\n    if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n        return unsafeScript.toString();\n    }\n    throw new Error('unsafe value used in a script context');\n}\n/**\n * The default style sanitizer will handle sanitization for style properties by\n * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n */\nvar defaultStyleSanitizer = function (prop, value) {\n    if (value === undefined) {\n        return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n            prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n            prop === 'list-style-image';\n    }\n    return sanitizeStyle(value);\n};\nfunction getSanitizer() {\n    var lView = getLView();\n    return lView && lView[SANITIZER];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nvar angularCoreEnv = {\n    'ɵdefineBase': defineBase,\n    'ɵdefineComponent': defineComponent,\n    'ɵdefineDirective': defineDirective,\n    'defineInjectable': defineInjectable,\n    'defineInjector': defineInjector,\n    'ɵdefineNgModule': defineNgModule,\n    'ɵdefinePipe': definePipe,\n    'ɵdirectiveInject': directiveInject,\n    'ɵgetFactoryOf': getFactoryOf,\n    'ɵgetInheritedFactory': getInheritedFactory,\n    'inject': inject,\n    'ɵinjectAttribute': injectAttribute,\n    'ɵtemplateRefExtractor': templateRefExtractor,\n    'ɵNgOnChangesFeature': NgOnChangesFeature,\n    'ɵProvidersFeature': ProvidersFeature,\n    'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n    'ɵelementAttribute': elementAttribute,\n    'ɵbind': bind,\n    'ɵcontainer': container,\n    'ɵnextContext': nextContext,\n    'ɵcontainerRefreshStart': containerRefreshStart,\n    'ɵcontainerRefreshEnd': containerRefreshEnd,\n    'ɵloadQueryList': loadQueryList,\n    'ɵnamespaceHTML': namespaceHTML,\n    'ɵnamespaceMathML': namespaceMathML,\n    'ɵnamespaceSVG': namespaceSVG,\n    'ɵenableBindings': enableBindings,\n    'ɵdisableBindings': disableBindings,\n    'ɵallocHostVars': allocHostVars,\n    'ɵelementStart': elementStart,\n    'ɵelementEnd': elementEnd,\n    'ɵelement': element,\n    'ɵelementContainerStart': elementContainerStart,\n    'ɵelementContainerEnd': elementContainerEnd,\n    'ɵpureFunction0': pureFunction0,\n    'ɵpureFunction1': pureFunction1,\n    'ɵpureFunction2': pureFunction2,\n    'ɵpureFunction3': pureFunction3,\n    'ɵpureFunction4': pureFunction4,\n    'ɵpureFunction5': pureFunction5,\n    'ɵpureFunction6': pureFunction6,\n    'ɵpureFunction7': pureFunction7,\n    'ɵpureFunction8': pureFunction8,\n    'ɵpureFunctionV': pureFunctionV,\n    'ɵgetCurrentView': getCurrentView,\n    'ɵrestoreView': restoreView,\n    'ɵinterpolation1': interpolation1,\n    'ɵinterpolation2': interpolation2,\n    'ɵinterpolation3': interpolation3,\n    'ɵinterpolation4': interpolation4,\n    'ɵinterpolation5': interpolation5,\n    'ɵinterpolation6': interpolation6,\n    'ɵinterpolation7': interpolation7,\n    'ɵinterpolation8': interpolation8,\n    'ɵinterpolationV': interpolationV,\n    'ɵelementClassProp': elementClassProp,\n    'ɵlistener': listener,\n    'ɵload': load,\n    'ɵprojection': projection,\n    'ɵelementProperty': elementProperty,\n    'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n    'ɵpipeBind1': pipeBind1,\n    'ɵpipeBind2': pipeBind2,\n    'ɵpipeBind3': pipeBind3,\n    'ɵpipeBind4': pipeBind4,\n    'ɵpipeBindV': pipeBindV,\n    'ɵprojectionDef': projectionDef,\n    'ɵpipe': pipe,\n    'ɵquery': query,\n    'ɵqueryRefresh': queryRefresh,\n    'ɵregisterContentQuery': registerContentQuery,\n    'ɵreference': reference,\n    'ɵelementStyling': elementStyling,\n    'ɵelementHostAttrs': elementHostAttrs,\n    'ɵelementStylingMap': elementStylingMap,\n    'ɵelementStyleProp': elementStyleProp,\n    'ɵelementStylingApply': elementStylingApply,\n    'ɵtemplate': template,\n    'ɵtext': text,\n    'ɵtextBinding': textBinding,\n    'ɵembeddedViewStart': embeddedViewStart,\n    'ɵembeddedViewEnd': embeddedViewEnd,\n    'ɵi18n': i18n,\n    'ɵi18nAttributes': i18nAttributes,\n    'ɵi18nExp': i18nExp,\n    'ɵi18nStart': i18nStart,\n    'ɵi18nEnd': i18nEnd,\n    'ɵi18nApply': i18nApply,\n    'ɵi18nPostprocess': i18nPostprocess,\n    'ɵsanitizeHtml': sanitizeHtml,\n    'ɵsanitizeStyle': sanitizeStyle,\n    'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n    'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n    'ɵsanitizeScript': sanitizeScript,\n    'ɵsanitizeUrl': sanitizeUrl\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n * @publicApi\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\n/**\n * Map of module-id to the corresponding NgModule.\n * - In pre Ivy we track NgModuleFactory,\n * - In post Ivy we track the NgModuleType\n */\nvar modules = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @publicApi\n */\nfunction registerModuleFactory(id, factory) {\n    var existing = modules.get(id);\n    assertNotExisting(id, existing && existing.moduleType);\n    modules.set(id, factory);\n}\nfunction assertNotExisting(id, type) {\n    if (type) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n    }\n}\nfunction registerNgModuleType(id, ngModuleType) {\n    var existing = modules.get(id);\n    assertNotExisting(id, existing);\n    modules.set(id, ngModuleType);\n}\nfunction getModuleFactory__PRE_R3__(id) {\n    var factory = modules.get(id);\n    if (!factory)\n        throw noModuleError(id);\n    return factory;\n}\nfunction getModuleFactory__POST_R3__(id) {\n    var type = modules.get(id);\n    if (!type)\n        throw noModuleError(id);\n    return new NgModuleFactory$1(type);\n}\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @publicApi\n */\nvar getModuleFactory = getModuleFactory__POST_R3__;\nfunction noModuleError(id) {\n    return new Error(\"No module with ID \" + id + \" loaded\");\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * @publicApi\n */\nvar Type = Function;\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\nvar INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, __spread([void 0], args)))();\n    }; };\n    /** @internal */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        var typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (type.parameters && type.parameters !== parentCtor.parameters) {\n            return type.parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var tsickleCtorParams = type.ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n        var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(type.length).fill(undefined);\n    };\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(type);\n        var parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n            var annotations = typeOrFunc.annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return typeOrFunc[ANNOTATIONS];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.propMetadata &&\n            typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n            var propMetadata = typeOrFunc.propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.propDecorators &&\n            typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n            var propDecorators_1 = typeOrFunc.propDecorators;\n            var propMetadata_1 = {};\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return typeOrFunc[PROP_METADATA];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var propMetadata = {};\n        if (parentCtor !== Object) {\n            var parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                }\n                decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n    ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return new Function('o', 'v', 'return o.' + name + ' = v;');\n    };\n    ReflectionCapabilities.prototype.method = function (name) {\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return new Function('o', 'args', functionBody);\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    ReflectionCapabilities.prototype.importUri = function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var decoratorType = decoratorInvocation.type;\n        var annotationCls = decoratorType.annotationCls;\n        var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n    });\n}\nfunction getParentCtor(ctor) {\n    var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    var parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _reflect = null;\nfunction getReflect() {\n    return (_reflect = _reflect || new ReflectionCapabilities());\n}\nfunction reflectDependencies(type) {\n    return convertDependencies(getReflect().parameters(type));\n}\nfunction convertDependencies(deps) {\n    var compiler = getCompilerFacade();\n    return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n}\nfunction reflectDependency(compiler, dep) {\n    var meta = {\n        token: null,\n        host: false,\n        optional: false,\n        resolved: compiler.R3ResolvedDependencyType.Token,\n        self: false,\n        skipSelf: false,\n    };\n    function setTokenAndResolvedType(token) {\n        meta.resolved = compiler.R3ResolvedDependencyType.Token;\n        meta.token = token;\n    }\n    if (Array.isArray(dep)) {\n        if (dep.length === 0) {\n            throw new Error('Dependency array must have arguments.');\n        }\n        for (var j = 0; j < dep.length; j++) {\n            var param = dep[j];\n            if (param === undefined) {\n                // param may be undefined if type of dep is not set by ngtsc\n                continue;\n            }\n            else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                meta.optional = true;\n            }\n            else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                meta.skipSelf = true;\n            }\n            else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                meta.self = true;\n            }\n            else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                meta.host = true;\n            }\n            else if (param instanceof Inject) {\n                meta.token = param.token;\n            }\n            else if (param instanceof Attribute) {\n                if (param.attributeName === undefined) {\n                    throw new Error(\"Attribute name must be defined.\");\n                }\n                meta.token = param.attributeName;\n                meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n            }\n            else {\n                setTokenAndResolvedType(param);\n            }\n        }\n    }\n    else {\n        setTokenAndResolvedType(dep);\n    }\n    return meta;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_ARRAY$2 = [];\nvar moduleQueue = [];\n/**\n * Enqueues moduleDef to be checked later to see if scope can be set on its\n * component declarations.\n */\nfunction enqueueModuleForDelayedScoping(moduleType, ngModule) {\n    moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n}\nvar flushingModuleQueue = false;\n/**\n * Loops over queued module definitions, if a given module definition has all of its\n * declarations resolved, it dequeues that module definition and sets the scope on\n * its declarations.\n */\nfunction flushModuleScopingQueueAsMuchAsPossible() {\n    if (!flushingModuleQueue) {\n        flushingModuleQueue = true;\n        try {\n            for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                    // dequeue\n                    moduleQueue.splice(i, 1);\n                    setScopeOnDeclaredComponents(moduleType, ngModule);\n                }\n            }\n        }\n        finally {\n            flushingModuleQueue = false;\n        }\n    }\n}\n/**\n * Returns truthy if a declaration has resolved. If the declaration happens to be\n * an array of declarations, it will recurse to check each declaration in that array\n * (which may also be arrays).\n */\nfunction isResolvedDeclaration(declaration) {\n    if (Array.isArray(declaration)) {\n        return declaration.every(isResolvedDeclaration);\n    }\n    return !!resolveForwardRef(declaration);\n}\n/**\n * Compiles a module in JIT mode.\n *\n * This function automatically gets called when a class has a `@NgModule` decorator.\n */\nfunction compileNgModule(moduleType, ngModule) {\n    if (ngModule === void 0) { ngModule = {}; }\n    compileNgModuleDefs(moduleType, ngModule);\n    // Because we don't know if all declarations have resolved yet at the moment the\n    // NgModule decorator is executing, we're enqueueing the setting of module scope\n    // on its declarations to be run at a later time when all declarations for the module,\n    // including forward refs, have resolved.\n    enqueueModuleForDelayedScoping(moduleType, ngModule);\n}\n/**\n * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n */\nfunction compileNgModuleDefs(moduleType, ngModule) {\n    ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n    ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n    var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n    var ngModuleDef = null;\n    Object.defineProperty(moduleType, NG_MODULE_DEF, {\n        configurable: true,\n        get: function () {\n            if (ngModuleDef === null) {\n                ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                    type: moduleType,\n                    bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2, resolveForwardRef),\n                    declarations: declarations.map(resolveForwardRef),\n                    imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2, resolveForwardRef)\n                        .map(expandModuleWithProviders),\n                    exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2, resolveForwardRef)\n                        .map(expandModuleWithProviders),\n                    emitInline: true,\n                });\n            }\n            return ngModuleDef;\n        }\n    });\n    if (ngModule.id) {\n        registerNgModuleType(ngModule.id, moduleType);\n    }\n    var ngInjectorDef = null;\n    Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n        get: function () {\n            if (ngInjectorDef === null) {\n                ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                var meta = {\n                    name: moduleType.name,\n                    type: moduleType,\n                    deps: reflectDependencies(moduleType),\n                    providers: ngModule.providers || EMPTY_ARRAY$2,\n                    imports: [\n                        (ngModule.imports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                        (ngModule.exports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                    ],\n                };\n                ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n            }\n            return ngInjectorDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\nfunction verifySemanticsOfNgModuleDef(moduleType) {\n    if (verifiedNgModule.get(moduleType))\n        return;\n    verifiedNgModule.set(moduleType, true);\n    moduleType = resolveForwardRef(moduleType);\n    var ngModuleDef = getNgModuleDef(moduleType, true);\n    var errors = [];\n    ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n    var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$1(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n    ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n    ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n    ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n    var ngModule = getAnnotation(moduleType, 'NgModule');\n    if (ngModule) {\n        ngModule.imports &&\n            flatten$1(ngModule.imports, unwrapModuleWithProvidersImports)\n                .forEach(verifySemanticsOfNgModuleDef);\n        ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n        ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n    }\n    // Throw Error if any errors were detected.\n    if (errors.length) {\n        throw new Error(errors.join('\\n'));\n    }\n    ////////////////////////////////////////////////////////////////////////////////////////////////\n    function verifyDeclarationsHaveDefinitions(type) {\n        type = resolveForwardRef(type);\n        var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n        if (!def) {\n            errors.push(\"Unexpected value '\" + stringify$1(type) + \"' declared by the module '\" + stringify$1(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n        }\n    }\n    function verifyExportsAreDeclaredOrReExported(type) {\n        type = resolveForwardRef(type);\n        var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n            getPipeDef(type) && 'pipe';\n        if (kind) {\n            // only checked if we are declared as Component, Directive, or Pipe\n            // Modules don't need to be declared or imported.\n            if (combinedDeclarations.lastIndexOf(type) === -1) {\n                // We are exporting something which we don't explicitly declare or import.\n                errors.push(\"Can't export \" + kind + \" \" + stringify$1(type) + \" from \" + stringify$1(moduleType) + \" as it was neither declared nor imported!\");\n            }\n        }\n    }\n    function verifyDeclarationIsUnique(type) {\n        type = resolveForwardRef(type);\n        var existingModule = ownerNgModule.get(type);\n        if (existingModule && existingModule !== moduleType) {\n            var modules = [existingModule, moduleType].map(stringify$1).sort();\n            errors.push(\"Type \" + stringify$1(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                (\"Please consider moving \" + stringify$1(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringify$1(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n        }\n        else {\n            // Mark type as having owner.\n            ownerNgModule.set(type, moduleType);\n        }\n    }\n    function verifyComponentIsPartOfNgModule(type) {\n        type = resolveForwardRef(type);\n        var existingModule = ownerNgModule.get(type);\n        if (!existingModule) {\n            errors.push(\"Component \" + stringify$1(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n    }\n    function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n        type = resolveForwardRef(type);\n        if (getComponentDef(type)) {\n            // We know we are component\n            var component = getAnnotation(type, 'Component');\n            if (component && component.entryComponents) {\n                component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n            }\n        }\n    }\n}\nfunction unwrapModuleWithProvidersImports(typeOrWithProviders) {\n    typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n    return typeOrWithProviders.ngModule || typeOrWithProviders;\n}\nfunction getAnnotation(type, name) {\n    var annotation = null;\n    collect(type.__annotations__);\n    collect(type.decorators);\n    return annotation;\n    function collect(annotations) {\n        if (annotations) {\n            annotations.forEach(readAnnotation);\n        }\n    }\n    function readAnnotation(decorator) {\n        if (!annotation) {\n            var proto = Object.getPrototypeOf(decorator);\n            if (proto.ngMetadataName == name) {\n                annotation = decorator;\n            }\n            else if (decorator.type) {\n                var proto_1 = Object.getPrototypeOf(decorator.type);\n                if (proto_1.ngMetadataName == name) {\n                    annotation = decorator.args[0];\n                }\n            }\n        }\n    }\n}\n/**\n * Keep track of compiled components. This is needed because in tests we often want to compile the\n * same component with more than one NgModule. This would cause an error unless we reset which\n * NgModule the component belongs to. We keep the list of compiled components here so that the\n * TestBed can reset it later.\n */\nvar ownerNgModule = new Map();\nvar verifiedNgModule = new Map();\nfunction resetCompiledComponents() {\n    ownerNgModule = new Map();\n    verifiedNgModule = new Map();\n    moduleQueue.length = 0;\n}\n/**\n * Computes the combined declarations of explicit declarations, as well as declarations inherited\n * by\n * traversing the exports of imported modules.\n * @param type\n */\nfunction computeCombinedExports(type) {\n    type = resolveForwardRef(type);\n    var ngModuleDef = getNgModuleDef(type, true);\n    return __spread(flatten$1(ngModuleDef.exports.map(function (type) {\n        var ngModuleDef = getNgModuleDef(type);\n        if (ngModuleDef) {\n            verifySemanticsOfNgModuleDef(type);\n            return computeCombinedExports(type);\n        }\n        else {\n            return type;\n        }\n    })));\n}\n/**\n * Some declared components may be compiled asynchronously, and thus may not have their\n * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n * the `ngSelectorScope` property of the declared type.\n */\nfunction setScopeOnDeclaredComponents(moduleType, ngModule) {\n    var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n    var transitiveScopes = transitiveScopesFor(moduleType);\n    declarations.forEach(function (declaration) {\n        if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n            // An `ngComponentDef` field exists - go ahead and patch the component directly.\n            var component = declaration;\n            var componentDef = getComponentDef(component);\n            patchComponentDefWithScope(componentDef, transitiveScopes);\n        }\n        else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n            // Set `ngSelectorScope` for future reference when the component compilation finishes.\n            declaration.ngSelectorScope = moduleType;\n        }\n    });\n}\n/**\n * Patch the definition of a component with directives and pipes from the compilation scope of\n * a given module.\n */\nfunction patchComponentDefWithScope(componentDef, transitiveScopes) {\n    componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n        .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n        .filter(function (def) { return !!def; }); };\n    componentDef.pipeDefs = function () {\n        return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n    };\n}\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. It can be called\n * on modules with components that have not fully compiled yet, but the result should not be used\n * until they have.\n */\nfunction transitiveScopesFor(moduleType) {\n    if (!isNgModule(moduleType)) {\n        throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n    }\n    var def = getNgModuleDef(moduleType);\n    if (def.transitiveCompileScopes !== null) {\n        return def.transitiveCompileScopes;\n    }\n    var scopes = {\n        compilation: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n        exported: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n    };\n    def.declarations.forEach(function (declared) {\n        var declaredWithDefs = declared;\n        if (getPipeDef(declaredWithDefs)) {\n            scopes.compilation.pipes.add(declared);\n        }\n        else {\n            // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n            // had its template compiled yet. In either case, it gets added to the compilation's\n            // directives.\n            scopes.compilation.directives.add(declared);\n        }\n    });\n    def.imports.forEach(function (imported) {\n        var importedTyped = imported;\n        if (!isNgModule(importedTyped)) {\n            throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n        }\n        // When this module imports another, the imported module's exported directives and pipes are\n        // added to the compilation scope of this module.\n        var importedScope = transitiveScopesFor(importedTyped);\n        importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n        importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n    });\n    def.exports.forEach(function (exported) {\n        var exportedTyped = exported;\n        // Either the type is a module, a pipe, or a component/directive (which may not have an\n        // ngComponentDef as it might be compiled asynchronously).\n        if (isNgModule(exportedTyped)) {\n            // When this module exports another, the exported module's exported directives and pipes are\n            // added to both the compilation and exported scopes of this module.\n            var exportedScope = transitiveScopesFor(exportedTyped);\n            exportedScope.exported.directives.forEach(function (entry) {\n                scopes.compilation.directives.add(entry);\n                scopes.exported.directives.add(entry);\n            });\n            exportedScope.exported.pipes.forEach(function (entry) {\n                scopes.compilation.pipes.add(entry);\n                scopes.exported.pipes.add(entry);\n            });\n        }\n        else if (getPipeDef(exportedTyped)) {\n            scopes.exported.pipes.add(exportedTyped);\n        }\n        else {\n            scopes.exported.directives.add(exportedTyped);\n        }\n    });\n    def.transitiveCompileScopes = scopes;\n    return scopes;\n}\nfunction flatten$1(values, mapFn) {\n    var out = [];\n    values.forEach(function (value) {\n        if (Array.isArray(value)) {\n            out.push.apply(out, __spread(flatten$1(value, mapFn)));\n        }\n        else {\n            out.push(mapFn ? mapFn(value) : value);\n        }\n    });\n    return out;\n}\nfunction expandModuleWithProviders(value) {\n    if (isModuleWithProviders(value)) {\n        return value.ngModule;\n    }\n    return value;\n}\nfunction isModuleWithProviders(value) {\n    return value.ngModule !== undefined;\n}\nfunction isNgModule(value) {\n    return !!getNgModuleDef(value);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * ngComponentDef onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n * until the global queue has been resolved with a call to `resolveComponentResources`.\n */\nfunction compileComponent(type, metadata) {\n    var ngComponentDef = null;\n    // Metadata may have resources which need to be resolved.\n    maybeQueueResolutionOfComponentResources(metadata);\n    Object.defineProperty(type, NG_COMPONENT_DEF, {\n        get: function () {\n            var compiler = getCompilerFacade();\n            if (ngComponentDef === null) {\n                if (componentNeedsResolution(metadata)) {\n                    var error = [\"Component '\" + stringify$1(type) + \"' is not resolved:\"];\n                    if (metadata.templateUrl) {\n                        error.push(\" - templateUrl: \" + stringify$1(metadata.templateUrl));\n                    }\n                    if (metadata.styleUrls && metadata.styleUrls.length) {\n                        error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                    }\n                    error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                    throw new Error(error.join('\\n'));\n                }\n                var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/template.html\", meta);\n                // When NgModule decorator executed, we enqueued the module definition such that\n                // it would only dequeue and add itself as module scope to all of its declarations,\n                // but only if  if all of its declarations had resolved. This call runs the check\n                // to see if any modules that are in the queue can be dequeued and add scope to\n                // their declarations.\n                flushModuleScopingQueueAsMuchAsPossible();\n                // If component compilation is async, then the @NgModule annotation which declares the\n                // component may execute and set an ngSelectorScope property on the component type. This\n                // allows the component to patch itself with directiveDefs from the module after it\n                // finishes compiling.\n                if (hasSelectorScope(type)) {\n                    var scopes = transitiveScopesFor(type.ngSelectorScope);\n                    patchComponentDefWithScope(ngComponentDef, scopes);\n                }\n            }\n            return ngComponentDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\nfunction hasSelectorScope(component) {\n    return component.ngSelectorScope !== undefined;\n}\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * ngDirectiveDef onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nfunction compileDirective(type, directive) {\n    var ngDirectiveDef = null;\n    Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n        get: function () {\n            if (ngDirectiveDef === null) {\n                var facade = directiveMetadata(type, directive);\n                ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n            }\n            return ngDirectiveDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\nfunction extendsDirectlyFromObject(type) {\n    return Object.getPrototypeOf(type.prototype) === Object.prototype;\n}\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nfunction directiveMetadata(type, metadata) {\n    // Reflect inputs and outputs.\n    var propMetadata = getReflect().propMetadata(type);\n    return {\n        name: type.name,\n        type: type,\n        typeArgumentCount: 0,\n        selector: metadata.selector,\n        deps: reflectDependencies(type),\n        host: metadata.host || EMPTY_OBJ,\n        propMetadata: propMetadata,\n        inputs: metadata.inputs || EMPTY_ARRAY,\n        outputs: metadata.outputs || EMPTY_ARRAY,\n        queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n        lifecycle: {\n            usesOnChanges: type.prototype.ngOnChanges !== undefined,\n        },\n        typeSourceSpan: null,\n        usesInheritance: !extendsDirectlyFromObject(type),\n        exportAs: metadata.exportAs || null,\n        providers: metadata.providers || null,\n    };\n}\nfunction convertToR3QueryPredicate(selector) {\n    return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n}\nfunction convertToR3QueryMetadata(propertyName, ann) {\n    return {\n        propertyName: propertyName,\n        predicate: convertToR3QueryPredicate(ann.selector),\n        descendants: ann.descendants,\n        first: ann.first,\n        read: ann.read ? ann.read : null\n    };\n}\nfunction extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n    var queriesMeta = [];\n    var _loop_1 = function (field) {\n        if (propMetadata.hasOwnProperty(field)) {\n            propMetadata[field].forEach(function (ann) {\n                if (isQueryAnn(ann)) {\n                    if (!ann.selector) {\n                        throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                            (\"\\\"\" + stringify$1(type) + \"\\\" since the query selector wasn't defined.\"));\n                    }\n                    queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                }\n            });\n        }\n    };\n    for (var field in propMetadata) {\n        _loop_1(field);\n    }\n    return queriesMeta;\n}\nfunction isContentQuery(value) {\n    var name = value.ngMetadataName;\n    return name === 'ContentChild' || name === 'ContentChildren';\n}\nfunction isViewQuery(value) {\n    var name = value.ngMetadataName;\n    return name === 'ViewChild' || name === 'ViewChildren';\n}\nfunction splitByComma(value) {\n    return value.split(',').map(function (piece) { return piece.trim(); });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction compilePipe(type, meta) {\n    var ngPipeDef = null;\n    Object.defineProperty(type, NG_PIPE_DEF, {\n        get: function () {\n            if (ngPipeDef === null) {\n                ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                    type: type,\n                    name: type.name,\n                    deps: reflectDependencies(type),\n                    pipeName: meta.name,\n                    pure: meta.pure !== undefined ? meta.pure : true\n                });\n            }\n            return ngPipeDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive metadata.\n *\n * @publicApi\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n}, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n/**\n * Component decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n/**\n * @Annotation\n * @publicApi\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\nvar initializeBaseDef = function (target) {\n    var constructor = target.constructor;\n    var inheritedBaseDef = constructor.ngBaseDef;\n    var baseDef = constructor.ngBaseDef = {\n        inputs: {},\n        outputs: {},\n        declaredInputs: {},\n    };\n    if (inheritedBaseDef) {\n        fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n        fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n        fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n    }\n};\n/**\n * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n * @param key \"inputs\" or \"outputs\"\n */\nvar updateBaseDefFromIOProp = function (getProp) {\n    return function (target, name) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var constructor = target.constructor;\n        if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n            initializeBaseDef(target);\n        }\n        var baseDef = constructor.ngBaseDef;\n        var defProp = getProp(baseDef);\n        defProp[name] = args[0];\n    };\n};\n/**\n * @Annotation\n * @publicApi\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n/**\n * @Annotation\n * @publicApi\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n/**\n * @Annotation\n * @publicApi\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Binds a CSS event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * @usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * @Annotation\n * @publicApi\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\nvar SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\nvar SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\nvar SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\nvar SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\nvar SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\nvar SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\nvar SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\nvar SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\nvar SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ɵ0$2 = getClosureSafeProperty;\nvar USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\nvar EMPTY_ARRAY$3 = [];\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        var reflectionCapabilities = new ReflectionCapabilities();\n        var deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n    }\n    if (USE_VALUE$1 in provider) {\n        var valueProvider_1 = provider;\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if (provider.useExisting) {\n        var existingProvider_1 = provider;\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if (provider.useFactory) {\n        var factoryProvider_1 = provider;\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n    }\n    else if (provider.useClass) {\n        var classProvider_1 = provider;\n        var deps_2 = provider.deps;\n        if (!deps_2) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            var _a;\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n        };\n    }\n    else {\n        var deps_3 = provider.deps;\n        if (!deps_3) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n * @publicApi\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that allows any property on any element.\n *\n * @publicApi\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * @Annotation\n * @publicApi\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n/**\n * Decorator that marks the following class as an NgModule, and supplies\n * configuration metadata for it.\n *\n * * The `declarations` and `entryComponents` options configure the compiler\n * with information about what belongs to the NgModule.\n * * The `providers` options configures the NgModule's injector to provide\n * dependencies the NgModule members.\n * * The `imports` and `exports` options bring in members from other modules, and make\n * this module's members available to others.\n */\nfunction (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    var imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = __spread(imports, [metadata.exports]);\n    }\n    moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\nvar SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\nvar SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\nvar SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n */\nfunction compileInjectable(type, srcMeta) {\n    var def = null;\n    // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n    if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n        return;\n    Object.defineProperty(type, NG_INJECTABLE_DEF, {\n        get: function () {\n            if (def === null) {\n                // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                var meta = srcMeta || { providedIn: null };\n                var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                    isUseValueProvider(meta) || isUseExistingProvider(meta);\n                var compilerMeta = {\n                    name: type.name,\n                    type: type,\n                    typeArgumentCount: 0,\n                    providedIn: meta.providedIn,\n                    ctorDeps: reflectDependencies(type),\n                    userDeps: undefined\n                };\n                if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                    compilerMeta.userDeps = convertDependencies(meta.deps);\n                }\n                if (!hasAProvider) {\n                    // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                    // The deps will have been reflected above, causing the factory to create the class by\n                    // calling\n                    // its constructor with injected deps.\n                    compilerMeta.useClass = type;\n                }\n                else if (isUseClassProvider(meta)) {\n                    // The user explicitly specified useClass, and may or may not have provided deps.\n                    compilerMeta.useClass = meta.useClass;\n                }\n                else if (isUseValueProvider(meta)) {\n                    // The user explicitly specified useValue.\n                    compilerMeta.useValue = meta.useValue;\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    // The user explicitly specified useFactory.\n                    compilerMeta.useFactory = meta.useFactory;\n                }\n                else if (isUseExistingProvider(meta)) {\n                    // The user explicitly specified useExisting.\n                    compilerMeta.useExisting = meta.useExisting;\n                }\n                else {\n                    // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                    throw new Error(\"Unreachable state.\");\n                }\n                def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n            }\n            return def;\n        },\n    });\n}\nvar ɵ0$3 = getClosureSafeProperty;\nvar USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\nfunction isUseClassProvider(meta) {\n    return meta.useClass !== undefined;\n}\nfunction isUseValueProvider(meta) {\n    return USE_VALUE$2 in meta;\n}\nfunction isUseFactoryProvider(meta) {\n    return meta.useFactory !== undefined;\n}\nfunction isUseExistingProvider(meta) {\n    return meta.useExisting !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injectable decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction render2CompileInjectable(injectableType, options) {\n    if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n        injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\nvar SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\nvar SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\nvar SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\nfunction getDebugContext(error) {\n    return error[ERROR_DEBUG_CONTEXT];\n}\nfunction getOriginalError(error) {\n    return error[ERROR_ORIGINAL_ERROR];\n}\nfunction getErrorLogger(error) {\n    return error[ERROR_LOGGER] || defaultErrorLogger;\n}\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, __spread(values));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * @publicApi\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * @internal\n         */\n        this._console = console;\n    }\n    ErrorHandler.prototype.handleError = function (error) {\n        var originalError = this._findOriginalError(error);\n        var context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    ErrorHandler.prototype._findContext = function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    ErrorHandler.prototype._findOriginalError = function (error) {\n        var e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\nfunction wrappedError(message, originalError) {\n    var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var error = Error(msg);\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findFirstClosedCycle(keys) {\n    var res = [];\n    for (var i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var reversed = findFirstClosedCycle(keys.slice().reverse());\n        var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var keys = [key];\n    var errMsg = constructResolvingMessage(keys);\n    var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var signature = [];\n    for (var i = 0, ii = params.length; i < ii; i++) {\n        var parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n *\n * @deprecated No replacement\n * @publicApi\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return this._allKeys.get(token);\n        }\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * @publicApi\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     */\n    factory, \n    /**\n     * Arguments (dependencies) to the `factory` function.\n     */\n    dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider) {\n    var factoryFn;\n    var resolvedDeps;\n    if (provider.useClass) {\n        var useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n */\nfunction resolveReflectiveProviders(providers) {\n    var normalized = _normalizeProviders(providers, []);\n    var resolved = normalized.map(resolveReflectiveProvider);\n    var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        var existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && b.provide !== undefined) {\n            res.push(b);\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\nfunction _dependenciesFor(typeOrFunc) {\n    var params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var token = null;\n    var optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var visibility = null;\n    for (var i = 0; i < metadata.length; ++i) {\n        var paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * @usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @publicApi\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     */\n    ReflectiveInjector.resolve = function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /** @internal */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var inj = new ReflectiveInjector_(providers);\n        inj.parent = this;\n        return inj;\n    };\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._new = function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var res = new Array(provider.resolvedFactories.length);\n            for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var factory = ResolvedReflectiveFactory$$1.factory;\n        var deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var obj;\n        try {\n            obj = factory.apply(void 0, __spread(deps));\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n        var obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n        var inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var inj_ = inj;\n            var obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: function () {\n            var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nfunction _mapProviders(injector, fn) {\n    var res = new Array(injector._providers.length);\n    for (var i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n */\nfunction isObservable(obj) {\n    // TODO: use isObservable once we update pass rxjs 6.1\n    // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n *\n * @publicApi\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @publicApi\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    ApplicationInitStatus.prototype.runInitializers = function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var asyncInitPromises = [];\n        var complete = function () {\n            _this.done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var i = 0; i < this.appInits.length; i++) {\n                var initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus = __decorate([\n        __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n        __metadata(\"design:paramtypes\", [Array])\n    ], ApplicationInitStatus);\n/*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n        type: Injectable\n    }], function () { return [{\n        type: Array,\n        decorators: [{\n                type: Inject,\n                args: [APP_INITIALIZER]\n            }, {\n                type: Optional\n            }]\n    }]; }, { appInits: [], initialized: [], done: [], donePromise: [], runInitializers: [] });\nApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n    return ApplicationInitStatus;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @publicApi\n */\nvar APP_ID = new InjectionToken('AppId');\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @publicApi\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * @publicApi\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * @publicApi\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @publicApi\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * @publicApi\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    Console.prototype.warn = function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n/*@__PURE__*/ setClassMetadata(Console, [{\n        type: Injectable\n    }], function () { return []; }, { log: [], warn: [] });\nConsole.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n    return Console;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @publicApi\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\nvar Compiler_compileModuleSync__PRE_R3__ = _throwError;\nvar Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n    return new NgModuleFactory$1(moduleType);\n};\nvar Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\nvar Compiler_compileModuleAsync__PRE_R3__ = _throwError;\nvar Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n    return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n};\nvar Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\nvar Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\nvar Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n    return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n};\nvar Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\nvar Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\nvar Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n    return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n};\nvar Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n * @publicApi\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        this.compileModuleSync = Compiler_compileModuleSync;\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        this.compileModuleAsync = Compiler_compileModuleAsync;\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n    }\n    /**\n     * Clears all caches.\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    Compiler.prototype.clearCacheFor = function (type) { };\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     */\n    Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n/*@__PURE__*/ setClassMetadata(Compiler, [{\n        type: Injectable\n    }], function () { return []; }, { compileModuleSync: [], compileModuleAsync: [], compileModuleAndAllComponentsSync: [], compileModuleAndAllComponentsAsync: [], clearCache: [], clearCacheFor: [], getModuleId: [] });\nCompiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @publicApi\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * @publicApi\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar trace;\nvar events;\nfunction detectWTF() {\n    var wtf = _global /** TODO #9100 */['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @publicApi\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @publicApi\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @publicApi\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @publicApi\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var self = this;\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (Zone['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n        return this._inner.run(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n        var zone = this._inner;\n        var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n        try {\n            return zone.runTask(task, applyThis, applyArgs);\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n        return this._inner.runGuarded(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    NgZone.prototype.runOutsideAngular = function (fn) {\n        return this._outer.run(fn);\n    };\n    return NgZone;\n}());\nfunction noop$1() { }\nvar EMPTY_PAYLOAD = {};\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: { 'isAngularZone': true },\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    NoopNgZone.prototype.run = function (fn) { return fn(); };\n    NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n    NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n    NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @publicApi\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * @internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this.taskTrackingZone = null;\n        this._watchAngularEvents();\n        _ngZone.run(function () {\n            _this.taskTrackingZone =\n                typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n        });\n    }\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    var cb = _this._callbacks.pop();\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Still not stable, send updates.\n            var pending_1 = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter(function (cb) {\n                if (cb.updateCb && cb.updateCb(pending_1)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    };\n    Testability.prototype.getPendingTasks = function () {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        // Copy the tasks data so that we don't leak tasks.\n        return this.taskTrackingZone.macroTasks.map(function (t) {\n            return {\n                source: t.source,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: t.creationLocation,\n                data: t.data\n            };\n        });\n    };\n    Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n        var _this = this;\n        var timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(function () {\n                _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                cb(_this._didWork, _this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n    };\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(doneCb, timeout, updateCb);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability = __decorate([\n        __metadata(\"design:paramtypes\", [NgZone])\n    ], Testability);\n/*@__PURE__*/ setClassMetadata(Testability, [{\n        type: Injectable\n    }], function () { return [{\n        type: NgZone\n    }]; }, { _ngZone: [], _pendingCount: [], _isZoneStable: [], _didWork: [], _callbacks: [], taskTrackingZone: [], _watchAngularEvents: [], increasePendingRequestCount: [], decreasePendingRequestCount: [], isStable: [], _runCallbacksIfReady: [], getPendingTasks: [], addCallback: [], whenStable: [], getPendingRequestCount: [], findProviders: [] });\nTestability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n    return Testability;\n}());\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @publicApi\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /** @internal */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry = __decorate([\n        __metadata(\"design:paramtypes\", [])\n    ], TestabilityRegistry);\n/*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n        type: Injectable\n    }], function () { return []; }, { _applications: [], registerApplication: [], unregisterApplication: [], unregisterAllApplications: [], getTestability: [], getAllTestabilities: [], getAllRootElements: [], findTestabilityInTree: [] });\nTestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n    return TestabilityRegistry;\n}());\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @publicApi\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _platform;\nvar compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\nfunction compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n    var compilerFactory = injector.get(CompilerFactory);\n    var compiler = compilerFactory.createCompiler([options]);\n    return compiler.compileModuleAsync(moduleType);\n}\nfunction compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n    ngDevMode && assertNgModuleType(moduleType);\n    return Promise.resolve(new NgModuleFactory$1(moduleType));\n}\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @publicApi\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @publicApi\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * @publicApi\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var desc = \"Platform: \" + name;\n    var marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @publicApi\n */\nfunction assertPlatform(requiredToken) {\n    var platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * @publicApi\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * @publicApi\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n *\n * @publicApi\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var ngZoneOption = options ? options.ngZone : undefined;\n        var ngZone = getNgZone(ngZoneOption);\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var moduleRef = moduleFactory.create(ngZoneInjector);\n            var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n            ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     */\n    PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var options = optionsReducer({}, compilerOptions);\n        return compileNgModuleFactory(this.injector, options, moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n        var appRef = moduleRef.injector.get(ApplicationRef);\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    PlatformRef.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef = __decorate([\n        __metadata(\"design:paramtypes\", [Injector])\n    ], PlatformRef);\n/*@__PURE__*/ setClassMetadata(PlatformRef, [{\n        type: Injectable\n    }], function () { return [{\n        type: Injector\n    }]; }, { _injector: [], _modules: [], _destroyListeners: [], _destroyed: [], bootstrapModuleFactory: [], bootstrapModule: [], _moduleDoBootstrap: [], onDestroy: [], destroy: [] });\nPlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n    return PlatformRef;\n}());\nfunction getNgZone(ngZoneOption) {\n    var ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, objs);\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * @publicApi\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var isCurrentlyStable = new Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var isStable = new Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        this.isStable =\n            merge(isCurrentlyStable, isStable.pipe(share()));\n    }\n    ApplicationRef_1 = ApplicationRef;\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * @usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    ApplicationRef.prototype.tick = function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var scope = ApplicationRef_1._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    ApplicationRef.prototype.attachView = function (viewRef) {\n        var view = viewRef;\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    ApplicationRef.prototype.detachView = function (viewRef) {\n        var view = viewRef;\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    ApplicationRef.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    ApplicationRef.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    ApplicationRef.prototype.ngOnDestroy = function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    var ApplicationRef_1;\n    /** @internal */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef = ApplicationRef_1 = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n            ErrorHandler,\n            ComponentFactoryResolver,\n            ApplicationInitStatus])\n    ], ApplicationRef);\n    return ApplicationRef;\n}());\nfunction remove(list, el) {\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n * @publicApi\n */\nvar QueryList$1 = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList.prototype.filter = function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList.prototype.find = function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList.prototype.reduce = function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList.prototype.some = function (fn) {\n        return this._results.some(fn);\n    };\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    QueryList.prototype.reset = function (res) {\n        this._results = flatten$2(res);\n        this.dirty = false;\n        this.length = this._results.length;\n        this.last = this._results[this.length - 1];\n        this.first = this._results[0];\n    };\n    QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    /** internal */\n    QueryList.prototype.setDirty = function () { this.dirty = true; };\n    /** internal */\n    QueryList.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList;\n}());\nfunction flatten$2(list) {\n    return list.reduce(function (flat, item) {\n        var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n        return flat.concat(flatItem);\n    }, []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @publicApi\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @publicApi\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader = __decorate([\n        __param(1, Optional()),\n        __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n    ], SystemJsNgModuleLoader);\n/*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n        type: Injectable\n    }], function () { return [{\n        type: Compiler\n    }, {\n        type: SystemJsNgModuleLoaderConfig,\n        decorators: [{\n                type: Optional\n            }]\n    }]; }, { _compiler: [], _config: [], load: [], loadAndCompile: [], loadFactory: [] });\nSystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n    return SystemJsNgModuleLoader;\n}());\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more views can be attached to a component.\n *\n * Can contain *host views* (created by instantiating a\n * component with the `createComponent()` method), and *embedded views*\n * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n *\n * A view container instance can contain other view containers,\n * creating a [view hierarchy](guide/glossary#view-tree).\n *\n * @see `ComponentRef`\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    /** @internal */\n    ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n    return ViewContainerRef;\n}());\nvar SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\nvar SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\nvar SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for Angular Views, provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n *\n * @usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n *\n * @publicApi\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    /** @internal */\n    ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n    return ChangeDetectorRef;\n}());\nvar SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\nvar SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n};\nvar SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Angular [view](guide/glossary#view),\n * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n * Also serves as the base class\n * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n *\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nvar ViewRef$1 = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular [view](guide/glossary#view) in a view container.\n * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n * other than the hosting component whose template defines it, or it can be defined\n * independently by a `TemplateRef`.\n *\n * Properties of elements in a view can change, but the structure (number and order) of elements in\n * a view cannot. Change the structure of elements by inserting, moving, or\n * removing nested views in a view container.\n *\n * @see `ViewContainerRef`\n *\n * @usageNotes\n *\n * The following template breaks down into two separate `TemplateRef` instances,\n * an outer one and an inner one.\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * This is the outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * This is the inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * The outer and inner `TemplateRef` instances are assembled into views as follows:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @publicApi\n */\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\nvar DebugNode__PRE_R3__ = /** @class */ (function () {\n    function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n        this.listeners = [];\n        this.parent = null;\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement__PRE_R3__) {\n            parent.addChild(this);\n        }\n    }\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode__PRE_R3__;\n}());\nvar DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n    __extends(DebugElement__PRE_R3__, _super);\n    function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    DebugElement__PRE_R3__.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n        var childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _this = this;\n        var _a;\n        var siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                child.parent = _this;\n            });\n        }\n    };\n    DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n        var refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    DebugElement__PRE_R3__.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n        get: function () {\n            return this\n                .childNodes //\n                .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement__PRE_R3__;\n}(DebugNode__PRE_R3__));\n/**\n * @publicApi\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement__PRE_R3__) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement__PRE_R3__) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement__PRE_R3__) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\nvar DebugNode__POST_R3__ = /** @class */ (function () {\n    function DebugNode__POST_R3__(nativeNode) {\n        this.nativeNode = nativeNode;\n    }\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n        get: function () {\n            var parent = this.nativeNode.parentNode;\n            return parent ? new DebugElement__POST_R3__(parent) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n        get: function () { return getInjector(this.nativeNode); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n        get: function () {\n            var nativeElement = this.nativeNode;\n            return nativeElement && getComponent(nativeElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n        get: function () { return getContext(this.nativeNode); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n        get: function () {\n            return getListeners(this.nativeNode).filter(isBrowserEvents);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n        get: function () { return getLocalRefs(this.nativeNode); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n        get: function () { return getInjectionTokens(this.nativeNode); },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode__POST_R3__;\n}());\nvar DebugElement__POST_R3__ = /** @class */ (function (_super) {\n    __extends(DebugElement__POST_R3__, _super);\n    function DebugElement__POST_R3__(nativeNode) {\n        var _this = this;\n        ngDevMode && assertDomNode(nativeNode);\n        _this = _super.call(this, nativeNode) || this;\n        return _this;\n    }\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n        get: function () {\n            return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n        get: function () { return this.nativeElement.nodeName; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n        get: function () {\n            var context = loadLContext(this.nativeNode);\n            var lView = context.lView;\n            var tView = lView[TVIEW];\n            var tNode = tView.data[context.nodeIndex];\n            var properties = {};\n            // TODO: https://angular-team.atlassian.net/browse/FW-681\n            // Missing implementation here...\n            return properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n        get: function () {\n            var attributes = {};\n            var element = this.nativeElement;\n            if (element) {\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    attributes[attr.name] = attr.value;\n                }\n            }\n            return attributes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n        get: function () {\n            var classes = {};\n            var element = this.nativeElement;\n            if (element) {\n                var lContext = loadLContextFromNode(element);\n                var lNode = lContext.lView[lContext.nodeIndex];\n                var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                if (stylingContext) {\n                    for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                        if (isClassBasedValue(lNode, i)) {\n                            var className = getProp(lNode, i);\n                            var value = getValue(lNode, i);\n                            if (typeof value == 'boolean') {\n                                // we want to ignore `null` since those don't overwrite the values.\n                                classes[className] = value;\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Fallback, just read DOM.\n                    var eClasses = element.classList;\n                    for (var i = 0; i < eClasses.length; i++) {\n                        classes[eClasses[i]] = true;\n                    }\n                }\n            }\n            return classes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n        get: function () {\n            var styles = {};\n            var element = this.nativeElement;\n            if (element) {\n                var lContext = loadLContextFromNode(element);\n                var lNode = lContext.lView[lContext.nodeIndex];\n                var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                if (stylingContext) {\n                    for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                        if (!isClassBasedValue(lNode, i)) {\n                            var styleName = getProp(lNode, i);\n                            var value = getValue(lNode, i);\n                            if (value !== null) {\n                                // we want to ignore `null` since those don't overwrite the values.\n                                styles[styleName] = value;\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Fallback, just read DOM.\n                    var eStyles = element.style;\n                    for (var i = 0; i < eStyles.length; i++) {\n                        var name_1 = eStyles.item(i);\n                        styles[name_1] = eStyles.getPropertyValue(name_1);\n                    }\n                }\n            }\n            return styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n        get: function () {\n            var childNodes = this.nativeNode.childNodes;\n            var children = [];\n            for (var i = 0; i < childNodes.length; i++) {\n                var element = childNodes[i];\n                children.push(getDebugNode__POST_R3__(element));\n            }\n            return children;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n        get: function () {\n            var nativeElement = this.nativeElement;\n            if (!nativeElement)\n                return [];\n            var childNodes = nativeElement.children;\n            var children = [];\n            for (var i = 0; i < childNodes.length; i++) {\n                var element = childNodes[i];\n                children.push(getDebugNode__POST_R3__(element));\n            }\n            return children;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement__POST_R3__.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryNodeChildrenR3(this, predicate, matches, true);\n        return matches;\n    };\n    DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryNodeChildrenR3(this, predicate, matches, false);\n        return matches;\n    };\n    DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name === eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement__POST_R3__;\n}(DebugNode__POST_R3__));\nfunction _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n    if (parentNode instanceof DebugElement__POST_R3__) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement__POST_R3__) {\n                if (elementsOnly ? node.nativeElement : true) {\n                    _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                }\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\nfunction getDebugNode__PRE_R3__(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\nfunction getDebugNode__POST_R3__(nativeNode) {\n    if (nativeNode instanceof Node) {\n        return nativeNode.nodeType == Node.ELEMENT_NODE ?\n            new DebugElement__POST_R3__(nativeNode) :\n            new DebugNode__POST_R3__(nativeNode);\n    }\n    return null;\n}\n/**\n * @publicApi\n */\nvar getDebugNode = getDebugNode__POST_R3__;\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * @publicApi\n */\nvar DebugNode = DebugNode__POST_R3__;\n/**\n * @publicApi\n */\nvar DebugElement = DebugElement__POST_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * @publicApi\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        // Keeps track of the used records at any point in time (during & across `_check()` calls)\n        this._linkedRecords = null;\n        // Keeps track of the removed records at any point in time during `_check()` calls.\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        // Keeps track of records where custom track by is the same, but item identity has changed\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var nextIt = this._itHead;\n        var nextRemove = this._removalsHead;\n        var addRemoveOffset = 0;\n        var moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var record = !nextRemove ||\n                nextIt &&\n                    nextIt.currentIndex <\n                        getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                nextIt :\n                nextRemove;\n            var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = nextIt._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var localCurrentIndex = currentIndex - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var i = 0; i < localMovePreviousIndex; i++) {\n                            var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var record = this._itHead;\n        var mayBeDirty = false;\n        var index;\n        var item;\n        var itemTrackBy;\n        if (Array.isArray(collection)) {\n            this.length = collection.length;\n            for (var index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this.length = index;\n        }\n        this._truncate(record);\n        this.collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            var nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n        var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, record._prev, index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._truncate = function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var prev = record._prevRemoved;\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n        // TODO(vicb):\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._remove = function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._unlink = function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var prev = record._prev;\n        var next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prevDup = null;\n        /** @internal */\n        this._nextDup = null;\n        /** @internal */\n        this._prevRemoved = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextMoved = null;\n        /** @internal */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /** @internal */\n        this._head = null;\n        /** @internal */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    _DuplicateItemRecordList.prototype.add = function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n        var record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    _DuplicateItemRecordList.prototype.remove = function (record) {\n        // TODO(vicb):\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var prev = record._prevDup;\n        var next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    _DuplicateMap.prototype.put = function (record) {\n        var key = record.trackById;\n        var duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n        var key = trackById;\n        var recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    _DuplicateMap.prototype.remove = function (record) {\n        var key = record.trackById;\n        var recordList = this.map.get(key);\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        // _appendAfter is used in the check loop\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n        if (before) {\n            var prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var record_1 = this._records.get(key);\n            this._maybeAddToChanges(record_1, value);\n            var prev = record_1._prev;\n            var next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    // Add the record or a given key to the list of changes only when the value has actually changed\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            this._additionsTail._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            this._changesTail._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n * @publicApi\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    IterableDiffers.extend = function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    IterableDiffers.prototype.find = function (iterable) {\n        var factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    /** @nocollapse */\n    IterableDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n    });\n    return IterableDiffers;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n * @publicApi\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    KeyValueDiffers.extend = function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    KeyValueDiffers.prototype.find = function (kv) {\n        var factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    /** @nocollapse */\n    KeyValueDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n    });\n    return KeyValueDiffers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * @publicApi\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @publicApi\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @publicApi\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @publicApi\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the [i18n guide](guide/i18n#missing-translation) for more information.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @publicApi\n */\nvar MissingTranslationStrategy;\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(MissingTranslationStrategy || (MissingTranslationStrategy = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * A built-in [dependency injection token](guide/glossary#di-token)\n * that is used to configure the root injector for bootstrapping.\n */\nvar APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n    },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n];\n/**\n * Configures the root injector for an app with\n * providers of `@angular/core` dependencies that `ApplicationRef` needs\n * to bootstrap components.\n *\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * @publicApi\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule = __decorate([\n        __metadata(\"design:paramtypes\", [ApplicationRef])\n    ], ApplicationModule);\n/*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n        type: NgModule,\n        args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n    }], function () { return [{\n        type: ApplicationRef\n    }]; }, null);\nApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\nApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n    return ApplicationModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SWITCH_IVY_ENABLED__POST_R3__ = true;\nvar SWITCH_IVY_ENABLED__PRE_R3__ = false;\nvar ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var state = view.state;\n    var initState = state & 1792 /* InitState_Mask */;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asTextData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asElementData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asProviderData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asPureExpressionData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asQueryList(view, index) {\n    return view.nodes[index];\n}\nvar DebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: undefined,\n    createRootView: undefined,\n    createEmbeddedView: undefined,\n    createComponentView: undefined,\n    createNgModuleRef: undefined,\n    overrideProvider: undefined,\n    overrideComponentView: undefined,\n    clearOverrides: undefined,\n    checkAndUpdateView: undefined,\n    checkNoChangesView: undefined,\n    destroyView: undefined,\n    resolveDep: undefined,\n    createDebugContext: undefined,\n    handleEvent: undefined,\n    updateDirectives: undefined,\n    updateRenderer: undefined,\n    dirtyParentQueries: undefined,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\nfunction viewDebugError(msg, context) {\n    var err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\nfunction _addDebugContext(err, context) {\n    err[ERROR_DEBUG_CONTEXT] = context;\n    err[ERROR_LOGGER] = context.logError.bind(context);\n}\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\nfunction tokenKey(token) {\n    var key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\nfunction unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount$1 = 0;\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount$1++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\nfunction checkBinding(view, def, bindingIdx, value) {\n    var oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction markParentViewsForCheck(view) {\n    var currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var nodeDef = view.def.nodes[nodeIndex];\n        var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var parentView = view.parent;\n        return asElementData(parentView, view.parentNodeDef.nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nfunction viewParentEl(view) {\n    var parentView = view.parent;\n    if (parentView) {\n        return view.parentNodeDef.parent;\n    }\n    else {\n        return null;\n    }\n}\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\nfunction isComponentView(view) {\n    return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var matchedQueries = {};\n    var matchedQueryIds = 0;\n    var references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var _a;\n        var token;\n        var flags;\n        if (Array.isArray(value)) {\n            _a = __read(value, 2), flags = _a[0], token = _a[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\nfunction getParentRenderElement(view, renderHost, def) {\n    var renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (renderParent.element.componentRendererType &&\n                renderParent.element.componentRendererType.encapsulation ===\n                    ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, def.renderParent.nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\nfunction resolveDefinition(factory) {\n    var value = DEFINITION_CACHE.get(factory);\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\nfunction rootRenderNodes(view) {\n    var renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var hostView = compView.parent;\n    var hostElDef = viewParentEl(compView);\n    var startIndex = hostElDef.nodeIndex + 1;\n    var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = hostView.def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!hostView.parent) {\n        // a root view\n        var projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            target.push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\nfunction calcBindingFlags(bindings) {\n    var flags = 0;\n    for (var i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\nfunction interpolate(valueCount, constAndInterp) {\n    var result = '';\n    for (var i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY$4 = [];\nvar EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    var _a;\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n    var ns = null;\n    var name = null;\n    if (namespaceAndName) {\n        _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n    }\n    bindings = bindings || [];\n    var bindingDefs = new Array(bindings.length);\n    for (var i = 0; i < bindings.length; i++) {\n        var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n        var securityContext = undefined;\n        var suffix = undefined;\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = suffixOrSecurityContext;\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = suffixOrSecurityContext;\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var outputDefs = new Array(outputs.length);\n    for (var i = 0; i < outputs.length; i++) {\n        var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: target, eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var attrs = fixedAttrs.map(function (_a) {\n        var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n        var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n        return [ns, name, value];\n    });\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createElement(view, renderHost, def) {\n    var elDef = def.element;\n    var rootSelectorOrNode = view.root.selectorOrNode;\n    var renderer = view.renderer;\n    var el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n        var preserveContent = (!!elDef.componentRendererType &&\n            elDef.componentRendererType.encapsulation === ViewEncapsulation.ShadowDom);\n        el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n    }\n    if (elDef.attrs) {\n        for (var i = 0; i < elDef.attrs.length; i++) {\n            var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var i = 0; i < def.outputs.length; i++) {\n        var output = def.outputs[i];\n        var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var listenTarget = output.target;\n        var listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n        view.disposables[def.outputIndex + i] = disposable;\n    }\n}\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = def.bindings.length;\n    var changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var binding = def.bindings[bindingIdx];\n    var elData = asElementData(view, def.nodeIndex);\n    var renderNode$$1 = elData.renderElement;\n    var name = binding.name;\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, value);\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar INJECTORRefTokenKey = tokenKey(INJECTOR$1);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\nfunction moduleDef(providers) {\n    var providersByKey = {};\n    var modules = [];\n    var isRoot = false;\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        if (provider.token === APP_ROOT && provider.value === true) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\nfunction initNgModule(data) {\n    var def = data._def;\n    var providers = data._providers = new Array(def.providers.length);\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance(data, provDef);\n            }\n        }\n    }\n}\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    var former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        var tokenKey_1 = depDef.tokenKey;\n        switch (tokenKey_1) {\n            case InjectorRefTokenKey:\n            case INJECTORRefTokenKey:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        var providerDef = data._def.providersByKey[tokenKey_1];\n        var injectableDef = void 0;\n        if (providerDef) {\n            var providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n            var index = data._providers.length;\n            data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index: index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        else if (depDef.flags & 4 /* Self */) {\n            return notFoundValue;\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\nfunction _createProviderInstance(ngModule, providerDef) {\n    var injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\nfunction _createClass(ngModule, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction _callFactory(ngModule, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var def = ngModule._def;\n    var destroyed = new Set();\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                var onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, viewIndex, view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\nfunction attachProjectedView(vcElementData, view) {\n    var dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n}\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    var view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n        elementData.renderElement;\n    var parentNode = view.renderer.parentNode(prevRenderNode);\n    var nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return componentFactory.viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: function () {\n            var inputsArr = [];\n            var inputs = this._inputs;\n            for (var propName in inputs) {\n                var templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: function () {\n            var outputsArr = [];\n            for (var propName in this._outputs) {\n                var templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var viewDef = resolveDefinition(this.viewDefFactory);\n        var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n        var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: function () { return this._component.constructor; },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * @internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        /** @deprecated No replacement */\n        get: function () {\n            var view = this._view;\n            var elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = view.parent;\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.clear = function () {\n        var len = this._embeddedViews.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var view = detachEmbeddedView(this._data, i);\n            Services.destroyView(view);\n        }\n    };\n    ViewContainerRef_.prototype.get = function (index) {\n        var view = this._embeddedViews[index];\n        if (view) {\n            var ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var viewRef_ = viewRef;\n        var viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(viewRef._view);\n    };\n    ViewContainerRef_.prototype.remove = function (index) {\n        var viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    ViewContainerRef_.prototype.detach = function (index) {\n        var view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n    ViewRef_.prototype.detectChanges = function () {\n        var fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(callback);\n    };\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nfunction nodeValue(view, index) {\n    var def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var elData = asElementData(view, def.nodeIndex);\n        return def.element.template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        var el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var parentElement = this.delegate.parentNode(node);\n        var nextSibling = this.delegate.nextSibling(node);\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            var node = viewRootNodes[i];\n            var parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var i = 0; i < viewAllNodes.length; i++) {\n            this.delegate.destroyNode(viewAllNodes[i]);\n        }\n    };\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, callback);\n    };\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, callback);\n    };\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        renderElement[methodName].apply(renderElement, args);\n    };\n    RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = InjectFlags.Default; }\n        var flags = 0 /* None */;\n        if (injectFlags & InjectFlags.SkipSelf) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & InjectFlags.Self) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var bindings = [];\n    if (props) {\n        for (var prop in props) {\n            var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var outputDefs = [];\n    if (outputs) {\n        for (var propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance$1(view, def);\n}\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n}\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n    if (def.outputs.length) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var outputObservable = instance[output.propName];\n            if (isObservable(outputObservable)) {\n                var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n            else {\n                throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n            }\n        }\n    }\n    return instance;\n}\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    var bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    for (var i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction _createProviderInstance$1(view, def) {\n    // private services can see other private services\n    var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n        case 256 /* TypeValueProvider */:\n            return providerDef.value;\n    }\n}\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && elDef.element.componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = elDef.parent;\n    }\n    var searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (elDef.element.template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey$1:\n                case INJECTORRefTokenKey$1:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                        elDef.element.publicProviders)[tokenKey$$1];\n                    if (providerDef_1) {\n                        var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = viewParentEl(searchView);\n        searchView = searchView.parent;\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var compView = asElementData(view, def.parent.nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var binding = def.bindings[bindingIdx];\n    var propName = binding.name;\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var binding_1 = def.bindings[bindingIdx];\n        changes[binding_1.nonMinifiedName] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var nodes = view.def.nodes;\n    var initIndex = 0;\n    for (var i = 0; i < nodes.length; i++) {\n        var nodeDef = nodes[i];\n        var parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction queryDef(flags, id, bindings) {\n    var bindingDefs = [];\n    for (var propName in bindings) {\n        var bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\nfunction createQuery$1() {\n    return new QueryList$1();\n}\nfunction dirtyParentQueries(view) {\n    var queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var tplDef = view.parentNodeDef;\n        view = view.parent;\n        // content queries\n        var end = tplDef.nodeIndex + tplDef.childCount;\n        for (var i = 0; i <= end; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var i = 0; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var directiveInstance;\n    var newValues = undefined;\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var elementDef = nodeDef.parent.parent;\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n        directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var bindings = nodeDef.query.bindings;\n    var notify = false;\n    for (var i = 0; i < bindings.length; i++) {\n        var binding = bindings[i];\n        var boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        var valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n            (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = elementData.viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    var embeddedView = embeddedViews[k];\n                    var dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var k = 0; k < projectedViews.length; k++) {\n                    var projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\nfunction appendNgContent(view, renderHost, def) {\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var ngContentIndex = def.ngContent.index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var keys = Object.keys(propToIndex);\n    var nbKeys = keys.length;\n    var propertyNames = new Array(nbKeys);\n    for (var i = 0; i < nbKeys; i++) {\n        var key = keys[i];\n        var index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var bindings = new Array(propertyNames.length);\n    for (var i = 0; i < propertyNames.length; i++) {\n        var prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindings = def.bindings;\n    var changed = false;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[bindings[0].name] = v0;\n                if (bindLen > 1)\n                    value[bindings[1].name] = v1;\n                if (bindLen > 2)\n                    value[bindings[2].name] = v2;\n                if (bindLen > 3)\n                    value[bindings[3].name] = v3;\n                if (bindLen > 4)\n                    value[bindings[4].name] = v4;\n                if (bindLen > 5)\n                    value[bindings[5].name] = v5;\n                if (bindLen > 6)\n                    value[bindings[6].name] = v6;\n                if (bindLen > 7)\n                    value[bindings[7].name] = v7;\n                if (bindLen > 8)\n                    value[bindings[8].name] = v8;\n                if (bindLen > 9)\n                    value[bindings[9].name] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var i = 0; i < values.length; i++) {\n                    value[bindings[i].name] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = values[0];\n                var params = values.slice(1);\n                value = pipe.transform.apply(pipe, __spread(params));\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var bindings = new Array(staticText.length - 1);\n    for (var i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\nfunction createText(view, renderHost, def) {\n    var renderNode$$1;\n    var renderer = view.renderer;\n    renderNode$$1 = renderer.createText(def.text.prefix);\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var changed = false;\n    var bindings = def.bindings;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var value = def.text.prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var value = '';\n        for (var i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = def.text.prefix + value;\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction _addInterpolationPart(value, binding) {\n    var valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var viewBindingCount = 0;\n    var viewDisposableCount = 0;\n    var viewNodeFlags = 0;\n    var viewRootNodeFlags = 0;\n    var viewMatchedQueries = 0;\n    var currentParent = null;\n    var currentRenderParent = null;\n    var currentElementHasPublicProviders = false;\n    var currentElementHasPrivateProviders = false;\n    var lastRenderRootNode = null;\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? currentParent.element.publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true;\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent.element.publicProviders =\n                    Object.create(currentParent.element.publicProviders);\n                currentParent.element.allProviders = currentParent.element.publicProviders;\n            }\n            var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.allProviders =\n                        Object.create(currentParent.element.publicProviders);\n                }\n                currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n            }\n            if (isComponent) {\n                currentParent.element.componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var handleEvent = function (view, nodeIndex, eventName, event) {\n        return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n    };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n}\nfunction validateNode(parent, node, nodeCount) {\n    var template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createRootView(root, def, context) {\n    var view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var rendererType = nodeDef.element.componentRendererType;\n    var compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n}\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var nodes = new Array(def.nodes.length);\n    var disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\nfunction createViewNodes(view) {\n    var renderHost;\n    if (isComponentView(view)) {\n        var hostDef = view.parentNodeDef;\n        renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n    }\n    var def = view.def;\n    var nodes = view.nodes;\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var el = createElement(view, renderHost, nodeDef);\n                var componentView = undefined;\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = {\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                };\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = createText(view, renderHost, nodeDef);\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var instance = createProviderInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var instance = createPipeInstance(view, nodeDef);\n                nodeData = { instance: instance };\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = createPureExpression(view, nodeDef);\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = createQuery$1();\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\nfunction markProjectedViewsForCheck(view) {\n    var def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\nfunction destroyViewNodes(view) {\n    var len = view.def.nodes.length;\n    for (var i = 0; i < len; i++) {\n        var def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            view.renderer.destroyNode(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            view.renderer.destroyNode(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\nvar ViewAction;\n(function (ViewAction) {\n    ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n    ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n    ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n    ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n    ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n    ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n})(ViewAction || (ViewAction = {}));\nfunction execComponentViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction execEmbeddedViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction callViewAction(view, action) {\n    var viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var nodeCount = view.def.nodes.length;\n    for (var i = 0; i < nodeCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var sanitizer = ngModule.injector.get(Sanitizer);\n    var errorHandler = ngModule.injector.get(ErrorHandler);\n    var renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar providerOverridesWithScope = new Map();\nvar viewDefOverrides = new Map();\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    var injectableDef;\n    if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n        typeof injectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(override.token, override);\n    }\n}\nfunction debugOverrideComponentView(comp, compFactory) {\n    var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n    viewDefOverrides.set(comp, compViewDef);\n}\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var elIndicesWithOverwrittenProviders = [];\n        var lastElementDef = null;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(nodeDef.provider.token)) {\n                elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var provider = nodeDef.provider;\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    function calcHasOverrides(def) {\n        var hasOverrides = false;\n        var hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(function (module) {\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (getInjectableDef(token).providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    function applyProviderOverrides(def) {\n        for (var i = 0; i < def.providers.length; i++) {\n            var provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            var moduleSet_1 = new Set(def.modules);\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                    var provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction;\n(function (DebugAction) {\n    DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n    DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n    DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n    DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n    DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n})(DebugAction || (DebugAction = {}));\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n    if (changed) {\n        var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var bindingValues = {};\n            for (var i = 0; i < nodeDef.bindings.length; i++) {\n                var binding = nodeDef.bindings[i];\n                var value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var elDef = nodeDef.parent;\n            var el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!elDef.element.name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var attr in bindingValues) {\n                    var value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n}\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var elDef = this.nodeDef;\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = elDef.parent;\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = viewParentEl(elView);\n                elView = elView.parent;\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: function () { return createInjector$1(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: function () {\n            var tokens = [];\n            if (this.elDef) {\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(childDef.provider.token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: function () {\n            var references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: function () {\n            var elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var logViewDef;\n        var logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var currRenderNodeIndex = -1;\n        var nodeLogger = function () {\n            var _a;\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, __spread([console], values));\n            }\n            else {\n                return NOOP;\n            }\n        };\n        logViewDef.factory(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, __spread(values));\n        }\n    };\n    return DebugContext_;\n}());\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var renderNodeIndex = -1;\n    for (var i = 0; i <= nodeIndex; i++) {\n        var nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = view.parent;\n    }\n    if (view.parent) {\n        return asElementData(view.parent, viewParentEl(view).nodeIndex);\n    }\n    return null;\n}\nfunction collectReferences(view, nodeDef, references) {\n    for (var refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\nfunction callWithDebugContext(action, fn, self, args) {\n    var oldAction = _currentAction;\n    var oldView = _currentView;\n    var oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, getCurrentDebugContext());\n    }\n}\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    DebugRendererFactory2.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    DebugRendererFactory2.prototype.end = function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    DebugRendererFactory2.prototype.whenRenderingDone = function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        /**\n         * Factory function used to create a `DebugContext` when a node is created.\n         *\n         * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n         *\n         * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n         * or a Render context.\n         */\n        this.debugContextFactory = getCurrentDebugContext;\n        this.data = this.delegate.data;\n    }\n    DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        removeDebugNodeFromIndex(getDebugNode(node));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var el = this.delegate.createElement(name, namespace);\n        var debugCtx = this.createDebugContext(el);\n        if (debugCtx) {\n            var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.createComment = function (value) {\n        var comment = this.delegate.createComment(value);\n        var debugCtx = this.createDebugContext(comment);\n        if (debugCtx) {\n            indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    DebugRenderer2.prototype.createText = function (value) {\n        var text = this.delegate.createText(value);\n        var debugCtx = this.createDebugContext(text);\n        if (debugCtx) {\n            indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n        }\n        return text;\n    };\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        var debugRefEl = getDebugNode(refChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n        var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nfunction cloneNgModuleDefinition(def) {\n    var providers = Array.from(def.providers);\n    var modules = Array.from(def.modules);\n    var providersByKey = {};\n    for (var key in def.providersByKey) {\n        providersByKey[key] = def.providersByKey[key];\n    }\n    return {\n        factory: def.factory,\n        isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n    };\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    NgModuleFactory_.prototype.create = function (parentInjector) {\n        initServicesIfNeeded();\n        // Clone the NgModuleDefinition so that any tree shakeable provider definition\n        // added to this instance of the NgModuleRef doesn't affect the cached copy.\n        // See https://github.com/angular/angular/issues/25018.\n        var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format on\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APPLICATION_MODULE_PROVIDERS as ɵangular_packages_core_core_s, _iterableDiffersFactory as ɵangular_packages_core_core_p, _keyValueDiffersFactory as ɵangular_packages_core_core_q, _localeFactory as ɵangular_packages_core_core_r, _appIdRandomProviderFactory as ɵangular_packages_core_core_g, DefaultIterableDifferFactory as ɵangular_packages_core_core_n, DefaultKeyValueDifferFactory as ɵangular_packages_core_core_o, DebugElement__PRE_R3__ as ɵangular_packages_core_core_m, DebugNode__PRE_R3__ as ɵangular_packages_core_core_l, injectInjectorOnly as ɵangular_packages_core_core_c, ReflectiveInjector_ as ɵangular_packages_core_core_d, ReflectiveDependency as ɵangular_packages_core_core_e, resolveReflectiveProviders as ɵangular_packages_core_core_f, getModuleFactory__PRE_R3__ as ɵangular_packages_core_core_k, wtfEnabled as ɵangular_packages_core_core_t, createScope as ɵangular_packages_core_core_v, detectWTF as ɵangular_packages_core_core_u, endTimeRange as ɵangular_packages_core_core_y, leave as ɵangular_packages_core_core_w, startTimeRange as ɵangular_packages_core_core_x, injectAttributeImpl as ɵangular_packages_core_core_bb, NG_INJECTABLE_DEF as ɵangular_packages_core_core_bi, getLView as ɵangular_packages_core_core_bc, getPreviousOrParentTNode as ɵangular_packages_core_core_bd, nextContextImpl as ɵangular_packages_core_core_be, BoundPlayerFactory as ɵangular_packages_core_core_bh, loadInternal as ɵangular_packages_core_core_bl, createElementRef as ɵangular_packages_core_core_h, createTemplateRef as ɵangular_packages_core_core_i, createViewRef as ɵangular_packages_core_core_j, makeParamDecorator as ɵangular_packages_core_core_a, makePropDecorator as ɵangular_packages_core_core_b, getClosureSafeProperty as ɵangular_packages_core_core_bj, _def as ɵangular_packages_core_core_z, DebugContext as ɵangular_packages_core_core_ba, createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, createPlatformFactory, NgProbeToken, enableProdMode, isDevMode, APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationInitStatus, DebugElement, DebugNode, asNativeElements, getDebugNode, Testability, TestabilityRegistry, setTestabilityGetter, TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy, ApplicationModule, wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, Type, EventEmitter, ErrorHandler, Sanitizer, SecurityContext, ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren, Component, Directive, HostBinding, HostListener, Input, Output, Pipe, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule, ViewEncapsulation, Version, VERSION, defineInjectable, defineInjector, forwardRef, resolveForwardRef, Injectable, INJECTOR$1 as INJECTOR, Injector, inject, InjectFlags, ReflectiveInjector, createInjector, ResolvedReflectiveFactory, ReflectiveKey, InjectionToken, Inject, Optional, Self, SkipSelf, Host, NgZone, NoopNgZone as ɵNoopNgZone, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer, COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories, ComponentFactory, ComponentRef, ComponentFactoryResolver, ElementRef, NgModuleFactory, NgModuleRef, NgModuleFactoryLoader, getModuleFactory, QueryList$1 as QueryList, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TemplateRef, ViewContainerRef, EmbeddedViewRef, ViewRef$1 as ViewRef, ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue, platformCore, ALLOW_MULTIPLE_PLATFORMS as ɵALLOW_MULTIPLE_PLATFORMS, APP_ID_RANDOM_PROVIDER as ɵAPP_ID_RANDOM_PROVIDER, defaultIterableDiffers as ɵdefaultIterableDiffers, defaultKeyValueDiffers as ɵdefaultKeyValueDiffers, devModeEqual as ɵdevModeEqual, isListLikeIterable as ɵisListLikeIterable, ChangeDetectorStatus as ɵChangeDetectorStatus, isDefaultChangeDetectionStrategy as ɵisDefaultChangeDetectionStrategy, Console as ɵConsole, getInjectableDef as ɵgetInjectableDef, inject as ɵinject, setCurrentInjector as ɵsetCurrentInjector, APP_ROOT as ɵAPP_ROOT, ivyEnabled as ɵivyEnabled, ComponentFactory as ɵComponentFactory, CodegenComponentFactoryResolver as ɵCodegenComponentFactoryResolver, resolveComponentResources as ɵresolveComponentResources, ReflectionCapabilities as ɵReflectionCapabilities, RenderDebugInfo as ɵRenderDebugInfo, _sanitizeHtml as ɵ_sanitizeHtml, _sanitizeStyle as ɵ_sanitizeStyle, _sanitizeUrl as ɵ_sanitizeUrl, _global as ɵglobal, looseIdentical as ɵlooseIdentical, stringify as ɵstringify, makeDecorator as ɵmakeDecorator, isObservable as ɵisObservable, isPromise as ɵisPromise, clearOverrides as ɵclearOverrides, initServicesIfNeeded as ɵinitServicesIfNeeded, overrideComponentView as ɵoverrideComponentView, overrideProvider as ɵoverrideProvider, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 as ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, defineBase as ɵdefineBase, defineComponent as ɵdefineComponent, defineDirective as ɵdefineDirective, definePipe as ɵdefinePipe, defineNgModule as ɵdefineNgModule, detectChanges as ɵdetectChanges, renderComponent as ɵrenderComponent, ComponentFactory$1 as ɵRender3ComponentFactory, ComponentRef$1 as ɵRender3ComponentRef, directiveInject as ɵdirectiveInject, injectAttribute as ɵinjectAttribute, getFactoryOf as ɵgetFactoryOf, getInheritedFactory as ɵgetInheritedFactory, templateRefExtractor as ɵtemplateRefExtractor, ProvidersFeature as ɵProvidersFeature, InheritDefinitionFeature as ɵInheritDefinitionFeature, NgOnChangesFeature as ɵNgOnChangesFeature, LifecycleHooksFeature as ɵLifecycleHooksFeature, NgModuleRef$1 as ɵRender3NgModuleRef, markDirty as ɵmarkDirty, NgModuleFactory$1 as ɵNgModuleFactory, NO_CHANGE as ɵNO_CHANGE, container as ɵcontainer, nextContext as ɵnextContext, elementStart as ɵelementStart, namespaceHTML as ɵnamespaceHTML, namespaceMathML as ɵnamespaceMathML, namespaceSVG as ɵnamespaceSVG, element as ɵelement, listener as ɵlistener, text as ɵtext, embeddedViewStart as ɵembeddedViewStart, query as ɵquery, registerContentQuery as ɵregisterContentQuery, projection as ɵprojection, bind as ɵbind, interpolation1 as ɵinterpolation1, interpolation2 as ɵinterpolation2, interpolation3 as ɵinterpolation3, interpolation4 as ɵinterpolation4, interpolation5 as ɵinterpolation5, interpolation6 as ɵinterpolation6, interpolation7 as ɵinterpolation7, interpolation8 as ɵinterpolation8, interpolationV as ɵinterpolationV, pipeBind1 as ɵpipeBind1, pipeBind2 as ɵpipeBind2, pipeBind3 as ɵpipeBind3, pipeBind4 as ɵpipeBind4, pipeBindV as ɵpipeBindV, pureFunction0 as ɵpureFunction0, pureFunction1 as ɵpureFunction1, pureFunction2 as ɵpureFunction2, pureFunction3 as ɵpureFunction3, pureFunction4 as ɵpureFunction4, pureFunction5 as ɵpureFunction5, pureFunction6 as ɵpureFunction6, pureFunction7 as ɵpureFunction7, pureFunction8 as ɵpureFunction8, pureFunctionV as ɵpureFunctionV, getCurrentView as ɵgetCurrentView, getHostElement as ɵgetHostElement, restoreView as ɵrestoreView, containerRefreshStart as ɵcontainerRefreshStart, containerRefreshEnd as ɵcontainerRefreshEnd, queryRefresh as ɵqueryRefresh, loadQueryList as ɵloadQueryList, elementEnd as ɵelementEnd, elementProperty as ɵelementProperty, componentHostSyntheticProperty as ɵcomponentHostSyntheticProperty, projectionDef as ɵprojectionDef, reference as ɵreference, enableBindings as ɵenableBindings, disableBindings as ɵdisableBindings, allocHostVars as ɵallocHostVars, elementAttribute as ɵelementAttribute, elementContainerStart as ɵelementContainerStart, elementContainerEnd as ɵelementContainerEnd, elementStyling as ɵelementStyling, elementHostAttrs as ɵelementHostAttrs, elementStylingMap as ɵelementStylingMap, elementStyleProp as ɵelementStyleProp, elementStylingApply as ɵelementStylingApply, elementClassProp as ɵelementClassProp, textBinding as ɵtextBinding, template as ɵtemplate, embeddedViewEnd as ɵembeddedViewEnd, store as ɵstore, load as ɵload, pipe as ɵpipe, whenRendered as ɵwhenRendered, i18n as ɵi18n, i18nAttributes as ɵi18nAttributes, i18nExp as ɵi18nExp, i18nStart as ɵi18nStart, i18nEnd as ɵi18nEnd, i18nApply as ɵi18nApply, i18nPostprocess as ɵi18nPostprocess, setClassMetadata as ɵsetClassMetadata, compileComponent as ɵcompileComponent, compileDirective as ɵcompileDirective, compileNgModule as ɵcompileNgModule, compileNgModuleDefs as ɵcompileNgModuleDefs, patchComponentDefWithScope as ɵpatchComponentDefWithScope, resetCompiledComponents as ɵresetCompiledComponents, compilePipe as ɵcompilePipe, sanitizeHtml as ɵsanitizeHtml, sanitizeStyle as ɵsanitizeStyle, sanitizeUrl as ɵsanitizeUrl, sanitizeResourceUrl as ɵsanitizeResourceUrl, bypassSanitizationTrustHtml as ɵbypassSanitizationTrustHtml, bypassSanitizationTrustStyle as ɵbypassSanitizationTrustStyle, bypassSanitizationTrustScript as ɵbypassSanitizationTrustScript, bypassSanitizationTrustUrl as ɵbypassSanitizationTrustUrl, bypassSanitizationTrustResourceUrl as ɵbypassSanitizationTrustResourceUrl, getLContext as ɵgetLContext, bindPlayerFactory as ɵbindPlayerFactory, addPlayer as ɵaddPlayer, getPlayers as ɵgetPlayers, compileNgModuleFactory__POST_R3__ as ɵcompileNgModuleFactory__POST_R3__, SWITCH_COMPILE_COMPONENT__POST_R3__ as ɵSWITCH_COMPILE_COMPONENT__POST_R3__, SWITCH_COMPILE_DIRECTIVE__POST_R3__ as ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__, SWITCH_COMPILE_PIPE__POST_R3__ as ɵSWITCH_COMPILE_PIPE__POST_R3__, SWITCH_COMPILE_NGMODULE__POST_R3__ as ɵSWITCH_COMPILE_NGMODULE__POST_R3__, getDebugNode__POST_R3__ as ɵgetDebugNode__POST_R3__, SWITCH_COMPILE_INJECTABLE__POST_R3__ as ɵSWITCH_COMPILE_INJECTABLE__POST_R3__, SWITCH_IVY_ENABLED__POST_R3__ as ɵSWITCH_IVY_ENABLED__POST_R3__, SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ as ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__, Compiler_compileModuleSync__POST_R3__ as ɵCompiler_compileModuleSync__POST_R3__, Compiler_compileModuleAsync__POST_R3__ as ɵCompiler_compileModuleAsync__POST_R3__, Compiler_compileModuleAndAllComponentsSync__POST_R3__ as ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__, Compiler_compileModuleAndAllComponentsAsync__POST_R3__ as ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__, SWITCH_ELEMENT_REF_FACTORY__POST_R3__ as ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__, SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ as ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__, SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ as ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__, SWITCH_RENDERER2_FACTORY__POST_R3__ as ɵSWITCH_RENDERER2_FACTORY__POST_R3__, getModuleFactory__POST_R3__ as ɵgetModuleFactory__POST_R3__, publishGlobalUtil as ɵpublishGlobalUtil, publishDefaultGlobalUtils as ɵpublishDefaultGlobalUtils, SWITCH_INJECTOR_FACTORY__POST_R3__ as ɵSWITCH_INJECTOR_FACTORY__POST_R3__, registerModuleFactory as ɵregisterModuleFactory, EMPTY_ARRAY$4 as ɵEMPTY_ARRAY, EMPTY_MAP as ɵEMPTY_MAP, anchorDef as ɵand, createComponentFactory as ɵccf, createNgModuleFactory as ɵcmf, createRendererType2 as ɵcrt, directiveDef as ɵdid, elementDef as ɵeld, elementEventFullName as ɵelementEventFullName, getComponentViewDefinitionFactory as ɵgetComponentViewDefinitionFactory, inlineInterpolate as ɵinlineInterpolate, interpolate as ɵinterpolate, moduleDef as ɵmod, moduleProvideDef as ɵmpd, ngContentDef as ɵncd, nodeValue as ɵnov, pipeDef as ɵpid, providerDef as ɵprd, pureArrayDef as ɵpad, pureObjectDef as ɵpod, purePipeDef as ɵppd, queryDef as ɵqud, textDef as ɵted, unwrapValue$1 as ɵunv, viewDef as ɵvid };\n\n//# sourceMappingURL=/ivy-bundle-size/node_modules/@angular/core/fesm5/core.js.map","/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(fromArray(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n","/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isPromise,_util_isArrayLike,_util_isInteropObservable,_util_isIterable,_fromArray,_fromPromise,_fromIterable,_fromObservable,_util_subscribeTo PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isIterable } from '../util/isIterable';\nimport { fromArray } from './fromArray';\nimport { fromPromise } from './fromPromise';\nimport { fromIterable } from './fromIterable';\nimport { fromObservable } from './fromObservable';\nimport { subscribeTo } from '../util/subscribeTo';\nexport function from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable) {\n            return input;\n        }\n        return new Observable(subscribeTo(input));\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return fromPromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return fromArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return fromIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n//# sourceMappingURL=from.js.map\n","/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar MulticastOperator = /*@__PURE__*/ (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexport { MulticastOperator };\n//# sourceMappingURL=multicast.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license Angular v7.2.0\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { __extends, __assign, __spread, __values, __read } from 'tslib';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TagContentType;\n(function (TagContentType) {\n    TagContentType[TagContentType[\"RAW_TEXT\"] = 0] = \"RAW_TEXT\";\n    TagContentType[TagContentType[\"ESCAPABLE_RAW_TEXT\"] = 1] = \"ESCAPABLE_RAW_TEXT\";\n    TagContentType[TagContentType[\"PARSABLE_DATA\"] = 2] = \"PARSABLE_DATA\";\n})(TagContentType || (TagContentType = {}));\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n// `<ng-container>` tags work the same regardless the namespace\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n// `<ng-content>` tags work the same regardless the namespace\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n// `<ng-template>` tags work the same regardless the namespace\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = /** @class */ (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var lcParent = currentParent.toLowerCase();\n        var isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\nvar _DEFAULT_TAG_DEFINITION;\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS;\nfunction getHtmlTagDefinition(tagName) {\n    if (!TAG_DEFINITIONS) {\n        _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n        TAG_DEFINITIONS = {\n            'base': new HtmlTagDefinition({ isVoid: true }),\n            'meta': new HtmlTagDefinition({ isVoid: true }),\n            'area': new HtmlTagDefinition({ isVoid: true }),\n            'embed': new HtmlTagDefinition({ isVoid: true }),\n            'link': new HtmlTagDefinition({ isVoid: true }),\n            'img': new HtmlTagDefinition({ isVoid: true }),\n            'input': new HtmlTagDefinition({ isVoid: true }),\n            'param': new HtmlTagDefinition({ isVoid: true }),\n            'hr': new HtmlTagDefinition({ isVoid: true }),\n            'br': new HtmlTagDefinition({ isVoid: true }),\n            'source': new HtmlTagDefinition({ isVoid: true }),\n            'track': new HtmlTagDefinition({ isVoid: true }),\n            'wbr': new HtmlTagDefinition({ isVoid: true }),\n            'p': new HtmlTagDefinition({\n                closedByChildren: [\n                    'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset',\n                    'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5',\n                    'h6', 'header', 'hgroup', 'hr', 'main', 'nav', 'ol',\n                    'p', 'pre', 'section', 'table', 'ul'\n                ],\n                closedByParent: true\n            }),\n            'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n            'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n            'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n            'tr': new HtmlTagDefinition({\n                closedByChildren: ['tr'],\n                requiredParents: ['tbody', 'tfoot', 'thead'],\n                closedByParent: true\n            }),\n            'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n            'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n            'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n            'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n            'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n            'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n            'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n            'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n            'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n            'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n            'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n            'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n            'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n            'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n            'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n            'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n            'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n            'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n            'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n            'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n        };\n    }\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' + // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = /** @class */ (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        /**\n         * The selectors are encoded in pairs where:\n         * - even locations are attribute names\n         * - odd locations are attribute values.\n         *\n         * Example:\n         * Selector: `[key1=value1][key2]` would parse to:\n         * ```\n         * ['key1', 'value1', 'key2', '']\n         * ```\n         */\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    CssSelector.parse = function (selector) {\n        var results = [];\n        var _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var cssSelector = new CssSelector();\n        var match;\n        var current = cssSelector;\n        var inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    CssSelector.prototype.isElementSelector = function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n    CssSelector.prototype.setElement = function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    CssSelector.prototype.getMatchingElementTemplate = function () {\n        var tagName = this.element || 'div';\n        var classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var attrs = '';\n        for (var i = 0; i < this.attrs.length; i += 2) {\n            var attrName = this.attrs[i];\n            var attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    CssSelector.prototype.getAttrs = function () {\n        var result = [];\n        if (this.classNames.length > 0) {\n            result.push('class', this.classNames.join(' '));\n        }\n        return result.concat(this.attrs);\n    };\n    CssSelector.prototype.addAttribute = function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n    CssSelector.prototype.toString = function () {\n        var res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var i = 0; i < this.attrs.length; i += 2) {\n                var name_1 = this.attrs[i];\n                var value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = /** @class */ (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\n        var notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n        var listContext = null;\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param cssSelector A css selector\n     * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n     */\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n        var matcher = this;\n        var element = cssSelector.element;\n        var classNames = cssSelector.classNames;\n        var attrs = cssSelector.attrs;\n        var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var i = 0; i < classNames.length; i++) {\n                var isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i += 2) {\n                var isTerminal = i === attrs.length - 2;\n                var name_2 = attrs[i];\n                var value = attrs[i + 1];\n                if (isTerminal) {\n                    var terminalMap = matcher._attrValueMap;\n                    var terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var partialMap = matcher._attrValuePartialMap;\n                    var partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n        var terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    SelectorMatcher.prototype._addPartial = function (map, name) {\n        var matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n        var result = false;\n        var element = cssSelector.element;\n        var classNames = cssSelector.classNames;\n        var attrs = cssSelector.attrs;\n        for (var i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var i = 0; i < classNames.length; i++) {\n                var className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i += 2) {\n                var name_3 = attrs[i];\n                var value = attrs[i + 1];\n                var terminalValuesMap = this._attrValueMap.get(name_3);\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var partialValuesMap = this._attrValuePartialMap.get(name_3);\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var selectables = map.get(name) || [];\n        var starSelectables = map.get('*');\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var selectable;\n        var result = false;\n        for (var i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = /** @class */ (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\n// Store context to pass back selector and context when a selector is matched\nvar SelectorContext = /** @class */ (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\n        var result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc, ngInjectableDef: undefined }); });\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\nvar ViewEncapsulation;\n(function (ViewEncapsulation) {\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n})(ViewEncapsulation || (ViewEncapsulation = {}));\nvar ChangeDetectionStrategy;\n(function (ChangeDetectionStrategy) {\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(ChangeDetectionStrategy || (ChangeDetectionStrategy = {}));\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\nvar createInjectable = makeMetadataFactory('Injectable', function (injectable) {\n    if (injectable === void 0) { injectable = {}; }\n    return injectable;\n});\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\nvar SecurityContext;\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(SecurityContext || (SecurityContext = {}));\nvar MissingTranslationStrategy;\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(MissingTranslationStrategy || (MissingTranslationStrategy = {}));\nfunction makeMetadataFactory(name, props) {\n    var factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var values = props ? props.apply(void 0, __spread(args)) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\nfunction parserSelectorToSimpleSelector(selector) {\n    var classes = selector.classNames && selector.classNames.length ? __spread([8 /* CLASS */], selector.classNames) :\n        [];\n    var elementName = selector.element && selector.element !== '*' ? selector.element : '';\n    return __spread([elementName], selector.attrs, classes);\n}\nfunction parserSelectorToNegativeSelector(selector) {\n    var classes = selector.classNames && selector.classNames.length ? __spread([8 /* CLASS */], selector.classNames) :\n        [];\n    if (selector.element) {\n        return __spread([\n            1 /* NOT */ | 4 /* ELEMENT */, selector.element\n        ], selector.attrs, classes);\n    }\n    else if (selector.attrs.length) {\n        return __spread([1 /* NOT */ | 2 /* ATTRIBUTE */], selector.attrs, classes);\n    }\n    else {\n        return selector.classNames && selector.classNames.length ? __spread([1 /* NOT */ | 8 /* CLASS */], selector.classNames) :\n            [];\n    }\n}\nfunction parserSelectorToR3Selector(selector) {\n    var positive = parserSelectorToSimpleSelector(selector);\n    var negative = selector.notSelectors && selector.notSelectors.length ?\n        selector.notSelectors.map(function (notSelector) { return parserSelectorToNegativeSelector(notSelector); }) :\n        [];\n    return positive.concat.apply(positive, __spread(negative));\n}\nfunction parseSelectorToR3Selector(selector) {\n    return selector ? CssSelector.parse(selector).map(parserSelectorToR3Selector) : [];\n}\n\nvar core = /*#__PURE__*/Object.freeze({\n    createInject: createInject,\n    createInjectionToken: createInjectionToken,\n    createAttribute: createAttribute,\n    createContentChildren: createContentChildren,\n    createContentChild: createContentChild,\n    createViewChildren: createViewChildren,\n    createViewChild: createViewChild,\n    createDirective: createDirective,\n    get ViewEncapsulation () { return ViewEncapsulation; },\n    get ChangeDetectionStrategy () { return ChangeDetectionStrategy; },\n    createComponent: createComponent,\n    createPipe: createPipe,\n    createInput: createInput,\n    createOutput: createOutput,\n    createHostBinding: createHostBinding,\n    createHostListener: createHostListener,\n    createNgModule: createNgModule,\n    createInjectable: createInjectable,\n    CUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n    createOptional: createOptional,\n    createSelf: createSelf,\n    createSkipSelf: createSkipSelf,\n    createHost: createHost,\n    Type: Type,\n    get SecurityContext () { return SecurityContext; },\n    get MissingTranslationStrategy () { return MissingTranslationStrategy; },\n    parseSelectorToR3Selector: parseSelectorToR3Selector\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n//// Types\nvar TypeModifier;\n(function (TypeModifier) {\n    TypeModifier[TypeModifier[\"Const\"] = 0] = \"Const\";\n})(TypeModifier || (TypeModifier = {}));\nvar Type$1 = /** @class */ (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    Type.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n    return Type;\n}());\nvar BuiltinTypeName;\n(function (BuiltinTypeName) {\n    BuiltinTypeName[BuiltinTypeName[\"Dynamic\"] = 0] = \"Dynamic\";\n    BuiltinTypeName[BuiltinTypeName[\"Bool\"] = 1] = \"Bool\";\n    BuiltinTypeName[BuiltinTypeName[\"String\"] = 2] = \"String\";\n    BuiltinTypeName[BuiltinTypeName[\"Int\"] = 3] = \"Int\";\n    BuiltinTypeName[BuiltinTypeName[\"Number\"] = 4] = \"Number\";\n    BuiltinTypeName[BuiltinTypeName[\"Function\"] = 5] = \"Function\";\n    BuiltinTypeName[BuiltinTypeName[\"Inferred\"] = 6] = \"Inferred\";\n    BuiltinTypeName[BuiltinTypeName[\"None\"] = 7] = \"None\";\n})(BuiltinTypeName || (BuiltinTypeName = {}));\nvar BuiltinType = /** @class */ (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    BuiltinType.prototype.visitType = function (visitor, context) {\n        return visitor.visitBuiltinType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = /** @class */ (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers, typeParams) {\n        if (modifiers === void 0) { modifiers = null; }\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    ExpressionType.prototype.visitType = function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    ArrayType.prototype.visitType = function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = /** @class */ (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nvar NONE_TYPE = new BuiltinType(BuiltinTypeName.None);\n///// Expressions\nvar BinaryOperator;\n(function (BinaryOperator) {\n    BinaryOperator[BinaryOperator[\"Equals\"] = 0] = \"Equals\";\n    BinaryOperator[BinaryOperator[\"NotEquals\"] = 1] = \"NotEquals\";\n    BinaryOperator[BinaryOperator[\"Identical\"] = 2] = \"Identical\";\n    BinaryOperator[BinaryOperator[\"NotIdentical\"] = 3] = \"NotIdentical\";\n    BinaryOperator[BinaryOperator[\"Minus\"] = 4] = \"Minus\";\n    BinaryOperator[BinaryOperator[\"Plus\"] = 5] = \"Plus\";\n    BinaryOperator[BinaryOperator[\"Divide\"] = 6] = \"Divide\";\n    BinaryOperator[BinaryOperator[\"Multiply\"] = 7] = \"Multiply\";\n    BinaryOperator[BinaryOperator[\"Modulo\"] = 8] = \"Modulo\";\n    BinaryOperator[BinaryOperator[\"And\"] = 9] = \"And\";\n    BinaryOperator[BinaryOperator[\"Or\"] = 10] = \"Or\";\n    BinaryOperator[BinaryOperator[\"BitwiseAnd\"] = 11] = \"BitwiseAnd\";\n    BinaryOperator[BinaryOperator[\"Lower\"] = 12] = \"Lower\";\n    BinaryOperator[BinaryOperator[\"LowerEquals\"] = 13] = \"LowerEquals\";\n    BinaryOperator[BinaryOperator[\"Bigger\"] = 14] = \"Bigger\";\n    BinaryOperator[BinaryOperator[\"BiggerEquals\"] = 15] = \"BiggerEquals\";\n})(BinaryOperator || (BinaryOperator = {}));\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\nfunction areAllEquivalent(base, other) {\n    var len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nvar Expression = /** @class */ (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    Expression.prototype.prop = function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    Expression.prototype.key = function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    Expression.prototype.callMethod = function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    Expression.prototype.callFn = function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    Expression.prototype.instantiate = function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    Expression.prototype.equals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.notEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.identical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.minus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.plus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.divide = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.multiply = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.modulo = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.and = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.bitwiseAnd = function (rhs, sourceSpan, parens) {\n        if (parens === void 0) { parens = true; }\n        return new BinaryOperatorExpr(BinaryOperator.BitwiseAnd, this, rhs, null, sourceSpan, parens);\n    };\n    Expression.prototype.or = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.lower = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.bigger = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.isBlank = function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    Expression.prototype.cast = function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    Expression.prototype.toStmt = function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\nvar BuiltinVar;\n(function (BuiltinVar) {\n    BuiltinVar[BuiltinVar[\"This\"] = 0] = \"This\";\n    BuiltinVar[BuiltinVar[\"Super\"] = 1] = \"Super\";\n    BuiltinVar[BuiltinVar[\"CatchError\"] = 2] = \"CatchError\";\n    BuiltinVar[BuiltinVar[\"CatchStack\"] = 3] = \"CatchStack\";\n})(BuiltinVar || (BuiltinVar = {}));\nvar ReadVarExpr = /** @class */ (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = name;\n        }\n        return _this;\n    }\n    ReadVarExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    ReadVarExpr.prototype.isConstant = function () { return false; };\n    ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    ReadVarExpr.prototype.set = function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar TypeofExpr = /** @class */ (function (_super) {\n    __extends(TypeofExpr, _super);\n    function TypeofExpr(expr, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    TypeofExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitTypeofExpr(this, context);\n    };\n    TypeofExpr.prototype.isEquivalent = function (e) {\n        return e instanceof TypeofExpr && e.expr.isEquivalent(this.expr);\n    };\n    TypeofExpr.prototype.isConstant = function () { return this.expr.isConstant(); };\n    return TypeofExpr;\n}(Expression));\nvar WrappedNodeExpr = /** @class */ (function (_super) {\n    __extends(WrappedNodeExpr, _super);\n    function WrappedNodeExpr(node, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.node = node;\n        return _this;\n    }\n    WrappedNodeExpr.prototype.isEquivalent = function (e) {\n        return e instanceof WrappedNodeExpr && this.node === e.node;\n    };\n    WrappedNodeExpr.prototype.isConstant = function () { return false; };\n    WrappedNodeExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWrappedNodeExpr(this, context);\n    };\n    return WrappedNodeExpr;\n}(Expression));\nvar WriteVarExpr = /** @class */ (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    WriteVarExpr.prototype.isEquivalent = function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    WriteVarExpr.prototype.isConstant = function () { return false; };\n    WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    WriteVarExpr.prototype.toConstDecl = function () { return this.toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]); };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = /** @class */ (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    WriteKeyExpr.prototype.isEquivalent = function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    WriteKeyExpr.prototype.isConstant = function () { return false; };\n    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = /** @class */ (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    WritePropExpr.prototype.isEquivalent = function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    WritePropExpr.prototype.isConstant = function () { return false; };\n    WritePropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\nvar BuiltinMethod;\n(function (BuiltinMethod) {\n    BuiltinMethod[BuiltinMethod[\"ConcatArray\"] = 0] = \"ConcatArray\";\n    BuiltinMethod[BuiltinMethod[\"SubscribeObservable\"] = 1] = \"SubscribeObservable\";\n    BuiltinMethod[BuiltinMethod[\"Bind\"] = 2] = \"Bind\";\n})(BuiltinMethod || (BuiltinMethod = {}));\nvar InvokeMethodExpr = /** @class */ (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = method;\n        }\n        return _this;\n    }\n    InvokeMethodExpr.prototype.isEquivalent = function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    InvokeMethodExpr.prototype.isConstant = function () { return false; };\n    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = /** @class */ (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan, pure) {\n        if (pure === void 0) { pure = false; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        _this.pure = pure;\n        return _this;\n    }\n    InvokeFunctionExpr.prototype.isEquivalent = function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args) && this.pure === e.pure;\n    };\n    InvokeFunctionExpr.prototype.isConstant = function () { return false; };\n    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = /** @class */ (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    InstantiateExpr.prototype.isEquivalent = function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    InstantiateExpr.prototype.isConstant = function () { return false; };\n    InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = /** @class */ (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    LiteralExpr.prototype.isEquivalent = function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    LiteralExpr.prototype.isConstant = function () { return true; };\n    LiteralExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = /** @class */ (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    ExternalExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    ExternalExpr.prototype.isConstant = function () { return false; };\n    ExternalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = /** @class */ (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = /** @class */ (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    ConditionalExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    ConditionalExpr.prototype.isConstant = function () { return false; };\n    ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = /** @class */ (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    NotExpr.prototype.isEquivalent = function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    NotExpr.prototype.isConstant = function () { return false; };\n    NotExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = /** @class */ (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    AssertNotNull.prototype.isEquivalent = function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    AssertNotNull.prototype.isConstant = function () { return false; };\n    AssertNotNull.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = /** @class */ (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    CastExpr.prototype.isEquivalent = function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    CastExpr.prototype.isConstant = function () { return false; };\n    CastExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = /** @class */ (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    FnParam.prototype.isEquivalent = function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = /** @class */ (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan, name) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        _this.name = name;\n        return _this;\n    }\n    FunctionExpr.prototype.isEquivalent = function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    FunctionExpr.prototype.isConstant = function () { return false; };\n    FunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = /** @class */ (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan, parens) {\n        if (parens === void 0) { parens = true; }\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.parens = parens;\n        _this.lhs = lhs;\n        return _this;\n    }\n    BinaryOperatorExpr.prototype.isEquivalent = function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    BinaryOperatorExpr.prototype.isConstant = function () { return false; };\n    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = /** @class */ (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    ReadPropExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    ReadPropExpr.prototype.isConstant = function () { return false; };\n    ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    ReadPropExpr.prototype.set = function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = /** @class */ (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    ReadKeyExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    ReadKeyExpr.prototype.isConstant = function () { return false; };\n    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    ReadKeyExpr.prototype.set = function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = /** @class */ (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    LiteralArrayExpr.prototype.isConstant = function () { return this.entries.every(function (e) { return e.isConstant(); }); };\n    LiteralArrayExpr.prototype.isEquivalent = function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = /** @class */ (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    LiteralMapEntry.prototype.isEquivalent = function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = /** @class */ (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    LiteralMapExpr.prototype.isEquivalent = function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    LiteralMapExpr.prototype.isConstant = function () { return this.entries.every(function (e) { return e.value.isConstant(); }); };\n    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = /** @class */ (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    CommaExpr.prototype.isEquivalent = function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    CommaExpr.prototype.isConstant = function () { return false; };\n    CommaExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n//// Statements\nvar StmtModifier;\n(function (StmtModifier) {\n    StmtModifier[StmtModifier[\"Final\"] = 0] = \"Final\";\n    StmtModifier[StmtModifier[\"Private\"] = 1] = \"Private\";\n    StmtModifier[StmtModifier[\"Exported\"] = 2] = \"Exported\";\n    StmtModifier[StmtModifier[\"Static\"] = 3] = \"Static\";\n})(StmtModifier || (StmtModifier = {}));\nvar Statement = /** @class */ (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    Statement.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = /** @class */ (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || (value && value.type) || null;\n        return _this;\n    }\n    DeclareVarStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            (this.value ? !!stmt.value && this.value.isEquivalent(stmt.value) : !stmt.value);\n    };\n    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = /** @class */ (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    DeclareFunctionStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = /** @class */ (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    ExpressionStatement.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = /** @class */ (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    ReturnStatement.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    ReturnStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = /** @class */ (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    AbstractClassPart.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = /** @class */ (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers, initializer) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.initializer = initializer;\n        return _this;\n    }\n    ClassField.prototype.isEquivalent = function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = /** @class */ (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    ClassMethod.prototype.isEquivalent = function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = /** @class */ (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    ClassGetter.prototype.isEquivalent = function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = /** @class */ (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    ClassStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    ClassStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = /** @class */ (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    IfStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    IfStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = /** @class */ (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, multiline, sourceSpan) {\n        if (multiline === void 0) { multiline = false; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        _this.multiline = multiline;\n        return _this;\n    }\n    CommentStmt.prototype.isEquivalent = function (stmt) { return stmt instanceof CommentStmt; };\n    CommentStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar JSDocCommentStmt = /** @class */ (function (_super) {\n    __extends(JSDocCommentStmt, _super);\n    function JSDocCommentStmt(tags, sourceSpan) {\n        if (tags === void 0) { tags = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.tags = tags;\n        return _this;\n    }\n    JSDocCommentStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof JSDocCommentStmt && this.toString() === stmt.toString();\n    };\n    JSDocCommentStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitJSDocCommentStmt(this, context);\n    };\n    JSDocCommentStmt.prototype.toString = function () { return serializeTags(this.tags); };\n    return JSDocCommentStmt;\n}(Statement));\nvar TryCatchStmt = /** @class */ (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    TryCatchStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = /** @class */ (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    ThrowStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    ThrowStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    AstTransformer.prototype.transformExpr = function (expr, context) { return expr; };\n    AstTransformer.prototype.transformStmt = function (stmt, context) { return stmt; };\n    AstTransformer.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    AstTransformer.prototype.visitWrappedNodeExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    AstTransformer.prototype.visitTypeofExpr = function (expr, context) {\n        return this.transformExpr(new TypeofExpr(expr.expr.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitWriteVarExpr = function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitWriteKeyExpr = function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitWritePropExpr = function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitInvokeMethodExpr = function (ast, context) {\n        var method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), method, this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitInstantiateExpr = function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    AstTransformer.prototype.visitExternalExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    AstTransformer.prototype.visitConditionalExpr = function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), ast.falseCase.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitNotExpr = function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitAssertNotNullExpr = function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitCastExpr = function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitFunctionExpr = function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitReadPropExpr = function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitReadKeyExpr = function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitLiteralArrayExpr = function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n        var mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitCommaExpr = function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    AstTransformer.prototype.visitDeclareVarStmt = function (stmt, context) {\n        var value = stmt.value && stmt.value.visitExpression(this, context);\n        return this.transformStmt(new DeclareVarStmt(stmt.name, value, stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitExpressionStmt = function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitReturnStmt = function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        var parent = stmt.parent.visitExpression(this, context);\n        var getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n        var ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitIfStmt = function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitTryCatchStmt = function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitThrowStmt = function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    AstTransformer.prototype.visitJSDocCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    AstTransformer.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    RecursiveAstVisitor.prototype.visitType = function (ast, context) { return ast; };\n    RecursiveAstVisitor.prototype.visitExpression = function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    RecursiveAstVisitor.prototype.visitBuiltinType = function (type, context) { return this.visitType(type, context); };\n    RecursiveAstVisitor.prototype.visitExpressionType = function (type, context) {\n        var _this = this;\n        type.value.visitExpression(this, context);\n        if (type.typeParams !== null) {\n            type.typeParams.forEach(function (param) { return _this.visitType(param, context); });\n        }\n        return this.visitType(type, context);\n    };\n    RecursiveAstVisitor.prototype.visitArrayType = function (type, context) { return this.visitType(type, context); };\n    RecursiveAstVisitor.prototype.visitMapType = function (type, context) { return this.visitType(type, context); };\n    RecursiveAstVisitor.prototype.visitWrappedNodeExpr = function (ast, context) { return ast; };\n    RecursiveAstVisitor.prototype.visitTypeofExpr = function (ast, context) { return this.visitExpression(ast, context); };\n    RecursiveAstVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitWritePropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitLiteralExpr = function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitExternalExpr = function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitConditionalExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context);\n        ast.falseCase.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitNotExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitCastExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitFunctionExpr = function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitReadPropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitCommaExpr = function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = function (stmt, context) {\n        if (stmt.value) {\n            stmt.value.visitExpression(this, context);\n        }\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitExpressionStmt = function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitReturnStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        stmt.parent.visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitIfStmt = function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitThrowStmt = function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n    RecursiveAstVisitor.prototype.visitJSDocCommentStmt = function (stmt, context) { return stmt; };\n    RecursiveAstVisitor.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\nfunction findReadVarNames(stmts) {\n    var visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = /** @class */ (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor));\nfunction collectExternalReferences(stmts) {\n    var visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = /** @class */ (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor));\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = /** @class */ (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n        var clone = Object.create(obj.constructor.prototype);\n        for (var prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer));\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\nfunction expressionType(expr, typeModifiers, typeParams) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExpressionType(expr, typeModifiers, typeParams);\n}\nfunction typeofExpr(expr) {\n    return new TypeofExpr(expr);\n}\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\nfunction fn(params, body, type, sourceSpan, name) {\n    return new FunctionExpr(params, body, type, sourceSpan, name);\n}\nfunction ifStmt(condition, thenClause, elseClause) {\n    return new IfStmt(condition, thenClause, elseClause);\n}\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\nfunction isNull(exp) {\n    return exp instanceof LiteralExpr && exp.value === null;\n}\n/*\n * Serializes a `Tag` into a string.\n * Returns a string like \" @foo {bar} baz\" (note the leading whitespace before `@foo`).\n */\nfunction tagToString(tag) {\n    var out = '';\n    if (tag.tagName) {\n        out += \" @\" + tag.tagName;\n    }\n    if (tag.text) {\n        if (tag.text.match(/\\/\\*|\\*\\//)) {\n            throw new Error('JSDoc text cannot contain \"/*\" and \"*/\"');\n        }\n        out += ' ' + tag.text.replace(/@/g, '\\\\@');\n    }\n    return out;\n}\nfunction serializeTags(tags) {\n    var e_1, _a;\n    if (tags.length === 0)\n        return '';\n    var out = '*\\n';\n    try {\n        for (var tags_1 = __values(tags), tags_1_1 = tags_1.next(); !tags_1_1.done; tags_1_1 = tags_1.next()) {\n            var tag = tags_1_1.value;\n            out += ' *';\n            // If the tagToString is multi-line, insert \" * \" prefixes on subsequent lines.\n            out += tagToString(tag).replace(/\\n/g, '\\n * ');\n            out += '\\n';\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (tags_1_1 && !tags_1_1.done && (_a = tags_1.return)) _a.call(tags_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    out += ' ';\n    return out;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\nfunction _splitAt(input, character, defaultValues) {\n    var characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(value, context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(value, context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\nfunction noUndefined(val) {\n    return val === undefined ? null : val;\n}\nvar ValueTransformer = /** @class */ (function () {\n    function ValueTransformer() {\n    }\n    ValueTransformer.prototype.visitArray = function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    ValueTransformer.prototype.visitStringMap = function (map, context) {\n        var _this = this;\n        var result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n    ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : syncAsyncValues;\n    }\n};\nfunction error(msg) {\n    throw new Error(\"Internal Error: \" + msg);\n}\nfunction syntaxError(msg, parseErrors) {\n    var error = Error(msg);\n    error[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        error[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\nfunction isSyntaxError(error) {\n    return error[ERROR_SYNTAX_ERROR];\n}\nfunction getParseErrors(error) {\n    return error[ERROR_PARSE_ERRORS] || [];\n}\n// Escape characters that have a special meaning in Regular Expressions\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\nfunction utf8Encode(str) {\n    var encoded = '';\n    for (var index = 0; index < str.length; index++) {\n        var codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    // WARNING: do not try to `JSON.stringify(token)` here\n    // see https://github.com/angular/angular/issues/23440\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        var splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nvar _global = __global || __window || __self;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CONSTANT_PREFIX = '_c';\n/**\n * Context to use when producing a key.\n *\n * This ensures we see the constant not the reference variable when producing\n * a key.\n */\nvar KEY_CONTEXT = {};\n/**\n * A node that is a place-holder that allows the node to be replaced when the actual\n * node is known.\n *\n * This allows the constant pool to change an expression from a direct reference to\n * a constant to a shared constant. It returns a fix-up node that is later allowed to\n * change the referenced expression.\n */\nvar FixupExpression = /** @class */ (function (_super) {\n    __extends(FixupExpression, _super);\n    function FixupExpression(resolved) {\n        var _this = _super.call(this, resolved.type) || this;\n        _this.resolved = resolved;\n        _this.original = resolved;\n        return _this;\n    }\n    FixupExpression.prototype.visitExpression = function (visitor, context) {\n        if (context === KEY_CONTEXT) {\n            // When producing a key we want to traverse the constant not the\n            // variable used to refer to it.\n            return this.original.visitExpression(visitor, context);\n        }\n        else {\n            return this.resolved.visitExpression(visitor, context);\n        }\n    };\n    FixupExpression.prototype.isEquivalent = function (e) {\n        return e instanceof FixupExpression && this.resolved.isEquivalent(e.resolved);\n    };\n    FixupExpression.prototype.isConstant = function () { return true; };\n    FixupExpression.prototype.fixup = function (expression) {\n        this.resolved = expression;\n        this.shared = true;\n    };\n    return FixupExpression;\n}(Expression));\n/**\n * A constant pool allows a code emitter to share constant in an output context.\n *\n * The constant pool also supports sharing access to ivy definitions references.\n */\nvar ConstantPool = /** @class */ (function () {\n    function ConstantPool() {\n        this.statements = [];\n        this.literals = new Map();\n        this.literalFactories = new Map();\n        this.injectorDefinitions = new Map();\n        this.directiveDefinitions = new Map();\n        this.componentDefinitions = new Map();\n        this.pipeDefinitions = new Map();\n        this.nextNameIndex = 0;\n    }\n    ConstantPool.prototype.getConstLiteral = function (literal$$1, forceShared) {\n        if (literal$$1 instanceof LiteralExpr || literal$$1 instanceof FixupExpression) {\n            // Do no put simple literals into the constant pool or try to produce a constant for a\n            // reference to a constant.\n            return literal$$1;\n        }\n        var key = this.keyOf(literal$$1);\n        var fixup = this.literals.get(key);\n        var newValue = false;\n        if (!fixup) {\n            fixup = new FixupExpression(literal$$1);\n            this.literals.set(key, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            // Replace the expression with a variable\n            var name_1 = this.freshName();\n            this.statements.push(variable(name_1).set(literal$$1).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n            fixup.fixup(variable(name_1));\n        }\n        return fixup;\n    };\n    ConstantPool.prototype.getDefinition = function (type, kind, ctx, forceShared) {\n        if (forceShared === void 0) { forceShared = false; }\n        var definitions = this.definitionsOf(kind);\n        var fixup = definitions.get(type);\n        var newValue = false;\n        if (!fixup) {\n            var property = this.propertyNameOf(kind);\n            fixup = new FixupExpression(ctx.importExpr(type).prop(property));\n            definitions.set(type, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            var name_2 = this.freshName();\n            this.statements.push(variable(name_2).set(fixup.resolved).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n            fixup.fixup(variable(name_2));\n        }\n        return fixup;\n    };\n    ConstantPool.prototype.getLiteralFactory = function (literal$$1) {\n        // Create a pure function that builds an array of a mix of constant  and variable expressions\n        if (literal$$1 instanceof LiteralArrayExpr) {\n            var argumentsForKey = literal$$1.entries.map(function (e) { return e.isConstant() ? e : literal(null); });\n            var key = this.keyOf(literalArr(argumentsForKey));\n            return this._getLiteralFactory(key, literal$$1.entries, function (entries) { return literalArr(entries); });\n        }\n        else {\n            var expressionForKey = literalMap(literal$$1.entries.map(function (e) { return ({\n                key: e.key,\n                value: e.value.isConstant() ? e.value : literal(null),\n                quoted: e.quoted\n            }); }));\n            var key = this.keyOf(expressionForKey);\n            return this._getLiteralFactory(key, literal$$1.entries.map(function (e) { return e.value; }), function (entries) { return literalMap(entries.map(function (value, index) { return ({\n                key: literal$$1.entries[index].key,\n                value: value,\n                quoted: literal$$1.entries[index].quoted\n            }); })); });\n        }\n    };\n    ConstantPool.prototype._getLiteralFactory = function (key, values, resultMap) {\n        var _this = this;\n        var literalFactory = this.literalFactories.get(key);\n        var literalFactoryArguments = values.filter((function (e) { return !e.isConstant(); }));\n        if (!literalFactory) {\n            var resultExpressions = values.map(function (e, index) { return e.isConstant() ? _this.getConstLiteral(e, true) : variable(\"a\" + index); });\n            var parameters = resultExpressions.filter(isVariable).map(function (e) { return new FnParam(e.name, DYNAMIC_TYPE); });\n            var pureFunctionDeclaration = fn(parameters, [new ReturnStatement(resultMap(resultExpressions))], INFERRED_TYPE);\n            var name_3 = this.freshName();\n            this.statements.push(variable(name_3).set(pureFunctionDeclaration).toDeclStmt(INFERRED_TYPE, [\n                StmtModifier.Final\n            ]));\n            literalFactory = variable(name_3);\n            this.literalFactories.set(key, literalFactory);\n        }\n        return { literalFactory: literalFactory, literalFactoryArguments: literalFactoryArguments };\n    };\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     */\n    ConstantPool.prototype.uniqueName = function (prefix) { return \"\" + prefix + this.nextNameIndex++; };\n    ConstantPool.prototype.definitionsOf = function (kind) {\n        switch (kind) {\n            case 2 /* Component */:\n                return this.componentDefinitions;\n            case 1 /* Directive */:\n                return this.directiveDefinitions;\n            case 0 /* Injector */:\n                return this.injectorDefinitions;\n            case 3 /* Pipe */:\n                return this.pipeDefinitions;\n        }\n        error(\"Unknown definition kind \" + kind);\n        return this.componentDefinitions;\n    };\n    ConstantPool.prototype.propertyNameOf = function (kind) {\n        switch (kind) {\n            case 2 /* Component */:\n                return 'ngComponentDef';\n            case 1 /* Directive */:\n                return 'ngDirectiveDef';\n            case 0 /* Injector */:\n                return 'ngInjectorDef';\n            case 3 /* Pipe */:\n                return 'ngPipeDef';\n        }\n        error(\"Unknown definition kind \" + kind);\n        return '<unknown>';\n    };\n    ConstantPool.prototype.freshName = function () { return this.uniqueName(CONSTANT_PREFIX); };\n    ConstantPool.prototype.keyOf = function (expression) {\n        return expression.visitExpression(new KeyVisitor(), KEY_CONTEXT);\n    };\n    return ConstantPool;\n}());\n/**\n * Visitor used to determine if 2 expressions are equivalent and can be shared in the\n * `ConstantPool`.\n *\n * When the id (string) generated by the visitor is equal, expressions are considered equivalent.\n */\nvar KeyVisitor = /** @class */ (function () {\n    function KeyVisitor() {\n        this.visitWrappedNodeExpr = invalid;\n        this.visitWriteVarExpr = invalid;\n        this.visitWriteKeyExpr = invalid;\n        this.visitWritePropExpr = invalid;\n        this.visitInvokeMethodExpr = invalid;\n        this.visitInvokeFunctionExpr = invalid;\n        this.visitInstantiateExpr = invalid;\n        this.visitConditionalExpr = invalid;\n        this.visitNotExpr = invalid;\n        this.visitAssertNotNullExpr = invalid;\n        this.visitCastExpr = invalid;\n        this.visitFunctionExpr = invalid;\n        this.visitBinaryOperatorExpr = invalid;\n        this.visitReadPropExpr = invalid;\n        this.visitReadKeyExpr = invalid;\n        this.visitCommaExpr = invalid;\n    }\n    KeyVisitor.prototype.visitLiteralExpr = function (ast) {\n        return \"\" + (typeof ast.value === 'string' ? '\"' + ast.value + '\"' : ast.value);\n    };\n    KeyVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n        var _this = this;\n        return \"[\" + ast.entries.map(function (entry) { return entry.visitExpression(_this, context); }).join(',') + \"]\";\n    };\n    KeyVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var mapKey = function (entry) {\n            var quote = entry.quoted ? '\"' : '';\n            return \"\" + quote + entry.key + quote;\n        };\n        var mapEntry = function (entry) {\n            return mapKey(entry) + \":\" + entry.value.visitExpression(_this, context);\n        };\n        return \"{\" + ast.entries.map(mapEntry).join(',');\n    };\n    KeyVisitor.prototype.visitExternalExpr = function (ast) {\n        return ast.value.moduleName ? \"EX:\" + ast.value.moduleName + \":\" + ast.value.name :\n            \"EX:\" + ast.value.runtime.name;\n    };\n    KeyVisitor.prototype.visitReadVarExpr = function (node) { return \"VAR:\" + node.name; };\n    KeyVisitor.prototype.visitTypeofExpr = function (node, context) {\n        return \"TYPEOF:\" + node.expr.visitExpression(this, context);\n    };\n    return KeyVisitor;\n}());\nfunction invalid(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + arg.constructor.name);\n}\nfunction isVariable(e) {\n    return e instanceof ReadVarExpr;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.Renderer2 = { name: 'Renderer2', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.inject = { name: 'inject', moduleName: CORE };\n    Identifiers.INJECTOR = { name: 'INJECTOR', moduleName: CORE };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.defineInjectable = { name: 'defineInjectable', moduleName: CORE };\n    Identifiers.InjectableDef = { name: 'ɵInjectableDef', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    Identifiers.setClassMetadata = { name: 'ɵsetClassMetadata', moduleName: CORE };\n    return Identifiers;\n}());\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = /** @class */ (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    StaticSymbol.prototype.assertNoMembers = function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = /** @class */ (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n        members = members || [];\n        var memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nfunction sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\nfunction identifierModuleUrl(compileIdentifier) {\n    var ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\nvar CompileSummaryKind;\n(function (CompileSummaryKind) {\n    CompileSummaryKind[CompileSummaryKind[\"Pipe\"] = 0] = \"Pipe\";\n    CompileSummaryKind[CompileSummaryKind[\"Directive\"] = 1] = \"Directive\";\n    CompileSummaryKind[CompileSummaryKind[\"NgModule\"] = 2] = \"NgModule\";\n    CompileSummaryKind[CompileSummaryKind[\"Injectable\"] = 3] = \"Injectable\";\n})(CompileSummaryKind || (CompileSummaryKind = {}));\nfunction tokenName(token) {\n    return token.value != null ? sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = /** @class */ (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = /** @class */ (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    CompileTemplateMetadata.prototype.toSummary = function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n            styles: this.styles,\n            animations: this.animations\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = /** @class */ (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.guards = guards;\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    CompileDirectiveMetadata.create = function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var hostListeners = {};\n        var hostProperties = {};\n        var hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var value = host[key];\n                var matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            guards: guards,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    CompileDirectiveMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            guards: this.guards,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\nvar CompilePipeMetadata = /** @class */ (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    CompilePipeMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\nvar CompileShallowModuleMetadata = /** @class */ (function () {\n    function CompileShallowModuleMetadata() {\n    }\n    return CompileShallowModuleMetadata;\n}());\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = /** @class */ (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    CompileNgModuleMetadata.prototype.toSummary = function () {\n        var module = this.transitiveModule;\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = /** @class */ (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = /** @class */ (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var flatItem = Array.isArray(item) ? flatten(item) : item;\n        return flat.concat(flatItem);\n    }, []);\n}\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = templateMeta.templateUrl;\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\nfunction sharedStylesheetJitUrl(meta, id) {\n    var pathParts = meta.moduleUrl.split(/\\/\\\\/g);\n    var baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE$1 = '@angular/core';\nvar Identifiers$1 = /** @class */ (function () {\n    function Identifiers() {\n    }\n    /* Methods */\n    Identifiers.NEW_METHOD = 'factory';\n    Identifiers.TRANSFORM_METHOD = 'transform';\n    Identifiers.PATCH_DEPS = 'patchedDeps';\n    /* Instructions */\n    Identifiers.namespaceHTML = { name: 'ɵnamespaceHTML', moduleName: CORE$1 };\n    Identifiers.namespaceMathML = { name: 'ɵnamespaceMathML', moduleName: CORE$1 };\n    Identifiers.namespaceSVG = { name: 'ɵnamespaceSVG', moduleName: CORE$1 };\n    Identifiers.element = { name: 'ɵelement', moduleName: CORE$1 };\n    Identifiers.elementStart = { name: 'ɵelementStart', moduleName: CORE$1 };\n    Identifiers.elementEnd = { name: 'ɵelementEnd', moduleName: CORE$1 };\n    Identifiers.elementProperty = { name: 'ɵelementProperty', moduleName: CORE$1 };\n    Identifiers.componentHostSyntheticProperty = { name: 'ɵcomponentHostSyntheticProperty', moduleName: CORE$1 };\n    Identifiers.elementAttribute = { name: 'ɵelementAttribute', moduleName: CORE$1 };\n    Identifiers.elementClassProp = { name: 'ɵelementClassProp', moduleName: CORE$1 };\n    Identifiers.elementContainerStart = { name: 'ɵelementContainerStart', moduleName: CORE$1 };\n    Identifiers.elementContainerEnd = { name: 'ɵelementContainerEnd', moduleName: CORE$1 };\n    Identifiers.elementStyling = { name: 'ɵelementStyling', moduleName: CORE$1 };\n    Identifiers.elementHostAttrs = { name: 'ɵelementHostAttrs', moduleName: CORE$1 };\n    Identifiers.elementStylingMap = { name: 'ɵelementStylingMap', moduleName: CORE$1 };\n    Identifiers.elementStyleProp = { name: 'ɵelementStyleProp', moduleName: CORE$1 };\n    Identifiers.elementStylingApply = { name: 'ɵelementStylingApply', moduleName: CORE$1 };\n    Identifiers.containerCreate = { name: 'ɵcontainer', moduleName: CORE$1 };\n    Identifiers.nextContext = { name: 'ɵnextContext', moduleName: CORE$1 };\n    Identifiers.templateCreate = { name: 'ɵtemplate', moduleName: CORE$1 };\n    Identifiers.text = { name: 'ɵtext', moduleName: CORE$1 };\n    Identifiers.textBinding = { name: 'ɵtextBinding', moduleName: CORE$1 };\n    Identifiers.bind = { name: 'ɵbind', moduleName: CORE$1 };\n    Identifiers.enableBindings = { name: 'ɵenableBindings', moduleName: CORE$1 };\n    Identifiers.disableBindings = { name: 'ɵdisableBindings', moduleName: CORE$1 };\n    Identifiers.allocHostVars = { name: 'ɵallocHostVars', moduleName: CORE$1 };\n    Identifiers.getCurrentView = { name: 'ɵgetCurrentView', moduleName: CORE$1 };\n    Identifiers.restoreView = { name: 'ɵrestoreView', moduleName: CORE$1 };\n    Identifiers.interpolation1 = { name: 'ɵinterpolation1', moduleName: CORE$1 };\n    Identifiers.interpolation2 = { name: 'ɵinterpolation2', moduleName: CORE$1 };\n    Identifiers.interpolation3 = { name: 'ɵinterpolation3', moduleName: CORE$1 };\n    Identifiers.interpolation4 = { name: 'ɵinterpolation4', moduleName: CORE$1 };\n    Identifiers.interpolation5 = { name: 'ɵinterpolation5', moduleName: CORE$1 };\n    Identifiers.interpolation6 = { name: 'ɵinterpolation6', moduleName: CORE$1 };\n    Identifiers.interpolation7 = { name: 'ɵinterpolation7', moduleName: CORE$1 };\n    Identifiers.interpolation8 = { name: 'ɵinterpolation8', moduleName: CORE$1 };\n    Identifiers.interpolationV = { name: 'ɵinterpolationV', moduleName: CORE$1 };\n    Identifiers.pureFunction0 = { name: 'ɵpureFunction0', moduleName: CORE$1 };\n    Identifiers.pureFunction1 = { name: 'ɵpureFunction1', moduleName: CORE$1 };\n    Identifiers.pureFunction2 = { name: 'ɵpureFunction2', moduleName: CORE$1 };\n    Identifiers.pureFunction3 = { name: 'ɵpureFunction3', moduleName: CORE$1 };\n    Identifiers.pureFunction4 = { name: 'ɵpureFunction4', moduleName: CORE$1 };\n    Identifiers.pureFunction5 = { name: 'ɵpureFunction5', moduleName: CORE$1 };\n    Identifiers.pureFunction6 = { name: 'ɵpureFunction6', moduleName: CORE$1 };\n    Identifiers.pureFunction7 = { name: 'ɵpureFunction7', moduleName: CORE$1 };\n    Identifiers.pureFunction8 = { name: 'ɵpureFunction8', moduleName: CORE$1 };\n    Identifiers.pureFunctionV = { name: 'ɵpureFunctionV', moduleName: CORE$1 };\n    Identifiers.pipeBind1 = { name: 'ɵpipeBind1', moduleName: CORE$1 };\n    Identifiers.pipeBind2 = { name: 'ɵpipeBind2', moduleName: CORE$1 };\n    Identifiers.pipeBind3 = { name: 'ɵpipeBind3', moduleName: CORE$1 };\n    Identifiers.pipeBind4 = { name: 'ɵpipeBind4', moduleName: CORE$1 };\n    Identifiers.pipeBindV = { name: 'ɵpipeBindV', moduleName: CORE$1 };\n    Identifiers.i18n = { name: 'ɵi18n', moduleName: CORE$1 };\n    Identifiers.i18nAttributes = { name: 'ɵi18nAttributes', moduleName: CORE$1 };\n    Identifiers.i18nExp = { name: 'ɵi18nExp', moduleName: CORE$1 };\n    Identifiers.i18nStart = { name: 'ɵi18nStart', moduleName: CORE$1 };\n    Identifiers.i18nEnd = { name: 'ɵi18nEnd', moduleName: CORE$1 };\n    Identifiers.i18nApply = { name: 'ɵi18nApply', moduleName: CORE$1 };\n    Identifiers.i18nPostprocess = { name: 'ɵi18nPostprocess', moduleName: CORE$1 };\n    Identifiers.load = { name: 'ɵload', moduleName: CORE$1 };\n    Identifiers.loadQueryList = { name: 'ɵloadQueryList', moduleName: CORE$1 };\n    Identifiers.pipe = { name: 'ɵpipe', moduleName: CORE$1 };\n    Identifiers.projection = { name: 'ɵprojection', moduleName: CORE$1 };\n    Identifiers.projectionDef = { name: 'ɵprojectionDef', moduleName: CORE$1 };\n    Identifiers.reference = { name: 'ɵreference', moduleName: CORE$1 };\n    Identifiers.inject = { name: 'inject', moduleName: CORE$1 };\n    Identifiers.injectAttribute = { name: 'ɵinjectAttribute', moduleName: CORE$1 };\n    Identifiers.directiveInject = { name: 'ɵdirectiveInject', moduleName: CORE$1 };\n    Identifiers.templateRefExtractor = { name: 'ɵtemplateRefExtractor', moduleName: CORE$1 };\n    Identifiers.defineBase = { name: 'ɵdefineBase', moduleName: CORE$1 };\n    Identifiers.BaseDef = {\n        name: 'ɵBaseDef',\n        moduleName: CORE$1,\n    };\n    Identifiers.defineComponent = { name: 'ɵdefineComponent', moduleName: CORE$1 };\n    Identifiers.ComponentDefWithMeta = {\n        name: 'ɵComponentDefWithMeta',\n        moduleName: CORE$1,\n    };\n    Identifiers.defineDirective = {\n        name: 'ɵdefineDirective',\n        moduleName: CORE$1,\n    };\n    Identifiers.DirectiveDefWithMeta = {\n        name: 'ɵDirectiveDefWithMeta',\n        moduleName: CORE$1,\n    };\n    Identifiers.InjectorDef = {\n        name: 'ɵInjectorDef',\n        moduleName: CORE$1,\n    };\n    Identifiers.defineInjector = {\n        name: 'defineInjector',\n        moduleName: CORE$1,\n    };\n    Identifiers.NgModuleDefWithMeta = {\n        name: 'ɵNgModuleDefWithMeta',\n        moduleName: CORE$1,\n    };\n    Identifiers.defineNgModule = { name: 'ɵdefineNgModule', moduleName: CORE$1 };\n    Identifiers.PipeDefWithMeta = { name: 'ɵPipeDefWithMeta', moduleName: CORE$1 };\n    Identifiers.definePipe = { name: 'ɵdefinePipe', moduleName: CORE$1 };\n    Identifiers.query = { name: 'ɵquery', moduleName: CORE$1 };\n    Identifiers.queryRefresh = { name: 'ɵqueryRefresh', moduleName: CORE$1 };\n    Identifiers.registerContentQuery = { name: 'ɵregisterContentQuery', moduleName: CORE$1 };\n    Identifiers.NgOnChangesFeature = { name: 'ɵNgOnChangesFeature', moduleName: CORE$1 };\n    Identifiers.InheritDefinitionFeature = { name: 'ɵInheritDefinitionFeature', moduleName: CORE$1 };\n    Identifiers.ProvidersFeature = { name: 'ɵProvidersFeature', moduleName: CORE$1 };\n    Identifiers.listener = { name: 'ɵlistener', moduleName: CORE$1 };\n    Identifiers.getFactoryOf = {\n        name: 'ɵgetFactoryOf',\n        moduleName: CORE$1,\n    };\n    Identifiers.getInheritedFactory = {\n        name: 'ɵgetInheritedFactory',\n        moduleName: CORE$1,\n    };\n    // sanitization-related functions\n    Identifiers.sanitizeHtml = { name: 'ɵsanitizeHtml', moduleName: CORE$1 };\n    Identifiers.sanitizeStyle = { name: 'ɵsanitizeStyle', moduleName: CORE$1 };\n    Identifiers.defaultStyleSanitizer = { name: 'ɵdefaultStyleSanitizer', moduleName: CORE$1 };\n    Identifiers.sanitizeResourceUrl = { name: 'ɵsanitizeResourceUrl', moduleName: CORE$1 };\n    Identifiers.sanitizeScript = { name: 'ɵsanitizeScript', moduleName: CORE$1 };\n    Identifiers.sanitizeUrl = { name: 'ɵsanitizeUrl', moduleName: CORE$1 };\n    return Identifiers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = /** @class */ (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\n// TODO(vicb): do we really need this node (vs an array) ?\nvar Container = /** @class */ (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = /** @class */ (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = /** @class */ (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = /** @class */ (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = /** @class */ (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n// Clone the AST\nvar CloneVisitor = /** @class */ (function () {\n    function CloneVisitor() {\n    }\n    CloneVisitor.prototype.visitText = function (text, context) { return new Text(text.value, text.sourceSpan); };\n    CloneVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    CloneVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\n// Visit all the nodes recursively\nvar RecurseVisitor = /** @class */ (function () {\n    function RecurseVisitor() {\n    }\n    RecurseVisitor.prototype.visitText = function (text, context) { };\n    RecurseVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    RecurseVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n    RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var visitor = new _SerializerIgnoreIcuExpVisitor();\n    var parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * @internal\n */\nvar _SerializerVisitor = /** @class */ (function () {\n    function _SerializerVisitor() {\n    }\n    _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    _SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * @internal\n */\nvar _SerializerIgnoreIcuExpVisitor = /** @class */ (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n */\nfunction sha1(str) {\n    var _a, _b;\n    var utf8 = utf8Encode(str);\n    var words32 = stringToWords32(utf8, Endian.Big);\n    var len = utf8.length * 8;\n    var w = new Array(80);\n    var _c = __read([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], 5), a = _c[0], b = _c[1], c = _c[2], d = _c[3], e = _c[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var i = 0; i < words32.length; i += 16) {\n        var _d = __read([a, b, c, d, e], 5), h0 = _d[0], h1 = _d[1], h2 = _d[2], h3 = _d[3], h4 = _d[4];\n        for (var j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _e = __read(fk(j, b, c, d), 2), f = _e[0], k = _e[1];\n            var temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _a = __read([d, c, rol32(b, 30), a, temp], 5), e = _a[0], d = _a[1], c = _a[2], b = _a[3], a = _a[4];\n        }\n        _b = __read([add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], 5), a = _b[0], b = _b[1], c = _b[2], d = _b[3], e = _b[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n}\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n */\nfunction fingerprint(str) {\n    var utf8 = utf8Encode(str);\n    var _a = __read([hash32(utf8, 0), hash32(utf8, 102072)], 2), hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\nfunction computeMsgId(msg, meaning) {\n    var _a;\n    var _b = __read(fingerprint(msg), 2), hi = _b[0], lo = _b[1];\n    if (meaning) {\n        var _c = __read(fingerprint(meaning), 2), him = _c[0], lom = _c[1];\n        _a = __read(add64(rol64([hi, lo], 1), [him, lom]), 2), hi = _a[0], lo = _a[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n}\nfunction hash32(str, c) {\n    var _a;\n    var _b = __read([0x9e3779b9, 0x9e3779b9], 2), a = _b[0], b = _b[1];\n    var i;\n    var len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _a = __read(mix([a, b, c]), 3), a = _a[0], b = _a[1], c = _a[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n}\n// clang-format off\nfunction mix(_a) {\n    var _b = __read(_a, 3), a = _b[0], b = _b[1], c = _b[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n// clang-format on\n// Utils\nvar Endian;\n(function (Endian) {\n    Endian[Endian[\"Little\"] = 0] = \"Little\";\n    Endian[Endian[\"Big\"] = 1] = \"Big\";\n})(Endian || (Endian = {}));\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\nfunction add32to64(a, b) {\n    var low = (a & 0xffff) + (b & 0xffff);\n    var high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\nfunction add64(_a, _b) {\n    var _c = __read(_a, 2), ah = _c[0], al = _c[1];\n    var _d = __read(_b, 2), bh = _d[0], bl = _d[1];\n    var _e = __read(add32to64(al, bl), 2), carry = _e[0], l = _e[1];\n    var h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\nfunction sub32(a, b) {\n    var low = (a & 0xffff) - (b & 0xffff);\n    var high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n// Rotate a 32b number left `count` position\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n// Rotate a 64b number left `count` position\nfunction rol64(_a, count) {\n    var _b = __read(_a, 2), hi = _b[0], lo = _b[1];\n    var h = (hi << count) | (lo >>> (32 - count));\n    var l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\nfunction stringToWords32(str, endian) {\n    var words32 = Array((str.length + 3) >>> 2);\n    for (var i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\nfunction wordAt(str, index, endian) {\n    var word = 0;\n    if (endian === Endian.Big) {\n        for (var i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\nfunction word32ToByteString(word) {\n    var str = '';\n    for (var i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\nfunction byteStringToHexString(str) {\n    var hex = '';\n    for (var i = 0; i < str.length; i++) {\n        var b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n// based on http://www.danvk.org/hex2dec.html (JS can not handle more than 56b)\nfunction byteStringToDecString(str) {\n    var decimal = '';\n    var toThePower = '1';\n    for (var i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n// x and y decimal, lowest significant digit first\nfunction addBigInt(x, y) {\n    var sum = '';\n    var len = Math.max(x.length, y.length);\n    for (var i = 0, carry = 0; i < len || carry; i++) {\n        var tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\nfunction numberTimesBigInt(num, b) {\n    var product = '';\n    var bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Serializer = /** @class */ (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    Serializer.prototype.createNameMapper = function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = /** @class */ (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    // XMB placeholders could only contains A-Z, 0-9 and _\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _Visitor = /** @class */ (function () {\n    function _Visitor() {\n    }\n    _Visitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        var strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    _Visitor.prototype.visitText = function (text) { return text.value; };\n    _Visitor.prototype.visitDeclaration = function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    _Visitor.prototype._serializeAttributes = function (attrs) {\n        var strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    _Visitor.prototype.visitDoctype = function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor();\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\nvar Declaration = /** @class */ (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = escapeXml(unescapedAttrs[k]);\n        });\n    }\n    Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = /** @class */ (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = /** @class */ (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = escapeXml(unescapedAttrs[k]);\n        });\n    }\n    Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$1 = /** @class */ (function () {\n    function Text(unescapedValue) {\n        this.value = escapeXml(unescapedValue);\n    }\n    Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = /** @class */ (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$1));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n// Escape `_ESCAPED_CHARS` characters in the given text with encoded entities\nfunction escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG = 'ph';\nvar _EXAMPLE_TAG = 'ex';\nvar _SOURCE_TAG = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = /** @class */ (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Xmb.prototype.write = function (messages, locale) {\n        var exampleVisitor = new ExampleVisitor();\n        var visitor = new _Visitor$1();\n        var rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG, {}, [\n                    new Text$1(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, __spread(sourceTags, visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    Xmb.prototype.load = function (content, url) {\n        throw new Error('Unsupported');\n    };\n    Xmb.prototype.digest = function (message) { return digest$1(message); };\n    Xmb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$1 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    _Visitor.prototype.visitText = function (text, context) { return [new Text$1(text.value)]; };\n    _Visitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, __spread(node.visit(_this))); });\n        return nodes;\n    };\n    _Visitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var nodes = [new Text$1(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, __spread([new Text$1(c + \" {\")], icu.cases[c].visit(_this), [new Text$1(\"} \")]));\n        });\n        nodes.push(new Text$1(\"}\"));\n        return nodes;\n    };\n    _Visitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var startTagAsText = new Text$1(\"<\" + ph.tag + \">\");\n        var startEx = new Tag(_EXAMPLE_TAG, {}, [startTagAsText]);\n        // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n        var startTagPh = new Tag(_PLACEHOLDER_TAG, { name: ph.startName }, [startEx, startTagAsText]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var closeTagAsText = new Text$1(\"</\" + ph.tag + \">\");\n        var closeEx = new Tag(_EXAMPLE_TAG, {}, [closeTagAsText]);\n        // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n        var closeTagPh = new Tag(_PLACEHOLDER_TAG, { name: ph.closeName }, [closeEx, closeTagAsText]);\n        return __spread([startTagPh], this.serialize(ph.children), [closeTagPh]);\n    };\n    _Visitor.prototype.visitPlaceholder = function (ph, context) {\n        var interpolationAsText = new Text$1(\"{{\" + ph.value + \"}}\");\n        // Example tag needs to be not-empty for TC.\n        var exTag = new Tag(_EXAMPLE_TAG, {}, [interpolationAsText]);\n        return [\n            // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n            new Tag(_PLACEHOLDER_TAG, { name: ph.name }, [exTag, interpolationAsText])\n        ];\n    };\n    _Visitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        var icuExpression = ph.value.expression;\n        var icuType = ph.value.type;\n        var icuCases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var icuAsText = new Text$1(\"{\" + icuExpression + \", \" + icuType + \", \" + icuCases + \"}\");\n        var exTag = new Tag(_EXAMPLE_TAG, {}, [icuAsText]);\n        return [\n            // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n            new Tag(_PLACEHOLDER_TAG, { name: ph.name }, [exTag, icuAsText])\n        ];\n    };\n    _Visitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], __spread(nodes.map(function (node) { return node.visit(_this); })));\n    };\n    return _Visitor;\n}());\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\n// TC requires at least one non-empty example on placeholders\nvar ExampleVisitor = /** @class */ (function () {\n    function ExampleVisitor() {\n    }\n    ExampleVisitor.prototype.addDefaultExamples = function (node) {\n        node.visit(this);\n        return node;\n    };\n    ExampleVisitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG) {\n            if (!tag.children || tag.children.length == 0) {\n                var exText = new Text$1(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXAMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    ExampleVisitor.prototype.visitText = function (text) { };\n    ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n    ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n    return ExampleVisitor;\n}());\n// XMB/XTB placeholders can only contain A-Z, 0-9 and _\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mapLiteral(obj, quoted) {\n    if (quoted === void 0) { quoted = false; }\n    return literalMap(Object.keys(obj).map(function (key) { return ({\n        key: key,\n        quoted: quoted,\n        value: obj[key],\n    }); }));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/* Closure variables holding messages must be named `MSG_[A-Z0-9]+` */\nvar CLOSURE_TRANSLATION_PREFIX = 'MSG_';\nvar CLOSURE_TRANSLATION_MATCHER_REGEXP = new RegExp(\"^\" + CLOSURE_TRANSLATION_PREFIX);\n/* Prefix for non-`goog.getMsg` i18n-related vars */\nvar TRANSLATION_PREFIX = 'I18N_';\n/** Closure uses `goog.getMsg(message)` to lookup translations */\nvar GOOG_GET_MSG = 'goog.getMsg';\n/** I18n separators for metadata **/\nvar I18N_MEANING_SEPARATOR = '|';\nvar I18N_ID_SEPARATOR = '@@';\n/** Name of the i18n attributes **/\nvar I18N_ATTR = 'i18n';\nvar I18N_ATTR_PREFIX = 'i18n-';\n/** Prefix of var expressions used in ICUs */\nvar I18N_ICU_VAR_PREFIX = 'VAR_';\n/** Prefix of ICU expressions for post processing */\nvar I18N_ICU_MAPPING_PREFIX = 'I18N_EXP_';\n/** Placeholder wrapper for i18n expressions **/\nvar I18N_PLACEHOLDER_SYMBOL = '�';\nfunction i18nTranslationToDeclStmt(variable$$1, message, params) {\n    var args = [literal(message)];\n    if (params && Object.keys(params).length) {\n        args.push(mapLiteral(params, true));\n    }\n    var fnCall = variable(GOOG_GET_MSG).callFn(args);\n    return variable$$1.set(fnCall).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]);\n}\n// Converts i18n meta informations for a message (id, description, meaning)\n// to a JsDoc statement formatted as expected by the Closure compiler.\nfunction i18nMetaToDocStmt(meta) {\n    var tags = [];\n    if (meta.description) {\n        tags.push({ tagName: \"desc\" /* Desc */, text: meta.description });\n    }\n    if (meta.meaning) {\n        tags.push({ tagName: \"meaning\" /* Meaning */, text: meta.meaning });\n    }\n    return tags.length == 0 ? null : new JSDocCommentStmt(tags);\n}\nfunction isI18nAttribute(name) {\n    return name === I18N_ATTR || name.startsWith(I18N_ATTR_PREFIX);\n}\nfunction isI18nRootNode(meta) {\n    return meta instanceof Message;\n}\nfunction isSingleI18nIcu(meta) {\n    return isI18nRootNode(meta) && meta.nodes.length === 1 && meta.nodes[0] instanceof Icu;\n}\nfunction hasI18nAttrs(element) {\n    return element.attrs.some(function (attr) { return isI18nAttribute(attr.name); });\n}\nfunction metaFromI18nMessage(message, id) {\n    if (id === void 0) { id = null; }\n    return {\n        id: typeof id === 'string' ? id : message.id || '',\n        meaning: message.meaning || '',\n        description: message.description || ''\n    };\n}\nfunction icuFromI18nMessage(message) {\n    return message.nodes[0];\n}\nfunction wrapI18nPlaceholder(content, contextId) {\n    if (contextId === void 0) { contextId = 0; }\n    var blockId = contextId > 0 ? \":\" + contextId : '';\n    return \"\" + I18N_PLACEHOLDER_SYMBOL + content + blockId + I18N_PLACEHOLDER_SYMBOL;\n}\nfunction assembleI18nBoundString(strings, bindingStartIndex, contextId) {\n    if (bindingStartIndex === void 0) { bindingStartIndex = 0; }\n    if (contextId === void 0) { contextId = 0; }\n    if (!strings.length)\n        return '';\n    var acc = '';\n    var lastIdx = strings.length - 1;\n    for (var i = 0; i < lastIdx; i++) {\n        acc += \"\" + strings[i] + wrapI18nPlaceholder(bindingStartIndex + i, contextId);\n    }\n    acc += strings[lastIdx];\n    return acc;\n}\nfunction getSeqNumberGenerator(startsAt) {\n    if (startsAt === void 0) { startsAt = 0; }\n    var current = startsAt;\n    return function () { return current++; };\n}\nfunction placeholdersToParams(placeholders) {\n    var params = {};\n    placeholders.forEach(function (values, key) {\n        params[key] = literal(values.length > 1 ? \"[\" + values.join('|') + \"]\" : values[0]);\n    });\n    return params;\n}\nfunction updatePlaceholderMap(map, name) {\n    var values = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        values[_i - 2] = arguments[_i];\n    }\n    var current = map.get(name) || [];\n    current.push.apply(current, __spread(values));\n    map.set(name, current);\n}\nfunction assembleBoundTextPlaceholders(meta, bindingStartIndex, contextId) {\n    if (bindingStartIndex === void 0) { bindingStartIndex = 0; }\n    if (contextId === void 0) { contextId = 0; }\n    var startIdx = bindingStartIndex;\n    var placeholders = new Map();\n    var node = meta instanceof Message ? meta.nodes.find(function (node) { return node instanceof Container; }) : meta;\n    if (node) {\n        node\n            .children.filter(function (child) { return child instanceof Placeholder; })\n            .forEach(function (child, idx) {\n            var content = wrapI18nPlaceholder(startIdx + idx, contextId);\n            updatePlaceholderMap(placeholders, child.name, content);\n        });\n    }\n    return placeholders;\n}\nfunction findIndex(items, callback) {\n    for (var i = 0; i < items.length; i++) {\n        if (callback(items[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Parses i18n metas like:\n *  - \"@@id\",\n *  - \"description[@@id]\",\n *  - \"meaning|description[@@id]\"\n * and returns an object with parsed output.\n *\n * @param meta String that represents i18n meta\n * @returns Object with id, meaning and description fields\n */\nfunction parseI18nMeta(meta) {\n    var _a, _b;\n    var id;\n    var meaning;\n    var description;\n    if (meta) {\n        var idIndex = meta.indexOf(I18N_ID_SEPARATOR);\n        var descIndex = meta.indexOf(I18N_MEANING_SEPARATOR);\n        var meaningAndDesc = void 0;\n        _a = __read((idIndex > -1) ? [meta.slice(0, idIndex), meta.slice(idIndex + 2)] : [meta, ''], 2), meaningAndDesc = _a[0], id = _a[1];\n        _b = __read((descIndex > -1) ?\n            [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n            ['', meaningAndDesc], 2), meaning = _b[0], description = _b[1];\n    }\n    return { id: id, meaning: meaning, description: description };\n}\n/**\n * Converts internal placeholder names to public-facing format\n * (for example to use in goog.getMsg call).\n * Example: `START_TAG_DIV_1` is converted to `startTagDiv_1`.\n *\n * @param name The placeholder name that should be formatted\n * @returns Formatted placeholder name\n */\nfunction formatI18nPlaceholderName(name) {\n    var chunks = toPublicName(name).split('_');\n    if (chunks.length === 1) {\n        // if no \"_\" found - just lowercase the value\n        return name.toLowerCase();\n    }\n    var postfix;\n    // eject last element if it's a number\n    if (/^\\d+$/.test(chunks[chunks.length - 1])) {\n        postfix = chunks.pop();\n    }\n    var raw = chunks.shift().toLowerCase();\n    if (chunks.length) {\n        raw += chunks.map(function (c) { return c.charAt(0).toUpperCase() + c.slice(1).toLowerCase(); }).join('');\n    }\n    return postfix ? raw + \"_\" + postfix : raw;\n}\n/**\n * Generates a prefix for translation const name.\n *\n * @param extra Additional local prefix that should be injected into translation var name\n * @returns Complete translation const prefix\n */\nfunction getTranslationConstPrefix(extra) {\n    return (\"\" + CLOSURE_TRANSLATION_PREFIX + extra).toUpperCase();\n}\n/**\n * Generates translation declaration statements.\n *\n * @param variable Translation value reference\n * @param message Text message to be translated\n * @param meta Object that contains meta information (id, meaning and description)\n * @param params Object with placeholders key-value pairs\n * @param transformFn Optional transformation (post processing) function reference\n * @returns Array of Statements that represent a given translation\n */\nfunction getTranslationDeclStmts(variable$$1, message, meta, params, transformFn) {\n    if (params === void 0) { params = {}; }\n    var statements = [];\n    var docStatements = i18nMetaToDocStmt(meta);\n    if (docStatements) {\n        statements.push(docStatements);\n    }\n    if (transformFn) {\n        statements.push(i18nTranslationToDeclStmt(variable$$1, message, params));\n        // Closure Compiler doesn't allow non-goo.getMsg const names to start with `MSG_`,\n        // so we update variable name prefix in case post processing is required, so we can\n        // assign the result of post-processing function to the var that starts with `I18N_`\n        var raw = variable(variable$$1.name);\n        variable$$1.name = variable$$1.name.replace(CLOSURE_TRANSLATION_MATCHER_REGEXP, TRANSLATION_PREFIX);\n        statements.push(variable$$1.set(transformFn(raw)).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n    }\n    else {\n        statements.push(i18nTranslationToDeclStmt(variable$$1, message, params));\n    }\n    return statements;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Name of the temporary to use during data binding */\nvar TEMPORARY_NAME = '_t';\n/** Name of the context parameter passed into a template function */\nvar CONTEXT_NAME = 'ctx';\n/** Name of the RenderFlag passed into a template function */\nvar RENDER_FLAGS = 'rf';\n/** The prefix reference variables */\nvar REFERENCE_PREFIX = '_r';\n/** The name of the implicit context reference */\nvar IMPLICIT_REFERENCE = '$implicit';\n/** Non bindable attribute name **/\nvar NON_BINDABLE_ATTR = 'ngNonBindable';\n/**\n * Creates an allocator for a temporary variable.\n *\n * A variable declaration is added to the statements the first time the allocator is invoked.\n */\nfunction temporaryAllocator(statements, name) {\n    var temp = null;\n    return function () {\n        if (!temp) {\n            statements.push(new DeclareVarStmt(TEMPORARY_NAME, undefined, DYNAMIC_TYPE));\n            temp = variable(name);\n        }\n        return temp;\n    };\n}\nfunction unsupported(feature) {\n    if (this) {\n        throw new Error(\"Builder \" + this.constructor.name + \" doesn't support \" + feature + \" yet\");\n    }\n    throw new Error(\"Feature \" + feature + \" is not supported yet\");\n}\nfunction invalid$1(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + undefined);\n}\nfunction asLiteral(value) {\n    if (Array.isArray(value)) {\n        return literalArr(value.map(asLiteral));\n    }\n    return literal(value, INFERRED_TYPE);\n}\nfunction conditionallyCreateMapObjectLiteral(keys, keepDeclared) {\n    if (Object.getOwnPropertyNames(keys).length > 0) {\n        return mapToExpression(keys, keepDeclared);\n    }\n    return null;\n}\nfunction mapToExpression(map, keepDeclared) {\n    return literalMap(Object.getOwnPropertyNames(map).map(function (key) {\n        var _a, _b;\n        // canonical syntax: `dirProp: publicProp`\n        // if there is no `:`, use dirProp = elProp\n        var value = map[key];\n        var declaredName;\n        var publicName;\n        var minifiedName;\n        if (Array.isArray(value)) {\n            _a = __read(value, 2), publicName = _a[0], declaredName = _a[1];\n        }\n        else {\n            _b = __read(splitAtColon(key, [key, value]), 2), declaredName = _b[0], publicName = _b[1];\n        }\n        minifiedName = declaredName;\n        return {\n            key: minifiedName,\n            quoted: false,\n            value: (keepDeclared && publicName !== declaredName) ?\n                literalArr([asLiteral(publicName), asLiteral(declaredName)]) :\n                asLiteral(publicName)\n        };\n    }));\n}\n/**\n *  Remove trailing null nodes as they are implied.\n */\nfunction trimTrailingNulls(parameters) {\n    while (isNull(parameters[parameters.length - 1])) {\n        parameters.pop();\n    }\n    return parameters;\n}\nfunction getQueryPredicate(query, constantPool) {\n    if (Array.isArray(query.predicate)) {\n        var predicate_1 = [];\n        query.predicate.forEach(function (selector) {\n            // Each item in predicates array may contain strings with comma-separated refs\n            // (for ex. 'ref, ref1, ..., refN'), thus we extract individual refs and store them\n            // as separate array entities\n            var selectors = selector.split(',').map(function (token) { return literal(token.trim()); });\n            predicate_1.push.apply(predicate_1, __spread(selectors));\n        });\n        return constantPool.getConstLiteral(literalArr(predicate_1), true);\n    }\n    else {\n        return query.predicate;\n    }\n}\nvar DefinitionMap = /** @class */ (function () {\n    function DefinitionMap() {\n        this.values = [];\n    }\n    DefinitionMap.prototype.set = function (key, value) {\n        if (value) {\n            this.values.push({ key: key, value: value, quoted: false });\n        }\n    };\n    DefinitionMap.prototype.toLiteralMap = function () { return literalMap(this.values); };\n    return DefinitionMap;\n}());\n/**\n * Extract a map of properties to values for a given element or template node, which can be used\n * by the directive matching machinery.\n *\n * @param elOrTpl the element or template in question\n * @return an object set up for directive matching. For attributes on the element/template, this\n * object maps a property name to its (static) value. For any bindings, this map simply maps the\n * property name to an empty string.\n */\nfunction getAttrsForDirectiveMatching(elOrTpl) {\n    var attributesMap = {};\n    elOrTpl.attributes.forEach(function (a) {\n        if (!isI18nAttribute(a.name)) {\n            attributesMap[a.name] = a.value;\n        }\n    });\n    elOrTpl.inputs.forEach(function (i) { attributesMap[i.name] = ''; });\n    elOrTpl.outputs.forEach(function (o) { attributesMap[o.name] = ''; });\n    return attributesMap;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar R3FactoryDelegateType;\n(function (R3FactoryDelegateType) {\n    R3FactoryDelegateType[R3FactoryDelegateType[\"Class\"] = 0] = \"Class\";\n    R3FactoryDelegateType[R3FactoryDelegateType[\"Function\"] = 1] = \"Function\";\n    R3FactoryDelegateType[R3FactoryDelegateType[\"Factory\"] = 2] = \"Factory\";\n})(R3FactoryDelegateType || (R3FactoryDelegateType = {}));\n/**\n * Resolved type of a dependency.\n *\n * Occasionally, dependencies will have special significance which is known statically. In that\n * case the `R3ResolvedDependencyType` informs the factory generator that a particular dependency\n * should be generated specially (usually by calling a special injection function instead of the\n * standard one).\n */\nvar R3ResolvedDependencyType;\n(function (R3ResolvedDependencyType) {\n    /**\n     * A normal token dependency.\n     */\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n    /**\n     * The dependency is for an attribute.\n     *\n     * The token expression is a string representing the attribute name.\n     */\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n})(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n/**\n * Construct a factory function expression for the given `R3FactoryMetadata`.\n */\nfunction compileFactoryFunction(meta) {\n    var t = variable('t');\n    var statements = [];\n    // The type to instantiate via constructor invocation. If there is no delegated factory, meaning\n    // this type is always created by constructor invocation, then this is the type-to-create\n    // parameter provided by the user (t) if specified, or the current type if not. If there is a\n    // delegated factory (which is used to create the current type) then this is only the type-to-\n    // create parameter (t).\n    var typeForCtor = !isDelegatedMetadata(meta) ? new BinaryOperatorExpr(BinaryOperator.Or, t, meta.type) : t;\n    var ctorExpr = null;\n    if (meta.deps !== null) {\n        // There is a constructor (either explicitly or implicitly defined).\n        ctorExpr = new InstantiateExpr(typeForCtor, injectDependencies(meta.deps, meta.injectFn));\n    }\n    else {\n        var baseFactory = variable(\"\\u0275\" + meta.name + \"_BaseFactory\");\n        var getInheritedFactory = importExpr(Identifiers$1.getInheritedFactory);\n        var baseFactoryStmt = baseFactory.set(getInheritedFactory.callFn([meta.type])).toDeclStmt(INFERRED_TYPE, [\n            StmtModifier.Exported, StmtModifier.Final\n        ]);\n        statements.push(baseFactoryStmt);\n        // There is no constructor, use the base class' factory to construct typeForCtor.\n        ctorExpr = baseFactory.callFn([typeForCtor]);\n    }\n    var ctorExprFinal = ctorExpr;\n    var body = [];\n    var retExpr = null;\n    function makeConditionalFactory(nonCtorExpr) {\n        var r = variable('r');\n        body.push(r.set(NULL_EXPR).toDeclStmt());\n        body.push(ifStmt(t, [r.set(ctorExprFinal).toStmt()], [r.set(nonCtorExpr).toStmt()]));\n        return r;\n    }\n    if (isDelegatedMetadata(meta) && meta.delegateType === R3FactoryDelegateType.Factory) {\n        var delegateFactory = variable(\"\\u0275\" + meta.name + \"_BaseFactory\");\n        var getFactoryOf = importExpr(Identifiers$1.getFactoryOf);\n        if (meta.delegate.isEquivalent(meta.type)) {\n            throw new Error(\"Illegal state: compiling factory that delegates to itself\");\n        }\n        var delegateFactoryStmt = delegateFactory.set(getFactoryOf.callFn([meta.delegate])).toDeclStmt(INFERRED_TYPE, [\n            StmtModifier.Exported, StmtModifier.Final\n        ]);\n        statements.push(delegateFactoryStmt);\n        retExpr = makeConditionalFactory(delegateFactory.callFn([]));\n    }\n    else if (isDelegatedMetadata(meta)) {\n        // This type is created with a delegated factory. If a type parameter is not specified, call\n        // the factory instead.\n        var delegateArgs = injectDependencies(meta.delegateDeps, meta.injectFn);\n        // Either call `new delegate(...)` or `delegate(...)` depending on meta.useNewForDelegate.\n        var factoryExpr = new (meta.delegateType === R3FactoryDelegateType.Class ?\n            InstantiateExpr :\n            InvokeFunctionExpr)(meta.delegate, delegateArgs);\n        retExpr = makeConditionalFactory(factoryExpr);\n    }\n    else if (isExpressionFactoryMetadata(meta)) {\n        // TODO(alxhub): decide whether to lower the value here or in the caller\n        retExpr = makeConditionalFactory(meta.expression);\n    }\n    else {\n        retExpr = ctorExpr;\n    }\n    return {\n        factory: fn([new FnParam('t', DYNAMIC_TYPE)], __spread(body, [new ReturnStatement(retExpr)]), INFERRED_TYPE, undefined, meta.name + \"_Factory\"),\n        statements: statements,\n    };\n}\nfunction injectDependencies(deps, injectFn) {\n    return deps.map(function (dep) { return compileInjectDependency(dep, injectFn); });\n}\nfunction compileInjectDependency(dep, injectFn) {\n    // Interpret the dependency according to its resolved type.\n    switch (dep.resolved) {\n        case R3ResolvedDependencyType.Token: {\n            // Build up the injection flags according to the metadata.\n            var flags = 0 /* Default */ | (dep.self ? 2 /* Self */ : 0) |\n                (dep.skipSelf ? 4 /* SkipSelf */ : 0) | (dep.host ? 1 /* Host */ : 0) |\n                (dep.optional ? 8 /* Optional */ : 0);\n            // Build up the arguments to the injectFn call.\n            var injectArgs = [dep.token];\n            // If this dependency is optional or otherwise has non-default flags, then additional\n            // parameters describing how to inject the dependency must be passed to the inject function\n            // that's being used.\n            if (flags !== 0 /* Default */ || dep.optional) {\n                injectArgs.push(literal(flags));\n            }\n            return importExpr(injectFn).callFn(injectArgs);\n        }\n        case R3ResolvedDependencyType.Attribute:\n            // In the case of attributes, the attribute name in question is given as the token.\n            return importExpr(Identifiers$1.injectAttribute).callFn([dep.token]);\n        default:\n            return unsupported(\"Unknown R3ResolvedDependencyType: \" + R3ResolvedDependencyType[dep.resolved]);\n    }\n}\n/**\n * A helper function useful for extracting `R3DependencyMetadata` from a Render2\n * `CompileTypeMetadata` instance.\n */\nfunction dependenciesFromGlobalMetadata(type, outputCtx, reflector) {\n    var e_1, _a;\n    // Use the `CompileReflector` to look up references to some well-known Angular types. These will\n    // be compared with the token to statically determine whether the token has significance to\n    // Angular, and set the correct `R3ResolvedDependencyType` as a result.\n    var injectorRef = reflector.resolveExternalReference(Identifiers.Injector);\n    // Iterate through the type's DI dependencies and produce `R3DependencyMetadata` for each of them.\n    var deps = [];\n    try {\n        for (var _b = __values(type.diDeps), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var dependency = _c.value;\n            if (dependency.token) {\n                var tokenRef = tokenReference(dependency.token);\n                var resolved = dependency.isAttribute ?\n                    R3ResolvedDependencyType.Attribute :\n                    R3ResolvedDependencyType.Token;\n                // In the case of most dependencies, the token will be a reference to a type. Sometimes,\n                // however, it can be a string, in the case of older Angular code or @Attribute injection.\n                var token = tokenRef instanceof StaticSymbol ? outputCtx.importExpr(tokenRef) : literal(tokenRef);\n                // Construct the dependency.\n                deps.push({\n                    token: token,\n                    resolved: resolved,\n                    host: !!dependency.isHost,\n                    optional: !!dependency.isOptional,\n                    self: !!dependency.isSelf,\n                    skipSelf: !!dependency.isSkipSelf,\n                });\n            }\n            else {\n                unsupported('dependency without a token');\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return deps;\n}\nfunction isDelegatedMetadata(meta) {\n    return meta.delegateType !== undefined;\n}\nfunction isExpressionFactoryMetadata(meta) {\n    return meta.expression !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Convert an object map with `Expression` values into a `LiteralMapExpr`.\n */\nfunction mapToMapExpression(map) {\n    var result = Object.keys(map).map(function (key) { return ({ key: key, value: map[key], quoted: false }); });\n    return literalMap(result);\n}\n/**\n * Convert metadata into an `Expression` in the given `OutputContext`.\n *\n * This operation will handle arrays, references to symbols, or literal `null` or `undefined`.\n */\nfunction convertMetaToOutput(meta, ctx) {\n    if (Array.isArray(meta)) {\n        return literalArr(meta.map(function (entry) { return convertMetaToOutput(entry, ctx); }));\n    }\n    if (meta instanceof StaticSymbol) {\n        return ctx.importExpr(meta);\n    }\n    if (meta == null) {\n        return literal(meta);\n    }\n    throw new Error(\"Internal error: Unsupported or unknown metadata: \" + meta);\n}\nfunction typeWithParameters(type, numParams) {\n    var params = null;\n    if (numParams > 0) {\n        params = [];\n        for (var i = 0; i < numParams; i++) {\n            params.push(DYNAMIC_TYPE);\n        }\n    }\n    return expressionType(type, null, params);\n}\nvar ANIMATE_SYMBOL_PREFIX = '@';\nfunction prepareSyntheticPropertyName(name) {\n    return \"\" + ANIMATE_SYMBOL_PREFIX + name;\n}\nfunction prepareSyntheticListenerName(name, phase) {\n    return \"\" + ANIMATE_SYMBOL_PREFIX + name + \".\" + phase;\n}\nfunction getSyntheticPropertyName(name) {\n    // this will strip out listener phase values...\n    // @foo.start => @foo\n    var i = name.indexOf('.');\n    name = i > 0 ? name.substring(0, i) : name;\n    if (name.charAt(0) !== ANIMATE_SYMBOL_PREFIX) {\n        name = ANIMATE_SYMBOL_PREFIX + name;\n    }\n    return name;\n}\nfunction prepareSyntheticListenerFunctionName(name, phase) {\n    return \"animation_\" + name + \"_\" + phase;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction compileInjectable(meta) {\n    var result = null;\n    var factoryMeta = {\n        name: meta.name,\n        type: meta.type,\n        deps: meta.ctorDeps,\n        injectFn: Identifiers.inject,\n    };\n    if (meta.useClass !== undefined) {\n        // meta.useClass has two modes of operation. Either deps are specified, in which case `new` is\n        // used to instantiate the class with dependencies injected, or deps are not specified and\n        // the factory of the class is used to instantiate it.\n        //\n        // A special case exists for useClass: Type where Type is the injectable type itself, in which\n        // case omitting deps just uses the constructor dependencies instead.\n        var useClassOnSelf = meta.useClass.isEquivalent(meta.type);\n        var deps = meta.userDeps || (useClassOnSelf && meta.ctorDeps) || undefined;\n        if (deps !== undefined) {\n            // factory: () => new meta.useClass(...deps)\n            result = compileFactoryFunction(__assign({}, factoryMeta, { delegate: meta.useClass, delegateDeps: deps, delegateType: R3FactoryDelegateType.Class }));\n        }\n        else {\n            result = compileFactoryFunction(__assign({}, factoryMeta, { delegate: meta.useClass, delegateType: R3FactoryDelegateType.Factory }));\n        }\n    }\n    else if (meta.useFactory !== undefined) {\n        result = compileFactoryFunction(__assign({}, factoryMeta, { delegate: meta.useFactory, delegateDeps: meta.userDeps || [], delegateType: R3FactoryDelegateType.Function }));\n    }\n    else if (meta.useValue !== undefined) {\n        // Note: it's safe to use `meta.useValue` instead of the `USE_VALUE in meta` check used for\n        // client code because meta.useValue is an Expression which will be defined even if the actual\n        // value is undefined.\n        result = compileFactoryFunction(__assign({}, factoryMeta, { expression: meta.useValue }));\n    }\n    else if (meta.useExisting !== undefined) {\n        // useExisting is an `inject` call on the existing token.\n        result = compileFactoryFunction(__assign({}, factoryMeta, { expression: importExpr(Identifiers.inject).callFn([meta.useExisting]) }));\n    }\n    else {\n        result = compileFactoryFunction(factoryMeta);\n    }\n    var token = meta.type;\n    var providedIn = meta.providedIn;\n    var expression = importExpr(Identifiers.defineInjectable).callFn([mapToMapExpression({ token: token, factory: result.factory, providedIn: providedIn })]);\n    var type = new ExpressionType(importExpr(Identifiers.InjectableDef, [typeWithParameters(meta.type, meta.typeArgumentCount)]));\n    return {\n        expression: expression,\n        type: type,\n        statements: result.statements,\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var start_1 = value[0];\n        var end_1 = value[1];\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = /** @class */ (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    InterpolationConfig.fromArray = function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = /** @class */ (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    SourceMapGenerator.prototype.addSource = function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    SourceMapGenerator.prototype.addLine = function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    SourceMapGenerator.prototype.toJSON = function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var sourcesIndex = new Map();\n        var sources = [];\n        var sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var mappings = '';\n        var lastCol0 = 0;\n        var lastSourceIndex = 0;\n        var lastSourceLine0 = 0;\n        var lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(sourcesIndex.get(segment.sourceUrl) - lastSourceIndex);\n                    lastSourceIndex = sourcesIndex.get(segment.sourceUrl);\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(segment.sourceLine0 - lastSourceLine0);\n                    lastSourceLine0 = segment.sourceLine0;\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(segment.sourceCol0 - lastSourceCol0);\n                    lastSourceCol0 = segment.sourceCol0;\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    SourceMapGenerator.prototype.toJsComment = function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\nfunction toBase64String(value) {\n    var b64 = '';\n    value = utf8Encode(value);\n    for (var i = 0; i < value.length;) {\n        var i1 = value.charCodeAt(i++);\n        var i2 = value.charCodeAt(i++);\n        var i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var out = '';\n    do {\n        var digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\nvar _EmittedLine = /** @class */ (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = /** @class */ (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    EmitterVisitorContext.createRoot = function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    EmitterVisitorContext.prototype.println = function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n    EmitterVisitorContext.prototype.lineLength = function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    EmitterVisitorContext.prototype.incIndent = function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    EmitterVisitorContext.prototype.decIndent = function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n    EmitterVisitorContext.prototype.popClass = function () { return this._classes.pop(); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EmitterVisitorContext.prototype.toSource = function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    EmitterVisitorContext.prototype.toSourceMapGenerator = function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var map = new SourceMapGenerator(genFilePath);\n        var firstOffsetMapped = false;\n        var mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var spans = line.srcSpans;\n            var parts = line.parts;\n            var col0 = line.indent * _INDENT_WITH.length;\n            var spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var span = spans[spanIdx];\n                var source = span.start.file;\n                var sourceLine = span.start.line;\n                var sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    EmitterVisitorContext.prototype.setPreambleLineCount = function (count) { return this._preambleLineCount = count; };\n    EmitterVisitorContext.prototype.spanOf = function (line, column) {\n        var emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\nvar AbstractEmitterVisitor = /** @class */ (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n        if (stmt.multiline) {\n            ctx.println(stmt, \"/* \" + stmt.comment + \" */\");\n        }\n        else {\n            stmt.comment.split('\\n').forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitJSDocCommentStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"/*\" + stmt.toString() + \"*/\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n        var lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        throw new Error('Abstract emitter cannot visit WrappedNodeExpr.');\n    };\n    AbstractEmitterVisitor.prototype.visitTypeofExpr = function (expr, ctx) {\n        ctx.print(expr, 'typeof ');\n        expr.expr.visitExpression(this, ctx);\n    };\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        var varName = ast.name;\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$1.name;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$1.name;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': ');\n        ast.falseCase.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.BitwiseAnd:\n                opStr = '&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        if (ast.parens)\n            ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        if (ast.parens)\n            ctx.print(ast, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator) {\n        var incrementedIndent = false;\n        for (var i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\nfunction _createIndent(count) {\n    var res = '';\n    for (var i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AbstractJsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    AbstractJsEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        throw new Error('Cannot emit a WrappedNodeExpr in Javascript.');\n    };\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name);\n        if (stmt.value) {\n            ctx.print(stmt, ' = ');\n            stmt.value.visitExpression(this, ctx);\n        }\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        var fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.currentClass.parent.visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"function\" + (ast.name ? ' ' + ast.name : '') + \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var catchStmts = [CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ])].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var fnArgNames = [];\n    var fnArgValues = [];\n    for (var argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var emptyFn = new (Function.bind.apply(Function, __spread([void 0], fnArgNames.concat('return null;'))))().toString();\n        var headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, __spread([void 0], fnArgNames.concat(fnBody))))().apply(void 0, __spread(fnArgValues));\n}\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var converter = new JitEmitterVisitor(reflector);\n    var ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = /** @class */ (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    JitEmitterVisitor.prototype.createReturnStmt = function (ctx) {\n        var stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    JitEmitterVisitor.prototype.getArgs = function () {\n        var result = {};\n        for (var i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._emitReferenceToExternal(ast, this.reflector.resolveExternalReference(ast.value), ctx);\n        return null;\n    };\n    JitEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        this._emitReferenceToExternal(ast, ast.node, ctx);\n        return null;\n    };\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    JitEmitterVisitor.prototype._emitReferenceToExternal = function (ast, value, ctx) {\n        var id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Implementation of `CompileReflector` which resolves references to @angular/core\n * symbols at runtime, according to a consumer-provided mapping.\n *\n * Only supports `resolveExternalReference`, all other methods throw.\n */\nvar R3JitReflector = /** @class */ (function () {\n    function R3JitReflector(context) {\n        this.context = context;\n    }\n    R3JitReflector.prototype.resolveExternalReference = function (ref) {\n        // This reflector only handles @angular/core imports.\n        if (ref.moduleName !== '@angular/core') {\n            throw new Error(\"Cannot resolve external reference to \" + ref.moduleName + \", only references to @angular/core are supported.\");\n        }\n        if (!this.context.hasOwnProperty(ref.name)) {\n            throw new Error(\"No value provided for @angular/core symbol '\" + ref.name + \"'.\");\n        }\n        return this.context[ref.name];\n    };\n    R3JitReflector.prototype.parameters = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.annotations = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.shallowAnnotations = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.tryAnnotations = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.propMetadata = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.guards = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) { throw new Error('Not implemented.'); };\n    return R3JitReflector;\n}());\n/**\n * JIT compiles an expression and returns the result of executing that expression.\n *\n * @param def the definition which will be compiled and executed to get the value to patch\n * @param context an object map of @angular/core symbol names to symbols which will be available in\n * the context of the compiled expression\n * @param sourceUrl a URL to use for the source map of the compiled expression\n * @param constantPool an optional `ConstantPool` which contains constants used in the expression\n */\nfunction jitExpression(def, context, sourceUrl, preStatements) {\n    // The ConstantPool may contain Statements which declare variables used in the final expression.\n    // Therefore, its statements need to precede the actual JIT operation. The final statement is a\n    // declaration of $def which is set to the expression being compiled.\n    var statements = __spread(preStatements, [\n        new DeclareVarStmt('$def', def, undefined, [StmtModifier.Exported]),\n    ]);\n    var res = jitStatements(sourceUrl, statements, new R3JitReflector(context), false);\n    return res['$def'];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an `R3NgModuleDef` for the given `R3NgModuleMetadata`.\n */\nfunction compileNgModule(meta) {\n    var moduleType = meta.type, bootstrap = meta.bootstrap, declarations = meta.declarations, imports = meta.imports, exports = meta.exports;\n    var expression = importExpr(Identifiers$1.defineNgModule).callFn([mapToMapExpression({\n            type: moduleType,\n            bootstrap: literalArr(bootstrap.map(function (ref) { return ref.value; })),\n            declarations: literalArr(declarations.map(function (ref) { return ref.value; })),\n            imports: literalArr(imports.map(function (ref) { return ref.value; })),\n            exports: literalArr(exports.map(function (ref) { return ref.value; })),\n        })]);\n    var type = new ExpressionType(importExpr(Identifiers$1.NgModuleDefWithMeta, [\n        new ExpressionType(moduleType), tupleTypeOf(declarations), tupleTypeOf(imports),\n        tupleTypeOf(exports)\n    ]));\n    var additionalStatements = [];\n    return { expression: expression, type: type, additionalStatements: additionalStatements };\n}\nfunction compileInjector(meta) {\n    var result = compileFactoryFunction({\n        name: meta.name,\n        type: meta.type,\n        deps: meta.deps,\n        injectFn: Identifiers$1.inject,\n    });\n    var expression = importExpr(Identifiers$1.defineInjector).callFn([mapToMapExpression({\n            factory: result.factory,\n            providers: meta.providers,\n            imports: meta.imports,\n        })]);\n    var type = new ExpressionType(importExpr(Identifiers$1.InjectorDef, [new ExpressionType(meta.type)]));\n    return { expression: expression, type: type, statements: result.statements };\n}\n// TODO(alxhub): integrate this with `compileNgModule`. Currently the two are separate operations.\nfunction compileNgModuleFromRender2(ctx, ngModule, injectableCompiler) {\n    var className = identifierName(ngModule.type);\n    var rawImports = ngModule.rawImports ? [ngModule.rawImports] : [];\n    var rawExports = ngModule.rawExports ? [ngModule.rawExports] : [];\n    var injectorDefArg = mapLiteral({\n        'factory': injectableCompiler.factoryFor({ type: ngModule.type, symbol: ngModule.type.reference }, ctx),\n        'providers': convertMetaToOutput(ngModule.rawProviders, ctx),\n        'imports': convertMetaToOutput(__spread(rawImports, rawExports), ctx),\n    });\n    var injectorDef = importExpr(Identifiers$1.defineInjector).callFn([injectorDefArg]);\n    ctx.statements.push(new ClassStmt(\n    /* name */ className, \n    /* parent */ null, \n    /* fields */ [new ClassField(\n        /* name */ 'ngInjectorDef', \n        /* type */ INFERRED_TYPE, \n        /* modifiers */ [StmtModifier.Static], \n        /* initializer */ injectorDef)], \n    /* getters */ [], \n    /* constructorMethod */ new ClassMethod(null, [], []), \n    /* methods */ []));\n}\nfunction tupleTypeOf(exp) {\n    var types = exp.map(function (ref) { return typeofExpr(ref.type); });\n    return exp.length > 0 ? expressionType(literalArr(types)) : NONE_TYPE;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction compilePipeFromMetadata(metadata) {\n    var definitionMapValues = [];\n    // e.g. `name: 'myPipe'`\n    definitionMapValues.push({ key: 'name', value: literal(metadata.pipeName), quoted: false });\n    // e.g. `type: MyPipe`\n    definitionMapValues.push({ key: 'type', value: metadata.type, quoted: false });\n    var templateFactory = compileFactoryFunction({\n        name: metadata.name,\n        type: metadata.type,\n        deps: metadata.deps,\n        injectFn: Identifiers$1.directiveInject,\n    });\n    definitionMapValues.push({ key: 'factory', value: templateFactory.factory, quoted: false });\n    // e.g. `pure: true`\n    definitionMapValues.push({ key: 'pure', value: literal(metadata.pure), quoted: false });\n    var expression = importExpr(Identifiers$1.definePipe).callFn([literalMap(definitionMapValues)]);\n    var type = new ExpressionType(importExpr(Identifiers$1.PipeDefWithMeta, [\n        new ExpressionType(metadata.type),\n        new ExpressionType(new LiteralExpr(metadata.pipeName)),\n    ]));\n    return { expression: expression, type: type, statements: templateFactory.statements };\n}\n/**\n * Write a pipe definition to the output context.\n */\nfunction compilePipeFromRender2(outputCtx, pipe, reflector) {\n    var name = identifierName(pipe.type);\n    if (!name) {\n        return error(\"Cannot resolve the name of \" + pipe.type);\n    }\n    var metadata = {\n        name: name,\n        pipeName: pipe.name,\n        type: outputCtx.importExpr(pipe.type.reference),\n        deps: dependenciesFromGlobalMetadata(pipe.type, outputCtx, reflector),\n        pure: pipe.pure,\n    };\n    var res = compilePipeFromMetadata(metadata);\n    var definitionField = outputCtx.constantPool.propertyNameOf(3 /* Pipe */);\n    outputCtx.statements.push(new ClassStmt(\n    /* name */ name, \n    /* parent */ null, \n    /* fields */ [new ClassField(\n        /* name */ definitionField, \n        /* type */ INFERRED_TYPE, \n        /* modifiers */ [StmtModifier.Static], \n        /* initializer */ res.expression)], \n    /* getters */ [], \n    /* constructorMethod */ new ClassMethod(null, [], []), \n    /* methods */ []));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = /** @class */ (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = /** @class */ (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = /** @class */ (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    AST.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    AST.prototype.toString = function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = /** @class */ (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    Quote.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    Quote.prototype.toString = function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = /** @class */ (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EmptyExpr.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = /** @class */ (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ImplicitReceiver.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = /** @class */ (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    Chain.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = /** @class */ (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    Conditional.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = /** @class */ (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    PropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = /** @class */ (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    PropertyWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = /** @class */ (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    SafePropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = /** @class */ (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    KeyedRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = /** @class */ (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    KeyedWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = /** @class */ (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    BindingPipe.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = /** @class */ (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    LiteralPrimitive.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = /** @class */ (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    LiteralArray.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = /** @class */ (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    LiteralMap.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = /** @class */ (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    Interpolation.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = /** @class */ (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    Binary.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = /** @class */ (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    PrefixNot.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = /** @class */ (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    NonNullAssert.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = /** @class */ (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    MethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = /** @class */ (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    SafeMethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = /** @class */ (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    FunctionCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = /** @class */ (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    ASTWithSource.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = /** @class */ (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\nvar NullAstVisitor = /** @class */ (function () {\n    function NullAstVisitor() {\n    }\n    NullAstVisitor.prototype.visitBinary = function (ast, context) { };\n    NullAstVisitor.prototype.visitChain = function (ast, context) { };\n    NullAstVisitor.prototype.visitConditional = function (ast, context) { };\n    NullAstVisitor.prototype.visitFunctionCall = function (ast, context) { };\n    NullAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { };\n    NullAstVisitor.prototype.visitInterpolation = function (ast, context) { };\n    NullAstVisitor.prototype.visitKeyedRead = function (ast, context) { };\n    NullAstVisitor.prototype.visitKeyedWrite = function (ast, context) { };\n    NullAstVisitor.prototype.visitLiteralArray = function (ast, context) { };\n    NullAstVisitor.prototype.visitLiteralMap = function (ast, context) { };\n    NullAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { };\n    NullAstVisitor.prototype.visitMethodCall = function (ast, context) { };\n    NullAstVisitor.prototype.visitPipe = function (ast, context) { };\n    NullAstVisitor.prototype.visitPrefixNot = function (ast, context) { };\n    NullAstVisitor.prototype.visitNonNullAssert = function (ast, context) { };\n    NullAstVisitor.prototype.visitPropertyRead = function (ast, context) { };\n    NullAstVisitor.prototype.visitPropertyWrite = function (ast, context) { };\n    NullAstVisitor.prototype.visitQuote = function (ast, context) { };\n    NullAstVisitor.prototype.visitSafeMethodCall = function (ast, context) { };\n    NullAstVisitor.prototype.visitSafePropertyRead = function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor$1 = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n    RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n        ast.target.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n    RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n    RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitNonNullAssert = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer$1 = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    AstTransformer.prototype.visitInterpolation = function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    AstTransformer.prototype.visitMethodCall = function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n        return new FunctionCall(ast.span, ast.target.visit(this), this.visitAll(ast.args));\n    };\n    AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    AstTransformer.prototype.visitBinary = function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    AstTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    AstTransformer.prototype.visitConditional = function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    AstTransformer.prototype.visitPipe = function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    AstTransformer.prototype.visitAll = function (asts) {\n        var res = new Array(asts.length);\n        for (var i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    AstTransformer.prototype.visitChain = function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    AstTransformer.prototype.visitQuote = function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n// A transformer that only creates new nodes if the transformer makes a change or\n// a change is made a child node.\nvar AstMemoryEfficientTransformer = /** @class */ (function () {\n    function AstMemoryEfficientTransformer() {\n    }\n    AstMemoryEfficientTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    AstMemoryEfficientTransformer.prototype.visitInterpolation = function (ast, context) {\n        var expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions)\n            return new Interpolation(ast.span, ast.strings, expressions);\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitLiteralPrimitive = function (ast, context) { return ast; };\n    AstMemoryEfficientTransformer.prototype.visitPropertyRead = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new PropertyRead(ast.span, receiver, ast.name);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        var value = ast.value.visit(this);\n        if (receiver !== ast.receiver || value !== ast.value) {\n            return new PropertyWrite(ast.span, receiver, ast.name, value);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new SafePropertyRead(ast.span, receiver, ast.name);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitMethodCall = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new MethodCall(ast.span, receiver, ast.name, this.visitAll(ast.args));\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        var args = this.visitAll(ast.args);\n        if (receiver !== ast.receiver || args !== ast.args) {\n            return new SafeMethodCall(ast.span, receiver, ast.name, args);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitFunctionCall = function (ast, context) {\n        var target = ast.target && ast.target.visit(this);\n        var args = this.visitAll(ast.args);\n        if (target !== ast.target || args !== ast.args) {\n            return new FunctionCall(ast.span, target, args);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitLiteralArray = function (ast, context) {\n        var expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions) {\n            return new LiteralArray(ast.span, expressions);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitLiteralMap = function (ast, context) {\n        var values = this.visitAll(ast.values);\n        if (values !== ast.values) {\n            return new LiteralMap(ast.span, ast.keys, values);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitBinary = function (ast, context) {\n        var left = ast.left.visit(this);\n        var right = ast.right.visit(this);\n        if (left !== ast.left || right !== ast.right) {\n            return new Binary(ast.span, ast.operation, left, right);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitPrefixNot = function (ast, context) {\n        var expression = ast.expression.visit(this);\n        if (expression !== ast.expression) {\n            return new PrefixNot(ast.span, expression);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        var expression = ast.expression.visit(this);\n        if (expression !== ast.expression) {\n            return new NonNullAssert(ast.span, expression);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitConditional = function (ast, context) {\n        var condition = ast.condition.visit(this);\n        var trueExp = ast.trueExp.visit(this);\n        var falseExp = ast.falseExp.visit(this);\n        if (condition !== ast.condition || trueExp !== ast.trueExp || falseExp !== falseExp) {\n            return new Conditional(ast.span, condition, trueExp, falseExp);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitPipe = function (ast, context) {\n        var exp = ast.exp.visit(this);\n        var args = this.visitAll(ast.args);\n        if (exp !== ast.exp || args !== ast.args) {\n            return new BindingPipe(ast.span, exp, ast.name, args);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitKeyedRead = function (ast, context) {\n        var obj = ast.obj.visit(this);\n        var key = ast.key.visit(this);\n        if (obj !== ast.obj || key !== ast.key) {\n            return new KeyedRead(ast.span, obj, key);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        var obj = ast.obj.visit(this);\n        var key = ast.key.visit(this);\n        var value = ast.value.visit(this);\n        if (obj !== ast.obj || key !== ast.key || value !== ast.value) {\n            return new KeyedWrite(ast.span, obj, key, value);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitAll = function (asts) {\n        var res = new Array(asts.length);\n        var modified = false;\n        for (var i = 0; i < asts.length; ++i) {\n            var original = asts[i];\n            var value = original.visit(this);\n            res[i] = value;\n            modified = modified || value !== original;\n        }\n        return modified ? res : asts;\n    };\n    AstMemoryEfficientTransformer.prototype.visitChain = function (ast, context) {\n        var expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions) {\n            return new Chain(ast.span, expressions);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitQuote = function (ast, context) { return ast; };\n    return AstMemoryEfficientTransformer;\n}());\nfunction visitAstChildren(ast, visitor, context) {\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: function (ast) { visitAll(ast.expressions); },\n        visitConditional: function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: function (ast) { visit(ast.expression); },\n        visitNonNullAssert: function (ast) { visit(ast.expression); },\n        visitPropertyRead: function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: function (ast) { },\n        visitSafeMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: function (ast) { visit(ast.receiver); },\n    });\n}\n// Bindings\nvar ParsedProperty = /** @class */ (function () {\n    function ParsedProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === ParsedPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === ParsedPropertyType.ANIMATION;\n    }\n    return ParsedProperty;\n}());\nvar ParsedPropertyType;\n(function (ParsedPropertyType) {\n    ParsedPropertyType[ParsedPropertyType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    ParsedPropertyType[ParsedPropertyType[\"LITERAL_ATTR\"] = 1] = \"LITERAL_ATTR\";\n    ParsedPropertyType[ParsedPropertyType[\"ANIMATION\"] = 2] = \"ANIMATION\";\n})(ParsedPropertyType || (ParsedPropertyType = {}));\nvar ParsedEvent = /** @class */ (function () {\n    // Regular events have a target\n    // Animation events have a phase\n    function ParsedEvent(name, targetOrPhase, type, handler, sourceSpan) {\n        this.name = name;\n        this.targetOrPhase = targetOrPhase;\n        this.type = type;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    return ParsedEvent;\n}());\nvar ParsedVariable = /** @class */ (function () {\n    function ParsedVariable(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    return ParsedVariable;\n}());\nvar BoundElementProperty = /** @class */ (function () {\n    function BoundElementProperty(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    return BoundElementProperty;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = /** @class */ (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\nvar ConvertActionBindingResult = /** @class */ (function () {\n    function ConvertActionBindingResult(\n    /**\n     * Render2 compatible statements,\n     */\n    stmts, \n    /**\n     * Variable name used with render2 compatible statements.\n     */\n    allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n        /**\n         * This is bit of a hack. It converts statements which render2 expects to statements which are\n         * expected by render3.\n         *\n         * Example: `<div click=\"doSomething($event)\">` will generate:\n         *\n         * Render3:\n         * ```\n         * const pd_b:any = ((<any>ctx.doSomething($event)) !== false);\n         * return pd_b;\n         * ```\n         *\n         * but render2 expects:\n         * ```\n         * return ctx.doSomething($event);\n         * ```\n         */\n        // TODO(misko): remove this hack once we no longer support ViewEngine.\n        this.render3Stmts = stmts.map(function (statement) {\n            if (statement instanceof DeclareVarStmt && statement.name == allowDefault.name &&\n                statement.value instanceof BinaryOperatorExpr) {\n                var lhs = statement.value.lhs;\n                return new ReturnStatement(lhs.value);\n            }\n            return statement;\n        });\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var entries = keys.map(function (k, i) { return ({\n                    key: k.key,\n                    value: values[i],\n                    quoted: k.quoted,\n                }); });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var lastIndex = actionStmts.length - 1;\n    var preventDefaultVar = null;\n    if (lastIndex >= 0) {\n        var lastStatement = actionStmts[lastIndex];\n        var returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = /** @class */ (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\nvar BindingForm;\n(function (BindingForm) {\n    // The general form of binding expression, supports all expressions.\n    BindingForm[BindingForm[\"General\"] = 0] = \"General\";\n    // Try to generate a simple binding (no temporaries or statements)\n    // otherwise generate a general binding\n    BindingForm[BindingForm[\"TrySimple\"] = 1] = \"TrySimple\";\n})(BindingForm || (BindingForm = {}));\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId, form, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var currValExpr = createCurrValueExpr(bindingId);\n    var stmts = [];\n    var visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    else if (form == BindingForm.TrySimple) {\n        return new ConvertPropertyBindingResult([], outputExpr);\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(DYNAMIC_TYPE, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\nfunction convertBuiltins(converterFactory, ast) {\n    var visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nvar _Mode;\n(function (_Mode) {\n    _Mode[_Mode[\"Statement\"] = 0] = \"Statement\";\n    _Mode[_Mode[\"Expression\"] = 1] = \"Expression\";\n})(_Mode || (_Mode = {}));\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = /** @class */ (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n        var _this = this;\n        var args = __spread([ast.exp], ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n        var _this = this;\n        var args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n        var _this = this;\n        var args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer$1));\nvar _AstToIrVisitor = /** @class */ (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId, interpolationFunction) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this.interpolationFunction = interpolationFunction;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n        var op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n        var value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n        var convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(ast.target, _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var args = [literal(ast.expressions.length)];\n        for (var i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        if (this.interpolationFunction) {\n            return this.interpolationFunction(args);\n        }\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n        var leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n        var obj = this._visit(ast.obj, _Mode.Expression);\n        var key = this._visit(ast.key, _Mode.Expression);\n        var value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n        // For literal values of null, undefined, true, or false allow type interference\n        // to infer the type.\n        var type = ast.value === null || ast.value === undefined || ast.value === true || ast.value === true ?\n            INFERRED_TYPE :\n            undefined;\n        return convertToStatementIfNeeded(mode, literal(ast.value, type));\n    };\n    _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n        if (ast.receiver instanceof ImplicitReceiver && ast.name == '$any') {\n            var args = this.visitAll(ast.args, _Mode.Expression);\n            if (args.length != 1) {\n                throw new Error(\"Invalid call to $any, expected 1 argument but received \" + (args.length || 'none'));\n            }\n            return args[0].cast(DYNAMIC_TYPE);\n        }\n        var leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var args = this.visitAll(ast.args, _Mode.Expression);\n            var result = null;\n            var receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitNonNullAssert = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n        var leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var result = null;\n            var receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n        var receiver = this._visit(ast.receiver, _Mode.Expression);\n        var varExpr = null;\n        if (receiver === this._implicitReceiver) {\n            var localExpr = this._getLocal(ast.name);\n            if (localExpr) {\n                if (localExpr instanceof ReadPropExpr) {\n                    // If the local variable is a property read expression, it's a reference\n                    // to a 'context.property' value and will be used as the target of the\n                    // write expression.\n                    varExpr = localExpr;\n                }\n                else {\n                    // Otherwise it's an error.\n                    throw new Error('Cannot assign to a reference or variable!');\n                }\n            }\n        }\n        // If no local expression could be produced, use the original receiver's\n        // property as the target.\n        if (varExpr === null) {\n            varExpr = receiver.prop(ast.name);\n        }\n        return convertToStatementIfNeeded(mode, varExpr.set(this._visit(ast.value, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    _AstToIrVisitor.prototype._visit = function (ast, mode) {\n        var result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var temporary = undefined;\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    // Given a expression of the form a?.b.c?.d.e the the left most safe node is\n    // the (a?.b). The . and ?. are left associative thus can be rewritten as:\n    // ((((a?.c).b).c)?.d).e. This returns the most deeply nested safe read or\n    // safe method call as this needs be transform initially to:\n    //   a == null ? null : a.c.b.c?.d.e\n    // then to:\n    //   a == null ? null : a.b.c == null ? null : a.b.c.d.e\n    _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n        var _this = this;\n        var visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: function (ast) { return null; },\n            visitChain: function (ast) { return null; },\n            visitConditional: function (ast) { return null; },\n            visitFunctionCall: function (ast) { return null; },\n            visitImplicitReceiver: function (ast) { return null; },\n            visitInterpolation: function (ast) { return null; },\n            visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: function (ast) { return null; },\n            visitLiteralArray: function (ast) { return null; },\n            visitLiteralMap: function (ast) { return null; },\n            visitLiteralPrimitive: function (ast) { return null; },\n            visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n            visitPipe: function (ast) { return null; },\n            visitPrefixNot: function (ast) { return null; },\n            visitNonNullAssert: function (ast) { return null; },\n            visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: function (ast) { return null; },\n            visitQuote: function (ast) { return null; },\n            visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    // Returns true of the AST includes a method or a pipe indicating that, if the\n    // expression is used as the target of a safe property or method access then\n    // the expression should be stored into a temporary variable.\n    _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n        var _this = this;\n        var visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: function (ast) { return false; },\n            visitConditional: function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: function (ast) { return true; },\n            visitImplicitReceiver: function (ast) { return false; },\n            visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: function (ast) { return false; },\n            visitKeyedWrite: function (ast) { return false; },\n            visitLiteralArray: function (ast) { return true; },\n            visitLiteralMap: function (ast) { return true; },\n            visitLiteralPrimitive: function (ast) { return false; },\n            visitMethodCall: function (ast) { return true; },\n            visitPipe: function (ast) { return true; },\n            visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: function (ast) { return false; },\n            visitPropertyWrite: function (ast) { return false; },\n            visitQuote: function (ast) { return false; },\n            visitSafeMethodCall: function (ast) { return true; },\n            visitSafePropertyRead: function (ast) { return false; }\n        });\n    };\n    _AstToIrVisitor.prototype.allocateTemporary = function () {\n        var tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        arg.forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = /** @class */ (function () {\n    function DefaultLocalResolver() {\n    }\n    DefaultLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = /** @class */ (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LifecycleHooks;\n(function (LifecycleHooks) {\n    LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\n    LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\n    LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\n    LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\n    LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\n    LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\n    LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\n    LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\n})(LifecycleHooks || (LifecycleHooks = {}));\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n        default:\n            // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n            // However Closure Compiler does not understand that and reports an error in typed mode.\n            // The `throw new Error` below works around the problem, and the unexpected: never variable\n            // makes sure tsc still checks this code is unreachable.\n            var unexpected = hook;\n            throw new Error(\"unexpected \" + unexpected);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\nvar $BT = 96;\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = /** @class */ (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    ParseLocation.prototype.toString = function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    ParseLocation.prototype.moveBy = function (delta) {\n        var source = this.file.content;\n        var len = source.length;\n        var offset = this.offset;\n        var line = this.line;\n        var col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n        var content = this.file.content;\n        var startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var endOffset = startOffset;\n            var ctxChars = 0;\n            var ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = /** @class */ (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = /** @class */ (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    ParseSourceSpan.prototype.toString = function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\nvar ParseErrorLevel;\n(function (ParseErrorLevel) {\n    ParseErrorLevel[ParseErrorLevel[\"WARNING\"] = 0] = \"WARNING\";\n    ParseErrorLevel[ParseErrorLevel[\"ERROR\"] = 1] = \"ERROR\";\n})(ParseErrorLevel || (ParseErrorLevel = {}));\nvar ParseError = /** @class */ (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    ParseError.prototype.contextualMessage = function () {\n        var ctx = this.span.start.getContext(100, 3);\n        return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n            this.msg;\n    };\n    ParseError.prototype.toString = function () {\n        var details = this.span.details ? \", \" + this.span.details : '';\n        return this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\nfunction typeSourceSpan(kind, type) {\n    var moduleUrl = identifierModuleUrl(type);\n    var sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var commentsWithHash = extractCommentsWithHash(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        var scopedCssText = this._scopeCssText(cssText, selector, hostSelector);\n        return __spread([scopedCssText], commentsWithHash).join('\\n');\n    };\n    ShadowCss.prototype._insertDirectives = function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /*\n     * Process styles to convert native ShadowDOM rules that will trip\n     * up the css parser; we rely on decorating the stylesheet with inert rules.\n     *\n     * For example, we convert this rule:\n     *\n     * polyfill-next-selector { content: ':host menu-item'; }\n     * ::content menu-item {\n     *\n     * to this:\n     *\n     * scopeName menu-item {\n     *\n    **/\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /*\n     * Process styles to add rules which will only apply under the polyfill\n     *\n     * For example, we convert this rule:\n     *\n     * polyfill-rule {\n     *   content: ':host menu-item';\n     * ...\n     * }\n     *\n     * to this:\n     *\n     * scopeName menu-item {...}\n     *\n    **/\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /* Ensure styles are scoped. Pseudo-scoping takes a rule like:\n     *\n     *  .foo {... }\n     *\n     *  and converts this to\n     *\n     *  scopeName .foo { ... }\n    */\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n        var unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /*\n     * Process styles to add rules which will only apply under the polyfill\n     * and do not process via CSSOM. (CSSOM is destructive to rules on rare\n     * occasions, e.g. -webkit-calc on Safari.)\n     * For example, we convert this rule:\n     *\n     * @polyfill-unscoped-rule {\n     *   content: 'menu-item';\n     * ... }\n     *\n     * to this:\n     *\n     * menu-item {...}\n     *\n    **/\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var r = '';\n        var m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /*\n     * convert a rule like :host(.foo) > .bar { }\n     *\n     * to\n     *\n     * .foo<scopeName> > .bar\n    */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /*\n     * convert a rule like :host-context(.foo) > .bar { }\n     *\n     * to\n     *\n     * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n     *\n     * and\n     *\n     * :host-context(.foo:host) .bar { ... }\n     *\n     * to\n     *\n     * .foo<scopeName> .bar { ... }\n    */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var parts = m[2].split(',');\n                var r = [];\n                for (var i = 0; i < parts.length; i++) {\n                    var p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /*\n     * Convert combinators like ::shadow and pseudo-elements like ::content\n     * by replacing with space.\n    */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    // change a selector like 'div' to 'name div'\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var selector = rule.selector;\n            var content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var _a = __read(deepParts), shallowPart = _a[0], otherParts = _a.slice(1);\n            var applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return __spread([applyScope(shallowPart)], otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var lre = /\\[/g;\n        var rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    // scope via name and [is=name]\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    // return a selector with [name] suffix on each simple selector\n    // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var attrName = '[' + scopeSelector + ']';\n        var _scopeSelectorPart = function (p) {\n            var scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var scopedSelector = '';\n        var startIndex = 0;\n        var res;\n        var sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var separator = res[1];\n            var part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nfunction extractCommentsWithHash(input) {\n    return input.match(_commentWithHashRe) || [];\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\nfunction processRules(input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\nfunction escapeBlocks(input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = /** @class */ (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = /** @class */ (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = /** @class */ (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    StyleCompiler.prototype.compileComponent = function (outputCtx, comp) {\n        var template = comp.template;\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    StyleCompiler.prototype.compileStyles = function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    StyleCompiler.prototype.needsStyleShim = function (comp) {\n        return comp.template.encapsulation === ViewEncapsulation.Emulated;\n    };\n    StyleCompiler.prototype._compileStyles = function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(null);\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    StyleCompiler.prototype._shimIfNeeded = function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\nfunction getStylesVarName(component) {\n    var result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Parses string representation of a style and converts it into object literal.\n *\n * @param value string representation of style as used in the `style` attribute in HTML.\n *   Example: `color: red; height: auto`.\n * @returns An array of style property name and value pairs, e.g. `['color', 'red', 'height',\n * 'auto']`\n */\nfunction parse(value) {\n    // we use a string array here instead of a string map\n    // because a string-map is not guaranteed to retain the\n    // order of the entries whereas a string array can be\n    // construted in a [key, value, key, value] format.\n    var styles = [];\n    var i = 0;\n    var parenDepth = 0;\n    var quote = 0 /* QuoteNone */;\n    var valueStart = 0;\n    var propStart = 0;\n    var currentProp = null;\n    var valueHasQuotes = false;\n    while (i < value.length) {\n        var token = value.charCodeAt(i++);\n        switch (token) {\n            case 40 /* OpenParen */:\n                parenDepth++;\n                break;\n            case 41 /* CloseParen */:\n                parenDepth--;\n                break;\n            case 39 /* QuoteSingle */:\n                // valueStart needs to be there since prop values don't\n                // have quotes in CSS\n                valueHasQuotes = valueHasQuotes || valueStart > 0;\n                if (quote === 0 /* QuoteNone */) {\n                    quote = 39 /* QuoteSingle */;\n                }\n                else if (quote === 39 /* QuoteSingle */ && value.charCodeAt(i - 1) !== 92 /* BackSlash */) {\n                    quote = 0 /* QuoteNone */;\n                }\n                break;\n            case 34 /* QuoteDouble */:\n                // same logic as above\n                valueHasQuotes = valueHasQuotes || valueStart > 0;\n                if (quote === 0 /* QuoteNone */) {\n                    quote = 34 /* QuoteDouble */;\n                }\n                else if (quote === 34 /* QuoteDouble */ && value.charCodeAt(i - 1) !== 92 /* BackSlash */) {\n                    quote = 0 /* QuoteNone */;\n                }\n                break;\n            case 58 /* Colon */:\n                if (!currentProp && parenDepth === 0 && quote === 0 /* QuoteNone */) {\n                    currentProp = hyphenate(value.substring(propStart, i - 1).trim());\n                    valueStart = i;\n                }\n                break;\n            case 59 /* Semicolon */:\n                if (currentProp && valueStart > 0 && parenDepth === 0 && quote === 0 /* QuoteNone */) {\n                    var styleVal = value.substring(valueStart, i - 1).trim();\n                    styles.push(currentProp, valueHasQuotes ? stripUnnecessaryQuotes(styleVal) : styleVal);\n                    propStart = i;\n                    valueStart = 0;\n                    currentProp = null;\n                    valueHasQuotes = false;\n                }\n                break;\n        }\n    }\n    if (currentProp && valueStart) {\n        var styleVal = value.substr(valueStart).trim();\n        styles.push(currentProp, valueHasQuotes ? stripUnnecessaryQuotes(styleVal) : styleVal);\n    }\n    return styles;\n}\nfunction stripUnnecessaryQuotes(value) {\n    var qS = value.charCodeAt(0);\n    var qE = value.charCodeAt(value.length - 1);\n    if (qS == qE && (qS == 39 /* QuoteSingle */ || qS == 34 /* QuoteDouble */)) {\n        var tempValue = value.substring(1, value.length - 1);\n        // special case to avoid using a multi-quoted string that was just chomped\n        // (e.g. `font-family: \"Verdana\", \"sans-serif\"`)\n        if (tempValue.indexOf('\\'') == -1 && tempValue.indexOf('\"') == -1) {\n            value = tempValue;\n        }\n    }\n    return value;\n}\nfunction hyphenate(value) {\n    return value.replace(/[a-z][A-Z]/g, function (v) {\n        return v.charAt(0) + '-' + v.charAt(1);\n    }).toLowerCase();\n}\n\n/**\n * Produces creation/update instructions for all styling bindings (class and style)\n *\n * It also produces the creation instruction to register all initial styling values\n * (which are all the static class=\"...\" and style=\"...\" attribute values that exist\n * on an element within a template).\n *\n * The builder class below handles producing instructions for the following cases:\n *\n * - Static style/class attributes (style=\"...\" and class=\"...\")\n * - Dynamic style/class map bindings ([style]=\"map\" and [class]=\"map|string\")\n * - Dynamic style/class property bindings ([style.prop]=\"exp\" and [class.name]=\"exp\")\n *\n * Due to the complex relationship of all of these cases, the instructions generated\n * for these attributes/properties/bindings must be done so in the correct order. The\n * order which these must be generated is as follows:\n *\n * if (createMode) {\n *   elementStyling(...)\n * }\n * if (updateMode) {\n *   elementStylingMap(...)\n *   elementStyleProp(...)\n *   elementClassProp(...)\n *   elementStylingApp(...)\n * }\n *\n * The creation/update methods within the builder class produce these instructions.\n */\nvar StylingBuilder = /** @class */ (function () {\n    function StylingBuilder(_elementIndexExpr, _directiveExpr) {\n        this._elementIndexExpr = _elementIndexExpr;\n        this._directiveExpr = _directiveExpr;\n        /** Whether or not there are any static styling values present */\n        this._hasInitialValues = false;\n        /**\n         *  Whether or not there are any styling bindings present\n         *  (i.e. `[style]`, `[class]`, `[style.prop]` or `[class.name]`)\n         */\n        this._hasBindings = false;\n        /** the input for [class] (if it exists) */\n        this._classMapInput = null;\n        /** the input for [style] (if it exists) */\n        this._styleMapInput = null;\n        /** an array of each [style.prop] input */\n        this._singleStyleInputs = null;\n        /** an array of each [class.name] input */\n        this._singleClassInputs = null;\n        this._lastStylingInput = null;\n        // maps are used instead of hash maps because a Map will\n        // retain the ordering of the keys\n        /**\n         * Represents the location of each style binding in the template\n         * (e.g. `<div [style.width]=\"w\" [style.height]=\"h\">` implies\n         * that `width=0` and `height=1`)\n         */\n        this._stylesIndex = new Map();\n        /**\n         * Represents the location of each class binding in the template\n         * (e.g. `<div [class.big]=\"b\" [class.hidden]=\"h\">` implies\n         * that `big=0` and `hidden=1`)\n         */\n        this._classesIndex = new Map();\n        this._initialStyleValues = [];\n        this._initialClassValues = [];\n        // certain style properties ALWAYS need sanitization\n        // this is checked each time new styles are encountered\n        this._useDefaultSanitizer = false;\n    }\n    StylingBuilder.prototype.hasBindingsOrInitialValues = function () { return this._hasBindings || this._hasInitialValues; };\n    /**\n     * Registers a given input to the styling builder to be later used when producing AOT code.\n     *\n     * The code below will only accept the input if it is somehow tied to styling (whether it be\n     * style/class bindings or static style/class attributes).\n     */\n    StylingBuilder.prototype.registerBoundInput = function (input) {\n        // [attr.style] or [attr.class] are skipped in the code below,\n        // they should not be treated as styling-based bindings since\n        // they are intended to be written directly to the attr and\n        // will therefore skip all style/class resolution that is present\n        // with style=\"\", [style]=\"\" and [style.prop]=\"\", class=\"\",\n        // [class.prop]=\"\". [class]=\"\" assignments\n        var name = input.name;\n        var binding = null;\n        switch (input.type) {\n            case 0 /* Property */:\n                if (name == 'style') {\n                    binding = this.registerStyleInput(null, input.value, '', input.sourceSpan);\n                }\n                else if (isClassBinding(input.name)) {\n                    binding = this.registerClassInput(null, input.value, input.sourceSpan);\n                }\n                break;\n            case 3 /* Style */:\n                binding = this.registerStyleInput(input.name, input.value, input.unit, input.sourceSpan);\n                break;\n            case 2 /* Class */:\n                binding = this.registerClassInput(input.name, input.value, input.sourceSpan);\n                break;\n        }\n        return binding ? true : false;\n    };\n    StylingBuilder.prototype.registerStyleInput = function (propertyName, value, unit, sourceSpan) {\n        var entry = { name: propertyName, unit: unit, value: value, sourceSpan: sourceSpan };\n        if (propertyName) {\n            (this._singleStyleInputs = this._singleStyleInputs || []).push(entry);\n            this._useDefaultSanitizer = this._useDefaultSanitizer || isStyleSanitizable(propertyName);\n            registerIntoMap(this._stylesIndex, propertyName);\n        }\n        else {\n            this._useDefaultSanitizer = true;\n            this._styleMapInput = entry;\n        }\n        this._lastStylingInput = entry;\n        this._hasBindings = true;\n        return entry;\n    };\n    StylingBuilder.prototype.registerClassInput = function (className, value, sourceSpan) {\n        var entry = { name: className, value: value, sourceSpan: sourceSpan };\n        if (className) {\n            (this._singleClassInputs = this._singleClassInputs || []).push(entry);\n            registerIntoMap(this._classesIndex, className);\n        }\n        else {\n            this._classMapInput = entry;\n        }\n        this._lastStylingInput = entry;\n        this._hasBindings = true;\n        return entry;\n    };\n    /**\n     * Registers the element's static style string value to the builder.\n     *\n     * @param value the style string (e.g. `width:100px; height:200px;`)\n     */\n    StylingBuilder.prototype.registerStyleAttr = function (value) {\n        this._initialStyleValues = parse(value);\n        this._hasInitialValues = true;\n    };\n    /**\n     * Registers the element's static class string value to the builder.\n     *\n     * @param value the className string (e.g. `disabled gold zoom`)\n     */\n    StylingBuilder.prototype.registerClassAttr = function (value) {\n        this._initialClassValues = value.trim().split(/\\s+/g);\n        this._hasInitialValues = true;\n    };\n    /**\n     * Appends all styling-related expressions to the provided attrs array.\n     *\n     * @param attrs an existing array where each of the styling expressions\n     * will be inserted into.\n     */\n    StylingBuilder.prototype.populateInitialStylingAttrs = function (attrs) {\n        // [CLASS_MARKER, 'foo', 'bar', 'baz' ...]\n        if (this._initialClassValues.length) {\n            attrs.push(literal(1 /* Classes */));\n            for (var i = 0; i < this._initialClassValues.length; i++) {\n                attrs.push(literal(this._initialClassValues[i]));\n            }\n        }\n        // [STYLE_MARKER, 'width', '200px', 'height', '100px', ...]\n        if (this._initialStyleValues.length) {\n            attrs.push(literal(2 /* Styles */));\n            for (var i = 0; i < this._initialStyleValues.length; i += 2) {\n                attrs.push(literal(this._initialStyleValues[i]), literal(this._initialStyleValues[i + 1]));\n            }\n        }\n    };\n    /**\n     * Builds an instruction with all the expressions and parameters for `elementHostAttrs`.\n     *\n     * The instruction generation code below is used for producing the AOT statement code which is\n     * responsible for registering initial styles (within a directive hostBindings' creation block)\n     * to the directive host element.\n     */\n    StylingBuilder.prototype.buildDirectiveHostAttrsInstruction = function (sourceSpan, constantPool) {\n        var _this = this;\n        if (this._hasInitialValues && this._directiveExpr) {\n            return {\n                sourceSpan: sourceSpan,\n                reference: Identifiers$1.elementHostAttrs,\n                buildParams: function () {\n                    var attrs = [];\n                    _this.populateInitialStylingAttrs(attrs);\n                    return [_this._directiveExpr, getConstantLiteralFromArray(constantPool, attrs)];\n                }\n            };\n        }\n        return null;\n    };\n    /**\n     * Builds an instruction with all the expressions and parameters for `elementStyling`.\n     *\n     * The instruction generation code below is used for producing the AOT statement code which is\n     * responsible for registering style/class bindings to an element.\n     */\n    StylingBuilder.prototype.buildElementStylingInstruction = function (sourceSpan, constantPool) {\n        var _this = this;\n        if (this._hasBindings) {\n            return {\n                sourceSpan: sourceSpan,\n                reference: Identifiers$1.elementStyling,\n                buildParams: function () {\n                    // a string array of every style-based binding\n                    var styleBindingProps = _this._singleStyleInputs ? _this._singleStyleInputs.map(function (i) { return literal(i.name); }) : [];\n                    // a string array of every class-based binding\n                    var classBindingNames = _this._singleClassInputs ? _this._singleClassInputs.map(function (i) { return literal(i.name); }) : [];\n                    // to salvage space in the AOT generated code, there is no point in passing\n                    // in `null` into a param if any follow-up params are not used. Therefore,\n                    // only when a trailing param is used then it will be filled with nulls in between\n                    // (otherwise a shorter amount of params will be filled). The code below helps\n                    // determine how many params are required in the expression code.\n                    //\n                    // min params => elementStyling()\n                    // max params => elementStyling(classBindings, styleBindings, sanitizer, directive)\n                    var expectedNumberOfArgs = 0;\n                    if (_this._directiveExpr) {\n                        expectedNumberOfArgs = 4;\n                    }\n                    else if (_this._useDefaultSanitizer) {\n                        expectedNumberOfArgs = 3;\n                    }\n                    else if (styleBindingProps.length) {\n                        expectedNumberOfArgs = 2;\n                    }\n                    else if (classBindingNames.length) {\n                        expectedNumberOfArgs = 1;\n                    }\n                    var params = [];\n                    addParam(params, classBindingNames.length > 0, getConstantLiteralFromArray(constantPool, classBindingNames), 1, expectedNumberOfArgs);\n                    addParam(params, styleBindingProps.length > 0, getConstantLiteralFromArray(constantPool, styleBindingProps), 2, expectedNumberOfArgs);\n                    addParam(params, _this._useDefaultSanitizer, importExpr(Identifiers$1.defaultStyleSanitizer), 3, expectedNumberOfArgs);\n                    if (_this._directiveExpr) {\n                        params.push(_this._directiveExpr);\n                    }\n                    return params;\n                }\n            };\n        }\n        return null;\n    };\n    /**\n     * Builds an instruction with all the expressions and parameters for `elementStylingMap`.\n     *\n     * The instruction data will contain all expressions for `elementStylingMap` to function\n     * which include the `[style]` and `[class]` expression params (if they exist) as well as\n     * the sanitizer and directive reference expression.\n     */\n    StylingBuilder.prototype.buildElementStylingMapInstruction = function (valueConverter) {\n        var _this = this;\n        if (this._classMapInput || this._styleMapInput) {\n            var stylingInput = this._classMapInput || this._styleMapInput;\n            // these values must be outside of the update block so that they can\n            // be evaluted (the AST visit call) during creation time so that any\n            // pipes can be picked up in time before the template is built\n            var mapBasedClassValue_1 = this._classMapInput ? this._classMapInput.value.visit(valueConverter) : null;\n            var mapBasedStyleValue_1 = this._styleMapInput ? this._styleMapInput.value.visit(valueConverter) : null;\n            return {\n                sourceSpan: stylingInput.sourceSpan,\n                reference: Identifiers$1.elementStylingMap,\n                buildParams: function (convertFn) {\n                    var params = [_this._elementIndexExpr];\n                    if (mapBasedClassValue_1) {\n                        params.push(convertFn(mapBasedClassValue_1));\n                    }\n                    else if (_this._styleMapInput) {\n                        params.push(NULL_EXPR);\n                    }\n                    if (mapBasedStyleValue_1) {\n                        params.push(convertFn(mapBasedStyleValue_1));\n                    }\n                    else if (_this._directiveExpr) {\n                        params.push(NULL_EXPR);\n                    }\n                    if (_this._directiveExpr) {\n                        params.push(_this._directiveExpr);\n                    }\n                    return params;\n                }\n            };\n        }\n        return null;\n    };\n    StylingBuilder.prototype._buildSingleInputs = function (reference, inputs, mapIndex, allowUnits, valueConverter) {\n        var _this = this;\n        return inputs.map(function (input) {\n            var bindingIndex = mapIndex.get(input.name);\n            var value = input.value.visit(valueConverter);\n            return {\n                sourceSpan: input.sourceSpan,\n                reference: reference,\n                buildParams: function (convertFn) {\n                    var params = [_this._elementIndexExpr, literal(bindingIndex), convertFn(value)];\n                    if (allowUnits) {\n                        if (input.unit) {\n                            params.push(literal(input.unit));\n                        }\n                        else if (_this._directiveExpr) {\n                            params.push(NULL_EXPR);\n                        }\n                    }\n                    if (_this._directiveExpr) {\n                        params.push(_this._directiveExpr);\n                    }\n                    return params;\n                }\n            };\n        });\n    };\n    StylingBuilder.prototype._buildClassInputs = function (valueConverter) {\n        if (this._singleClassInputs) {\n            return this._buildSingleInputs(Identifiers$1.elementClassProp, this._singleClassInputs, this._classesIndex, false, valueConverter);\n        }\n        return [];\n    };\n    StylingBuilder.prototype._buildStyleInputs = function (valueConverter) {\n        if (this._singleStyleInputs) {\n            return this._buildSingleInputs(Identifiers$1.elementStyleProp, this._singleStyleInputs, this._stylesIndex, true, valueConverter);\n        }\n        return [];\n    };\n    StylingBuilder.prototype._buildApplyFn = function () {\n        var _this = this;\n        return {\n            sourceSpan: this._lastStylingInput ? this._lastStylingInput.sourceSpan : null,\n            reference: Identifiers$1.elementStylingApply,\n            buildParams: function () {\n                var params = [_this._elementIndexExpr];\n                if (_this._directiveExpr) {\n                    params.push(_this._directiveExpr);\n                }\n                return params;\n            }\n        };\n    };\n    /**\n     * Constructs all instructions which contain the expressions that will be placed\n     * into the update block of a template function or a directive hostBindings function.\n     */\n    StylingBuilder.prototype.buildUpdateLevelInstructions = function (valueConverter) {\n        var instructions = [];\n        if (this._hasBindings) {\n            var mapInstruction = this.buildElementStylingMapInstruction(valueConverter);\n            if (mapInstruction) {\n                instructions.push(mapInstruction);\n            }\n            instructions.push.apply(instructions, __spread(this._buildStyleInputs(valueConverter)));\n            instructions.push.apply(instructions, __spread(this._buildClassInputs(valueConverter)));\n            instructions.push(this._buildApplyFn());\n        }\n        return instructions;\n    };\n    return StylingBuilder;\n}());\nfunction isClassBinding(name) {\n    return name == 'className' || name == 'class';\n}\nfunction registerIntoMap(map, key) {\n    if (!map.has(key)) {\n        map.set(key, map.size);\n    }\n}\nfunction isStyleSanitizable(prop) {\n    return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n        prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n}\n/**\n * Simple helper function to either provide the constant literal that will house the value\n * here or a null value if the provided values are empty.\n */\nfunction getConstantLiteralFromArray(constantPool, values) {\n    return values.length ? constantPool.getConstLiteral(literalArr(values), true) : NULL_EXPR;\n}\n/**\n * Simple helper function that adds a parameter or does nothing at all depending on the provided\n * predicate and totalExpectedArgs values\n */\nfunction addParam(params, predicate, value, argNumber, totalExpectedArgs) {\n    if (predicate) {\n        params.push(value);\n    }\n    else if (argNumber < totalExpectedArgs) {\n        params.push(NULL_EXPR);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"Character\"] = 0] = \"Character\";\n    TokenType[TokenType[\"Identifier\"] = 1] = \"Identifier\";\n    TokenType[TokenType[\"Keyword\"] = 2] = \"Keyword\";\n    TokenType[TokenType[\"String\"] = 3] = \"String\";\n    TokenType[TokenType[\"Operator\"] = 4] = \"Operator\";\n    TokenType[TokenType[\"Number\"] = 5] = \"Number\";\n    TokenType[TokenType[\"Error\"] = 6] = \"Error\";\n})(TokenType || (TokenType = {}));\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = /** @class */ (function () {\n    function Lexer() {\n    }\n    Lexer.prototype.tokenize = function (text) {\n        var scanner = new _Scanner(text);\n        var tokens = [];\n        var token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = /** @class */ (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    Token.prototype.isCharacter = function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n    Token.prototype.isString = function () { return this.type == TokenType.String; };\n    Token.prototype.isOperator = function (operator) {\n        return this.type == TokenType.Operator && this.strValue == operator;\n    };\n    Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n    Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n    Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    Token.prototype.isKeywordUndefined = function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    Token.prototype.isError = function () { return this.type == TokenType.Error; };\n    Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    Token.prototype.toString = function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = /** @class */ (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    _Scanner.prototype.advance = function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    _Scanner.prototype.scanToken = function () {\n        var input = this.input, length = this.length;\n        var peek = this.peek, index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    _Scanner.prototype.scanCharacter = function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    _Scanner.prototype.scanOperator = function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    _Scanner.prototype.scanIdentifier = function () {\n        var start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    _Scanner.prototype.scanNumber = function (start) {\n        var simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) ;\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var str = this.input.substring(start, this.index);\n        var value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    _Scanner.prototype.scanString = function () {\n        var start = this.index;\n        var quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var buffer = '';\n        var marker = this.index;\n        var input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    _Scanner.prototype.error = function (message, offset) {\n        var position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\nfunction parseIntAutoRadix(text) {\n    var result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = /** @class */ (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = /** @class */ (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\nfunction _createInterpolateRegExp(config) {\n    var pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = /** @class */ (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var sourceToLex = this._stripComments(input);\n        var tokens = this._lexer.tokenize(this._stripComments(input));\n        var ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var ast = this._parseBindingAst(input, location, interpolationConfig);\n        var errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var sourceToLex = this._stripComments(input);\n        var tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    Parser.prototype._parseQuote = function (input, location) {\n        if (input == null)\n            return null;\n        var prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    Parser.prototype.parseTemplateBindings = function (tplKey, tplValue, location) {\n        var tokens = this._lexer.tokenize(tplValue);\n        return new _ParseAST(tplValue, location, tokens, tplValue.length, false, this.errors, 0)\n            .parseTemplateBindings(tplKey);\n    };\n    Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var expressions = [];\n        for (var i = 0; i < split.expressions.length; ++i) {\n            var expressionText = split.expressions[i];\n            var sourceToLex = this._stripComments(expressionText);\n            var tokens = this._lexer.tokenize(sourceToLex);\n            var ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var regexp = _createInterpolateRegExp(interpolationConfig);\n        var parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var strings = [];\n        var expressions = [];\n        var offsets = [];\n        var offset = 0;\n        for (var i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    Parser.prototype._stripComments = function (input) {\n        var i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    Parser.prototype._commentStart = function (input) {\n        var outerQuote = null;\n        for (var i = 0; i < input.length - 1; i++) {\n            var char = input.charCodeAt(i);\n            var nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n        var regexp = _createInterpolateRegExp(interpolationConfig);\n        var parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n        var errLocation = '';\n        for (var j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = /** @class */ (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    _ParseAST.prototype.peek = function (offset) {\n        var i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n    _ParseAST.prototype.advance = function () { this.index++; };\n    _ParseAST.prototype.optionalCharacter = function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n    _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n    _ParseAST.prototype.expectCharacter = function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    _ParseAST.prototype.optionalOperator = function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    _ParseAST.prototype.expectOperator = function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n        var n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n        var n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    _ParseAST.prototype.parseChain = function () {\n        var exprs = [];\n        var start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    _ParseAST.prototype.parsePipe = function () {\n        var result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var name_1 = this.expectIdentifierOrKeyword();\n                var args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n    _ParseAST.prototype.parseConditional = function () {\n        var start = this.inputIndex;\n        var result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var yes = this.parsePipe();\n            var no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var end = this.inputIndex;\n                var expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    _ParseAST.prototype.parseLogicalOr = function () {\n        // '||'\n        var result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseLogicalAnd = function () {\n        // '&&'\n        var result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseEquality = function () {\n        // '==','!=','===','!=='\n        var result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseRelational = function () {\n        // '<', '>', '<=', '>='\n        var result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseAdditive = function () {\n        // '+', '-'\n        var result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseMultiplicative = function () {\n        // '*', '%', '/'\n        var result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    _ParseAST.prototype.parsePrefix = function () {\n        if (this.next.type == TokenType.Operator) {\n            var start = this.inputIndex;\n            var operator = this.next.strValue;\n            var result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), '-', result, new LiteralPrimitive(new ParseSpan(start, start), 0));\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    _ParseAST.prototype.parseCallChain = function () {\n        var result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    _ParseAST.prototype.parsePrimary = function () {\n        var start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    _ParseAST.prototype.parseExpressionList = function (terminator) {\n        var result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseLiteralMap = function () {\n        var keys = [];\n        var values = [];\n        var start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var quoted = this.next.isString();\n                var key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var start = receiver.span.start;\n        var id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    _ParseAST.prototype.parseCallArguments = function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return positionals;\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` in between.\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = function () {\n        var result = '';\n        var operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    // Parses the AST for `<some-tag *tplKey=AST>`\n    _ParseAST.prototype.parseTemplateBindings = function (tplKey) {\n        var firstBinding = true;\n        var bindings = [];\n        var warnings = [];\n        do {\n            var start = this.inputIndex;\n            var rawKey = void 0;\n            var key = void 0;\n            var isVar = false;\n            if (firstBinding) {\n                rawKey = key = tplKey;\n                firstBinding = false;\n            }\n            else {\n                isVar = this.peekKeywordLet();\n                if (isVar)\n                    this.advance();\n                rawKey = this.expectTemplateBindingKey();\n                key = isVar ? rawKey : tplKey + rawKey[0].toUpperCase() + rawKey.substring(1);\n                this.optionalCharacter($COLON);\n            }\n            var name_2 = null;\n            var expression = null;\n            if (isVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                isVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var start_1 = this.inputIndex;\n                var ast = this.parsePipe();\n                var source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, isVar, name_2, expression));\n            if (this.peekKeywordAs() && !isVar) {\n                var letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, null));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        } while (this.index < this.tokens.length);\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    _ParseAST.prototype.error = function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    _ParseAST.prototype.locationText = function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    // Error recovery should skip tokens until it encounters a recovery point. skip() treats\n    // the end of input and a ';' as unconditionally a recovery point. It also treats ')',\n    // '}' and ']' as conditional recovery points if one of calling productions is expecting\n    // one of these symbols. This allows skip() to recover from errors such as '(a.) + 1' allowing\n    // more of the AST to be retained (it doesn't skip any tokens as the ')' is retained because\n    // of the '(' begins an '(' <expr> ')' production). The recovery points of grouping symbols\n    // must be conditional as they must be skipped if none of the calling productions are not\n    // expecting the closing token else we will never make progress in the case of an\n    // extraneous group closing symbol (such as a stray ')'). This is not the case for ';' because\n    // parseChain() is always the root production and it expects a ';'.\n    // If a production expects one of these token it increments the corresponding nesting count,\n    // and then decrements it just prior to checking if the token is in the input.\n    _ParseAST.prototype.skip = function () {\n        var n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(this.next.toString(), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = /** @class */ (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    SimpleExpressionChecker.check = function (ast) {\n        var s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitNonNullAssert = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitAll = function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expression `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = /** @class */ (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    AstPath.prototype.parentOf = function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    AstPath.prototype.childOf = function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    AstPath.prototype.first = function (ctor) {\n        for (var i = this.path.length - 1; i >= 0; i--) {\n            var item = this.path[i];\n            if (item instanceof ctor)\n                return item;\n        }\n    };\n    AstPath.prototype.push = function (node) { this.path.push(node); };\n    AstPath.prototype.pop = function () { return this.path.pop(); };\n    return AstPath;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Text$2 = /** @class */ (function () {\n    function Text(value, sourceSpan, i18n) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.i18n = i18n;\n    }\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = /** @class */ (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan, i18n) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n        this.i18n = i18n;\n    }\n    Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = /** @class */ (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute = /** @class */ (function () {\n    function Attribute(name, value, sourceSpan, valueSpan, i18n) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n        this.i18n = i18n;\n    }\n    Attribute.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = /** @class */ (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan, i18n) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n        this.i18n = i18n;\n    }\n    Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = /** @class */ (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var result = [];\n    var visit = visitor.visit ?\n        function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    RecursiveVisitor.prototype.visitElement = function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    RecursiveVisitor.prototype.visitAttribute = function (ast, context) { };\n    RecursiveVisitor.prototype.visitText = function (ast, context) { };\n    RecursiveVisitor.prototype.visitComment = function (ast, context) { };\n    RecursiveVisitor.prototype.visitExpansion = function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    RecursiveVisitor.prototype.visitExpansionCase = function (ast, context) { };\n    RecursiveVisitor.prototype.visitChildren = function (context, cb) {\n        var results = [];\n        var t = this;\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\nfunction spanOf(ast) {\n    var start = ast.sourceSpan.start.offset;\n    var end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\nfunction findNode(nodes, position) {\n    var path = [];\n    var visitor = new /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast, context) {\n            var span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType$1;\n(function (TokenType) {\n    TokenType[TokenType[\"TAG_OPEN_START\"] = 0] = \"TAG_OPEN_START\";\n    TokenType[TokenType[\"TAG_OPEN_END\"] = 1] = \"TAG_OPEN_END\";\n    TokenType[TokenType[\"TAG_OPEN_END_VOID\"] = 2] = \"TAG_OPEN_END_VOID\";\n    TokenType[TokenType[\"TAG_CLOSE\"] = 3] = \"TAG_CLOSE\";\n    TokenType[TokenType[\"TEXT\"] = 4] = \"TEXT\";\n    TokenType[TokenType[\"ESCAPABLE_RAW_TEXT\"] = 5] = \"ESCAPABLE_RAW_TEXT\";\n    TokenType[TokenType[\"RAW_TEXT\"] = 6] = \"RAW_TEXT\";\n    TokenType[TokenType[\"COMMENT_START\"] = 7] = \"COMMENT_START\";\n    TokenType[TokenType[\"COMMENT_END\"] = 8] = \"COMMENT_END\";\n    TokenType[TokenType[\"CDATA_START\"] = 9] = \"CDATA_START\";\n    TokenType[TokenType[\"CDATA_END\"] = 10] = \"CDATA_END\";\n    TokenType[TokenType[\"ATTR_NAME\"] = 11] = \"ATTR_NAME\";\n    TokenType[TokenType[\"ATTR_VALUE\"] = 12] = \"ATTR_VALUE\";\n    TokenType[TokenType[\"DOC_TYPE\"] = 13] = \"DOC_TYPE\";\n    TokenType[TokenType[\"EXPANSION_FORM_START\"] = 14] = \"EXPANSION_FORM_START\";\n    TokenType[TokenType[\"EXPANSION_CASE_VALUE\"] = 15] = \"EXPANSION_CASE_VALUE\";\n    TokenType[TokenType[\"EXPANSION_CASE_EXP_START\"] = 16] = \"EXPANSION_CASE_EXP_START\";\n    TokenType[TokenType[\"EXPANSION_CASE_EXP_END\"] = 17] = \"EXPANSION_CASE_EXP_END\";\n    TokenType[TokenType[\"EXPANSION_FORM_END\"] = 18] = \"EXPANSION_FORM_END\";\n    TokenType[TokenType[\"EOF\"] = 19] = \"EOF\";\n})(TokenType$1 || (TokenType$1 = {}));\nvar Token$1 = /** @class */ (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = /** @class */ (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = /** @class */ (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = /** @class */ (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\n// See http://www.w3.org/TR/html51/syntax.html#writing\nvar _Tokenizer = /** @class */ (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        // Note: this is always lowercase!\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    _Tokenizer.prototype._processCarriageReturns = function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    _Tokenizer.prototype.tokenize = function () {\n        while (this._peek !== $EOF) {\n            var start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * @returns whether an ICU token has been created\n     * @internal\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    _Tokenizer.prototype._getLocation = function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    _Tokenizer.prototype._getSpan = function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    _Tokenizer.prototype._beginToken = function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    _Tokenizer.prototype._endToken = function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = null;\n        this._currentTokenType = null;\n        return token;\n    };\n    _Tokenizer.prototype._createError = function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = null;\n        this._currentTokenType = null;\n        return new _ControlFlowError(error);\n    };\n    _Tokenizer.prototype._advance = function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    _Tokenizer.prototype._attemptCharCode = function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    _Tokenizer.prototype._requireCharCode = function (charCode) {\n        var location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    _Tokenizer.prototype._attemptStr = function (chars) {\n        var len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var initialPosition = this._savePosition();\n        for (var i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n        for (var i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    _Tokenizer.prototype._requireStr = function (chars) {\n        var location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n        var start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    _Tokenizer.prototype._attemptUntilChar = function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    _Tokenizer.prototype._readChar = function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    _Tokenizer.prototype._decodeEntity = function () {\n        var start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (_a) {\n                var entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var tagCloseStart;\n        var textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    _Tokenizer.prototype._consumeComment = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    _Tokenizer.prototype._consumeCdata = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    _Tokenizer.prototype._consumeDocType = function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    _Tokenizer.prototype._consumePrefixAndName = function () {\n        var nameOrPrefixStart = this._index;\n        var prefix = null;\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    _Tokenizer.prototype._consumeTagOpen = function (start) {\n        var savedPos = this._savePosition();\n        var tagName;\n        var lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([null, lowercaseTagName]);\n    };\n    _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    _Tokenizer.prototype._consumeAttributeName = function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    _Tokenizer.prototype._consumeAttributeValue = function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var quoteChar = this._peek;\n            this._advance();\n            var parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    _Tokenizer.prototype._consumeTagOpenEnd = function () {\n        var tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    _Tokenizer.prototype._consumeTagClose = function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    _Tokenizer.prototype._consumeExpansionFormStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    _Tokenizer.prototype._consumeText = function () {\n        var start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    _Tokenizer.prototype._isTextEnd = function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    _Tokenizer.prototype._savePosition = function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    _Tokenizer.prototype._readUntil = function (char) {\n        var start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    _Tokenizer.prototype._restorePosition = function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    _Tokenizer.prototype._isInExpansionCase = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    _Tokenizer.prototype._isInExpansionForm = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\nfunction mergeTextTokens(srcTokens) {\n    var dstTokens = [];\n    var lastDstToken = undefined;\n    for (var i = 0; i < srcTokens.length; i++) {\n        var token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = /** @class */ (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    TreeError.create = function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = /** @class */ (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = /** @class */ (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    Parser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, tokensAndErrors.errors.concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = /** @class */ (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    _TreeBuilder.prototype.build = function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    _TreeBuilder.prototype._advance = function () {\n        var prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    _TreeBuilder.prototype._advanceIf = function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    _TreeBuilder.prototype._consumeCdata = function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    _TreeBuilder.prototype._consumeComment = function (token) {\n        var text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    _TreeBuilder.prototype._consumeExpansion = function (token) {\n        var switchValue = this._advance();\n        var type = this._advance();\n        var cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    _TreeBuilder.prototype._parseExpansionCase = function () {\n        var value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var start = this._advance();\n        var exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(parsedExp.errors);\n            return null;\n        }\n        var sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n        var exp = [];\n        var expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    _TreeBuilder.prototype._consumeText = function (token) {\n        var text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text$2(text, token.sourceSpan));\n        }\n    };\n    _TreeBuilder.prototype._closeVoidElement = function () {\n        var el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n        var prefix = startTagToken.parts[0];\n        var name = startTagToken.parts[1];\n        var attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var end = this._peek.sourceSpan.start;\n        var span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    _TreeBuilder.prototype._pushElement = function (el) {\n        var parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n        var fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    _TreeBuilder.prototype._popElement = function (fullName) {\n        for (var stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    _TreeBuilder.prototype._consumeAttr = function (attrName) {\n        var fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var end = attrName.sourceSpan.end;\n        var value = '';\n        var valueSpan = undefined;\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    _TreeBuilder.prototype._getParentElement = function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n        var container = null;\n        for (var i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    _TreeBuilder.prototype._addToParent = function (node) {\n        var parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * @internal\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = this.getTagDefinition(localName).implicitNamespacePrefix;\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = /** @class */ (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = /** @class */ (function () {\n    function WhitespaceVisitor() {\n    }\n    WhitespaceVisitor.prototype.visitElement = function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan, element.i18n);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan, element.i18n);\n    };\n    WhitespaceVisitor.prototype.visitAttribute = function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    WhitespaceVisitor.prototype.visitText = function (text, context) {\n        var isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text$2(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan, text.i18n);\n        }\n        return null;\n    };\n    WhitespaceVisitor.prototype.visitComment = function (comment, context) { return comment; };\n    WhitespaceVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    WhitespaceVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n//                               Reach out to mprobst for details.\n//\n// =================================================================================================\n/** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\nvar _SECURITY_SCHEMA;\nfunction SECURITY_SCHEMA() {\n    if (!_SECURITY_SCHEMA) {\n        _SECURITY_SCHEMA = {};\n        // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n        registerContext(SecurityContext.HTML, [\n            'iframe|srcdoc',\n            '*|innerHTML',\n            '*|outerHTML',\n        ]);\n        registerContext(SecurityContext.STYLE, ['*|style']);\n        // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n        registerContext(SecurityContext.URL, [\n            '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n            'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n            'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n            'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n        ]);\n        registerContext(SecurityContext.RESOURCE_URL, [\n            'applet|code',\n            'applet|codebase',\n            'base|href',\n            'embed|src',\n            'frame|src',\n            'head|profile',\n            'html|manifest',\n            'iframe|src',\n            'link|href',\n            'media|src',\n            'object|codebase',\n            'object|data',\n            'script|src',\n        ]);\n    }\n    return _SECURITY_SCHEMA;\n}\nfunction registerContext(ctx, specs) {\n    var e_1, _a;\n    try {\n        for (var specs_1 = __values(specs), specs_1_1 = specs_1.next(); !specs_1_1.done; specs_1_1 = specs_1.next()) {\n            var spec = specs_1_1.value;\n            _SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (specs_1_1 && !specs_1_1.done && (_a = specs_1.return)) _a.call(specs_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ElementSchemaRegistry = /** @class */ (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = /** @class */ (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var type = {};\n            var _a = __read(encodedType.split('|'), 2), strType = _a[0], strProperties = _a[1];\n            var properties = strProperties.split(',');\n            var _b = __read(strType.split('^'), 2), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var ctx = SECURITY_SCHEMA()[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA()['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        var unit = '';\n        var strVal = val.toString().trim();\n        var errorMsg = null;\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = /** @class */ (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, errors) {\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this.errors = errors;\n        this.pipesByName = null;\n        this._usedPipes = new Map();\n        // When the `pipes` parameter is `null`, do not check for used pipes\n        // This is used in IVY when we might not know the available pipes at compile time\n        if (pipes) {\n            var pipesByName_1 = new Map();\n            pipes.forEach(function (pipe) { return pipesByName_1.set(pipe.name, pipe); });\n            this.pipesByName = pipesByName_1;\n        }\n    }\n    Object.defineProperty(BindingParser.prototype, \"interpolationConfig\", {\n        get: function () { return this._interpolationConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n    BindingParser.prototype.createBoundHostProperties = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1;\n        }\n        return null;\n    };\n    BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        var boundProps = this.createBoundHostProperties(dirMeta, sourceSpan);\n        return boundProps &&\n            boundProps.map(function (prop) { return _this.createBoundElementProperty(elementSelector, prop); });\n    };\n    BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var targetEvents_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEvents_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEvents_1;\n        }\n        return null;\n    };\n    BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n        var sourceInfo = sourceSpan.start.toString();\n        try {\n            var ast = this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    // Parse an inline template binding. ie `<tag *tplKey=\"<tplValue>\">`\n    BindingParser.prototype.parseInlineTemplateBinding = function (tplKey, tplValue, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var bindings = this._parseTemplateBindings(tplKey, tplValue, sourceSpan);\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new ParsedVariable(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    BindingParser.prototype._parseTemplateBindings = function (tplKey, tplValue, sourceSpan) {\n        var _this = this;\n        var sourceInfo = sourceSpan.start.toString();\n        try {\n            var bindingsResult = this._exprParser.parseTemplateBindings(tplKey, tplValue, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new ParsedProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), ParsedPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, ast.source]);\n        targetProps.push(new ParsedProperty(name, ast, ParsedPropertyType.DEFAULT, sourceSpan));\n    };\n    BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, ast.source]);\n        targetProps.push(new ParsedProperty(name, ast, ParsedPropertyType.ANIMATION, sourceSpan));\n    };\n    BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n        var sourceInfo = (sourceSpan && sourceSpan.start || '(unknown)').toString();\n        try {\n            var ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    BindingParser.prototype.createBoundElementProperty = function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementProperty(boundProp.name, 4 /* Animation */, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var unit = null;\n        var bindingType = undefined;\n        var boundPropertyName = null;\n        var parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var securityContexts = undefined;\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = 1 /* Attribute */;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = 2 /* Class */;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = 3 /* Style */;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = 0 /* Property */;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementProperty(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseRegularEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n        var matches = splitAtPeriod(name, [name, '']);\n        var eventName = matches[0];\n        var phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new ParsedEvent(eventName, phase, 1 /* Animation */, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    BindingParser.prototype._parseRegularEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = __read(splitAtColon(name, [null, name]), 2), target = _a[0], eventName = _a[1];\n        var ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([name, ast.source]);\n        targetEvents.push(new ParsedEvent(eventName, target, 0 /* Regular */, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    BindingParser.prototype._parseAction = function (value, sourceSpan) {\n        var sourceInfo = (sourceSpan && sourceSpan.start || '(unknown').toString();\n        try {\n            var ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.errors.push(new ParseError(sourceSpan, message, level));\n    };\n    BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n        var e_1, _a;\n        try {\n            for (var errors_1 = __values(errors), errors_1_1 = errors_1.next(); !errors_1_1.done; errors_1_1 = errors_1.next()) {\n                var error$$1 = errors_1_1.value;\n                this._reportError(error$$1.message, sourceSpan);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (errors_1_1 && !errors_1_1.done && (_a = errors_1.return)) _a.call(errors_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    // Make sure all the used pipes are known in `this.pipesByName`\n    BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n        var _this = this;\n        if (ast && this.pipesByName) {\n            var collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param propName the name of the property / attribute\n     * @param sourceSpan\n     * @param isAttr true when binding to an attribute\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n        var report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(report.msg, sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = /** @class */ (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    PipeCollector.prototype.visitPipe = function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor$1));\nfunction isAnimationLabel(name) {\n    return name[0] == '@';\n}\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, __spread(possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); })));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Text$3 = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar BoundText = /** @class */ (function () {\n    function BoundText(value, sourceSpan, i18n) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.i18n = i18n;\n    }\n    BoundText.prototype.visit = function (visitor) { return visitor.visitBoundText(this); };\n    return BoundText;\n}());\nvar TextAttribute = /** @class */ (function () {\n    function TextAttribute(name, value, sourceSpan, valueSpan, i18n) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n        this.i18n = i18n;\n    }\n    TextAttribute.prototype.visit = function (visitor) { return visitor.visitTextAttribute(this); };\n    return TextAttribute;\n}());\nvar BoundAttribute = /** @class */ (function () {\n    function BoundAttribute(name, type, securityContext, value, unit, sourceSpan, i18n) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.i18n = i18n;\n    }\n    BoundAttribute.fromBoundElementProperty = function (prop, i18n) {\n        return new BoundAttribute(prop.name, prop.type, prop.securityContext, prop.value, prop.unit, prop.sourceSpan, i18n);\n    };\n    BoundAttribute.prototype.visit = function (visitor) { return visitor.visitBoundAttribute(this); };\n    return BoundAttribute;\n}());\nvar BoundEvent = /** @class */ (function () {\n    function BoundEvent(name, type, handler, target, phase, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.handler = handler;\n        this.target = target;\n        this.phase = phase;\n        this.sourceSpan = sourceSpan;\n    }\n    BoundEvent.fromParsedEvent = function (event) {\n        var target = event.type === 0 /* Regular */ ? event.targetOrPhase : null;\n        var phase = event.type === 1 /* Animation */ ? event.targetOrPhase : null;\n        return new BoundEvent(event.name, event.type, event.handler, target, phase, event.sourceSpan);\n    };\n    BoundEvent.prototype.visit = function (visitor) { return visitor.visitBoundEvent(this); };\n    return BoundEvent;\n}());\nvar Element$1 = /** @class */ (function () {\n    function Element(name, attributes, inputs, outputs, children, references, sourceSpan, startSourceSpan, endSourceSpan, i18n) {\n        this.name = name;\n        this.attributes = attributes;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.children = children;\n        this.references = references;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n        this.i18n = i18n;\n    }\n    Element.prototype.visit = function (visitor) { return visitor.visitElement(this); };\n    return Element;\n}());\nvar Template = /** @class */ (function () {\n    function Template(tagName, attributes, inputs, outputs, children, references, variables, sourceSpan, startSourceSpan, endSourceSpan, i18n) {\n        this.tagName = tagName;\n        this.attributes = attributes;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.children = children;\n        this.references = references;\n        this.variables = variables;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n        this.i18n = i18n;\n    }\n    Template.prototype.visit = function (visitor) { return visitor.visitTemplate(this); };\n    return Template;\n}());\nvar Content = /** @class */ (function () {\n    function Content(selector, attributes, sourceSpan, i18n) {\n        this.selector = selector;\n        this.attributes = attributes;\n        this.sourceSpan = sourceSpan;\n        this.i18n = i18n;\n    }\n    Content.prototype.visit = function (visitor) { return visitor.visitContent(this); };\n    return Content;\n}());\nvar Variable = /** @class */ (function () {\n    function Variable(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Variable.prototype.visit = function (visitor) { return visitor.visitVariable(this); };\n    return Variable;\n}());\nvar Reference = /** @class */ (function () {\n    function Reference(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Reference.prototype.visit = function (visitor) { return visitor.visitReference(this); };\n    return Reference;\n}());\nvar Icu$1 = /** @class */ (function () {\n    function Icu(vars, placeholders, sourceSpan, i18n) {\n        this.vars = vars;\n        this.placeholders = placeholders;\n        this.sourceSpan = sourceSpan;\n        this.i18n = i18n;\n    }\n    Icu.prototype.visit = function (visitor) { return visitor.visitIcu(this); };\n    return Icu;\n}());\nfunction visitAll$1(visitor, nodes) {\n    var e_1, _a, e_2, _b;\n    var result = [];\n    if (visitor.visit) {\n        try {\n            for (var nodes_1 = __values(nodes), nodes_1_1 = nodes_1.next(); !nodes_1_1.done; nodes_1_1 = nodes_1.next()) {\n                var node = nodes_1_1.value;\n                var newNode = visitor.visit(node) || node.visit(visitor);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (nodes_1_1 && !nodes_1_1.done && (_a = nodes_1.return)) _a.call(nodes_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    else {\n        try {\n            for (var nodes_2 = __values(nodes), nodes_2_1 = nodes_2.next(); !nodes_2_1.done; nodes_2_1 = nodes_2.next()) {\n                var node = nodes_2_1.value;\n                var newNode = node.visit(visitor);\n                if (newNode) {\n                    result.push(newNode);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (nodes_2_1 && !nodes_2_1.done && (_b = nodes_2.return)) _b.call(nodes_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = /** @class */ (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the @import urls that\n * are either relative or don't have a `package:` scheme\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var foundUrls = [];\n    var modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\nfunction preparseElement(ast) {\n    var selectAttr = null;\n    var hrefAttr = null;\n    var relAttr = null;\n    var nonBindable = false;\n    var projectAs = '';\n    ast.attrs.forEach(function (attr) {\n        var lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var nodeName = ast.name.toLowerCase();\n    var type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nvar PreparsedElementType;\n(function (PreparsedElementType) {\n    PreparsedElementType[PreparsedElementType[\"NG_CONTENT\"] = 0] = \"NG_CONTENT\";\n    PreparsedElementType[PreparsedElementType[\"STYLE\"] = 1] = \"STYLE\";\n    PreparsedElementType[PreparsedElementType[\"STYLESHEET\"] = 2] = \"STYLESHEET\";\n    PreparsedElementType[PreparsedElementType[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    PreparsedElementType[PreparsedElementType[\"OTHER\"] = 4] = \"OTHER\";\n})(PreparsedElementType || (PreparsedElementType = {}));\nvar PreparsedElement = /** @class */ (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\nvar TEMPLATE_ATTR_PREFIX = '*';\nfunction htmlAstToRender3Ast(htmlNodes, bindingParser) {\n    var transformer = new HtmlAstToIvyAst(bindingParser);\n    var ivyNodes = visitAll(transformer, htmlNodes);\n    // Errors might originate in either the binding parser or the html to ivy transformer\n    var allErrors = bindingParser.errors.concat(transformer.errors);\n    var errors = allErrors.filter(function (e) { return e.level === ParseErrorLevel.ERROR; });\n    if (errors.length > 0) {\n        var errorString = errors.join('\\n');\n        throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n    }\n    return {\n        nodes: ivyNodes,\n        errors: allErrors,\n    };\n}\nvar HtmlAstToIvyAst = /** @class */ (function () {\n    function HtmlAstToIvyAst(bindingParser) {\n        this.bindingParser = bindingParser;\n        this.errors = [];\n    }\n    // HTML visitor\n    HtmlAstToIvyAst.prototype.visitElement = function (element) {\n        var _this = this;\n        var e_1, _a;\n        var preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        // Whether the element is a `<ng-template>`\n        var isTemplateElement = isNgTemplate(element.name);\n        var parsedProperties = [];\n        var boundEvents = [];\n        var variables = [];\n        var references = [];\n        var attributes = [];\n        var i18nAttrsMeta = {};\n        var templateParsedProperties = [];\n        var templateVariables = [];\n        // Whether the element has any *-attribute\n        var elementHasInlineTemplate = false;\n        try {\n            for (var _b = __values(element.attrs), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var attribute = _c.value;\n                var hasBinding = false;\n                var normalizedName = normalizeAttributeName(attribute.name);\n                // `*attr` defines template bindings\n                var isTemplateBinding = false;\n                if (attribute.i18n) {\n                    i18nAttrsMeta[attribute.name] = attribute.i18n;\n                }\n                if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                    // *-attributes\n                    if (elementHasInlineTemplate) {\n                        this.reportError(\"Can't have multiple template bindings on one element. Use only one attribute prefixed with *\", attribute.sourceSpan);\n                    }\n                    isTemplateBinding = true;\n                    elementHasInlineTemplate = true;\n                    var templateValue = attribute.value;\n                    var templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length);\n                    var parsedVariables = [];\n                    this.bindingParser.parseInlineTemplateBinding(templateKey, templateValue, attribute.sourceSpan, [], templateParsedProperties, parsedVariables);\n                    templateVariables.push.apply(templateVariables, __spread(parsedVariables.map(function (v) { return new Variable(v.name, v.value, v.sourceSpan); })));\n                }\n                else {\n                    // Check for variables, events, property bindings, interpolation\n                    hasBinding = this.parseAttribute(isTemplateElement, attribute, [], parsedProperties, boundEvents, variables, references);\n                }\n                if (!hasBinding && !isTemplateBinding) {\n                    // don't include the bindings as attributes as well in the AST\n                    attributes.push(this.visitAttribute(attribute));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children);\n        var parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            // `<ng-content>`\n            if (element.children && !element.children.every(isEmptyTextNode)) {\n                this.reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n            }\n            var selector = preparsedElement.selectAttr;\n            var attrs = element.attrs.map(function (attr) { return _this.visitAttribute(attr); });\n            parsedElement = new Content(selector, attrs, element.sourceSpan, element.i18n);\n        }\n        else if (isTemplateElement) {\n            // `<ng-template>`\n            var attrs = this.extractAttributes(element.name, parsedProperties, i18nAttrsMeta);\n            parsedElement = new Template(element.name, attributes, attrs.bound, boundEvents, children, references, variables, element.sourceSpan, element.startSourceSpan, element.endSourceSpan, element.i18n);\n        }\n        else {\n            var attrs = this.extractAttributes(element.name, parsedProperties, i18nAttrsMeta);\n            parsedElement = new Element$1(element.name, attributes, attrs.bound, boundEvents, children, references, element.sourceSpan, element.startSourceSpan, element.endSourceSpan, element.i18n);\n        }\n        if (elementHasInlineTemplate) {\n            var attrs = this.extractAttributes('ng-template', templateParsedProperties, i18nAttrsMeta);\n            // TODO(pk): test for this case\n            parsedElement = new Template(parsedElement.name, attrs.literal, attrs.bound, [], [parsedElement], [], templateVariables, element.sourceSpan, element.startSourceSpan, element.endSourceSpan, element.i18n);\n        }\n        return parsedElement;\n    };\n    HtmlAstToIvyAst.prototype.visitAttribute = function (attribute) {\n        return new TextAttribute(attribute.name, attribute.value, attribute.sourceSpan, attribute.valueSpan, attribute.i18n);\n    };\n    HtmlAstToIvyAst.prototype.visitText = function (text) {\n        return this._visitTextWithInterpolation(text.value, text.sourceSpan, text.i18n);\n    };\n    HtmlAstToIvyAst.prototype.visitExpansion = function (expansion) {\n        var _this = this;\n        var meta = expansion.i18n;\n        // do not generate Icu in case it was created\n        // outside of i18n block in a template\n        if (!meta) {\n            return null;\n        }\n        var vars = {};\n        var placeholders = {};\n        // extract VARs from ICUs - we process them separately while\n        // assembling resulting message via goog.getMsg function, since\n        // we need to pass them to top-level goog.getMsg call\n        Object.keys(meta.placeholders).forEach(function (key) {\n            var value = meta.placeholders[key];\n            if (key.startsWith(I18N_ICU_VAR_PREFIX)) {\n                var config = _this.bindingParser.interpolationConfig;\n                // ICU expression is a plain string, not wrapped into start\n                // and end tags, so we wrap it before passing to binding parser\n                var wrapped = \"\" + config.start + value + config.end;\n                vars[key] = _this._visitTextWithInterpolation(wrapped, expansion.sourceSpan);\n            }\n            else {\n                placeholders[key] = _this._visitTextWithInterpolation(value, expansion.sourceSpan);\n            }\n        });\n        return new Icu$1(vars, placeholders, expansion.sourceSpan, meta);\n    };\n    HtmlAstToIvyAst.prototype.visitExpansionCase = function (expansionCase) { return null; };\n    HtmlAstToIvyAst.prototype.visitComment = function (comment) { return null; };\n    // convert view engine `ParsedProperty` to a format suitable for IVY\n    HtmlAstToIvyAst.prototype.extractAttributes = function (elementName, properties, i18nPropsMeta) {\n        var _this = this;\n        var bound = [];\n        var literal = [];\n        properties.forEach(function (prop) {\n            var i18n = i18nPropsMeta[prop.name];\n            if (prop.isLiteral) {\n                literal.push(new TextAttribute(prop.name, prop.expression.source || '', prop.sourceSpan, undefined, i18n));\n            }\n            else {\n                var bep = _this.bindingParser.createBoundElementProperty(elementName, prop);\n                bound.push(BoundAttribute.fromBoundElementProperty(bep, i18n));\n            }\n        });\n        return { bound: bound, literal: literal };\n    };\n    HtmlAstToIvyAst.prototype.parseAttribute = function (isTemplateElement, attribute, matchableAttributes, parsedProperties, boundEvents, variables, references) {\n        var name = normalizeAttributeName(attribute.name);\n        var value = attribute.value;\n        var srcSpan = attribute.sourceSpan;\n        var bindParts = name.match(BIND_NAME_REGEXP);\n        var hasBinding = false;\n        if (bindParts) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var identifier = bindParts[IDENT_KW_IDX];\n                    this.parseVariable(identifier, value, srcSpan, variables);\n                }\n                else {\n                    this.reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var identifier = bindParts[IDENT_KW_IDX];\n                this.parseReference(identifier, value, srcSpan, references);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                var events = [];\n                this.bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, matchableAttributes, events);\n                addEvents(events, boundEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n                this.parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, matchableAttributes, boundEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this.bindingParser.parseLiteralAttr(name, value, srcSpan, matchableAttributes, parsedProperties);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n                this.parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, matchableAttributes, boundEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                var events = [];\n                this.bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, matchableAttributes, events);\n                addEvents(events, boundEvents);\n            }\n        }\n        else {\n            hasBinding = this.bindingParser.parsePropertyInterpolation(name, value, srcSpan, matchableAttributes, parsedProperties);\n        }\n        return hasBinding;\n    };\n    HtmlAstToIvyAst.prototype._visitTextWithInterpolation = function (value, sourceSpan, i18n) {\n        var valueNoNgsp = replaceNgsp(value);\n        var expr = this.bindingParser.parseInterpolation(valueNoNgsp, sourceSpan);\n        return expr ? new BoundText(expr, sourceSpan, i18n) : new Text$3(valueNoNgsp, sourceSpan);\n    };\n    HtmlAstToIvyAst.prototype.parseVariable = function (identifier, value, sourceSpan, variables) {\n        if (identifier.indexOf('-') > -1) {\n            this.reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        variables.push(new Variable(identifier, value, sourceSpan));\n    };\n    HtmlAstToIvyAst.prototype.parseReference = function (identifier, value, sourceSpan, references) {\n        if (identifier.indexOf('-') > -1) {\n            this.reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        references.push(new Reference(identifier, value, sourceSpan));\n    };\n    HtmlAstToIvyAst.prototype.parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, boundEvents) {\n        var events = [];\n        this.bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, events);\n        addEvents(events, boundEvents);\n    };\n    HtmlAstToIvyAst.prototype.reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.errors.push(new ParseError(sourceSpan, message, level));\n    };\n    return HtmlAstToIvyAst;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    NonBindableVisitor.prototype.visitElement = function (ast) {\n        var preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var children = visitAll(this, ast.children, null);\n        return new Element$1(ast.name, visitAll(this, ast.attrs), \n        /* inputs */ [], /* outputs */ [], children, /* references */ [], ast.sourceSpan, ast.startSourceSpan, ast.endSourceSpan);\n    };\n    NonBindableVisitor.prototype.visitComment = function (comment) { return null; };\n    NonBindableVisitor.prototype.visitAttribute = function (attribute) {\n        return new TextAttribute(attribute.name, attribute.value, attribute.sourceSpan, undefined, attribute.i18n);\n    };\n    NonBindableVisitor.prototype.visitText = function (text) { return new Text$3(text.value, text.sourceSpan); };\n    NonBindableVisitor.prototype.visitExpansion = function (expansion) { return null; };\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase) { return null; };\n    return NonBindableVisitor;\n}());\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\nfunction normalizeAttributeName(attrName) {\n    return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n}\nfunction addEvents(events, boundEvents) {\n    boundEvents.push.apply(boundEvents, __spread(events.map(function (e) { return BoundEvent.fromParsedEvent(e); })));\n}\nfunction isEmptyTextNode(node) {\n    return node instanceof Text$2 && node.value.trim().length == 0;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TagType;\n(function (TagType) {\n    TagType[TagType[\"ELEMENT\"] = 0] = \"ELEMENT\";\n    TagType[TagType[\"TEMPLATE\"] = 1] = \"TEMPLATE\";\n})(TagType || (TagType = {}));\n/**\n * Generates an object that is used as a shared state between parent and all child contexts.\n */\nfunction setupRegistry() {\n    return { getUniqueId: getSeqNumberGenerator(), icus: new Map() };\n}\n/**\n * I18nContext is a helper class which keeps track of all i18n-related aspects\n * (accumulates placeholders, bindings, etc) between i18nStart and i18nEnd instructions.\n *\n * When we enter a nested template, the top-level context is being passed down\n * to the nested component, which uses this context to generate a child instance\n * of I18nContext class (to handle nested template) and at the end, reconciles it back\n * with the parent context.\n *\n * @param index Instruction index of i18nStart, which initiates this context\n * @param ref Reference to a translation const that represents the content if thus context\n * @param level Nestng level defined for child contexts\n * @param templateIndex Instruction index of a template which this context belongs to\n * @param meta Meta information (id, meaning, description, etc) associated with this context\n */\nvar I18nContext = /** @class */ (function () {\n    function I18nContext(index, ref, level, templateIndex, meta, registry) {\n        if (level === void 0) { level = 0; }\n        if (templateIndex === void 0) { templateIndex = null; }\n        this.index = index;\n        this.ref = ref;\n        this.level = level;\n        this.templateIndex = templateIndex;\n        this.meta = meta;\n        this.registry = registry;\n        this.bindings = new Set();\n        this.placeholders = new Map();\n        this._unresolvedCtxCount = 0;\n        this._registry = registry || setupRegistry();\n        this.id = this._registry.getUniqueId();\n    }\n    I18nContext.prototype.appendTag = function (type, node, index, closed) {\n        if (node.isVoid && closed) {\n            return; // ignore \"close\" for void tags\n        }\n        var ph = node.isVoid || !closed ? node.startName : node.closeName;\n        var content = { type: type, index: index, ctx: this.id, isVoid: node.isVoid, closed: closed };\n        updatePlaceholderMap(this.placeholders, ph, content);\n    };\n    Object.defineProperty(I18nContext.prototype, \"icus\", {\n        get: function () { return this._registry.icus; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(I18nContext.prototype, \"isRoot\", {\n        get: function () { return this.level === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(I18nContext.prototype, \"isResolved\", {\n        get: function () { return this._unresolvedCtxCount === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    I18nContext.prototype.getSerializedPlaceholders = function () {\n        var result = new Map();\n        this.placeholders.forEach(function (values, key) { return result.set(key, values.map(serializePlaceholderValue)); });\n        return result;\n    };\n    // public API to accumulate i18n-related content\n    I18nContext.prototype.appendBinding = function (binding) { this.bindings.add(binding); };\n    I18nContext.prototype.appendIcu = function (name, ref) {\n        updatePlaceholderMap(this._registry.icus, name, ref);\n    };\n    I18nContext.prototype.appendBoundText = function (node) {\n        var _this = this;\n        var phs = assembleBoundTextPlaceholders(node, this.bindings.size, this.id);\n        phs.forEach(function (values, key) { return updatePlaceholderMap.apply(void 0, __spread([_this.placeholders, key], values)); });\n    };\n    I18nContext.prototype.appendTemplate = function (node, index) {\n        // add open and close tags at the same time,\n        // since we process nested templates separately\n        this.appendTag(TagType.TEMPLATE, node, index, false);\n        this.appendTag(TagType.TEMPLATE, node, index, true);\n        this._unresolvedCtxCount++;\n    };\n    I18nContext.prototype.appendElement = function (node, index, closed) {\n        this.appendTag(TagType.ELEMENT, node, index, closed);\n    };\n    /**\n     * Generates an instance of a child context based on the root one,\n     * when we enter a nested template within I18n section.\n     *\n     * @param index Instruction index of corresponding i18nStart, which initiates this context\n     * @param templateIndex Instruction index of a template which this context belongs to\n     * @param meta Meta information (id, meaning, description, etc) associated with this context\n     *\n     * @returns I18nContext instance\n     */\n    I18nContext.prototype.forkChildContext = function (index, templateIndex, meta) {\n        return new I18nContext(index, this.ref, this.level + 1, templateIndex, meta, this._registry);\n    };\n    /**\n     * Reconciles child context into parent one once the end of the i18n block is reached (i18nEnd).\n     *\n     * @param context Child I18nContext instance to be reconciled with parent context.\n     */\n    I18nContext.prototype.reconcileChildContext = function (context) {\n        var _this = this;\n        // set the right context id for open and close\n        // template tags, so we can use it as sub-block ids\n        ['start', 'close'].forEach(function (op) {\n            var key = context.meta[op + \"Name\"];\n            var phs = _this.placeholders.get(key) || [];\n            var tag = phs.find(findTemplateFn(_this.id, context.templateIndex));\n            if (tag) {\n                tag.ctx = context.id;\n            }\n        });\n        // reconcile placeholders\n        var childPhs = context.placeholders;\n        childPhs.forEach(function (values, key) {\n            var phs = _this.placeholders.get(key);\n            if (!phs) {\n                _this.placeholders.set(key, values);\n                return;\n            }\n            // try to find matching template...\n            var tmplIdx = findIndex(phs, findTemplateFn(context.id, context.templateIndex));\n            if (tmplIdx >= 0) {\n                // ... if found - replace it with nested template content\n                var isCloseTag = key.startsWith('CLOSE');\n                var isTemplateTag = key.endsWith('NG-TEMPLATE');\n                if (isTemplateTag) {\n                    // current template's content is placed before or after\n                    // parent template tag, depending on the open/close atrribute\n                    phs.splice.apply(phs, __spread([tmplIdx + (isCloseTag ? 0 : 1), 0], values));\n                }\n                else {\n                    var idx = isCloseTag ? values.length - 1 : 0;\n                    values[idx].tmpl = phs[tmplIdx];\n                    phs.splice.apply(phs, __spread([tmplIdx, 1], values));\n                }\n            }\n            else {\n                // ... otherwise just append content to placeholder value\n                phs.push.apply(phs, __spread(values));\n            }\n            _this.placeholders.set(key, phs);\n        });\n        this._unresolvedCtxCount--;\n    };\n    return I18nContext;\n}());\n//\n// Helper methods\n//\nfunction wrap(symbol, index, contextId, closed) {\n    var state = closed ? '/' : '';\n    return wrapI18nPlaceholder(\"\" + state + symbol + index, contextId);\n}\nfunction wrapTag(symbol, _a, closed) {\n    var index = _a.index, ctx = _a.ctx, isVoid = _a.isVoid;\n    return isVoid ? wrap(symbol, index, ctx) + wrap(symbol, index, ctx, true) :\n        wrap(symbol, index, ctx, closed);\n}\nfunction findTemplateFn(ctx, templateIndex) {\n    return function (token) { return typeof token === 'object' && token.type === TagType.TEMPLATE &&\n        token.index === templateIndex && token.ctx === ctx; };\n}\nfunction serializePlaceholderValue(value) {\n    var element = function (data, closed) { return wrapTag('#', data, closed); };\n    var template = function (data, closed) { return wrapTag('*', data, closed); };\n    switch (value.type) {\n        case TagType.ELEMENT:\n            // close element tag\n            if (value.closed) {\n                return element(value, true) + (value.tmpl ? template(value.tmpl, true) : '');\n            }\n            // open element tag that also initiates a template\n            if (value.tmpl) {\n                return template(value.tmpl) + element(value) +\n                    (value.isVoid ? template(value.tmpl, true) : '');\n            }\n            return element(value);\n        case TagType.TEMPLATE:\n            return template(value, value.closed);\n        default:\n            return value;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n */\nvar PlaceholderRegistry = /** @class */ (function () {\n    function PlaceholderRegistry() {\n        // Count the occurrence of the base name top generate a unique name\n        this._placeHolderNameCounts = {};\n        // Maps signature to placeholder names\n        this._signatureToName = {};\n    }\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n        var signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var upperTag = tag.toUpperCase();\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n        var signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var upperTag = tag.toUpperCase();\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n        var upperName = name.toUpperCase();\n        var signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    // Generate a hash for a tag - does not take attribute order into account\n    PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n        var start = \"<\" + tag;\n        var strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n        var seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id, visitNodeFn) {\n        return visitor.toI18nMessage(nodes, meaning, description, id, visitNodeFn);\n    };\n}\nvar _I18nVisitor = /** @class */ (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id, visitNodeFn) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        this._visitNodeFn = visitNodeFn;\n        var i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    _I18nVisitor.prototype._visitNode = function (html, i18n) {\n        if (this._visitNodeFn) {\n            this._visitNodeFn(html, i18n);\n        }\n        return i18n;\n    };\n    _I18nVisitor.prototype.visitElement = function (el, context) {\n        var children = visitAll(this, el.children);\n        var attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = el.sourceSpan.toString();\n        var closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        var node = new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, el.sourceSpan);\n        return this._visitNode(el, node);\n    };\n    _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n        var node = this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n        return this._visitNode(attribute, node);\n    };\n    _I18nVisitor.prototype.visitText = function (text, context) {\n        var node = this._visitTextWithInterpolation(text.value, text.sourceSpan);\n        return this._visitNode(text, node);\n    };\n    _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n    _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var i18nIcuCases = {};\n        var i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return this._visitNode(icu, i18nIcu);\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        var node = new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n        return this._visitNode(icu, node);\n    };\n    _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n        var splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var nodes = [];\n        var container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var expression = splitInterpolation.expressions[i];\n            var baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction setI18nRefs(html, i18n) {\n    html.i18n = i18n;\n}\n/**\n * This visitor walks over HTML parse tree and converts information stored in\n * i18n-related attributes (\"i18n\" and \"i18n-*\") into i18n meta object that is\n * stored with other element's and attribute's information.\n */\nvar I18nMetaVisitor = /** @class */ (function () {\n    function I18nMetaVisitor(interpolationConfig, keepI18nAttrs) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        if (keepI18nAttrs === void 0) { keepI18nAttrs = false; }\n        this.interpolationConfig = interpolationConfig;\n        this.keepI18nAttrs = keepI18nAttrs;\n        // i18n message generation factory\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    }\n    I18nMetaVisitor.prototype._generateI18nMessage = function (nodes, meta, visitNodeFn) {\n        if (meta === void 0) { meta = ''; }\n        var parsed = typeof meta === 'string' ? parseI18nMeta(meta) : metaFromI18nMessage(meta);\n        var message = this._createI18nMessage(nodes, parsed.meaning || '', parsed.description || '', parsed.id || '', visitNodeFn);\n        if (!message.id) {\n            // generate (or restore) message id if not specified in template\n            message.id = typeof meta !== 'string' && meta.id || decimalDigest(message);\n        }\n        return message;\n    };\n    I18nMetaVisitor.prototype.visitElement = function (element, context) {\n        var e_1, _a, e_2, _b;\n        if (hasI18nAttrs(element)) {\n            var attrs = [];\n            var attrsMeta = {};\n            try {\n                for (var _c = __values(element.attrs), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var attr = _d.value;\n                    if (attr.name === I18N_ATTR) {\n                        // root 'i18n' node attribute\n                        var i18n_1 = element.i18n || attr.value;\n                        var message = this._generateI18nMessage(element.children, i18n_1, setI18nRefs);\n                        // do not assign empty i18n meta\n                        if (message.nodes.length) {\n                            element.i18n = message;\n                        }\n                    }\n                    else if (attr.name.startsWith(I18N_ATTR_PREFIX)) {\n                        // 'i18n-*' attributes\n                        var key = attr.name.slice(I18N_ATTR_PREFIX.length);\n                        attrsMeta[key] = attr.value;\n                    }\n                    else {\n                        // non-i18n attributes\n                        attrs.push(attr);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            // set i18n meta for attributes\n            if (Object.keys(attrsMeta).length) {\n                try {\n                    for (var attrs_1 = __values(attrs), attrs_1_1 = attrs_1.next(); !attrs_1_1.done; attrs_1_1 = attrs_1.next()) {\n                        var attr = attrs_1_1.value;\n                        var meta = attrsMeta[attr.name];\n                        // do not create translation for empty attributes\n                        if (meta !== undefined && attr.value) {\n                            attr.i18n = this._generateI18nMessage([attr], attr.i18n || meta);\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (attrs_1_1 && !attrs_1_1.done && (_b = attrs_1.return)) _b.call(attrs_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            if (!this.keepI18nAttrs) {\n                // update element's attributes,\n                // keeping only non-i18n related ones\n                element.attrs = attrs;\n            }\n        }\n        visitAll(this, element.children);\n        return element;\n    };\n    I18nMetaVisitor.prototype.visitExpansion = function (expansion, context) {\n        var message;\n        var meta = expansion.i18n;\n        if (meta instanceof IcuPlaceholder) {\n            // set ICU placeholder name (e.g. \"ICU_1\"),\n            // generated while processing root element contents,\n            // so we can reference it when we output translation\n            var name_1 = meta.name;\n            message = this._generateI18nMessage([expansion], meta);\n            var icu = icuFromI18nMessage(message);\n            icu.name = name_1;\n        }\n        else {\n            // when ICU is a root level translation\n            message = this._generateI18nMessage([expansion], meta);\n        }\n        expansion.i18n = message;\n        return expansion;\n    };\n    I18nMetaVisitor.prototype.visitText = function (text, context) { return text; };\n    I18nMetaVisitor.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    I18nMetaVisitor.prototype.visitComment = function (comment, context) { return comment; };\n    I18nMetaVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return I18nMetaVisitor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formatPh = function (value) { return \"{$\" + formatI18nPlaceholderName(value) + \"}\"; };\n/**\n * This visitor walks over i18n tree and generates its string representation,\n * including ICUs and placeholders in {$PLACEHOLDER} format.\n */\nvar SerializerVisitor = /** @class */ (function () {\n    function SerializerVisitor() {\n    }\n    SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (child) { return child.visit(_this); }).join('');\n    };\n    SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \" + strCases.join(' ') + \"}\";\n    };\n    SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            formatPh(ph.startName) :\n            \"\" + formatPh(ph.startName) + ph.children.map(function (child) { return child.visit(_this); }).join('') + formatPh(ph.closeName);\n    };\n    SerializerVisitor.prototype.visitPlaceholder = function (ph, context) { return formatPh(ph.name); };\n    SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) { return formatPh(ph.name); };\n    return SerializerVisitor;\n}());\nvar serializerVisitor$1 = new SerializerVisitor();\nfunction getSerializedI18nContent(message) {\n    return message.nodes.map(function (node) { return node.visit(serializerVisitor$1, null); }).join('');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mapBindingToInstruction(type) {\n    switch (type) {\n        case 0 /* Property */:\n        case 4 /* Animation */:\n            return Identifiers$1.elementProperty;\n        case 2 /* Class */:\n            return Identifiers$1.elementClassProp;\n        case 1 /* Attribute */:\n            return Identifiers$1.elementAttribute;\n        default:\n            return undefined;\n    }\n}\n//  if (rf & flags) { .. }\nfunction renderFlagCheckIfStmt(flags, statements) {\n    return ifStmt(variable(RENDER_FLAGS).bitwiseAnd(literal(flags), null, false), statements);\n}\n// Default selector used by `<ng-content>` if none specified\nvar DEFAULT_NG_CONTENT_SELECTOR = '*';\n// Selector attribute name of `<ng-content>`\nvar NG_CONTENT_SELECT_ATTR$1 = 'select';\nvar TemplateDefinitionBuilder = /** @class */ (function () {\n    function TemplateDefinitionBuilder(constantPool, parentBindingScope, level, contextName, i18nContext, templateIndex, templateName, viewQueries, directiveMatcher, directives, pipeTypeByName, pipes, _namespace, relativeContextFilePath, i18nUseExternalIds) {\n        if (level === void 0) { level = 0; }\n        var _this = this;\n        this.constantPool = constantPool;\n        this.level = level;\n        this.contextName = contextName;\n        this.i18nContext = i18nContext;\n        this.templateIndex = templateIndex;\n        this.templateName = templateName;\n        this.viewQueries = viewQueries;\n        this.directiveMatcher = directiveMatcher;\n        this.directives = directives;\n        this.pipeTypeByName = pipeTypeByName;\n        this.pipes = pipes;\n        this._namespace = _namespace;\n        this.relativeContextFilePath = relativeContextFilePath;\n        this.i18nUseExternalIds = i18nUseExternalIds;\n        this._dataIndex = 0;\n        this._bindingContext = 0;\n        this._prefixCode = [];\n        /**\n         * List of callbacks to generate creation mode instructions. We store them here as we process\n         * the template so bindings in listeners are resolved only once all nodes have been visited.\n         * This ensures all local refs and context variables are available for matching.\n         */\n        this._creationCodeFns = [];\n        /**\n         * List of callbacks to generate update mode instructions. We store them here as we process\n         * the template so bindings are resolved only once all nodes have been visited. This ensures\n         * all local refs and context variables are available for matching.\n         */\n        this._updateCodeFns = [];\n        /** Temporary variable declarations generated from visiting pipes, literals, etc. */\n        this._tempVariables = [];\n        /**\n         * List of callbacks to build nested templates. Nested templates must not be visited until\n         * after the parent template has finished visiting all of its nodes. This ensures that all\n         * local ref bindings in nested templates are able to find local ref values if the refs\n         * are defined after the template declaration.\n         */\n        this._nestedTemplateFns = [];\n        this._unsupported = unsupported;\n        // i18n context local to this template\n        this.i18n = null;\n        // Number of slots to reserve for pureFunctions\n        this._pureFunctionSlots = 0;\n        // Number of binding slots\n        this._bindingSlots = 0;\n        // Whether the template includes <ng-content> tags.\n        this._hasNgContent = false;\n        // Selectors found in the <ng-content> tags in the template.\n        this._ngContentSelectors = [];\n        // Number of non-default selectors found in all parent templates of this template. We need to\n        // track it to properly adjust projection bucket index in the `projection` instruction.\n        this._ngContentSelectorsOffset = 0;\n        // These should be handled in the template or element directly.\n        this.visitReference = invalid$1;\n        this.visitVariable = invalid$1;\n        this.visitTextAttribute = invalid$1;\n        this.visitBoundAttribute = invalid$1;\n        this.visitBoundEvent = invalid$1;\n        // view queries can take up space in data and allocation happens earlier (in the \"viewQuery\"\n        // function)\n        this._dataIndex = viewQueries.length;\n        this._bindingScope = parentBindingScope.nestedScope(level);\n        // Turn the relative context file path into an identifier by replacing non-alphanumeric\n        // characters with underscores.\n        this.fileBasedI18nSuffix = relativeContextFilePath.replace(/[^A-Za-z0-9]/g, '_') + '_';\n        this._valueConverter = new ValueConverter(constantPool, function () { return _this.allocateDataSlot(); }, function (numSlots) { return _this.allocatePureFunctionSlots(numSlots); }, function (name, localName, slot, value) {\n            var pipeType = pipeTypeByName.get(name);\n            if (pipeType) {\n                _this.pipes.add(pipeType);\n            }\n            _this._bindingScope.set(_this.level, localName, value);\n            _this.creationInstruction(null, Identifiers$1.pipe, [literal(slot), literal(name)]);\n        });\n    }\n    TemplateDefinitionBuilder.prototype.registerContextVariables = function (variable$$1) {\n        var scopedName = this._bindingScope.freshReferenceName();\n        var retrievalLevel = this.level;\n        var lhs = variable(variable$$1.name + scopedName);\n        this._bindingScope.set(retrievalLevel, variable$$1.name, lhs, 1 /* CONTEXT */, function (scope, relativeLevel) {\n            var rhs;\n            if (scope.bindingLevel === retrievalLevel) {\n                // e.g. ctx\n                rhs = variable(CONTEXT_NAME);\n            }\n            else {\n                var sharedCtxVar = scope.getSharedContextName(retrievalLevel);\n                // e.g. ctx_r0   OR  x(2);\n                rhs = sharedCtxVar ? sharedCtxVar : generateNextContextExpr(relativeLevel);\n            }\n            // e.g. const $item$ = x(2).$implicit;\n            return [lhs.set(rhs.prop(variable$$1.value || IMPLICIT_REFERENCE)).toConstDecl()];\n        });\n    };\n    TemplateDefinitionBuilder.prototype.buildTemplateFunction = function (nodes, variables, ngContentSelectorsOffset, i18n) {\n        var _this = this;\n        if (ngContentSelectorsOffset === void 0) { ngContentSelectorsOffset = 0; }\n        this._ngContentSelectorsOffset = ngContentSelectorsOffset;\n        if (this._namespace !== Identifiers$1.namespaceHTML) {\n            this.creationInstruction(null, this._namespace);\n        }\n        // Create variable bindings\n        variables.forEach(function (v) { return _this.registerContextVariables(v); });\n        // Initiate i18n context in case:\n        // - this template has parent i18n context\n        // - or the template has i18n meta associated with it,\n        //   but it's not initiated by the Element (e.g. <ng-template i18n>)\n        var initI18nContext = this.i18nContext || (isI18nRootNode(i18n) && !isSingleI18nIcu(i18n) &&\n            !(isSingleElementTemplate(nodes) && nodes[0].i18n === i18n));\n        var selfClosingI18nInstruction = hasTextChildrenOnly(nodes);\n        if (initI18nContext) {\n            this.i18nStart(null, i18n, selfClosingI18nInstruction);\n        }\n        // This is the initial pass through the nodes of this template. In this pass, we\n        // queue all creation mode and update mode instructions for generation in the second\n        // pass. It's necessary to separate the passes to ensure local refs are defined before\n        // resolving bindings. We also count bindings in this pass as we walk bound expressions.\n        visitAll$1(this, nodes);\n        // Add total binding count to pure function count so pure function instructions are\n        // generated with the correct slot offset when update instructions are processed.\n        this._pureFunctionSlots += this._bindingSlots;\n        // Pipes are walked in the first pass (to enqueue `pipe()` creation instructions and\n        // `pipeBind` update instructions), so we have to update the slot offsets manually\n        // to account for bindings.\n        this._valueConverter.updatePipeSlotOffsets(this._bindingSlots);\n        // Nested templates must be processed before creation instructions so template()\n        // instructions can be generated with the correct internal const count.\n        this._nestedTemplateFns.forEach(function (buildTemplateFn) { return buildTemplateFn(); });\n        // Output the `projectionDef` instruction when some `<ng-content>` are present.\n        // The `projectionDef` instruction only emitted for the component template and it is skipped for\n        // nested templates (<ng-template> tags).\n        if (this.level === 0 && this._hasNgContent) {\n            var parameters = [];\n            // Only selectors with a non-default value are generated\n            if (this._ngContentSelectors.length) {\n                var r3Selectors = this._ngContentSelectors.map(function (s) { return parseSelectorToR3Selector(s); });\n                // `projectionDef` needs both the parsed and raw value of the selectors\n                var parsed = this.constantPool.getConstLiteral(asLiteral(r3Selectors), true);\n                var unParsed = this.constantPool.getConstLiteral(asLiteral(this._ngContentSelectors), true);\n                parameters.push(parsed, unParsed);\n            }\n            // Since we accumulate ngContent selectors while processing template elements,\n            // we *prepend* `projectionDef` to creation instructions block, to put it before\n            // any `projection` instructions\n            this.creationInstruction(null, Identifiers$1.projectionDef, parameters, /* prepend */ true);\n        }\n        if (initI18nContext) {\n            this.i18nEnd(null, selfClosingI18nInstruction);\n        }\n        // Generate all the creation mode instructions (e.g. resolve bindings in listeners)\n        var creationStatements = this._creationCodeFns.map(function (fn$$1) { return fn$$1(); });\n        // Generate all the update mode instructions (e.g. resolve property or text bindings)\n        var updateStatements = this._updateCodeFns.map(function (fn$$1) { return fn$$1(); });\n        //  Variable declaration must occur after binding resolution so we can generate context\n        //  instructions that build on each other.\n        // e.g. const b = nextContext().$implicit(); const b = nextContext();\n        var creationVariables = this._bindingScope.viewSnapshotStatements();\n        var updateVariables = this._bindingScope.variableDeclarations().concat(this._tempVariables);\n        var creationBlock = creationStatements.length > 0 ?\n            [renderFlagCheckIfStmt(1 /* Create */, creationVariables.concat(creationStatements))] :\n            [];\n        var updateBlock = updateStatements.length > 0 ?\n            [renderFlagCheckIfStmt(2 /* Update */, updateVariables.concat(updateStatements))] :\n            [];\n        return fn(\n        // i.e. (rf: RenderFlags, ctx: any)\n        [new FnParam(RENDER_FLAGS, NUMBER_TYPE), new FnParam(CONTEXT_NAME, null)], __spread(this._prefixCode, creationBlock, updateBlock), INFERRED_TYPE, null, this.templateName);\n    };\n    // LocalResolver\n    TemplateDefinitionBuilder.prototype.getLocal = function (name) { return this._bindingScope.get(name); };\n    TemplateDefinitionBuilder.prototype.i18nTranslate = function (message, params, ref, transformFn) {\n        if (params === void 0) { params = {}; }\n        var _a;\n        var _ref = ref || this.i18nAllocateRef(message.id);\n        var _params = {};\n        if (params && Object.keys(params).length) {\n            Object.keys(params).forEach(function (key) { return _params[formatI18nPlaceholderName(key)] = params[key]; });\n        }\n        var meta = metaFromI18nMessage(message);\n        var content = getSerializedI18nContent(message);\n        var statements = getTranslationDeclStmts(_ref, content, meta, _params, transformFn);\n        (_a = this.constantPool.statements).push.apply(_a, __spread(statements));\n        return _ref;\n    };\n    TemplateDefinitionBuilder.prototype.i18nAppendBindings = function (expressions) {\n        var _this = this;\n        if (!this.i18n || !expressions.length)\n            return;\n        var implicit = variable(CONTEXT_NAME);\n        expressions.forEach(function (expression) {\n            var binding = _this.convertExpressionBinding(implicit, expression);\n            _this.i18n.appendBinding(binding);\n        });\n    };\n    TemplateDefinitionBuilder.prototype.i18nBindProps = function (props) {\n        var _this = this;\n        var bound = {};\n        Object.keys(props).forEach(function (key) {\n            var prop = props[key];\n            if (prop instanceof Text$3) {\n                bound[key] = literal(prop.value);\n            }\n            else {\n                var value = prop.value.visit(_this._valueConverter);\n                _this.allocateBindingSlots(value);\n                if (value instanceof Interpolation) {\n                    var strings = value.strings, expressions = value.expressions;\n                    var _a = _this.i18n, id = _a.id, bindings = _a.bindings;\n                    var label = assembleI18nBoundString(strings, bindings.size, id);\n                    _this.i18nAppendBindings(expressions);\n                    bound[key] = literal(label);\n                }\n            }\n        });\n        return bound;\n    };\n    TemplateDefinitionBuilder.prototype.i18nAllocateRef = function (messageId) {\n        var name;\n        var suffix = this.fileBasedI18nSuffix.toUpperCase();\n        if (this.i18nUseExternalIds) {\n            var prefix = getTranslationConstPrefix(\"EXTERNAL_\");\n            var uniqueSuffix = this.constantPool.uniqueName(suffix);\n            name = \"\" + prefix + messageId + \"$$\" + uniqueSuffix;\n        }\n        else {\n            var prefix = getTranslationConstPrefix(suffix);\n            name = this.constantPool.uniqueName(prefix);\n        }\n        return variable(name);\n    };\n    TemplateDefinitionBuilder.prototype.i18nUpdateRef = function (context) {\n        var icus = context.icus, meta = context.meta, isRoot = context.isRoot, isResolved = context.isResolved;\n        if (isRoot && isResolved && !isSingleI18nIcu(meta)) {\n            var placeholders = context.getSerializedPlaceholders();\n            var icuMapping_1 = {};\n            var params_1 = placeholders.size ? placeholdersToParams(placeholders) : {};\n            if (icus.size) {\n                icus.forEach(function (refs, key) {\n                    if (refs.length === 1) {\n                        // if we have one ICU defined for a given\n                        // placeholder - just output its reference\n                        params_1[key] = refs[0];\n                    }\n                    else {\n                        // ... otherwise we need to activate post-processing\n                        // to replace ICU placeholders with proper values\n                        var placeholder = wrapI18nPlaceholder(\"\" + I18N_ICU_MAPPING_PREFIX + key);\n                        params_1[key] = literal(placeholder);\n                        icuMapping_1[key] = literalArr(refs);\n                    }\n                });\n            }\n            // translation requires post processing in 2 cases:\n            // - if we have placeholders with multiple values (ex. `START_DIV`: [�#1�, �#2�, ...])\n            // - if we have multiple ICUs that refer to the same placeholder name\n            var needsPostprocessing = Array.from(placeholders.values()).some(function (value) { return value.length > 1; }) ||\n                Object.keys(icuMapping_1).length;\n            var transformFn = void 0;\n            if (needsPostprocessing) {\n                transformFn = function (raw) {\n                    var args = [raw];\n                    if (Object.keys(icuMapping_1).length) {\n                        args.push(mapLiteral(icuMapping_1, true));\n                    }\n                    return instruction(null, Identifiers$1.i18nPostprocess, args);\n                };\n            }\n            this.i18nTranslate(meta, params_1, context.ref, transformFn);\n        }\n    };\n    TemplateDefinitionBuilder.prototype.i18nStart = function (span, meta, selfClosing) {\n        if (span === void 0) { span = null; }\n        var index = this.allocateDataSlot();\n        if (this.i18nContext) {\n            this.i18n = this.i18nContext.forkChildContext(index, this.templateIndex, meta);\n        }\n        else {\n            var ref_1 = this.i18nAllocateRef(meta.id);\n            this.i18n = new I18nContext(index, ref_1, 0, this.templateIndex, meta);\n        }\n        // generate i18nStart instruction\n        var _a = this.i18n, id = _a.id, ref = _a.ref;\n        var params = [literal(index), ref];\n        if (id > 0) {\n            // do not push 3rd argument (sub-block id)\n            // into i18nStart call for top level i18n context\n            params.push(literal(id));\n        }\n        this.creationInstruction(span, selfClosing ? Identifiers$1.i18n : Identifiers$1.i18nStart, params);\n    };\n    TemplateDefinitionBuilder.prototype.i18nEnd = function (span, selfClosing) {\n        var _this = this;\n        if (span === void 0) { span = null; }\n        if (!this.i18n) {\n            throw new Error('i18nEnd is executed with no i18n context present');\n        }\n        if (this.i18nContext) {\n            this.i18nContext.reconcileChildContext(this.i18n);\n            this.i18nUpdateRef(this.i18nContext);\n        }\n        else {\n            this.i18nUpdateRef(this.i18n);\n        }\n        // setup accumulated bindings\n        var _a = this.i18n, index = _a.index, bindings = _a.bindings;\n        if (bindings.size) {\n            bindings.forEach(function (binding) { return _this.updateInstruction(span, Identifiers$1.i18nExp, [binding]); });\n            this.updateInstruction(span, Identifiers$1.i18nApply, [literal(index)]);\n        }\n        if (!selfClosing) {\n            this.creationInstruction(span, Identifiers$1.i18nEnd);\n        }\n        this.i18n = null; // reset local i18n context\n    };\n    TemplateDefinitionBuilder.prototype.visitContent = function (ngContent) {\n        this._hasNgContent = true;\n        var slot = this.allocateDataSlot();\n        var selectorIndex = ngContent.selector === DEFAULT_NG_CONTENT_SELECTOR ?\n            0 :\n            this._ngContentSelectors.push(ngContent.selector) + this._ngContentSelectorsOffset;\n        var parameters = [literal(slot)];\n        var attributeAsList = [];\n        ngContent.attributes.forEach(function (attribute) {\n            var name = attribute.name, value = attribute.value;\n            if (name.toLowerCase() !== NG_CONTENT_SELECT_ATTR$1) {\n                attributeAsList.push(name, value);\n            }\n        });\n        if (attributeAsList.length > 0) {\n            parameters.push(literal(selectorIndex), asLiteral(attributeAsList));\n        }\n        else if (selectorIndex !== 0) {\n            parameters.push(literal(selectorIndex));\n        }\n        this.creationInstruction(ngContent.sourceSpan, Identifiers$1.projection, parameters);\n    };\n    TemplateDefinitionBuilder.prototype.getNamespaceInstruction = function (namespaceKey) {\n        switch (namespaceKey) {\n            case 'math':\n                return Identifiers$1.namespaceMathML;\n            case 'svg':\n                return Identifiers$1.namespaceSVG;\n            default:\n                return Identifiers$1.namespaceHTML;\n        }\n    };\n    TemplateDefinitionBuilder.prototype.addNamespaceInstruction = function (nsInstruction, element) {\n        this._namespace = nsInstruction;\n        this.creationInstruction(element.sourceSpan, nsInstruction);\n    };\n    TemplateDefinitionBuilder.prototype.visitElement = function (element) {\n        var _this = this;\n        var e_1, _a;\n        var elementIndex = this.allocateDataSlot();\n        var stylingBuilder = new StylingBuilder(literal(elementIndex), null);\n        var isNonBindableMode = false;\n        var isI18nRootElement = isI18nRootNode(element.i18n) && !isSingleI18nIcu(element.i18n);\n        if (isI18nRootElement && this.i18n) {\n            throw new Error(\"Could not mark an element as translatable inside of a translatable section\");\n        }\n        var i18nAttrs = [];\n        var outputAttrs = [];\n        var _b = __read(splitNsName(element.name), 2), namespaceKey = _b[0], elementName = _b[1];\n        var isNgContainer$$1 = isNgContainer(element.name);\n        try {\n            // Handle styling, i18n, ngNonBindable attributes\n            for (var _c = __values(element.attributes), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var attr = _d.value;\n                var name_1 = attr.name, value = attr.value;\n                if (name_1 === NON_BINDABLE_ATTR) {\n                    isNonBindableMode = true;\n                }\n                else if (name_1 === 'style') {\n                    stylingBuilder.registerStyleAttr(value);\n                }\n                else if (name_1 === 'class') {\n                    stylingBuilder.registerClassAttr(value);\n                }\n                else if (attr.i18n) {\n                    i18nAttrs.push(attr);\n                }\n                else {\n                    outputAttrs.push(attr);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        // Match directives on non i18n attributes\n        this.matchDirectives(element.name, element);\n        // Regular element or ng-container creation mode\n        var parameters = [literal(elementIndex)];\n        if (!isNgContainer$$1) {\n            parameters.push(literal(elementName));\n        }\n        // Add the attributes\n        var attributes = [];\n        var allOtherInputs = [];\n        element.inputs.forEach(function (input) {\n            if (!stylingBuilder.registerBoundInput(input)) {\n                if (input.type === 0 /* Property */) {\n                    if (input.i18n) {\n                        i18nAttrs.push(input);\n                    }\n                    else {\n                        allOtherInputs.push(input);\n                    }\n                }\n                else {\n                    allOtherInputs.push(input);\n                }\n            }\n        });\n        outputAttrs.forEach(function (attr) { return attributes.push(literal(attr.name), literal(attr.value)); });\n        // this will build the instructions so that they fall into the following syntax\n        // add attributes for directive matching purposes\n        attributes.push.apply(attributes, __spread(this.prepareSyntheticAndSelectOnlyAttrs(allOtherInputs, element.outputs, stylingBuilder)));\n        parameters.push(this.toAttrsParam(attributes));\n        // local refs (ex.: <div #foo #bar=\"baz\">)\n        parameters.push(this.prepareRefsParameter(element.references));\n        var wasInNamespace = this._namespace;\n        var currentNamespace = this.getNamespaceInstruction(namespaceKey);\n        // If the namespace is changing now, include an instruction to change it\n        // during element creation.\n        if (currentNamespace !== wasInNamespace) {\n            this.addNamespaceInstruction(currentNamespace, element);\n        }\n        var implicit = variable(CONTEXT_NAME);\n        if (this.i18n) {\n            this.i18n.appendElement(element.i18n, elementIndex);\n        }\n        var hasChildren = function () {\n            if (!isI18nRootElement && _this.i18n) {\n                // we do not append text node instructions and ICUs inside i18n section,\n                // so we exclude them while calculating whether current element has children\n                return !hasTextChildrenOnly(element.children);\n            }\n            return element.children.length > 0;\n        };\n        var createSelfClosingInstruction = !stylingBuilder.hasBindingsOrInitialValues() &&\n            !isNgContainer$$1 && element.outputs.length === 0 && i18nAttrs.length === 0 && !hasChildren();\n        var createSelfClosingI18nInstruction = !createSelfClosingInstruction &&\n            !stylingBuilder.hasBindingsOrInitialValues() && hasTextChildrenOnly(element.children);\n        if (createSelfClosingInstruction) {\n            this.creationInstruction(element.sourceSpan, Identifiers$1.element, trimTrailingNulls(parameters));\n        }\n        else {\n            this.creationInstruction(element.sourceSpan, isNgContainer$$1 ? Identifiers$1.elementContainerStart : Identifiers$1.elementStart, trimTrailingNulls(parameters));\n            if (isNonBindableMode) {\n                this.creationInstruction(element.sourceSpan, Identifiers$1.disableBindings);\n            }\n            if (isI18nRootElement) {\n                this.i18nStart(element.sourceSpan, element.i18n, createSelfClosingI18nInstruction);\n            }\n            // process i18n element attributes\n            if (i18nAttrs.length) {\n                var hasBindings_1 = false;\n                var i18nAttrArgs_1 = [];\n                i18nAttrs.forEach(function (attr) {\n                    var message = attr.i18n;\n                    if (attr instanceof TextAttribute) {\n                        i18nAttrArgs_1.push(literal(attr.name), _this.i18nTranslate(message));\n                    }\n                    else {\n                        var converted = attr.value.visit(_this._valueConverter);\n                        _this.allocateBindingSlots(converted);\n                        if (converted instanceof Interpolation) {\n                            var placeholders = assembleBoundTextPlaceholders(message);\n                            var params = placeholdersToParams(placeholders);\n                            i18nAttrArgs_1.push(literal(attr.name), _this.i18nTranslate(message, params));\n                            converted.expressions.forEach(function (expression) {\n                                hasBindings_1 = true;\n                                var binding = _this.convertExpressionBinding(implicit, expression);\n                                _this.updateInstruction(element.sourceSpan, Identifiers$1.i18nExp, [binding]);\n                            });\n                        }\n                    }\n                });\n                if (i18nAttrArgs_1.length) {\n                    var index = literal(this.allocateDataSlot());\n                    var args = this.constantPool.getConstLiteral(literalArr(i18nAttrArgs_1), true);\n                    this.creationInstruction(element.sourceSpan, Identifiers$1.i18nAttributes, [index, args]);\n                    if (hasBindings_1) {\n                        this.updateInstruction(element.sourceSpan, Identifiers$1.i18nApply, [index]);\n                    }\n                }\n            }\n            // The style bindings code is placed into two distinct blocks within the template function AOT\n            // code: creation and update. The creation code contains the `elementStyling` instructions\n            // which will apply the collected binding values to the element. `elementStyling` is\n            // designed to run inside of `elementStart` and `elementEnd`. The update instructions\n            // (things like `elementStyleProp`, `elementClassProp`, etc..) are applied later on in this\n            // file\n            this.processStylingInstruction(implicit, stylingBuilder.buildElementStylingInstruction(element.sourceSpan, this.constantPool), true);\n            // Generate Listeners (outputs)\n            element.outputs.forEach(function (outputAst) {\n                _this.creationInstruction(outputAst.sourceSpan, Identifiers$1.listener, _this.prepareListenerParameter(element.name, outputAst, elementIndex));\n            });\n        }\n        // the code here will collect all update-level styling instructions and add them to the\n        // update block of the template function AOT code. Instructions like `elementStyleProp`,\n        // `elementStylingMap`, `elementClassProp` and `elementStylingApply` are all generated\n        // and assign in the code below.\n        stylingBuilder.buildUpdateLevelInstructions(this._valueConverter).forEach(function (instruction) {\n            _this.processStylingInstruction(implicit, instruction, false);\n        });\n        // Generate element input bindings\n        allOtherInputs.forEach(function (input) {\n            var instruction = mapBindingToInstruction(input.type);\n            if (input.type === 4 /* Animation */) {\n                var value_1 = input.value.visit(_this._valueConverter);\n                // setProperty without a value doesn't make any sense\n                if (value_1.name || value_1.value) {\n                    var bindingName_1 = prepareSyntheticPropertyName(input.name);\n                    _this.allocateBindingSlots(value_1);\n                    _this.updateInstruction(input.sourceSpan, Identifiers$1.elementProperty, function () {\n                        return [\n                            literal(elementIndex), literal(bindingName_1),\n                            _this.convertPropertyBinding(implicit, value_1)\n                        ];\n                    });\n                }\n            }\n            else if (instruction) {\n                var params_2 = [];\n                var sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n                if (sanitizationRef)\n                    params_2.push(sanitizationRef);\n                // TODO(chuckj): runtime: security context\n                var value_2 = input.value.visit(_this._valueConverter);\n                _this.allocateBindingSlots(value_2);\n                _this.updateInstruction(input.sourceSpan, instruction, function () {\n                    return __spread([\n                        literal(elementIndex), literal(input.name),\n                        _this.convertPropertyBinding(implicit, value_2)\n                    ], params_2);\n                });\n            }\n            else {\n                _this._unsupported(\"binding type \" + input.type);\n            }\n        });\n        // Traverse element child nodes\n        visitAll$1(this, element.children);\n        if (!isI18nRootElement && this.i18n) {\n            this.i18n.appendElement(element.i18n, elementIndex, true);\n        }\n        if (!createSelfClosingInstruction) {\n            // Finish element construction mode.\n            var span = element.endSourceSpan || element.sourceSpan;\n            if (isI18nRootElement) {\n                this.i18nEnd(span, createSelfClosingI18nInstruction);\n            }\n            if (isNonBindableMode) {\n                this.creationInstruction(span, Identifiers$1.enableBindings);\n            }\n            this.creationInstruction(span, isNgContainer$$1 ? Identifiers$1.elementContainerEnd : Identifiers$1.elementEnd);\n        }\n    };\n    TemplateDefinitionBuilder.prototype.visitTemplate = function (template) {\n        var _this = this;\n        var templateIndex = this.allocateDataSlot();\n        if (this.i18n) {\n            this.i18n.appendTemplate(template.i18n, templateIndex);\n        }\n        var tagName = sanitizeIdentifier(template.tagName || '');\n        var contextName = (tagName ? this.contextName + '_' + tagName : '') + \"_\" + templateIndex;\n        var templateName = contextName + \"_Template\";\n        var parameters = [\n            literal(templateIndex),\n            variable(templateName),\n            literal(template.tagName),\n        ];\n        // find directives matching on a given <ng-template> node\n        this.matchDirectives('ng-template', template);\n        // prepare attributes parameter (including attributes used for directive matching)\n        var attrsExprs = [];\n        template.attributes.forEach(function (a) { attrsExprs.push(asLiteral(a.name), asLiteral(a.value)); });\n        attrsExprs.push.apply(attrsExprs, __spread(this.prepareSyntheticAndSelectOnlyAttrs(template.inputs, template.outputs)));\n        parameters.push(this.toAttrsParam(attrsExprs));\n        // local refs (ex.: <ng-template #foo>)\n        if (template.references && template.references.length) {\n            parameters.push(this.prepareRefsParameter(template.references));\n            parameters.push(importExpr(Identifiers$1.templateRefExtractor));\n        }\n        // handle property bindings e.g. p(1, 'ngForOf', ɵbind(ctx.items));\n        var context = variable(CONTEXT_NAME);\n        template.inputs.forEach(function (input) {\n            var value = input.value.visit(_this._valueConverter);\n            _this.allocateBindingSlots(value);\n            _this.updateInstruction(template.sourceSpan, Identifiers$1.elementProperty, function () {\n                return [\n                    literal(templateIndex), literal(input.name),\n                    _this.convertPropertyBinding(context, value)\n                ];\n            });\n        });\n        // Create the template function\n        var templateVisitor = new TemplateDefinitionBuilder(this.constantPool, this._bindingScope, this.level + 1, contextName, this.i18n, templateIndex, templateName, [], this.directiveMatcher, this.directives, this.pipeTypeByName, this.pipes, this._namespace, this.fileBasedI18nSuffix, this.i18nUseExternalIds);\n        // Nested templates must not be visited until after their parent templates have completed\n        // processing, so they are queued here until after the initial pass. Otherwise, we wouldn't\n        // be able to support bindings in nested templates to local refs that occur after the\n        // template definition. e.g. <div *ngIf=\"showing\">{{ foo }}</div>  <div #foo></div>\n        this._nestedTemplateFns.push(function () {\n            var _a;\n            var templateFunctionExpr = templateVisitor.buildTemplateFunction(template.children, template.variables, _this._ngContentSelectors.length + _this._ngContentSelectorsOffset, template.i18n);\n            _this.constantPool.statements.push(templateFunctionExpr.toDeclStmt(templateName, null));\n            if (templateVisitor._hasNgContent) {\n                _this._hasNgContent = true;\n                (_a = _this._ngContentSelectors).push.apply(_a, __spread(templateVisitor._ngContentSelectors));\n            }\n        });\n        // e.g. template(1, MyComp_Template_1)\n        this.creationInstruction(template.sourceSpan, Identifiers$1.templateCreate, function () {\n            parameters.splice(2, 0, literal(templateVisitor.getConstCount()), literal(templateVisitor.getVarCount()));\n            return trimTrailingNulls(parameters);\n        });\n        // Generate listeners for directive output\n        template.outputs.forEach(function (outputAst) {\n            _this.creationInstruction(outputAst.sourceSpan, Identifiers$1.listener, _this.prepareListenerParameter('ng_template', outputAst, templateIndex));\n        });\n    };\n    TemplateDefinitionBuilder.prototype.visitBoundText = function (text) {\n        var _this = this;\n        if (this.i18n) {\n            var value_3 = text.value.visit(this._valueConverter);\n            this.allocateBindingSlots(value_3);\n            if (value_3 instanceof Interpolation) {\n                this.i18n.appendBoundText(text.i18n);\n                this.i18nAppendBindings(value_3.expressions);\n            }\n            return;\n        }\n        var nodeIndex = this.allocateDataSlot();\n        this.creationInstruction(text.sourceSpan, Identifiers$1.text, [literal(nodeIndex)]);\n        var value = text.value.visit(this._valueConverter);\n        this.allocateBindingSlots(value);\n        this.updateInstruction(text.sourceSpan, Identifiers$1.textBinding, function () { return [literal(nodeIndex), _this.convertPropertyBinding(variable(CONTEXT_NAME), value)]; });\n    };\n    TemplateDefinitionBuilder.prototype.visitText = function (text) {\n        // when a text element is located within a translatable\n        // block, we exclude this text element from instructions set,\n        // since it will be captured in i18n content and processed at runtime\n        if (!this.i18n) {\n            this.creationInstruction(text.sourceSpan, Identifiers$1.text, [literal(this.allocateDataSlot()), literal(text.value)]);\n        }\n    };\n    TemplateDefinitionBuilder.prototype.visitIcu = function (icu) {\n        var initWasInvoked = false;\n        // if an ICU was created outside of i18n block, we still treat\n        // it as a translatable entity and invoke i18nStart and i18nEnd\n        // to generate i18n context and the necessary instructions\n        if (!this.i18n) {\n            initWasInvoked = true;\n            this.i18nStart(null, icu.i18n, true);\n        }\n        var i18n = this.i18n;\n        var vars = this.i18nBindProps(icu.vars);\n        var placeholders = this.i18nBindProps(icu.placeholders);\n        // output ICU directly and keep ICU reference in context\n        var message = icu.i18n;\n        var transformFn = function (raw) {\n            return instruction(null, Identifiers$1.i18nPostprocess, [raw, mapLiteral(vars, true)]);\n        };\n        // in case the whole i18n message is a single ICU - we do not need to\n        // create a separate top-level translation, we can use the root ref instead\n        // and make this ICU a top-level translation\n        if (isSingleI18nIcu(i18n.meta)) {\n            this.i18nTranslate(message, placeholders, i18n.ref, transformFn);\n        }\n        else {\n            // output ICU directly and keep ICU reference in context\n            var ref = this.i18nTranslate(message, placeholders, undefined, transformFn);\n            i18n.appendIcu(icuFromI18nMessage(message).name, ref);\n        }\n        if (initWasInvoked) {\n            this.i18nEnd(null, true);\n        }\n        return null;\n    };\n    TemplateDefinitionBuilder.prototype.allocateDataSlot = function () { return this._dataIndex++; };\n    TemplateDefinitionBuilder.prototype.getConstCount = function () { return this._dataIndex; };\n    TemplateDefinitionBuilder.prototype.getVarCount = function () { return this._pureFunctionSlots; };\n    TemplateDefinitionBuilder.prototype.bindingContext = function () { return \"\" + this._bindingContext++; };\n    // Bindings must only be resolved after all local refs have been visited, so all\n    // instructions are queued in callbacks that execute once the initial pass has completed.\n    // Otherwise, we wouldn't be able to support local refs that are defined after their\n    // bindings. e.g. {{ foo }} <div #foo></div>\n    TemplateDefinitionBuilder.prototype.instructionFn = function (fns, span, reference, paramsOrFn, prepend) {\n        if (prepend === void 0) { prepend = false; }\n        fns[prepend ? 'unshift' : 'push'](function () {\n            var params = Array.isArray(paramsOrFn) ? paramsOrFn : paramsOrFn();\n            return instruction(span, reference, params).toStmt();\n        });\n    };\n    TemplateDefinitionBuilder.prototype.processStylingInstruction = function (implicit, instruction, createMode) {\n        var _this = this;\n        if (instruction) {\n            var paramsFn = function () {\n                return instruction.buildParams(function (value) { return _this.convertPropertyBinding(implicit, value, true); });\n            };\n            if (createMode) {\n                this.creationInstruction(instruction.sourceSpan, instruction.reference, paramsFn);\n            }\n            else {\n                this.updateInstruction(instruction.sourceSpan, instruction.reference, paramsFn);\n            }\n        }\n    };\n    TemplateDefinitionBuilder.prototype.creationInstruction = function (span, reference, paramsOrFn, prepend) {\n        this.instructionFn(this._creationCodeFns, span, reference, paramsOrFn || [], prepend);\n    };\n    TemplateDefinitionBuilder.prototype.updateInstruction = function (span, reference, paramsOrFn) {\n        this.instructionFn(this._updateCodeFns, span, reference, paramsOrFn || []);\n    };\n    TemplateDefinitionBuilder.prototype.allocatePureFunctionSlots = function (numSlots) {\n        var originalSlots = this._pureFunctionSlots;\n        this._pureFunctionSlots += numSlots;\n        return originalSlots;\n    };\n    TemplateDefinitionBuilder.prototype.allocateBindingSlots = function (value) {\n        this._bindingSlots += value instanceof Interpolation ? value.expressions.length : 1;\n    };\n    TemplateDefinitionBuilder.prototype.convertExpressionBinding = function (implicit, value) {\n        var convertedPropertyBinding = convertPropertyBinding(this, implicit, value, this.bindingContext(), BindingForm.TrySimple);\n        var valExpr = convertedPropertyBinding.currValExpr;\n        return importExpr(Identifiers$1.bind).callFn([valExpr]);\n    };\n    TemplateDefinitionBuilder.prototype.convertPropertyBinding = function (implicit, value, skipBindFn) {\n        var _a;\n        var interpolationFn = value instanceof Interpolation ? interpolate : function () { return error('Unexpected interpolation'); };\n        var convertedPropertyBinding = convertPropertyBinding(this, implicit, value, this.bindingContext(), BindingForm.TrySimple, interpolationFn);\n        (_a = this._tempVariables).push.apply(_a, __spread(convertedPropertyBinding.stmts));\n        var valExpr = convertedPropertyBinding.currValExpr;\n        return value instanceof Interpolation || skipBindFn ? valExpr :\n            importExpr(Identifiers$1.bind).callFn([valExpr]);\n    };\n    TemplateDefinitionBuilder.prototype.matchDirectives = function (tagName, elOrTpl) {\n        var _this = this;\n        if (this.directiveMatcher) {\n            var selector = createCssSelector(tagName, getAttrsForDirectiveMatching(elOrTpl));\n            this.directiveMatcher.match(selector, function (cssSelector, staticType) { _this.directives.add(staticType); });\n        }\n    };\n    /**\n     * Prepares all attribute expression values for the `TAttributes` array.\n     *\n     * The purpose of this function is to properly construct an attributes array that\n     * is passed into the `elementStart` (or just `element`) functions. Because there\n     * are many different types of attributes, the array needs to be constructed in a\n     * special way so that `elementStart` can properly evaluate them.\n     *\n     * The format looks like this:\n     *\n     * ```\n     * attrs = [prop, value, prop2, value2,\n     *   CLASSES, class1, class2,\n     *   STYLES, style1, value1, style2, value2,\n     *   SELECT_ONLY, name1, name2, name2, ...]\n     * ```\n     */\n    TemplateDefinitionBuilder.prototype.prepareSyntheticAndSelectOnlyAttrs = function (inputs, outputs, styles) {\n        var attrExprs = [];\n        var nonSyntheticInputs = [];\n        var alreadySeen = new Set();\n        function isASTWithSource(ast) {\n            return ast instanceof ASTWithSource;\n        }\n        function isLiteralPrimitive(ast) {\n            return ast instanceof LiteralPrimitive;\n        }\n        function addAttrExpr(key, value) {\n            if (typeof key === 'string') {\n                if (!alreadySeen.has(key)) {\n                    attrExprs.push(literal(key));\n                    if (value !== undefined) {\n                        attrExprs.push(value);\n                    }\n                    alreadySeen.add(key);\n                }\n            }\n            else {\n                attrExprs.push(literal(key));\n            }\n        }\n        if (inputs.length) {\n            var EMPTY_STRING_EXPR_1 = asLiteral('');\n            inputs.forEach(function (input) {\n                if (input.type === 4 /* Animation */) {\n                    // @attributes are for Renderer2 animation @triggers, but this feature\n                    // may be supported differently in future versions of angular. However,\n                    // @triggers should always just be treated as regular attributes (it's up\n                    // to the renderer to detect and use them in a special way).\n                    var valueExp = input.value;\n                    if (isASTWithSource(valueExp)) {\n                        var literal$$1 = valueExp.ast;\n                        if (isLiteralPrimitive(literal$$1) && literal$$1.value === undefined) {\n                            addAttrExpr(prepareSyntheticPropertyName(input.name), EMPTY_STRING_EXPR_1);\n                        }\n                    }\n                }\n                else {\n                    nonSyntheticInputs.push(input);\n                }\n            });\n        }\n        // it's important that this occurs before SelectOnly because once `elementStart`\n        // comes across the SelectOnly marker then it will continue reading each value as\n        // as single property value cell by cell.\n        if (styles) {\n            styles.populateInitialStylingAttrs(attrExprs);\n        }\n        if (nonSyntheticInputs.length || outputs.length) {\n            addAttrExpr(3 /* SelectOnly */);\n            nonSyntheticInputs.forEach(function (i) { return addAttrExpr(i.name); });\n            outputs.forEach(function (o) {\n                var name = o.type === 1 /* Animation */ ? getSyntheticPropertyName(o.name) : o.name;\n                addAttrExpr(name);\n            });\n        }\n        return attrExprs;\n    };\n    TemplateDefinitionBuilder.prototype.toAttrsParam = function (attrsExprs) {\n        return attrsExprs.length > 0 ?\n            this.constantPool.getConstLiteral(literalArr(attrsExprs), true) :\n            TYPED_NULL_EXPR;\n    };\n    TemplateDefinitionBuilder.prototype.prepareRefsParameter = function (references) {\n        var _this = this;\n        if (!references || references.length === 0) {\n            return TYPED_NULL_EXPR;\n        }\n        var refsParam = flatten(references.map(function (reference) {\n            var slot = _this.allocateDataSlot();\n            // Generate the update temporary.\n            var variableName = _this._bindingScope.freshReferenceName();\n            var retrievalLevel = _this.level;\n            var lhs = variable(variableName);\n            _this._bindingScope.set(retrievalLevel, reference.name, lhs, 0 /* DEFAULT */, function (scope, relativeLevel) {\n                // e.g. nextContext(2);\n                var nextContextStmt = relativeLevel > 0 ? [generateNextContextExpr(relativeLevel).toStmt()] : [];\n                // e.g. const $foo$ = reference(1);\n                var refExpr = lhs.set(importExpr(Identifiers$1.reference).callFn([literal(slot)]));\n                return nextContextStmt.concat(refExpr.toConstDecl());\n            }, true);\n            return [reference.name, reference.value];\n        }));\n        return this.constantPool.getConstLiteral(asLiteral(refsParam), true);\n    };\n    TemplateDefinitionBuilder.prototype.prepareListenerParameter = function (tagName, outputAst, index) {\n        var _this = this;\n        var eventName = outputAst.name;\n        var bindingFnName;\n        if (outputAst.type === 1 /* Animation */) {\n            // synthetic @listener.foo values are treated the exact same as are standard listeners\n            bindingFnName = prepareSyntheticListenerFunctionName(eventName, outputAst.phase);\n            eventName = prepareSyntheticListenerName(eventName, outputAst.phase);\n        }\n        else {\n            bindingFnName = sanitizeIdentifier(eventName);\n        }\n        var tagNameSanitized = sanitizeIdentifier(tagName);\n        var functionName = this.templateName + \"_\" + tagNameSanitized + \"_\" + bindingFnName + \"_\" + index + \"_listener\";\n        return function () {\n            var listenerScope = _this._bindingScope.nestedScope(_this._bindingScope.bindingLevel);\n            var bindingExpr = convertActionBinding(listenerScope, variable(CONTEXT_NAME), outputAst.handler, 'b', function () { return error('Unexpected interpolation'); });\n            var statements = __spread(listenerScope.restoreViewStatement(), listenerScope.variableDeclarations(), bindingExpr.render3Stmts);\n            var handler = fn([new FnParam('$event', DYNAMIC_TYPE)], statements, INFERRED_TYPE, null, functionName);\n            return [literal(eventName), handler];\n        };\n    };\n    return TemplateDefinitionBuilder;\n}());\nvar ValueConverter = /** @class */ (function (_super) {\n    __extends(ValueConverter, _super);\n    function ValueConverter(constantPool, allocateSlot, allocatePureFunctionSlots, definePipe) {\n        var _this = _super.call(this) || this;\n        _this.constantPool = constantPool;\n        _this.allocateSlot = allocateSlot;\n        _this.allocatePureFunctionSlots = allocatePureFunctionSlots;\n        _this.definePipe = definePipe;\n        _this._pipeBindExprs = [];\n        return _this;\n    }\n    // AstMemoryEfficientTransformer\n    ValueConverter.prototype.visitPipe = function (pipe, context) {\n        // Allocate a slot to create the pipe\n        var slot = this.allocateSlot();\n        var slotPseudoLocal = \"PIPE:\" + slot;\n        // Allocate one slot for the result plus one slot per pipe argument\n        var pureFunctionSlot = this.allocatePureFunctionSlots(2 + pipe.args.length);\n        var target = new PropertyRead(pipe.span, new ImplicitReceiver(pipe.span), slotPseudoLocal);\n        var _a = pipeBindingCallInfo(pipe.args), identifier = _a.identifier, isVarLength = _a.isVarLength;\n        this.definePipe(pipe.name, slotPseudoLocal, slot, importExpr(identifier));\n        var args = __spread([pipe.exp], pipe.args);\n        var convertedArgs = isVarLength ? this.visitAll([new LiteralArray(pipe.span, args)]) : this.visitAll(args);\n        var pipeBindExpr = new FunctionCall(pipe.span, target, __spread([\n            new LiteralPrimitive(pipe.span, slot),\n            new LiteralPrimitive(pipe.span, pureFunctionSlot)\n        ], convertedArgs));\n        this._pipeBindExprs.push(pipeBindExpr);\n        return pipeBindExpr;\n    };\n    ValueConverter.prototype.updatePipeSlotOffsets = function (bindingSlots) {\n        this._pipeBindExprs.forEach(function (pipe) {\n            // update the slot offset arg (index 1) to account for binding slots\n            var slotOffset = pipe.args[1];\n            slotOffset.value += bindingSlots;\n        });\n    };\n    ValueConverter.prototype.visitLiteralArray = function (array, context) {\n        var _this = this;\n        return new BuiltinFunctionCall(array.span, this.visitAll(array.expressions), function (values) {\n            // If the literal has calculated (non-literal) elements transform it into\n            // calls to literal factories that compose the literal and will cache intermediate\n            // values. Otherwise, just return an literal array that contains the values.\n            var literal$$1 = literalArr(values);\n            return values.every(function (a) { return a.isConstant(); }) ?\n                _this.constantPool.getConstLiteral(literal$$1, true) :\n                getLiteralFactory(_this.constantPool, literal$$1, _this.allocatePureFunctionSlots);\n        });\n    };\n    ValueConverter.prototype.visitLiteralMap = function (map, context) {\n        var _this = this;\n        return new BuiltinFunctionCall(map.span, this.visitAll(map.values), function (values) {\n            // If the literal has calculated (non-literal) elements  transform it into\n            // calls to literal factories that compose the literal and will cache intermediate\n            // values. Otherwise, just return an literal array that contains the values.\n            var literal$$1 = literalMap(values.map(function (value, index) { return ({ key: map.keys[index].key, value: value, quoted: map.keys[index].quoted }); }));\n            return values.every(function (a) { return a.isConstant(); }) ?\n                _this.constantPool.getConstLiteral(literal$$1, true) :\n                getLiteralFactory(_this.constantPool, literal$$1, _this.allocatePureFunctionSlots);\n        });\n    };\n    return ValueConverter;\n}(AstMemoryEfficientTransformer));\n// Pipes always have at least one parameter, the value they operate on\nvar pipeBindingIdentifiers = [Identifiers$1.pipeBind1, Identifiers$1.pipeBind2, Identifiers$1.pipeBind3, Identifiers$1.pipeBind4];\nfunction pipeBindingCallInfo(args) {\n    var identifier = pipeBindingIdentifiers[args.length];\n    return {\n        identifier: identifier || Identifiers$1.pipeBindV,\n        isVarLength: !identifier,\n    };\n}\nvar pureFunctionIdentifiers = [\n    Identifiers$1.pureFunction0, Identifiers$1.pureFunction1, Identifiers$1.pureFunction2, Identifiers$1.pureFunction3, Identifiers$1.pureFunction4,\n    Identifiers$1.pureFunction5, Identifiers$1.pureFunction6, Identifiers$1.pureFunction7, Identifiers$1.pureFunction8\n];\nfunction pureFunctionCallInfo(args) {\n    var identifier = pureFunctionIdentifiers[args.length];\n    return {\n        identifier: identifier || Identifiers$1.pureFunctionV,\n        isVarLength: !identifier,\n    };\n}\nfunction instruction(span, reference, params) {\n    return importExpr(reference, null, span).callFn(params, span);\n}\n// e.g. x(2);\nfunction generateNextContextExpr(relativeLevelDiff) {\n    return importExpr(Identifiers$1.nextContext)\n        .callFn(relativeLevelDiff > 1 ? [literal(relativeLevelDiff)] : []);\n}\nfunction getLiteralFactory(constantPool, literal$$1, allocateSlots) {\n    var _a = constantPool.getLiteralFactory(literal$$1), literalFactory = _a.literalFactory, literalFactoryArguments = _a.literalFactoryArguments;\n    // Allocate 1 slot for the result plus 1 per argument\n    var startSlot = allocateSlots(1 + literalFactoryArguments.length);\n    literalFactoryArguments.length > 0 || error(\"Expected arguments to a literal factory function\");\n    var _b = pureFunctionCallInfo(literalFactoryArguments), identifier = _b.identifier, isVarLength = _b.isVarLength;\n    // Literal factories are pure functions that only need to be re-invoked when the parameters\n    // change.\n    var args = [\n        literal(startSlot),\n        literalFactory,\n    ];\n    if (isVarLength) {\n        args.push(literalArr(literalFactoryArguments));\n    }\n    else {\n        args.push.apply(args, __spread(literalFactoryArguments));\n    }\n    return importExpr(identifier).callFn(args);\n}\n/** The prefix used to get a shared context in BindingScope's map. */\nvar SHARED_CONTEXT_KEY = '$$shared_ctx$$';\nvar BindingScope = /** @class */ (function () {\n    function BindingScope(bindingLevel, parent) {\n        if (bindingLevel === void 0) { bindingLevel = 0; }\n        if (parent === void 0) { parent = null; }\n        this.bindingLevel = bindingLevel;\n        this.parent = parent;\n        /** Keeps a map from local variables to their BindingData. */\n        this.map = new Map();\n        this.referenceNameIndex = 0;\n        this.restoreViewVariable = null;\n    }\n    Object.defineProperty(BindingScope, \"ROOT_SCOPE\", {\n        get: function () {\n            if (!BindingScope._ROOT_SCOPE) {\n                BindingScope._ROOT_SCOPE = new BindingScope().set(0, '$event', variable('$event'));\n            }\n            return BindingScope._ROOT_SCOPE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BindingScope.prototype.get = function (name) {\n        var current = this;\n        while (current) {\n            var value = current.map.get(name);\n            if (value != null) {\n                if (current !== this) {\n                    // make a local copy and reset the `declare` state\n                    value = {\n                        retrievalLevel: value.retrievalLevel,\n                        lhs: value.lhs,\n                        declareLocalCallback: value.declareLocalCallback,\n                        declare: false,\n                        priority: value.priority,\n                        localRef: value.localRef\n                    };\n                    // Cache the value locally.\n                    this.map.set(name, value);\n                    // Possibly generate a shared context var\n                    this.maybeGenerateSharedContextVar(value);\n                    this.maybeRestoreView(value.retrievalLevel, value.localRef);\n                }\n                if (value.declareLocalCallback && !value.declare) {\n                    value.declare = true;\n                }\n                return value.lhs;\n            }\n            current = current.parent;\n        }\n        // If we get to this point, we are looking for a property on the top level component\n        // - If level === 0, we are on the top and don't need to re-declare `ctx`.\n        // - If level > 0, we are in an embedded view. We need to retrieve the name of the\n        // local var we used to store the component context, e.g. const $comp$ = x();\n        return this.bindingLevel === 0 ? null : this.getComponentProperty(name);\n    };\n    /**\n     * Create a local variable for later reference.\n     *\n     * @param retrievalLevel The level from which this value can be retrieved\n     * @param name Name of the variable.\n     * @param lhs AST representing the left hand side of the `let lhs = rhs;`.\n     * @param priority The sorting priority of this var\n     * @param declareLocalCallback The callback to invoke when declaring this local var\n     * @param localRef Whether or not this is a local ref\n     */\n    BindingScope.prototype.set = function (retrievalLevel, name, lhs, priority, declareLocalCallback, localRef) {\n        if (priority === void 0) { priority = 0 /* DEFAULT */; }\n        !this.map.has(name) ||\n            error(\"The name \" + name + \" is already defined in scope to be \" + this.map.get(name));\n        this.map.set(name, {\n            retrievalLevel: retrievalLevel,\n            lhs: lhs,\n            declare: false,\n            declareLocalCallback: declareLocalCallback,\n            priority: priority,\n            localRef: localRef || false\n        });\n        return this;\n    };\n    BindingScope.prototype.getLocal = function (name) { return this.get(name); };\n    BindingScope.prototype.nestedScope = function (level) {\n        var newScope = new BindingScope(level, this);\n        if (level > 0)\n            newScope.generateSharedContextVar(0);\n        return newScope;\n    };\n    BindingScope.prototype.getSharedContextName = function (retrievalLevel) {\n        var sharedCtxObj = this.map.get(SHARED_CONTEXT_KEY + retrievalLevel);\n        return sharedCtxObj && sharedCtxObj.declare ? sharedCtxObj.lhs : null;\n    };\n    BindingScope.prototype.maybeGenerateSharedContextVar = function (value) {\n        if (value.priority === 1 /* CONTEXT */) {\n            var sharedCtxObj = this.map.get(SHARED_CONTEXT_KEY + value.retrievalLevel);\n            if (sharedCtxObj) {\n                sharedCtxObj.declare = true;\n            }\n            else {\n                this.generateSharedContextVar(value.retrievalLevel);\n            }\n        }\n    };\n    BindingScope.prototype.generateSharedContextVar = function (retrievalLevel) {\n        var lhs = variable(CONTEXT_NAME + this.freshReferenceName());\n        this.map.set(SHARED_CONTEXT_KEY + retrievalLevel, {\n            retrievalLevel: retrievalLevel,\n            lhs: lhs,\n            declareLocalCallback: function (scope, relativeLevel) {\n                // const ctx_r0 = nextContext(2);\n                return [lhs.set(generateNextContextExpr(relativeLevel)).toConstDecl()];\n            },\n            declare: false,\n            priority: 2 /* SHARED_CONTEXT */,\n            localRef: false\n        });\n    };\n    BindingScope.prototype.getComponentProperty = function (name) {\n        var componentValue = this.map.get(SHARED_CONTEXT_KEY + 0);\n        componentValue.declare = true;\n        this.maybeRestoreView(0, false);\n        return componentValue.lhs.prop(name);\n    };\n    BindingScope.prototype.maybeRestoreView = function (retrievalLevel, localRefLookup) {\n        // We want to restore the current view in listener fns if:\n        // 1 - we are accessing a value in a parent view, which requires walking the view tree rather\n        // than using the ctx arg. In this case, the retrieval and binding level will be different.\n        // 2 - we are looking up a local ref, which requires restoring the view where the local\n        // ref is stored\n        if (this.isListenerScope() && (retrievalLevel < this.bindingLevel || localRefLookup)) {\n            if (!this.parent.restoreViewVariable) {\n                // parent saves variable to generate a shared `const $s$ = getCurrentView();` instruction\n                this.parent.restoreViewVariable = variable(this.parent.freshReferenceName());\n            }\n            this.restoreViewVariable = this.parent.restoreViewVariable;\n        }\n    };\n    BindingScope.prototype.restoreViewStatement = function () {\n        // restoreView($state$);\n        return this.restoreViewVariable ?\n            [instruction(null, Identifiers$1.restoreView, [this.restoreViewVariable]).toStmt()] :\n            [];\n    };\n    BindingScope.prototype.viewSnapshotStatements = function () {\n        // const $state$ = getCurrentView();\n        var getCurrentViewInstruction = instruction(null, Identifiers$1.getCurrentView, []);\n        return this.restoreViewVariable ?\n            [this.restoreViewVariable.set(getCurrentViewInstruction).toConstDecl()] :\n            [];\n    };\n    BindingScope.prototype.isListenerScope = function () { return this.parent && this.parent.bindingLevel === this.bindingLevel; };\n    BindingScope.prototype.variableDeclarations = function () {\n        var _this = this;\n        var currentContextLevel = 0;\n        return Array.from(this.map.values())\n            .filter(function (value) { return value.declare; })\n            .sort(function (a, b) { return b.retrievalLevel - a.retrievalLevel || b.priority - a.priority; })\n            .reduce(function (stmts, value) {\n            var levelDiff = _this.bindingLevel - value.retrievalLevel;\n            var currStmts = value.declareLocalCallback(_this, levelDiff - currentContextLevel);\n            currentContextLevel = levelDiff;\n            return stmts.concat(currStmts);\n        }, []);\n    };\n    BindingScope.prototype.freshReferenceName = function () {\n        var current = this;\n        // Find the top scope as it maintains the global reference count\n        while (current.parent)\n            current = current.parent;\n        var ref = \"\" + REFERENCE_PREFIX + current.referenceNameIndex++;\n        return ref;\n    };\n    return BindingScope;\n}());\n/**\n * Creates a `CssSelector` given a tag name and a map of attributes\n */\nfunction createCssSelector(tag, attributes) {\n    var cssSelector = new CssSelector();\n    cssSelector.setElement(tag);\n    Object.getOwnPropertyNames(attributes).forEach(function (name) {\n        var value = attributes[name];\n        cssSelector.addAttribute(name, value);\n        if (name.toLowerCase() === 'class') {\n            var classes = value.trim().split(/\\s+/);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    });\n    return cssSelector;\n}\nfunction interpolate(args) {\n    args = args.slice(1); // Ignore the length prefix added for render2\n    switch (args.length) {\n        case 3:\n            return importExpr(Identifiers$1.interpolation1).callFn(args);\n        case 5:\n            return importExpr(Identifiers$1.interpolation2).callFn(args);\n        case 7:\n            return importExpr(Identifiers$1.interpolation3).callFn(args);\n        case 9:\n            return importExpr(Identifiers$1.interpolation4).callFn(args);\n        case 11:\n            return importExpr(Identifiers$1.interpolation5).callFn(args);\n        case 13:\n            return importExpr(Identifiers$1.interpolation6).callFn(args);\n        case 15:\n            return importExpr(Identifiers$1.interpolation7).callFn(args);\n        case 17:\n            return importExpr(Identifiers$1.interpolation8).callFn(args);\n    }\n    (args.length >= 19 && args.length % 2 == 1) ||\n        error(\"Invalid interpolation argument length \" + args.length);\n    return importExpr(Identifiers$1.interpolationV).callFn([literalArr(args)]);\n}\n/**\n * Parse a template into render3 `Node`s and additional metadata, with no other dependencies.\n *\n * @param template text of the template to parse\n * @param templateUrl URL to use for source mapping of the parsed template\n */\nfunction parseTemplate(template, templateUrl, options) {\n    if (options === void 0) { options = {}; }\n    var interpolationConfig = options.interpolationConfig, preserveWhitespaces = options.preserveWhitespaces;\n    var bindingParser = makeBindingParser(interpolationConfig);\n    var htmlParser = new HtmlParser();\n    var parseResult = htmlParser.parse(template, templateUrl, true, interpolationConfig);\n    if (parseResult.errors && parseResult.errors.length > 0) {\n        return { errors: parseResult.errors, nodes: [] };\n    }\n    var rootNodes = parseResult.rootNodes;\n    // process i18n meta information (scan attributes, generate ids)\n    // before we run whitespace removal process, because existing i18n\n    // extraction process (ng xi18n) relies on a raw content to generate\n    // message ids\n    rootNodes =\n        visitAll(new I18nMetaVisitor(interpolationConfig, !preserveWhitespaces), rootNodes);\n    if (!preserveWhitespaces) {\n        rootNodes = visitAll(new WhitespaceVisitor(), rootNodes);\n        // run i18n meta visitor again in case we remove whitespaces, because\n        // that might affect generated i18n message content. During this pass\n        // i18n IDs generated at the first pass will be preserved, so we can mimic\n        // existing extraction process (ng xi18n)\n        rootNodes = visitAll(new I18nMetaVisitor(interpolationConfig, /* keepI18nAttrs */ false), rootNodes);\n    }\n    var _a = htmlAstToRender3Ast(rootNodes, bindingParser), nodes = _a.nodes, errors = _a.errors;\n    if (errors && errors.length > 0) {\n        return { errors: errors, nodes: [] };\n    }\n    return { nodes: nodes };\n}\n/**\n * Construct a `BindingParser` with a default configuration.\n */\nfunction makeBindingParser(interpolationConfig) {\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new BindingParser(new Parser(new Lexer()), interpolationConfig, new DomElementSchemaRegistry(), null, []);\n}\nfunction resolveSanitizationFn(input, context) {\n    switch (context) {\n        case SecurityContext.HTML:\n            return importExpr(Identifiers$1.sanitizeHtml);\n        case SecurityContext.SCRIPT:\n            return importExpr(Identifiers$1.sanitizeScript);\n        case SecurityContext.STYLE:\n            // the compiler does not fill in an instruction for [style.prop?] binding\n            // values because the style algorithm knows internally what props are subject\n            // to sanitization (only [attr.style] values are explicitly sanitized)\n            return input.type === 1 /* Attribute */ ? importExpr(Identifiers$1.sanitizeStyle) : null;\n        case SecurityContext.URL:\n            return importExpr(Identifiers$1.sanitizeUrl);\n        case SecurityContext.RESOURCE_URL:\n            return importExpr(Identifiers$1.sanitizeResourceUrl);\n        default:\n            return null;\n    }\n}\nfunction isSingleElementTemplate(children) {\n    return children.length === 1 && children[0] instanceof Element$1;\n}\nfunction isTextNode(node) {\n    return node instanceof Text$3 || node instanceof BoundText || node instanceof Icu$1;\n}\nfunction hasTextChildrenOnly(children) {\n    return children.every(isTextNode);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_ARRAY = [];\n// This regex matches any binding names that contain the \"attr.\" prefix, e.g. \"attr.required\"\n// If there is a match, the first matching group will contain the attribute name to bind.\nvar ATTR_REGEX = /attr\\.([^\\]]+)/;\nfunction getStylingPrefix(propName) {\n    return propName.substring(0, 5).toLowerCase();\n}\nfunction baseDirectiveFields(meta, constantPool, bindingParser) {\n    var definitionMap = new DefinitionMap();\n    // e.g. `type: MyDirective`\n    definitionMap.set('type', meta.type);\n    // e.g. `selectors: [['', 'someDir', '']]`\n    definitionMap.set('selectors', createDirectiveSelector(meta.selector));\n    // e.g. `factory: () => new MyApp(directiveInject(ElementRef))`\n    var result = compileFactoryFunction({\n        name: meta.name,\n        type: meta.type,\n        deps: meta.deps,\n        injectFn: Identifiers$1.directiveInject,\n    });\n    definitionMap.set('factory', result.factory);\n    definitionMap.set('contentQueries', createContentQueriesFunction(meta, constantPool));\n    definitionMap.set('contentQueriesRefresh', createContentQueriesRefreshFunction(meta));\n    // Initialize hostVarsCount to number of bound host properties (interpolations illegal),\n    // except 'style' and 'class' properties, since they should *not* allocate host var slots\n    var hostVarsCount = Object.keys(meta.host.properties)\n        .filter(function (name) {\n        var prefix = getStylingPrefix(name);\n        return prefix !== 'style' && prefix !== 'class';\n    })\n        .length;\n    var elVarExp = variable('elIndex');\n    var contextVarExp = variable(CONTEXT_NAME);\n    var styleBuilder = new StylingBuilder(elVarExp, contextVarExp);\n    var allOtherAttributes = {};\n    var attrNames = Object.getOwnPropertyNames(meta.host.attributes);\n    for (var i = 0; i < attrNames.length; i++) {\n        var attr = attrNames[i];\n        var value = meta.host.attributes[attr];\n        switch (attr) {\n            // style attributes are handled in the styling context\n            case 'style':\n                styleBuilder.registerStyleAttr(value);\n                break;\n            // class attributes are handled in the styling context\n            case 'class':\n                styleBuilder.registerClassAttr(value);\n                break;\n            default:\n                allOtherAttributes[attr] = value;\n                break;\n        }\n    }\n    // e.g. `attributes: ['role', 'listbox']`\n    definitionMap.set('attributes', createHostAttributesArray(allOtherAttributes));\n    // e.g. `hostBindings: (rf, ctx, elIndex) => { ... }\n    definitionMap.set('hostBindings', createHostBindingsFunction(meta, elVarExp, contextVarExp, styleBuilder, bindingParser, constantPool, hostVarsCount));\n    // e.g 'inputs: {a: 'a'}`\n    definitionMap.set('inputs', conditionallyCreateMapObjectLiteral(meta.inputs, true));\n    // e.g 'outputs: {a: 'a'}`\n    definitionMap.set('outputs', conditionallyCreateMapObjectLiteral(meta.outputs));\n    if (meta.exportAs !== null) {\n        definitionMap.set('exportAs', literal(meta.exportAs));\n    }\n    return { definitionMap: definitionMap, statements: result.statements };\n}\n/**\n * Add features to the definition map.\n */\nfunction addFeatures(definitionMap, meta) {\n    // e.g. `features: [NgOnChangesFeature]`\n    var features = [];\n    var providers = meta.providers;\n    var viewProviders = meta.viewProviders;\n    if (providers || viewProviders) {\n        var args = [providers || new LiteralArrayExpr([])];\n        if (viewProviders) {\n            args.push(viewProviders);\n        }\n        features.push(importExpr(Identifiers$1.ProvidersFeature).callFn(args));\n    }\n    if (meta.usesInheritance) {\n        features.push(importExpr(Identifiers$1.InheritDefinitionFeature));\n    }\n    if (meta.lifecycle.usesOnChanges) {\n        features.push(importExpr(Identifiers$1.NgOnChangesFeature));\n    }\n    if (features.length) {\n        definitionMap.set('features', literalArr(features));\n    }\n}\n/**\n * Compile a directive for the render3 runtime as defined by the `R3DirectiveMetadata`.\n */\nfunction compileDirectiveFromMetadata(meta, constantPool, bindingParser) {\n    var _a = baseDirectiveFields(meta, constantPool, bindingParser), definitionMap = _a.definitionMap, statements = _a.statements;\n    addFeatures(definitionMap, meta);\n    var expression = importExpr(Identifiers$1.defineDirective).callFn([definitionMap.toLiteralMap()]);\n    // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n    // string literal, which must be on one line.\n    var selectorForType = (meta.selector || '').replace(/\\n/g, '');\n    var type = createTypeForDef(meta, Identifiers$1.DirectiveDefWithMeta);\n    return { expression: expression, type: type, statements: statements };\n}\n/**\n * Compile a base definition for the render3 runtime as defined by {@link R3BaseRefMetadata}\n * @param meta the metadata used for compilation.\n */\nfunction compileBaseDefFromMetadata(meta) {\n    var definitionMap = new DefinitionMap();\n    if (meta.inputs) {\n        var inputs_1 = meta.inputs;\n        var inputsMap = Object.keys(inputs_1).map(function (key) {\n            var v = inputs_1[key];\n            var value = Array.isArray(v) ? literalArr(v.map(function (vx) { return literal(vx); })) : literal(v);\n            return { key: key, value: value, quoted: false };\n        });\n        definitionMap.set('inputs', literalMap(inputsMap));\n    }\n    if (meta.outputs) {\n        var outputs_1 = meta.outputs;\n        var outputsMap = Object.keys(outputs_1).map(function (key) {\n            var value = literal(outputs_1[key]);\n            return { key: key, value: value, quoted: false };\n        });\n        definitionMap.set('outputs', literalMap(outputsMap));\n    }\n    var expression = importExpr(Identifiers$1.defineBase).callFn([definitionMap.toLiteralMap()]);\n    var type = new ExpressionType(importExpr(Identifiers$1.BaseDef));\n    return { expression: expression, type: type };\n}\n/**\n * Compile a component for the render3 runtime as defined by the `R3ComponentMetadata`.\n */\nfunction compileComponentFromMetadata(meta, constantPool, bindingParser) {\n    var e_1, _a;\n    var _b = baseDirectiveFields(meta, constantPool, bindingParser), definitionMap = _b.definitionMap, statements = _b.statements;\n    addFeatures(definitionMap, meta);\n    var selector = meta.selector && CssSelector.parse(meta.selector);\n    var firstSelector = selector && selector[0];\n    // e.g. `attr: [\"class\", \".my.app\"]`\n    // This is optional an only included if the first selector of a component specifies attributes.\n    if (firstSelector) {\n        var selectorAttributes = firstSelector.getAttrs();\n        if (selectorAttributes.length) {\n            definitionMap.set('attrs', constantPool.getConstLiteral(literalArr(selectorAttributes.map(function (value) { return value != null ? literal(value) : literal(undefined); })), \n            /* forceShared */ true));\n        }\n    }\n    // Generate the CSS matcher that recognize directive\n    var directiveMatcher = null;\n    if (meta.directives.length > 0) {\n        var matcher = new SelectorMatcher();\n        try {\n            for (var _c = __values(meta.directives), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = _d.value, selector_1 = _e.selector, expression_1 = _e.expression;\n                matcher.addSelectables(CssSelector.parse(selector_1), expression_1);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        directiveMatcher = matcher;\n    }\n    if (meta.viewQueries.length) {\n        definitionMap.set('viewQuery', createViewQueriesFunction(meta, constantPool));\n    }\n    // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n    var templateTypeName = meta.name;\n    var templateName = templateTypeName ? templateTypeName + \"_Template\" : null;\n    var directivesUsed = new Set();\n    var pipesUsed = new Set();\n    var changeDetection = meta.changeDetection;\n    var template = meta.template;\n    var templateBuilder = new TemplateDefinitionBuilder(constantPool, BindingScope.ROOT_SCOPE, 0, templateTypeName, null, null, templateName, meta.viewQueries, directiveMatcher, directivesUsed, meta.pipes, pipesUsed, Identifiers$1.namespaceHTML, meta.relativeContextFilePath, meta.i18nUseExternalIds);\n    var templateFunctionExpression = templateBuilder.buildTemplateFunction(template.nodes, []);\n    // e.g. `consts: 2`\n    definitionMap.set('consts', literal(templateBuilder.getConstCount()));\n    // e.g. `vars: 2`\n    definitionMap.set('vars', literal(templateBuilder.getVarCount()));\n    definitionMap.set('template', templateFunctionExpression);\n    // e.g. `directives: [MyDirective]`\n    if (directivesUsed.size) {\n        var directivesExpr = literalArr(Array.from(directivesUsed));\n        if (meta.wrapDirectivesAndPipesInClosure) {\n            directivesExpr = fn([], [new ReturnStatement(directivesExpr)]);\n        }\n        definitionMap.set('directives', directivesExpr);\n    }\n    // e.g. `pipes: [MyPipe]`\n    if (pipesUsed.size) {\n        var pipesExpr = literalArr(Array.from(pipesUsed));\n        if (meta.wrapDirectivesAndPipesInClosure) {\n            pipesExpr = fn([], [new ReturnStatement(pipesExpr)]);\n        }\n        definitionMap.set('pipes', pipesExpr);\n    }\n    if (meta.encapsulation === null) {\n        meta.encapsulation = ViewEncapsulation.Emulated;\n    }\n    // e.g. `styles: [str1, str2]`\n    if (meta.styles && meta.styles.length) {\n        var styleValues = meta.encapsulation == ViewEncapsulation.Emulated ?\n            compileStyles(meta.styles, CONTENT_ATTR, HOST_ATTR) :\n            meta.styles;\n        var strings = styleValues.map(function (str) { return literal(str); });\n        definitionMap.set('styles', literalArr(strings));\n    }\n    else if (meta.encapsulation === ViewEncapsulation.Emulated) {\n        // If there is no style, don't generate css selectors on elements\n        meta.encapsulation = ViewEncapsulation.None;\n    }\n    // Only set view encapsulation if it's not the default value\n    if (meta.encapsulation !== ViewEncapsulation.Emulated) {\n        definitionMap.set('encapsulation', literal(meta.encapsulation));\n    }\n    // e.g. `animation: [trigger('123', [])]`\n    if (meta.animations !== null) {\n        definitionMap.set('data', literalMap([{ key: 'animation', value: meta.animations, quoted: false }]));\n    }\n    // Only set the change detection flag if it's defined and it's not the default.\n    if (changeDetection != null && changeDetection !== ChangeDetectionStrategy.Default) {\n        definitionMap.set('changeDetection', literal(changeDetection));\n    }\n    // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n    // string literal, which must be on one line.\n    var selectorForType = (meta.selector || '').replace(/\\n/g, '');\n    var expression = importExpr(Identifiers$1.defineComponent).callFn([definitionMap.toLiteralMap()]);\n    var type = createTypeForDef(meta, Identifiers$1.ComponentDefWithMeta);\n    return { expression: expression, type: type, statements: statements };\n}\n/**\n * A wrapper around `compileDirective` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3DirectiveMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n */\nfunction compileDirectiveFromRender2(outputCtx, directive, reflector, bindingParser) {\n    var name = identifierName(directive.type);\n    name || error(\"Cannot resolver the name of \" + directive.type);\n    var definitionField = outputCtx.constantPool.propertyNameOf(1 /* Directive */);\n    var meta = directiveMetadataFromGlobalMetadata(directive, outputCtx, reflector);\n    var res = compileDirectiveFromMetadata(meta, outputCtx.constantPool, bindingParser);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new ClassStmt(name, null, [new ClassField(definitionField, INFERRED_TYPE, [StmtModifier.Static], res.expression)], [], new ClassMethod(null, [], []), []));\n}\n/**\n * A wrapper around `compileComponent` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3ComponentMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n */\nfunction compileComponentFromRender2(outputCtx, component, render3Ast, reflector, bindingParser, directiveTypeBySel, pipeTypeByName) {\n    var name = identifierName(component.type);\n    name || error(\"Cannot resolver the name of \" + component.type);\n    var definitionField = outputCtx.constantPool.propertyNameOf(2 /* Component */);\n    var summary = component.toSummary();\n    // Compute the R3ComponentMetadata from the CompileDirectiveMetadata\n    var meta = __assign({}, directiveMetadataFromGlobalMetadata(component, outputCtx, reflector), { selector: component.selector, template: { nodes: render3Ast.nodes }, directives: [], pipes: typeMapToExpressionMap(pipeTypeByName, outputCtx), viewQueries: queriesFromGlobalMetadata(component.viewQueries, outputCtx), wrapDirectivesAndPipesInClosure: false, styles: (summary.template && summary.template.styles) || EMPTY_ARRAY, encapsulation: (summary.template && summary.template.encapsulation) || ViewEncapsulation.Emulated, interpolation: DEFAULT_INTERPOLATION_CONFIG, animations: null, viewProviders: component.viewProviders.length > 0 ? new WrappedNodeExpr(component.viewProviders) : null, relativeContextFilePath: '', i18nUseExternalIds: true });\n    var res = compileComponentFromMetadata(meta, outputCtx.constantPool, bindingParser);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new ClassStmt(name, null, [new ClassField(definitionField, INFERRED_TYPE, [StmtModifier.Static], res.expression)], [], new ClassMethod(null, [], []), []));\n}\n/**\n * Compute `R3DirectiveMetadata` given `CompileDirectiveMetadata` and a `CompileReflector`.\n */\nfunction directiveMetadataFromGlobalMetadata(directive, outputCtx, reflector) {\n    var summary = directive.toSummary();\n    var name = identifierName(directive.type);\n    name || error(\"Cannot resolver the name of \" + directive.type);\n    return {\n        name: name,\n        type: outputCtx.importExpr(directive.type.reference),\n        typeArgumentCount: 0,\n        typeSourceSpan: typeSourceSpan(directive.isComponent ? 'Component' : 'Directive', directive.type),\n        selector: directive.selector,\n        deps: dependenciesFromGlobalMetadata(directive.type, outputCtx, reflector),\n        queries: queriesFromGlobalMetadata(directive.queries, outputCtx),\n        lifecycle: {\n            usesOnChanges: directive.type.lifecycleHooks.some(function (lifecycle) { return lifecycle == LifecycleHooks.OnChanges; }),\n        },\n        host: {\n            attributes: directive.hostAttributes,\n            listeners: summary.hostListeners,\n            properties: summary.hostProperties,\n        },\n        inputs: directive.inputs,\n        outputs: directive.outputs,\n        usesInheritance: false,\n        exportAs: null,\n        providers: directive.providers.length > 0 ? new WrappedNodeExpr(directive.providers) : null\n    };\n}\n/**\n * Convert `CompileQueryMetadata` into `R3QueryMetadata`.\n */\nfunction queriesFromGlobalMetadata(queries, outputCtx) {\n    return queries.map(function (query) {\n        var read = null;\n        if (query.read && query.read.identifier) {\n            read = outputCtx.importExpr(query.read.identifier.reference);\n        }\n        return {\n            propertyName: query.propertyName,\n            first: query.first,\n            predicate: selectorsFromGlobalMetadata(query.selectors, outputCtx),\n            descendants: query.descendants, read: read,\n        };\n    });\n}\n/**\n * Convert `CompileTokenMetadata` for query selectors into either an expression for a predicate\n * type, or a list of string predicates.\n */\nfunction selectorsFromGlobalMetadata(selectors, outputCtx) {\n    if (selectors.length > 1 || (selectors.length == 1 && selectors[0].value)) {\n        var selectorStrings = selectors.map(function (value) { return value.value; });\n        selectorStrings.some(function (value) { return !value; }) &&\n            error('Found a type among the string selectors expected');\n        return outputCtx.constantPool.getConstLiteral(literalArr(selectorStrings.map(function (value) { return literal(value); })));\n    }\n    if (selectors.length == 1) {\n        var first = selectors[0];\n        if (first.identifier) {\n            return outputCtx.importExpr(first.identifier.reference);\n        }\n    }\n    error('Unexpected query form');\n    return NULL_EXPR;\n}\nfunction createQueryDefinition(query, constantPool, idx) {\n    var predicate = getQueryPredicate(query, constantPool);\n    // e.g. r3.query(null, somePredicate, false) or r3.query(0, ['div'], false)\n    var parameters = [\n        literal(idx, INFERRED_TYPE),\n        predicate,\n        literal(query.descendants),\n    ];\n    if (query.read) {\n        parameters.push(query.read);\n    }\n    return importExpr(Identifiers$1.query).callFn(parameters);\n}\n// Turn a directive selector into an R3-compatible selector for directive def\nfunction createDirectiveSelector(selector) {\n    return asLiteral(parseSelectorToR3Selector(selector));\n}\nfunction createHostAttributesArray(attributes) {\n    var e_2, _a;\n    var values = [];\n    try {\n        for (var _b = __values(Object.getOwnPropertyNames(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var key = _c.value;\n            var value = attributes[key];\n            values.push(literal(key), literal(value));\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    if (values.length > 0) {\n        return literalArr(values);\n    }\n    return null;\n}\n// Return a contentQueries function or null if one is not necessary.\nfunction createContentQueriesFunction(meta, constantPool) {\n    if (meta.queries.length) {\n        var statements = meta.queries.map(function (query) {\n            var queryDefinition = createQueryDefinition(query, constantPool, null);\n            return importExpr(Identifiers$1.registerContentQuery)\n                .callFn([queryDefinition, variable('dirIndex')])\n                .toStmt();\n        });\n        var typeName = meta.name;\n        var parameters = [new FnParam('dirIndex', NUMBER_TYPE)];\n        return fn(parameters, statements, INFERRED_TYPE, null, typeName ? typeName + \"_ContentQueries\" : null);\n    }\n    return null;\n}\n// Return a contentQueriesRefresh function or null if one is not necessary.\nfunction createContentQueriesRefreshFunction(meta) {\n    if (meta.queries.length > 0) {\n        var statements_1 = [];\n        var typeName = meta.name;\n        var parameters = [\n            new FnParam('dirIndex', NUMBER_TYPE),\n            new FnParam('queryStartIndex', NUMBER_TYPE),\n        ];\n        var directiveInstanceVar_1 = variable('instance');\n        // var $tmp$: any;\n        var temporary_1 = temporaryAllocator(statements_1, TEMPORARY_NAME);\n        // const $instance$ = $r3$.ɵload(dirIndex);\n        statements_1.push(directiveInstanceVar_1.set(importExpr(Identifiers$1.load).callFn([variable('dirIndex')]))\n            .toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n        meta.queries.forEach(function (query, idx) {\n            var loadQLArg = variable('queryStartIndex');\n            var getQueryList = importExpr(Identifiers$1.loadQueryList).callFn([\n                idx > 0 ? loadQLArg.plus(literal(idx)) : loadQLArg\n            ]);\n            var assignToTemporary = temporary_1().set(getQueryList);\n            var callQueryRefresh = importExpr(Identifiers$1.queryRefresh).callFn([assignToTemporary]);\n            var updateDirective = directiveInstanceVar_1.prop(query.propertyName)\n                .set(query.first ? temporary_1().prop('first') : temporary_1());\n            var refreshQueryAndUpdateDirective = callQueryRefresh.and(updateDirective);\n            statements_1.push(refreshQueryAndUpdateDirective.toStmt());\n        });\n        return fn(parameters, statements_1, INFERRED_TYPE, null, typeName ? typeName + \"_ContentQueriesRefresh\" : null);\n    }\n    return null;\n}\nfunction stringAsType(str) {\n    return expressionType(literal(str));\n}\nfunction stringMapAsType(map) {\n    var mapValues = Object.keys(map).map(function (key) {\n        var value = Array.isArray(map[key]) ? map[key][0] : map[key];\n        return {\n            key: key,\n            value: literal(value),\n            quoted: true,\n        };\n    });\n    return expressionType(literalMap(mapValues));\n}\nfunction stringArrayAsType(arr) {\n    return arr.length > 0 ? expressionType(literalArr(arr.map(function (value) { return literal(value); }))) :\n        NONE_TYPE;\n}\nfunction createTypeForDef(meta, typeBase) {\n    // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n    // string literal, which must be on one line.\n    var selectorForType = (meta.selector || '').replace(/\\n/g, '');\n    return expressionType(importExpr(typeBase, [\n        typeWithParameters(meta.type, meta.typeArgumentCount),\n        stringAsType(selectorForType),\n        meta.exportAs !== null ? stringAsType(meta.exportAs) : NONE_TYPE,\n        stringMapAsType(meta.inputs),\n        stringMapAsType(meta.outputs),\n        stringArrayAsType(meta.queries.map(function (q) { return q.propertyName; })),\n    ]));\n}\n// Define and update any view queries\nfunction createViewQueriesFunction(meta, constantPool) {\n    var createStatements = [];\n    var updateStatements = [];\n    var tempAllocator = temporaryAllocator(updateStatements, TEMPORARY_NAME);\n    for (var i = 0; i < meta.viewQueries.length; i++) {\n        var query = meta.viewQueries[i];\n        // creation, e.g. r3.Q(0, somePredicate, true);\n        var queryDefinition = createQueryDefinition(query, constantPool, i);\n        createStatements.push(queryDefinition.toStmt());\n        // update, e.g. (r3.qR(tmp = r3.ɵload(0)) && (ctx.someDir = tmp));\n        var temporary = tempAllocator();\n        var getQueryList = importExpr(Identifiers$1.load).callFn([literal(i)]);\n        var refresh = importExpr(Identifiers$1.queryRefresh).callFn([temporary.set(getQueryList)]);\n        var updateDirective = variable(CONTEXT_NAME)\n            .prop(query.propertyName)\n            .set(query.first ? temporary.prop('first') : temporary);\n        updateStatements.push(refresh.and(updateDirective).toStmt());\n    }\n    var viewQueryFnName = meta.name ? meta.name + \"_Query\" : null;\n    return fn([new FnParam(RENDER_FLAGS, NUMBER_TYPE), new FnParam(CONTEXT_NAME, null)], [\n        renderFlagCheckIfStmt(1 /* Create */, createStatements),\n        renderFlagCheckIfStmt(2 /* Update */, updateStatements)\n    ], INFERRED_TYPE, null, viewQueryFnName);\n}\n// Return a host binding function or null if one is not necessary.\nfunction createHostBindingsFunction(meta, elVarExp, bindingContext, styleBuilder, bindingParser, constantPool, hostVarsCount) {\n    var e_3, _a;\n    var createStatements = [];\n    var updateStatements = [];\n    var totalHostVarsCount = hostVarsCount;\n    var hostBindingSourceSpan = meta.typeSourceSpan;\n    var directiveSummary = metadataAsSummary(meta);\n    // Calculate host event bindings\n    var eventBindings = bindingParser.createDirectiveHostEventAsts(directiveSummary, hostBindingSourceSpan);\n    if (eventBindings && eventBindings.length) {\n        var listeners = createHostListeners(bindingContext, eventBindings, meta);\n        createStatements.push.apply(createStatements, __spread(listeners));\n    }\n    // Calculate the host property bindings\n    var bindings = bindingParser.createBoundHostProperties(directiveSummary, hostBindingSourceSpan);\n    var bindingFn = function (implicit, value) {\n        return convertPropertyBinding(null, implicit, value, 'b', BindingForm.TrySimple, function () { return error('Unexpected interpolation'); });\n    };\n    if (bindings) {\n        var hostVarsCountFn = function (numSlots) {\n            var originalVarsCount = totalHostVarsCount;\n            totalHostVarsCount += numSlots;\n            return originalVarsCount;\n        };\n        var valueConverter = new ValueConverter(constantPool, \n        /* new nodes are illegal here */ function () { return error('Unexpected node'); }, hostVarsCountFn, \n        /* pipes are illegal here */ function () { return error('Unexpected pipe'); });\n        try {\n            for (var bindings_1 = __values(bindings), bindings_1_1 = bindings_1.next(); !bindings_1_1.done; bindings_1_1 = bindings_1.next()) {\n                var binding = bindings_1_1.value;\n                var name_1 = binding.name;\n                var stylePrefix = getStylingPrefix(name_1);\n                if (stylePrefix === 'style') {\n                    var _b = parseNamedProperty(name_1), propertyName = _b.propertyName, unit = _b.unit;\n                    styleBuilder.registerStyleInput(propertyName, binding.expression, unit, binding.sourceSpan);\n                }\n                else if (stylePrefix === 'class') {\n                    styleBuilder.registerClassInput(parseNamedProperty(name_1).propertyName, binding.expression, binding.sourceSpan);\n                }\n                else {\n                    // resolve literal arrays and literal objects\n                    var value = binding.expression.visit(valueConverter);\n                    var bindingExpr = bindingFn(bindingContext, value);\n                    var _c = getBindingNameAndInstruction(binding), bindingName = _c.bindingName, instruction = _c.instruction, extraParams = _c.extraParams;\n                    var instructionParams = [\n                        elVarExp, literal(bindingName), importExpr(Identifiers$1.bind).callFn([bindingExpr.currValExpr])\n                    ];\n                    updateStatements.push.apply(updateStatements, __spread(bindingExpr.stmts));\n                    updateStatements.push(importExpr(instruction).callFn(instructionParams.concat(extraParams)).toStmt());\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (bindings_1_1 && !bindings_1_1.done && (_a = bindings_1.return)) _a.call(bindings_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (styleBuilder.hasBindingsOrInitialValues()) {\n            // since we're dealing with directives here and directives have a hostBinding\n            // function, we need to generate special instructions that deal with styling\n            // (both bindings and initial values). The instruction below will instruct\n            // all initial styling (styling that is inside of a host binding within a\n            // directive) to be attached to the host element of the directive.\n            var hostAttrsInstruction = styleBuilder.buildDirectiveHostAttrsInstruction(null, constantPool);\n            if (hostAttrsInstruction) {\n                createStatements.push(createStylingStmt(hostAttrsInstruction, bindingContext, bindingFn));\n            }\n            // singular style/class bindings (things like `[style.prop]` and `[class.name]`)\n            // MUST be registered on a given element within the component/directive\n            // templateFn/hostBindingsFn functions. The instruction below will figure out\n            // what all the bindings are and then generate the statements required to register\n            // those bindings to the element via `elementStyling`.\n            var elementStylingInstruction = styleBuilder.buildElementStylingInstruction(null, constantPool);\n            if (elementStylingInstruction) {\n                createStatements.push(createStylingStmt(elementStylingInstruction, bindingContext, bindingFn));\n            }\n            // finally each binding that was registered in the statement above will need to be added to\n            // the update block of a component/directive templateFn/hostBindingsFn so that the bindings\n            // are evaluated and updated for the element.\n            styleBuilder.buildUpdateLevelInstructions(valueConverter).forEach(function (instruction) {\n                updateStatements.push(createStylingStmt(instruction, bindingContext, bindingFn));\n            });\n        }\n    }\n    if (totalHostVarsCount) {\n        createStatements.unshift(importExpr(Identifiers$1.allocHostVars).callFn([literal(totalHostVarsCount)]).toStmt());\n    }\n    if (createStatements.length > 0 || updateStatements.length > 0) {\n        var hostBindingsFnName = meta.name ? meta.name + \"_HostBindings\" : null;\n        var statements = [];\n        if (createStatements.length > 0) {\n            statements.push(renderFlagCheckIfStmt(1 /* Create */, createStatements));\n        }\n        if (updateStatements.length > 0) {\n            statements.push(renderFlagCheckIfStmt(2 /* Update */, updateStatements));\n        }\n        return fn([\n            new FnParam(RENDER_FLAGS, NUMBER_TYPE), new FnParam(CONTEXT_NAME, null),\n            new FnParam(elVarExp.name, NUMBER_TYPE)\n        ], statements, INFERRED_TYPE, null, hostBindingsFnName);\n    }\n    return null;\n}\nfunction createStylingStmt(instruction, bindingContext, bindingFn) {\n    var params = instruction.buildParams(function (value) { return bindingFn(bindingContext, value).currValExpr; });\n    return importExpr(instruction.reference, null, instruction.sourceSpan)\n        .callFn(params, instruction.sourceSpan)\n        .toStmt();\n}\nfunction getBindingNameAndInstruction(binding) {\n    var bindingName = binding.name;\n    var instruction;\n    var extraParams = [];\n    // Check to see if this is an attr binding or a property binding\n    var attrMatches = bindingName.match(ATTR_REGEX);\n    if (attrMatches) {\n        bindingName = attrMatches[1];\n        instruction = Identifiers$1.elementAttribute;\n    }\n    else {\n        if (binding.isAnimation) {\n            bindingName = prepareSyntheticPropertyName(bindingName);\n            // host bindings that have a synthetic property (e.g. @foo) should always be rendered\n            // in the context of the component and not the parent. Therefore there is a special\n            // compatibility instruction available for this purpose.\n            instruction = Identifiers$1.componentHostSyntheticProperty;\n        }\n        else {\n            instruction = Identifiers$1.elementProperty;\n        }\n        extraParams.push(literal(null), // TODO: This should be a sanitizer fn (FW-785)\n        literal(true) // host bindings must have nativeOnly prop set to true\n        );\n    }\n    return { bindingName: bindingName, instruction: instruction, extraParams: extraParams };\n}\nfunction createHostListeners(bindingContext, eventBindings, meta) {\n    return eventBindings.map(function (binding) {\n        var bindingExpr = convertActionBinding(null, bindingContext, binding.handler, 'b', function () { return error('Unexpected interpolation'); });\n        var bindingName = binding.name && sanitizeIdentifier(binding.name);\n        var bindingFnName = bindingName;\n        if (binding.type === 1 /* Animation */) {\n            bindingFnName = prepareSyntheticListenerFunctionName(bindingName, binding.targetOrPhase);\n            bindingName = prepareSyntheticListenerName(bindingName, binding.targetOrPhase);\n        }\n        var typeName = meta.name;\n        var functionName = typeName && bindingName ? typeName + \"_\" + bindingFnName + \"_HostBindingHandler\" : null;\n        var handler = fn([new FnParam('$event', DYNAMIC_TYPE)], __spread(bindingExpr.render3Stmts), INFERRED_TYPE, null, functionName);\n        return importExpr(Identifiers$1.listener).callFn([literal(bindingName), handler]).toStmt();\n    });\n}\nfunction metadataAsSummary(meta) {\n    // clang-format off\n    return {\n        hostAttributes: meta.host.attributes,\n        hostListeners: meta.host.listeners,\n        hostProperties: meta.host.properties,\n    };\n    // clang-format on\n}\nfunction typeMapToExpressionMap(map, outputCtx) {\n    // Convert each map entry into another entry where the value is an expression importing the type.\n    var entries = Array.from(map).map(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], type = _b[1];\n        return [key, outputCtx.importExpr(type)];\n    });\n    return new Map(entries);\n}\nvar HOST_REG_EXP$1 = /^(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\))$/;\nfunction parseHostBindings(host) {\n    var attributes = {};\n    var listeners = {};\n    var properties = {};\n    Object.keys(host).forEach(function (key) {\n        var value = host[key];\n        var matches = key.match(HOST_REG_EXP$1);\n        if (matches === null) {\n            attributes[key] = value;\n        }\n        else if (matches[1 /* Binding */] != null) {\n            // synthetic properties (the ones that have a `@` as a prefix)\n            // are still treated the same as regular properties. Therefore\n            // there is no point in storing them in a separate map.\n            properties[matches[1 /* Binding */]] = value;\n        }\n        else if (matches[2 /* Event */] != null) {\n            listeners[matches[2 /* Event */]] = value;\n        }\n    });\n    return { attributes: attributes, listeners: listeners, properties: properties };\n}\nfunction compileStyles(styles, selector, hostSelector) {\n    var shadowCss = new ShadowCss();\n    return styles.map(function (style) { return shadowCss.shimCssText(style, selector, hostSelector); });\n}\nfunction parseNamedProperty(name) {\n    var unit = '';\n    var propertyName = '';\n    var index = name.indexOf('.');\n    if (index > 0) {\n        var unitIndex = name.lastIndexOf('.');\n        if (unitIndex !== index) {\n            unit = name.substring(unitIndex + 1, name.length);\n            propertyName = name.substring(index + 1, unitIndex);\n        }\n        else {\n            propertyName = name.substring(index + 1, name.length);\n        }\n    }\n    return { propertyName: propertyName, unit: unit };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerFacadeImpl = /** @class */ (function () {\n    function CompilerFacadeImpl() {\n        this.R3ResolvedDependencyType = R3ResolvedDependencyType;\n        this.elementSchemaRegistry = new DomElementSchemaRegistry();\n    }\n    CompilerFacadeImpl.prototype.compilePipe = function (angularCoreEnv, sourceMapUrl, facade) {\n        var res = compilePipeFromMetadata({\n            name: facade.name,\n            type: new WrappedNodeExpr(facade.type),\n            deps: convertR3DependencyMetadataArray(facade.deps),\n            pipeName: facade.pipeName,\n            pure: facade.pure,\n        });\n        return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n    };\n    CompilerFacadeImpl.prototype.compileInjectable = function (angularCoreEnv, sourceMapUrl, facade) {\n        var _a = compileInjectable({\n            name: facade.name,\n            type: new WrappedNodeExpr(facade.type),\n            typeArgumentCount: facade.typeArgumentCount,\n            providedIn: computeProvidedIn(facade.providedIn),\n            useClass: wrapExpression(facade, USE_CLASS),\n            useFactory: wrapExpression(facade, USE_FACTORY),\n            useValue: wrapExpression(facade, USE_VALUE),\n            useExisting: wrapExpression(facade, USE_EXISTING),\n            ctorDeps: convertR3DependencyMetadataArray(facade.ctorDeps),\n            userDeps: convertR3DependencyMetadataArray(facade.userDeps) || undefined,\n        }), expression = _a.expression, statements = _a.statements;\n        return jitExpression(expression, angularCoreEnv, sourceMapUrl, statements);\n    };\n    CompilerFacadeImpl.prototype.compileInjector = function (angularCoreEnv, sourceMapUrl, facade) {\n        var meta = {\n            name: facade.name,\n            type: new WrappedNodeExpr(facade.type),\n            deps: convertR3DependencyMetadataArray(facade.deps),\n            providers: new WrappedNodeExpr(facade.providers),\n            imports: new WrappedNodeExpr(facade.imports),\n        };\n        var res = compileInjector(meta);\n        return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n    };\n    CompilerFacadeImpl.prototype.compileNgModule = function (angularCoreEnv, sourceMapUrl, facade) {\n        var meta = {\n            type: new WrappedNodeExpr(facade.type),\n            bootstrap: facade.bootstrap.map(wrapReference),\n            declarations: facade.declarations.map(wrapReference),\n            imports: facade.imports.map(wrapReference),\n            exports: facade.exports.map(wrapReference),\n            emitInline: true,\n        };\n        var res = compileNgModule(meta);\n        return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, []);\n    };\n    CompilerFacadeImpl.prototype.compileDirective = function (angularCoreEnv, sourceMapUrl, facade) {\n        var constantPool = new ConstantPool();\n        var bindingParser = makeBindingParser();\n        var meta = convertDirectiveFacadeToMetadata(facade);\n        var res = compileDirectiveFromMetadata(meta, constantPool, bindingParser);\n        var preStatements = __spread(constantPool.statements, res.statements);\n        return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n    };\n    CompilerFacadeImpl.prototype.compileComponent = function (angularCoreEnv, sourceMapUrl, facade) {\n        // The ConstantPool is a requirement of the JIT'er.\n        var constantPool = new ConstantPool();\n        var interpolationConfig = facade.interpolation ?\n            InterpolationConfig.fromArray(facade.interpolation) :\n            DEFAULT_INTERPOLATION_CONFIG;\n        // Parse the template and check for errors.\n        var template = parseTemplate(facade.template, sourceMapUrl, { preserveWhitespaces: facade.preserveWhitespaces || false, interpolationConfig: interpolationConfig });\n        if (template.errors !== undefined) {\n            var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n            throw new Error(\"Errors during JIT compilation of template for \" + facade.name + \": \" + errors);\n        }\n        // Compile the component metadata, including template, into an expression.\n        // TODO(alxhub): implement inputs, outputs, queries, etc.\n        var res = compileComponentFromMetadata(__assign({}, facade, convertDirectiveFacadeToMetadata(facade), { selector: facade.selector || this.elementSchemaRegistry.getDefaultComponentElementName(), template: template, viewQueries: facade.viewQueries.map(convertToR3QueryMetadata), wrapDirectivesAndPipesInClosure: false, styles: facade.styles || [], encapsulation: facade.encapsulation, interpolation: interpolationConfig, changeDetection: facade.changeDetection, animations: facade.animations != null ? new WrappedNodeExpr(facade.animations) : null, viewProviders: facade.viewProviders != null ? new WrappedNodeExpr(facade.viewProviders) :\n                null, relativeContextFilePath: '', i18nUseExternalIds: true }), constantPool, makeBindingParser(interpolationConfig));\n        var preStatements = __spread(constantPool.statements, res.statements);\n        return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n    };\n    return CompilerFacadeImpl;\n}());\nvar USE_CLASS = Object.keys({ useClass: null })[0];\nvar USE_FACTORY = Object.keys({ useFactory: null })[0];\nvar USE_VALUE = Object.keys({ useValue: null })[0];\nvar USE_EXISTING = Object.keys({ useExisting: null })[0];\nvar wrapReference = function (value) {\n    var wrapped = new WrappedNodeExpr(value);\n    return { value: wrapped, type: wrapped };\n};\nfunction convertToR3QueryMetadata(facade) {\n    return __assign({}, facade, { predicate: Array.isArray(facade.predicate) ? facade.predicate :\n            new WrappedNodeExpr(facade.predicate), read: facade.read ? new WrappedNodeExpr(facade.read) : null });\n}\nfunction convertDirectiveFacadeToMetadata(facade) {\n    var inputsFromMetadata = parseInputOutputs(facade.inputs || []);\n    var outputsFromMetadata = parseInputOutputs(facade.outputs || []);\n    var propMetadata = facade.propMetadata;\n    var inputsFromType = {};\n    var outputsFromType = {};\n    var _loop_1 = function (field) {\n        if (propMetadata.hasOwnProperty(field)) {\n            propMetadata[field].forEach(function (ann) {\n                if (isInput(ann)) {\n                    inputsFromType[field] =\n                        ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (isOutput(ann)) {\n                    outputsFromType[field] = ann.bindingPropertyName || field;\n                }\n            });\n        }\n    };\n    for (var field in propMetadata) {\n        _loop_1(field);\n    }\n    return __assign({}, facade, { typeSourceSpan: null, type: new WrappedNodeExpr(facade.type), deps: convertR3DependencyMetadataArray(facade.deps), host: extractHostBindings(facade.host, facade.propMetadata), inputs: __assign({}, inputsFromMetadata, inputsFromType), outputs: __assign({}, outputsFromMetadata, outputsFromType), queries: facade.queries.map(convertToR3QueryMetadata), providers: facade.providers != null ? new WrappedNodeExpr(facade.providers) : null });\n}\nfunction wrapExpression(obj, property) {\n    if (obj.hasOwnProperty(property)) {\n        return new WrappedNodeExpr(obj[property]);\n    }\n    else {\n        return undefined;\n    }\n}\nfunction computeProvidedIn(providedIn) {\n    if (providedIn == null || typeof providedIn === 'string') {\n        return new LiteralExpr(providedIn);\n    }\n    else {\n        return new WrappedNodeExpr(providedIn);\n    }\n}\nfunction convertR3DependencyMetadata(facade) {\n    var tokenExpr;\n    if (facade.token === null) {\n        tokenExpr = new LiteralExpr(null);\n    }\n    else if (facade.resolved === R3ResolvedDependencyType.Attribute) {\n        tokenExpr = new LiteralExpr(facade.token);\n    }\n    else {\n        tokenExpr = new WrappedNodeExpr(facade.token);\n    }\n    return {\n        token: tokenExpr,\n        resolved: facade.resolved,\n        host: facade.host,\n        optional: facade.optional,\n        self: facade.self,\n        skipSelf: facade.skipSelf\n    };\n}\nfunction convertR3DependencyMetadataArray(facades) {\n    return facades == null ? null : facades.map(convertR3DependencyMetadata);\n}\nfunction extractHostBindings(host, propMetadata) {\n    // First parse the declarations from the metadata.\n    var _a = parseHostBindings(host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties;\n    var _loop_2 = function (field) {\n        if (propMetadata.hasOwnProperty(field)) {\n            propMetadata[field].forEach(function (ann) {\n                if (isHostBinding(ann)) {\n                    properties[ann.hostPropertyName || field] = field;\n                }\n                else if (isHostListener(ann)) {\n                    listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                }\n            });\n        }\n    };\n    // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n    for (var field in propMetadata) {\n        _loop_2(field);\n    }\n    return { attributes: attributes, listeners: listeners, properties: properties };\n}\nfunction isHostBinding(value) {\n    return value.ngMetadataName === 'HostBinding';\n}\nfunction isHostListener(value) {\n    return value.ngMetadataName === 'HostListener';\n}\nfunction isInput(value) {\n    return value.ngMetadataName === 'Input';\n}\nfunction isOutput(value) {\n    return value.ngMetadataName === 'Output';\n}\nfunction parseInputOutputs(values) {\n    return values.reduce(function (map, value) {\n        var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n        map[field] = property || field;\n        return map;\n    }, {});\n}\nfunction publishFacade(global) {\n    var ng = global.ng || (global.ng = {});\n    ng.ɵcompilerFacade = new CompilerFacadeImpl();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar VERSION$1 = new Version('7.2.0');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _a;\n/**\n * A segment of text within the template.\n */\nvar TextAst = /** @class */ (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = /** @class */ (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    BoundTextAst.prototype.visit = function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = /** @class */ (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\nvar BoundPropertyMapping = (_a = {},\n    _a[4 /* Animation */] = 4 /* Animation */,\n    _a[1 /* Attribute */] = 1 /* Attribute */,\n    _a[2 /* Class */] = 2 /* Class */,\n    _a[0 /* Property */] = 0 /* Property */,\n    _a[3 /* Style */] = 3 /* Style */,\n    _a);\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = /** @class */ (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === 4 /* Animation */;\n    }\n    BoundElementPropertyAst.fromBoundProperty = function (prop) {\n        var type = BoundPropertyMapping[prop.type];\n        return new BoundElementPropertyAst(prop.name, type, prop.securityContext, prop.value, prop.unit, prop.sourceSpan);\n    };\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = /** @class */ (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    BoundEventAst.calcFullName = function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        return name;\n    };\n    BoundEventAst.fromParsedEvent = function (event) {\n        var target = event.type === 0 /* Regular */ ? event.targetOrPhase : null;\n        var phase = event.type === 1 /* Animation */ ? event.targetOrPhase : null;\n        return new BoundEventAst(event.name, target, phase, event.handler, event.sourceSpan);\n    };\n    BoundEventAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = /** @class */ (function () {\n    function ReferenceAst(name, value, originalValue, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.originalValue = originalValue;\n        this.sourceSpan = sourceSpan;\n    }\n    ReferenceAst.prototype.visit = function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = /** @class */ (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    VariableAst.fromParsedVariable = function (v) {\n        return new VariableAst(v.name, v.value, v.sourceSpan);\n    };\n    VariableAst.prototype.visit = function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = /** @class */ (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    ElementAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = /** @class */ (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = /** @class */ (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = /** @class */ (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    DirectiveAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = /** @class */ (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan, isModule) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n        this.isModule = isModule;\n    }\n    ProviderAst.prototype.visit = function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\nvar ProviderAstType;\n(function (ProviderAstType) {\n    ProviderAstType[ProviderAstType[\"PublicService\"] = 0] = \"PublicService\";\n    ProviderAstType[ProviderAstType[\"PrivateService\"] = 1] = \"PrivateService\";\n    ProviderAstType[ProviderAstType[\"Component\"] = 2] = \"Component\";\n    ProviderAstType[ProviderAstType[\"Directive\"] = 3] = \"Directive\";\n    ProviderAstType[ProviderAstType[\"Builtin\"] = 4] = \"Builtin\";\n})(ProviderAstType || (ProviderAstType = {}));\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = /** @class */ (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    NgContentAst.prototype.visit = function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = /** @class */ (function () {\n    function NullTemplateVisitor() {\n    }\n    NullTemplateVisitor.prototype.visitNgContent = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitElement = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitReference = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitVariable = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitEvent = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitElementProperty = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitAttr = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitBoundText = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitText = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitDirective = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitDirectiveProperty = function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = /** @class */ (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    RecursiveTemplateAstVisitor.prototype.visitElement = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    RecursiveTemplateAstVisitor.prototype.visitDirective = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    RecursiveTemplateAstVisitor.prototype.visitChildren = function (context, cb) {\n        var results = [];\n        var t = this;\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var result = [];\n    var visit = visitor.visit ?\n        function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = /** @class */ (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = false; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveNormalizer = /** @class */ (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n    DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var template = normalizedDirective.template;\n        this._resourceLoaderCache.delete(template.templateUrl);\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(stylesheet.moduleUrl); });\n    };\n    DirectiveNormalizer.prototype._fetch = function (url) {\n        var result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    DirectiveNormalizer.prototype._preParseTemplate = function (prenomData) {\n        var _this = this;\n        var template;\n        var templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, prenomData.templateUrl);\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n        var isInline = !!prenormData.template;\n        var interpolationConfig = InterpolationConfig.fromArray(prenormData.interpolation);\n        var rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) { return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets); });\n    };\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = function (prenormData, preparsedTemplate, stylesheets) {\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets with all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resource loading may be async)\n        var _this = this;\n        var styles = __spread(preparsedTemplate.styles);\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var styleUrls = preparsedTemplate.styleUrls;\n        var externalStylesheets = styleUrls.map(function (styleUrl) {\n            var stylesheet = stylesheets.get(styleUrl);\n            var styles = __spread(stylesheet.styles);\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    DirectiveNormalizer.prototype._inlineStyles = function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var stylesheet = stylesheets.get(styleUrl);\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) { return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n            var stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }); })), function (_) { return loadedStylesheets; });\n    };\n    DirectiveNormalizer.prototype._normalizeStylesheet = function (stylesheet) {\n        var _this = this;\n        var moduleUrl = stylesheet.moduleUrl;\n        var allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var allStyles = stylesheet.styles.map(function (style) {\n            var styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, __spread(styleWithImports.styleUrls));\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = /** @class */ (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n        var preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text$2) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { visitAll(this, ast.cases); };\n    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n    TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\n/*\n * Resolve a `Type` for {@link Directive}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {@link Compiler}\n */\nvar DirectiveResolver = /** @class */ (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    DirectiveResolver.prototype.isDirective = function (type) {\n        var typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var propertyMetadata = this._reflector.propMetadata(type);\n                var guards = this._reflector.guards(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, guards, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, guards, directiveType) {\n        var inputs = [];\n        var outputs = [];\n        var host = {};\n        var queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, guards, directiveType);\n    };\n    DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [null, def])[1].trim(); };\n    DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n        var names = new Set();\n        var publicNames = new Set();\n        var reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var i = bindings.length - 1; i >= 0; i--) {\n            var binding = bindings[i];\n            var name_1 = this._extractPublicName(binding);\n            publicNames.add(name_1);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, guards, directiveType) {\n        var mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var comp = directive;\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers, guards: guards\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\nfunction findLast(arr, condition) {\n    for (var i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = /** @class */ (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var visitor = new _Visitor$2(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var visitor = new _Visitor$2(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = /** @class */ (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\nvar _VisitorMode;\n(function (_VisitorMode) {\n    _VisitorMode[_VisitorMode[\"Extract\"] = 0] = \"Extract\";\n    _VisitorMode[_VisitorMode[\"Merge\"] = 1] = \"Merge\";\n})(_VisitorMode || (_VisitorMode = {}));\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * @internal\n */\nvar _Visitor$2 = /** @class */ (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var wrapper = new Element('wrapper', [], nodes, undefined, undefined, undefined);\n        var translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    _Visitor.prototype.visitExpansion = function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    _Visitor.prototype.visitComment = function (comment, context) {\n        var isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && console && console.warn) {\n                        i18nCommentsWarned = true;\n                        var details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc =\n                        comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var message = this._addMessage(this._blockChildren, this._blockMeaningAndDesc);\n                        // merge attributes in sections\n                        var nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    _Visitor.prototype.visitText = function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    _Visitor.prototype.visitElement = function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var wasInI18nNode = this._inI18nNode;\n        var wasInImplicitNode = this._inImplicitNode;\n        var childNodes = [];\n        var translatedChildNodes = undefined;\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var i18nAttr = _getI18nAttr(el);\n        var i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var message = this._addMessage(el.children, i18nMeta);\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    _Visitor.prototype.visitAttribute = function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    _Visitor.prototype._init = function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    // looks for translatable attributes\n    _Visitor.prototype._visitAttributesOf = function (el) {\n        var _this = this;\n        var explicitAttrNameToValue = {};\n        var implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value; });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    // add a translatable message\n    _Visitor.prototype._addMessage = function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute && !ast[0].value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    // Translates the given message given the `TranslationBundle`\n    // This is used for translating elements / blocks - see `_translateAttributes` for attributes\n    // no-op when called in extraction mode (returns [])\n    _Visitor.prototype._translateMessage = function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    // translate the attributes of an element and remove i18n specific attributes\n    _Visitor.prototype._translateAttributes = function (el) {\n        var _this = this;\n        var attributes = el.attrs;\n        var i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var message = _this._createI18nMessage([attr], meaning, description, id);\n                var nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text$2) {\n                        var value = nodes[0].value;\n                        translatedAttributes.push(new Attribute(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     */\n    _Visitor.prototype._openTranslatableSection = function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         */\n        get: function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     */\n    _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var startIndex = this._msgCountAtSectionStart;\n        var significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var i = this._messages.length - 1; i >= startIndex; i--) {\n                var ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    _Visitor.prototype._reportError = function (node, msg) {\n        this._errors.push(new I18nError(node.sourceSpan, msg));\n    };\n    return _Visitor;\n}());\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var idIndex = i18n.indexOf(ID_SEPARATOR);\n    var descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = __read((idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], 2), meaningAndDesc = _a[0], id = _a[1];\n    var _b = __read((descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], 2), meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = /** @class */ (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n    XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = /** @class */ (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG$1 = 'x';\nvar _MARKER_TAG = 'mrk';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG$1 = 'source';\nvar _SEGMENT_SOURCE_TAG = 'seg-source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\n// http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\n// http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html\nvar Xliff = /** @class */ (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Xliff.prototype.write = function (messages, locale) {\n        var visitor = new _WriteVisitor();\n        var transUnits = [];\n        messages.forEach(function (message) {\n            var _a;\n            var contextTags = [];\n            message.sources.forEach(function (source) {\n                var contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$1(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$1(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, __spread([new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes))], contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$1(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$1(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n        });\n        var body = new Tag('body', {}, __spread(transUnits, [new CR(4)]));\n        var file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    Xliff.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var i18nNodesByMsgId = {};\n        var converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, __spread(e));\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    Xliff.prototype.digest = function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$1(text.value)]; };\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, __spread(node.visit(_this))); });\n        return nodes;\n    };\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var nodes = [new Text$1(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, __spread([new Text$1(c + \" {\")], icu.cases[c].visit(_this), [new Text$1(\"} \")]));\n        });\n        nodes.push(new Text$1(\"}\"));\n        return nodes;\n    };\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG$1, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var startTagPh = new Tag(_PLACEHOLDER_TAG$1, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var closeTagPh = new Tag(_PLACEHOLDER_TAG$1, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return __spread([startTagPh], this.serialize(ph.children), [closeTagPh]);\n    };\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        var equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: ph.name, 'equiv-text': equivText })];\n    };\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], __spread(nodes.map(function (node) { return node.visit(_this); })));\n    };\n    return _WriteVisitor;\n}());\n// TODO(vicb): add error management (structure)\n// Extract messages as xml nodes from the xliff file\nvar XliffParser = /** @class */ (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    XliffParser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    XliffParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = null;\n                var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            // ignore those tags\n            case _SOURCE_TAG$1:\n            case _SEGMENT_SOURCE_TAG:\n                break;\n            case _TARGET_TAG:\n                var innerTextStart = element.startSourceSpan.end.offset;\n                var innerTextEnd = element.endSourceSpan.start.offset;\n                var content = element.startSourceSpan.start.file.content;\n                var innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    XliffParser.prototype.visitAttribute = function (attribute, context) { };\n    XliffParser.prototype.visitText = function (text, context) { };\n    XliffParser.prototype.visitComment = function (comment, context) { };\n    XliffParser.prototype.visitExpansion = function (expansion, context) { };\n    XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    XliffParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XliffParser;\n}());\n// Convert ml nodes (xliff syntax) to i18n nodes\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    XmlToI18n.prototype.convert = function (message, url) {\n        var xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], __spread(visitAll(this, xmlIcu.rootNodes)));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text(text.value, text.sourceSpan); };\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$1) {\n            var nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, el.sourceSpan);\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n            return null;\n        }\n        if (el.name === _MARKER_TAG) {\n            return [].concat.apply([], __spread(visitAll(this, el.children)));\n        }\n        this._addError(el, \"Unexpected tag\");\n        return null;\n    };\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _MARKER_TAG$1 = 'mrk';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$2 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\n// http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\nvar Xliff2 = /** @class */ (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Xliff2.prototype.write = function (messages, locale) {\n        var visitor = new _WriteVisitor$1();\n        var units = [];\n        messages.forEach(function (message) {\n            var unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$1(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$1(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$1(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$2, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, __spread(units, [new CR(2)]));\n        var xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    Xliff2.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var i18nNodesByMsgId = {};\n        var converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, __spread(e));\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    Xliff2.prototype.digest = function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$1(text.value)]; };\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, __spread(node.visit(_this))); });\n        return nodes;\n    };\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var nodes = [new Text$1(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, __spread([new Text$1(c + \" {\")], icu.cases[c].visit(_this), [new Text$1(\"} \")]));\n        });\n        nodes.push(new Text$1(\"}\"));\n        return nodes;\n    };\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var tagPh = new Tag(_PLACEHOLDER_TAG$2, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var nodes = [].concat.apply([], __spread(ph.children.map(function (node) { return node.visit(_this); })));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$1(''));\n        }\n        return [tagPc];\n    };\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$2, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        var cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$2, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], __spread(nodes.map(function (node) { return node.visit(_this); })));\n    };\n    return _WriteVisitor;\n}());\n// Extract messages as xml nodes from the xliff file\nvar Xliff2Parser = /** @class */ (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    Xliff2Parser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    Xliff2Parser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$2:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var innerTextStart = element.startSourceSpan.end.offset;\n                var innerTextEnd = element.endSourceSpan.start.offset;\n                var content = element.startSourceSpan.start.file.content;\n                var innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    Xliff2Parser.prototype.visitAttribute = function (attribute, context) { };\n    Xliff2Parser.prototype.visitText = function (text, context) { };\n    Xliff2Parser.prototype.visitComment = function (comment, context) { };\n    Xliff2Parser.prototype.visitExpansion = function (expansion, context) { };\n    Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    Xliff2Parser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\n// Convert ml nodes (xliff syntax) to i18n nodes\nvar XmlToI18n$1 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    XmlToI18n.prototype.convert = function (message, url) {\n        var xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], __spread(visitAll(this, xmlIcu.rootNodes)));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text(text.value, text.sourceSpan); };\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$2:\n                var nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$2 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$2 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$2 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var startId = startAttr.value;\n                    var endId = endAttr.value;\n                    var nodes = [];\n                    return nodes.concat.apply(nodes, __spread([new Placeholder('', startId, el.sourceSpan)], el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            case _MARKER_TAG$1:\n                return [].concat.apply([], __spread(visitAll(this, el.children)));\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], __spread(visitAll(this, icuCase.expression))),\n        };\n    };\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = /** @class */ (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n    Xtb.prototype.load = function (content, url) {\n        // xtb to xml nodes\n        var xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var i18nNodesByMsgId = {};\n        var converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    Xtb.prototype.digest = function (message) { return digest$1(message); };\n    Xtb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\n// Extract messages as xml nodes from the xtb file\nvar XtbParser = /** @class */ (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    XtbParser.prototype.parse = function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    XtbParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var innerTextStart = element.startSourceSpan.end.offset;\n                        var innerTextEnd = element.endSourceSpan.start.offset;\n                        var content = element.startSourceSpan.start.file.content;\n                        var innerText = content.slice(innerTextStart, innerTextEnd);\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    XtbParser.prototype.visitAttribute = function (attribute, context) { };\n    XtbParser.prototype.visitText = function (text, context) { };\n    XtbParser.prototype.visitComment = function (comment, context) { };\n    XtbParser.prototype.visitExpansion = function (expansion, context) { };\n    XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    XtbParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XtbParser;\n}());\n// Convert ml nodes (xtb syntax) to i18n nodes\nvar XmlToI18n$2 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    XmlToI18n.prototype.convert = function (message, url) {\n        var xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text(text.value, text.sourceSpan); };\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, el.sourceSpan);\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = /** @class */ (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var digestFn = function (m) { return serializer.digest(m); };\n        var mapperFactory = function (m) { return serializer.createNameMapper(m); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    TranslationBundle.prototype.get = function (srcMsg) {\n        var html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = /** @class */ (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var text = this._convertToText(srcMsg);\n        // text to html\n        var url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: __spread(this._errors, html.errors),\n        };\n    };\n    I18nToHtmlVisitor.prototype.visitText = function (text, context) {\n        // `convert()` uses an `HtmlParser` to return `html.Node`s\n        // we should then make sure that any special characters are escaped\n        return escapeXml(text.value);\n    };\n    I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var tag = \"\" + ph.tag;\n        var attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     */\n    I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n        var _this = this;\n        var id = this._digest(srcMsg);\n        var mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? mapper.toInternalName(name) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var context = this._contextStack.pop();\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = /** @class */ (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = /** @class */ (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n        var _this = this;\n        var entries = [];\n        var quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n    _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mapEntry$1(key, value) {\n    return { key: key, value: value, quoted: false };\n}\nvar InjectableCompiler = /** @class */ (function () {\n    function InjectableCompiler(reflector, alwaysGenerateDef) {\n        this.reflector = reflector;\n        this.alwaysGenerateDef = alwaysGenerateDef;\n        this.tokenInjector = reflector.resolveExternalReference(Identifiers.Injector);\n    }\n    InjectableCompiler.prototype.depsArray = function (deps, ctx) {\n        var _this = this;\n        return deps.map(function (dep) {\n            var token = dep;\n            var args = [token];\n            var flags = 0 /* Default */;\n            if (Array.isArray(dep)) {\n                for (var i = 0; i < dep.length; i++) {\n                    var v = dep[i];\n                    if (v) {\n                        if (v.ngMetadataName === 'Optional') {\n                            flags |= 8 /* Optional */;\n                        }\n                        else if (v.ngMetadataName === 'SkipSelf') {\n                            flags |= 4 /* SkipSelf */;\n                        }\n                        else if (v.ngMetadataName === 'Self') {\n                            flags |= 2 /* Self */;\n                        }\n                        else if (v.ngMetadataName === 'Inject') {\n                            token = v.token;\n                        }\n                        else {\n                            token = v;\n                        }\n                    }\n                }\n            }\n            var tokenExpr;\n            if (typeof token === 'string') {\n                tokenExpr = literal(token);\n            }\n            else if (token === _this.tokenInjector) {\n                tokenExpr = importExpr(Identifiers.INJECTOR);\n            }\n            else {\n                tokenExpr = ctx.importExpr(token);\n            }\n            if (flags !== 0 /* Default */) {\n                args = [tokenExpr, literal(flags)];\n            }\n            else {\n                args = [tokenExpr];\n            }\n            return importExpr(Identifiers.inject).callFn(args);\n        });\n    };\n    InjectableCompiler.prototype.factoryFor = function (injectable, ctx) {\n        var retValue;\n        if (injectable.useExisting) {\n            retValue = importExpr(Identifiers.inject).callFn([ctx.importExpr(injectable.useExisting)]);\n        }\n        else if (injectable.useFactory) {\n            var deps = injectable.deps || [];\n            if (deps.length > 0) {\n                retValue = ctx.importExpr(injectable.useFactory).callFn(this.depsArray(deps, ctx));\n            }\n            else {\n                return ctx.importExpr(injectable.useFactory);\n            }\n        }\n        else if (injectable.useValue) {\n            retValue = convertValueToOutputAst(ctx, injectable.useValue);\n        }\n        else {\n            var clazz = injectable.useClass || injectable.symbol;\n            var depArgs = this.depsArray(this.reflector.parameters(clazz), ctx);\n            retValue = new InstantiateExpr(ctx.importExpr(clazz), depArgs);\n        }\n        return fn([], [new ReturnStatement(retValue)], undefined, undefined, injectable.symbol.name + '_Factory');\n    };\n    InjectableCompiler.prototype.injectableDef = function (injectable, ctx) {\n        var providedIn = NULL_EXPR;\n        if (injectable.providedIn !== undefined) {\n            if (injectable.providedIn === null) {\n                providedIn = NULL_EXPR;\n            }\n            else if (typeof injectable.providedIn === 'string') {\n                providedIn = literal(injectable.providedIn);\n            }\n            else {\n                providedIn = ctx.importExpr(injectable.providedIn);\n            }\n        }\n        var def = [\n            mapEntry$1('factory', this.factoryFor(injectable, ctx)),\n            mapEntry$1('token', ctx.importExpr(injectable.type.reference)),\n            mapEntry$1('providedIn', providedIn),\n        ];\n        return importExpr(Identifiers.defineInjectable).callFn([literalMap(def)]);\n    };\n    InjectableCompiler.prototype.compile = function (injectable, ctx) {\n        if (this.alwaysGenerateDef || injectable.providedIn !== undefined) {\n            var className = identifierName(injectable.type);\n            var clazz = new ClassStmt(className, null, [\n                new ClassField('ngInjectableDef', INFERRED_TYPE, [StmtModifier.Static], this.injectableDef(injectable, ctx)),\n            ], [], new ClassMethod(null, [], []), []);\n            ctx.statements.push(clazz);\n        }\n    };\n    return InjectableCompiler;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + normalizeGenFileSuffix(urlWithSuffix[1]);\n}\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\nfunction normalizeGenFileSuffix(srcFileSuffix) {\n    return srcFileSuffix === '.tsx' ? '.ts' : srcFileSuffix;\n}\nfunction summaryFileName(fileName) {\n    var fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\nfunction isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\nfunction createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\n// Design notes:\n// - don't lazily create metadata:\n//   For some metadata, we need to do async work sometimes,\n//   so the user has to kick off this loading.\n//   But we want to report errors even when the async work is\n//   not required to check that the user would have been able\n//   to wait correctly.\nvar CompileMetadataResolver = /** @class */ (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n        this._shallowModuleCache = new Map();\n    }\n    CompileMetadataResolver.prototype.getReflector = function () { return this._reflector; };\n    CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n        var dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    CompileMetadataResolver.prototype.clearCache = function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n        var delegate = null;\n        var proxyClass = function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        };\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            proxyClass.prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        proxyClass.overriddenName = name;\n        return proxyClass;\n    };\n    CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n        var name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        return this._createProxyClass(dirType, name);\n    };\n    CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return {};\n        }\n    };\n    CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, hostView, inputs, outputs, []);\n        }\n    };\n    CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n        var _a;\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = factory.ngContentSelectors).push.apply(_a, __spread(ngContentSelectors));\n        }\n    };\n    CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n        var typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    CompileMetadataResolver.prototype.getHostComponentMetadata = function (compMeta, hostViewType) {\n        var hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var template = CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();\n        var templateUrl = '';\n        var htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            guards: {},\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: { id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} },\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = this.getNonNormalizedDirectiveMetadata(directiveType), annotation = _a.annotation, metadata = _a.metadata;\n        var createDirectiveMetadata = function (templateMetadata) {\n            var normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                guards: metadata.guards,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(metadata.componentFactory, templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var template = metadata.template;\n            var templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var nonNormalizedTemplateMetadata = undefined;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var compMeta = dirMeta;\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var changeDetectionStrategy = null;\n        var viewProviders = [];\n        var entryComponentMetadata = [];\n        var selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var compMeta = dirMeta;\n            changeDetectionStrategy = compMeta.changeDetection;\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return _this._getEntryComponentMetadata(type); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var queries = [];\n        var viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            guards: dirMeta.guards || {},\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n        var dirMeta = this._directiveCache.get(directiveType);\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n        var dirSummary = this._loadSummary(dirType, CompileSummaryKind.Directive);\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    CompileMetadataResolver.prototype.isDirective = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    CompileMetadataResolver.prototype.isPipe = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    CompileMetadataResolver.prototype.isNgModule = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType, alreadyCollecting) {\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        var moduleSummary = this._loadSummary(moduleType, CompileSummaryKind.NgModule);\n        if (!moduleSummary) {\n            var moduleMeta = this.getNgModuleMetadata(moduleType, false, alreadyCollecting);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    CompileMetadataResolver.prototype.getShallowModuleMetadata = function (moduleType) {\n        var compileMeta = this._shallowModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var ngModuleMeta = findLast(this._reflector.shallowAnnotations(moduleType), createNgModule.isTypeOf);\n        compileMeta = {\n            type: this._getTypeMetadata(moduleType),\n            rawExports: ngModuleMeta.exports,\n            rawImports: ngModuleMeta.imports,\n            rawProviders: ngModuleMeta.providers,\n        };\n        this._shallowModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound, alreadyCollecting) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        moduleType = resolveForwardRef(moduleType);\n        var compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var declaredDirectives = [];\n        var exportedNonModuleIdentifiers = [];\n        var declaredPipes = [];\n        var importedModules = [];\n        var exportedModules = [];\n        var providers = [];\n        var entryComponents = [];\n        var bootstrapComponents = [];\n        var schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var importedModuleType = undefined;\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, __spread(_this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType)));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    if (!alreadyCollecting)\n                        alreadyCollecting = new Set();\n                    if (alreadyCollecting.has(importedModuleType)) {\n                        _this._reportError(syntaxError(_this._getTypeDescriptor(importedModuleType) + \" '\" + stringifyType(importedType) + \"' is imported recursively by the module '\" + stringifyType(moduleType) + \"'.\"), moduleType);\n                        return;\n                    }\n                    alreadyCollecting.add(importedModuleType);\n                    var importedModuleSummary = _this.getNgModuleSummary(importedModuleType, alreadyCollecting);\n                    alreadyCollecting.delete(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                if (!alreadyCollecting)\n                    alreadyCollecting = new Set();\n                if (alreadyCollecting.has(exportedType)) {\n                    _this._reportError(syntaxError(_this._getTypeDescriptor(exportedType) + \" '\" + stringify(exportedType) + \"' is exported recursively by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                alreadyCollecting.add(exportedType);\n                var exportedModuleSummary = _this.getNgModuleSummary(exportedType, alreadyCollecting);\n                alreadyCollecting.delete(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var exportedDirectives = [];\n        var exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, __spread(this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType)));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, __spread(flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return _this._getEntryComponentMetadata(type); })));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, __spread(bootstrapComponents.map(function (type) { return _this._getEntryComponentMetadata(type.reference); })));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, __spread(flattenAndDedupeArray(meta.schemas)));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, compileMeta.type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if (type.provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n        var oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var result = new TransitiveCompileNgModuleMetadata();\n        var modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var tokenRef = tokenReference(entry.provider.token);\n                var prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    CompileMetadataResolver.prototype.isInjectable = function (type) {\n        var annotations = this._reflector.tryAnnotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    CompileMetadataResolver.prototype.getInjectableMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        var typeMetadata = typeSummary ?\n            typeSummary.type :\n            this._getTypeMetadata(type, dependencies, throwOnUnknownDeps);\n        var annotations = this._reflector.annotations(type).filter(function (ann) { return createInjectable.isTypeOf(ann); });\n        if (annotations.length === 0) {\n            return null;\n        }\n        var meta = annotations[annotations.length - 1];\n        return {\n            symbol: type,\n            type: typeMetadata,\n            providedIn: meta.providedIn,\n            useValue: meta.useValue,\n            useClass: meta.useClass,\n            useExisting: meta.useExisting,\n            useFactory: meta.useFactory,\n            deps: meta.deps,\n        };\n    };\n    CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n        var pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n        var pipeSummary = this._loadSummary(pipeType, CompileSummaryKind.Pipe);\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n        var pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var pipeAnnotation = this._pipeResolver.resolve(pipeType);\n        var pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var hasUnknownDeps = false;\n        var params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var dependenciesMetadata = params.map(function (param) {\n            var isAttribute = false;\n            var isHost = false;\n            var isSelf = false;\n            var isSkipSelf = false;\n            var isOptional = false;\n            var token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return null;\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n        token = resolveForwardRef(token);\n        var compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var providerMeta = undefined;\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies. This might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var providersInfo = providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, __spread(_this._getEntryComponentsFromProvider(providerMeta, type)));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    CompileMetadataResolver.prototype._validateProvider = function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n        var _this = this;\n        var components = [];\n        var collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: dirMeta.metadata.componentFactory };\n        }\n        var dirSummary = this._loadSummary(dirType, CompileSummaryKind.Directive);\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: dirSummary.componentFactory };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    CompileMetadataResolver.prototype._getInjectableTypeMetadata = function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n        var compileDeps = undefined;\n        var compileTypeMetadata = null;\n        var compileFactoryMetadata = null;\n        var token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata =\n                this._getInjectableTypeMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n    CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : null\n        };\n    };\n    CompileMetadataResolver.prototype._reportError = function (error$$1, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error$$1, type);\n            if (otherType) {\n                this._errorCollector(error$$1, otherType);\n            }\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    return CompileMetadataResolver;\n}());\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var i = 0; i < tree.length; i++) {\n            var item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = /** @class */ (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n */\nfunction componentStillLoadingError(compType) {\n    var error$$1 = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    error$$1[ERROR_COMPONENT_TYPE] = compType;\n    return error$$1;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = /** @class */ (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\nvar ProviderViewContext = /** @class */ (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = /** @class */ (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    ProviderElementContext.prototype.afterElement = function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: function () {\n            // Note: Maps keep their insertion order.\n            var lazyProviders = [];\n            var eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: function () {\n            var sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                sortedProviderTypes.indexOf(dir2.directive.type); });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: function () {\n            var allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, __spread(matches)); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var queryValue = query.meta.read || defaultValue;\n            var tokenRef = tokenReference(queryValue);\n            var queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    ProviderElementContext.prototype._getQueriesFor = function (token) {\n        var result = [];\n        var currentEl = this;\n        var distance = 0;\n        var queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, __spread(queries.filter(function (query) { return query.meta.descendants || distance <= 1; })));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, __spread(queries));\n        }\n        return result;\n    };\n    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n        var _this = this;\n        var resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var transformedUseValue = provider.useValue;\n            var transformedUseExisting = provider.useExisting;\n            var transformedDeps = undefined;\n            if (provider.useExisting != null) {\n                var existingDiDep = _this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = null;\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n            }\n            else if (provider.useClass) {\n                var deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var attrValue = this._attrs[dep.token.value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    this.transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var currElement = this;\n        var currEager = eager;\n        var result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(dep.token) ||\n                    this.viewContext.viewProviders.get(tokenReference(dep.token)) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName(dep.token), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = /** @class */ (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders, /* isModule */ true);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders, \n        /* isModule */ false);\n    }\n    NgModuleProviderAnalyzer.prototype.parse = function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var lazyProviders = [];\n        var eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n        var _this = this;\n        var resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var transformedUseValue = provider.useValue;\n            var transformedUseExisting = provider.useExisting;\n            var transformedDeps = undefined;\n            if (provider.useExisting != null) {\n                var existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = null;\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) ;\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) ;\n        }\n        return dep;\n    };\n    return NgModuleProviderAnalyzer;\n}());\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan, provider.isModule);\n}\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken, /* isModule */ false);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ false);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ false);\n    });\n    return providersByToken;\n}\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken, isModule) {\n    providers.forEach(function (provider) {\n        var resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var lifecycleHooks = provider.token.identifier &&\n                provider.token.identifier.lifecycleHooks ?\n                provider.token.identifier.lifecycleHooks :\n                [];\n            var isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan, isModule);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var viewQueryId = 1;\n    var viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var contentQueryId = contentQueryStartId;\n    var contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction providerDef(ctx, providerAst) {\n    var flags = 0 /* None */;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    if (providerAst.isModule) {\n        flags |= 1073741824 /* TypeModuleProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\nfunction multiProviderDef(ctx, flags, providers) {\n    var allDepDefs = [];\n    var allParams = [];\n    var exprs = providers.map(function (provider, providerIndex) {\n        var expr;\n        if (provider.useClass) {\n            var depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var providerExpr;\n    var deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || providerMeta.useClass.diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isHost\n    var expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, dep.token);\n    var flags = 0 /* None */;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isSelf) {\n        flags |= 4 /* Self */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var nodeFlag = 0 /* None */;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = /** @class */ (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = /** @class */ (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    NgModuleCompiler.prototype.compile = function (ctx, ngModuleMeta, extraProviders) {\n        var sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var ngModuleDefFactory = fn([new FnParam(LOG_VAR.name)], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var id = typeof ngModuleMeta.id === 'string' ? literal(ngModuleMeta.id) :\n                ctx.importExpr(ngModuleMeta.id);\n            var registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([id, variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    NgModuleCompiler.prototype.createStub = function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    NgModuleCompiler.prototype._createNgModuleFactory = function (ctx, reference, value) {\n        var ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [expressionType(ctx.importExpr(reference))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves types to {@link NgModule}.\n */\nvar NgModuleResolver = /** @class */ (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var converter = new _TsEmitterVisitor();\n    var ctx = EmitterVisitorContext.createRoot();\n    var asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = /** @class */ (function () {\n    function TypeScriptEmitter() {\n    }\n    TypeScriptEmitter.prototype.emitStatementsAndContext = function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter, importFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var converter = new _TsEmitterVisitor(referenceFilter, importFilter);\n        var ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var lines = __spread(preambleLines, [ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    TypeScriptEmitter.prototype.emitStatements = function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter, importFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.importFilter = importFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        var result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: name_1, as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        if (stmt.value) {\n            ctx.print(stmt, \" = \");\n            stmt.value.visitExpression(this, ctx);\n        }\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        throw new Error('Cannot visit a WrappedNodeExpr when outputting Typescript.');\n    };\n    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ctx.print(ast, \"(<\");\n        ast.type.visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        if (field.hasModifier(StmtModifier.Static)) {\n            ctx.print(null, 'static ');\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        if (field.initializer) {\n            ctx.print(null, ' = ');\n            field.initializer.visitExpression(this, ctx);\n        }\n        ctx.println(null, \";\");\n    };\n    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        if (ast.name) {\n            ctx.print(ast, 'function ');\n            ctx.print(ast, ast.name);\n        }\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        if (!ast.name) {\n            ctx.print(ast, \" => \");\n        }\n        ctx.println(ast, '{');\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var catchStmts = [CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ])].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitBuiltinType = function (type, ctx) {\n        var typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            case BuiltinTypeName.None:\n                typeStr = 'never';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n        var _this = this;\n        ast.value.visitExpression(this, ctx);\n        if (ast.typeParams !== null) {\n            ctx.print(null, '<');\n            this.visitAllObjects(function (type) { return _this.visitType(type, ctx); }, ast.typeParams, ctx, ',');\n            ctx.print(null, '>');\n        }\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName && (!this.importFilter || !this.importFilter(value))) {\n            var prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, name);\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, typeParams, ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolve a `Type` for {@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {@link Compiler}\n */\nvar PipeResolver = /** @class */ (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    PipeResolver.prototype.isPipe = function (type) {\n        var typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n */\nfunction expandNodes(nodes) {\n    var expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = /** @class */ (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = /** @class */ (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * @internal\n */\nvar _Expander = /** @class */ (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    _Expander.prototype.visitElement = function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    _Expander.prototype.visitText = function (text, context) { return text; };\n    _Expander.prototype.visitComment = function (comment, context) { return comment; };\n    _Expander.prototype.visitExpansion = function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n// Plural forms are expanded to `NgPlural` and `NgPluralCase`s\nfunction _expandPluralForm(ast, errors) {\n    var children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, __spread(expansionResult.errors));\n        return new Element(\"ng-template\", [new Attribute('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var switchAttr = new Attribute('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n// ICU messages (excluding plural form) are expanded to `NgSwitch`  and `NgSwitchCase`s\nfunction _expandDefaultForm(ast, errors) {\n    var children = ast.cases.map(function (c) {\n        var expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, __spread(expansionResult.errors));\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var switchAttr = new Attribute('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP$1 = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX$1 = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX$1 = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX$1 = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX$1 = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX$1 = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX$1 = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX$1 = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX$1 = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX$1 = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX$1 = 10;\nvar TEMPLATE_ATTR_PREFIX$1 = '*';\nvar CLASS_ATTR = 'class';\nvar _TEXT_CSS_SELECTOR;\nfunction TEXT_CSS_SELECTOR() {\n    if (!_TEXT_CSS_SELECTOR) {\n        _TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n    }\n    return _TEXT_CSS_SELECTOR;\n}\nvar TemplateParseError = /** @class */ (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = /** @class */ (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = /** @class */ (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    Object.defineProperty(TemplateParser.prototype, \"expressionParser\", {\n        get: function () { return this._exprParser; },\n        enumerable: true,\n        configurable: true\n    });\n    TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var warnings = result.errors.filter(function (error$$1) { return error$$1.level === ParseErrorLevel.WARNING; });\n        var errors = result.errors.filter(function (error$$1) { return error$$1.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: result.templateAst, pipes: result.usedPipes };\n    };\n    TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var htmlParseResult = typeof template === 'string' ?\n            this._htmlParser.parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var result;\n        var errors = htmlAstWithErrors.errors;\n        var usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var uniqDirectives = removeSummaryDuplicates(directives);\n            var uniqPipes = removeSummaryDuplicates(pipes);\n            var providerViewContext = new ProviderViewContext(this._reflector, component);\n            var interpolationConfig = undefined;\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var bindingParser = new BindingParser(this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n            var parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, __spread(providerViewContext.errors));\n            usedPipes.push.apply(usedPipes, __spread(bindingParser.getUsedPipes()));\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, __spread(expandedHtmlAst.errors));\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    TemplateParser.prototype.getInterpolationConfig = function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n        var existingReferences = [];\n        result.filter(function (element) { return !!element.references; })\n            .forEach(function (element) { return element.references.forEach(function (reference) {\n            var name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                var error$$1 = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error$$1);\n            }\n        }); });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = /** @class */ (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var selector = CssSelector.parse(directive.selector);\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n    TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n    TemplateParseVisitor.prototype.visitText = function (text, parent) {\n        var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR());\n        var valueNoNgsp = replaceNgsp(text.value);\n        var expr = this._bindingParser.parseInterpolation(valueNoNgsp, text.sourceSpan);\n        return expr ? new BoundTextAst(expr, ngContentIndex, text.sourceSpan) :\n            new TextAst(valueNoNgsp, ngContentIndex, text.sourceSpan);\n    };\n    TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n    TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n        var _this = this;\n        var queryStartIndex = this.contentQueryStartId;\n        var elName = element.name;\n        var preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var matchableAttrs = [];\n        var elementOrDirectiveProps = [];\n        var elementOrDirectiveRefs = [];\n        var elementVars = [];\n        var events = [];\n        var templateElementOrDirectiveProps = [];\n        var templateMatchableAttrs = [];\n        var templateElementVars = [];\n        var hasInlineTemplates = false;\n        var attrs = [];\n        var isTemplateElement = isNgTemplate(element.name);\n        element.attrs.forEach(function (attr) {\n            var parsedVariables = [];\n            var hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            elementVars.push.apply(elementVars, __spread(parsedVariables.map(function (v) { return VariableAst.fromParsedVariable(v); })));\n            var templateValue;\n            var templateKey;\n            var normalizedName = _this._normalizeAttributeName(attr.name);\n            if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX$1)) {\n                templateValue = attr.value;\n                templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX$1.length);\n            }\n            var hasTemplateBinding = templateValue != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                var parsedVariables_1 = [];\n                _this._bindingParser.parseInlineTemplateBinding(templateKey, templateValue, attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, parsedVariables_1);\n                templateElementVars.push.apply(templateElementVars, __spread(parsedVariables_1.map(function (v) { return VariableAst.fromParsedVariable(v); })));\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var elementCssSelector = createElementCssSelector(elName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var references = [];\n        var boundDirectivePropNames = new Set();\n        var directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, element.sourceSpan, references, boundDirectivePropNames);\n        var elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var providerContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, element.sourceSpan);\n        var children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR$1 : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? parent.providerContext : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var projectionSelector = preparsedElement.projectAs != '' ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var ngContentIndex = parent.findNgContentIndex(projectionSelector);\n        var parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            // `<ng-content>` element\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n        }\n        else if (isTemplateElement) {\n            // `<ng-template>` element\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, element.sourceSpan);\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n        }\n        else {\n            // element other than `<ng-content>` and `<ng-template>`\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n            var ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(elName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            // The element as a *-attribute\n            var templateQueryStartIndex = this.contentQueryStartId;\n            var templateSelector = createElementCssSelector('ng-template', templateMatchableAttrs);\n            var directives = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var templateBoundDirectivePropNames = new Set();\n            var templateDirectiveAsts = this._createDirectiveAsts(true, elName, directives, templateElementOrDirectiveProps, [], element.sourceSpan, [], templateBoundDirectivePropNames);\n            var templateElementProps = this._createElementPropertyAsts(elName, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, element.sourceSpan);\n            var templateProviderContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, element.sourceSpan);\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, element.sourceSpan);\n        }\n        return parsedElement;\n    };\n    TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var name = this._normalizeAttributeName(attr.name);\n        var value = attr.value;\n        var srcSpan = attr.sourceSpan;\n        var boundEvents = [];\n        var bindParts = name.match(BIND_NAME_REGEXP$1);\n        var hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX$1] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX$1], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX$1]) {\n                if (isTemplateElement) {\n                    var identifier = bindParts[IDENT_KW_IDX$1];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX$1]) {\n                var identifier = bindParts[IDENT_KW_IDX$1];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX$1]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX$1], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX$1]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX$1], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX$1], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n            else if (bindParts[KW_AT_IDX$1]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX$1]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX$1], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX$1], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX$1]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX$1], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX$1]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX$1], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        targetEvents.push.apply(targetEvents, __spread(boundEvents.map(function (e) { return BoundEventAst.fromParsedEvent(e); })));\n        return hasBinding;\n    };\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[_this.directivesIndex.get(directive)] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var matchedReferences = new Set();\n        var component = null;\n        var directiveAsts = directives.map(function (directive) {\n            var sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var directiveProperties = [];\n            var boundProperties = _this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan);\n            var hostProperties = boundProperties.map(function (prop) { return BoundElementPropertyAst.fromBoundProperty(prop); });\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var parsedEvents = _this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.value, elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var hostEvents = parsedEvents.map(function (e) { return BoundEventAst.fromParsedEvent(e); });\n            var contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var refToken = null;\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.value, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var elProp = directiveProperties[dirProp];\n                var boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                var boundProp = _this._bindingParser.createBoundElementProperty(elementName, prop);\n                boundElementProps.push(BoundElementPropertyAst.fromBoundProperty(boundProp));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return identifierName(directive.directive.type); });\n    };\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n        var componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param matchElement Whether any directive has matched on the tag name\n     * @param element the html element\n     */\n    TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n        var elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, element.sourceSpan);\n        }\n    };\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n        var _this = this;\n        var allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === 0 /* Property */ &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor$1 = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n        var preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var ngContentIndex = parent.findNgContentIndex(selector);\n        var children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n    NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    NonBindableVisitor.prototype.visitText = function (text, parent) {\n        var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR());\n        return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n    };\n    NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = /** @class */ (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/** Splits a raw, potentially comma-delimited `exportAs` value into an array of names. */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = /** @class */ (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    ElementContext.create = function (isTemplateElement, directives, providerContext) {\n        var matcher = new SelectorMatcher();\n        var wildcardNgContentIndex = null;\n        var component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var ngContentSelectors = component.directive.template.ngContentSelectors;\n            for (var i = 0; i < ngContentSelectors.length; i++) {\n                var selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    ElementContext.prototype.findNgContentIndex = function (selector) {\n        var ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\nfunction createElementCssSelector(elementName, attributes) {\n    var cssSelector = new CssSelector();\n    var elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var i = 0; i < attributes.length; i++) {\n        var attrName = attributes[i][0];\n        var attrNameNoNs = splitNsName(attrName)[1];\n        var attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR$1 = new NonBindableVisitor$1();\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text$2 && node.value.trim().length == 0;\n}\nfunction removeSummaryDuplicates(items) {\n    var map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = /** @class */ (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    TypeCheckCompiler.prototype.compileComponent = function (componentId, component, template, usedPipes, externalReferenceVars, ctx) {\n        var _this = this;\n        var pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var embeddedViewCount = 0;\n        var viewBuilderFactory = function (parent, guards) {\n            var embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory);\n        };\n        var visitor = viewBuilderFactory(null, []);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar TypeCheckLocalResolver = /** @class */ (function () {\n    function TypeCheckLocalResolver() {\n    }\n    TypeCheckLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            // References to the event should not be type-checked.\n            // TODO(chuckj): determine a better type for the event.\n            return variable(DYNAMIC_VAR_NAME);\n        }\n        return null;\n    };\n    return TypeCheckLocalResolver;\n}());\nvar defaultResolver = new TypeCheckLocalResolver();\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.guards = guards;\n        this.ctx = ctx;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    ViewBuilder.prototype.getOutputVar = function (type) {\n        var varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    ViewBuilder.prototype.getTypeGuardExpressions = function (ast) {\n        var e_1, _a, e_2, _b;\n        var result = __spread(this.guards);\n        try {\n            for (var _c = __values(ast.directives), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var directive = _d.value;\n                try {\n                    for (var _e = __values(directive.inputs), _f = _e.next(); !_f.done; _f = _e.next()) {\n                        var input = _f.value;\n                        var guard = directive.directive.guards[input.directiveName];\n                        if (guard) {\n                            var useIf = guard === 'UseIf';\n                            result.push({\n                                guard: guard,\n                                useIf: useIf,\n                                expression: { context: this.component, value: input.value }\n                            });\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return result;\n    };\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    ViewBuilder.prototype.build = function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        var e_3, _a;\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var bindingId = \"\" + bindingCount++;\n            var nameResolver = context === _this.component ? _this : defaultResolver;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, __spread(stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); })));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var bindingId = \"\" + bindingCount++;\n            var nameResolver = context === _this.component ? _this : defaultResolver;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, __spread(stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); })));\n        });\n        if (this.guards.length) {\n            var guardExpression = undefined;\n            try {\n                for (var _b = __values(this.guards), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var guard = _c.value;\n                    var _d = this.preprocessUpdateExpression(guard.expression), context = _d.context, value = _d.value;\n                    var bindingId = \"\" + bindingCount++;\n                    var nameResolver = context === this.component ? this : defaultResolver;\n                    // We only support support simple expressions and ignore others as they\n                    // are unlikely to affect type narrowing.\n                    var _e = convertPropertyBinding(nameResolver, variable(this.getOutputVar(context)), value, bindingId, BindingForm.TrySimple), stmts = _e.stmts, currValExpr = _e.currValExpr;\n                    if (stmts.length == 0) {\n                        var guardClause = guard.useIf ? currValExpr : this.ctx.importExpr(guard.guard).callFn([currValExpr]);\n                        guardExpression = guardExpression ? guardExpression.and(guardClause) : guardClause;\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            if (guardExpression) {\n                viewStmts = [new IfStmt(guardExpression, viewStmts)];\n            }\n        }\n        var viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var astWithSource = ast.value;\n        var inter = astWithSource.ast;\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            // Find any applicable type guards. For example, NgIf has a type guard on ngIf\n            // (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only\n            // stamped out if ngIf is truthy so any bindings in the template can assume that,\n            // if a nullable type is used for ngIf, that expression is not null or undefined.\n            var guards = this.getTypeGuardExpressions(ast);\n            var childVisitor = this.viewBuilderFactory(this, guards);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    ViewBuilder.prototype.visitElementOrTemplate = function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var outputVarType = null;\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    ViewBuilder.prototype.visitDirective = function (dirAst) {\n        var _this = this;\n        var dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) { return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan }); });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) { return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan }); });\n            dirAst.hostEvents.forEach(function (hostEventAst) { return _this.actions.push({\n                context: dirType,\n                value: hostEventAst.handler,\n                sourceSpan: hostEventAst.sourceSpan\n            }); });\n        }\n    };\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    ViewBuilder.prototype.pipeOutputVar = function (name) {\n        var pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    ViewBuilder.prototype.preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return function (args) {\n                    var arr = literalArr(args);\n                    // Note: The old view compiler used to use an `any` type\n                    // for arrays.\n                    return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                }; },\n                createLiteralMapConverter: function (keys) { return function (values) {\n                    var entries = keys.map(function (k, i) { return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    }); });\n                    var map = literalMap(entries);\n                    // Note: The old view compiler used to use an `any` type\n                    // for maps.\n                    return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                }; },\n                createPipeConverter: function (name, argCount) { return function (args) {\n                    // Note: The old view compiler used to use an `any` type\n                    // for pipes.\n                    var pipeExpr = _this.options.fullTemplateTypeCheck ?\n                        variable(_this.pipeOutputVar(name)) :\n                        variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                    return pipeExpr.callMethod('transform', args);\n                }; },\n            }, expression.value)\n        };\n    };\n    ViewBuilder.prototype.visitNgContent = function (ast, context) { };\n    ViewBuilder.prototype.visitText = function (ast, context) { };\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = /** @class */ (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = /** @class */ (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    ViewCompiler.prototype.compileComponent = function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var _a;\n        var embeddedViewCount = 0;\n        var staticQueryIds = findStaticQueryIds(template);\n        var renderComponentVarName = undefined;\n        if (!component.isHost) {\n            var template_1 = component.template;\n            var customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = renderComponentVar.name;\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var viewBuilderFactory = function (parent) {\n            var embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, __spread(visitor.build()));\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = /** @class */ (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        // Need Object.create so that we don't have builtin values...\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            expressionType(outputCtx.importExpr(this.component.type.reference));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var queryId = queryIndex + 1;\n                var bindingType = query.first ? 0 /* First */ : 1 /* All */;\n                var flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ])\n                }); });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () { return ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                ])\n            }); });\n        }\n    };\n    ViewBuilder.prototype.build = function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var viewFlags = 0 /* None */;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(LOG_VAR$1.name)], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n        var updateFn;\n        if (updateStmts.length > 0) {\n            var preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(COMP_VAR.name)) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(CHECK_VAR.name, INFERRED_TYPE),\n                new FnParam(VIEW_VAR.name, INFERRED_TYPE)\n            ], __spread(preStmts, updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    ViewBuilder.prototype.visitNgContent = function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 8 /* TypeNgContent */,\n            nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                literal(ast.ngContentIndex), literal(ast.index)\n            ])\n        }); });\n    };\n    ViewBuilder.prototype.visitText = function (ast, context) {\n        // Static text nodes have no check function\n        var checkIndex = -1;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(checkIndex),\n                literal(ast.ngContentIndex),\n                literalArr([literal(ast.value)]),\n            ])\n        }); });\n    };\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(null);\n        var astWithSource = ast.value;\n        var inter = astWithSource.ast;\n        var updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(checkIndex),\n                literal(ast.ngContentIndex),\n                literalArr(inter.strings.map(function (s) { return literal(s); })),\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(null);\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                variable(childVisitor.viewName),\n            ])\n        }); };\n    };\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(null);\n        // Using a null element name creates an anchor.\n        var elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var inputDefs = [];\n        var updateRendererExpressions = [];\n        var outputDefs = [];\n        if (elName) {\n            var hostBindings = ast.inputs\n                .map(function (inputAst) { return ({\n                context: COMP_VAR,\n                inputAst: inputAst,\n                dirAst: null,\n            }); })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }); });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var _b = __read(_a, 2), target = _b[0], eventName = _b[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var childCount = this.nodes.length - nodeIndex - 1;\n        var compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var compRendererType = NULL_EXPR;\n        var compView = NULL_EXPR;\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.elementDef).callFn([\n                literal(checkIndex),\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                literal(elName),\n                elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n        var _this = this;\n        var flags = 0 /* None */;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var hostBindings = [];\n        var hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var dirAst = undefined;\n            var dirIndex = undefined;\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, _this.staticQueryIds.get(ast)), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, __spread(dirHostBindings));\n                hostEvents.push.apply(hostEvents, __spread(dirHostEvents));\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var valueType = undefined;\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var valueType = undefined;\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: null });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(null);\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var queryId = dirAst.contentQueryStartId + queryIndex;\n            var flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var bindingType = query.first ? 0 /* First */ : 1 /* All */;\n            _this.nodes.push(function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: importExpr(Identifiers.queryDef).callFn([\n                    literal(flags), literal(queryId),\n                    new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                ]),\n            }); });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var outputDefs = [];\n        var dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                    nodeIndex: nodeIndex,\n                    bindingIndex: bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }); });\n        }\n        var dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n            context: dirContextExpr,\n            dirAst: dirAst,\n            inputAst: inputAst,\n        }); });\n        var hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst: dirAst,\n        }); });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 16384 /* TypeDirective */ | flags,\n            nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                literal(checkIndex),\n                literal(flags),\n                queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                literal(childCount),\n                providerExpr,\n                depsExpr,\n                inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        }); };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = function (directives) {\n        var componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    ViewBuilder.prototype._addProviderNode = function (data) {\n        var nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: data.sourceSpan,\n            nodeFlags: data.flags,\n            nodeDef: importExpr(Identifiers.providerDef).callFn([\n                literal(data.flags),\n                data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                data.tokenExpr, data.providerExpr, data.depsExpr\n            ])\n        }); });\n    };\n    ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n        var flags = 0 /* None */;\n        var queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var currViewExpr = VIEW_VAR;\n        for (var currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    ViewBuilder.prototype._createLiteralArrayConverter = function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var checkIndex = this.nodes.length;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 32 /* TypePureArray */,\n            nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                literal(checkIndex),\n                literal(argCount),\n            ])\n        }); });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    ViewBuilder.prototype._createLiteralMapConverter = function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var checkIndex = this.nodes.length;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 64 /* TypePureObject */,\n            nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                literal(checkIndex),\n                map,\n            ])\n        }); });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    ViewBuilder.prototype._createPipeConverter = function (expression, name, argCount) {\n        var pipe = this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; });\n        if (pipe.pure) {\n            var checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () { return ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 128 /* TypePurePipe */,\n                nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                    literal(checkIndex_1),\n                    literal(argCount),\n                ])\n            }); });\n            // find underlying pipe in the component view\n            var compViewExpr = VIEW_VAR;\n            var compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args))); };\n        }\n        else {\n            var nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n        }\n    };\n    ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        var flags = 0 /* None */;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 16 /* TypePipe */,\n            nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n            ])\n        }); });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return _this._createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    ViewBuilder.prototype._createNodeExpressions = function () {\n        var self = this;\n        var updateBindingCount = 0;\n        var updateRendererStmts = [];\n        var updateDirectivesStmts = [];\n        var nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, __spread(createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false)));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, __spread(createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0)));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var updateStmts = [];\n            var exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var bindingId = \"\" + updateBindingCount++;\n                var nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, __spread(stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); })));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n        var _this = this;\n        var handleEventStmts = [];\n        var handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var bindingId = \"\" + handleEventBindingCount++;\n            var nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(COMP_VAR.name)) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(VIEW_VAR.name, INFERRED_TYPE),\n                new FnParam(EVENT_NAME_VAR.name, INFERRED_TYPE),\n                new FnParam(EventHandlerVars.event.name, INFERRED_TYPE)\n            ], __spread(preStmts, handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    ViewBuilder.prototype.visitDirective = function (ast, context) { };\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\nfunction needsAdditionalRootNode(astNodes) {\n    var lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\nfunction elementBindingDef(inputAst, dirAst) {\n    var inputType = inputAst.type;\n    switch (inputType) {\n        case 1 /* Attribute */:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case 0 /* Property */:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case 4 /* Animation */:\n            var bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case 2 /* Class */:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case 3 /* Style */:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n        default:\n            // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n            // However Closure Compiler does not understand that and reports an error in typed mode.\n            // The `throw new Error` below works around the problem, and the unexpected: never variable\n            // makes sure tsc still checks this code is unreachable.\n            var unexpected = inputType;\n            throw new Error(\"unexpected \" + unexpected);\n    }\n}\nfunction fixedAttrsDef(elementAst) {\n    var mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var value = dirAst.directive.hostAttributes[name];\n            var prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn(__spread([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)], exprs));\n    }\n}\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var staticQueryIds = new Set();\n        var dynamicQueryIds = new Set();\n        var queryMatches = undefined;\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var childData = result.get(child);\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var childData = result.get(child);\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var staticQueryIds = new Set();\n    var dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var flags = 0 /* None */;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = /** @class */ (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n        var _a;\n        var htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, __spread(i18nParserResult.messages));\n        return [];\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    MessageBundle.prototype.getMessages = function () { return this._messages; };\n    MessageBundle.prototype.write = function (serializer, filterSources) {\n        var messages = {};\n        var mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var _a;\n            var id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, __spread(message.sources));\n            }\n        });\n        // Transform placeholder names using the serializer mapping\n        var msgList = Object.keys(messages).map(function (id) {\n            var mapper = serializer.createNameMapper(messages[id]);\n            var src = messages[id];\n            var nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\n// Transform an i18n AST by renaming the placeholder nodes with the given mapper\nvar MapPlaceholderNames = /** @class */ (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n        var _this = this;\n        var startName = mapper.toPublicName(ph.startName);\n        var closeName = ph.closeName ? mapper.toPublicName(ph.closeName) : ph.closeName;\n        var children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n        return new Placeholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n    };\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = /** @class */ (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    GeneratedFile.prototype.isEquivalent = function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(this.stmts, other.stmts);\n    };\n    return GeneratedFile;\n}());\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var e_1, _a, e_2, _b;\n    var allLazyRoutes = [];\n    try {\n        for (var _c = __values(moduleMeta.transitiveModule.providers), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var _e = _d.value, provider = _e.provider, module = _e.module;\n            if (tokenReference(provider.token) === reflector.ROUTES) {\n                var loadChildren = _collectLoadChildren(provider.useValue);\n                try {\n                    for (var loadChildren_1 = __values(loadChildren), loadChildren_1_1 = loadChildren_1.next(); !loadChildren_1_1.done; loadChildren_1_1 = loadChildren_1.next()) {\n                        var route = loadChildren_1_1.value;\n                        allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (loadChildren_1_1 && !loadChildren_1_1.done && (_b = loadChildren_1.return)) _b.call(loadChildren_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return allLazyRoutes;\n}\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    var e_3, _a;\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var route = routes_1_1.value;\n                _collectLoadChildren(route, target);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = __read(route.split('#'), 2), routePath = _a[0], routeName = _a[1];\n    var referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TS = /^(?!.*\\.d\\.ts$).*\\.ts$/;\nvar ResolvedStaticSymbol = /** @class */ (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = /** @class */ (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        // Note: this will only contain StaticSymbols without members!\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        // Note: this will only contain StaticSymbols without members!\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return this._resolveSymbolMembers(staticSymbol);\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var resultFromSummary = this._resolveSymbolFromSummary(staticSymbol);\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return this.resolvedSymbols.get(staticSymbol);\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    StaticSymbolResolver.prototype.getImportAs = function (staticSymbol, useSummaries) {\n        if (useSummaries === void 0) { useSummaries = true; }\n        if (staticSymbol.members.length) {\n            var baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var result = (useSummaries && this.summaryResolver.getImportAs(staticSymbol)) || null;\n        if (!result) {\n            result = this.importAs.get(staticSymbol);\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    StaticSymbolResolver.prototype.getKnownModuleName = function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    StaticSymbolResolver.prototype.invalidateFile = function (fileName) {\n        var e_1, _a;\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            try {\n                for (var symbols_1 = __values(symbols), symbols_1_1 = symbols_1.next(); !symbols_1_1.done; symbols_1_1 = symbols_1.next()) {\n                    var symbol = symbols_1_1.value;\n                    this.resolvedSymbols.delete(symbol);\n                    this.importAs.delete(symbol);\n                    this.symbolResourcePaths.delete(symbol);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (symbols_1_1 && !symbols_1_1.done && (_a = symbols_1.return)) _a.call(symbols_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n    };\n    /** @internal */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = function (cb) {\n        var recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n        var members = staticSymbol.members;\n        var baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var value = baseMetadata;\n            for (var i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n        var summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presence of decorators without evaluating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = function (filePath) {\n        var metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n        var summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n        var _this = this;\n        var e_2, _a;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var resolvedSymbols = [];\n        var metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            try {\n                for (var _b = __values(metadata['exports']), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var moduleExport = _c.value;\n                    _loop_1(moduleExport);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there might be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var symbolMeta = metadata['metadata'][metadataKey];\n                var name = unescapeIdentifier(metadataKey);\n                var symbol = _this.getStaticSymbol(filePath, name);\n                var origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + _this.host.getOutputName(filePath)));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        var _this = this;\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        var isTsFile = TS.test(sourceSymbol.filePath);\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && !isTsFile && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var _originalFileMemo;\n        var getOriginalName = function () {\n            if (!_originalFileMemo) {\n                // Guess what the original file name is from the reference. If it has a `.d.ts` extension\n                // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n                // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n                // location as it is not important to finding the file.\n                _originalFileMemo =\n                    _this.host.getOutputName(topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts')\n                        .replace(/^.*node_modules[/\\\\]/, ''));\n            }\n            return _originalFileMemo;\n        };\n        var self = this;\n        var ReferenceTransformer = /** @class */ (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                var symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, __spread((map['parameters'] || [])));\n                    var result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var module = map['module'];\n                    var name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var filePath = void 0;\n                    if (module) {\n                        filePath = self.resolveModule(module, sourceSymbol.filePath);\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + self.host.getMetadataFor(sourceSymbol.filePath) + \".\",\n                                line: map.line,\n                                character: map.character,\n                                fileName: getOriginalName()\n                            };\n                        }\n                        return {\n                            __symbolic: 'resolved',\n                            symbol: self.getStaticSymbol(filePath, name_1),\n                            line: map.line,\n                            character: map.character,\n                            fileName: getOriginalName()\n                        };\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                    }\n                }\n                else if (symbolic === 'error') {\n                    return __assign({}, map, { fileName: getOriginalName() });\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        var unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n        if (unwrappedTransformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    StaticSymbolResolver.prototype.reportError = function (error$$1, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error$$1, (context && context.filePath) || path);\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    /**\n     * @param module an absolute path to a module file.\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n        var moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md && md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + this.host.getOutputName(module) + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n        var filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                this.host.getOutputName(containingFile) : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n// Remove extra underscore from escaped identifier.\n// See https://github.com/Microsoft/TypeScript/blob/master/src/compiler/utilities.ts\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\nfunction unwrapResolvedMetadata(metadata) {\n    if (metadata && metadata.__symbolic === 'resolved') {\n        return metadata.symbol;\n    }\n    return metadata;\n}\n\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) { return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = /** @class */ (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        // Note: This only contains symbols without members.\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        // This now contains a `__symbol: number` in the place of\n        // StaticSymbols, but otherwise has the same shape as the original objects.\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    ToJsonSerializer.prototype.addSummary = function (summary) {\n        var _this = this;\n        var unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var declarationSymbol = this.symbols[this.indexBySymbol.get(metadata_1)];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var ngModuleSummary = summary.type;\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    ToJsonSerializer.prototype.serialize = function () {\n        var _this = this;\n        var exportAs = [];\n        var json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var importAs = undefined;\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = _this.indexBySymbol.get(reexportSymbol);\n                    }\n                    else {\n                        var summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    ToJsonSerializer.prototype.processValue = function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    ToJsonSerializer.prototype.visitOther = function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Strip line and character numbers from ngsummaries.\n     * Emitting them causes white spaces changes to retrigger upstream\n     * recompilations in bazel.\n     * TODO: find out a way to have line and character numbers in errors without\n     * excessive recompilation in bazel.\n     */\n    ToJsonSerializer.prototype.visitStringMap = function (map, context) {\n        if (map['__symbolic'] === 'resolved') {\n            return visitValue(map.symbol, this, context);\n        }\n        if (map['__symbolic'] === 'error') {\n            delete map['line'];\n            delete map['character'];\n        }\n        return _super.prototype.visitStringMap.call(this, map, context);\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = function (baseSymbol, flags) {\n        var index = this.indexBySymbol.get(baseSymbol);\n        var summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return index;\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    ToJsonSerializer.prototype.loadSummary = function (symbol) {\n        var summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = /** @class */ (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    ForJitSerializer.prototype.addSourceType = function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    ForJitSerializer.prototype.addLibType = function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    ForJitSerializer.prototype.serialize = function (exportAsArr) {\n        var _this = this;\n        var e_1, _a, e_2, _b, e_3, _c;\n        var exportAsBySymbol = new Map();\n        try {\n            for (var exportAsArr_1 = __values(exportAsArr), exportAsArr_1_1 = exportAsArr_1.next(); !exportAsArr_1_1.done; exportAsArr_1_1 = exportAsArr_1.next()) {\n                var _d = exportAsArr_1_1.value, symbol = _d.symbol, exportAs = _d.exportAs;\n                exportAsBySymbol.set(symbol, exportAs);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (exportAsArr_1_1 && !exportAsArr_1_1.done && (_a = exportAsArr_1.return)) _a.call(exportAsArr_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var ngModuleSymbols = new Set();\n        try {\n            for (var _e = __values(this.data), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var _g = _f.value, summary = _g.summary, metadata = _g.metadata, isLibrary = _g.isLibrary;\n                if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                    // collect the symbols that refer to NgModule classes.\n                    // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                    // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                    // See serializeSummaries for details.\n                    ngModuleSymbols.add(summary.type.reference);\n                    var modSummary = summary;\n                    try {\n                        for (var _h = __values(modSummary.modules), _j = _h.next(); !_j.done; _j = _h.next()) {\n                            var mod = _j.value;\n                            ngModuleSymbols.add(mod.reference);\n                        }\n                    }\n                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                    finally {\n                        try {\n                            if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n                        }\n                        finally { if (e_3) throw e_3.error; }\n                    }\n                }\n                if (!isLibrary) {\n                    var fnName = summaryForJitName(summary.type.reference.name);\n                    createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, metadata));\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [StmtModifier.Exported]));\n            }\n        });\n    };\n    ForJitSerializer.prototype.serializeSummaryWithDeps = function (summary, metadata) {\n        var _this = this;\n        var expressions = [this.serializeSummary(summary)];\n        var providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, __spread(\n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                // For modules,\n                // we also add the summaries for modules\n                // from libraries.\n                // This is ok as we produce reexports for all transitive modules.\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); })));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var dirSummary = summary;\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, __spread(providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) { return _this.serializeSummary({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        }); })));\n        return literalArr(expressions);\n    };\n    ForJitSerializer.prototype.serializeSummaryRef = function (typeSymbol) {\n        var jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    ForJitSerializer.prototype.serializeSummary = function (data) {\n        var outputCtx = this.outputCtx;\n        var Transformer = /** @class */ (function () {\n            function Transformer() {\n            }\n            Transformer.prototype.visitArray = function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            Transformer.prototype.visitStringMap = function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            Transformer.prototype.visitPrimitive = function (value, context) { return literal(value); };\n            Transformer.prototype.visitOther = function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = /** @class */ (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    FromJsonDeserializer.prototype.deserialize = function (libraryFileName, json) {\n        var _this = this;\n        var data = JSON.parse(json);\n        var allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) { return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name); });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var symbol = _this.symbols[index];\n            var importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var summaries = visitValue(data.summaries, this, null);\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    FromJsonDeserializer.prototype.visitStringMap = function (map, context) {\n        if ('__symbol' in map) {\n            var baseSymbol = this.symbols[map['__symbol']];\n            var members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n}\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotCompiler = /** @class */ (function () {\n    function AotCompiler(_config, _options, _host, reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _injectableCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this.reflector = reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._injectableCompiler = _injectableCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n        this._analyzedFilesForInjectables = new Map();\n    }\n    AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n    AotCompiler.prototype.analyzeModulesSync = function (rootFiles) {\n        var _this = this;\n        var analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); });\n        return analyzeResult;\n    };\n    AotCompiler.prototype.analyzeModulesAsync = function (rootFiles) {\n        var _this = this;\n        var analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () { return analyzeResult; });\n    };\n    AotCompiler.prototype._analyzeFile = function (fileName) {\n        var analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    AotCompiler.prototype._analyzeFileForInjectables = function (fileName) {\n        var analyzedFile = this._analyzedFilesForInjectables.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile = analyzeFileForInjectables(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFilesForInjectables.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    AotCompiler.prototype.findGeneratedFileNames = function (fileName) {\n        var _this = this;\n        var genFileNames = [];\n        var file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName, true)[1]);\n        file.directives.forEach(function (dirSymbol) {\n            var compMeta = _this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            }\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template.styleUrls.forEach(function (styleUrl) {\n                var normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var needsShim = (compMeta.template.encapsulation ||\n                    _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    AotCompiler.prototype.emitBasicStub = function (genFileName, originalFileName) {\n        var outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, 1 /* Basic */);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as later on in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    AotCompiler.prototype.emitTypeCheckStub = function (genFileName, originalFileName) {\n        var originalFile = this._analyzeFile(originalFileName);\n        var outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, 2 /* TypeCheck */);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    AotCompiler.prototype.loadFilesAsync = function (fileNames, tsFiles) {\n        var _this = this;\n        var files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var loadingPromises = [];\n        files.forEach(function (file) { return file.ngModules.forEach(function (ngModule) {\n            return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n        }); });\n        var analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n        return Promise.all(loadingPromises).then(function (_) { return ({\n            analyzedModules: mergeAndValidateNgFiles(files),\n            analyzedInjectables: analyzedInjectables,\n        }); });\n    };\n    AotCompiler.prototype.loadFilesSync = function (fileNames, tsFiles) {\n        var _this = this;\n        var files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) { return file.ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); }); });\n        var analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n        return {\n            analyzedModules: mergeAndValidateNgFiles(files),\n            analyzedInjectables: analyzedInjectables,\n        };\n    };\n    AotCompiler.prototype._createNgFactoryStub = function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the type-check block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var externalReferences = __spread(ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }), ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }), _this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]));\n            var externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference, /* typeParams */ null, /* useSummaries */ false))));\n            });\n            if (emitFlags & 2 /* TypeCheck */) {\n                // add the type-check block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    AotCompiler.prototype._externalIdentifierReferences = function (references) {\n        var e_1, _a;\n        var result = [];\n        try {\n            for (var references_1 = __values(references), references_1_1 = references_1.next(); !references_1_1.done; references_1_1 = references_1.next()) {\n                var reference = references_1_1.value;\n                var token = createTokenForExternalReference(this.reflector, reference);\n                if (token.identifier) {\n                    result.push(token.identifier.reference);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (references_1_1 && !references_1_1.done && (_a = references_1.return)) _a.call(references_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return result;\n    };\n    AotCompiler.prototype._createTypeCheckBlock = function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a;\n        var _b = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _b.template, usedPipes = _b.pipes;\n        (_a = ctx.statements).push.apply(_a, __spread(this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars, ctx)));\n    };\n    AotCompiler.prototype.emitMessageBundle = function (analyzeResult, locale) {\n        var _this = this;\n        var errors = [];\n        var htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var html = compMeta.template.template;\n                // Template URL points to either an HTML or TS file depending on whether\n                // the file is used with `templateUrl:` or `template:`, respectively.\n                var templateUrl = compMeta.template.templateUrl;\n                var interpolationConfig = InterpolationConfig.fromArray(compMeta.template.interpolation);\n                errors.push.apply(errors, __spread(messageBundle.updateFromTemplate(html, templateUrl, interpolationConfig)));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    AotCompiler.prototype.emitAllPartialModules = function (_a, r3Files) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files;\n        var contextMap = new Map();\n        var getContext = function (fileName) {\n            if (!contextMap.has(fileName)) {\n                contextMap.set(fileName, _this._createOutputContext(fileName));\n            }\n            return contextMap.get(fileName);\n        };\n        files.forEach(function (file) { return _this._compilePartialModule(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables, getContext(file.fileName)); });\n        r3Files.forEach(function (file) { return _this._compileShallowModules(file.fileName, file.shallowModules, getContext(file.fileName)); });\n        return Array.from(contextMap.values())\n            .map(function (context) { return ({\n            fileName: context.genFilePath,\n            statements: __spread(context.constantPool.statements, context.statements),\n        }); });\n    };\n    AotCompiler.prototype._compileShallowModules = function (fileName, shallowModules, context) {\n        var _this = this;\n        shallowModules.forEach(function (module) { return compileNgModuleFromRender2(context, module, _this._injectableCompiler); });\n    };\n    AotCompiler.prototype._compilePartialModule = function (fileName, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables, context) {\n        var _this = this;\n        var errors = [];\n        var schemaRegistry = new DomElementSchemaRegistry();\n        var hostBindingParser = new BindingParser(this._templateParser.expressionParser, DEFAULT_INTERPOLATION_CONFIG, schemaRegistry, [], errors);\n        // Process all components and directives\n        directives.forEach(function (directiveType) {\n            var directiveMetadata = _this._metadataResolver.getDirectiveMetadata(directiveType);\n            if (directiveMetadata.isComponent) {\n                var module = ngModuleByPipeOrDirective.get(directiveType);\n                module ||\n                    error(\"Cannot determine the module for component '\" + identifierName(directiveMetadata.type) + \"'\");\n                var htmlAst = directiveMetadata.template.htmlAst;\n                var preserveWhitespaces = directiveMetadata.template.preserveWhitespaces;\n                if (!preserveWhitespaces) {\n                    htmlAst = removeWhitespaces(htmlAst);\n                }\n                var render3Ast = htmlAstToRender3Ast(htmlAst.rootNodes, hostBindingParser);\n                // Map of StaticType by directive selectors\n                var directiveTypeBySel_1 = new Map();\n                var directives_1 = module.transitiveModule.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n                directives_1.forEach(function (directive) {\n                    if (directive.selector) {\n                        directiveTypeBySel_1.set(directive.selector, directive.type.reference);\n                    }\n                });\n                // Map of StaticType by pipe names\n                var pipeTypeByName_1 = new Map();\n                var pipes_1 = module.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n                pipes_1.forEach(function (pipe) { pipeTypeByName_1.set(pipe.name, pipe.type.reference); });\n                compileComponentFromRender2(context, directiveMetadata, render3Ast, _this.reflector, hostBindingParser, directiveTypeBySel_1, pipeTypeByName_1);\n            }\n            else {\n                compileDirectiveFromRender2(context, directiveMetadata, _this.reflector, hostBindingParser);\n            }\n        });\n        pipes.forEach(function (pipeType) {\n            var pipeMetadata = _this._metadataResolver.getPipeMetadata(pipeType);\n            if (pipeMetadata) {\n                compilePipeFromRender2(context, pipeMetadata, _this.reflector);\n            }\n        });\n        injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n    };\n    AotCompiler.prototype.emitAllPartialModules2 = function (files) {\n        var _this = this;\n        // Using reduce like this is a select many pattern (where map is a select pattern)\n        return files.reduce(function (r, file) {\n            r.push.apply(r, __spread(_this._emitPartialModule2(file.fileName, file.injectables)));\n            return r;\n        }, []);\n    };\n    AotCompiler.prototype._emitPartialModule2 = function (fileName, injectables) {\n        var _this = this;\n        var context = this._createOutputContext(fileName);\n        injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n        if (context.statements && context.statements.length > 0) {\n            return [{ fileName: fileName, statements: __spread(context.constantPool.statements, context.statements) }];\n        }\n        return [];\n    };\n    AotCompiler.prototype.emitAllImpls = function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var sourceModules = files.map(function (file) { return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n        return flatten(sourceModules);\n    };\n    AotCompiler.prototype._compileImplFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl, true)[1]);\n        var generatedFiles = [];\n        var outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, __spread(this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx)));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var compMeta = _this._metadataResolver.getDirectiveMetadata(dirType);\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta);\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template.externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    AotCompiler.prototype._createSummary = function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var typeData = __spread(ngModules.map(function (meta) { return ({\n            summary: _this._metadataResolver.getNgModuleSummary(meta.type.reference),\n            metadata: _this._metadataResolver.getNgModuleMetadata(meta.type.reference)\n        }); }), directives.map(function (ref) { return ({\n            summary: _this._metadataResolver.getDirectiveSummary(ref),\n            metadata: _this._metadataResolver.getDirectiveMetadata(ref)\n        }); }), pipes.map(function (ref) { return ({\n            summary: _this._metadataResolver.getPipeSummary(ref),\n            metadata: _this._metadataResolver.getPipeMetadata(ref)\n        }); }), injectables.map(function (ref) { return ({\n            summary: _this._metadataResolver.getInjectableSummary(ref.symbol),\n            metadata: _this._metadataResolver.getInjectableSummary(ref.symbol).type\n        }); }));\n        var forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    AotCompiler.prototype._compileModule = function (outputCtx, ngModule) {\n        var providers = [];\n        if (this._options.locale) {\n            var normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this.reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this.reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    AotCompiler.prototype._compileComponentFactory = function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var inputsExprs = [];\n        for (var propName in compMeta.inputs) {\n            var templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var outputsExprs = [];\n        for (var propName in compMeta.outputs) {\n            var templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(compMeta.template.ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [expressionType(outputCtx.importExpr(compMeta.type.reference))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    AotCompiler.prototype._compileComponent = function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    AotCompiler.prototype._parseTemplate = function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return this._templateAstCache.get(compMeta.type.reference);\n        }\n        var preserveWhitespaces = compMeta.template.preserveWhitespaces;\n        var directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var result = this._templateParser.parse(compMeta, compMeta.template.htmlAst, directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, compMeta.template), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    AotCompiler.prototype._createOutputContext = function (genFilePath) {\n        var _this = this;\n        var importExpr$$1 = function (symbol, typeParams, useSummaries) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (useSummaries === void 0) { useSummaries = true; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol, useSummaries) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var suppliedTypeParams = typeParams || [];\n            var missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, importExpr(new ExternalReference(moduleName, name, null), allTypeParams));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1, constantPool: new ConstantPool() };\n    };\n    AotCompiler.prototype._fileNameToModuleName = function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    AotCompiler.prototype._codegenStyles = function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var outputCtx = this._createOutputContext(_stylesModuleUrl(stylesheetMetadata.moduleUrl, isShimmed, fileSuffix));\n        var compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    AotCompiler.prototype.listLazyRoutes = function (entryRoute, analyzedModules) {\n        var e_2, _a, e_3, _b;\n        var self = this;\n        if (entryRoute) {\n            var symbol = parseLazyRoute(entryRoute, this.reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var allLazyRoutes = [];\n            try {\n                for (var _c = __values(analyzedModules.ngModules), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var ngModule = _d.value;\n                    var lazyRoutes = listLazyRoutes(ngModule, this.reflector);\n                    try {\n                        for (var lazyRoutes_1 = __values(lazyRoutes), lazyRoutes_1_1 = lazyRoutes_1.next(); !lazyRoutes_1_1.done; lazyRoutes_1_1 = lazyRoutes_1.next()) {\n                            var lazyRoute = lazyRoutes_1_1.value;\n                            allLazyRoutes.push(lazyRoute);\n                        }\n                    }\n                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                    finally {\n                        try {\n                            if (lazyRoutes_1_1 && !lazyRoutes_1_1.done && (_b = lazyRoutes_1.return)) _b.call(lazyRoutes_1);\n                        }\n                        finally { if (e_3) throw e_3.error; }\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            var e_4, _a;\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var lazyRoutes = listLazyRoutes(self._metadataResolver.getNgModuleMetadata(symbol, true), self.reflector);\n            try {\n                for (var lazyRoutes_2 = __values(lazyRoutes), lazyRoutes_2_1 = lazyRoutes_2.next(); !lazyRoutes_2_1.done; lazyRoutes_2_1 = lazyRoutes_2.next()) {\n                    var lazyRoute = lazyRoutes_2_1.value;\n                    allLazyRoutes.push(lazyRoute);\n                    visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n                }\n            }\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n            finally {\n                try {\n                    if (lazyRoutes_2_1 && !lazyRoutes_2_1.done && (_a = lazyRoutes_2.return)) _a.call(lazyRoutes_2);\n                }\n                finally { if (e_4) throw e_4.error; }\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n// Analyzes all of the program files,\n// including files that are not part of the program\n// but are referenced by an NgModule.\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var seenFiles = new Set();\n    var files = [];\n    var visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var directives = [];\n    var pipes = [];\n    var injectables = [];\n    var ngModules = [];\n    var hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    var injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\nfunction analyzeFileForInjectables(host, staticSymbolResolver, metadataResolver, fileName) {\n    var injectables = [];\n    var shallowModules = [];\n    if (staticSymbolResolver.hasDecorators(fileName)) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isInjectable(symbol)) {\n                    var injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var module = metadataResolver.getShallowModuleMetadata(symbol);\n                    if (module) {\n                        shallowModules.push(module);\n                    }\n                }\n            }\n        });\n    }\n    return { fileName: fileName, injectables: injectables, shallowModules: shallowModules };\n}\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var exportsNonSourceFiles = false;\n    var Visitor = /** @class */ (function () {\n        function Visitor() {\n        }\n        Visitor.prototype.visitArray = function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        Visitor.prototype.visitStringMap = function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        Visitor.prototype.visitPrimitive = function (value, context) { };\n        Visitor.prototype.visitOther = function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var allNgModules = [];\n    var ngModuleByPipeOrDirective = new Map();\n    var allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar FORMATTED_MESSAGE = 'ngFormattedMessage';\nfunction indentStr(level) {\n    if (level <= 0)\n        return '';\n    if (level < 6)\n        return ['', ' ', '  ', '   ', '    ', '     '][level];\n    var half = indentStr(Math.floor(level / 2));\n    return half + half + (level % 2 === 1 ? ' ' : '');\n}\nfunction formatChain(chain, indent) {\n    if (indent === void 0) { indent = 0; }\n    if (!chain)\n        return '';\n    var position = chain.position ?\n        chain.position.fileName + \"(\" + (chain.position.line + 1) + \",\" + (chain.position.column + 1) + \")\" :\n        '';\n    var prefix = position && indent === 0 ? position + \": \" : '';\n    var postfix = position && indent !== 0 ? \" at \" + position : '';\n    var message = \"\" + prefix + chain.message + postfix;\n    return \"\" + indentStr(indent) + message + ((chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || '');\n}\nfunction formattedError(chain) {\n    var message = formatChain(chain) + '.';\n    var error$$1 = syntaxError(message);\n    error$$1[FORMATTED_MESSAGE] = true;\n    error$$1.chain = chain;\n    error$$1.position = chain.position;\n    return error$$1;\n}\nfunction isFormattedError(error$$1) {\n    return !!error$$1[FORMATTED_MESSAGE];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE$1 = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE$1, 'useFactory', 'data', 'id', 'loadChildren']);\nvar TYPEGUARD_POSTFIX = 'TypeGuard';\nvar USE_IF = 'UseIf';\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = /** @class */ (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.shallowAnnotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.staticCache = new Map();\n        this.conversionMap = new Map();\n        this.resolvedExternalReferences = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    StaticReflector.prototype.componentModuleUrl = function (typeOrFunc) {\n        var staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    StaticReflector.prototype.resolveExternalReference = function (ref, containingFile) {\n        var key = undefined;\n        if (!containingFile) {\n            key = ref.moduleName + \":\" + ref.name;\n            var declarationSymbol_1 = this.resolvedExternalReferences.get(key);\n            if (declarationSymbol_1)\n                return declarationSymbol_1;\n        }\n        var refSymbol = this.symbolResolver.getSymbolByModule(ref.moduleName, ref.name, containingFile);\n        var declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, ref.moduleName);\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        if (key) {\n            this.resolvedExternalReferences.set(key, declarationSymbol);\n        }\n        return declarationSymbol;\n    };\n    StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    StaticReflector.prototype.tryFindDeclaration = function (moduleUrl, name, containingFile) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name, containingFile); });\n    };\n    StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n        var resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol) {\n            var resolvedMetadata = resolvedSymbol.metadata;\n            if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n                resolvedMetadata = resolvedMetadata.symbol;\n            }\n            if (resolvedMetadata instanceof StaticSymbol) {\n                return this.findSymbolDeclaration(resolvedSymbol.metadata);\n            }\n        }\n        return symbol;\n    };\n    StaticReflector.prototype.tryAnnotations = function (type) {\n        var originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error$$1, fileName) { };\n        try {\n            return this.annotations(type);\n        }\n        finally {\n            this.errorRecorder = originalRecorder;\n        }\n    };\n    StaticReflector.prototype.annotations = function (type) {\n        var _this = this;\n        return this._annotations(type, function (type, decorators) { return _this.simplify(type, decorators); }, this.annotationCache);\n    };\n    StaticReflector.prototype.shallowAnnotations = function (type) {\n        var _this = this;\n        return this._annotations(type, function (type, decorators) { return _this.simplify(type, decorators, true); }, this.shallowAnnotationCache);\n    };\n    StaticReflector.prototype._annotations = function (type, simplify, annotationCache) {\n        var annotations = annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var classMetadata = this.getTypeMetadata(type);\n            var parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, __spread(parentAnnotations));\n            }\n            var ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = simplify(type, classMetadata['decorators']);\n                if (ownAnnotations_1) {\n                    annotations.push.apply(annotations, __spread(ownAnnotations_1));\n                }\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var requiredAnnotationTypes = this.annotationForParentClassWithSummaryKind.get(summary.type.summaryKind);\n                    var typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(formatMetadataError(metadataError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[summary.type.summaryKind] + \" in another compilation unit without duplicating the decorator\", \n                        /* summary */ undefined, \"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class\"), type), type);\n                    }\n                }\n            }\n            annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    StaticReflector.prototype.propMetadata = function (type) {\n        var _this = this;\n        var propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    propMetadata[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var propData = members_1[propName];\n                var prop = propData\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var decorators = [];\n                if (propMetadata[propName]) {\n                    decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                }\n                propMetadata[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, __spread(_this.simplify(type, prop['decorators'])));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    StaticReflector.prototype.parameters = function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var classMetadata = this.getTypeMetadata(type);\n                var parentType = this.findParentType(type, classMetadata);\n                var members = classMetadata ? classMetadata['members'] : null;\n                var ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var ctor = ctorData.find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var rawParameterTypes = ctor['parameters'] || [];\n                    var parameterDecorators_1 = this.simplify(type, ctor['parameterDecorators'] || []);\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var nestedResult = [];\n                        var paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, __spread(decorators));\n                        }\n                        parameters_1.push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    StaticReflector.prototype._methodNames = function (type) {\n        var methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    methodNames[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var propData = members_2[propName];\n                var isMethod = propData.some(function (a) { return a['__symbolic'] == 'method'; });\n                methodNames[propName] = methodNames[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    StaticReflector.prototype._staticMembers = function (type) {\n        var staticMembers = this.staticCache.get(type);\n        if (!staticMembers) {\n            var classMetadata = this.getTypeMetadata(type);\n            var staticMemberData = classMetadata['statics'] || {};\n            staticMembers = Object.keys(staticMemberData);\n            this.staticCache.set(type, staticMembers);\n        }\n        return staticMembers;\n    };\n    StaticReflector.prototype.findParentType = function (type, classMetadata) {\n        var parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    StaticReflector.prototype.guards = function (type) {\n        var e_1, _a;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"guards received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return {};\n        }\n        var staticMembers = this._staticMembers(type);\n        var result = {};\n        try {\n            for (var staticMembers_1 = __values(staticMembers), staticMembers_1_1 = staticMembers_1.next(); !staticMembers_1_1.done; staticMembers_1_1 = staticMembers_1.next()) {\n                var name_1 = staticMembers_1_1.value;\n                if (name_1.endsWith(TYPEGUARD_POSTFIX)) {\n                    var property = name_1.substr(0, name_1.length - TYPEGUARD_POSTFIX.length);\n                    var value = void 0;\n                    if (property.endsWith(USE_IF)) {\n                        property = name_1.substr(0, property.length - USE_IF.length);\n                        value = USE_IF;\n                    }\n                    else {\n                        value = this.getStaticSymbol(type.filePath, type.name, [name_1]);\n                    }\n                    result[property] = value;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (staticMembers_1_1 && !staticMembers_1_1.done && (_a = staticMembers_1.return)) _a.call(staticMembers_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return result;\n    };\n    StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, __spread([void 0], args)))(); });\n    };\n    StaticReflector.prototype._registerFunction = function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    StaticReflector.prototype.initializeConversionMap = function () {\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * Simplify but discard any errors\n     */\n    StaticReflector.prototype.trySimplify = function (context, value) {\n        var originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error$$1, fileName) { };\n        var result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /** @internal */\n    StaticReflector.prototype.simplify = function (context, value, lazy) {\n        if (lazy === void 0) { lazy = false; }\n        var self = this;\n        var scope = BindingScope$1.empty;\n        var calling = new Map();\n        function simplifyInContext(context, value, depth, references) {\n            function resolveReferenceValue(staticSymbol) {\n                var resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            function simplifyEagerly(value) {\n                return simplifyInContext(context, value, depth, 0);\n            }\n            function simplifyLazily(value) {\n                return simplifyInContext(context, value, depth, references + 1);\n            }\n            function simplifyNested(nestedContext, value) {\n                if (nestedContext === context) {\n                    // If the context hasn't changed let the exception propagate unmodified.\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                try {\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                catch (e) {\n                    if (isMetadataError(e)) {\n                        // Propagate the message text up but add a message to the chain that explains how we got\n                        // here.\n                        // e.chain implies e.symbol\n                        var summaryMsg = e.chain ? 'references \\'' + e.symbol.name + '\\'' : errorSummary(e);\n                        var summary = \"'\" + nestedContext.name + \"' \" + summaryMsg;\n                        var chain = { message: summary, position: e.position, next: e.chain };\n                        // TODO(chuckj): retrieve the position information indirectly from the collectors node\n                        // map if the metadata is from a .ts file.\n                        self.error({\n                            message: e.message,\n                            advise: e.advise,\n                            context: e.context, chain: chain,\n                            symbol: nestedContext\n                        }, context);\n                    }\n                    else {\n                        // It is probably an internal error.\n                        throw e;\n                    }\n                }\n            }\n            function simplifyCall(functionSymbol, targetFunction, args, targetExpression) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        self.error({\n                            message: 'Recursion is not supported',\n                            summary: \"called '\" + functionSymbol.name + \"' recursively\",\n                            value: targetFunction\n                        }, functionSymbol);\n                    }\n                    try {\n                        var value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var parameters = targetFunction['parameters'];\n                            var defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyNested(context, arg); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, __spread(defaults.slice(args.length).map(function (value) { return simplify(value); })));\n                            }\n                            calling.set(functionSymbol, true);\n                            var functionScope = BindingScope$1.build();\n                            for (var i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var oldScope = scope;\n                            var result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyNested(functionSymbol, value_1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                var position = undefined;\n                if (targetExpression && targetExpression.__symbolic == 'resolved') {\n                    var line = targetExpression.line;\n                    var character = targetExpression.character;\n                    var fileName = targetExpression.fileName;\n                    if (fileName != null && line != null && character != null) {\n                        position = { fileName: fileName, line: line, column: character };\n                    }\n                }\n                self.error({\n                    message: FUNCTION_CALL_NOT_SUPPORTED,\n                    context: functionSymbol,\n                    value: targetFunction, position: position\n                }, context);\n            }\n            function simplify(expression) {\n                var e_2, _a, e_3, _b;\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var result_2 = [];\n                    try {\n                        for (var _c = __values(expression), _d = _c.next(); !_d.done; _d = _c.next()) {\n                            var item = _d.value;\n                            // Check for a spread expression\n                            if (item && item.__symbolic === 'spread') {\n                                // We call with references as 0 because we require the actual value and cannot\n                                // tolerate a reference here.\n                                var spreadArray = simplifyEagerly(item.expression);\n                                if (Array.isArray(spreadArray)) {\n                                    try {\n                                        for (var spreadArray_1 = __values(spreadArray), spreadArray_1_1 = spreadArray_1.next(); !spreadArray_1_1.done; spreadArray_1_1 = spreadArray_1.next()) {\n                                            var spreadItem = spreadArray_1_1.value;\n                                            result_2.push(spreadItem);\n                                        }\n                                    }\n                                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                                    finally {\n                                        try {\n                                            if (spreadArray_1_1 && !spreadArray_1_1.done && (_b = spreadArray_1.return)) _b.call(spreadArray_1);\n                                        }\n                                        finally { if (e_3) throw e_3.error; }\n                                    }\n                                    continue;\n                                }\n                            }\n                            var value_2 = simplify(item);\n                            if (shouldIgnore(value_2)) {\n                                continue;\n                            }\n                            result_2.push(value_2);\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var staticSymbol = expression;\n                        var declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyNested(staticSymbol, declarationValue);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var indexTarget = simplifyEagerly(expression['expression']);\n                                var index = simplifyEagerly(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var member = expression['member'];\n                                var selectContext = context;\n                                var selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyNested(selectContext, declarationValue);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyNested(selectContext, selectTarget[member]);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references, as symbol references have\n                                // been converted into 'resolved'\n                                // in the StaticSymbolResolver.\n                                var name_2 = expression['name'];\n                                var localValue = scope.resolve(name_2);\n                                if (localValue != BindingScope$1.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'resolved':\n                                try {\n                                    return simplify(expression.symbol);\n                                }\n                                catch (e) {\n                                    // If an error is reported evaluating the symbol record the position of the\n                                    // reference in the error so it can\n                                    // be reported in the error message generated from the exception.\n                                    if (isMetadataError(e) && expression.fileName != null &&\n                                        expression.line != null && expression.character != null) {\n                                        e.position = {\n                                            fileName: expression.fileName,\n                                            line: expression.line,\n                                            column: expression.character\n                                        };\n                                    }\n                                    throw e;\n                                }\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var argExpressions = expression['arguments'] || [];\n                                    var converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var args = argExpressions.map(function (arg) { return simplifyNested(context, arg); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions, expression['expression']);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var message = expression.message;\n                                if (expression['line'] != null) {\n                                    self.error({\n                                        message: message,\n                                        context: expression.context,\n                                        value: expression,\n                                        position: {\n                                            fileName: expression['fileName'],\n                                            line: expression['line'],\n                                            column: expression['character']\n                                        }\n                                    }, context);\n                                }\n                                else {\n                                    self.error({ message: message, context: expression.context }, context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE$1 && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyLazily(value);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            return simplify(value);\n        }\n        var result;\n        try {\n            result = simplifyInContext(context, value, 0, lazy ? 1 : 0);\n        }\n        catch (e) {\n            if (this.errorRecorder) {\n                this.reportError(e, context);\n            }\n            else {\n                throw formatMetadataError(e, context);\n            }\n        }\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    StaticReflector.prototype.getTypeMetadata = function (type) {\n        var resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    StaticReflector.prototype.reportError = function (error$$1, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(formatMetadataError(error$$1, context), (context && context.filePath) || path);\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    StaticReflector.prototype.error = function (_a, reportingContext) {\n        var message = _a.message, summary = _a.summary, advise = _a.advise, position = _a.position, context = _a.context, value = _a.value, symbol = _a.symbol, chain = _a.chain;\n        this.reportError(metadataError(message, summary, advise, position, symbol, context, chain), reportingContext);\n    };\n    return StaticReflector;\n}());\nvar METADATA_ERROR = 'ngMetadataError';\nfunction metadataError(message, summary, advise, position, symbol, context, chain) {\n    var error$$1 = syntaxError(message);\n    error$$1[METADATA_ERROR] = true;\n    if (advise)\n        error$$1.advise = advise;\n    if (position)\n        error$$1.position = position;\n    if (summary)\n        error$$1.summary = summary;\n    if (context)\n        error$$1.context = context;\n    if (chain)\n        error$$1.chain = chain;\n    if (symbol)\n        error$$1.symbol = symbol;\n    return error$$1;\n}\nfunction isMetadataError(error$$1) {\n    return !!error$$1[METADATA_ERROR];\n}\nvar REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\nvar VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\nvar DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\nvar COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\nvar FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\nvar REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\nvar LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\nfunction expandedMessage(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"References to a non-exported class are not supported in decorators but \" + context.className + \" was referenced.\";\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n        case COULD_NOT_RESOLVE_TYPE:\n            if (context && context.typeName) {\n                return \"Could not resolve type \" + context.typeName;\n            }\n            break;\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (context && context.name) {\n                return \"Function calls are not supported in decorators but '\" + context.name + \"' was called\";\n            }\n            return 'Function calls are not supported in decorators';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Reference to a local (non-exported) symbols are not supported in decorators but '\" + context.name + \"' was referenced\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Function expressions are not supported in decorators\";\n    }\n    return message;\n}\nfunction messageAdvise(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"Consider exporting '\" + context.className + \"'\";\n            }\n            break;\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Consider simplifying to avoid destructuring';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Consider exporting '\" + context.name + \"'\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Consider changing the function expression into an exported function\";\n    }\n    return undefined;\n}\nfunction errorSummary(error$$1) {\n    if (error$$1.summary) {\n        return error$$1.summary;\n    }\n    switch (error$$1.message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (error$$1.context && error$$1.context.className) {\n                return \"references non-exported class \" + error$$1.context.className;\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'is not initialized';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'is a destructured variable';\n        case COULD_NOT_RESOLVE_TYPE:\n            return 'could not be resolved';\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (error$$1.context && error$$1.context.name) {\n                return \"calls '\" + error$$1.context.name + \"'\";\n            }\n            return \"calls a function\";\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (error$$1.context && error$$1.context.name) {\n                return \"references local variable \" + error$$1.context.name;\n            }\n            return \"references a local variable\";\n    }\n    return 'contains the error';\n}\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var result = {};\n    Object.keys(input).forEach(function (key) {\n        var value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\nvar BindingScope$1 = /** @class */ (function () {\n    function BindingScope() {\n    }\n    BindingScope.build = function () {\n        var current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = /** @class */ (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    PopulatedScope.prototype.resolve = function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope$1.missing;\n    };\n    return PopulatedScope;\n}(BindingScope$1));\nfunction formatMetadataMessageChain(chain, advise) {\n    var expanded = expandedMessage(chain.message, chain.context);\n    var nesting = chain.symbol ? \" in '\" + chain.symbol.name + \"'\" : '';\n    var message = \"\" + expanded + nesting;\n    var position = chain.position;\n    var next = chain.next ?\n        formatMetadataMessageChain(chain.next, advise) :\n        advise ? { message: advise } : undefined;\n    return { message: message, position: position, next: next };\n}\nfunction formatMetadataError(e, context) {\n    if (isMetadataError(e)) {\n        // Produce a formatted version of the and leaving enough information in the original error\n        // to recover the formatting information to eventually produce a diagnostic error message.\n        var position = e.position;\n        var chain = {\n            message: \"Error during template compile of '\" + context.name + \"'\",\n            position: position,\n            next: { message: e.message, next: e.chain, context: e.context, symbol: e.symbol }\n        };\n        var advise = e.advise || messageAdvise(e.message, e.context);\n        return formattedError(formatMetadataMessageChain(chain, advise));\n    }\n    return e;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotSummaryResolver = /** @class */ (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        // Note: this will only contain StaticSymbols without members!\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        // Note: this will only contain StaticSymbols without members!\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    AotSummaryResolver.prototype.toSummaryFileName = function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    AotSummaryResolver.prototype.fromSummaryFileName = function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n        var rootSymbol = staticSymbol.members.length ?\n            this.staticSymbolCache.get(staticSymbol.filePath, staticSymbol.name) :\n            staticSymbol;\n        var summary = this.summaryCache.get(rootSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = this.summaryCache.get(staticSymbol);\n        }\n        return (rootSymbol === staticSymbol && summary) || null;\n    };\n    AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return this.importAs.get(staticSymbol);\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    AotSummaryResolver.prototype.addSummary = function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n        var _this = this;\n        var hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var json = null;\n        if (this.isLibraryFile(filePath)) {\n            var summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var translations = options.translations || '';\n    var urlResolver = createAotUrlResolver(compilerHost);\n    var symbolCache = new StaticSymbolCache();\n    var summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var htmlParser;\n    if (!!options.enableIvy) {\n        // Ivy handles i18n at the compiler level so we must use a regular parser\n        htmlParser = new HtmlParser();\n    }\n    else {\n        htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    }\n    var config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var expressionParser = new Parser(new Lexer());\n    var elementSchemaRegistry = new DomElementSchemaRegistry();\n    var tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var viewCompiler = new ViewCompiler(staticReflector);\n    var typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new InjectableCompiler(staticReflector, !!options.enableIvy), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\nvar SummaryResolver = /** @class */ (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = /** @class */ (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    JitSummaryResolver.prototype.isLibraryFile = function () { return false; };\n    JitSummaryResolver.prototype.toSummaryFileName = function (fileName) { return fileName; };\n    JitSummaryResolver.prototype.fromSummaryFileName = function (fileName) { return fileName; };\n    JitSummaryResolver.prototype.resolveSummary = function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    JitSummaryResolver.prototype.getSymbolsOf = function () { return []; };\n    JitSummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n    JitSummaryResolver.prototype.getKnownModuleName = function (fileName) { return null; };\n    JitSummaryResolver.prototype.addSummary = function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction interpretStatements(statements, reflector) {\n    var ctx = new _ExecutionContext(null, null, null, new Map());\n    var visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var childCtx = ctx.createChildWihtLocalVars();\n    for (var i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = /** @class */ (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = /** @class */ (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[method.name] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = /** @class */ (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        var initialValue = stmt.value ? stmt.value.visitExpression(this, ctx) : undefined;\n        ctx.vars.set(stmt.name, initialValue);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var value = expr.value.visitExpression(this, ctx);\n        var currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = currCtx.parent;\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    StatementInterpreter.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        throw new Error('Cannot interpret a WrappedNodeExpr.');\n    };\n    StatementInterpreter.prototype.visitTypeofExpr = function (ast, ctx) {\n        throw new Error('Cannot interpret a TypeofExpr');\n    };\n    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n        var varName = ast.name;\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = currCtx.parent;\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var receiver = expr.receiver.visitExpression(this, ctx);\n        var index = expr.index.visitExpression(this, ctx);\n        var value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n        var receiver = expr.receiver.visitExpression(this, ctx);\n        var value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        var receiver = expr.receiver.visitExpression(this, ctx);\n        var args = this.visitAllExpressions(expr.args, ctx);\n        var result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, __spread(args));\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, __spread(args));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[expr.name].apply(receiver, args);\n        }\n        return result;\n    };\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n        var args = this.visitAllExpressions(stmt.args, ctx);\n        var fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n        var condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            var childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n    StatementInterpreter.prototype.visitJSDocCommentStmt = function (stmt, context) { return null; };\n    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n        var args = this.visitAllExpressions(ast.args, ctx);\n        var clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, __spread([void 0], args)))();\n    };\n    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n        var paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        var paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var _this = this;\n        var lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n        var result;\n        var receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n        var receiver = ast.receiver.visitExpression(this, ctx);\n        var prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n        var values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n        for (var i = 0; i < statements.length; i++) {\n            var stmt = statements[i];\n            var val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * @security  When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = /** @class */ (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n        this._addedAotSummaries = new Set();\n    }\n    JitCompiler.prototype.compileModuleSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    JitCompiler.prototype.getComponentFactory = function (component) {\n        var summary = this._metadataResolver.getDirectiveSummary(component);\n        return summary.componentFactory;\n    };\n    JitCompiler.prototype.loadAotSummaries = function (summaries) {\n        this.clearCache();\n        this._addAotSummaries(summaries);\n    };\n    JitCompiler.prototype._addAotSummaries = function (fn$$1) {\n        if (this._addedAotSummaries.has(fn$$1)) {\n            return;\n        }\n        this._addedAotSummaries.add(fn$$1);\n        var summaries = fn$$1();\n        for (var i = 0; i < summaries.length; i++) {\n            var entry = summaries[i];\n            if (typeof entry === 'function') {\n                this._addAotSummaries(entry);\n            }\n            else {\n                var summary = entry;\n                this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n            }\n        }\n    };\n    JitCompiler.prototype.hasAotSummary = function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    JitCompiler.prototype._filterJitIdentifiers = function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n        var _this = this;\n        var loading = [];\n        var mainNgModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var moduleMeta = _this._metadataResolver.getNgModuleMetadata(nestedNgModule);\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    JitCompiler.prototype._compileModule = function (moduleType) {\n        var ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n        if (!ngModuleFactory) {\n            var moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType);\n            // Always provide a bound Compiler\n            var extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var outputCtx = createOutputContext();\n            var compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n        var _this = this;\n        var ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n        var moduleByJitDirective = new Map();\n        var templates = new Set();\n        var transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localMod);\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(dirMeta.componentFactory);\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localMod);\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var moduleMeta = moduleByJitDirective.get(entryComponentType.componentType);\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType)) {\n                    var moduleMeta = moduleByJitDirective.get(entryComponentType.componentType);\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    JitCompiler.prototype.clearCacheFor = function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    JitCompiler.prototype.clearCache = function () {\n        // Note: don't clear the _addedAotSummaries, as they don't change!\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, compMeta.componentFactory.viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n        var compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    JitCompiler.prototype._compileTemplate = function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var compMeta = template.compMeta;\n        var externalStylesheetsByModuleUrl = new Map();\n        var outputContext = createOutputContext();\n        var componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta);\n        compMeta.template.externalStylesheets.forEach(function (stylesheetMeta) {\n            var compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(stylesheetMeta.moduleUrl, compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var viewClass = evalResult[compileResult.viewClassVar];\n        var rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    JitCompiler.prototype._parseTemplate = function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var preserveWhitespaces = compMeta.template.preserveWhitespaces;\n        var directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, compMeta.template.htmlAst, directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, compMeta.template), preserveWhitespaces);\n    };\n    JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n            var nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    JitCompiler.prototype._interpretOrJit = function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = /** @class */ (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = null;\n        this.isCompiled = false;\n    }\n    CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        this.compMeta.componentViewType.setDelegate(viewClass);\n        for (var prop in rendererType) {\n            this.compMeta.rendererType[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\nfunction createOutputContext() {\n    var importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1, constantPool: new ConstantPool() };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n */\nvar CompileReflector = /** @class */ (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {@link UrlResolver} with no package prefix.\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\nvar UrlResolver = /** @class */ (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    UrlResolverImpl.prototype.resolve = function (baseUrl, url) {\n        var resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var resolvedParts = _split(resolvedUrl);\n        var prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n */\nfunction getUrlScheme(url) {\n    var match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n// The code below is adapted from Traceur:\n// https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param opt_scheme The scheme such as 'http'.\n * @param opt_userInfo The user name before the '@'.\n * @param opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param opt_port The port number.\n * @param opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param opt_queryData The URI-encoded query data.\n * @param opt_fragment The URI-encoded fragment identifier.\n * @return The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * @internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' + // scheme - ignore special characters\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' + // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' + // port\n    ')?' +\n    '([^?#]+)?' + // path\n    '(?:\\\\?([^#]*))?' + // query\n    '(?:#(.*))?' + // fragment\n    '$');\n/**\n * The index of each URI component in the return value of goog.uri.utils.split.\n * @enum {number}\n */\nvar _ComponentIndex;\n(function (_ComponentIndex) {\n    _ComponentIndex[_ComponentIndex[\"Scheme\"] = 1] = \"Scheme\";\n    _ComponentIndex[_ComponentIndex[\"UserInfo\"] = 2] = \"UserInfo\";\n    _ComponentIndex[_ComponentIndex[\"Domain\"] = 3] = \"Domain\";\n    _ComponentIndex[_ComponentIndex[\"Port\"] = 4] = \"Port\";\n    _ComponentIndex[_ComponentIndex[\"Path\"] = 5] = \"Path\";\n    _ComponentIndex[_ComponentIndex[\"QueryData\"] = 6] = \"QueryData\";\n    _ComponentIndex[_ComponentIndex[\"Fragment\"] = 7] = \"Fragment\";\n})(_ComponentIndex || (_ComponentIndex = {}));\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param uri The URI string to examine.\n * @return Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return uri.match(_splitRe);\n}\n/**\n  * Removes dot segments in given path component, as described in\n  * RFC 3986, section 5.2.4.\n  *\n  * @param path A non-empty path component.\n  * @return Path component with removed dot segments.\n  */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var leadingSlash = path[0] == '/' ? '/' : '';\n    var trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var segments = path.split('/');\n    var out = [];\n    var up = 0;\n    for (var pos = 0; pos < segments.length; pos++) {\n        var segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param base The URL acting as the base URL.\n * @param to The URL to resolve.\n */\nfunction _resolveUrl(base, url) {\n    var parts = _split(encodeURI(url));\n    var baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = /** @class */ (function () {\n    function ResourceLoader() {\n    }\n    ResourceLoader.prototype.get = function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Extractor = /** @class */ (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    Extractor.prototype.extract = function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var errors = [];\n            files.forEach(function (file) {\n                var compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var html = compMeta.template.template;\n                    // Template URL points to either an HTML or TS file depending on\n                    // whether the file is used with `templateUrl:` or `template:`,\n                    // respectively.\n                    var templateUrl = compMeta.template.templateUrl;\n                    var interpolationConfig = InterpolationConfig.fromArray(compMeta.template.interpolation);\n                    errors.push.apply(errors, __spread(_this.messageBundle.updateFromTemplate(html, templateUrl, interpolationConfig)));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    Extractor.create = function (host, locale) {\n        var htmlParser = new HtmlParser();\n        var urlResolver = createAotUrlResolver(host);\n        var symbolCache = new StaticSymbolCache();\n        var summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var elementSchemaRegistry = new DomElementSchemaRegistry();\n        var resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Processes `Target`s with a given set of directives and performs a binding operation, which\n * returns an object similar to TypeScript's `ts.TypeChecker` that contains knowledge about the\n * target.\n */\nvar R3TargetBinder = /** @class */ (function () {\n    function R3TargetBinder(directiveMatcher) {\n        this.directiveMatcher = directiveMatcher;\n    }\n    /**\n     * Perform a binding operation on the given `Target` and return a `BoundTarget` which contains\n     * metadata about the types referenced in the template.\n     */\n    R3TargetBinder.prototype.bind = function (target) {\n        if (!target.template) {\n            // TODO(alxhub): handle targets which contain things like HostBindings, etc.\n            throw new Error('Binding without a template not yet supported');\n        }\n        // First, parse the template into a `Scope` structure. This operation captures the syntactic\n        // scopes in the template and makes them available for later use.\n        var scope = Scope.apply(target.template);\n        // Next, perform directive matching on the template using the `DirectiveBinder`. This returns:\n        //   - directives: Map of nodes (elements & ng-templates) to the directives on them.\n        //   - bindings: Map of inputs, outputs, and attributes to the directive/element that claims\n        //     them. TODO(alxhub): handle multiple directives claiming an input/output/etc.\n        //   - references: Map of #references to their targets.\n        var _a = DirectiveBinder.apply(target.template, this.directiveMatcher), directives = _a.directives, bindings = _a.bindings, references = _a.references;\n        // Finally, run the TemplateBinder to bind references, variables, and other entities within the\n        // template. This extracts all the metadata that doesn't depend on directive matching.\n        var _b = TemplateBinder.apply(target.template, scope), expressions = _b.expressions, symbols = _b.symbols, nestingLevel = _b.nestingLevel;\n        return new R3BoundTarget(target, directives, bindings, references, expressions, symbols, nestingLevel);\n    };\n    return R3TargetBinder;\n}());\n/**\n * Represents a binding scope within a template.\n *\n * Any variables, references, or other named entities declared within the template will\n * be captured and available by name in `namedEntities`. Additionally, child templates will\n * be analyzed and have their child `Scope`s available in `childScopes`.\n */\nvar Scope = /** @class */ (function () {\n    function Scope(parentScope) {\n        this.parentScope = parentScope;\n        /**\n         * Named members of the `Scope`, such as `Reference`s or `Variable`s.\n         */\n        this.namedEntities = new Map();\n        /**\n         * Child `Scope`s for immediately nested `Template`s.\n         */\n        this.childScopes = new Map();\n    }\n    /**\n     * Process a template (either as a `Template` sub-template with variables, or a plain array of\n     * template `Node`s) and construct its `Scope`.\n     */\n    Scope.apply = function (template) {\n        var scope = new Scope();\n        scope.ingest(template);\n        return scope;\n    };\n    /**\n     * Internal method to process the template and populate the `Scope`.\n     */\n    Scope.prototype.ingest = function (template) {\n        var _this = this;\n        if (template instanceof Template) {\n            // Variables on an <ng-template> are defined in the inner scope.\n            template.variables.forEach(function (node) { return _this.visitVariable(node); });\n            // Process the nodes of the template.\n            template.children.forEach(function (node) { return node.visit(_this); });\n        }\n        else {\n            // No overarching `Template` instance, so process the nodes directly.\n            template.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    Scope.prototype.visitElement = function (element) {\n        var _this = this;\n        // `Element`s in the template may have `Reference`s which are captured in the scope.\n        element.references.forEach(function (node) { return _this.visitReference(node); });\n        // Recurse into the `Element`'s children.\n        element.children.forEach(function (node) { return node.visit(_this); });\n    };\n    Scope.prototype.visitTemplate = function (template) {\n        var _this = this;\n        // References on a <ng-template> are defined in the outer scope, so capture them before\n        // processing the template's child scope.\n        template.references.forEach(function (node) { return _this.visitReference(node); });\n        // Next, create an inner scope and process the template within it.\n        var scope = new Scope(this);\n        scope.ingest(template);\n        this.childScopes.set(template, scope);\n    };\n    Scope.prototype.visitVariable = function (variable) {\n        // Declare the variable if it's not already.\n        this.maybeDeclare(variable);\n    };\n    Scope.prototype.visitReference = function (reference) {\n        // Declare the variable if it's not already.\n        this.maybeDeclare(reference);\n    };\n    // Unused visitors.\n    Scope.prototype.visitContent = function (content) { };\n    Scope.prototype.visitBoundAttribute = function (attr) { };\n    Scope.prototype.visitBoundEvent = function (event) { };\n    Scope.prototype.visitBoundText = function (text) { };\n    Scope.prototype.visitText = function (text) { };\n    Scope.prototype.visitTextAttribute = function (attr) { };\n    Scope.prototype.visitIcu = function (icu) { };\n    Scope.prototype.maybeDeclare = function (thing) {\n        // Declare something with a name, as long as that name isn't taken.\n        if (!this.namedEntities.has(thing.name)) {\n            this.namedEntities.set(thing.name, thing);\n        }\n    };\n    /**\n     * Look up a variable within this `Scope`.\n     *\n     * This can recurse into a parent `Scope` if it's available.\n     */\n    Scope.prototype.lookup = function (name) {\n        if (this.namedEntities.has(name)) {\n            // Found in the local scope.\n            return this.namedEntities.get(name);\n        }\n        else if (this.parentScope !== undefined) {\n            // Not in the local scope, but there's a parent scope so check there.\n            return this.parentScope.lookup(name);\n        }\n        else {\n            // At the top level and it wasn't found.\n            return null;\n        }\n    };\n    /**\n     * Get the child scope for a `Template`.\n     *\n     * This should always be defined.\n     */\n    Scope.prototype.getChildScope = function (template) {\n        var res = this.childScopes.get(template);\n        if (res === undefined) {\n            throw new Error(\"Assertion error: child scope for \" + template + \" not found\");\n        }\n        return res;\n    };\n    return Scope;\n}());\n/**\n * Processes a template and matches directives on nodes (elements and templates).\n *\n * Usually used via the static `apply()` method.\n */\nvar DirectiveBinder = /** @class */ (function () {\n    function DirectiveBinder(matcher, directives, bindings, references) {\n        this.matcher = matcher;\n        this.directives = directives;\n        this.bindings = bindings;\n        this.references = references;\n    }\n    /**\n     * Process a template (list of `Node`s) and perform directive matching against each node.\n     *\n     * @param template the list of template `Node`s to match (recursively).\n     * @param selectorMatcher a `SelectorMatcher` containing the directives that are in scope for\n     * this template.\n     * @returns three maps which contain information about directives in the template: the\n     * `directives` map which lists directives matched on each node, the `bindings` map which\n     * indicates which directives claimed which bindings (inputs, outputs, etc), and the `references`\n     * map which resolves #references (`Reference`s) within the template to the named directive or\n     * template node.\n     */\n    DirectiveBinder.apply = function (template, selectorMatcher) {\n        var directives = new Map();\n        var bindings = new Map();\n        var references = new Map();\n        var matcher = new DirectiveBinder(selectorMatcher, directives, bindings, references);\n        matcher.ingest(template);\n        return { directives: directives, bindings: bindings, references: references };\n    };\n    DirectiveBinder.prototype.ingest = function (template) {\n        var _this = this;\n        template.forEach(function (node) { return node.visit(_this); });\n    };\n    DirectiveBinder.prototype.visitElement = function (element) { this.visitElementOrTemplate(element.name, element); };\n    DirectiveBinder.prototype.visitTemplate = function (template) { this.visitElementOrTemplate('ng-template', template); };\n    DirectiveBinder.prototype.visitElementOrTemplate = function (tag, node) {\n        var _this = this;\n        // First, determine the HTML shape of the node for the purpose of directive matching.\n        // Do this by building up a `CssSelector` for the node.\n        var cssSelector = new CssSelector();\n        cssSelector.setElement(tag);\n        // Add attributes to the CSS selector.\n        var attrs = getAttrsForDirectiveMatching(node);\n        Object.getOwnPropertyNames(attrs).forEach(function (name) {\n            var value = attrs[name];\n            cssSelector.addAttribute(name, value);\n            // Treat the 'class' attribute specially.\n            if (name.toLowerCase() === 'class') {\n                var classes = value.trim().split(/\\s+/g);\n                classes.forEach(function (className) { return cssSelector.addClassName(className); });\n            }\n        });\n        // Next, use the `SelectorMatcher` to get the list of directives on the node.\n        var directives = [];\n        this.matcher.match(cssSelector, function (_, directive) { return directives.push(directive); });\n        if (directives.length > 0) {\n            this.directives.set(node, directives);\n        }\n        // Resolve any references that are created on this node.\n        node.references.forEach(function (ref) {\n            var dirTarget = null;\n            // If the reference expression is empty, then it matches the \"primary\" directive on the node\n            // (if there is one). Otherwise it matches the host node itself (either an element or\n            // <ng-template> node).\n            if (ref.value.trim() === '') {\n                // This could be a reference to a component if there is one.\n                dirTarget = directives.find(function (dir) { return dir.isComponent; }) || null;\n            }\n            else {\n                // This is a reference to a directive exported via exportAs. One should exist.\n                dirTarget = directives.find(function (dir) { return dir.exportAs === ref.value; }) || null;\n                // Check if a matching directive was found, and error if it wasn't.\n                if (dirTarget === null) {\n                    // TODO(alxhub): Return an error value here that can be used for template validation.\n                    throw new Error(\"Assertion error: failed to find directive with exportAs: \" + ref.value);\n                }\n            }\n            if (dirTarget !== null) {\n                // This reference points to a directive.\n                _this.references.set(ref, { directive: dirTarget, node: node });\n            }\n            else {\n                // This reference points to the node itself.\n                _this.references.set(ref, node);\n            }\n        });\n        // Associate bindings on the node with directives or with the node itself.\n        // Inputs:\n        __spread(node.attributes, node.inputs).forEach(function (binding) {\n            var dir = directives.find(function (dir) { return dir.inputs.hasOwnProperty(binding.name); });\n            if (dir !== undefined) {\n                _this.bindings.set(binding, dir);\n            }\n            else {\n                _this.bindings.set(binding, node);\n            }\n        });\n        // Outputs:\n        node.outputs.forEach(function (binding) {\n            var dir = directives.find(function (dir) { return dir.outputs.hasOwnProperty(binding.name); });\n            if (dir !== undefined) {\n                _this.bindings.set(binding, dir);\n            }\n            else {\n                _this.bindings.set(binding, node);\n            }\n        });\n        // Recurse into the node's children.\n        node.children.forEach(function (child) { return child.visit(_this); });\n    };\n    // Unused visitors.\n    DirectiveBinder.prototype.visitContent = function (content) { };\n    DirectiveBinder.prototype.visitVariable = function (variable) { };\n    DirectiveBinder.prototype.visitReference = function (reference) { };\n    DirectiveBinder.prototype.visitTextAttribute = function (attribute) { };\n    DirectiveBinder.prototype.visitBoundAttribute = function (attribute) { };\n    DirectiveBinder.prototype.visitBoundEvent = function (attribute) { };\n    DirectiveBinder.prototype.visitBoundAttributeOrEvent = function (node) { };\n    DirectiveBinder.prototype.visitText = function (text) { };\n    DirectiveBinder.prototype.visitBoundText = function (text) { };\n    DirectiveBinder.prototype.visitIcu = function (icu) { };\n    return DirectiveBinder;\n}());\n/**\n * Processes a template and extract metadata about expressions and symbols within.\n *\n * This is a companion to the `DirectiveBinder` that doesn't require knowledge of directives matched\n * within the template in order to operate.\n *\n * Expressions are visited by the superclass `RecursiveAstVisitor`, with custom logic provided\n * by overridden methods from that visitor.\n */\nvar TemplateBinder = /** @class */ (function (_super) {\n    __extends(TemplateBinder, _super);\n    function TemplateBinder(bindings, symbols, nestingLevel, scope, template, level) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        _this.symbols = symbols;\n        _this.nestingLevel = nestingLevel;\n        _this.scope = scope;\n        _this.template = template;\n        _this.level = level;\n        // Save a bit of processing time by constructing this closure in advance.\n        _this.visitNode = function (node) { return node.visit(_this); };\n        return _this;\n    }\n    /**\n     * Process a template and extract metadata about expressions and symbols within.\n     *\n     * @param template the nodes of the template to process\n     * @param scope the `Scope` of the template being processed.\n     * @returns three maps which contain metadata about the template: `expressions` which interprets\n     * special `AST` nodes in expressions as pointing to references or variables declared within the\n     * template, `symbols` which maps those variables and references to the nested `Template` which\n     * declares them, if any, and `nestingLevel` which associates each `Template` with a integer\n     * nesting level (how many levels deep within the template structure the `Template` is), starting\n     * at 1.\n     */\n    TemplateBinder.apply = function (template, scope) {\n        var expressions = new Map();\n        var symbols = new Map();\n        var nestingLevel = new Map();\n        // The top-level template has nesting level 0.\n        var binder = new TemplateBinder(expressions, symbols, nestingLevel, scope, template instanceof Template ? template : null, 0);\n        binder.ingest(template);\n        return { expressions: expressions, symbols: symbols, nestingLevel: nestingLevel };\n    };\n    TemplateBinder.prototype.ingest = function (template) {\n        if (template instanceof Template) {\n            // For <ng-template>s, process inputs, outputs, variables, and child nodes. References were\n            // processed in the scope of the containing template.\n            template.inputs.forEach(this.visitNode);\n            template.outputs.forEach(this.visitNode);\n            template.variables.forEach(this.visitNode);\n            template.children.forEach(this.visitNode);\n            // Set the nesting level.\n            this.nestingLevel.set(template, this.level);\n        }\n        else {\n            // Visit each node from the top-level template.\n            template.forEach(this.visitNode);\n        }\n    };\n    TemplateBinder.prototype.visitElement = function (element) {\n        // Vist the inputs, outputs, and children of the element.\n        element.inputs.forEach(this.visitNode);\n        element.outputs.forEach(this.visitNode);\n        element.children.forEach(this.visitNode);\n    };\n    TemplateBinder.prototype.visitTemplate = function (template) {\n        // First, visit the inputs, outputs of the template node.\n        template.inputs.forEach(this.visitNode);\n        template.outputs.forEach(this.visitNode);\n        // References are also evaluated in the outer context.\n        template.references.forEach(this.visitNode);\n        // Next, recurse into the template using its scope, and bumping the nesting level up by one.\n        var childScope = this.scope.getChildScope(template);\n        var binder = new TemplateBinder(this.bindings, this.symbols, this.nestingLevel, childScope, template, this.level + 1);\n        binder.ingest(template);\n    };\n    TemplateBinder.prototype.visitVariable = function (variable) {\n        // Register the `Variable` as a symbol in the current `Template`.\n        if (this.template !== null) {\n            this.symbols.set(variable, this.template);\n        }\n    };\n    TemplateBinder.prototype.visitReference = function (reference) {\n        // Register the `Reference` as a symbol in the current `Template`.\n        if (this.template !== null) {\n            this.symbols.set(reference, this.template);\n        }\n    };\n    // Unused template visitors\n    TemplateBinder.prototype.visitText = function (text) { };\n    TemplateBinder.prototype.visitContent = function (content) { };\n    TemplateBinder.prototype.visitTextAttribute = function (attribute) { };\n    TemplateBinder.prototype.visitIcu = function (icu) { };\n    // The remaining visitors are concerned with processing AST expressions within template bindings\n    TemplateBinder.prototype.visitBoundAttribute = function (attribute) { attribute.value.visit(this); };\n    TemplateBinder.prototype.visitBoundEvent = function (event) { event.handler.visit(this); };\n    TemplateBinder.prototype.visitBoundText = function (text) { text.value.visit(this); };\n    // These five types of AST expressions can refer to expression roots, which could be variables\n    // or references in the current scope.\n    TemplateBinder.prototype.visitPropertyRead = function (ast, context) {\n        this.maybeMap(context, ast, ast.name);\n        return _super.prototype.visitPropertyRead.call(this, ast, context);\n    };\n    TemplateBinder.prototype.visitSafePropertyRead = function (ast, context) {\n        this.maybeMap(context, ast, ast.name);\n        return _super.prototype.visitSafePropertyRead.call(this, ast, context);\n    };\n    TemplateBinder.prototype.visitPropertyWrite = function (ast, context) {\n        this.maybeMap(context, ast, ast.name);\n        return _super.prototype.visitPropertyWrite.call(this, ast, context);\n    };\n    TemplateBinder.prototype.visitMethodCall = function (ast, context) {\n        this.maybeMap(context, ast, ast.name);\n        return _super.prototype.visitMethodCall.call(this, ast, context);\n    };\n    TemplateBinder.prototype.visitSafeMethodCall = function (ast, context) {\n        this.maybeMap(context, ast, ast.name);\n        return _super.prototype.visitSafeMethodCall.call(this, ast, context);\n    };\n    TemplateBinder.prototype.maybeMap = function (scope, ast, name) {\n        // If the receiver of the expression isn't the `ImplicitReceiver`, this isn't the root of an\n        // `AST` expression that maps to a `Variable` or `Reference`.\n        if (!(ast.receiver instanceof ImplicitReceiver)) {\n            return;\n        }\n        // Check whether the name exists in the current scope. If so, map it. Otherwise, the name is\n        // probably a property on the top-level component context.\n        var target = this.scope.lookup(name);\n        if (target !== null) {\n            this.bindings.set(ast, target);\n        }\n    };\n    return TemplateBinder;\n}(RecursiveAstVisitor$1));\n/**\n * Metadata container for a `Target` that allows queries for specific bits of metadata.\n *\n * See `BoundTarget` for documentation on the individual methods.\n */\nvar R3BoundTarget = /** @class */ (function () {\n    function R3BoundTarget(target, directives, bindings, references, exprTargets, symbols, nestingLevel) {\n        this.target = target;\n        this.directives = directives;\n        this.bindings = bindings;\n        this.references = references;\n        this.exprTargets = exprTargets;\n        this.symbols = symbols;\n        this.nestingLevel = nestingLevel;\n    }\n    R3BoundTarget.prototype.getDirectivesOfNode = function (node) {\n        return this.directives.get(node) || null;\n    };\n    R3BoundTarget.prototype.getReferenceTarget = function (ref) {\n        return this.references.get(ref) || null;\n    };\n    R3BoundTarget.prototype.getConsumerOfBinding = function (binding) {\n        return this.bindings.get(binding) || null;\n    };\n    R3BoundTarget.prototype.getExpressionTarget = function (expr) {\n        return this.exprTargets.get(expr) || null;\n    };\n    R3BoundTarget.prototype.getTemplateOfSymbol = function (symbol) {\n        return this.symbols.get(symbol) || null;\n    };\n    R3BoundTarget.prototype.getNestingLevel = function (template) { return this.nestingLevel.get(template) || 0; };\n    R3BoundTarget.prototype.getUsedDirectives = function () {\n        var set = new Set();\n        this.directives.forEach(function (dirs) { return dirs.forEach(function (dir) { return set.add(dir); }); });\n        return Array.from(set.values());\n    };\n    return R3BoundTarget;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n// This function call has a global side effects and publishes the compiler into global namespace for\n// the late binding of the Compiler to the @angular/core for jit compilation.\npublishFacade(_global);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { core, CompilerConfig, preserveWhitespacesDefault, isLoweredSymbol, createLoweredSymbol, Identifiers, JitCompiler, ConstantPool, DirectiveResolver, PipeResolver, NgModuleResolver, DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig, NgModuleCompiler, ArrayType, AssertNotNull, BinaryOperator, BinaryOperatorExpr, BuiltinMethod, BuiltinType, BuiltinTypeName, BuiltinVar, CastExpr, ClassField, ClassMethod, ClassStmt, CommaExpr, CommentStmt, ConditionalExpr, DeclareFunctionStmt, DeclareVarStmt, Expression, ExpressionStatement, ExpressionType, ExternalExpr, ExternalReference, FunctionExpr, IfStmt, InstantiateExpr, InvokeFunctionExpr, InvokeMethodExpr, JSDocCommentStmt, LiteralArrayExpr, LiteralExpr, LiteralMapExpr, MapType, NotExpr, ReadKeyExpr, ReadPropExpr, ReadVarExpr, ReturnStatement, ThrowStmt, TryCatchStmt, Type$1 as Type, WrappedNodeExpr, WriteKeyExpr, WritePropExpr, WriteVarExpr, StmtModifier, Statement, TypeofExpr, collectExternalReferences, EmitterVisitorContext, ViewCompiler, getParseErrors, isSyntaxError, syntaxError, Version, BoundAttribute as TmplAstBoundAttribute, BoundEvent as TmplAstBoundEvent, BoundText as TmplAstBoundText, Content as TmplAstContent, Element$1 as TmplAstElement, Reference as TmplAstReference, Template as TmplAstTemplate, Text$3 as TmplAstText, TextAttribute as TmplAstTextAttribute, Variable as TmplAstVariable, jitExpression, R3ResolvedDependencyType, compileInjector, compileNgModule, compilePipeFromMetadata, makeBindingParser, parseTemplate, compileBaseDefFromMetadata, compileComponentFromMetadata, compileDirectiveFromMetadata, parseHostBindings, publishFacade, VERSION$1 as VERSION, TextAst, BoundTextAst, AttrAst, BoundElementPropertyAst, BoundEventAst, ReferenceAst, VariableAst, ElementAst, EmbeddedTemplateAst, BoundDirectivePropertyAst, DirectiveAst, ProviderAst, ProviderAstType, NgContentAst, NullTemplateVisitor, RecursiveTemplateAstVisitor, templateVisitAll, sanitizeIdentifier, identifierName, identifierModuleUrl, viewClassName, rendererTypeName, hostViewClassName, componentFactoryName, CompileSummaryKind, tokenName, tokenReference, CompileStylesheetMetadata, CompileTemplateMetadata, CompileDirectiveMetadata, CompilePipeMetadata, CompileShallowModuleMetadata, CompileNgModuleMetadata, TransitiveCompileNgModuleMetadata, ProviderMeta, flatten, templateSourceUrl, sharedStylesheetJitUrl, ngModuleJitUrl, templateJitUrl, createAotUrlResolver, createAotCompiler, AotCompiler, analyzeNgModules, analyzeAndValidateNgModules, analyzeFile, analyzeFileForInjectables, mergeAnalyzedFiles, GeneratedFile, toTypeScript, formattedError, isFormattedError, StaticReflector, StaticSymbol, StaticSymbolCache, ResolvedStaticSymbol, StaticSymbolResolver, unescapeIdentifier, unwrapResolvedMetadata, AotSummaryResolver, AstPath, SummaryResolver, JitSummaryResolver, CompileReflector, createUrlResolverWithoutPackagePrefix, createOfflineCompileUrlResolver, UrlResolver, getUrlScheme, ResourceLoader, ElementSchemaRegistry, Extractor, I18NHtmlParser, MessageBundle, Serializer, Xliff, Xliff2, Xmb, Xtb, DirectiveNormalizer, ParserError, ParseSpan, AST, Quote, EmptyExpr, ImplicitReceiver, Chain, Conditional, PropertyRead, PropertyWrite, SafePropertyRead, KeyedRead, KeyedWrite, BindingPipe, LiteralPrimitive, LiteralArray, LiteralMap, Interpolation, Binary, PrefixNot, NonNullAssert, MethodCall, SafeMethodCall, FunctionCall, ASTWithSource, TemplateBinding, NullAstVisitor, RecursiveAstVisitor$1 as RecursiveAstVisitor, AstTransformer$1 as AstTransformer, AstMemoryEfficientTransformer, visitAstChildren, ParsedProperty, ParsedPropertyType, ParsedEvent, ParsedVariable, BoundElementProperty, TokenType, Lexer, Token, EOF, isIdentifier, isQuote, SplitInterpolation, TemplateBindingParseResult, Parser, _ParseAST, ERROR_COMPONENT_TYPE, CompileMetadataResolver, Text$2 as Text, Expansion, ExpansionCase, Attribute, Element, Comment, visitAll, RecursiveVisitor, findNode, HtmlParser, ParseTreeResult, TreeError, HtmlTagDefinition, getHtmlTagDefinition, TagContentType, splitNsName, isNgContainer, isNgContent, isNgTemplate, getNsPrefix, mergeNsAndName, NAMED_ENTITIES, NGSP_UNICODE, debugOutputAstAsTypeScript, TypeScriptEmitter, ParseLocation, ParseSourceFile, ParseSourceSpan, ParseErrorLevel, ParseError, typeSourceSpan, DomElementSchemaRegistry, CssSelector, SelectorMatcher, SelectorListContext, SelectorContext, HOST_ATTR, CONTENT_ATTR, StylesCompileDependency, CompiledStylesheet, StyleCompiler, TemplateParseError, TemplateParseResult, TemplateParser, splitClasses, createElementCssSelector, removeSummaryDuplicates, compileInjectable, R3TargetBinder, R3BoundTarget };\n//# sourceMappingURL=compiler.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import * as ɵngcc0 from '@angular/core';\n/**\n * @license Angular v7.2.0\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { InjectionToken, EventEmitter, Injectable, Inject, Optional, LOCALE_ID, Directive, ElementRef, Input, IterableDiffers, KeyValueDiffers, Renderer2, ɵisListLikeIterable, ɵstringify, ComponentFactoryResolver, Injector, NgModuleFactory, NgModuleRef, Type, ViewContainerRef, TemplateRef, isDevMode, Host, Attribute, Pipe, ChangeDetectorRef, WrappedValue, ɵisObservable, ɵisPromise, NgModule, Version, defineInjectable, inject } from '@angular/core';\nimport { __decorate, __metadata, __param, __read, __values, __extends, __assign } from 'tslib';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n *\n * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n * agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms that angular supports. For example, `@angular/platform-browser` provides an\n * implementation specific to the browser environment, while `@angular/platform-webworker` provides\n * one suitable for use with web workers.\n *\n * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n * when they need to interact with the DOM apis like pushState, popState, etc...\n *\n * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n * by the {@link Router} in order to navigate between routes. Since all interactions between {@link\n * Router} /\n * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n * class they are all platform independent.\n *\n * @publicApi\n */\nvar PlatformLocation = /** @class */ (function () {\n    function PlatformLocation() {\n    }\n    return PlatformLocation;\n}());\n/**\n * @description\n * Indicates when a location is initialized.\n *\n * @publicApi\n */\nvar LOCATION_INITIALIZED = new InjectionToken('Location Initialized');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `LocationStrategy` is responsible for representing and reading route state\n * from the browser's URL. Angular provides two strategies:\n * {@link HashLocationStrategy} and {@link PathLocationStrategy}.\n *\n * This is used under the hood of the {@link Location} service.\n *\n * Applications should use the {@link Router} or {@link Location} services to\n * interact with application route state.\n *\n * For instance, {@link HashLocationStrategy} produces URLs like\n * `http://example.com#/foo`, and {@link PathLocationStrategy} produces\n * `http://example.com/foo` as an equivalent URL.\n *\n * See these two classes for more.\n *\n * @publicApi\n */\nvar LocationStrategy = /** @class */ (function () {\n    function LocationStrategy() {\n    }\n    return LocationStrategy;\n}());\n/**\n * The `APP_BASE_HREF` token represents the base href to be used with the\n * {@link PathLocationStrategy}.\n *\n * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n * representing the URL prefix that should be preserved when generating and recognizing\n * URLs.\n *\n * @usageNotes\n *\n * ### Example\n *\n * ```typescript\n * import {Component, NgModule} from '@angular/core';\n * import {APP_BASE_HREF} from '@angular/common';\n *\n * @NgModule({\n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n *\n * @publicApi\n */\nvar APP_BASE_HREF = new InjectionToken('appBaseHref');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * A service that applications can use to interact with a browser's URL.\n *\n * Depending on which {@link LocationStrategy} is used, `Location` will either persist\n * to the URL's path or the URL's hash segment.\n *\n * @usageNotes\n *\n * It's better to use {@link Router#navigate} service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n *\n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nvar Location = /** @class */ (function () {\n    function Location(platformStrategy) {\n        var _this = this;\n        /** @internal */\n        this._subject = new EventEmitter();\n        this._platformStrategy = platformStrategy;\n        var browserBaseHref = this._platformStrategy.getBaseHref();\n        this._baseHref = Location_1.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n        this._platformStrategy.onPopState(function (ev) {\n            _this._subject.emit({\n                'url': _this.path(true),\n                'pop': true,\n                'state': ev.state,\n                'type': ev.type,\n            });\n        });\n    }\n    Location_1 = Location;\n    /**\n     * Returns the normalized URL path.\n     */\n    // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n    // removed.\n    Location.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        return this.normalize(this._platformStrategy.path(includeHash));\n    };\n    /**\n     * Normalizes the given path and compares to the current normalized path.\n     */\n    Location.prototype.isCurrentPathEqualTo = function (path, query) {\n        if (query === void 0) { query = ''; }\n        return this.path() == this.normalize(path + Location_1.normalizeQueryParams(query));\n    };\n    /**\n     * Given a string representing a URL, returns the normalized URL path without leading or\n     * trailing slashes.\n     */\n    Location.prototype.normalize = function (url) {\n        return Location_1.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n    };\n    /**\n     * Given a string representing a URL, returns the platform-specific external URL path.\n     * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n     * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n     * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n     */\n    Location.prototype.prepareExternalUrl = function (url) {\n        if (url && url[0] !== '/') {\n            url = '/' + url;\n        }\n        return this._platformStrategy.prepareExternalUrl(url);\n    };\n    // TODO: rename this method to pushState\n    /**\n     * Changes the browsers URL to the normalized version of the given URL, and pushes a\n     * new item onto the platform's history.\n     */\n    Location.prototype.go = function (path, query, state) {\n        if (query === void 0) { query = ''; }\n        if (state === void 0) { state = null; }\n        this._platformStrategy.pushState(state, '', path, query);\n    };\n    /**\n     * Changes the browsers URL to the normalized version of the given URL, and replaces\n     * the top item on the platform's history stack.\n     */\n    Location.prototype.replaceState = function (path, query, state) {\n        if (query === void 0) { query = ''; }\n        if (state === void 0) { state = null; }\n        this._platformStrategy.replaceState(state, '', path, query);\n    };\n    /**\n     * Navigates forward in the platform's history.\n     */\n    Location.prototype.forward = function () { this._platformStrategy.forward(); };\n    /**\n     * Navigates back in the platform's history.\n     */\n    Location.prototype.back = function () { this._platformStrategy.back(); };\n    /**\n     * Subscribe to the platform's `popState` events.\n     */\n    Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n        return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n    };\n    /**\n     * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n     * is.\n     */\n    Location.normalizeQueryParams = function (params) {\n        return params && params[0] !== '?' ? '?' + params : params;\n    };\n    /**\n     * Given 2 parts of a url, join them with a slash if needed.\n     */\n    Location.joinWithSlash = function (start, end) {\n        if (start.length == 0) {\n            return end;\n        }\n        if (end.length == 0) {\n            return start;\n        }\n        var slashes = 0;\n        if (start.endsWith('/')) {\n            slashes++;\n        }\n        if (end.startsWith('/')) {\n            slashes++;\n        }\n        if (slashes == 2) {\n            return start + end.substring(1);\n        }\n        if (slashes == 1) {\n            return start + end;\n        }\n        return start + '/' + end;\n    };\n    /**\n     * If url has a trailing slash, remove it, otherwise return url as is. This\n     * method looks for the first occurrence of either #, ?, or the end of the\n     * line as `/` characters after any of these should not be replaced.\n     */\n    Location.stripTrailingSlash = function (url) {\n        var match = url.match(/#|\\?|$/);\n        var pathEndIdx = match && match.index || url.length;\n        var droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n        return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n    };\n    var Location_1;\n    Location = Location_1 = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [LocationStrategy])\n    ], Location);\n    return Location;\n}());\nfunction _stripBaseHref(baseHref, url) {\n    return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\nfunction _stripIndexHtml(url) {\n    return url.replace(/\\/index.html$/, '');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n *\n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nvar HashLocationStrategy = /** @class */ (function (_super) {\n    __extends(HashLocationStrategy, _super);\n    function HashLocationStrategy(_platformLocation, _baseHref) {\n        var _this = _super.call(this) || this;\n        _this._platformLocation = _platformLocation;\n        _this._baseHref = '';\n        if (_baseHref != null) {\n            _this._baseHref = _baseHref;\n        }\n        return _this;\n    }\n    HashLocationStrategy.prototype.onPopState = function (fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    };\n    HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n    HashLocationStrategy.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        // the hash value is always prefixed with a `#`\n        // and if it is empty then it will stay empty\n        var path = this._platformLocation.hash;\n        if (path == null)\n            path = '#';\n        return path.length > 0 ? path.substring(1) : path;\n    };\n    HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n        var url = Location.joinWithSlash(this._baseHref, internal);\n        return url.length > 0 ? ('#' + url) : url;\n    };\n    HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n        var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.pushState(state, title, url);\n    };\n    HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n        var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.replaceState(state, title, url);\n    };\n    HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n    HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n    HashLocationStrategy = __decorate([\n        __param(1, Optional()), __param(1, Inject(APP_BASE_HREF)),\n        __metadata(\"design:paramtypes\", [PlatformLocation, String])\n    ], HashLocationStrategy);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(HashLocationStrategy, [{\n        type: Injectable\n    }], function () { return [{\n        type: PlatformLocation\n    }, {\n        type: String,\n        decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [APP_BASE_HREF]\n            }]\n    }]; }, { onPopState: [], getBaseHref: [], path: [], prepareExternalUrl: [], pushState: [], replaceState: [], forward: [], back: [] });\nHashLocationStrategy.ngInjectableDef = ɵngcc0.defineInjectable({ token: HashLocationStrategy, factory: function HashLocationStrategy_Factory(t) { return new (t || HashLocationStrategy)(ɵngcc0.inject(PlatformLocation), ɵngcc0.inject(APP_BASE_HREF, 8)); }, providedIn: null });\n    return HashLocationStrategy;\n}(LocationStrategy));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n *\n * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}\n * or add a base element to the document. This URL prefix that will be preserved\n * when generating and recognizing URLs.\n *\n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * Similarly, if you add `<base href='/my/app'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nvar PathLocationStrategy = /** @class */ (function (_super) {\n    __extends(PathLocationStrategy, _super);\n    function PathLocationStrategy(_platformLocation, href) {\n        var _this = _super.call(this) || this;\n        _this._platformLocation = _platformLocation;\n        if (href == null) {\n            href = _this._platformLocation.getBaseHrefFromDOM();\n        }\n        if (href == null) {\n            throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n        }\n        _this._baseHref = href;\n        return _this;\n    }\n    PathLocationStrategy.prototype.onPopState = function (fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    };\n    PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n    PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n        return Location.joinWithSlash(this._baseHref, internal);\n    };\n    PathLocationStrategy.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        var pathname = this._platformLocation.pathname +\n            Location.normalizeQueryParams(this._platformLocation.search);\n        var hash = this._platformLocation.hash;\n        return hash && includeHash ? \"\" + pathname + hash : pathname;\n    };\n    PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n        var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.pushState(state, title, externalUrl);\n    };\n    PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n        var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.replaceState(state, title, externalUrl);\n    };\n    PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n    PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n    PathLocationStrategy = __decorate([\n        __param(1, Optional()), __param(1, Inject(APP_BASE_HREF)),\n        __metadata(\"design:paramtypes\", [PlatformLocation, String])\n    ], PathLocationStrategy);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(PathLocationStrategy, [{\n        type: Injectable\n    }], function () { return [{\n        type: PlatformLocation\n    }, {\n        type: String,\n        decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [APP_BASE_HREF]\n            }]\n    }]; }, { onPopState: [], getBaseHref: [], prepareExternalUrl: [], path: [], pushState: [], replaceState: [], forward: [], back: [] });\nPathLocationStrategy.ngInjectableDef = ɵngcc0.defineInjectable({ token: PathLocationStrategy, factory: function PathLocationStrategy_Factory(t) { return new (t || PathLocationStrategy)(ɵngcc0.inject(PlatformLocation), ɵngcc0.inject(APP_BASE_HREF, 8)); }, providedIn: null });\n    return PathLocationStrategy;\n}(LocationStrategy));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// THIS CODE IS GENERATED - DO NOT MODIFY\n// See angular/tools/gulp-tasks/cldr/extract.js\nvar u = undefined;\nfunction plural(n) {\n    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n    if (i === 1 && v === 0)\n        return 1;\n    return 5;\n}\nvar localeEn = [\n    'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n    [\n        ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n    ],\n    u,\n    [\n        ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n        ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ]\n    ],\n    u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n    ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n    ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n    ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n    ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar LOCALE_DATA = {};\n/**\n * Register global data to be used internally by Angular. See the\n * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n *\n * @publicApi\n */\n// The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1\nfunction registerLocaleData(data, localeId, extraData) {\n    if (typeof localeId !== 'string') {\n        extraData = localeId;\n        localeId = data[0 /* LocaleId */];\n    }\n    localeId = localeId.toLowerCase().replace(/_/g, '-');\n    LOCALE_DATA[localeId] = data;\n    if (extraData) {\n        LOCALE_DATA[localeId][19 /* ExtraData */] = extraData;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @internal */\nvar CURRENCIES_EN = {\n    'ADP': [undefined, undefined, 0],\n    'AFN': [undefined, undefined, 0],\n    'ALL': [undefined, undefined, 0],\n    'AMD': [undefined, undefined, 0],\n    'AOA': [undefined, 'Kz'],\n    'ARS': [undefined, '$'],\n    'AUD': ['A$', '$'],\n    'BAM': [undefined, 'KM'],\n    'BBD': [undefined, '$'],\n    'BDT': [undefined, '৳'],\n    'BHD': [undefined, undefined, 3],\n    'BIF': [undefined, undefined, 0],\n    'BMD': [undefined, '$'],\n    'BND': [undefined, '$'],\n    'BOB': [undefined, 'Bs'],\n    'BRL': ['R$'],\n    'BSD': [undefined, '$'],\n    'BWP': [undefined, 'P'],\n    'BYN': [undefined, 'р.', 2],\n    'BYR': [undefined, undefined, 0],\n    'BZD': [undefined, '$'],\n    'CAD': ['CA$', '$', 2],\n    'CHF': [undefined, undefined, 2],\n    'CLF': [undefined, undefined, 4],\n    'CLP': [undefined, '$', 0],\n    'CNY': ['CN¥', '¥'],\n    'COP': [undefined, '$', 0],\n    'CRC': [undefined, '₡', 2],\n    'CUC': [undefined, '$'],\n    'CUP': [undefined, '$'],\n    'CZK': [undefined, 'Kč', 2],\n    'DJF': [undefined, undefined, 0],\n    'DKK': [undefined, 'kr', 2],\n    'DOP': [undefined, '$'],\n    'EGP': [undefined, 'E£'],\n    'ESP': [undefined, '₧', 0],\n    'EUR': ['€'],\n    'FJD': [undefined, '$'],\n    'FKP': [undefined, '£'],\n    'GBP': ['£'],\n    'GEL': [undefined, '₾'],\n    'GIP': [undefined, '£'],\n    'GNF': [undefined, 'FG', 0],\n    'GTQ': [undefined, 'Q'],\n    'GYD': [undefined, '$', 0],\n    'HKD': ['HK$', '$'],\n    'HNL': [undefined, 'L'],\n    'HRK': [undefined, 'kn'],\n    'HUF': [undefined, 'Ft', 2],\n    'IDR': [undefined, 'Rp', 0],\n    'ILS': ['₪'],\n    'INR': ['₹'],\n    'IQD': [undefined, undefined, 0],\n    'IRR': [undefined, undefined, 0],\n    'ISK': [undefined, 'kr', 0],\n    'ITL': [undefined, undefined, 0],\n    'JMD': [undefined, '$'],\n    'JOD': [undefined, undefined, 3],\n    'JPY': ['¥', undefined, 0],\n    'KHR': [undefined, '៛'],\n    'KMF': [undefined, 'CF', 0],\n    'KPW': [undefined, '₩', 0],\n    'KRW': ['₩', undefined, 0],\n    'KWD': [undefined, undefined, 3],\n    'KYD': [undefined, '$'],\n    'KZT': [undefined, '₸'],\n    'LAK': [undefined, '₭', 0],\n    'LBP': [undefined, 'L£', 0],\n    'LKR': [undefined, 'Rs'],\n    'LRD': [undefined, '$'],\n    'LTL': [undefined, 'Lt'],\n    'LUF': [undefined, undefined, 0],\n    'LVL': [undefined, 'Ls'],\n    'LYD': [undefined, undefined, 3],\n    'MGA': [undefined, 'Ar', 0],\n    'MGF': [undefined, undefined, 0],\n    'MMK': [undefined, 'K', 0],\n    'MNT': [undefined, '₮', 0],\n    'MRO': [undefined, undefined, 0],\n    'MUR': [undefined, 'Rs', 0],\n    'MXN': ['MX$', '$'],\n    'MYR': [undefined, 'RM'],\n    'NAD': [undefined, '$'],\n    'NGN': [undefined, '₦'],\n    'NIO': [undefined, 'C$'],\n    'NOK': [undefined, 'kr', 2],\n    'NPR': [undefined, 'Rs'],\n    'NZD': ['NZ$', '$'],\n    'OMR': [undefined, undefined, 3],\n    'PHP': [undefined, '₱'],\n    'PKR': [undefined, 'Rs', 0],\n    'PLN': [undefined, 'zł'],\n    'PYG': [undefined, '₲', 0],\n    'RON': [undefined, 'lei'],\n    'RSD': [undefined, undefined, 0],\n    'RUB': [undefined, '₽'],\n    'RUR': [undefined, 'р.'],\n    'RWF': [undefined, 'RF', 0],\n    'SBD': [undefined, '$'],\n    'SEK': [undefined, 'kr', 2],\n    'SGD': [undefined, '$'],\n    'SHP': [undefined, '£'],\n    'SLL': [undefined, undefined, 0],\n    'SOS': [undefined, undefined, 0],\n    'SRD': [undefined, '$'],\n    'SSP': [undefined, '£'],\n    'STD': [undefined, undefined, 0],\n    'STN': [undefined, 'Db'],\n    'SYP': [undefined, '£', 0],\n    'THB': [undefined, '฿'],\n    'TMM': [undefined, undefined, 0],\n    'TND': [undefined, undefined, 3],\n    'TOP': [undefined, 'T$'],\n    'TRL': [undefined, undefined, 0],\n    'TRY': [undefined, '₺'],\n    'TTD': [undefined, '$'],\n    'TWD': ['NT$', '$', 2],\n    'TZS': [undefined, undefined, 0],\n    'UAH': [undefined, '₴'],\n    'UGX': [undefined, undefined, 0],\n    'USD': ['$'],\n    'UYI': [undefined, undefined, 0],\n    'UYU': [undefined, '$'],\n    'UZS': [undefined, undefined, 0],\n    'VEF': [undefined, 'Bs'],\n    'VND': ['₫', undefined, 0],\n    'VUV': [undefined, undefined, 0],\n    'XAF': ['FCFA', undefined, 0],\n    'XCD': ['EC$', '$'],\n    'XOF': ['CFA', undefined, 0],\n    'XPF': ['CFPF', undefined, 0],\n    'YER': [undefined, undefined, 0],\n    'ZAR': [undefined, 'R'],\n    'ZMK': [undefined, undefined, 0],\n    'ZMW': [undefined, 'ZK'],\n    'ZWD': [undefined, undefined, 0]\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The different format styles that can be used to represent numbers.\n * Used by the function {@link getLocaleNumberFormat}.\n *\n * @publicApi\n */\nvar NumberFormatStyle;\n(function (NumberFormatStyle) {\n    NumberFormatStyle[NumberFormatStyle[\"Decimal\"] = 0] = \"Decimal\";\n    NumberFormatStyle[NumberFormatStyle[\"Percent\"] = 1] = \"Percent\";\n    NumberFormatStyle[NumberFormatStyle[\"Currency\"] = 2] = \"Currency\";\n    NumberFormatStyle[NumberFormatStyle[\"Scientific\"] = 3] = \"Scientific\";\n})(NumberFormatStyle || (NumberFormatStyle = {}));\n/** @publicApi */\nvar Plural;\n(function (Plural) {\n    Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n    Plural[Plural[\"One\"] = 1] = \"One\";\n    Plural[Plural[\"Two\"] = 2] = \"Two\";\n    Plural[Plural[\"Few\"] = 3] = \"Few\";\n    Plural[Plural[\"Many\"] = 4] = \"Many\";\n    Plural[Plural[\"Other\"] = 5] = \"Other\";\n})(Plural || (Plural = {}));\n/**\n * Some languages use two different forms of strings (standalone and format) depending on the\n * context.\n * Typically the standalone version is the nominative form of the word, and the format version is in\n * the genitive.\n * See [the CLDR website](http://cldr.unicode.org/translation/date-time) for more information.\n *\n * @publicApi\n */\nvar FormStyle;\n(function (FormStyle) {\n    FormStyle[FormStyle[\"Format\"] = 0] = \"Format\";\n    FormStyle[FormStyle[\"Standalone\"] = 1] = \"Standalone\";\n})(FormStyle || (FormStyle = {}));\n/**\n * Multiple widths are available for translations: narrow (1 character), abbreviated (3 characters),\n * wide (full length), and short (2 characters, only for days).\n *\n * For example the day `Sunday` will be:\n * - Narrow: `S`\n * - Short: `Su`\n * - Abbreviated: `Sun`\n * - Wide: `Sunday`\n *\n * @publicApi\n */\nvar TranslationWidth;\n(function (TranslationWidth) {\n    TranslationWidth[TranslationWidth[\"Narrow\"] = 0] = \"Narrow\";\n    TranslationWidth[TranslationWidth[\"Abbreviated\"] = 1] = \"Abbreviated\";\n    TranslationWidth[TranslationWidth[\"Wide\"] = 2] = \"Wide\";\n    TranslationWidth[TranslationWidth[\"Short\"] = 3] = \"Short\";\n})(TranslationWidth || (TranslationWidth = {}));\n/**\n * Multiple widths are available for formats: short (minimal amount of data), medium (small amount\n * of data), long (complete amount of data), full (complete amount of data and extra information).\n *\n * For example the date-time formats for the english locale will be:\n *  - `'short'`: `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`)\n *  - `'medium'`: `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`)\n *  - `'long'`: `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM GMT+1`)\n *  - `'full'`: `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at\n * 9:03:01 AM GMT+01:00`)\n *\n * @publicApi\n */\nvar FormatWidth;\n(function (FormatWidth) {\n    FormatWidth[FormatWidth[\"Short\"] = 0] = \"Short\";\n    FormatWidth[FormatWidth[\"Medium\"] = 1] = \"Medium\";\n    FormatWidth[FormatWidth[\"Long\"] = 2] = \"Long\";\n    FormatWidth[FormatWidth[\"Full\"] = 3] = \"Full\";\n})(FormatWidth || (FormatWidth = {}));\n/**\n * Number symbol that can be used to replace placeholders in number patterns.\n * The placeholders are based on english values:\n *\n * | Name                   | Example for en-US | Meaning                                     |\n * |------------------------|-------------------|---------------------------------------------|\n * | decimal                | 2,345`.`67        | decimal separator                           |\n * | group                  | 2`,`345.67        | grouping separator, typically for thousands |\n * | plusSign               | `+`23             | the plus sign used with numbers             |\n * | minusSign              | `-`23             | the minus sign used with numbers            |\n * | percentSign            | 23.4`%`           | the percent sign (out of 100)               |\n * | perMille               | 234`‰`            | the permille sign (out of 1000)             |\n * | exponential            | 1.2`E`3           | used in computers for 1.2×10³.              |\n * | superscriptingExponent | 1.2`×`103         | human-readable format of exponential        |\n * | infinity               | `∞`               | used in +∞ and -∞.                          |\n * | nan                    | `NaN`             | \"not a number\".                             |\n * | timeSeparator          | 10`:`52           | symbol used between time units              |\n * | currencyDecimal        | $2,345`.`67       | decimal separator, fallback to \"decimal\"    |\n * | currencyGroup          | $2`,`345.67       | grouping separator, fallback to \"group\"     |\n *\n * @publicApi\n */\nvar NumberSymbol;\n(function (NumberSymbol) {\n    NumberSymbol[NumberSymbol[\"Decimal\"] = 0] = \"Decimal\";\n    NumberSymbol[NumberSymbol[\"Group\"] = 1] = \"Group\";\n    NumberSymbol[NumberSymbol[\"List\"] = 2] = \"List\";\n    NumberSymbol[NumberSymbol[\"PercentSign\"] = 3] = \"PercentSign\";\n    NumberSymbol[NumberSymbol[\"PlusSign\"] = 4] = \"PlusSign\";\n    NumberSymbol[NumberSymbol[\"MinusSign\"] = 5] = \"MinusSign\";\n    NumberSymbol[NumberSymbol[\"Exponential\"] = 6] = \"Exponential\";\n    NumberSymbol[NumberSymbol[\"SuperscriptingExponent\"] = 7] = \"SuperscriptingExponent\";\n    NumberSymbol[NumberSymbol[\"PerMille\"] = 8] = \"PerMille\";\n    NumberSymbol[NumberSymbol[\"Infinity\"] = 9] = \"Infinity\";\n    NumberSymbol[NumberSymbol[\"NaN\"] = 10] = \"NaN\";\n    NumberSymbol[NumberSymbol[\"TimeSeparator\"] = 11] = \"TimeSeparator\";\n    NumberSymbol[NumberSymbol[\"CurrencyDecimal\"] = 12] = \"CurrencyDecimal\";\n    NumberSymbol[NumberSymbol[\"CurrencyGroup\"] = 13] = \"CurrencyGroup\";\n})(NumberSymbol || (NumberSymbol = {}));\n/**\n * The value for each day of the week, based on the en-US locale\n *\n * @publicApi\n */\nvar WeekDay;\n(function (WeekDay) {\n    WeekDay[WeekDay[\"Sunday\"] = 0] = \"Sunday\";\n    WeekDay[WeekDay[\"Monday\"] = 1] = \"Monday\";\n    WeekDay[WeekDay[\"Tuesday\"] = 2] = \"Tuesday\";\n    WeekDay[WeekDay[\"Wednesday\"] = 3] = \"Wednesday\";\n    WeekDay[WeekDay[\"Thursday\"] = 4] = \"Thursday\";\n    WeekDay[WeekDay[\"Friday\"] = 5] = \"Friday\";\n    WeekDay[WeekDay[\"Saturday\"] = 6] = \"Saturday\";\n})(WeekDay || (WeekDay = {}));\n/**\n * The locale id for the chosen locale (e.g `en-GB`).\n *\n * @publicApi\n */\nfunction getLocaleId(locale) {\n    return findLocaleData(locale)[0 /* LocaleId */];\n}\n/**\n * Periods of the day (e.g. `[AM, PM]` for en-US).\n *\n * @publicApi\n */\nfunction getLocaleDayPeriods(locale, formStyle, width) {\n    var data = findLocaleData(locale);\n    var amPmData = [data[1 /* DayPeriodsFormat */], data[2 /* DayPeriodsStandalone */]];\n    var amPm = getLastDefinedValue(amPmData, formStyle);\n    return getLastDefinedValue(amPm, width);\n}\n/**\n * Days of the week for the Gregorian calendar (e.g. `[Sunday, Monday, ... Saturday]` for en-US).\n *\n * @publicApi\n */\nfunction getLocaleDayNames(locale, formStyle, width) {\n    var data = findLocaleData(locale);\n    var daysData = [data[3 /* DaysFormat */], data[4 /* DaysStandalone */]];\n    var days = getLastDefinedValue(daysData, formStyle);\n    return getLastDefinedValue(days, width);\n}\n/**\n * Months of the year for the Gregorian calendar (e.g. `[January, February, ...]` for en-US).\n *\n * @publicApi\n */\nfunction getLocaleMonthNames(locale, formStyle, width) {\n    var data = findLocaleData(locale);\n    var monthsData = [data[5 /* MonthsFormat */], data[6 /* MonthsStandalone */]];\n    var months = getLastDefinedValue(monthsData, formStyle);\n    return getLastDefinedValue(months, width);\n}\n/**\n * Eras for the Gregorian calendar (e.g. AD/BC).\n *\n * @publicApi\n */\nfunction getLocaleEraNames(locale, width) {\n    var data = findLocaleData(locale);\n    var erasData = data[7 /* Eras */];\n    return getLastDefinedValue(erasData, width);\n}\n/**\n * First day of the week for this locale, based on english days (Sunday = 0, Monday = 1, ...).\n * For example in french the value would be 1 because the first day of the week is Monday.\n *\n * @publicApi\n */\nfunction getLocaleFirstDayOfWeek(locale) {\n    var data = findLocaleData(locale);\n    return data[8 /* FirstDayOfWeek */];\n}\n/**\n * Range of days in the week that represent the week-end for this locale, based on english days\n * (Sunday = 0, Monday = 1, ...).\n * For example in english the value would be [6,0] for Saturday to Sunday.\n *\n * @publicApi\n */\nfunction getLocaleWeekEndRange(locale) {\n    var data = findLocaleData(locale);\n    return data[9 /* WeekendRange */];\n}\n/**\n * Date format that depends on the locale.\n *\n * There are four basic date formats:\n * - `full` should contain long-weekday (EEEE), year (y), long-month (MMMM), day (d).\n *\n *  For example, English uses `EEEE, MMMM d, y`, corresponding to a date like\n *  \"Tuesday, September 14, 1999\".\n *\n * - `long` should contain year, long-month, day.\n *\n *  For example, `MMMM d, y`, corresponding to a date like \"September 14, 1999\".\n *\n * - `medium` should contain year, abbreviated-month (MMM), day.\n *\n *  For example, `MMM d, y`, corresponding to a date like \"Sep 14, 1999\".\n *  For languages that do not use abbreviated months, use the numeric month (MM/M). For example,\n *  `y/MM/dd`, corresponding to a date like \"1999/09/14\".\n *\n * - `short` should contain year, numeric-month (MM/M), and day.\n *\n *  For example, `M/d/yy`, corresponding to a date like \"9/14/99\".\n *\n * @publicApi\n */\nfunction getLocaleDateFormat(locale, width) {\n    var data = findLocaleData(locale);\n    return getLastDefinedValue(data[10 /* DateFormat */], width);\n}\n/**\n * Time format that depends on the locale.\n *\n * The standard formats include four basic time formats:\n * - `full` should contain hour (h/H), minute (mm), second (ss), and zone (zzzz).\n * - `long` should contain hour, minute, second, and zone (z)\n * - `medium` should contain hour, minute, second.\n * - `short` should contain hour, minute.\n *\n * Note: The patterns depend on whether the main country using your language uses 12-hour time or\n * not:\n * - For 12-hour time, use a pattern like `hh:mm a` using h to mean a 12-hour clock cycle running\n * 1 through 12 (midnight plus 1 minute is 12:01), or using K to mean a 12-hour clock cycle\n * running 0 through 11 (midnight plus 1 minute is 0:01).\n * - For 24-hour time, use a pattern like `HH:mm` using H to mean a 24-hour clock cycle running 0\n * through 23 (midnight plus 1 minute is 0:01), or using k to mean a 24-hour clock cycle running\n * 1 through 24 (midnight plus 1 minute is 24:01).\n *\n * @publicApi\n */\nfunction getLocaleTimeFormat(locale, width) {\n    var data = findLocaleData(locale);\n    return getLastDefinedValue(data[11 /* TimeFormat */], width);\n}\n/**\n * Date-time format that depends on the locale.\n *\n * The date-time pattern shows how to combine separate patterns for date (represented by {1})\n * and time (represented by {0}) into a single pattern. It usually doesn't need to be changed.\n * What you want to pay attention to are:\n * - possibly removing a space for languages that don't use it, such as many East Asian languages\n * - possibly adding a comma, other punctuation, or a combining word\n *\n * For example:\n * - English uses `{1} 'at' {0}` or `{1}, {0}` (depending on date style), while Japanese uses\n *  `{1}{0}`.\n * - An English formatted date-time using the combining pattern `{1}, {0}` could be\n *  `Dec 10, 2010, 3:59:49 PM`. Notice the comma and space between the date portion and the time\n *  portion.\n *\n * There are four formats (`full`, `long`, `medium`, `short`); the determination of which to use\n * is normally based on the date style. For example, if the date has a full month and weekday\n * name, the full combining pattern will be used to combine that with a time. If the date has\n * numeric month, the short version of the combining pattern will be used to combine that with a\n * time. English uses `{1} 'at' {0}` for full and long styles, and `{1}, {0}` for medium and short\n * styles.\n *\n * @publicApi\n */\nfunction getLocaleDateTimeFormat(locale, width) {\n    var data = findLocaleData(locale);\n    var dateTimeFormatData = data[12 /* DateTimeFormat */];\n    return getLastDefinedValue(dateTimeFormatData, width);\n}\n/**\n * Number symbol that can be used to replace placeholders in number formats.\n * See {@link NumberSymbol} for more information.\n *\n * @publicApi\n */\nfunction getLocaleNumberSymbol(locale, symbol) {\n    var data = findLocaleData(locale);\n    var res = data[13 /* NumberSymbols */][symbol];\n    if (typeof res === 'undefined') {\n        if (symbol === NumberSymbol.CurrencyDecimal) {\n            return data[13 /* NumberSymbols */][NumberSymbol.Decimal];\n        }\n        else if (symbol === NumberSymbol.CurrencyGroup) {\n            return data[13 /* NumberSymbols */][NumberSymbol.Group];\n        }\n    }\n    return res;\n}\n/**\n * Number format that depends on the locale.\n *\n * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`\n * when used to format the number 12345.678 could result in \"12'345,67\". That would happen if the\n * grouping separator for your language is an apostrophe, and the decimal separator is a comma.\n *\n * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders;\n * they stand for the decimal separator, and so on, and are NOT real characters.\n * You must NOT \"translate\" the placeholders; for example, don't change `.` to `,` even though in\n * your language the decimal point is written with a comma. The symbols should be replaced by the\n * local equivalents, using the Number Symbols for your language.\n *\n * Here are the special characters used in number patterns:\n *\n * | Symbol | Meaning |\n * |--------|---------|\n * | . | Replaced automatically by the character used for the decimal point. |\n * | , | Replaced by the \"grouping\" (thousands) separator. |\n * | 0 | Replaced by a digit (or zero if there aren't enough digits). |\n * | # | Replaced by a digit (or nothing if there aren't enough). |\n * | ¤ | This will be replaced by a currency symbol, such as $ or USD. |\n * | % | This marks a percent format. The % symbol may change position, but must be retained. |\n * | E | This marks a scientific format. The E symbol may change position, but must be retained. |\n * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |\n *\n * You can find more information\n * [on the CLDR website](http://cldr.unicode.org/translation/number-patterns)\n *\n * @publicApi\n */\nfunction getLocaleNumberFormat(locale, type) {\n    var data = findLocaleData(locale);\n    return data[14 /* NumberFormats */][type];\n}\n/**\n * The symbol used to represent the currency for the main country using this locale (e.g. $ for\n * the locale en-US).\n * The symbol will be `null` if the main country cannot be determined.\n *\n * @publicApi\n */\nfunction getLocaleCurrencySymbol(locale) {\n    var data = findLocaleData(locale);\n    return data[15 /* CurrencySymbol */] || null;\n}\n/**\n * The name of the currency for the main country using this locale (e.g. 'US Dollar' for the locale\n * en-US).\n * The name will be `null` if the main country cannot be determined.\n *\n * @publicApi\n */\nfunction getLocaleCurrencyName(locale) {\n    var data = findLocaleData(locale);\n    return data[16 /* CurrencyName */] || null;\n}\n/**\n * Returns the currency values for the locale\n */\nfunction getLocaleCurrencies(locale) {\n    var data = findLocaleData(locale);\n    return data[17 /* Currencies */];\n}\n/**\n * The locale plural function used by ICU expressions to determine the plural case to use.\n * See {@link NgPlural} for more information.\n *\n * @publicApi\n */\nfunction getLocalePluralCase(locale) {\n    var data = findLocaleData(locale);\n    return data[18 /* PluralCase */];\n}\nfunction checkFullData(data) {\n    if (!data[19 /* ExtraData */]) {\n        throw new Error(\"Missing extra locale data for the locale \\\"\" + data[0 /* LocaleId */] + \"\\\". Use \\\"registerLocaleData\\\" to load new data. See the \\\"I18n guide\\\" on angular.io to know more.\");\n    }\n}\n/**\n * Rules used to determine which day period to use (See `dayPeriods` below).\n * The rules can either be an array or a single value. If it's an array, consider it as \"from\"\n * and \"to\". If it's a single value then it means that the period is only valid at this exact\n * value.\n * There is always the same number of rules as the number of day periods, which means that the\n * first rule is applied to the first day period and so on.\n * You should fallback to AM/PM when there are no rules available.\n *\n * Note: this is only available if you load the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale\n * data.\n *\n * @publicApi\n */\nfunction getLocaleExtraDayPeriodRules(locale) {\n    var data = findLocaleData(locale);\n    checkFullData(data);\n    var rules = data[19 /* ExtraData */][2 /* ExtraDayPeriodsRules */] || [];\n    return rules.map(function (rule) {\n        if (typeof rule === 'string') {\n            return extractTime(rule);\n        }\n        return [extractTime(rule[0]), extractTime(rule[1])];\n    });\n}\n/**\n * Day Periods indicate roughly how the day is broken up in different languages (e.g. morning,\n * noon, afternoon, midnight, ...).\n * You should use the function {@link getLocaleExtraDayPeriodRules} to determine which period to\n * use.\n * You should fallback to AM/PM when there are no day periods available.\n *\n * Note: this is only available if you load the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale\n * data.\n *\n * @publicApi\n */\nfunction getLocaleExtraDayPeriods(locale, formStyle, width) {\n    var data = findLocaleData(locale);\n    checkFullData(data);\n    var dayPeriodsData = [\n        data[19 /* ExtraData */][0 /* ExtraDayPeriodFormats */],\n        data[19 /* ExtraData */][1 /* ExtraDayPeriodStandalone */]\n    ];\n    var dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\n    return getLastDefinedValue(dayPeriods, width) || [];\n}\n/**\n * Returns the first value that is defined in an array, going backwards.\n *\n * To avoid repeating the same data (e.g. when \"format\" and \"standalone\" are the same) we only\n * add the first one to the locale data arrays, the other ones are only defined when different.\n * We use this function to retrieve the first defined value.\n *\n * @publicApi\n */\nfunction getLastDefinedValue(data, index) {\n    for (var i = index; i > -1; i--) {\n        if (typeof data[i] !== 'undefined') {\n            return data[i];\n        }\n    }\n    throw new Error('Locale data API: locale data undefined');\n}\n/**\n * Extract the hours and minutes from a string like \"15:45\"\n */\nfunction extractTime(time) {\n    var _a = __read(time.split(':'), 2), h = _a[0], m = _a[1];\n    return { hours: +h, minutes: +m };\n}\n/**\n * Finds the locale data for a locale id\n *\n * @publicApi\n */\nfunction findLocaleData(locale) {\n    var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n    var match = LOCALE_DATA[normalizedLocale];\n    if (match) {\n        return match;\n    }\n    // let's try to find a parent locale\n    var parentLocale = normalizedLocale.split('-')[0];\n    match = LOCALE_DATA[parentLocale];\n    if (match) {\n        return match;\n    }\n    if (parentLocale === 'en') {\n        return localeEn;\n    }\n    throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n}\n/**\n * Returns the currency symbol for a given currency code, or the code if no symbol available\n * (e.g.: format narrow = $, format wide = US$, code = USD)\n * If no locale is provided, it uses the locale \"en\" by default\n *\n * @publicApi\n */\nfunction getCurrencySymbol(code, format, locale) {\n    if (locale === void 0) { locale = 'en'; }\n    var currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];\n    var symbolNarrow = currency[1 /* SymbolNarrow */];\n    if (format === 'narrow' && typeof symbolNarrow === 'string') {\n        return symbolNarrow;\n    }\n    return currency[0 /* Symbol */] || code;\n}\n// Most currencies have cents, that's why the default is 2\nvar DEFAULT_NB_OF_CURRENCY_DIGITS = 2;\n/**\n * Returns the number of decimal digits for the given currency.\n * Its value depends upon the presence of cents in that particular currency.\n *\n * @publicApi\n */\nfunction getNumberOfCurrencyDigits(code) {\n    var digits;\n    var currency = CURRENCIES_EN[code];\n    if (currency) {\n        digits = currency[2 /* NbOfDigits */];\n    }\n    return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n//    1        2       3         4          5          6          7          8  9     10      11\nvar NAMED_FORMATS = {};\nvar DATE_FORMATS_SPLIT = /((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\\s\\S]*)/;\nvar ZoneWidth;\n(function (ZoneWidth) {\n    ZoneWidth[ZoneWidth[\"Short\"] = 0] = \"Short\";\n    ZoneWidth[ZoneWidth[\"ShortGMT\"] = 1] = \"ShortGMT\";\n    ZoneWidth[ZoneWidth[\"Long\"] = 2] = \"Long\";\n    ZoneWidth[ZoneWidth[\"Extended\"] = 3] = \"Extended\";\n})(ZoneWidth || (ZoneWidth = {}));\nvar DateType;\n(function (DateType) {\n    DateType[DateType[\"FullYear\"] = 0] = \"FullYear\";\n    DateType[DateType[\"Month\"] = 1] = \"Month\";\n    DateType[DateType[\"Date\"] = 2] = \"Date\";\n    DateType[DateType[\"Hours\"] = 3] = \"Hours\";\n    DateType[DateType[\"Minutes\"] = 4] = \"Minutes\";\n    DateType[DateType[\"Seconds\"] = 5] = \"Seconds\";\n    DateType[DateType[\"FractionalSeconds\"] = 6] = \"FractionalSeconds\";\n    DateType[DateType[\"Day\"] = 7] = \"Day\";\n})(DateType || (DateType = {}));\nvar TranslationType;\n(function (TranslationType) {\n    TranslationType[TranslationType[\"DayPeriods\"] = 0] = \"DayPeriods\";\n    TranslationType[TranslationType[\"Days\"] = 1] = \"Days\";\n    TranslationType[TranslationType[\"Months\"] = 2] = \"Months\";\n    TranslationType[TranslationType[\"Eras\"] = 3] = \"Eras\";\n})(TranslationType || (TranslationType = {}));\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date according to locale rules.\n *\n * Where:\n * - `value` is a Date, a number (milliseconds since UTC epoch) or an ISO string\n *   (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. See {@link DatePipe} for more\n *   details.\n * - `locale` is a `string` defining the locale to use.\n * - `timezone` to be used for formatting. It understands UTC/GMT and the continental US time zone\n *   abbreviations, but for general use, use a time zone offset (e.g. `'+0430'`).\n *   If not specified, host system settings are used.\n *\n * See {@link DatePipe} for more details.\n *\n * @publicApi\n */\nfunction formatDate(value, format, locale, timezone) {\n    var date = toDate(value);\n    var namedFormat = getNamedFormat(locale, format);\n    format = namedFormat || format;\n    var parts = [];\n    var match;\n    while (format) {\n        match = DATE_FORMATS_SPLIT.exec(format);\n        if (match) {\n            parts = parts.concat(match.slice(1));\n            var part = parts.pop();\n            if (!part) {\n                break;\n            }\n            format = part;\n        }\n        else {\n            parts.push(format);\n            break;\n        }\n    }\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    if (timezone) {\n        dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n        date = convertTimezoneToLocal(date, timezone, true);\n    }\n    var text = '';\n    parts.forEach(function (value) {\n        var dateFormatter = getDateFormatter(value);\n        text += dateFormatter ?\n            dateFormatter(date, locale, dateTimezoneOffset) :\n            value === '\\'\\'' ? '\\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n    });\n    return text;\n}\nfunction getNamedFormat(locale, format) {\n    var localeId = getLocaleId(locale);\n    NAMED_FORMATS[localeId] = NAMED_FORMATS[localeId] || {};\n    if (NAMED_FORMATS[localeId][format]) {\n        return NAMED_FORMATS[localeId][format];\n    }\n    var formatValue = '';\n    switch (format) {\n        case 'shortDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Short);\n            break;\n        case 'mediumDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);\n            break;\n        case 'longDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Long);\n            break;\n        case 'fullDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Full);\n            break;\n        case 'shortTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);\n            break;\n        case 'mediumTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);\n            break;\n        case 'longTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);\n            break;\n        case 'fullTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);\n            break;\n        case 'short':\n            var shortTime = getNamedFormat(locale, 'shortTime');\n            var shortDate = getNamedFormat(locale, 'shortDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);\n            break;\n        case 'medium':\n            var mediumTime = getNamedFormat(locale, 'mediumTime');\n            var mediumDate = getNamedFormat(locale, 'mediumDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);\n            break;\n        case 'long':\n            var longTime = getNamedFormat(locale, 'longTime');\n            var longDate = getNamedFormat(locale, 'longDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);\n            break;\n        case 'full':\n            var fullTime = getNamedFormat(locale, 'fullTime');\n            var fullDate = getNamedFormat(locale, 'fullDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);\n            break;\n    }\n    if (formatValue) {\n        NAMED_FORMATS[localeId][format] = formatValue;\n    }\n    return formatValue;\n}\nfunction formatDateTime(str, opt_values) {\n    if (opt_values) {\n        str = str.replace(/\\{([^}]+)}/g, function (match, key) {\n            return (opt_values != null && key in opt_values) ? opt_values[key] : match;\n        });\n    }\n    return str;\n}\nfunction padNumber(num, digits, minusSign, trim, negWrap) {\n    if (minusSign === void 0) { minusSign = '-'; }\n    var neg = '';\n    if (num < 0 || (negWrap && num <= 0)) {\n        if (negWrap) {\n            num = -num + 1;\n        }\n        else {\n            num = -num;\n            neg = minusSign;\n        }\n    }\n    var strNum = String(num);\n    while (strNum.length < digits) {\n        strNum = '0' + strNum;\n    }\n    if (trim) {\n        strNum = strNum.substr(strNum.length - digits);\n    }\n    return neg + strNum;\n}\nfunction formatFractionalSeconds(milliseconds, digits) {\n    var strMs = padNumber(milliseconds, 3);\n    return strMs.substr(0, digits);\n}\n/**\n * Returns a date formatter that transforms a date into its locale digit representation\n */\nfunction dateGetter(name, size, offset, trim, negWrap) {\n    if (offset === void 0) { offset = 0; }\n    if (trim === void 0) { trim = false; }\n    if (negWrap === void 0) { negWrap = false; }\n    return function (date, locale) {\n        var part = getDatePart(name, date);\n        if (offset > 0 || part > -offset) {\n            part += offset;\n        }\n        if (name === DateType.Hours) {\n            if (part === 0 && offset === -12) {\n                part = 12;\n            }\n        }\n        else if (name === DateType.FractionalSeconds) {\n            return formatFractionalSeconds(part, size);\n        }\n        var localeMinus = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n        return padNumber(part, size, localeMinus, trim, negWrap);\n    };\n}\nfunction getDatePart(part, date) {\n    switch (part) {\n        case DateType.FullYear:\n            return date.getFullYear();\n        case DateType.Month:\n            return date.getMonth();\n        case DateType.Date:\n            return date.getDate();\n        case DateType.Hours:\n            return date.getHours();\n        case DateType.Minutes:\n            return date.getMinutes();\n        case DateType.Seconds:\n            return date.getSeconds();\n        case DateType.FractionalSeconds:\n            return date.getMilliseconds();\n        case DateType.Day:\n            return date.getDay();\n        default:\n            throw new Error(\"Unknown DateType value \\\"\" + part + \"\\\".\");\n    }\n}\n/**\n * Returns a date formatter that transforms a date into its locale string representation\n */\nfunction dateStrGetter(name, width, form, extended) {\n    if (form === void 0) { form = FormStyle.Format; }\n    if (extended === void 0) { extended = false; }\n    return function (date, locale) {\n        return getDateTranslation(date, locale, name, width, form, extended);\n    };\n}\n/**\n * Returns the locale translation of a date for a given form, type and width\n */\nfunction getDateTranslation(date, locale, name, width, form, extended) {\n    switch (name) {\n        case TranslationType.Months:\n            return getLocaleMonthNames(locale, form, width)[date.getMonth()];\n        case TranslationType.Days:\n            return getLocaleDayNames(locale, form, width)[date.getDay()];\n        case TranslationType.DayPeriods:\n            var currentHours_1 = date.getHours();\n            var currentMinutes_1 = date.getMinutes();\n            if (extended) {\n                var rules = getLocaleExtraDayPeriodRules(locale);\n                var dayPeriods_1 = getLocaleExtraDayPeriods(locale, form, width);\n                var result_1;\n                rules.forEach(function (rule, index) {\n                    if (Array.isArray(rule)) {\n                        // morning, afternoon, evening, night\n                        var _a = rule[0], hoursFrom = _a.hours, minutesFrom = _a.minutes;\n                        var _b = rule[1], hoursTo = _b.hours, minutesTo = _b.minutes;\n                        if (currentHours_1 >= hoursFrom && currentMinutes_1 >= minutesFrom &&\n                            (currentHours_1 < hoursTo ||\n                                (currentHours_1 === hoursTo && currentMinutes_1 < minutesTo))) {\n                            result_1 = dayPeriods_1[index];\n                        }\n                    }\n                    else { // noon or midnight\n                        var hours = rule.hours, minutes = rule.minutes;\n                        if (hours === currentHours_1 && minutes === currentMinutes_1) {\n                            result_1 = dayPeriods_1[index];\n                        }\n                    }\n                });\n                if (result_1) {\n                    return result_1;\n                }\n            }\n            // if no rules for the day periods, we use am/pm by default\n            return getLocaleDayPeriods(locale, form, width)[currentHours_1 < 12 ? 0 : 1];\n        case TranslationType.Eras:\n            return getLocaleEraNames(locale, width)[date.getFullYear() <= 0 ? 0 : 1];\n        default:\n            // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n            // However Closure Compiler does not understand that and reports an error in typed mode.\n            // The `throw new Error` below works around the problem, and the unexpected: never variable\n            // makes sure tsc still checks this code is unreachable.\n            var unexpected = name;\n            throw new Error(\"unexpected translation type \" + unexpected);\n    }\n}\n/**\n * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or\n * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,\n * extended = +04:30)\n */\nfunction timeZoneGetter(width) {\n    return function (date, locale, offset) {\n        var zone = -1 * offset;\n        var minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n        var hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);\n        switch (width) {\n            case ZoneWidth.Short:\n                return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.ShortGMT:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 1, minusSign);\n            case ZoneWidth.Long:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.Extended:\n                if (offset === 0) {\n                    return 'Z';\n                }\n                else {\n                    return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                        padNumber(Math.abs(zone % 60), 2, minusSign);\n                }\n            default:\n                throw new Error(\"Unknown zone width \\\"\" + width + \"\\\"\");\n        }\n    };\n}\nvar JANUARY = 0;\nvar THURSDAY = 4;\nfunction getFirstThursdayOfYear(year) {\n    var firstDayOfYear = (new Date(year, JANUARY, 1)).getDay();\n    return new Date(year, 0, 1 + ((firstDayOfYear <= THURSDAY) ? THURSDAY : THURSDAY + 7) - firstDayOfYear);\n}\nfunction getThursdayThisWeek(datetime) {\n    return new Date(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + (THURSDAY - datetime.getDay()));\n}\nfunction weekGetter(size, monthBased) {\n    if (monthBased === void 0) { monthBased = false; }\n    return function (date, locale) {\n        var result;\n        if (monthBased) {\n            var nbDaysBefore1stDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;\n            var today = date.getDate();\n            result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);\n        }\n        else {\n            var firstThurs = getFirstThursdayOfYear(date.getFullYear());\n            var thisThurs = getThursdayThisWeek(date);\n            var diff = thisThurs.getTime() - firstThurs.getTime();\n            result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\n        }\n        return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    };\n}\nvar DATE_FORMATS = {};\n// Based on CLDR formats:\n// See complete list: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n// See also explanations: http://cldr.unicode.org/translation/date-time\n// TODO(ocombe): support all missing cldr formats: Y, U, Q, D, F, e, c, j, J, C, A, v, V, X, x\nfunction getDateFormatter(format) {\n    if (DATE_FORMATS[format]) {\n        return DATE_FORMATS[format];\n    }\n    var formatter;\n    switch (format) {\n        // Era name (AD/BC)\n        case 'G':\n        case 'GG':\n        case 'GGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Abbreviated);\n            break;\n        case 'GGGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Wide);\n            break;\n        case 'GGGGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Narrow);\n            break;\n        // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)\n        case 'y':\n            formatter = dateGetter(DateType.FullYear, 1, 0, false, true);\n            break;\n        // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yy':\n            formatter = dateGetter(DateType.FullYear, 2, 0, true, true);\n            break;\n        // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yyy':\n            formatter = dateGetter(DateType.FullYear, 3, 0, false, true);\n            break;\n        // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)\n        case 'yyyy':\n            formatter = dateGetter(DateType.FullYear, 4, 0, false, true);\n            break;\n        // Month of the year (1-12), numeric\n        case 'M':\n        case 'L':\n            formatter = dateGetter(DateType.Month, 1, 1);\n            break;\n        case 'MM':\n        case 'LL':\n            formatter = dateGetter(DateType.Month, 2, 1);\n            break;\n        // Month of the year (January, ...), string, format\n        case 'MMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated);\n            break;\n        case 'MMMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide);\n            break;\n        case 'MMMMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow);\n            break;\n        // Month of the year (January, ...), string, standalone\n        case 'LLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated, FormStyle.Standalone);\n            break;\n        case 'LLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Wide, FormStyle.Standalone);\n            break;\n        case 'LLLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Narrow, FormStyle.Standalone);\n            break;\n        // Week of the year (1, ... 52)\n        case 'w':\n            formatter = weekGetter(1);\n            break;\n        case 'ww':\n            formatter = weekGetter(2);\n            break;\n        // Week of the month (1, ...)\n        case 'W':\n            formatter = weekGetter(1, true);\n            break;\n        // Day of the month (1-31)\n        case 'd':\n            formatter = dateGetter(DateType.Date, 1);\n            break;\n        case 'dd':\n            formatter = dateGetter(DateType.Date, 2);\n            break;\n        // Day of the Week\n        case 'E':\n        case 'EE':\n        case 'EEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Abbreviated);\n            break;\n        case 'EEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Wide);\n            break;\n        case 'EEEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Narrow);\n            break;\n        case 'EEEEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Short);\n            break;\n        // Generic period of the day (am-pm)\n        case 'a':\n        case 'aa':\n        case 'aaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated);\n            break;\n        case 'aaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide);\n            break;\n        case 'aaaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow);\n            break;\n        // Extended period of the day (midnight, at night, ...), standalone\n        case 'b':\n        case 'bb':\n        case 'bbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Standalone, true);\n            break;\n        case 'bbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Standalone, true);\n            break;\n        case 'bbbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Standalone, true);\n            break;\n        // Extended period of the day (midnight, night, ...), standalone\n        case 'B':\n        case 'BB':\n        case 'BBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Format, true);\n            break;\n        case 'BBBB':\n            formatter =\n                dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Format, true);\n            break;\n        case 'BBBBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Format, true);\n            break;\n        // Hour in AM/PM, (1-12)\n        case 'h':\n            formatter = dateGetter(DateType.Hours, 1, -12);\n            break;\n        case 'hh':\n            formatter = dateGetter(DateType.Hours, 2, -12);\n            break;\n        // Hour of the day (0-23)\n        case 'H':\n            formatter = dateGetter(DateType.Hours, 1);\n            break;\n        // Hour in day, padded (00-23)\n        case 'HH':\n            formatter = dateGetter(DateType.Hours, 2);\n            break;\n        // Minute of the hour (0-59)\n        case 'm':\n            formatter = dateGetter(DateType.Minutes, 1);\n            break;\n        case 'mm':\n            formatter = dateGetter(DateType.Minutes, 2);\n            break;\n        // Second of the minute (0-59)\n        case 's':\n            formatter = dateGetter(DateType.Seconds, 1);\n            break;\n        case 'ss':\n            formatter = dateGetter(DateType.Seconds, 2);\n            break;\n        // Fractional second\n        case 'S':\n            formatter = dateGetter(DateType.FractionalSeconds, 1);\n            break;\n        case 'SS':\n            formatter = dateGetter(DateType.FractionalSeconds, 2);\n            break;\n        case 'SSS':\n            formatter = dateGetter(DateType.FractionalSeconds, 3);\n            break;\n        // Timezone ISO8601 short format (-0430)\n        case 'Z':\n        case 'ZZ':\n        case 'ZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Short);\n            break;\n        // Timezone ISO8601 extended format (-04:30)\n        case 'ZZZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Extended);\n            break;\n        // Timezone GMT short format (GMT+4)\n        case 'O':\n        case 'OO':\n        case 'OOO':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'z':\n        case 'zz':\n        case 'zzz':\n            formatter = timeZoneGetter(ZoneWidth.ShortGMT);\n            break;\n        // Timezone GMT long format (GMT+0430)\n        case 'OOOO':\n        case 'ZZZZ':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'zzzz':\n            formatter = timeZoneGetter(ZoneWidth.Long);\n            break;\n        default:\n            return null;\n    }\n    DATE_FORMATS[format] = formatter;\n    return formatter;\n}\nfunction timezoneToOffset(timezone, fallback) {\n    // Support: IE 9-11 only, Edge 13-15+\n    // IE/Edge do not \"understand\" colon (`:`) in timezone\n    timezone = timezone.replace(/:/g, '');\n    var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n    return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n}\nfunction addDateMinutes(date, minutes) {\n    date = new Date(date.getTime());\n    date.setMinutes(date.getMinutes() + minutes);\n    return date;\n}\nfunction convertTimezoneToLocal(date, timezone, reverse) {\n    var reverseValue = reverse ? -1 : 1;\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n    return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));\n}\n/**\n * Converts a value to date.\n *\n * Supported input formats:\n * - `Date`\n * - number: timestamp\n * - string: numeric (e.g. \"1234\"), ISO and date strings in a format supported by\n *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\n *   Note: ISO strings without time return a date without timeoffset.\n *\n * Throws if unable to convert to a date.\n */\nfunction toDate(value) {\n    if (isDate(value)) {\n        return value;\n    }\n    if (typeof value === 'number' && !isNaN(value)) {\n        return new Date(value);\n    }\n    if (typeof value === 'string') {\n        value = value.trim();\n        var parsedNb = parseFloat(value);\n        // any string that only contains numbers, like \"1234\" but not like \"1234hello\"\n        if (!isNaN(value - parsedNb)) {\n            return new Date(parsedNb);\n        }\n        if (/^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            /* For ISO Strings without time the day, month and year must be extracted from the ISO String\n            before Date creation to avoid time offset and errors in the new Date.\n            If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n            date, some browsers (e.g. IE 9) will throw an invalid Date error.\n            If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n            is applied.\n            Note: ISO months are 0 for January, 1 for February, ... */\n            var _a = __read(value.split('-').map(function (val) { return +val; }), 3), y = _a[0], m = _a[1], d = _a[2];\n            return new Date(y, m - 1, d);\n        }\n        var match = void 0;\n        if (match = value.match(ISO8601_DATE_REGEX)) {\n            return isoStringToDate(match);\n        }\n    }\n    var date = new Date(value);\n    if (!isDate(date)) {\n        throw new Error(\"Unable to convert \\\"\" + value + \"\\\" into a date\");\n    }\n    return date;\n}\n/**\n * Converts a date in ISO8601 to a Date.\n * Used instead of `Date.parse` because of browser discrepancies.\n */\nfunction isoStringToDate(match) {\n    var date = new Date(0);\n    var tzHour = 0;\n    var tzMin = 0;\n    // match[8] means that the string contains \"Z\" (UTC) or a timezone like \"+01:00\" or \"+0100\"\n    var dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n    var timeSetter = match[8] ? date.setUTCHours : date.setHours;\n    // if there is a timezone defined like \"+01:00\" or \"+0100\"\n    if (match[9]) {\n        tzHour = Number(match[9] + match[10]);\n        tzMin = Number(match[9] + match[11]);\n    }\n    dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));\n    var h = Number(match[4] || 0) - tzHour;\n    var m = Number(match[5] || 0) - tzMin;\n    var s = Number(match[6] || 0);\n    var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n    timeSetter.call(date, h, m, s, ms);\n    return date;\n}\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\nvar MAX_DIGITS = 22;\nvar DECIMAL_SEP = '.';\nvar ZERO_CHAR = '0';\nvar PATTERN_SEP = ';';\nvar GROUP_SEP = ',';\nvar DIGIT_CHAR = '#';\nvar CURRENCY_CHAR = '¤';\nvar PERCENT_CHAR = '%';\n/**\n * Transforms a number to a locale string based on a style and a format\n */\nfunction formatNumberToLocaleString(value, pattern, locale, groupSymbol, decimalSymbol, digitsInfo, isPercent) {\n    if (isPercent === void 0) { isPercent = false; }\n    var formattedText = '';\n    var isZero = false;\n    if (!isFinite(value)) {\n        formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);\n    }\n    else {\n        var parsedNumber = parseNumber(value);\n        if (isPercent) {\n            parsedNumber = toPercent(parsedNumber);\n        }\n        var minInt = pattern.minInt;\n        var minFraction = pattern.minFrac;\n        var maxFraction = pattern.maxFrac;\n        if (digitsInfo) {\n            var parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n            if (parts === null) {\n                throw new Error(digitsInfo + \" is not a valid digit info\");\n            }\n            var minIntPart = parts[1];\n            var minFractionPart = parts[3];\n            var maxFractionPart = parts[5];\n            if (minIntPart != null) {\n                minInt = parseIntAutoRadix(minIntPart);\n            }\n            if (minFractionPart != null) {\n                minFraction = parseIntAutoRadix(minFractionPart);\n            }\n            if (maxFractionPart != null) {\n                maxFraction = parseIntAutoRadix(maxFractionPart);\n            }\n            else if (minFractionPart != null && minFraction > maxFraction) {\n                maxFraction = minFraction;\n            }\n        }\n        roundNumber(parsedNumber, minFraction, maxFraction);\n        var digits = parsedNumber.digits;\n        var integerLen = parsedNumber.integerLen;\n        var exponent = parsedNumber.exponent;\n        var decimals = [];\n        isZero = digits.every(function (d) { return !d; });\n        // pad zeros for small numbers\n        for (; integerLen < minInt; integerLen++) {\n            digits.unshift(0);\n        }\n        // pad zeros for small numbers\n        for (; integerLen < 0; integerLen++) {\n            digits.unshift(0);\n        }\n        // extract decimals digits\n        if (integerLen > 0) {\n            decimals = digits.splice(integerLen, digits.length);\n        }\n        else {\n            decimals = digits;\n            digits = [0];\n        }\n        // format the integer digits with grouping separators\n        var groups = [];\n        if (digits.length >= pattern.lgSize) {\n            groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));\n        }\n        while (digits.length > pattern.gSize) {\n            groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));\n        }\n        if (digits.length) {\n            groups.unshift(digits.join(''));\n        }\n        formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol));\n        // append the decimal digits\n        if (decimals.length) {\n            formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');\n        }\n        if (exponent) {\n            formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;\n        }\n    }\n    if (value < 0 && !isZero) {\n        formattedText = pattern.negPre + formattedText + pattern.negSuf;\n    }\n    else {\n        formattedText = pattern.posPre + formattedText + pattern.posSuf;\n    }\n    return formattedText;\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as currency using locale rules.\n *\n * Use `currency` to format a number as currency.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `currency` is the string that represents the currency, it can be its symbol or its name.\n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `digitInfo` See {@link DecimalPipe} for more details.\n *\n * @publicApi\n */\nfunction formatCurrency(value, locale, currency, currencyCode, digitsInfo) {\n    var format = getLocaleNumberFormat(locale, NumberFormatStyle.Currency);\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    pattern.minFrac = getNumberOfCurrencyDigits(currencyCode);\n    pattern.maxFrac = pattern.minFrac;\n    var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.CurrencyGroup, NumberSymbol.CurrencyDecimal, digitsInfo);\n    return res\n        .replace(CURRENCY_CHAR, currency)\n        // if we have 2 time the currency character, the second one is ignored\n        .replace(CURRENCY_CHAR, '');\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as a percentage according to locale rules.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `digitInfo` See {@link DecimalPipe} for more details.\n *\n * @publicApi\n */\nfunction formatPercent(value, locale, digitsInfo) {\n    var format = getLocaleNumberFormat(locale, NumberFormatStyle.Percent);\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo, true);\n    return res.replace(new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the locale.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `digitInfo` See {@link DecimalPipe} for more details.\n *\n * @publicApi\n */\nfunction formatNumber(value, locale, digitsInfo) {\n    var format = getLocaleNumberFormat(locale, NumberFormatStyle.Decimal);\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    return formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo);\n}\nfunction parseNumberFormat(format, minusSign) {\n    if (minusSign === void 0) { minusSign = '-'; }\n    var p = {\n        minInt: 1,\n        minFrac: 0,\n        maxFrac: 0,\n        posPre: '',\n        posSuf: '',\n        negPre: '',\n        negSuf: '',\n        gSize: 0,\n        lgSize: 0\n    };\n    var patternParts = format.split(PATTERN_SEP);\n    var positive = patternParts[0];\n    var negative = patternParts[1];\n    var positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ?\n        positive.split(DECIMAL_SEP) :\n        [\n            positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1),\n            positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)\n        ], integer = positiveParts[0], fraction = positiveParts[1] || '';\n    p.posPre = integer.substr(0, integer.indexOf(DIGIT_CHAR));\n    for (var i = 0; i < fraction.length; i++) {\n        var ch = fraction.charAt(i);\n        if (ch === ZERO_CHAR) {\n            p.minFrac = p.maxFrac = i + 1;\n        }\n        else if (ch === DIGIT_CHAR) {\n            p.maxFrac = i + 1;\n        }\n        else {\n            p.posSuf += ch;\n        }\n    }\n    var groups = integer.split(GROUP_SEP);\n    p.gSize = groups[1] ? groups[1].length : 0;\n    p.lgSize = (groups[2] || groups[1]) ? (groups[2] || groups[1]).length : 0;\n    if (negative) {\n        var trunkLen = positive.length - p.posPre.length - p.posSuf.length, pos = negative.indexOf(DIGIT_CHAR);\n        p.negPre = negative.substr(0, pos).replace(/'/g, '');\n        p.negSuf = negative.substr(pos + trunkLen).replace(/'/g, '');\n    }\n    else {\n        p.negPre = minusSign + p.posPre;\n        p.negSuf = p.posSuf;\n    }\n    return p;\n}\n// Transforms a parsed number into a percentage by multiplying it by 100\nfunction toPercent(parsedNumber) {\n    // if the number is 0, don't do anything\n    if (parsedNumber.digits[0] === 0) {\n        return parsedNumber;\n    }\n    // Getting the current number of decimals\n    var fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;\n    if (parsedNumber.exponent) {\n        parsedNumber.exponent += 2;\n    }\n    else {\n        if (fractionLen === 0) {\n            parsedNumber.digits.push(0, 0);\n        }\n        else if (fractionLen === 1) {\n            parsedNumber.digits.push(0);\n        }\n        parsedNumber.integerLen += 2;\n    }\n    return parsedNumber;\n}\n/**\n * Parses a number.\n * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/\n */\nfunction parseNumber(num) {\n    var numStr = Math.abs(num) + '';\n    var exponent = 0, digits, integerLen;\n    var i, j, zeros;\n    // Decimal point?\n    if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {\n        numStr = numStr.replace(DECIMAL_SEP, '');\n    }\n    // Exponential form?\n    if ((i = numStr.search(/e/i)) > 0) {\n        // Work out the exponent.\n        if (integerLen < 0)\n            integerLen = i;\n        integerLen += +numStr.slice(i + 1);\n        numStr = numStr.substring(0, i);\n    }\n    else if (integerLen < 0) {\n        // There was no decimal point or exponent so it is an integer.\n        integerLen = numStr.length;\n    }\n    // Count the number of leading zeros.\n    for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) { /* empty */\n    }\n    if (i === (zeros = numStr.length)) {\n        // The digits are all zero.\n        digits = [0];\n        integerLen = 1;\n    }\n    else {\n        // Count the number of trailing zeros\n        zeros--;\n        while (numStr.charAt(zeros) === ZERO_CHAR)\n            zeros--;\n        // Trailing zeros are insignificant so ignore them\n        integerLen -= i;\n        digits = [];\n        // Convert string to array of digits without leading/trailing zeros.\n        for (j = 0; i <= zeros; i++, j++) {\n            digits[j] = Number(numStr.charAt(i));\n        }\n    }\n    // If the number overflows the maximum allowed digits then use an exponent.\n    if (integerLen > MAX_DIGITS) {\n        digits = digits.splice(0, MAX_DIGITS - 1);\n        exponent = integerLen - 1;\n        integerLen = 1;\n    }\n    return { digits: digits, exponent: exponent, integerLen: integerLen };\n}\n/**\n * Round the parsed number to the specified number of decimal places\n * This function changes the parsedNumber in-place\n */\nfunction roundNumber(parsedNumber, minFrac, maxFrac) {\n    if (minFrac > maxFrac) {\n        throw new Error(\"The minimum number of digits after fraction (\" + minFrac + \") is higher than the maximum (\" + maxFrac + \").\");\n    }\n    var digits = parsedNumber.digits;\n    var fractionLen = digits.length - parsedNumber.integerLen;\n    var fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac);\n    // The index of the digit to where rounding is to occur\n    var roundAt = fractionSize + parsedNumber.integerLen;\n    var digit = digits[roundAt];\n    if (roundAt > 0) {\n        // Drop fractional digits beyond `roundAt`\n        digits.splice(Math.max(parsedNumber.integerLen, roundAt));\n        // Set non-fractional digits beyond `roundAt` to 0\n        for (var j = roundAt; j < digits.length; j++) {\n            digits[j] = 0;\n        }\n    }\n    else {\n        // We rounded to zero so reset the parsedNumber\n        fractionLen = Math.max(0, fractionLen);\n        parsedNumber.integerLen = 1;\n        digits.length = Math.max(1, roundAt = fractionSize + 1);\n        digits[0] = 0;\n        for (var i = 1; i < roundAt; i++)\n            digits[i] = 0;\n    }\n    if (digit >= 5) {\n        if (roundAt - 1 < 0) {\n            for (var k = 0; k > roundAt; k--) {\n                digits.unshift(0);\n                parsedNumber.integerLen++;\n            }\n            digits.unshift(1);\n            parsedNumber.integerLen++;\n        }\n        else {\n            digits[roundAt - 1]++;\n        }\n    }\n    // Pad out with zeros to get the required fraction length\n    for (; fractionLen < Math.max(0, fractionSize); fractionLen++)\n        digits.push(0);\n    var dropTrailingZeros = fractionSize !== 0;\n    // Minimal length = nb of decimals required + current nb of integers\n    // Any number besides that is optional and can be removed if it's a trailing 0\n    var minLen = minFrac + parsedNumber.integerLen;\n    // Do any carrying, e.g. a digit was rounded up to 10\n    var carry = digits.reduceRight(function (carry, d, i, digits) {\n        d = d + carry;\n        digits[i] = d < 10 ? d : d - 10; // d % 10\n        if (dropTrailingZeros) {\n            // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)\n            if (digits[i] === 0 && i >= minLen) {\n                digits.pop();\n            }\n            else {\n                dropTrailingZeros = false;\n            }\n        }\n        return d >= 10 ? 1 : 0; // Math.floor(d / 10);\n    }, 0);\n    if (carry) {\n        digits.unshift(carry);\n        parsedNumber.integerLen++;\n    }\n}\nfunction parseIntAutoRadix(text) {\n    var result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated from v5\n */\nvar DEPRECATED_PLURAL_FN = new InjectionToken('UseV4Plurals');\n/**\n * @publicApi\n */\nvar NgLocalization = /** @class */ (function () {\n    function NgLocalization() {\n    }\n    return NgLocalization;\n}());\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n */\nfunction getPluralCategory(value, cases, ngLocalization, locale) {\n    var key = \"=\" + value;\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    key = ngLocalization.getPluralCategory(value, locale);\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    if (cases.indexOf('other') > -1) {\n        return 'other';\n    }\n    throw new Error(\"No plural message found for value \\\"\" + value + \"\\\"\");\n}\n/**\n * Returns the plural case based on the locale\n *\n * @publicApi\n */\nvar NgLocaleLocalization = /** @class */ (function (_super) {\n    __extends(NgLocaleLocalization, _super);\n    function NgLocaleLocalization(locale, \n    /** @deprecated from v5 */\n    deprecatedPluralFn) {\n        var _this = _super.call(this) || this;\n        _this.locale = locale;\n        _this.deprecatedPluralFn = deprecatedPluralFn;\n        return _this;\n    }\n    NgLocaleLocalization.prototype.getPluralCategory = function (value, locale) {\n        var plural = this.deprecatedPluralFn ? this.deprecatedPluralFn(locale || this.locale, value) :\n            getLocalePluralCase(locale || this.locale)(value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    };\n    NgLocaleLocalization = __decorate([\n        __param(0, Inject(LOCALE_ID)),\n        __param(1, Optional()), __param(1, Inject(DEPRECATED_PLURAL_FN)),\n        __metadata(\"design:paramtypes\", [String, Object])\n    ], NgLocaleLocalization);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgLocaleLocalization, [{\n        type: Injectable\n    }], function () { return [{\n        type: String,\n        decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }]\n    }, {\n        type: Object,\n        decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DEPRECATED_PLURAL_FN]\n            }]\n    }]; }, { getPluralCategory: [] });\nNgLocaleLocalization.ngInjectableDef = ɵngcc0.defineInjectable({ token: NgLocaleLocalization, factory: function NgLocaleLocalization_Factory(t) { return new (t || NgLocaleLocalization)(ɵngcc0.inject(LOCALE_ID), ɵngcc0.inject(DEPRECATED_PLURAL_FN, 8)); }, providedIn: null });\n    return NgLocaleLocalization;\n}(NgLocalization));\n/**\n * Returns the plural case based on the locale\n *\n * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n * @publicApi\n */\nfunction getPluralCase(locale, nLike) {\n    // TODO(vicb): lazy compute\n    if (typeof nLike === 'string') {\n        nLike = parseInt(nLike, 10);\n    }\n    var n = nLike;\n    var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n    var i = Math.floor(Math.abs(n));\n    var v = nDecimal.length;\n    var f = parseInt(nDecimal, 10);\n    var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n    var lang = locale.split('-')[0].toLowerCase();\n    switch (lang) {\n        case 'af':\n        case 'asa':\n        case 'az':\n        case 'bem':\n        case 'bez':\n        case 'bg':\n        case 'brx':\n        case 'ce':\n        case 'cgg':\n        case 'chr':\n        case 'ckb':\n        case 'ee':\n        case 'el':\n        case 'eo':\n        case 'es':\n        case 'eu':\n        case 'fo':\n        case 'fur':\n        case 'gsw':\n        case 'ha':\n        case 'haw':\n        case 'hu':\n        case 'jgo':\n        case 'jmc':\n        case 'ka':\n        case 'kk':\n        case 'kkj':\n        case 'kl':\n        case 'ks':\n        case 'ksb':\n        case 'ky':\n        case 'lb':\n        case 'lg':\n        case 'mas':\n        case 'mgo':\n        case 'ml':\n        case 'mn':\n        case 'nb':\n        case 'nd':\n        case 'ne':\n        case 'nn':\n        case 'nnh':\n        case 'nyn':\n        case 'om':\n        case 'or':\n        case 'os':\n        case 'ps':\n        case 'rm':\n        case 'rof':\n        case 'rwk':\n        case 'saq':\n        case 'seh':\n        case 'sn':\n        case 'so':\n        case 'sq':\n        case 'ta':\n        case 'te':\n        case 'teo':\n        case 'tk':\n        case 'tr':\n        case 'ug':\n        case 'uz':\n        case 'vo':\n        case 'vun':\n        case 'wae':\n        case 'xog':\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ak':\n        case 'ln':\n        case 'mg':\n        case 'pa':\n        case 'ti':\n            if (n === Math.floor(n) && n >= 0 && n <= 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'am':\n        case 'as':\n        case 'bn':\n        case 'fa':\n        case 'gu':\n        case 'hi':\n        case 'kn':\n        case 'mr':\n        case 'zu':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ar':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                return Plural.Many;\n            return Plural.Other;\n        case 'ast':\n        case 'ca':\n        case 'de':\n        case 'en':\n        case 'et':\n        case 'fi':\n        case 'fy':\n        case 'gl':\n        case 'it':\n        case 'nl':\n        case 'sv':\n        case 'sw':\n        case 'ur':\n        case 'yi':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            return Plural.Other;\n        case 'be':\n            if (n % 10 === 1 && !(n % 100 === 11))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                !(n % 100 >= 12 && n % 100 <= 14))\n                return Plural.Few;\n            if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'br':\n            if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                return Plural.One;\n            if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                return Plural.Two;\n            if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                    n % 100 >= 90 && n % 100 <= 99))\n                return Plural.Few;\n            if (!(n === 0) && n % 1e6 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'bs':\n        case 'hr':\n        case 'sr':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14) ||\n                f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                    !(f % 100 >= 12 && f % 100 <= 14))\n                return Plural.Few;\n            return Plural.Other;\n        case 'cs':\n        case 'sk':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'cy':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === 3)\n                return Plural.Few;\n            if (n === 6)\n                return Plural.Many;\n            return Plural.Other;\n        case 'da':\n            if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                return Plural.One;\n            return Plural.Other;\n        case 'dsb':\n        case 'hsb':\n            if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ff':\n        case 'fr':\n        case 'hy':\n        case 'kab':\n            if (i === 0 || i === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'fil':\n            if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                return Plural.One;\n            return Plural.Other;\n        case 'ga':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === Math.floor(n) && n >= 3 && n <= 6)\n                return Plural.Few;\n            if (n === Math.floor(n) && n >= 7 && n <= 10)\n                return Plural.Many;\n            return Plural.Other;\n        case 'gd':\n            if (n === 1 || n === 11)\n                return Plural.One;\n            if (n === 2 || n === 12)\n                return Plural.Two;\n            if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                return Plural.Few;\n            return Plural.Other;\n        case 'gv':\n            if (v === 0 && i % 10 === 1)\n                return Plural.One;\n            if (v === 0 && i % 10 === 2)\n                return Plural.Two;\n            if (v === 0 &&\n                (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'he':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === 2 && v === 0)\n                return Plural.Two;\n            if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'is':\n            if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'ksh':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'kw':\n        case 'naq':\n        case 'se':\n        case 'smn':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            return Plural.Other;\n        case 'lag':\n            if (n === 0)\n                return Plural.Zero;\n            if ((i === 0 || i === 1) && !(n === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'lt':\n            if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.Few;\n            if (!(f === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'lv':\n        case 'prg':\n            if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                return Plural.Zero;\n            if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                !(v === 2) && f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mk':\n            if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mt':\n            if (n === 1)\n                return Plural.One;\n            if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pl':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pt':\n            if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                return Plural.One;\n            return Plural.Other;\n        case 'ro':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (!(v === 0) || n === 0 ||\n                !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ru':\n        case 'uk':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && i % 10 === 0 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'shi':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            if (n === Math.floor(n) && n >= 2 && n <= 10)\n                return Plural.Few;\n            return Plural.Other;\n        case 'si':\n            if (n === 0 || n === 1 || i === 0 && f === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'sl':\n            if (v === 0 && i % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                return Plural.Few;\n            return Plural.Other;\n        case 'tzm':\n            if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                return Plural.One;\n            return Plural.Other;\n        // When there is no specification, the default is always \"other\"\n        // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n        // > other (required—general plural form — also used if the language only has a single form)\n        default:\n            return Plural.Other;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction parseCookieValue(cookieStr, name) {\n    var e_1, _a;\n    name = encodeURIComponent(name);\n    try {\n        for (var _b = __values(cookieStr.split(';')), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var cookie = _c.value;\n            var eqIndex = cookie.indexOf('=');\n            var _d = __read(eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], 2), cookieName = _d[0], cookieValue = _d[1];\n            if (cookieName.trim() === name) {\n                return decodeURIComponent(cookieValue);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n *\n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n *\n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n *\n * @description\n *\n * Adds and removes CSS classes on an HTML element.\n *\n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n *\n * @publicApi\n */\nvar NgClass = /** @class */ (function () {\n    function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n        this._iterableDiffers = _iterableDiffers;\n        this._keyValueDiffers = _keyValueDiffers;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n        this._initialClasses = [];\n    }\n    Object.defineProperty(NgClass.prototype, \"klass\", {\n        set: function (value) {\n            this._removeClasses(this._initialClasses);\n            this._initialClasses = typeof value === 'string' ? value.split(/\\s+/) : [];\n            this._applyClasses(this._initialClasses);\n            this._applyClasses(this._rawClass);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgClass.prototype, \"ngClass\", {\n        set: function (value) {\n            this._removeClasses(this._rawClass);\n            this._applyClasses(this._initialClasses);\n            this._iterableDiffer = null;\n            this._keyValueDiffer = null;\n            this._rawClass = typeof value === 'string' ? value.split(/\\s+/) : value;\n            if (this._rawClass) {\n                if (ɵisListLikeIterable(this._rawClass)) {\n                    this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n                }\n                else {\n                    this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgClass.prototype.ngDoCheck = function () {\n        if (this._iterableDiffer) {\n            var iterableChanges = this._iterableDiffer.diff(this._rawClass);\n            if (iterableChanges) {\n                this._applyIterableChanges(iterableChanges);\n            }\n        }\n        else if (this._keyValueDiffer) {\n            var keyValueChanges = this._keyValueDiffer.diff(this._rawClass);\n            if (keyValueChanges) {\n                this._applyKeyValueChanges(keyValueChanges);\n            }\n        }\n    };\n    NgClass.prototype._applyKeyValueChanges = function (changes) {\n        var _this = this;\n        changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n        changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n        changes.forEachRemovedItem(function (record) {\n            if (record.previousValue) {\n                _this._toggleClass(record.key, false);\n            }\n        });\n    };\n    NgClass.prototype._applyIterableChanges = function (changes) {\n        var _this = this;\n        changes.forEachAddedItem(function (record) {\n            if (typeof record.item === 'string') {\n                _this._toggleClass(record.item, true);\n            }\n            else {\n                throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + ɵstringify(record.item));\n            }\n        });\n        changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n    };\n    /**\n     * Applies a collection of CSS classes to the DOM element.\n     *\n     * For argument of type Set and Array CSS class names contained in those collections are always\n     * added.\n     * For argument of type Map CSS class name in the map's key is toggled based on the value (added\n     * for truthy and removed for falsy).\n     */\n    NgClass.prototype._applyClasses = function (rawClassVal) {\n        var _this = this;\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                rawClassVal.forEach(function (klass) { return _this._toggleClass(klass, true); });\n            }\n            else {\n                Object.keys(rawClassVal).forEach(function (klass) { return _this._toggleClass(klass, !!rawClassVal[klass]); });\n            }\n        }\n    };\n    /**\n     * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup\n     * purposes.\n     */\n    NgClass.prototype._removeClasses = function (rawClassVal) {\n        var _this = this;\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                rawClassVal.forEach(function (klass) { return _this._toggleClass(klass, false); });\n            }\n            else {\n                Object.keys(rawClassVal).forEach(function (klass) { return _this._toggleClass(klass, false); });\n            }\n        }\n    };\n    NgClass.prototype._toggleClass = function (klass, enabled) {\n        var _this = this;\n        klass = klass.trim();\n        if (klass) {\n            klass.split(/\\s+/g).forEach(function (klass) {\n                if (enabled) {\n                    _this._renderer.addClass(_this._ngEl.nativeElement, klass);\n                }\n                else {\n                    _this._renderer.removeClass(_this._ngEl.nativeElement, klass);\n                }\n            });\n        }\n    };\n    __decorate([\n        Input('class'),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], NgClass.prototype, \"klass\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgClass.prototype, \"ngClass\", null);\n    NgClass = __decorate([\n        __metadata(\"design:paramtypes\", [IterableDiffers, KeyValueDiffers,\n            ElementRef, Renderer2])\n    ], NgClass);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgClass, [{\n        type: Directive,\n        args: [{ selector: '[ngClass]' }]\n    }], function () { return [{\n        type: IterableDiffers\n    }, {\n        type: KeyValueDiffers\n    }, {\n        type: ElementRef\n    }, {\n        type: Renderer2\n    }]; }, { _iterableDiffers: [], _keyValueDiffers: [], _ngEl: [], _renderer: [], _initialClasses: [], ngDoCheck: [], _applyKeyValueChanges: [], _applyIterableChanges: [], _applyClasses: [], _removeClasses: [], _toggleClass: [] });\nNgClass.ngDirectiveDef = ɵngcc0.ɵdefineDirective({ type: NgClass, selectors: [[\"\", \"ngClass\", \"\"]], factory: function NgClass_Factory(t) { return new (t || NgClass)(ɵngcc0.ɵdirectiveInject(IterableDiffers), ɵngcc0.ɵdirectiveInject(KeyValueDiffers), ɵngcc0.ɵdirectiveInject(ElementRef), ɵngcc0.ɵdirectiveInject(Renderer2)); } });\n    return NgClass;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Instantiates a single {@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n *\n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n *\n * @usageNotes\n *\n * ### Fine tune control\n *\n * You can control the component creation process by using the following optional attributes:\n *\n * * `ngComponentOutletInjector`: Optional custom {@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n *\n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n *\n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n *\n * ### Syntax\n *\n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n *\n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n *\n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n *\n * ### A simple example\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n *\n * A more complete example with additional options:\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n\n * A more complete example with ngModuleFactory:\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}\n *\n * @publicApi\n * @ngModule CommonModule\n */\nvar NgComponentOutlet = /** @class */ (function () {\n    function NgComponentOutlet(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._componentRef = null;\n        this._moduleRef = null;\n    }\n    NgComponentOutlet.prototype.ngOnChanges = function (changes) {\n        this._viewContainerRef.clear();\n        this._componentRef = null;\n        if (this.ngComponentOutlet) {\n            var elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n            if (changes['ngComponentOutletNgModuleFactory']) {\n                if (this._moduleRef)\n                    this._moduleRef.destroy();\n                if (this.ngComponentOutletNgModuleFactory) {\n                    var parentModule = elInjector.get(NgModuleRef);\n                    this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n                }\n                else {\n                    this._moduleRef = null;\n                }\n            }\n            var componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                elInjector.get(ComponentFactoryResolver);\n            var componentFactory = componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n            this._componentRef = this._viewContainerRef.createComponent(componentFactory, this._viewContainerRef.length, elInjector, this.ngComponentOutletContent);\n        }\n    };\n    NgComponentOutlet.prototype.ngOnDestroy = function () {\n        if (this._moduleRef)\n            this._moduleRef.destroy();\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Type)\n    ], NgComponentOutlet.prototype, \"ngComponentOutlet\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Injector)\n    ], NgComponentOutlet.prototype, \"ngComponentOutletInjector\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], NgComponentOutlet.prototype, \"ngComponentOutletContent\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", NgModuleFactory)\n    ], NgComponentOutlet.prototype, \"ngComponentOutletNgModuleFactory\", void 0);\n    NgComponentOutlet = __decorate([\n        __metadata(\"design:paramtypes\", [ViewContainerRef])\n    ], NgComponentOutlet);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgComponentOutlet, [{\n        type: Directive,\n        args: [{ selector: '[ngComponentOutlet]' }]\n    }], function () { return [{\n        type: ViewContainerRef\n    }]; }, { _viewContainerRef: [], _componentRef: [], _moduleRef: [], ngOnChanges: [], ngOnDestroy: [], ngComponentOutlet: [{\n            type: Input\n        }], ngComponentOutletInjector: [{\n            type: Input\n        }], ngComponentOutletContent: [{\n            type: Input\n        }], ngComponentOutletNgModuleFactory: [{\n            type: Input\n        }] });\nNgComponentOutlet.ngDirectiveDef = ɵngcc0.ɵdefineDirective({ type: NgComponentOutlet, selectors: [[\"\", \"ngComponentOutlet\", \"\"]], factory: function NgComponentOutlet_Factory(t) { return new (t || NgComponentOutlet)(ɵngcc0.ɵdirectiveInject(ViewContainerRef)); }, inputs: { ngComponentOutlet: \"ngComponentOutlet\", ngComponentOutletInjector: \"ngComponentOutletInjector\", ngComponentOutletContent: \"ngComponentOutletContent\", ngComponentOutletNgModuleFactory: \"ngComponentOutletNgModuleFactory\" }, features: [ɵngcc0.ɵNgOnChangesFeature] });\n    return NgComponentOutlet;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar NgForOfContext = /** @class */ (function () {\n    function NgForOfContext($implicit, ngForOf, index, count) {\n        this.$implicit = $implicit;\n        this.ngForOf = ngForOf;\n        this.index = index;\n        this.count = count;\n    }\n    Object.defineProperty(NgForOfContext.prototype, \"first\", {\n        get: function () { return this.index === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"last\", {\n        get: function () { return this.index === this.count - 1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"even\", {\n        get: function () { return this.index % 2 === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"odd\", {\n        get: function () { return !this.even; },\n        enumerable: true,\n        configurable: true\n    });\n    return NgForOfContext;\n}());\n/**\n * The `NgForOf` directive instantiates a template once per item from an iterable. The context\n * for each instantiated template inherits from the outer context with the given loop variable\n * set to the current item from the iterable.\n *\n * @usageNotes\n *\n * ### Local Variables\n *\n * `NgForOf` provides several exported values that can be aliased to local variables:\n *\n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n *\n * ```\n * <li *ngFor=\"let user of userObservable | async as users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n *\n * ### Change Propagation\n *\n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n *\n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n * * Otherwise, the DOM element for that item will remain the same.\n *\n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n *\n * It is possible for the identities of elements in the iterator to change while the data does not.\n * This can happen, for example, if the iterator produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted). This is an expensive operation and should\n * be avoided if possible.\n *\n * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.\n * `trackBy` takes a function which has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n *\n * ### Syntax\n *\n * - `<li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>`\n *\n * With `<ng-template>` element:\n *\n * ```\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n *\n * ### Example\n *\n * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n * example.\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar NgForOf = /** @class */ (function () {\n    function NgForOf(_viewContainer, _template, _differs) {\n        this._viewContainer = _viewContainer;\n        this._template = _template;\n        this._differs = _differs;\n        this._ngForOfDirty = true;\n        this._differ = null;\n    }\n    Object.defineProperty(NgForOf.prototype, \"ngForOf\", {\n        set: function (ngForOf) {\n            this._ngForOf = ngForOf;\n            this._ngForOfDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOf.prototype, \"ngForTrackBy\", {\n        get: function () { return this._trackByFn; },\n        set: function (fn) {\n            if (isDevMode() && fn != null && typeof fn !== 'function') {\n                // TODO(vicb): use a log service once there is a public one available\n                if (console && console.warn) {\n                    console.warn(\"trackBy must be a function, but received \" + JSON.stringify(fn) + \". \" +\n                        \"See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.\");\n                }\n            }\n            this._trackByFn = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOf.prototype, \"ngForTemplate\", {\n        set: function (value) {\n            // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n            // The current type is too restrictive; a template that just uses index, for example,\n            // should be acceptable.\n            if (value) {\n                this._template = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgForOf.prototype.ngDoCheck = function () {\n        if (this._ngForOfDirty) {\n            this._ngForOfDirty = false;\n            // React on ngForOf changes only once all inputs have been initialized\n            var value = this._ngForOf;\n            if (!this._differ && value) {\n                try {\n                    this._differ = this._differs.find(value).create(this.ngForTrackBy);\n                }\n                catch (_a) {\n                    throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n                }\n            }\n        }\n        if (this._differ) {\n            var changes = this._differ.diff(this._ngForOf);\n            if (changes)\n                this._applyChanges(changes);\n        }\n    };\n    NgForOf.prototype._applyChanges = function (changes) {\n        var _this = this;\n        var insertTuples = [];\n        changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n            if (item.previousIndex == null) {\n                var view = _this._viewContainer.createEmbeddedView(_this._template, new NgForOfContext(null, _this._ngForOf, -1, -1), currentIndex);\n                var tuple = new RecordViewTuple(item, view);\n                insertTuples.push(tuple);\n            }\n            else if (currentIndex == null) {\n                _this._viewContainer.remove(adjustedPreviousIndex);\n            }\n            else {\n                var view = _this._viewContainer.get(adjustedPreviousIndex);\n                _this._viewContainer.move(view, currentIndex);\n                var tuple = new RecordViewTuple(item, view);\n                insertTuples.push(tuple);\n            }\n        });\n        for (var i = 0; i < insertTuples.length; i++) {\n            this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n        }\n        for (var i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\n            var viewRef = this._viewContainer.get(i);\n            viewRef.context.index = i;\n            viewRef.context.count = ilen;\n            viewRef.context.ngForOf = this._ngForOf;\n        }\n        changes.forEachIdentityChange(function (record) {\n            var viewRef = _this._viewContainer.get(record.currentIndex);\n            viewRef.context.$implicit = record.item;\n        });\n    };\n    NgForOf.prototype._perViewChange = function (view, record) {\n        view.context.$implicit = record.item;\n    };\n    /**\n     * Assert the correct type of the context for the template that `NgForOf` will render.\n     *\n     * The presence of this method is a signal to the Ivy template type check compiler that the\n     * `NgForOf` structural directive renders its template with a specific context type.\n     */\n    NgForOf.ngTemplateContextGuard = function (dir, ctx) {\n        return true;\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgForOf.prototype, \"ngForOf\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function])\n    ], NgForOf.prototype, \"ngForTrackBy\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", TemplateRef),\n        __metadata(\"design:paramtypes\", [TemplateRef])\n    ], NgForOf.prototype, \"ngForTemplate\", null);\n    NgForOf = __decorate([\n        __metadata(\"design:paramtypes\", [ViewContainerRef, TemplateRef,\n            IterableDiffers])\n    ], NgForOf);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgForOf, [{\n        type: Directive,\n        args: [{ selector: '[ngFor][ngForOf]' }]\n    }], function () { return [{\n        type: ViewContainerRef\n    }, {\n        type: TemplateRef\n    }, {\n        type: IterableDiffers\n    }]; }, { _viewContainer: [], _template: [], _differs: [], _ngForOfDirty: [], _differ: [], ngDoCheck: [], _applyChanges: [], _perViewChange: [] });\nNgForOf.ngDirectiveDef = ɵngcc0.ɵdefineDirective({ type: NgForOf, selectors: [[\"\", \"ngFor\", \"\", \"ngForOf\", \"\"]], factory: function NgForOf_Factory(t) { return new (t || NgForOf)(ɵngcc0.ɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵdirectiveInject(TemplateRef), ɵngcc0.ɵdirectiveInject(IterableDiffers)); } });\n    return NgForOf;\n}());\nvar RecordViewTuple = /** @class */ (function () {\n    function RecordViewTuple(record, view) {\n        this.record = record;\n        this.view = view;\n    }\n    return RecordViewTuple;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Conditionally includes a template based on the value of an `expression`.\n *\n * `ngIf` evaluates the `expression` and then renders the `then` or `else` template in its place\n * when expression is truthy or falsy respectively. Typically the:\n *  - `then` template is the inline template of `ngIf` unless bound to a different value.\n *  - `else` template is blank unless it is bound.\n *\n *\n * @usageNotes\n *\n * ### Most common usage\n *\n * The most common usage of the `ngIf` directive is to conditionally show the inline template as\n * seen in this example:\n * {@example common/ngIf/ts/module.ts region='NgIfSimple'}\n *\n * ### Showing an alternative template using `else`\n *\n * If it is necessary to display a template when the `expression` is falsy use the `else` template\n * binding as shown. Note that the `else` binding points to a `<ng-template>` labeled `#elseBlock`.\n * The template can be defined anywhere in the component view but is typically placed right after\n * `ngIf` for readability.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfElse'}\n *\n * ### Using non-inlined `then` template\n *\n * Usually the `then` template is the inlined template of the `ngIf`, but it can be changed using\n * a binding (just like `else`). Because `then` and `else` are bindings, the template references can\n * change at runtime as shown in this example.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n *\n * ### Storing conditional result in a variable\n *\n * A common pattern is that we need to show a set of properties from the same object. If the\n * object is undefined, then we have to use the safe-traversal-operator `?.` to guard against\n * dereferencing a `null` value. This is especially the case when waiting on async data such as\n * when using the `async` pipe as shown in following example:\n *\n * ```\n * Hello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!\n * ```\n *\n * There are several inefficiencies in the above example:\n *  - We create multiple subscriptions on `userStream`. One for each `async` pipe, or two in the\n *    example above.\n *  - We cannot display an alternative screen while waiting for the data to arrive asynchronously.\n *  - We have to use the safe-traversal-operator `?.` to access properties, which is cumbersome.\n *  - We have to place the `async` pipe in parenthesis.\n *\n * A better way to do this is to use `ngIf` and store the result of the condition in a local\n * variable as shown in the the example below:\n *\n * {@example common/ngIf/ts/module.ts region='NgIfAs'}\n *\n * Notice that:\n *  - We use only one `async` pipe and hence only one subscription gets created.\n *  - `ngIf` stores the result of the `userStream|async` in the local variable `user`.\n *  - The local `user` can then be bound repeatedly in a more efficient way.\n *  - No need to use the safe-traversal-operator `?.` to access properties as `ngIf` will only\n *    display the data if `userStream` returns a value.\n *  - We can display an alternative template while waiting for the data.\n *\n * ### Syntax\n *\n * Simple form:\n * - `<div *ngIf=\"condition\">...</div>`\n * - `<ng-template [ngIf]=\"condition\"><div>...</div></ng-template>`\n *\n * Form with an else block:\n * ```\n * <div *ngIf=\"condition; else elseBlock\">...</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * Form with a `then` and `else` block:\n * ```\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>...</ng-template>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * Form with storing the value locally:\n * ```\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar NgIf = /** @class */ (function () {\n    function NgIf(_viewContainer, templateRef) {\n        this._viewContainer = _viewContainer;\n        this._context = new NgIfContext();\n        this._thenTemplateRef = null;\n        this._elseTemplateRef = null;\n        this._thenViewRef = null;\n        this._elseViewRef = null;\n        this._thenTemplateRef = templateRef;\n    }\n    Object.defineProperty(NgIf.prototype, \"ngIf\", {\n        set: function (condition) {\n            this._context.$implicit = this._context.ngIf = condition;\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgIf.prototype, \"ngIfThen\", {\n        set: function (templateRef) {\n            assertTemplate('ngIfThen', templateRef);\n            this._thenTemplateRef = templateRef;\n            this._thenViewRef = null; // clear previous view if any.\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgIf.prototype, \"ngIfElse\", {\n        set: function (templateRef) {\n            assertTemplate('ngIfElse', templateRef);\n            this._elseTemplateRef = templateRef;\n            this._elseViewRef = null; // clear previous view if any.\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgIf.prototype._updateView = function () {\n        if (this._context.$implicit) {\n            if (!this._thenViewRef) {\n                this._viewContainer.clear();\n                this._elseViewRef = null;\n                if (this._thenTemplateRef) {\n                    this._thenViewRef =\n                        this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n                }\n            }\n        }\n        else {\n            if (!this._elseViewRef) {\n                this._viewContainer.clear();\n                this._thenViewRef = null;\n                if (this._elseTemplateRef) {\n                    this._elseViewRef =\n                        this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n                }\n            }\n        }\n    };\n    /**\n     * Assert the correct type of the expression bound to the `ngIf` input within the template.\n     *\n     * The presence of this method is a signal to the Ivy template type check compiler that when the\n     * `NgIf` structural directive renders its template, the type of the expression bound to `ngIf`\n     * should be narrowed in some way. For `NgIf`, it is narrowed to be non-null, which allows the\n     * strictNullChecks feature of TypeScript to work with `NgIf`.\n     */\n    NgIf.ngTemplateGuard_ngIf = function (dir, expr) { return true; };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgIf.prototype, \"ngIf\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgIf.prototype, \"ngIfThen\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgIf.prototype, \"ngIfElse\", null);\n    NgIf = __decorate([\n        __metadata(\"design:paramtypes\", [ViewContainerRef, TemplateRef])\n    ], NgIf);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgIf, [{\n        type: Directive,\n        args: [{ selector: '[ngIf]' }]\n    }], function () { return [{\n        type: ViewContainerRef\n    }, {\n        type: TemplateRef\n    }]; }, { _viewContainer: [], _context: [], _thenTemplateRef: [], _elseTemplateRef: [], _thenViewRef: [], _elseViewRef: [], _updateView: [] });\nNgIf.ngDirectiveDef = ɵngcc0.ɵdefineDirective({ type: NgIf, selectors: [[\"\", \"ngIf\", \"\"]], factory: function NgIf_Factory(t) { return new (t || NgIf)(ɵngcc0.ɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵdirectiveInject(TemplateRef)); } });\n    return NgIf;\n}());\n/**\n * @publicApi\n */\nvar NgIfContext = /** @class */ (function () {\n    function NgIfContext() {\n        this.$implicit = null;\n        this.ngIf = null;\n    }\n    return NgIfContext;\n}());\nfunction assertTemplate(property, templateRef) {\n    var isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);\n    if (!isTemplateRefOrNull) {\n        throw new Error(property + \" must be a TemplateRef, but received '\" + ɵstringify(templateRef) + \"'.\");\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SwitchView = /** @class */ (function () {\n    function SwitchView(_viewContainerRef, _templateRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._templateRef = _templateRef;\n        this._created = false;\n    }\n    SwitchView.prototype.create = function () {\n        this._created = true;\n        this._viewContainerRef.createEmbeddedView(this._templateRef);\n    };\n    SwitchView.prototype.destroy = function () {\n        this._created = false;\n        this._viewContainerRef.clear();\n    };\n    SwitchView.prototype.enforceState = function (created) {\n        if (created && !this._created) {\n            this.create();\n        }\n        else if (!created && this._created) {\n            this.destroy();\n        }\n    };\n    return SwitchView;\n}());\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n *     <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n * @description\n *\n * Adds / removes DOM sub-trees when the nest match expressions matches the switch expression.\n *\n * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n * switch expression.\n *\n * In other words:\n * - you define a container element (where you place the directive with a switch expression on the\n * `[ngSwitch]=\"...\"` attribute)\n * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n * root elements.\n *\n * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n * be preserved at the location.\n *\n * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n * expression is evaluated.\n * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n * stamped out.\n *\n * @publicApi\n */\nvar NgSwitch = /** @class */ (function () {\n    function NgSwitch() {\n        this._defaultUsed = false;\n        this._caseCount = 0;\n        this._lastCaseCheckIndex = 0;\n        this._lastCasesMatched = false;\n    }\n    Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n        set: function (newValue) {\n            this._ngSwitch = newValue;\n            if (this._caseCount === 0) {\n                this._updateDefaultCases(true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    NgSwitch.prototype._addCase = function () { return this._caseCount++; };\n    /** @internal */\n    NgSwitch.prototype._addDefault = function (view) {\n        if (!this._defaultViews) {\n            this._defaultViews = [];\n        }\n        this._defaultViews.push(view);\n    };\n    /** @internal */\n    NgSwitch.prototype._matchCase = function (value) {\n        var matched = value == this._ngSwitch;\n        this._lastCasesMatched = this._lastCasesMatched || matched;\n        this._lastCaseCheckIndex++;\n        if (this._lastCaseCheckIndex === this._caseCount) {\n            this._updateDefaultCases(!this._lastCasesMatched);\n            this._lastCaseCheckIndex = 0;\n            this._lastCasesMatched = false;\n        }\n        return matched;\n    };\n    NgSwitch.prototype._updateDefaultCases = function (useDefault) {\n        if (this._defaultViews && useDefault !== this._defaultUsed) {\n            this._defaultUsed = useDefault;\n            for (var i = 0; i < this._defaultViews.length; i++) {\n                var defaultView = this._defaultViews[i];\n                defaultView.enforceState(useDefault);\n            }\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgSwitch.prototype, \"ngSwitch\", null);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgSwitch, [{\n        type: Directive,\n        args: [{ selector: '[ngSwitch]' }]\n    }], function () { return []; }, { _defaultUsed: [], _caseCount: [], _lastCaseCheckIndex: [], _lastCasesMatched: [], _addCase: [], _addDefault: [], _defaultViews: [], _matchCase: [], _updateDefaultCases: [] });\nNgSwitch.ngDirectiveDef = ɵngcc0.ɵdefineDirective({ type: NgSwitch, selectors: [[\"\", \"ngSwitch\", \"\"]], factory: function NgSwitch_Factory(t) { return new (t || NgSwitch)(); } });\n    return NgSwitch;\n}());\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * </container-element>\n *```\n * @description\n *\n * Creates a view that will be added/removed from the parent {@link NgSwitch} when the\n * given expression evaluate to respectively the same/different value as the switch\n * expression.\n *\n * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n * expression.\n *\n * If multiple match expressions match the switch expression value, all of them are displayed.\n *\n * See {@link NgSwitch} for more details and example.\n *\n * @publicApi\n */\nvar NgSwitchCase = /** @class */ (function () {\n    function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n        this.ngSwitch = ngSwitch;\n        ngSwitch._addCase();\n        this._view = new SwitchView(viewContainer, templateRef);\n    }\n    NgSwitchCase.prototype.ngDoCheck = function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], NgSwitchCase.prototype, \"ngSwitchCase\", void 0);\n    NgSwitchCase = __decorate([\n        __param(2, Host()),\n        __metadata(\"design:paramtypes\", [ViewContainerRef, TemplateRef,\n            NgSwitch])\n    ], NgSwitchCase);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgSwitchCase, [{\n        type: Directive,\n        args: [{ selector: '[ngSwitchCase]' }]\n    }], function () { return [{\n        type: ViewContainerRef\n    }, {\n        type: TemplateRef\n    }, {\n        type: NgSwitch,\n        decorators: [{\n                type: Host\n            }]\n    }]; }, { ngSwitch: [], _view: [], ngDoCheck: [], ngSwitchCase: [{\n            type: Input\n        }] });\nNgSwitchCase.ngDirectiveDef = ɵngcc0.ɵdefineDirective({ type: NgSwitchCase, selectors: [[\"\", \"ngSwitchCase\", \"\"]], factory: function NgSwitchCase_Factory(t) { return new (t || NgSwitchCase)(ɵngcc0.ɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵdirectiveInject(TemplateRef), ɵngcc0.ɵdirectiveInject(NgSwitch, 1)); }, inputs: { ngSwitchCase: \"ngSwitchCase\" } });\n    return NgSwitchCase;\n}());\n/**\n * @ngModule CommonModule\n * @usageNotes\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-other-element *ngSwitchDefault>...</some-other-element>\n * </container-element>\n * ```\n *\n * @description\n *\n * Creates a view that is added to the parent {@link NgSwitch} when no case expressions\n * match the switch expression.\n *\n * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n * expression.\n *\n * See {@link NgSwitch} for more details and example.\n *\n * @publicApi\n */\nvar NgSwitchDefault = /** @class */ (function () {\n    function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n        ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n    }\n    NgSwitchDefault = __decorate([\n        __param(2, Host()),\n        __metadata(\"design:paramtypes\", [ViewContainerRef, TemplateRef,\n            NgSwitch])\n    ], NgSwitchDefault);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgSwitchDefault, [{\n        type: Directive,\n        args: [{ selector: '[ngSwitchDefault]' }]\n    }], function () { return [{\n        type: ViewContainerRef\n    }, {\n        type: TemplateRef\n    }, {\n        type: NgSwitch,\n        decorators: [{\n                type: Host\n            }]\n    }]; }, null);\nNgSwitchDefault.ngDirectiveDef = ɵngcc0.ɵdefineDirective({ type: NgSwitchDefault, selectors: [[\"\", \"ngSwitchDefault\", \"\"]], factory: function NgSwitchDefault_Factory(t) { return new (t || NgSwitchDefault)(ɵngcc0.ɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵdirectiveInject(TemplateRef), ɵngcc0.ɵdirectiveInject(NgSwitch, 1)); } });\n    return NgSwitchDefault;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n *\n * @description\n *\n * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n *\n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n *\n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n *\n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n *\n * @publicApi\n */\nvar NgPlural = /** @class */ (function () {\n    function NgPlural(_localization) {\n        this._localization = _localization;\n        this._caseViews = {};\n    }\n    Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n        set: function (value) {\n            this._switchValue = value;\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n    NgPlural.prototype._updateView = function () {\n        this._clearViews();\n        var cases = Object.keys(this._caseViews);\n        var key = getPluralCategory(this._switchValue, cases, this._localization);\n        this._activateView(this._caseViews[key]);\n    };\n    NgPlural.prototype._clearViews = function () {\n        if (this._activeView)\n            this._activeView.destroy();\n    };\n    NgPlural.prototype._activateView = function (view) {\n        if (view) {\n            this._activeView = view;\n            this._activeView.create();\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], NgPlural.prototype, \"ngPlural\", null);\n    NgPlural = __decorate([\n        __metadata(\"design:paramtypes\", [NgLocalization])\n    ], NgPlural);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgPlural, [{\n        type: Directive,\n        args: [{ selector: '[ngPlural]' }]\n    }], function () { return [{\n        type: NgLocalization\n    }]; }, { _localization: [], _caseViews: [], addCase: [], _updateView: [], _clearViews: [], _activateView: [], _activeView: [] });\nNgPlural.ngDirectiveDef = ɵngcc0.ɵdefineDirective({ type: NgPlural, selectors: [[\"\", \"ngPlural\", \"\"]], factory: function NgPlural_Factory(t) { return new (t || NgPlural)(ɵngcc0.ɵdirectiveInject(NgLocalization)); } });\n    return NgPlural;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that will be added/removed from the parent {@link NgPlural} when the\n * given expression matches the plural expression according to CLDR rules.\n *\n * @usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n *```\n *\n * See {@link NgPlural} for more details and example.\n *\n * @publicApi\n */\nvar NgPluralCase = /** @class */ (function () {\n    function NgPluralCase(value, template, viewContainer, ngPlural) {\n        this.value = value;\n        var isANumber = !isNaN(Number(value));\n        ngPlural.addCase(isANumber ? \"=\" + value : value, new SwitchView(viewContainer, template));\n    }\n    NgPluralCase = __decorate([\n        __param(0, Attribute('ngPluralCase')),\n        __param(3, Host()),\n        __metadata(\"design:paramtypes\", [String, TemplateRef,\n            ViewContainerRef, NgPlural])\n    ], NgPluralCase);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgPluralCase, [{\n        type: Directive,\n        args: [{ selector: '[ngPluralCase]' }]\n    }], function () { return [{\n        type: String,\n        decorators: [{\n                type: Attribute,\n                args: ['ngPluralCase']\n            }]\n    }, {\n        type: TemplateRef\n    }, {\n        type: ViewContainerRef\n    }, {\n        type: NgPlural,\n        decorators: [{\n                type: Host\n            }]\n    }]; }, { value: [] });\nNgPluralCase.ngDirectiveDef = ɵngcc0.ɵdefineDirective({ type: NgPluralCase, selectors: [[\"\", \"ngPluralCase\", \"\"]], factory: function NgPluralCase_Factory(t) { return new (t || NgPluralCase)(ɵngcc0.ɵinjectAttribute('ngPluralCase'), ɵngcc0.ɵdirectiveInject(TemplateRef), ɵngcc0.ɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵdirectiveInject(NgPlural, 1)); } });\n    return NgPluralCase;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n *\n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n *\n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n *\n * @description\n *\n * Update an HTML element styles.\n *\n * The styles are updated according to the value of the expression evaluation:\n * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n * - values are the values assigned to those properties (expressed in the given unit).\n *\n * @publicApi\n */\nvar NgStyle = /** @class */ (function () {\n    function NgStyle(_differs, _ngEl, _renderer) {\n        this._differs = _differs;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n    }\n    Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n        set: function (values) {\n            this._ngStyle = values;\n            if (!this._differ && values) {\n                this._differ = this._differs.find(values).create();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgStyle.prototype.ngDoCheck = function () {\n        if (this._differ) {\n            var changes = this._differ.diff(this._ngStyle);\n            if (changes) {\n                this._applyChanges(changes);\n            }\n        }\n    };\n    NgStyle.prototype._applyChanges = function (changes) {\n        var _this = this;\n        changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n        changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n        changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n    };\n    NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n        var _a = __read(nameAndUnit.split('.'), 2), name = _a[0], unit = _a[1];\n        value = value != null && unit ? \"\" + value + unit : value;\n        if (value != null) {\n            this._renderer.setStyle(this._ngEl.nativeElement, name, value);\n        }\n        else {\n            this._renderer.removeStyle(this._ngEl.nativeElement, name);\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgStyle.prototype, \"ngStyle\", null);\n    NgStyle = __decorate([\n        __metadata(\"design:paramtypes\", [KeyValueDiffers, ElementRef, Renderer2])\n    ], NgStyle);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgStyle, [{\n        type: Directive,\n        args: [{ selector: '[ngStyle]' }]\n    }], function () { return [{\n        type: KeyValueDiffers\n    }, {\n        type: ElementRef\n    }, {\n        type: Renderer2\n    }]; }, { _differs: [], _ngEl: [], _renderer: [], ngDoCheck: [], _applyChanges: [], _setStyle: [] });\nNgStyle.ngDirectiveDef = ɵngcc0.ɵdefineDirective({ type: NgStyle, selectors: [[\"\", \"ngStyle\", \"\"]], factory: function NgStyle_Factory(t) { return new (t || NgStyle)(ɵngcc0.ɵdirectiveInject(KeyValueDiffers), ɵngcc0.ɵdirectiveInject(ElementRef), ɵngcc0.ɵdirectiveInject(Renderer2)); } });\n    return NgStyle;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Inserts an embedded view from a prepared `TemplateRef`.\n *\n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n *\n * @usageNotes\n * ```\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n *\n * Using the key `$implicit` in the context object will set its value as default.\n *\n * ### Example\n *\n * {@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n *\n * @publicApi\n */\nvar NgTemplateOutlet = /** @class */ (function () {\n    function NgTemplateOutlet(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n    }\n    NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n        var recreateView = this._shouldRecreateView(changes);\n        if (recreateView) {\n            if (this._viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n            }\n            if (this.ngTemplateOutlet) {\n                this._viewRef = this._viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext);\n            }\n        }\n        else {\n            if (this._viewRef && this.ngTemplateOutletContext) {\n                this._updateExistingContext(this.ngTemplateOutletContext);\n            }\n        }\n    };\n    /**\n     * We need to re-create existing embedded view if:\n     * - templateRef has changed\n     * - context has changes\n     *\n     * We mark context object as changed when the corresponding object\n     * shape changes (new properties are added or existing properties are removed).\n     * In other words we consider context with the same properties as \"the same\" even\n     * if object reference changes (see https://github.com/angular/angular/issues/13407).\n     */\n    NgTemplateOutlet.prototype._shouldRecreateView = function (changes) {\n        var ctxChange = changes['ngTemplateOutletContext'];\n        return !!changes['ngTemplateOutlet'] || (ctxChange && this._hasContextShapeChanged(ctxChange));\n    };\n    NgTemplateOutlet.prototype._hasContextShapeChanged = function (ctxChange) {\n        var e_1, _a;\n        var prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n        var currCtxKeys = Object.keys(ctxChange.currentValue || {});\n        if (prevCtxKeys.length === currCtxKeys.length) {\n            try {\n                for (var currCtxKeys_1 = __values(currCtxKeys), currCtxKeys_1_1 = currCtxKeys_1.next(); !currCtxKeys_1_1.done; currCtxKeys_1_1 = currCtxKeys_1.next()) {\n                    var propName = currCtxKeys_1_1.value;\n                    if (prevCtxKeys.indexOf(propName) === -1) {\n                        return true;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (currCtxKeys_1_1 && !currCtxKeys_1_1.done && (_a = currCtxKeys_1.return)) _a.call(currCtxKeys_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    NgTemplateOutlet.prototype._updateExistingContext = function (ctx) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(Object.keys(ctx)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var propName = _c.value;\n                this._viewRef.context[propName] = this.ngTemplateOutletContext[propName];\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], NgTemplateOutlet.prototype, \"ngTemplateOutletContext\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", TemplateRef)\n    ], NgTemplateOutlet.prototype, \"ngTemplateOutlet\", void 0);\n    NgTemplateOutlet = __decorate([\n        __metadata(\"design:paramtypes\", [ViewContainerRef])\n    ], NgTemplateOutlet);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgTemplateOutlet, [{\n        type: Directive,\n        args: [{ selector: '[ngTemplateOutlet]' }]\n    }], function () { return [{\n        type: ViewContainerRef\n    }]; }, { _viewContainerRef: [], ngOnChanges: [], _viewRef: [], _shouldRecreateView: [], _hasContextShapeChanged: [], _updateExistingContext: [], ngTemplateOutletContext: [{\n            type: Input\n        }], ngTemplateOutlet: [{\n            type: Input\n        }] });\nNgTemplateOutlet.ngDirectiveDef = ɵngcc0.ɵdefineDirective({ type: NgTemplateOutlet, selectors: [[\"\", \"ngTemplateOutlet\", \"\"]], factory: function NgTemplateOutlet_Factory(t) { return new (t || NgTemplateOutlet)(ɵngcc0.ɵdirectiveInject(ViewContainerRef)); }, inputs: { ngTemplateOutletContext: \"ngTemplateOutletContext\", ngTemplateOutlet: \"ngTemplateOutlet\" }, features: [ɵngcc0.ɵNgOnChangesFeature] });\n    return NgTemplateOutlet;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n */\nvar COMMON_DIRECTIVES = [\n    NgClass,\n    NgComponentOutlet,\n    NgForOf,\n    NgIf,\n    NgTemplateOutlet,\n    NgStyle,\n    NgSwitch,\n    NgSwitchCase,\n    NgSwitchDefault,\n    NgPlural,\n    NgPluralCase,\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction invalidPipeArgumentError(type, value) {\n    return Error(\"InvalidPipeArgument: '\" + value + \"' for pipe '\" + ɵstringify(type) + \"'\");\n}\n\nvar NumberFormatter = /** @class */ (function () {\n    function NumberFormatter() {\n    }\n    NumberFormatter.format = function (num, locale, style, opts) {\n        if (opts === void 0) { opts = {}; }\n        var minimumIntegerDigits = opts.minimumIntegerDigits, minimumFractionDigits = opts.minimumFractionDigits, maximumFractionDigits = opts.maximumFractionDigits, currency = opts.currency, _a = opts.currencyAsSymbol, currencyAsSymbol = _a === void 0 ? false : _a;\n        var options = {\n            minimumIntegerDigits: minimumIntegerDigits,\n            minimumFractionDigits: minimumFractionDigits,\n            maximumFractionDigits: maximumFractionDigits,\n            style: NumberFormatStyle[style].toLowerCase()\n        };\n        if (style == NumberFormatStyle.Currency) {\n            options.currency = typeof currency == 'string' ? currency : undefined;\n            options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n        }\n        return new Intl.NumberFormat(locale, options).format(num);\n    };\n    return NumberFormatter;\n}());\nvar DATE_FORMATS_SPLIT$1 = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\nvar PATTERN_ALIASES = {\n    // Keys are quoted so they do not get renamed during closure compilation.\n    'yMMMdjms': datePartGetterFactory(combine([\n        digitCondition('year', 1),\n        nameCondition('month', 3),\n        digitCondition('day', 1),\n        digitCondition('hour', 1),\n        digitCondition('minute', 1),\n        digitCondition('second', 1),\n    ])),\n    'yMdjm': datePartGetterFactory(combine([\n        digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n        digitCondition('hour', 1), digitCondition('minute', 1)\n    ])),\n    'yMMMMEEEEd': datePartGetterFactory(combine([\n        digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n        digitCondition('day', 1)\n    ])),\n    'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n    'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n    'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n    'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n    'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\nvar DATE_FORMATS$1 = {\n    // Keys are quoted so they do not get renamed.\n    'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n    'yy': datePartGetterFactory(digitCondition('year', 2)),\n    'y': datePartGetterFactory(digitCondition('year', 1)),\n    'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n    'MMM': datePartGetterFactory(nameCondition('month', 3)),\n    'MM': datePartGetterFactory(digitCondition('month', 2)),\n    'M': datePartGetterFactory(digitCondition('month', 1)),\n    'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n    'L': datePartGetterFactory(nameCondition('month', 1)),\n    'dd': datePartGetterFactory(digitCondition('day', 2)),\n    'd': datePartGetterFactory(digitCondition('day', 1)),\n    'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n    'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n    'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n    'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'jj': datePartGetterFactory(digitCondition('hour', 2)),\n    'j': datePartGetterFactory(digitCondition('hour', 1)),\n    'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n    'm': datePartGetterFactory(digitCondition('minute', 1)),\n    'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n    's': datePartGetterFactory(digitCondition('second', 1)),\n    // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n    // we can be just safely rely on using `sss` since we currently don't support single or two digit\n    // fractions\n    'sss': datePartGetterFactory(digitCondition('second', 3)),\n    'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n    'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n    'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n    'E': datePartGetterFactory(nameCondition('weekday', 1)),\n    'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'Z': timeZoneGetter$1('short'),\n    'z': timeZoneGetter$1('long'),\n    'ww': datePartGetterFactory({}),\n    // first Thursday of the year. not support ?\n    'w': datePartGetterFactory({}),\n    // of the year not support ?\n    'G': datePartGetterFactory(nameCondition('era', 1)),\n    'GG': datePartGetterFactory(nameCondition('era', 2)),\n    'GGG': datePartGetterFactory(nameCondition('era', 3)),\n    'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\nfunction digitModifier(inner) {\n    return function (date, locale) {\n        var result = inner(date, locale);\n        return result.length == 1 ? '0' + result : result;\n    };\n}\nfunction hourClockExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n}\nfunction hourExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n}\nfunction intlDateFormat(date, locale, options) {\n    return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\nfunction timeZoneGetter$1(timezone) {\n    // To workaround `Intl` API restriction for single timezone let format with 24 hours\n    var options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n    return function (date, locale) {\n        var result = intlDateFormat(date, locale, options);\n        // Then extract first 3 letters that related to hours\n        return result ? result.substring(3) : '';\n    };\n}\nfunction hour12Modify(options, value) {\n    options.hour12 = value;\n    return options;\n}\nfunction digitCondition(prop, len) {\n    var result = {};\n    result[prop] = len === 2 ? '2-digit' : 'numeric';\n    return result;\n}\nfunction nameCondition(prop, len) {\n    var result = {};\n    if (len < 4) {\n        result[prop] = len > 1 ? 'short' : 'narrow';\n    }\n    else {\n        result[prop] = 'long';\n    }\n    return result;\n}\nfunction combine(options) {\n    return options.reduce(function (merged, opt) { return (__assign({}, merged, opt)); }, {});\n}\nfunction datePartGetterFactory(ret) {\n    return function (date, locale) { return intlDateFormat(date, locale, ret); };\n}\nvar DATE_FORMATTER_CACHE = new Map();\nfunction dateFormatter(format, date, locale) {\n    var fn = PATTERN_ALIASES[format];\n    if (fn)\n        return fn(date, locale);\n    var cacheKey = format;\n    var parts = DATE_FORMATTER_CACHE.get(cacheKey);\n    if (!parts) {\n        parts = [];\n        var match = void 0;\n        DATE_FORMATS_SPLIT$1.exec(format);\n        var _format = format;\n        while (_format) {\n            match = DATE_FORMATS_SPLIT$1.exec(_format);\n            if (match) {\n                parts = parts.concat(match.slice(1));\n                _format = parts.pop();\n            }\n            else {\n                parts.push(_format);\n                _format = null;\n            }\n        }\n        DATE_FORMATTER_CACHE.set(cacheKey, parts);\n    }\n    return parts.reduce(function (text, part) {\n        var fn = DATE_FORMATS$1[part];\n        return text + (fn ? fn(date, locale) : partToTime(part));\n    }, '');\n}\nfunction partToTime(part) {\n    return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\nvar DateFormatter = /** @class */ (function () {\n    function DateFormatter() {\n    }\n    DateFormatter.format = function (date, locale, pattern) {\n        return dateFormatter(pattern, date, locale);\n    };\n    return DateFormatter;\n}());\n\n/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n  */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date according to locale rules.\n *\n * Where:\n * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n * (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. The format can be predefined as\n *   shown below or custom as shown in the table.\n *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n *\n *\n *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n *\n * In javascript, only the components specified will be respected (not the ordering,\n * punctuations, ...) and details of the formatting will be dependent on the locale.\n *\n * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n *\n * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n * applied and the formatted text will have the same day, month and year of the expression.\n *\n * WARNINGS:\n * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n *   Instead users should treat the date as an immutable object and change the reference when the\n *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n *   which would be an expensive operation).\n * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n *   browsers.\n *\n * @usageNotes\n *\n * ### Examples\n *\n * Assuming `dateObj` is (year: 2010, month: 9, day: 3, hour: 12 PM, minute: 05, second: 08)\n * in the _local_ time and locale is 'en-US':\n *\n * {@example common/pipes/ts/date_pipe.ts region='DeprecatedDatePipe'}\n *\n * @publicApi\n */\nvar DeprecatedDatePipe = /** @class */ (function () {\n    function DeprecatedDatePipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedDatePipe_1 = DeprecatedDatePipe;\n    DeprecatedDatePipe.prototype.transform = function (value, pattern) {\n        if (pattern === void 0) { pattern = 'mediumDate'; }\n        if (value == null || value === '' || value !== value)\n            return null;\n        var date;\n        if (typeof value === 'string') {\n            value = value.trim();\n        }\n        if (isDate$1(value)) {\n            date = value;\n        }\n        else if (!isNaN(value - parseFloat(value))) {\n            date = new Date(parseFloat(value));\n        }\n        else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            /**\n             * For ISO Strings without time the day, month and year must be extracted from the ISO String\n             * before Date creation to avoid time offset and errors in the new Date.\n             * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n             * date, some browsers (e.g. IE 9) will throw an invalid Date error\n             * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the\n             * timeoffset\n             * is applied\n             * Note: ISO months are 0 for January, 1 for February, ...\n             */\n            var _a = __read(value.split('-').map(function (val) { return parseInt(val, 10); }), 3), y = _a[0], m = _a[1], d = _a[2];\n            date = new Date(y, m - 1, d);\n        }\n        else {\n            date = new Date(value);\n        }\n        if (!isDate$1(date)) {\n            var match = void 0;\n            if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n                date = isoStringToDate(match);\n            }\n            else {\n                throw invalidPipeArgumentError(DeprecatedDatePipe_1, value);\n            }\n        }\n        return DateFormatter.format(date, this._locale, DeprecatedDatePipe_1._ALIASES[pattern] || pattern);\n    };\n    var DeprecatedDatePipe_1;\n    /** @internal */\n    DeprecatedDatePipe._ALIASES = {\n        'medium': 'yMMMdjms',\n        'short': 'yMdjm',\n        'fullDate': 'yMMMMEEEEd',\n        'longDate': 'yMMMMd',\n        'mediumDate': 'yMMMd',\n        'shortDate': 'yMd',\n        'mediumTime': 'jms',\n        'shortTime': 'jm'\n    };\n    DeprecatedDatePipe = DeprecatedDatePipe_1 = __decorate([\n        Pipe({ name: 'date', pure: true }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DeprecatedDatePipe);\n    return DeprecatedDatePipe;\n}());\nfunction isDate$1(value) {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction formatNumber$1(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n    if (currency === void 0) { currency = null; }\n    if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n    if (value == null)\n        return null;\n    // Convert strings to numbers\n    value = typeof value === 'string' && !isNaN(+value - parseFloat(value)) ? +value : value;\n    if (typeof value !== 'number') {\n        throw invalidPipeArgumentError(pipe, value);\n    }\n    var minInt;\n    var minFraction;\n    var maxFraction;\n    if (style !== NumberFormatStyle.Currency) {\n        // rely on Intl default for currency\n        minInt = 1;\n        minFraction = 0;\n        maxFraction = 3;\n    }\n    if (digits) {\n        var parts = digits.match(NUMBER_FORMAT_REGEXP);\n        if (parts === null) {\n            throw new Error(digits + \" is not a valid digit info for number pipes\");\n        }\n        if (parts[1] != null) { // min integer digits\n            minInt = parseIntAutoRadix(parts[1]);\n        }\n        if (parts[3] != null) { // min fraction digits\n            minFraction = parseIntAutoRadix(parts[3]);\n        }\n        if (parts[5] != null) { // max fraction digits\n            maxFraction = parseIntAutoRadix(parts[5]);\n        }\n    }\n    return NumberFormatter.format(value, locale, style, {\n        minimumIntegerDigits: minInt,\n        minimumFractionDigits: minFraction,\n        maximumFractionDigits: maxFraction,\n        currency: currency,\n        currencyAsSymbol: currencyAsSymbol,\n    });\n}\n/**\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the active locale.\n *\n * where `expression` is a number:\n *  - `digitInfo` is a `string` which has a following format: <br>\n *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n *\n * For more information on the acceptable range for each of these numbers and other\n * details see your native internationalization library.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/number_pipe.ts region='DeprecatedNumberPipe'}\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar DeprecatedDecimalPipe = /** @class */ (function () {\n    function DeprecatedDecimalPipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedDecimalPipe_1 = DeprecatedDecimalPipe;\n    DeprecatedDecimalPipe.prototype.transform = function (value, digits) {\n        return formatNumber$1(DeprecatedDecimalPipe_1, this._locale, value, NumberFormatStyle.Decimal, digits);\n    };\n    var DeprecatedDecimalPipe_1;\n    DeprecatedDecimalPipe = DeprecatedDecimalPipe_1 = __decorate([\n        Pipe({ name: 'number' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DeprecatedDecimalPipe);\n    return DeprecatedDecimalPipe;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Formats a number as percentage according to locale rules.\n *\n * - `digitInfo` See {@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/percent_pipe.ts region='DeprecatedPercentPipe'}\n *\n * @publicApi\n */\nvar DeprecatedPercentPipe = /** @class */ (function () {\n    function DeprecatedPercentPipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedPercentPipe_1 = DeprecatedPercentPipe;\n    DeprecatedPercentPipe.prototype.transform = function (value, digits) {\n        return formatNumber$1(DeprecatedPercentPipe_1, this._locale, value, NumberFormatStyle.Percent, digits);\n    };\n    var DeprecatedPercentPipe_1;\n    DeprecatedPercentPipe = DeprecatedPercentPipe_1 = __decorate([\n        Pipe({ name: 'percent' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DeprecatedPercentPipe);\n    return DeprecatedPercentPipe;\n}());\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as currency using locale rules.\n *\n * Use `currency` to format a number as currency.\n *\n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n *   - `true`: use symbol (e.g. `$`).\n *   - `false`(default): use code (e.g. `USD`).\n * - `digitInfo` See {@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/currency_pipe.ts region='DeprecatedCurrencyPipe'}\n *\n * @publicApi\n */\nvar DeprecatedCurrencyPipe = /** @class */ (function () {\n    function DeprecatedCurrencyPipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedCurrencyPipe_1 = DeprecatedCurrencyPipe;\n    DeprecatedCurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n        if (currencyCode === void 0) { currencyCode = 'USD'; }\n        if (symbolDisplay === void 0) { symbolDisplay = false; }\n        return formatNumber$1(DeprecatedCurrencyPipe_1, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n    };\n    var DeprecatedCurrencyPipe_1;\n    DeprecatedCurrencyPipe = DeprecatedCurrencyPipe_1 = __decorate([\n        Pipe({ name: 'currency' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DeprecatedCurrencyPipe);\n    return DeprecatedCurrencyPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of deprecated i18n pipes that require intl api\n *\n * @deprecated from v5\n */\nvar COMMON_DEPRECATED_I18N_PIPES = [DeprecatedDecimalPipe, DeprecatedPercentPipe, DeprecatedCurrencyPipe, DeprecatedDatePipe];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ObservableStrategy = /** @class */ (function () {\n    function ObservableStrategy() {\n    }\n    ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n        return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n    };\n    ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n    ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n    return ObservableStrategy;\n}());\nvar PromiseStrategy = /** @class */ (function () {\n    function PromiseStrategy() {\n    }\n    PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n        return async.then(updateLatestValue, function (e) { throw e; });\n    };\n    PromiseStrategy.prototype.dispose = function (subscription) { };\n    PromiseStrategy.prototype.onDestroy = function (subscription) { };\n    return PromiseStrategy;\n}());\nvar _promiseStrategy = new PromiseStrategy();\nvar _observableStrategy = new ObservableStrategy();\n/**\n * @ngModule CommonModule\n * @description\n *\n * Unwraps a value from an asynchronous primitive.\n *\n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks.\n *\n * @usageNotes\n *\n * ### Examples\n *\n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n *\n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n *\n * @publicApi\n */\nvar AsyncPipe = /** @class */ (function () {\n    function AsyncPipe(_ref) {\n        this._ref = _ref;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n        this._strategy = null;\n    }\n    AsyncPipe_1 = AsyncPipe;\n    AsyncPipe.prototype.ngOnDestroy = function () {\n        if (this._subscription) {\n            this._dispose();\n        }\n    };\n    AsyncPipe.prototype.transform = function (obj) {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.transform(obj);\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    };\n    AsyncPipe.prototype._subscribe = function (obj) {\n        var _this = this;\n        this._obj = obj;\n        this._strategy = this._selectStrategy(obj);\n        this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n    };\n    AsyncPipe.prototype._selectStrategy = function (obj) {\n        if (ɵisPromise(obj)) {\n            return _promiseStrategy;\n        }\n        if (ɵisObservable(obj)) {\n            return _observableStrategy;\n        }\n        throw invalidPipeArgumentError(AsyncPipe_1, obj);\n    };\n    AsyncPipe.prototype._dispose = function () {\n        this._strategy.dispose(this._subscription);\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    };\n    AsyncPipe.prototype._updateLatestValue = function (async, value) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    };\n    var AsyncPipe_1;\n    AsyncPipe = AsyncPipe_1 = __decorate([\n        Pipe({ name: 'async', pure: false }),\n        __metadata(\"design:paramtypes\", [ChangeDetectorRef])\n    ], AsyncPipe);\n    return AsyncPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms text to all lower case.\n *\n * @see `UpperCasePipe`\n * @see `TitleCasePipe`\n * @usageNotes\n *\n * The following example defines a view that allows the user to enter\n * text, and then uses the pipe to convert the input text to all lower case.\n *\n * <code-example path=\"common/pipes/ts/lowerupper_pipe.ts\" region='LowerUpperPipe'></code-example>\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar LowerCasePipe = /** @class */ (function () {\n    function LowerCasePipe() {\n    }\n    LowerCasePipe_1 = LowerCasePipe;\n    /**\n     * @param value The string to transform to lower case.\n     */\n    LowerCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(LowerCasePipe_1, value);\n        }\n        return value.toLowerCase();\n    };\n    var LowerCasePipe_1;\n    LowerCasePipe = LowerCasePipe_1 = __decorate([\n        Pipe({ name: 'lowercase' })\n    ], LowerCasePipe);\n    return LowerCasePipe;\n}());\n//\n// Regex below matches any Unicode word and compatible with ES5. In ES2018 the same result\n// can be achieved by using /\\p{L}\\S*/gu and also known as Unicode Property Escapes\n// (http://2ality.com/2017/07/regexp-unicode-property-escapes.html). Since there is no\n// transpilation of this functionality down to ES5 without external tool, the only solution is\n// to use already transpiled form. Example can be found here -\n// https://mothereff.in/regexpu#input=var+regex+%3D+/%5Cp%7BL%7D/u%3B&unicodePropertyEscape=1\n//\nvar unicodeWordMatch = /(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])\\S*/g;\n/**\n * Transforms text to title case.\n * Capitalizes the first letter of each word, and transforms the\n * rest of the word to lower case.\n * Words are delimited by any whitespace character, such as a space, tab, or line-feed character.\n *\n * @see `LowerCasePipe`\n * @see `UpperCasePipe`\n *\n * @usageNotes\n * The following example shows the result of transforming various strings into title case.\n *\n * <code-example path=\"common/pipes/ts/titlecase_pipe.ts\" region='TitleCasePipe'></code-example>\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar TitleCasePipe = /** @class */ (function () {\n    function TitleCasePipe() {\n    }\n    TitleCasePipe_1 = TitleCasePipe;\n    /**\n     * @param value The string to transform to title case.\n     */\n    TitleCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(TitleCasePipe_1, value);\n        }\n        return value.replace(unicodeWordMatch, (function (txt) { return txt[0].toUpperCase() + txt.substr(1).toLowerCase(); }));\n    };\n    var TitleCasePipe_1;\n    TitleCasePipe = TitleCasePipe_1 = __decorate([\n        Pipe({ name: 'titlecase' })\n    ], TitleCasePipe);\n    return TitleCasePipe;\n}());\n/**\n * Transforms text to all upper case.\n * @see `LowerCasePipe`\n * @see `TitleCasePipe`\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar UpperCasePipe = /** @class */ (function () {\n    function UpperCasePipe() {\n    }\n    UpperCasePipe_1 = UpperCasePipe;\n    /**\n     * @param value The string to transform to upper case.\n     */\n    UpperCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(UpperCasePipe_1, value);\n        }\n        return value.toUpperCase();\n    };\n    var UpperCasePipe_1;\n    UpperCasePipe = UpperCasePipe_1 = __decorate([\n        Pipe({ name: 'uppercase' })\n    ], UpperCasePipe);\n    return UpperCasePipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format off\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date value according to locale rules.\n *\n * Only the `en-US` locale data comes with Angular. To localize dates\n * in another language, you must import the corresponding locale data.\n * See the [I18n guide](guide/i18n#i18n-pipes) for more information.\n *\n * @see `formatDate()`\n *\n *\n * @usageNotes\n *\n * The result of this pipe is not reevaluated when the input is mutated. To avoid the need to\n * reformat the date on every change-detection cycle, treat the date as an immutable object\n * and change the reference when the pipe needs to run again.\n *\n * ### Pre-defined format options\n *\n * Examples are given in `en-US` locale.\n *\n * - `'short'`: equivalent to `'M/d/yy, h:mm a'` (`6/15/15, 9:03 AM`).\n * - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (`Jun 15, 2015, 9:03:01 AM`).\n * - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (`June 15, 2015 at 9:03:01 AM\n * GMT+1`).\n * - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (`Monday, June 15, 2015 at\n * 9:03:01 AM GMT+01:00`).\n * - `'shortDate'`: equivalent to `'M/d/yy'` (`6/15/15`).\n * - `'mediumDate'`: equivalent to `'MMM d, y'` (`Jun 15, 2015`).\n * - `'longDate'`: equivalent to `'MMMM d, y'` (`June 15, 2015`).\n * - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (`Monday, June 15, 2015`).\n * - `'shortTime'`: equivalent to `'h:mm a'` (`9:03 AM`).\n * - `'mediumTime'`: equivalent to `'h:mm:ss a'` (`9:03:01 AM`).\n * - `'longTime'`: equivalent to `'h:mm:ss a z'` (`9:03:01 AM GMT+1`).\n * - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (`9:03:01 AM GMT+01:00`).\n *\n * ### Custom format options\n *\n * You can construct a format string using symbols to specify the components\n * of a date-time value, as described in the following table.\n * Format details depend on the locale.\n * Fields marked with (*) are only available in the extra data set for the given locale.\n *\n *  | Field type         | Format      | Description                                                   | Example Value                                              |\n *  |--------------------|-------------|---------------------------------------------------------------|------------------------------------------------------------|\n *  | Era                | G, GG & GGG | Abbreviated                                                   | AD                                                         |\n *  |                    | GGGG        | Wide                                                          | Anno Domini                                                |\n *  |                    | GGGGG       | Narrow                                                        | A                                                          |\n *  | Year               | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\n *  |                    | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\n *  |                    | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\n *  |                    | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\n *  | Month              | M           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | MMM         | Abbreviated                                                   | Sep                                                        |\n *  |                    | MMMM        | Wide                                                          | September                                                  |\n *  |                    | MMMMM       | Narrow                                                        | S                                                          |\n *  | Month standalone   | L           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | LLL         | Abbreviated                                                   | Sep                                                        |\n *  |                    | LLLL        | Wide                                                          | September                                                  |\n *  |                    | LLLLL       | Narrow                                                        | S                                                          |\n *  | Week of year       | w           | Numeric: minimum digits                                       | 1... 53                                                    |\n *  |                    | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |\n *  | Week of month      | W           | Numeric: 1 digit                                              | 1... 5                                                     |\n *  | Day of month       | d           | Numeric: minimum digits                                       | 1                                                          |\n *  |                    | dd          | Numeric: 2 digits + zero padded                               | 01                                                          |\n *  | Week day           | E, EE & EEE | Abbreviated                                                   | Tue                                                        |\n *  |                    | EEEE        | Wide                                                          | Tuesday                                                    |\n *  |                    | EEEEE       | Narrow                                                        | T                                                          |\n *  |                    | EEEEEE      | Short                                                         | Tu                                                         |\n *  | Period             | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |\n *  |                    | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |\n *  |                    | aaaaa       | Narrow                                                        | a/p                                                        |\n *  | Period*            | B, BB & BBB | Abbreviated                                                   | mid.                                                       |\n *  |                    | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | BBBBB       | Narrow                                                        | md                                                         |\n *  | Period standalone* | b, bb & bbb | Abbreviated                                                   | mid.                                                       |\n *  |                    | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | bbbbb       | Narrow                                                        | md                                                         |\n *  | Hour 1-12          | h           | Numeric: minimum digits                                       | 1, 12                                                      |\n *  |                    | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |\n *  | Hour 0-23          | H           | Numeric: minimum digits                                       | 0, 23                                                      |\n *  |                    | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |\n *  | Minute             | m           | Numeric: minimum digits                                       | 8, 59                                                      |\n *  |                    | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |\n *  | Second             | s           | Numeric: minimum digits                                       | 0... 59                                                    |\n *  |                    | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |\n *  | Fractional seconds | S           | Numeric: 1 digit                                              | 0... 9                                                     |\n *  |                    | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |\n *  |                    | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |\n *  | Zone               | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |\n *  |                    | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |\n *  |                    | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |\n *  |                    | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |\n *  |                    | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |\n *  |                    | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |\n *  |                    | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |\n *\n * Note that timezone correction is not applied to an ISO string that has no time component, such as \"2016-09-19\"\n *\n * ### Format examples\n *\n * These examples transform a date into various formats,\n * assuming that `dateObj` is a JavaScript `Date` object for\n * year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11,\n * given in the local time for the `en-US` locale.\n *\n * ```\n * {{ dateObj | date }}               // output is 'Jun 15, 2015'\n * {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n * {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n * {{ dateObj | date:'mmss' }}        // output is '43:11'\n * ```\n *\n * ### Usage example\n *\n * The following component uses a date pipe to display the current date in different formats.\n *\n * ```\n * @Component({\n *  selector: 'date-pipe',\n *  template: `<div>\n *    <p>Today is {{today | date}}</p>\n *    <p>Or if you prefer, {{today | date:'fullDate'}}</p>\n *    <p>The time is {{today | date:'h:mm a z'}}</p>\n *  </div>`\n * })\n * // Get the current date and time as a date-time value.\n * export class DatePipeComponent {\n *   today: number = Date.now();\n * }\n * ```\n *\n * @publicApi\n */\n// clang-format on\nvar DatePipe = /** @class */ (function () {\n    function DatePipe(locale) {\n        this.locale = locale;\n    }\n    DatePipe_1 = DatePipe;\n    /**\n     * @param value The date expression: a `Date` object,  a number\n     * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).\n     * @param format The date/time components to include, using predefined options or a\n     * custom format string.\n     * @param timezone A timezone offset (such as `'+0430'`), or a standard\n     * UTC/GMT or continental US timezone abbreviation. Default is\n     * the local system timezone of the end-user's machine.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @returns A date string in the desired format.\n     */\n    DatePipe.prototype.transform = function (value, format, timezone, locale) {\n        if (format === void 0) { format = 'mediumDate'; }\n        if (value == null || value === '' || value !== value)\n            return null;\n        try {\n            return formatDate(value, format, locale || this.locale, timezone);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DatePipe_1, error.message);\n        }\n    };\n    var DatePipe_1;\n    DatePipe = DatePipe_1 = __decorate([\n        Pipe({ name: 'date', pure: true }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DatePipe);\n    return DatePipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _INTERPOLATION_REGEXP = /#/g;\n/**\n * @ngModule CommonModule\n * @description\n *\n * Maps a value to a string that pluralizes the value according to locale rules.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n *\n * @publicApi\n */\nvar I18nPluralPipe = /** @class */ (function () {\n    function I18nPluralPipe(_localization) {\n        this._localization = _localization;\n    }\n    I18nPluralPipe_1 = I18nPluralPipe;\n    /**\n     * @param value the number to be formatted\n     * @param pluralMap an object that mimics the ICU format, see\n     * http://userguide.icu-project.org/formatparse/messages.\n     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n     * default).\n     */\n    I18nPluralPipe.prototype.transform = function (value, pluralMap, locale) {\n        if (value == null)\n            return '';\n        if (typeof pluralMap !== 'object' || pluralMap === null) {\n            throw invalidPipeArgumentError(I18nPluralPipe_1, pluralMap);\n        }\n        var key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);\n        return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n    };\n    var I18nPluralPipe_1;\n    I18nPluralPipe = I18nPluralPipe_1 = __decorate([\n        Pipe({ name: 'i18nPlural', pure: true }),\n        __metadata(\"design:paramtypes\", [NgLocalization])\n    ], I18nPluralPipe);\n    return I18nPluralPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Generic selector that displays the string that matches the current value.\n *\n * If none of the keys of the `mapping` match the `value`, then the content\n * of the `other` key is returned when present, otherwise an empty string is returned.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n *\n * @publicApi\n */\nvar I18nSelectPipe = /** @class */ (function () {\n    function I18nSelectPipe() {\n    }\n    I18nSelectPipe_1 = I18nSelectPipe;\n    /**\n     * @param value a string to be internationalized.\n     * @param mapping an object that indicates the text that should be displayed\n     * for different values of the provided `value`.\n     */\n    I18nSelectPipe.prototype.transform = function (value, mapping) {\n        if (value == null)\n            return '';\n        if (typeof mapping !== 'object' || typeof value !== 'string') {\n            throw invalidPipeArgumentError(I18nSelectPipe_1, mapping);\n        }\n        if (mapping.hasOwnProperty(value)) {\n            return mapping[value];\n        }\n        if (mapping.hasOwnProperty('other')) {\n            return mapping['other'];\n        }\n        return '';\n    };\n    var I18nSelectPipe_1;\n    I18nSelectPipe = I18nSelectPipe_1 = __decorate([\n        Pipe({ name: 'i18nSelect', pure: true })\n    ], I18nSelectPipe);\n    return I18nSelectPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Converts a value into its JSON-format representation.  Useful for debugging.\n *\n * @usageNotes\n *\n * The following component uses a JSON pipe to convert an object\n * to JSON format, and displays the string in both formats for comparison.\n *\n * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n *\n * @publicApi\n */\nvar JsonPipe = /** @class */ (function () {\n    function JsonPipe() {\n    }\n    /**\n     * @param value A value of any type to convert into a JSON-format string.\n     */\n    JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(JsonPipe, [{\n        type: Pipe,\n        args: [{ name: 'json', pure: false }]\n    }], function () { return []; }, { transform: [] });\nJsonPipe.ngPipeDef = ɵngcc0.ɵdefinePipe({ name: \"json\", type: JsonPipe, factory: function JsonPipe_Factory(t) { return new (t || JsonPipe)(); }, pure: false });\n    return JsonPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction makeKeyValuePair(key, value) {\n    return { key: key, value: value };\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms Object or Map into an array of key value pairs.\n *\n * The output array will be ordered by keys.\n * By default the comparator will be by Unicode point value.\n * You can optionally pass a compareFn if your keys are complex types.\n *\n * @usageNotes\n * ### Examples\n *\n * This examples show how an Object or a Map can be iterated by ngFor with the use of this keyvalue\n * pipe.\n *\n * {@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}\n *\n * @publicApi\n */\nvar KeyValuePipe = /** @class */ (function () {\n    function KeyValuePipe(differs) {\n        this.differs = differs;\n        this.keyValues = [];\n    }\n    KeyValuePipe.prototype.transform = function (input, compareFn) {\n        var _this = this;\n        if (compareFn === void 0) { compareFn = defaultComparator; }\n        if (!input || (!(input instanceof Map) && typeof input !== 'object')) {\n            return null;\n        }\n        if (!this.differ) {\n            // make a differ for whatever type we've been passed in\n            this.differ = this.differs.find(input).create();\n        }\n        var differChanges = this.differ.diff(input);\n        if (differChanges) {\n            this.keyValues = [];\n            differChanges.forEachItem(function (r) {\n                _this.keyValues.push(makeKeyValuePair(r.key, r.currentValue));\n            });\n            this.keyValues.sort(compareFn);\n        }\n        return this.keyValues;\n    };\n    KeyValuePipe = __decorate([\n        __metadata(\"design:paramtypes\", [KeyValueDiffers])\n    ], KeyValuePipe);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(KeyValuePipe, [{\n        type: Pipe,\n        args: [{ name: 'keyvalue', pure: false }]\n    }], function () { return [{\n        type: KeyValueDiffers\n    }]; }, { differs: [], keyValues: [], transform: [], differ: [] });\nKeyValuePipe.ngPipeDef = ɵngcc0.ɵdefinePipe({ name: \"keyvalue\", type: KeyValuePipe, factory: function KeyValuePipe_Factory(t) { return new (t || KeyValuePipe)(ɵngcc0.ɵdirectiveInject(KeyValueDiffers)); }, pure: false });\n    return KeyValuePipe;\n}());\nfunction defaultComparator(keyValueA, keyValueB) {\n    var a = keyValueA.key;\n    var b = keyValueB.key;\n    // if same exit with 0;\n    if (a === b)\n        return 0;\n    // make sure that undefined are at the end of the sort.\n    if (a === undefined)\n        return 1;\n    if (b === undefined)\n        return -1;\n    // make sure that nulls are at the end of the sort.\n    if (a === null)\n        return 1;\n    if (b === null)\n        return -1;\n    if (typeof a == 'string' && typeof b == 'string') {\n        return a < b ? -1 : 1;\n    }\n    if (typeof a == 'number' && typeof b == 'number') {\n        return a - b;\n    }\n    if (typeof a == 'boolean' && typeof b == 'boolean') {\n        return a < b ? -1 : 1;\n    }\n    // `a` and `b` are of different types. Compare their string values.\n    var aString = String(a);\n    var bString = String(b);\n    return aString == bString ? 0 : aString < bString ? -1 : 1;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number into a string,\n * formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * If no parameters are specified, the function rounds off to the nearest value using this\n * [rounding method](https://en.wikibooks.org/wiki/Arithmetic/Rounding).\n * The behavior differs from that of the JavaScript ```Math.round()``` function.\n * In the following case for example, the pipe rounds down where\n * ```Math.round()``` rounds up:\n *\n * ```html\n * -2.5 | number:'1.0-0'\n * > -3\n * Math.round(-2.5)\n * > -2\n * ```\n *\n * @see `formatNumber()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * ### Example\n *\n * <code-example path=\"common/pipes/ts/number_pipe.ts\" region='NumberPipe'></code-example>\n *\n * @publicApi\n */\nvar DecimalPipe = /** @class */ (function () {\n    function DecimalPipe(_locale) {\n        this._locale = _locale;\n    }\n    DecimalPipe_1 = DecimalPipe;\n    /**\n     * @param value The number to be formatted.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    DecimalPipe.prototype.transform = function (value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            var num = strToNumber(value);\n            return formatNumber(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DecimalPipe_1, error.message);\n        }\n    };\n    var DecimalPipe_1;\n    DecimalPipe = DecimalPipe_1 = __decorate([\n        Pipe({ name: 'number' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DecimalPipe);\n    return DecimalPipe;\n}());\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a percentage\n * string, formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * @see `formatPercent()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/percent_pipe.ts\" region='PercentPipe'></code-example>\n *\n * @publicApi\n */\nvar PercentPipe = /** @class */ (function () {\n    function PercentPipe(_locale) {\n        this._locale = _locale;\n    }\n    PercentPipe_1 = PercentPipe;\n    /**\n     *\n     * @param value The number to be formatted as a percentage.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `0`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    PercentPipe.prototype.transform = function (value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            var num = strToNumber(value);\n            return formatPercent(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(PercentPipe_1, error.message);\n        }\n    };\n    var PercentPipe_1;\n    PercentPipe = PercentPipe_1 = __decorate([\n        Pipe({ name: 'percent' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], PercentPipe);\n    return PercentPipe;\n}());\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a currency string, formatted according to locale rules\n * that determine group sizing and separator, decimal-point character,\n * and other locale-specific configurations.\n *\n * @see `getCurrencySymbol()`\n * @see `formatCurrency()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/currency_pipe.ts\" region='CurrencyPipe'></code-example>\n *\n * @publicApi\n */\nvar CurrencyPipe = /** @class */ (function () {\n    function CurrencyPipe(_locale) {\n        this._locale = _locale;\n    }\n    CurrencyPipe_1 = CurrencyPipe;\n    /**\n     *\n     * @param value The number to be formatted as currency.\n     * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,\n     * such as `USD` for the US dollar and `EUR` for the euro.\n     * @param display The format for the currency indicator. One of the following:\n     *   - `code`: Show the code (such as `USD`).\n     *   - `symbol`(default): Show the symbol (such as `$`).\n     *   - `symbol-narrow`: Use the narrow symbol for locales that have two symbols for their\n     * currency.\n     * For example, the Canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`. If the\n     * locale has no narrow symbol, uses the standard symbol for the locale.\n     *   - String: Use the given string value instead of a code or a symbol.\n     * For example, an empty string will suppress the currency & symbol.\n     *   - Boolean (marked deprecated in v5): `true` for symbol and false for `code`.\n     *\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `2`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `2`.\n     * If not provided, the number will be formatted with the proper amount of digits,\n     * depending on what the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) specifies.\n     * For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    CurrencyPipe.prototype.transform = function (value, currencyCode, display, digitsInfo, locale) {\n        if (display === void 0) { display = 'symbol'; }\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        if (typeof display === 'boolean') {\n            if (console && console.warn) {\n                console.warn(\"Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \\\"code\\\", \\\"symbol\\\" or \\\"symbol-narrow\\\".\");\n            }\n            display = display ? 'symbol' : 'code';\n        }\n        var currency = currencyCode || 'USD';\n        if (display !== 'code') {\n            if (display === 'symbol' || display === 'symbol-narrow') {\n                currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);\n            }\n            else {\n                currency = display;\n            }\n        }\n        try {\n            var num = strToNumber(value);\n            return formatCurrency(num, locale, currency, currencyCode, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(CurrencyPipe_1, error.message);\n        }\n    };\n    var CurrencyPipe_1;\n    CurrencyPipe = CurrencyPipe_1 = __decorate([\n        Pipe({ name: 'currency' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], CurrencyPipe);\n    return CurrencyPipe;\n}());\nfunction isEmpty(value) {\n    return value == null || value === '' || value !== value;\n}\n/**\n * Transforms a string into a number (if needed).\n */\nfunction strToNumber(value) {\n    // Convert strings to numbers\n    if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\n        return Number(value);\n    }\n    if (typeof value !== 'number') {\n        throw new Error(value + \" is not a number\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Creates a new `Array` or `String` containing a subset (slice) of the elements.\n *\n * @usageNotes\n *\n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n *\n * When operating on an `Array`, the returned `Array` is always a copy even when all\n * the elements are being returned.\n *\n * When operating on a blank value, the pipe returns the blank value.\n *\n * ### List Example\n *\n * This `ngFor` example:\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n *\n * produces the following:\n *\n * ```html\n * <li>b</li>\n * <li>c</li>\n * ```\n *\n * ### String Examples\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n *\n * @publicApi\n */\nvar SlicePipe = /** @class */ (function () {\n    function SlicePipe() {\n    }\n    SlicePipe_1 = SlicePipe;\n    /**\n     * @param value a list or a string to be sliced.\n     * @param start the starting index of the subset to return:\n     *   - **a positive integer**: return the item at `start` index and all items after\n     *     in the list or string expression.\n     *   - **a negative integer**: return the item at `start` index from the end and all items after\n     *     in the list or string expression.\n     *   - **if positive and greater than the size of the expression**: return an empty list or\n     * string.\n     *   - **if negative and greater than the size of the expression**: return entire list or string.\n     * @param end the ending index of the subset to return:\n     *   - **omitted**: return all items until the end.\n     *   - **if positive**: return all items before `end` index of the list or string.\n     *   - **if negative**: return all items before `end` index from the end of the list or string.\n     */\n    SlicePipe.prototype.transform = function (value, start, end) {\n        if (value == null)\n            return value;\n        if (!this.supports(value)) {\n            throw invalidPipeArgumentError(SlicePipe_1, value);\n        }\n        return value.slice(start, end);\n    };\n    SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n    var SlicePipe_1;\n    SlicePipe = SlicePipe_1 = __decorate([\n        Pipe({ name: 'slice', pure: false })\n    ], SlicePipe);\n    return SlicePipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of Angular pipes that are likely to be used in each and every application.\n */\nvar COMMON_PIPES = [\n    AsyncPipe,\n    UpperCasePipe,\n    LowerCasePipe,\n    JsonPipe,\n    SlicePipe,\n    DecimalPipe,\n    PercentPipe,\n    TitleCasePipe,\n    CurrencyPipe,\n    DatePipe,\n    I18nPluralPipe,\n    I18nSelectPipe,\n    KeyValuePipe,\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This does not contain the location providers,\n// as they need some platform specific implementations to work.\n/**\n * Exports all the basic Angular directives and pipes,\n * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * * The `providers` options configure the NgModule's injector to provide\n * localization dependencies to members.\n * * The `exports` options make the declared directives and pipes available for import\n * by other NgModules.\n *\n * @publicApi\n */\nvar CommonModule = /** @class */ (function () {\n    function CommonModule() {\n    }\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CommonModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n                exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n                providers: [\n                    { provide: NgLocalization, useClass: NgLocaleLocalization },\n                ]\n            }]\n    }], function () { return []; }, null);\nCommonModule.ngModuleDef = ɵngcc0.ɵdefineNgModule({ type: CommonModule, bootstrap: [], declarations: [NgClass,\n        NgComponentOutlet,\n        NgForOf,\n        NgIf,\n        NgTemplateOutlet,\n        NgStyle,\n        NgSwitch,\n        NgSwitchCase,\n        NgSwitchDefault,\n        NgPlural,\n        NgPluralCase,\n        AsyncPipe,\n        UpperCasePipe,\n        LowerCasePipe,\n        JsonPipe,\n        SlicePipe,\n        DecimalPipe,\n        PercentPipe,\n        TitleCasePipe,\n        CurrencyPipe,\n        DatePipe,\n        I18nPluralPipe,\n        I18nSelectPipe,\n        KeyValuePipe], imports: [], exports: [NgClass,\n        NgComponentOutlet,\n        NgForOf,\n        NgIf,\n        NgTemplateOutlet,\n        NgStyle,\n        NgSwitch,\n        NgSwitchCase,\n        NgSwitchDefault,\n        NgPlural,\n        NgPluralCase,\n        AsyncPipe,\n        UpperCasePipe,\n        LowerCasePipe,\n        JsonPipe,\n        SlicePipe,\n        DecimalPipe,\n        PercentPipe,\n        TitleCasePipe,\n        CurrencyPipe,\n        DatePipe,\n        I18nPluralPipe,\n        I18nSelectPipe,\n        KeyValuePipe] });\nCommonModule.ngInjectorDef = ɵngcc0.defineInjector({ factory: function CommonModule_Factory(t) { return new (t || CommonModule)(); }, providers: [\n        { provide: NgLocalization, useClass: NgLocaleLocalization },\n    ], imports: [[COMMON_DIRECTIVES, COMMON_PIPES]] });\n    return CommonModule;\n}());\nvar ɵ0 = getPluralCase;\n/**\n * A module that contains the deprecated i18n pipes.\n *\n * @deprecated from v5\n * @publicApi\n */\nvar DeprecatedI18NPipesModule = /** @class */ (function () {\n    function DeprecatedI18NPipesModule() {\n    }\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(DeprecatedI18NPipesModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [COMMON_DEPRECATED_I18N_PIPES],\n                exports: [COMMON_DEPRECATED_I18N_PIPES],\n                providers: [{ provide: DEPRECATED_PLURAL_FN, useValue: ɵ0 }]\n            }]\n    }], function () { return []; }, null);\nDeprecatedI18NPipesModule.ngModuleDef = ɵngcc0.ɵdefineNgModule({ type: DeprecatedI18NPipesModule, bootstrap: [], declarations: [DeprecatedDecimalPipe,\n        DeprecatedPercentPipe,\n        DeprecatedCurrencyPipe,\n        DeprecatedDatePipe], imports: [], exports: [DeprecatedDecimalPipe,\n        DeprecatedPercentPipe,\n        DeprecatedCurrencyPipe,\n        DeprecatedDatePipe] });\nDeprecatedI18NPipesModule.ngInjectorDef = ɵngcc0.defineInjector({ factory: function DeprecatedI18NPipesModule_Factory(t) { return new (t || DeprecatedI18NPipesModule)(); }, providers: [{ provide: DEPRECATED_PLURAL_FN, useValue: ɵ0 }], imports: [[COMMON_DEPRECATED_I18N_PIPES]] });\n    return DeprecatedI18NPipesModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @publicApi\n */\nvar DOCUMENT = new InjectionToken('DocumentToken');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PLATFORM_BROWSER_ID = 'browser';\nvar PLATFORM_SERVER_ID = 'server';\nvar PLATFORM_WORKER_APP_ID = 'browserWorkerApp';\nvar PLATFORM_WORKER_UI_ID = 'browserWorkerUi';\n/**\n * Returns whether a platform id represents a browser platform.\n * @publicApi\n */\nfunction isPlatformBrowser(platformId) {\n    return platformId === PLATFORM_BROWSER_ID;\n}\n/**\n * Returns whether a platform id represents a server platform.\n * @publicApi\n */\nfunction isPlatformServer(platformId) {\n    return platformId === PLATFORM_SERVER_ID;\n}\n/**\n * Returns whether a platform id represents a web worker app platform.\n * @publicApi\n */\nfunction isPlatformWorkerApp(platformId) {\n    return platformId === PLATFORM_WORKER_APP_ID;\n}\n/**\n * Returns whether a platform id represents a web worker UI platform.\n * @publicApi\n */\nfunction isPlatformWorkerUi(platformId) {\n    return platformId === PLATFORM_WORKER_UI_ID;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar VERSION = new Version('7.2.0');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a scroll position manager. Implemented by `BrowserViewportScroller`.\n *\n * @publicApi\n */\nvar ViewportScroller = /** @class */ (function () {\n    function ViewportScroller() {\n    }\n    // De-sugared tree-shakable injection\n    // See #23917\n    /** @nocollapse */\n    ViewportScroller.ngInjectableDef = defineInjectable({ providedIn: 'root', factory: function () { return new BrowserViewportScroller(inject(DOCUMENT), window); } });\n    return ViewportScroller;\n}());\n/**\n * Manages the scroll position for a browser window.\n */\nvar BrowserViewportScroller = /** @class */ (function () {\n    function BrowserViewportScroller(document, window) {\n        this.document = document;\n        this.window = window;\n        this.offset = function () { return [0, 0]; };\n    }\n    /**\n     * Configures the top offset used when scrolling to an anchor.\n     * @param offset A position in screen coordinates (a tuple with x and y values)\n     * or a function that returns the top offset position.\n     *\n     */\n    BrowserViewportScroller.prototype.setOffset = function (offset) {\n        if (Array.isArray(offset)) {\n            this.offset = function () { return offset; };\n        }\n        else {\n            this.offset = offset;\n        }\n    };\n    /**\n     * Retrieves the current scroll position.\n     * @returns The position in screen coordinates.\n     */\n    BrowserViewportScroller.prototype.getScrollPosition = function () {\n        if (this.supportScrollRestoration()) {\n            return [this.window.scrollX, this.window.scrollY];\n        }\n        else {\n            return [0, 0];\n        }\n    };\n    /**\n     * Sets the scroll position.\n     * @param position The new position in screen coordinates.\n     */\n    BrowserViewportScroller.prototype.scrollToPosition = function (position) {\n        if (this.supportScrollRestoration()) {\n            this.window.scrollTo(position[0], position[1]);\n        }\n    };\n    /**\n     * Scrolls to an anchor element.\n     * @param anchor The ID of the anchor element.\n     */\n    BrowserViewportScroller.prototype.scrollToAnchor = function (anchor) {\n        if (this.supportScrollRestoration()) {\n            var elSelectedById = this.document.querySelector(\"#\" + anchor);\n            if (elSelectedById) {\n                this.scrollToElement(elSelectedById);\n                return;\n            }\n            var elSelectedByName = this.document.querySelector(\"[name='\" + anchor + \"']\");\n            if (elSelectedByName) {\n                this.scrollToElement(elSelectedByName);\n                return;\n            }\n        }\n    };\n    /**\n     * Disables automatic scroll restoration provided by the browser.\n     */\n    BrowserViewportScroller.prototype.setHistoryScrollRestoration = function (scrollRestoration) {\n        if (this.supportScrollRestoration()) {\n            var history_1 = this.window.history;\n            if (history_1 && history_1.scrollRestoration) {\n                history_1.scrollRestoration = scrollRestoration;\n            }\n        }\n    };\n    BrowserViewportScroller.prototype.scrollToElement = function (el) {\n        var rect = el.getBoundingClientRect();\n        var left = rect.left + this.window.pageXOffset;\n        var top = rect.top + this.window.pageYOffset;\n        var offset = this.offset();\n        this.window.scrollTo(left - offset[0], top - offset[1]);\n    };\n    /**\n     * We only support scroll restoration when we can get a hold of window.\n     * This means that we do not support this behavior when running in a web worker.\n     *\n     * Lifting this restriction right now would require more changes in the dom adapter.\n     * Since webworkers aren't widely used, we will lift it once RouterScroller is\n     * battle-tested.\n     */\n    BrowserViewportScroller.prototype.supportScrollRestoration = function () {\n        try {\n            return !!this.window && !!this.window.scrollTo;\n        }\n        catch (_a) {\n            return false;\n        }\n    };\n    return BrowserViewportScroller;\n}());\n/**\n * Provides an empty implementation of the viewport scroller. This will\n * live in @angular/common as it will be used by both platform-server and platform-webworker.\n */\nvar NullViewportScroller = /** @class */ (function () {\n    function NullViewportScroller() {\n    }\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.setOffset = function (offset) { };\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.getScrollPosition = function () { return [0, 0]; };\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.scrollToPosition = function (position) { };\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.scrollToAnchor = function (anchor) { };\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.setHistoryScrollRestoration = function (scrollRestoration) { };\n    return NullViewportScroller;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { COMMON_DIRECTIVES as ɵangular_packages_common_common_e, findLocaleData as ɵangular_packages_common_common_d, DEPRECATED_PLURAL_FN as ɵangular_packages_common_common_a, getPluralCase as ɵangular_packages_common_common_b, COMMON_DEPRECATED_I18N_PIPES as ɵangular_packages_common_common_g, COMMON_PIPES as ɵangular_packages_common_common_f, registerLocaleData as ɵregisterLocaleData, formatDate, formatCurrency, formatNumber, formatPercent, NgLocaleLocalization, NgLocalization, registerLocaleData, Plural, NumberFormatStyle, FormStyle, TranslationWidth, FormatWidth, NumberSymbol, WeekDay, getNumberOfCurrencyDigits, getCurrencySymbol, getLocaleDayPeriods, getLocaleDayNames, getLocaleMonthNames, getLocaleId, getLocaleEraNames, getLocaleWeekEndRange, getLocaleFirstDayOfWeek, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocalePluralCase, getLocaleTimeFormat, getLocaleNumberSymbol, getLocaleNumberFormat, getLocaleCurrencyName, getLocaleCurrencySymbol, parseCookieValue as ɵparseCookieValue, CommonModule, DeprecatedI18NPipesModule, NgClass, NgForOf, NgForOfContext, NgIf, NgIfContext, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NgComponentOutlet, DOCUMENT, AsyncPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, JsonPipe, LowerCasePipe, CurrencyPipe, DecimalPipe, PercentPipe, SlicePipe, UpperCasePipe, TitleCasePipe, KeyValuePipe, DeprecatedDatePipe, DeprecatedCurrencyPipe, DeprecatedDecimalPipe, DeprecatedPercentPipe, PLATFORM_BROWSER_ID as ɵPLATFORM_BROWSER_ID, PLATFORM_SERVER_ID as ɵPLATFORM_SERVER_ID, PLATFORM_WORKER_APP_ID as ɵPLATFORM_WORKER_APP_ID, PLATFORM_WORKER_UI_ID as ɵPLATFORM_WORKER_UI_ID, isPlatformBrowser, isPlatformServer, isPlatformWorkerApp, isPlatformWorkerUi, VERSION, ViewportScroller, NullViewportScroller as ɵNullViewportScroller, PlatformLocation, LOCATION_INITIALIZED, LocationStrategy, APP_BASE_HREF, HashLocationStrategy, PathLocationStrategy, Location };\n\n//# sourceMappingURL=/ivy-bundle-size/node_modules/@angular/common/fesm5/common.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import * as ɵngcc0 from '@angular/core';\n/**\n * @license Angular v7.2.0\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { __decorate, __param, __metadata, __assign, __extends, __spread } from 'tslib';\nimport { ɵparseCookieValue, DOCUMENT, PlatformLocation, isPlatformServer, CommonModule, ɵPLATFORM_BROWSER_ID } from '@angular/common';\nimport { ɵglobal, Inject, Injectable, APP_INITIALIZER, ApplicationInitStatus, InjectionToken, Injector, setTestabilityGetter, Version, ApplicationRef, inject, defineInjectable, NgZone, getDebugNode, NgProbeToken, Optional, NgModule, APP_ID, PLATFORM_ID, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ErrorHandler, ɵAPP_ROOT, ɵConsole, RendererFactory2, Testability, ApplicationModule, SkipSelf, SecurityContext, ɵ_sanitizeHtml, ɵ_sanitizeStyle, ɵ_sanitizeUrl, ViewEncapsulation, RendererStyleFlags2 } from '@angular/core';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _DOM = null;\nfunction getDOM() {\n    return _DOM;\n}\nfunction setRootDomAdapter(adapter) {\n    if (!_DOM) {\n        _DOM = adapter;\n    }\n}\n/* tslint:disable:requireParameterType */\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nvar DomAdapter = /** @class */ (function () {\n    function DomAdapter() {\n        this.resourceLoaderType = null;\n    }\n    Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\n        /**\n         * Maps attribute names to their corresponding property names for cases\n         * where attribute name doesn't match property name.\n         */\n        get: function () { return this._attrToPropMap; },\n        set: function (value) { this._attrToPropMap = value; },\n        enumerable: true,\n        configurable: true\n    });\n    return DomAdapter;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nvar GenericBrowserDomAdapter = /** @class */ (function (_super) {\n    __extends(GenericBrowserDomAdapter, _super);\n    function GenericBrowserDomAdapter() {\n        var _this = _super.call(this) || this;\n        _this._animationPrefix = null;\n        _this._transitionEnd = null;\n        try {\n            var element_1 = _this.createElement('div', document);\n            if (_this.getStyle(element_1, 'animationName') != null) {\n                _this._animationPrefix = '';\n            }\n            else {\n                var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n                for (var i = 0; i < domPrefixes.length; i++) {\n                    if (_this.getStyle(element_1, domPrefixes[i] + 'AnimationName') != null) {\n                        _this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n                        break;\n                    }\n                }\n            }\n            var transEndEventNames_1 = {\n                WebkitTransition: 'webkitTransitionEnd',\n                MozTransition: 'transitionend',\n                OTransition: 'oTransitionEnd otransitionend',\n                transition: 'transitionend'\n            };\n            Object.keys(transEndEventNames_1).forEach(function (key) {\n                if (_this.getStyle(element_1, key) != null) {\n                    _this._transitionEnd = transEndEventNames_1[key];\n                }\n            });\n        }\n        catch (_a) {\n            _this._animationPrefix = null;\n            _this._transitionEnd = null;\n        }\n        return _this;\n    }\n    GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return el.getDistributedNodes(); };\n    GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\n        el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n    };\n    GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\n    GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\n        return typeof document.body.createShadowRoot === 'function';\n    };\n    GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () { return this._animationPrefix ? this._animationPrefix : ''; };\n    GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return this._transitionEnd ? this._transitionEnd : ''; };\n    GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\n        return this._animationPrefix != null && this._transitionEnd != null;\n    };\n    return GenericBrowserDomAdapter;\n}(DomAdapter));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _attrToPropMap = {\n    'class': 'className',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DOM_KEY_LOCATION_NUMPAD = 3;\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nvar _keyMap = {\n    // The following values are here for cross-browser compatibility and to match the W3C standard\n    // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nvar _chromeNumKeyPadMap = {\n    'A': '1',\n    'B': '2',\n    'C': '3',\n    'D': '4',\n    'E': '5',\n    'F': '6',\n    'G': '7',\n    'H': '8',\n    'I': '9',\n    'J': '*',\n    'K': '+',\n    'M': '-',\n    'N': '.',\n    'O': '/',\n    '\\x60': '0',\n    '\\x90': 'NumLock'\n};\nvar nodeContains;\nif (ɵglobal['Node']) {\n    nodeContains = ɵglobal['Node'].prototype.contains || function (node) {\n        return !!(this.compareDocumentPosition(node) & 16);\n    };\n}\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nvar BrowserDomAdapter = /** @class */ (function (_super) {\n    __extends(BrowserDomAdapter, _super);\n    function BrowserDomAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error('parse not implemented'); };\n    BrowserDomAdapter.makeCurrent = function () { setRootDomAdapter(new BrowserDomAdapter()); };\n    BrowserDomAdapter.prototype.hasProperty = function (element, name) { return name in element; };\n    BrowserDomAdapter.prototype.setProperty = function (el, name, value) { el[name] = value; };\n    BrowserDomAdapter.prototype.getProperty = function (el, name) { return el[name]; };\n    BrowserDomAdapter.prototype.invoke = function (el, methodName, args) {\n        var _a;\n        (_a = el)[methodName].apply(_a, __spread(args));\n    };\n    // TODO(tbosch): move this into a separate environment class once we have it\n    BrowserDomAdapter.prototype.logError = function (error) {\n        if (window.console) {\n            if (console.error) {\n                console.error(error);\n            }\n            else {\n                console.log(error);\n            }\n        }\n    };\n    BrowserDomAdapter.prototype.log = function (error) {\n        if (window.console) {\n            window.console.log && window.console.log(error);\n        }\n    };\n    BrowserDomAdapter.prototype.logGroup = function (error) {\n        if (window.console) {\n            window.console.group && window.console.group(error);\n        }\n    };\n    BrowserDomAdapter.prototype.logGroupEnd = function () {\n        if (window.console) {\n            window.console.groupEnd && window.console.groupEnd();\n        }\n    };\n    Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\n        get: function () { return _attrToPropMap; },\n        enumerable: true,\n        configurable: true\n    });\n    BrowserDomAdapter.prototype.contains = function (nodeA, nodeB) { return nodeContains.call(nodeA, nodeB); };\n    BrowserDomAdapter.prototype.querySelector = function (el, selector) { return el.querySelector(selector); };\n    BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\n    BrowserDomAdapter.prototype.on = function (el, evt, listener) { el.addEventListener(evt, listener, false); };\n    BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return function () { el.removeEventListener(evt, listener, false); };\n    };\n    BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\n    BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\n        var evt = this.getDefaultDocument().createEvent('MouseEvent');\n        evt.initEvent(eventType, true, true);\n        return evt;\n    };\n    BrowserDomAdapter.prototype.createEvent = function (eventType) {\n        var evt = this.getDefaultDocument().createEvent('Event');\n        evt.initEvent(eventType, true, true);\n        return evt;\n    };\n    BrowserDomAdapter.prototype.preventDefault = function (evt) {\n        evt.preventDefault();\n        evt.returnValue = false;\n    };\n    BrowserDomAdapter.prototype.isPrevented = function (evt) {\n        return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\n    };\n    BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\n    BrowserDomAdapter.prototype.getTemplateContent = function (el) {\n        return 'content' in el && this.isTemplateElement(el) ? el.content : null;\n    };\n    BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\n    BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\n    BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\n    BrowserDomAdapter.prototype.type = function (node) { return node.type; };\n    BrowserDomAdapter.prototype.content = function (node) {\n        if (this.hasProperty(node, 'content')) {\n            return node.content;\n        }\n        else {\n            return node;\n        }\n    };\n    BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\n    BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\n    BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\n    BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\n    BrowserDomAdapter.prototype.childNodesAsList = function (el) {\n        var childNodes = el.childNodes;\n        var res = new Array(childNodes.length);\n        for (var i = 0; i < childNodes.length; i++) {\n            res[i] = childNodes[i];\n        }\n        return res;\n    };\n    BrowserDomAdapter.prototype.clearNodes = function (el) {\n        while (el.firstChild) {\n            el.removeChild(el.firstChild);\n        }\n    };\n    BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\n    BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\n    BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\n    BrowserDomAdapter.prototype.remove = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n        return node;\n    };\n    BrowserDomAdapter.prototype.insertBefore = function (parent, ref, node) { parent.insertBefore(node, ref); };\n    BrowserDomAdapter.prototype.insertAllBefore = function (parent, ref, nodes) {\n        nodes.forEach(function (n) { return parent.insertBefore(n, ref); });\n    };\n    BrowserDomAdapter.prototype.insertAfter = function (parent, ref, node) { parent.insertBefore(node, ref.nextSibling); };\n    BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\n    BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\n    BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\n    BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\n    BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\n    BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\n    BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\n    BrowserDomAdapter.prototype.createComment = function (text) { return this.getDefaultDocument().createComment(text); };\n    BrowserDomAdapter.prototype.createTemplate = function (html) {\n        var t = this.getDefaultDocument().createElement('template');\n        t.innerHTML = html;\n        return t;\n    };\n    BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    };\n    BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElementNS(ns, tagName);\n    };\n    BrowserDomAdapter.prototype.createTextNode = function (text, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createTextNode(text);\n    };\n    BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\n        doc = doc || this.getDefaultDocument();\n        var el = doc.createElement('SCRIPT');\n        el.setAttribute(attrName, attrValue);\n        return el;\n    };\n    BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\n        doc = doc || this.getDefaultDocument();\n        var style = doc.createElement('style');\n        this.appendChild(style, this.createTextNode(css, doc));\n        return style;\n    };\n    BrowserDomAdapter.prototype.createShadowRoot = function (el) { return el.createShadowRoot(); };\n    BrowserDomAdapter.prototype.getShadowRoot = function (el) { return el.shadowRoot; };\n    BrowserDomAdapter.prototype.getHost = function (el) { return el.host; };\n    BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\n    BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {\n        return element.getElementsByClassName(name);\n    };\n    BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {\n        return element.getElementsByTagName(name);\n    };\n    BrowserDomAdapter.prototype.classList = function (element) { return Array.prototype.slice.call(element.classList, 0); };\n    BrowserDomAdapter.prototype.addClass = function (element, className) { element.classList.add(className); };\n    BrowserDomAdapter.prototype.removeClass = function (element, className) { element.classList.remove(className); };\n    BrowserDomAdapter.prototype.hasClass = function (element, className) {\n        return element.classList.contains(className);\n    };\n    BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {\n        element.style[styleName] = styleValue;\n    };\n    BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {\n        // IE requires '' instead of null\n        // see https://github.com/angular/angular/issues/7916\n        element.style[stylename] = '';\n    };\n    BrowserDomAdapter.prototype.getStyle = function (element, stylename) { return element.style[stylename]; };\n    BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {\n        var value = this.getStyle(element, styleName) || '';\n        return styleValue ? value == styleValue : value.length > 0;\n    };\n    BrowserDomAdapter.prototype.tagName = function (element) { return element.tagName; };\n    BrowserDomAdapter.prototype.attributeMap = function (element) {\n        var res = new Map();\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var attrib = elAttrs.item(i);\n            res.set(attrib.name, attrib.value);\n        }\n        return res;\n    };\n    BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {\n        return element.hasAttribute(attribute);\n    };\n    BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {\n        return element.hasAttributeNS(ns, attribute);\n    };\n    BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {\n        return element.getAttribute(attribute);\n    };\n    BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {\n        return element.getAttributeNS(ns, name);\n    };\n    BrowserDomAdapter.prototype.setAttribute = function (element, name, value) { element.setAttribute(name, value); };\n    BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {\n        element.setAttributeNS(ns, name, value);\n    };\n    BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) { element.removeAttribute(attribute); };\n    BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {\n        element.removeAttributeNS(ns, name);\n    };\n    BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\n    BrowserDomAdapter.prototype.createHtmlDocument = function () {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    };\n    BrowserDomAdapter.prototype.getDefaultDocument = function () { return document; };\n    BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\n        try {\n            return el.getBoundingClientRect();\n        }\n        catch (_a) {\n            return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\n        }\n    };\n    BrowserDomAdapter.prototype.getTitle = function (doc) { return doc.title; };\n    BrowserDomAdapter.prototype.setTitle = function (doc, newTitle) { doc.title = newTitle || ''; };\n    BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\n        if (this.isElementNode(n)) {\n            return n.matches && n.matches(selector) ||\n                n.msMatchesSelector && n.msMatchesSelector(selector) ||\n                n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n        }\n        return false;\n    };\n    BrowserDomAdapter.prototype.isTemplateElement = function (el) {\n        return this.isElementNode(el) && el.nodeName === 'TEMPLATE';\n    };\n    BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\n    BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\n    BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\n    BrowserDomAdapter.prototype.hasShadowRoot = function (node) {\n        return node.shadowRoot != null && node instanceof HTMLElement;\n    };\n    BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\n    BrowserDomAdapter.prototype.importIntoDoc = function (node) { return document.importNode(this.templateAwareRoot(node), true); };\n    BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\n    BrowserDomAdapter.prototype.getHref = function (el) { return el.getAttribute('href'); };\n    BrowserDomAdapter.prototype.getEventKey = function (event) {\n        var key = event.key;\n        if (key == null) {\n            key = event.keyIdentifier;\n            // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n            // Safari cf\n            // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n            if (key == null) {\n                return 'Unidentified';\n            }\n            if (key.startsWith('U+')) {\n                key = String.fromCharCode(parseInt(key.substring(2), 16));\n                if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                    // There is a bug in Chrome for numeric keypad keys:\n                    // https://code.google.com/p/chromium/issues/detail?id=155654\n                    // 1, 2, 3 ... are reported as A, B, C ...\n                    key = _chromeNumKeyPadMap[key];\n                }\n            }\n        }\n        return _keyMap[key] || key;\n    };\n    BrowserDomAdapter.prototype.getGlobalEventTarget = function (doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    };\n    BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\n    BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\n    BrowserDomAdapter.prototype.getBaseHref = function (doc) {\n        var href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    };\n    BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\n    BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\n    BrowserDomAdapter.prototype.setData = function (element, name, value) {\n        this.setAttribute(element, 'data-' + name, value);\n    };\n    BrowserDomAdapter.prototype.getData = function (element, name) {\n        return this.getAttribute(element, 'data-' + name);\n    };\n    BrowserDomAdapter.prototype.getComputedStyle = function (element) { return getComputedStyle(element); };\n    // TODO(tbosch): move this into a separate environment class once we have it\n    BrowserDomAdapter.prototype.supportsWebAnimation = function () {\n        return typeof Element.prototype['animate'] === 'function';\n    };\n    BrowserDomAdapter.prototype.performanceNow = function () {\n        // performance.now() is not available in all browsers, see\n        // http://caniuse.com/#search=performance.now\n        return window.performance && window.performance.now ? window.performance.now() :\n            new Date().getTime();\n    };\n    BrowserDomAdapter.prototype.supportsCookies = function () { return true; };\n    BrowserDomAdapter.prototype.getCookie = function (name) { return ɵparseCookieValue(document.cookie, name); };\n    BrowserDomAdapter.prototype.setCookie = function (name, value) {\n        // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n        // not clear other cookies.\n        document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n    };\n    return BrowserDomAdapter;\n}(GenericBrowserDomAdapter));\nvar baseElement = null;\nfunction getBaseElementHref() {\n    if (!baseElement) {\n        baseElement = document.querySelector('base');\n        if (!baseElement) {\n            return null;\n        }\n    }\n    return baseElement.getAttribute('href');\n}\n// based on urlUtils.js in AngularJS 1\nvar urlParsingNode;\nfunction relativePath(url) {\n    if (!urlParsingNode) {\n        urlParsingNode = document.createElement('a');\n    }\n    urlParsingNode.setAttribute('href', url);\n    return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n        '/' + urlParsingNode.pathname;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @deprecated import from `@angular/common` instead.\n * @publicApi\n */\nvar DOCUMENT$1 = DOCUMENT;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction supportsState() {\n    return !!window.history.pushState;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n */\nvar BrowserPlatformLocation = /** @class */ (function (_super) {\n    __extends(BrowserPlatformLocation, _super);\n    function BrowserPlatformLocation(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        _this._init();\n        return _this;\n    }\n    // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n    /** @internal */\n    BrowserPlatformLocation.prototype._init = function () {\n        this.location = getDOM().getLocation();\n        this._history = getDOM().getHistory();\n    };\n    BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () { return getDOM().getBaseHref(this._doc); };\n    BrowserPlatformLocation.prototype.onPopState = function (fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n    };\n    BrowserPlatformLocation.prototype.onHashChange = function (fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n    };\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"pathname\", {\n        get: function () { return this.location.pathname; },\n        set: function (newPath) { this.location.pathname = newPath; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"search\", {\n        get: function () { return this.location.search; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"hash\", {\n        get: function () { return this.location.hash; },\n        enumerable: true,\n        configurable: true\n    });\n    BrowserPlatformLocation.prototype.pushState = function (state, title, url) {\n        if (supportsState()) {\n            this._history.pushState(state, title, url);\n        }\n        else {\n            this.location.hash = url;\n        }\n    };\n    BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {\n        if (supportsState()) {\n            this._history.replaceState(state, title, url);\n        }\n        else {\n            this.location.hash = url;\n        }\n    };\n    BrowserPlatformLocation.prototype.forward = function () { this._history.forward(); };\n    BrowserPlatformLocation.prototype.back = function () { this._history.back(); };\n    BrowserPlatformLocation = __decorate([\n        __param(0, Inject(DOCUMENT$1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], BrowserPlatformLocation);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(BrowserPlatformLocation, [{\n        type: Injectable\n    }], function () { return [{\n        type: Object,\n        decorators: [{\n                type: Inject,\n                args: [DOCUMENT$1]\n            }]\n    }]; }, { _init: [], location: [], _history: [], getBaseHrefFromDOM: [], onPopState: [], onHashChange: [], pushState: [], replaceState: [], forward: [], back: [] });\nBrowserPlatformLocation.ngInjectableDef = ɵngcc0.defineInjectable({ token: BrowserPlatformLocation, factory: function BrowserPlatformLocation_Factory(t) { return new (t || BrowserPlatformLocation)(ɵngcc0.inject(DOCUMENT$1)); }, providedIn: null });\n    return BrowserPlatformLocation;\n}(PlatformLocation));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nvar TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return function () {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(function () {\n            var dom = getDOM();\n            var styles = Array.prototype.slice.apply(dom.querySelectorAll(document, \"style[ng-transition]\"));\n            styles.filter(function (el) { return dom.getAttribute(el, 'ng-transition') === transitionId; })\n                .forEach(function (el) { return dom.remove(el); });\n        });\n    };\n}\nvar SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT$1, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BrowserGetTestability = /** @class */ (function () {\n    function BrowserGetTestability() {\n    }\n    BrowserGetTestability.init = function () { setTestabilityGetter(new BrowserGetTestability()); };\n    BrowserGetTestability.prototype.addToWindow = function (registry) {\n        ɵglobal['getAngularTestability'] = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            var testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = function () { return registry.getAllTestabilities(); };\n        ɵglobal['getAllAngularRootElements'] = function () { return registry.getAllRootElements(); };\n        var whenAllStable = function (callback /** TODO #9100 */) {\n            var testabilities = ɵglobal['getAllAngularTestabilities']();\n            var count = testabilities.length;\n            var didWork = false;\n            var decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    };\n    BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        var t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (getDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n        }\n        return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n    };\n    return BrowserGetTestability;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        var ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE_TOKENS = {\n    'ApplicationRef': ApplicationRef,\n    'NgZone': NgZone,\n};\nvar INSPECT_GLOBAL_NAME = 'probe';\nvar CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nfunction inspectNativeElement(element) {\n    return getDebugNode(element);\n}\nfunction _createNgProbe(coreTokens) {\n    exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n    exportNgVar(CORE_TOKENS_GLOBAL_NAME, __assign({}, CORE_TOKENS, _ngProbeTokensToMap(coreTokens || [])));\n    return function () { return inspectNativeElement; };\n}\nfunction _ngProbeTokensToMap(tokens) {\n    return tokens.reduce(function (prev, t) { return (prev[t.name] = t.token, prev); }, {});\n}\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nvar ELEMENT_PROBE_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: _createNgProbe,\n        deps: [\n            [NgProbeToken, new Optional()],\n        ],\n        multi: true,\n    },\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nvar EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nvar EventManager = /** @class */ (function () {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    function EventManager(plugins, _zone) {\n        var _this = this;\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(function (p) { return p.manager = _this; });\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    EventManager.prototype.addEventListener = function (element, eventName, handler) {\n        var plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    };\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     */\n    EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\n        var plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    };\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    EventManager.prototype.getZone = function () { return this._zone; };\n    /** @internal */\n    EventManager.prototype._findPluginFor = function (eventName) {\n        var plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        var plugins = this._plugins;\n        for (var i = 0; i < plugins.length; i++) {\n            var plugin_1 = plugins[i];\n            if (plugin_1.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin_1);\n                return plugin_1;\n            }\n        }\n        throw new Error(\"No event manager plugin found for event \" + eventName);\n    };\n    EventManager = __decorate([\n        __param(0, Inject(EVENT_MANAGER_PLUGINS)),\n        __metadata(\"design:paramtypes\", [Array, NgZone])\n    ], EventManager);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(EventManager, [{\n        type: Injectable\n    }], function () { return [{\n        type: Array,\n        decorators: [{\n                type: Inject,\n                args: [EVENT_MANAGER_PLUGINS]\n            }]\n    }, {\n        type: NgZone\n    }]; }, { _zone: [], _eventNameToPlugin: [], _plugins: [], addEventListener: [], addGlobalEventListener: [], getZone: [], _findPluginFor: [] });\nEventManager.ngInjectableDef = ɵngcc0.defineInjectable({ token: EventManager, factory: function EventManager_Factory(t) { return new (t || EventManager)(ɵngcc0.inject(EVENT_MANAGER_PLUGINS), ɵngcc0.inject(NgZone)); }, providedIn: null });\n    return EventManager;\n}());\nvar EventManagerPlugin = /** @class */ (function () {\n    function EventManagerPlugin(_doc) {\n        this._doc = _doc;\n    }\n    EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {\n        var target = getDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(\"Unsupported event target \" + target + \" for event \" + eventName);\n        }\n        return this.addEventListener(target, eventName, handler);\n    };\n    return EventManagerPlugin;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SharedStylesHost = /** @class */ (function () {\n    function SharedStylesHost() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    SharedStylesHost.prototype.addStyles = function (styles) {\n        var _this = this;\n        var additions = new Set();\n        styles.forEach(function (style) {\n            if (!_this._stylesSet.has(style)) {\n                _this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    };\n    SharedStylesHost.prototype.onStylesAdded = function (additions) { };\n    SharedStylesHost.prototype.getAllStyles = function () { return Array.from(this._stylesSet); };\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(SharedStylesHost, [{\n        type: Injectable\n    }], function () { return []; }, { _stylesSet: [], addStyles: [], onStylesAdded: [], getAllStyles: [] });\nSharedStylesHost.ngInjectableDef = ɵngcc0.defineInjectable({ token: SharedStylesHost, factory: function SharedStylesHost_Factory(t) { return new (t || SharedStylesHost)(); }, providedIn: null });\n    return SharedStylesHost;\n}());\nvar DomSharedStylesHost = /** @class */ (function (_super) {\n    __extends(DomSharedStylesHost, _super);\n    function DomSharedStylesHost(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        _this._hostNodes = new Set();\n        _this._styleNodes = new Set();\n        _this._hostNodes.add(_doc.head);\n        return _this;\n    }\n    DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\n        var _this = this;\n        styles.forEach(function (style) {\n            var styleEl = _this._doc.createElement('style');\n            styleEl.textContent = style;\n            _this._styleNodes.add(host.appendChild(styleEl));\n        });\n    };\n    DomSharedStylesHost.prototype.addHost = function (hostNode) {\n        this._addStylesToHost(this._stylesSet, hostNode);\n        this._hostNodes.add(hostNode);\n    };\n    DomSharedStylesHost.prototype.removeHost = function (hostNode) { this._hostNodes.delete(hostNode); };\n    DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\n        var _this = this;\n        this._hostNodes.forEach(function (hostNode) { return _this._addStylesToHost(additions, hostNode); });\n    };\n    DomSharedStylesHost.prototype.ngOnDestroy = function () { this._styleNodes.forEach(function (styleNode) { return getDOM().remove(styleNode); }); };\n    DomSharedStylesHost = __decorate([\n        __param(0, Inject(DOCUMENT$1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], DomSharedStylesHost);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(DomSharedStylesHost, [{\n        type: Injectable\n    }], function () { return [{\n        type: Object,\n        decorators: [{\n                type: Inject,\n                args: [DOCUMENT$1]\n            }]\n    }]; }, { _addStylesToHost: [], addHost: [], removeHost: [], onStylesAdded: [], ngOnDestroy: [] });\nDomSharedStylesHost.ngInjectableDef = ɵngcc0.defineInjectable({ token: DomSharedStylesHost, factory: function DomSharedStylesHost_Factory(t) { return new (t || DomSharedStylesHost)(ɵngcc0.inject(DOCUMENT$1)); }, providedIn: null });\n    return DomSharedStylesHost;\n}(SharedStylesHost));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\nvar COMPONENT_REGEX = /%COMP%/g;\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n    for (var i = 0; i < styles.length; i++) {\n        var style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n    return function (event) {\n        var allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n    };\n}\nvar DomRendererFactory2 = /** @class */ (function () {\n    function DomRendererFactory2(eventManager, sharedStylesHost) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    DomRendererFactory2.prototype.createRenderer = function (element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                var renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer =\n                        new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            case ViewEncapsulation.Native:\n            case ViewEncapsulation.ShadowDom:\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    var styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    };\n    DomRendererFactory2.prototype.begin = function () { };\n    DomRendererFactory2.prototype.end = function () { };\n    DomRendererFactory2 = __decorate([\n        __metadata(\"design:paramtypes\", [EventManager, DomSharedStylesHost])\n    ], DomRendererFactory2);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(DomRendererFactory2, [{\n        type: Injectable\n    }], function () { return [{\n        type: EventManager\n    }, {\n        type: DomSharedStylesHost\n    }]; }, { eventManager: [], sharedStylesHost: [], rendererByCompId: [], defaultRenderer: [], createRenderer: [], begin: [], end: [] });\nDomRendererFactory2.ngInjectableDef = ɵngcc0.defineInjectable({ token: DomRendererFactory2, factory: function DomRendererFactory2_Factory(t) { return new (t || DomRendererFactory2)(ɵngcc0.inject(EventManager), ɵngcc0.inject(DomSharedStylesHost)); }, providedIn: null });\n    return DomRendererFactory2;\n}());\nvar DefaultDomRenderer2 = /** @class */ (function () {\n    function DefaultDomRenderer2(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n    }\n    DefaultDomRenderer2.prototype.destroy = function () { };\n    DefaultDomRenderer2.prototype.createElement = function (name, namespace) {\n        if (namespace) {\n            return document.createElementNS(NAMESPACE_URIS[namespace], name);\n        }\n        return document.createElement(name);\n    };\n    DefaultDomRenderer2.prototype.createComment = function (value) { return document.createComment(value); };\n    DefaultDomRenderer2.prototype.createText = function (value) { return document.createTextNode(value); };\n    DefaultDomRenderer2.prototype.appendChild = function (parent, newChild) { parent.appendChild(newChild); };\n    DefaultDomRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        if (parent) {\n            parent.insertBefore(newChild, refChild);\n        }\n    };\n    DefaultDomRenderer2.prototype.removeChild = function (parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    };\n    DefaultDomRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n        var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(\"The selector \\\"\" + selectorOrNode + \"\\\" did not match any elements\");\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    };\n    DefaultDomRenderer2.prototype.parentNode = function (node) { return node.parentNode; };\n    DefaultDomRenderer2.prototype.nextSibling = function (node) { return node.nextSibling; };\n    DefaultDomRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + \":\" + name;\n            var namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    };\n    DefaultDomRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        if (namespace) {\n            var namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(namespace + \":\" + name);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    };\n    DefaultDomRenderer2.prototype.addClass = function (el, name) { el.classList.add(name); };\n    DefaultDomRenderer2.prototype.removeClass = function (el, name) { el.classList.remove(name); };\n    DefaultDomRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.setProperty(style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    };\n    DefaultDomRenderer2.prototype.removeStyle = function (el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    };\n    DefaultDomRenderer2.prototype.setProperty = function (el, name, value) {\n        checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    };\n    DefaultDomRenderer2.prototype.setValue = function (node, value) { node.nodeValue = value; };\n    DefaultDomRenderer2.prototype.listen = function (target, event, callback) {\n        checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    };\n    return DefaultDomRenderer2;\n}());\nvar AT_CHARCODE = '@'.charCodeAt(0);\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(\"Found the synthetic \" + nameKind + \" \" + name + \". Please include either \\\"BrowserAnimationsModule\\\" or \\\"NoopAnimationsModule\\\" in your application.\");\n    }\n}\nvar EmulatedEncapsulationDomRenderer2 = /** @class */ (function (_super) {\n    __extends(EmulatedEncapsulationDomRenderer2, _super);\n    function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component) {\n        var _this = _super.call(this, eventManager) || this;\n        _this.component = component;\n        var styles = flattenStyles(component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        _this.contentAttr = shimContentAttribute(component.id);\n        _this.hostAttr = shimHostAttribute(component.id);\n        return _this;\n    }\n    EmulatedEncapsulationDomRenderer2.prototype.applyToHost = function (element) { _super.prototype.setAttribute.call(this, element, this.hostAttr, ''); };\n    EmulatedEncapsulationDomRenderer2.prototype.createElement = function (parent, name) {\n        var el = _super.prototype.createElement.call(this, parent, name);\n        _super.prototype.setAttribute.call(this, el, this.contentAttr, '');\n        return el;\n    };\n    return EmulatedEncapsulationDomRenderer2;\n}(DefaultDomRenderer2));\nvar ShadowDomRenderer = /** @class */ (function (_super) {\n    __extends(ShadowDomRenderer, _super);\n    function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {\n        var _this = _super.call(this, eventManager) || this;\n        _this.sharedStylesHost = sharedStylesHost;\n        _this.hostEl = hostEl;\n        _this.component = component;\n        if (component.encapsulation === ViewEncapsulation.ShadowDom) {\n            _this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        }\n        else {\n            _this.shadowRoot = hostEl.createShadowRoot();\n        }\n        _this.sharedStylesHost.addHost(_this.shadowRoot);\n        var styles = flattenStyles(component.id, component.styles, []);\n        for (var i = 0; i < styles.length; i++) {\n            var styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            _this.shadowRoot.appendChild(styleEl);\n        }\n        return _this;\n    }\n    ShadowDomRenderer.prototype.nodeOrShadowRoot = function (node) { return node === this.hostEl ? this.shadowRoot : node; };\n    ShadowDomRenderer.prototype.destroy = function () { this.sharedStylesHost.removeHost(this.shadowRoot); };\n    ShadowDomRenderer.prototype.appendChild = function (parent, newChild) {\n        return _super.prototype.appendChild.call(this, this.nodeOrShadowRoot(parent), newChild);\n    };\n    ShadowDomRenderer.prototype.insertBefore = function (parent, newChild, refChild) {\n        return _super.prototype.insertBefore.call(this, this.nodeOrShadowRoot(parent), newChild, refChild);\n    };\n    ShadowDomRenderer.prototype.removeChild = function (parent, oldChild) {\n        return _super.prototype.removeChild.call(this, this.nodeOrShadowRoot(parent), oldChild);\n    };\n    ShadowDomRenderer.prototype.parentNode = function (node) {\n        return this.nodeOrShadowRoot(_super.prototype.parentNode.call(this, this.nodeOrShadowRoot(node)));\n    };\n    return ShadowDomRenderer;\n}(DefaultDomRenderer2));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ɵ0 = function (v) {\n    return '__zone_symbol__' + v;\n};\n/**\n * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'\n * since Angular can do much more\n * efficient bookkeeping than Zone can, because we have additional information. This speeds up\n * addEventListener by 3x.\n */\nvar __symbol__ = (typeof Zone !== 'undefined') && Zone['__symbol__'] || ɵ0;\nvar ADD_EVENT_LISTENER = __symbol__('addEventListener');\nvar REMOVE_EVENT_LISTENER = __symbol__('removeEventListener');\nvar symbolNames = {};\nvar FALSE = 'FALSE';\nvar ANGULAR = 'ANGULAR';\nvar NATIVE_ADD_LISTENER = 'addEventListener';\nvar NATIVE_REMOVE_LISTENER = 'removeEventListener';\n// use the same symbol string which is used in zone.js\nvar stopSymbol = '__zone_symbol__propagationStopped';\nvar stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';\nvar blackListedEvents = (typeof Zone !== 'undefined') && Zone[__symbol__('BLACK_LISTED_EVENTS')];\nvar blackListedMap;\nif (blackListedEvents) {\n    blackListedMap = {};\n    blackListedEvents.forEach(function (eventName) { blackListedMap[eventName] = eventName; });\n}\nvar isBlackListedEvent = function (eventName) {\n    if (!blackListedMap) {\n        return false;\n    }\n    return blackListedMap.hasOwnProperty(eventName);\n};\n// a global listener to handle all dom event,\n// so we do not need to create a closure every time\nvar globalListener = function (event) {\n    var symbolName = symbolNames[event.type];\n    if (!symbolName) {\n        return;\n    }\n    var taskDatas = this[symbolName];\n    if (!taskDatas) {\n        return;\n    }\n    var args = [event];\n    if (taskDatas.length === 1) {\n        // if taskDatas only have one element, just invoke it\n        var taskData = taskDatas[0];\n        if (taskData.zone !== Zone.current) {\n            // only use Zone.run when Zone.current not equals to stored zone\n            return taskData.zone.run(taskData.handler, this, args);\n        }\n        else {\n            return taskData.handler.apply(this, args);\n        }\n    }\n    else {\n        // copy tasks as a snapshot to avoid event handlers remove\n        // itself or others\n        var copiedTasks = taskDatas.slice();\n        for (var i = 0; i < copiedTasks.length; i++) {\n            // if other listener call event.stopImmediatePropagation\n            // just break\n            if (event[stopSymbol] === true) {\n                break;\n            }\n            var taskData = copiedTasks[i];\n            if (taskData.zone !== Zone.current) {\n                // only use Zone.run when Zone.current not equals to stored zone\n                taskData.zone.run(taskData.handler, this, args);\n            }\n            else {\n                taskData.handler.apply(this, args);\n            }\n        }\n    }\n};\nvar DomEventsPlugin = /** @class */ (function (_super) {\n    __extends(DomEventsPlugin, _super);\n    function DomEventsPlugin(doc, ngZone, platformId) {\n        var _this = _super.call(this, doc) || this;\n        _this.ngZone = ngZone;\n        if (!platformId || !isPlatformServer(platformId)) {\n            _this.patchEvent();\n        }\n        return _this;\n    }\n    DomEventsPlugin.prototype.patchEvent = function () {\n        if (typeof Event === 'undefined' || !Event || !Event.prototype) {\n            return;\n        }\n        if (Event.prototype[stopMethodSymbol]) {\n            // already patched by zone.js\n            return;\n        }\n        var delegate = Event.prototype[stopMethodSymbol] =\n            Event.prototype.stopImmediatePropagation;\n        Event.prototype.stopImmediatePropagation = function () {\n            if (this) {\n                this[stopSymbol] = true;\n            }\n            // should call native delegate in case\n            // in some environment part of the application\n            // will not use the patched Event\n            delegate && delegate.apply(this, arguments);\n        };\n    };\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    DomEventsPlugin.prototype.supports = function (eventName) { return true; };\n    DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n        var _this = this;\n        var zoneJsLoaded = element[ADD_EVENT_LISTENER];\n        var callback = handler;\n        // if zonejs is loaded and current zone is not ngZone\n        // we keep Zone.current on target for later restoration.\n        if (zoneJsLoaded && (!NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {\n            var symbolName = symbolNames[eventName];\n            if (!symbolName) {\n                symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);\n            }\n            var taskDatas = element[symbolName];\n            var globalListenerRegistered = taskDatas && taskDatas.length > 0;\n            if (!taskDatas) {\n                taskDatas = element[symbolName] = [];\n            }\n            var zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;\n            if (taskDatas.length === 0) {\n                taskDatas.push({ zone: zone, handler: callback });\n            }\n            else {\n                var callbackRegistered = false;\n                for (var i = 0; i < taskDatas.length; i++) {\n                    if (taskDatas[i].handler === callback) {\n                        callbackRegistered = true;\n                        break;\n                    }\n                }\n                if (!callbackRegistered) {\n                    taskDatas.push({ zone: zone, handler: callback });\n                }\n            }\n            if (!globalListenerRegistered) {\n                element[ADD_EVENT_LISTENER](eventName, globalListener, false);\n            }\n        }\n        else {\n            element[NATIVE_ADD_LISTENER](eventName, callback, false);\n        }\n        return function () { return _this.removeEventListener(element, eventName, callback); };\n    };\n    DomEventsPlugin.prototype.removeEventListener = function (target, eventName, callback) {\n        var underlyingRemove = target[REMOVE_EVENT_LISTENER];\n        // zone.js not loaded, use native removeEventListener\n        if (!underlyingRemove) {\n            return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n        var symbolName = symbolNames[eventName];\n        var taskDatas = symbolName && target[symbolName];\n        if (!taskDatas) {\n            // addEventListener not using patched version\n            // just call native removeEventListener\n            return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n        // fix issue 20532, should be able to remove\n        // listener which was added inside of ngZone\n        var found = false;\n        for (var i = 0; i < taskDatas.length; i++) {\n            // remove listener from taskDatas if the callback equals\n            if (taskDatas[i].handler === callback) {\n                found = true;\n                taskDatas.splice(i, 1);\n                break;\n            }\n        }\n        if (found) {\n            if (taskDatas.length === 0) {\n                // all listeners are removed, we can remove the globalListener from target\n                underlyingRemove.apply(target, [eventName, globalListener, false]);\n            }\n        }\n        else {\n            // not found in taskDatas, the callback may be added inside of ngZone\n            // use native remove listener to remove the callback\n            target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n    };\n    DomEventsPlugin = __decorate([\n        __param(0, Inject(DOCUMENT$1)),\n        __param(2, Optional()), __param(2, Inject(PLATFORM_ID)),\n        __metadata(\"design:paramtypes\", [Object, NgZone, Object])\n    ], DomEventsPlugin);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(DomEventsPlugin, [{\n        type: Injectable\n    }], function () { return [{\n        type: Object,\n        decorators: [{\n                type: Inject,\n                args: [DOCUMENT$1]\n            }]\n    }, {\n        type: NgZone\n    }, {\n        type: Object,\n        decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PLATFORM_ID]\n            }]\n    }]; }, { patchEvent: [], supports: [], addEventListener: [], removeEventListener: [] });\nDomEventsPlugin.ngInjectableDef = ɵngcc0.defineInjectable({ token: DomEventsPlugin, factory: function DomEventsPlugin_Factory(t) { return new (t || DomEventsPlugin)(ɵngcc0.inject(DOCUMENT$1), ɵngcc0.inject(NgZone), ɵngcc0.inject(PLATFORM_ID, 8)); }, providedIn: null });\n    return DomEventsPlugin;\n}(EventManagerPlugin));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nvar EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n};\n/**\n * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @publicApi\n */\nvar HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nvar HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nvar HammerGestureConfig = /** @class */ (function () {\n    function HammerGestureConfig() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](http://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n        * Maps gesture event names to a set of configuration options\n        * that specify overrides to the default values for specific properties.\n        *\n        * The key is a supported event name to be configured,\n        * and the options object contains a set of properties, with override values\n        * to be applied to the named recognizer event.\n        * For example, to disable recognition of the rotate event, specify\n        *  `{\"rotate\": {\"enable\": false}}`.\n        *\n        * Properties that are not present take the HammerJS default values.\n        * For information about which properties are supported for which events,\n        * and their allowed and default values, see\n        * [HammerJS documentation](http://hammerjs.github.io/).\n        *\n        */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    HammerGestureConfig.prototype.buildHammer = function (element) {\n        var mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (var eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    };\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(HammerGestureConfig, [{\n        type: Injectable\n    }], function () { return []; }, { events: [], overrides: [], buildHammer: [] });\nHammerGestureConfig.ngInjectableDef = ɵngcc0.defineInjectable({ token: HammerGestureConfig, factory: function HammerGestureConfig_Factory(t) { return new (t || HammerGestureConfig)(); }, providedIn: null });\n    return HammerGestureConfig;\n}());\nvar HammerGesturesPlugin = /** @class */ (function (_super) {\n    __extends(HammerGesturesPlugin, _super);\n    function HammerGesturesPlugin(doc, _config, console, loader) {\n        var _this = _super.call(this, doc) || this;\n        _this._config = _config;\n        _this.console = console;\n        _this.loader = loader;\n        return _this;\n    }\n    HammerGesturesPlugin.prototype.supports = function (eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            this.console.warn(\"The \\\"\" + eventName + \"\\\" event cannot be bound because Hammer.JS is not \" +\n                \"loaded and no custom loader has been specified.\");\n            return false;\n        }\n        return true;\n    };\n    HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {\n        var _this = this;\n        var zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            var cancelRegistration_1 = false;\n            var deregister_1 = function () { cancelRegistration_1 = true; };\n            this.loader()\n                .then(function () {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    _this.console.warn(\"The custom HAMMER_LOADER completed, but Hammer.JS is not present.\");\n                    deregister_1 = function () { };\n                    return;\n                }\n                if (!cancelRegistration_1) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to removal.\n                    deregister_1 = _this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(function () {\n                _this.console.warn(\"The \\\"\" + eventName + \"\\\" event cannot be bound because the custom \" +\n                    \"Hammer.JS loader failed.\");\n                deregister_1 = function () { };\n            });\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return function () { deregister_1(); };\n        }\n        return zone.runOutsideAngular(function () {\n            // Creating the manager bind events, must be done outside of angular\n            var mc = _this._config.buildHammer(element);\n            var callback = function (eventObj) {\n                zone.runGuarded(function () { handler(eventObj); });\n            };\n            mc.on(eventName, callback);\n            return function () {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    };\n    HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) { return this._config.events.indexOf(eventName) > -1; };\n    HammerGesturesPlugin = __decorate([\n        __param(0, Inject(DOCUMENT$1)),\n        __param(1, Inject(HAMMER_GESTURE_CONFIG)),\n        __param(3, Optional()), __param(3, Inject(HAMMER_LOADER)),\n        __metadata(\"design:paramtypes\", [Object, HammerGestureConfig, ɵConsole, Object])\n    ], HammerGesturesPlugin);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n        type: Injectable\n    }], function () { return [{\n        type: Object,\n        decorators: [{\n                type: Inject,\n                args: [DOCUMENT$1]\n            }]\n    }, {\n        type: HammerGestureConfig,\n        decorators: [{\n                type: Inject,\n                args: [HAMMER_GESTURE_CONFIG]\n            }]\n    }, {\n        type: ɵConsole\n    }, {\n        type: Object,\n        decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [HAMMER_LOADER]\n            }]\n    }]; }, { supports: [], addEventListener: [], isCustomEvent: [] });\nHammerGesturesPlugin.ngInjectableDef = ɵngcc0.defineInjectable({ token: HammerGesturesPlugin, factory: function HammerGesturesPlugin_Factory(t) { return new (t || HammerGesturesPlugin)(ɵngcc0.inject(DOCUMENT$1), ɵngcc0.inject(HAMMER_GESTURE_CONFIG), ɵngcc0.inject(ɵConsole), ɵngcc0.inject(HAMMER_LOADER, 8)); }, providedIn: null });\n    return HammerGesturesPlugin;\n}(EventManagerPlugin));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nvar MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nvar ɵ0$1 = function (event) { return event.altKey; }, ɵ1$1 = function (event) { return event.ctrlKey; }, ɵ2$1 = function (event) { return event.metaKey; }, ɵ3 = function (event) { return event.shiftKey; };\n/**\n * Retrieves modifiers from key-event objects.\n */\nvar MODIFIER_KEY_GETTERS = {\n    'alt': ɵ0$1,\n    'control': ɵ1$1,\n    'meta': ɵ2$1,\n    'shift': ɵ3\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nvar KeyEventsPlugin = /** @class */ (function (_super) {\n    __extends(KeyEventsPlugin, _super);\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    function KeyEventsPlugin(doc) {\n        return _super.call(this, doc) || this;\n    }\n    KeyEventsPlugin_1 = KeyEventsPlugin;\n    /**\n      * Reports whether a named key event is supported.\n      * @param eventName The event name to query.\n      * @return True if the named key event is supported.\n     */\n    KeyEventsPlugin.prototype.supports = function (eventName) { return KeyEventsPlugin_1.parseEventName(eventName) != null; };\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n    */\n    KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n        var parsedEvent = KeyEventsPlugin_1.parseEventName(eventName);\n        var outsideHandler = KeyEventsPlugin_1.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(function () {\n            return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    };\n    KeyEventsPlugin.parseEventName = function (eventName) {\n        var parts = eventName.toLowerCase().split('.');\n        var domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        var key = KeyEventsPlugin_1._normalizeKey(parts.pop());\n        var fullKey = '';\n        MODIFIER_KEYS.forEach(function (modifierName) {\n            var index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        var result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    };\n    KeyEventsPlugin.getEventFullKey = function (event) {\n        var fullKey = '';\n        var key = getDOM().getEventKey(event);\n        key = key.toLowerCase();\n        if (key === ' ') {\n            key = 'space'; // for readability\n        }\n        else if (key === '.') {\n            key = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(function (modifierName) {\n            if (modifierName != key) {\n                var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    fullKey += modifierName + '.';\n                }\n            }\n        });\n        fullKey += key;\n        return fullKey;\n    };\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    KeyEventsPlugin.eventCallback = function (fullKey, handler, zone) {\n        return function (event /** TODO #9100 */) {\n            if (KeyEventsPlugin_1.getEventFullKey(event) === fullKey) {\n                zone.runGuarded(function () { return handler(event); });\n            }\n        };\n    };\n    /** @internal */\n    KeyEventsPlugin._normalizeKey = function (keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    };\n    var KeyEventsPlugin_1;\n    KeyEventsPlugin = KeyEventsPlugin_1 = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT$1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], KeyEventsPlugin);\n    return KeyEventsPlugin;\n}(EventManagerPlugin));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\nvar DomSanitizer = /** @class */ (function () {\n    function DomSanitizer() {\n    }\n    return DomSanitizer;\n}());\nvar DomSanitizerImpl = /** @class */ (function (_super) {\n    __extends(DomSanitizerImpl, _super);\n    function DomSanitizerImpl(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        return _this;\n    }\n    DomSanitizerImpl.prototype.sanitize = function (ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (value instanceof SafeHtmlImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'HTML');\n                return ɵ_sanitizeHtml(this._doc, String(value));\n            case SecurityContext.STYLE:\n                if (value instanceof SafeStyleImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'Style');\n                return ɵ_sanitizeStyle(value);\n            case SecurityContext.SCRIPT:\n                if (value instanceof SafeScriptImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'Script');\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n                    // Allow resource URLs in URL contexts, they are strictly more trusted.\n                    return value.changingThisBreaksApplicationSecurity;\n                }\n                this.checkNotSafeValue(value, 'URL');\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (value instanceof SafeResourceUrlImpl) {\n                    return value.changingThisBreaksApplicationSecurity;\n                }\n                this.checkNotSafeValue(value, 'ResourceURL');\n                throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n            default:\n                throw new Error(\"Unexpected SecurityContext \" + ctx + \" (see http://g.co/ng/security#xss)\");\n        }\n    };\n    DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {\n        if (value instanceof SafeValueImpl) {\n            throw new Error(\"Required a safe \" + expectedType + \", got a \" + value.getTypeName() + \" \" +\n                \"(see http://g.co/ng/security#xss)\");\n        }\n    };\n    DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) { return new SafeHtmlImpl(value); };\n    DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) { return new SafeStyleImpl(value); };\n    DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) { return new SafeScriptImpl(value); };\n    DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) { return new SafeUrlImpl(value); };\n    DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {\n        return new SafeResourceUrlImpl(value);\n    };\n    DomSanitizerImpl = __decorate([\n        __param(0, Inject(DOCUMENT$1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], DomSanitizerImpl);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(DomSanitizerImpl, [{\n        type: Injectable\n    }], function () { return [{\n        type: Object,\n        decorators: [{\n                type: Inject,\n                args: [DOCUMENT$1]\n            }]\n    }]; }, { sanitize: [], checkNotSafeValue: [], bypassSecurityTrustHtml: [], bypassSecurityTrustStyle: [], bypassSecurityTrustScript: [], bypassSecurityTrustUrl: [], bypassSecurityTrustResourceUrl: [] });\nDomSanitizerImpl.ngInjectableDef = ɵngcc0.defineInjectable({ token: DomSanitizerImpl, factory: function DomSanitizerImpl_Factory(t) { return new (t || DomSanitizerImpl)(ɵngcc0.inject(DOCUMENT$1)); }, providedIn: null });\n    return DomSanitizerImpl;\n}(DomSanitizer));\nvar SafeValueImpl = /** @class */ (function () {\n    function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n        this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        // empty\n    }\n    SafeValueImpl.prototype.toString = function () {\n        return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n            \" (see http://g.co/ng/security#xss)\";\n    };\n    return SafeValueImpl;\n}());\nvar SafeHtmlImpl = /** @class */ (function (_super) {\n    __extends(SafeHtmlImpl, _super);\n    function SafeHtmlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeHtmlImpl.prototype.getTypeName = function () { return 'HTML'; };\n    return SafeHtmlImpl;\n}(SafeValueImpl));\nvar SafeStyleImpl = /** @class */ (function (_super) {\n    __extends(SafeStyleImpl, _super);\n    function SafeStyleImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeStyleImpl.prototype.getTypeName = function () { return 'Style'; };\n    return SafeStyleImpl;\n}(SafeValueImpl));\nvar SafeScriptImpl = /** @class */ (function (_super) {\n    __extends(SafeScriptImpl, _super);\n    function SafeScriptImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeScriptImpl.prototype.getTypeName = function () { return 'Script'; };\n    return SafeScriptImpl;\n}(SafeValueImpl));\nvar SafeUrlImpl = /** @class */ (function (_super) {\n    __extends(SafeUrlImpl, _super);\n    function SafeUrlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeUrlImpl.prototype.getTypeName = function () { return 'URL'; };\n    return SafeUrlImpl;\n}(SafeValueImpl));\nvar SafeResourceUrlImpl = /** @class */ (function (_super) {\n    __extends(SafeResourceUrlImpl, _super);\n    function SafeResourceUrlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeResourceUrlImpl.prototype.getTypeName = function () { return 'ResourceURL'; };\n    return SafeResourceUrlImpl;\n}(SafeValueImpl));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: PlatformLocation, useClass: BrowserPlatformLocation, deps: [DOCUMENT$1] },\n    { provide: DOCUMENT$1, useFactory: _document, deps: [] },\n];\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * @publicApi\n */\nvar BROWSER_SANITIZATION_PROVIDERS = [\n    { provide: Sanitizer, useExisting: DomSanitizer },\n    { provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT$1] },\n];\n/**\n * @publicApi\n */\nvar platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    return document;\n}\nvar BROWSER_MODULE_PROVIDERS = [\n    BROWSER_SANITIZATION_PROVIDERS,\n    { provide: ɵAPP_ROOT, useValue: true },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT$1, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT$1] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT$1, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n    },\n    { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n    {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT$1] },\n    { provide: Testability, useClass: Testability, deps: [NgZone] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    ELEMENT_PROBE_PROVIDERS,\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by defaults in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nvar BrowserModule = /** @class */ (function () {\n    function BrowserModule(parentModule) {\n        if (parentModule) {\n            throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n        }\n    }\n    BrowserModule_1 = BrowserModule;\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    BrowserModule.withServerTransition = function (params) {\n        return {\n            ngModule: BrowserModule_1,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    };\n    var BrowserModule_1;\n    BrowserModule = BrowserModule_1 = __decorate([\n        NgModule({ providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule] }),\n        __param(0, Optional()), __param(0, SkipSelf()), __param(0, Inject(BrowserModule_1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], BrowserModule);\n    return BrowserModule;\n}());\n\n/**\n * Factory to create Meta service.\n */\nfunction createMeta() {\n    return new Meta(inject(DOCUMENT$1));\n}\n/**\n * A service that can be used to get and add meta tags.\n *\n * @publicApi\n */\nvar Meta = /** @class */ (function () {\n    function Meta(_doc) {\n        this._doc = _doc;\n        this._dom = getDOM();\n    }\n    Meta.prototype.addTag = function (tag, forceCreation) {\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    };\n    Meta.prototype.addTags = function (tags, forceCreation) {\n        var _this = this;\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!tags)\n            return [];\n        return tags.reduce(function (result, tag) {\n            if (tag) {\n                result.push(_this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    };\n    Meta.prototype.getTag = function (attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._dom.querySelector(this._doc, \"meta[\" + attrSelector + \"]\") || null;\n    };\n    Meta.prototype.getTags = function (attrSelector) {\n        if (!attrSelector)\n            return [];\n        var list /*NodeList*/ = this._dom.querySelectorAll(this._doc, \"meta[\" + attrSelector + \"]\");\n        return list ? [].slice.call(list) : [];\n    };\n    Meta.prototype.updateTag = function (tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        var meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    };\n    Meta.prototype.removeTag = function (attrSelector) { this.removeTagElement(this.getTag(attrSelector)); };\n    Meta.prototype.removeTagElement = function (meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    };\n    Meta.prototype._getOrCreateElement = function (meta, forceCreation) {\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!forceCreation) {\n            var selector = this._parseSelector(meta);\n            var elem = this.getTag(selector);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            if (elem && this._containsAttributes(meta, elem))\n                return elem;\n        }\n        var element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        var head = this._dom.getElementsByTagName(this._doc, 'head')[0];\n        this._dom.appendChild(head, element);\n        return element;\n    };\n    Meta.prototype._setMetaElementAttributes = function (tag, el) {\n        var _this = this;\n        Object.keys(tag).forEach(function (prop) { return _this._dom.setAttribute(el, prop, tag[prop]); });\n        return el;\n    };\n    Meta.prototype._parseSelector = function (tag) {\n        var attr = tag.name ? 'name' : 'property';\n        return attr + \"=\\\"\" + tag[attr] + \"\\\"\";\n    };\n    Meta.prototype._containsAttributes = function (tag, elem) {\n        var _this = this;\n        return Object.keys(tag).every(function (key) { return _this._dom.getAttribute(elem, key) === tag[key]; });\n    };\n    Meta.ngInjectableDef = defineInjectable({ factory: createMeta, token: Meta, providedIn: \"root\" });\n    Meta = __decorate([\n        __param(0, Inject(DOCUMENT$1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], Meta);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(Meta, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n    }], function () { return [{\n        type: Object,\n        decorators: [{\n                type: Inject,\n                args: [DOCUMENT$1]\n            }]\n    }]; }, { _doc: [], _dom: [], addTag: [], addTags: [], getTag: [], getTags: [], updateTag: [], removeTag: [], removeTagElement: [], _getOrCreateElement: [], _setMetaElementAttributes: [], _parseSelector: [], _containsAttributes: [] });\nMeta.ngInjectableDef = ɵngcc0.defineInjectable({ token: Meta, factory: function Meta_Factory(t) { var r = null; if (t) {\n        r = new t(ɵngcc0.inject(DOCUMENT$1));\n    }\n    else {\n        r = createMeta();\n    } return r; }, providedIn: 'root' });\n    return Meta;\n}());\n\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(inject(DOCUMENT$1));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nvar Title = /** @class */ (function () {\n    function Title(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    Title.prototype.getTitle = function () { return getDOM().getTitle(this._doc); };\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    Title.prototype.setTitle = function (newTitle) { getDOM().setTitle(this._doc, newTitle); };\n    Title.ngInjectableDef = defineInjectable({ factory: createTitle, token: Title, providedIn: \"root\" });\n    Title = __decorate([\n        __param(0, Inject(DOCUMENT$1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], Title);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(Title, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n    }], function () { return [{\n        type: Object,\n        decorators: [{\n                type: Inject,\n                args: [DOCUMENT$1]\n            }]\n    }]; }, { _doc: [], getTitle: [], setTitle: [] });\nTitle.ngInjectableDef = ɵngcc0.defineInjectable({ token: Title, factory: function Title_Factory(t) { var r = null; if (t) {\n        r = new t(ɵngcc0.inject(DOCUMENT$1));\n    }\n    else {\n        r = createTitle();\n    } return r; }, providedIn: 'root' });\n    return Title;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectionPerfRecord = /** @class */ (function () {\n    function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n    return ChangeDetectionPerfRecord;\n}());\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nvar AngularProfiler = /** @class */ (function () {\n    function AngularProfiler(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    AngularProfiler.prototype.timeChangeDetection = function (config) {\n        var record = config && config['record'];\n        var profileName = 'Change Detection';\n        // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n        var isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        var start = getDOM().performanceNow();\n        var numTicks = 0;\n        while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        var end = getDOM().performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        var msPerTick = (end - start) / numTicks;\n        win.console.log(\"ran \" + numTicks + \" change detection cycles\");\n        win.console.log(msPerTick.toFixed(2) + \" ms per check\");\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    };\n    return AngularProfiler;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    var escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, function (s) { return escapedText[s]; });\n}\nfunction unescapeHtml(text) {\n    var unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, function (s) { return unescapedText[s]; });\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialzied in a\n * non-lossy manner.\n *\n * @publicApi\n */\nvar TransferState = /** @class */ (function () {\n    function TransferState() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    TransferState_1 = TransferState;\n    /** @internal */\n    TransferState.init = function (initState) {\n        var transferState = new TransferState_1();\n        transferState.store = initState;\n        return transferState;\n    };\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    TransferState.prototype.get = function (key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    };\n    /**\n     * Set the value corresponding to a key.\n     */\n    TransferState.prototype.set = function (key, value) { this.store[key] = value; };\n    /**\n     * Remove a key from the store.\n     */\n    TransferState.prototype.remove = function (key) { delete this.store[key]; };\n    /**\n     * Test whether a key exists in the store.\n     */\n    TransferState.prototype.hasKey = function (key) { return this.store.hasOwnProperty(key); };\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    TransferState.prototype.onSerialize = function (key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    };\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    TransferState.prototype.toJson = function () {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (var key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    };\n    var TransferState_1;\n    TransferState = TransferState_1 = __decorate([\n        Injectable()\n    ], TransferState);\n    return TransferState;\n}());\nfunction initTransferState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    var script = doc.getElementById(appId + '-state');\n    var initialState = {};\n    if (script && script.textContent) {\n        try {\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\nvar BrowserTransferStateModule = /** @class */ (function () {\n    function BrowserTransferStateModule() {\n    }\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n        type: NgModule,\n        args: [{\n                providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT$1, APP_ID] }]\n            }]\n    }], function () { return []; }, null);\nBrowserTransferStateModule.ngModuleDef = ɵngcc0.ɵdefineNgModule({ type: BrowserTransferStateModule, bootstrap: [], declarations: [], imports: [], exports: [] });\nBrowserTransferStateModule.ngInjectorDef = ɵngcc0.defineInjector({ factory: function BrowserTransferStateModule_Factory(t) { return new (t || BrowserTransferStateModule)(); }, providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT$1, APP_ID] }], imports: [] });\n    return BrowserTransferStateModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nvar By = /** @class */ (function () {\n    function By() {\n    }\n    /**\n     * Match all elements.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    By.all = function () { return function (debugElement) { return true; }; };\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    By.css = function (selector) {\n        return function (debugElement) {\n            return debugElement.nativeElement != null ?\n                getDOM().elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    };\n    /**\n     * Match elements that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    By.directive = function (type) {\n        return function (debugElement) { return debugElement.providerTokens.indexOf(type) !== -1; };\n    };\n    return By;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar VERSION = new Version('7.2.0');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, _document as ɵangular_packages_platform_browser_platform_browser_b, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_k, createMeta as ɵangular_packages_platform_browser_platform_browser_d, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_h, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, _createNgProbe as ɵangular_packages_platform_browser_platform_browser_j, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, BrowserModule, platformBrowser, Meta, Title, disableDebugTools, enableDebugTools, BrowserTransferStateModule, TransferState, makeStateKey, By, DOCUMENT$1 as DOCUMENT, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, DomSanitizer, VERSION, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, initDomAdapter as ɵinitDomAdapter, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserPlatformLocation as ɵBrowserPlatformLocation, TRANSITION_ID as ɵTRANSITION_ID, BrowserGetTestability as ɵBrowserGetTestability, escapeHtml as ɵescapeHtml, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, DomAdapter as ɵDomAdapter, getDOM as ɵgetDOM, setRootDomAdapter as ɵsetRootDomAdapter, DomRendererFactory2 as ɵDomRendererFactory2, NAMESPACE_URIS as ɵNAMESPACE_URIS, flattenStyles as ɵflattenStyles, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute, DomEventsPlugin as ɵDomEventsPlugin, HammerGesturesPlugin as ɵHammerGesturesPlugin, KeyEventsPlugin as ɵKeyEventsPlugin, DomSharedStylesHost as ɵDomSharedStylesHost, SharedStylesHost as ɵSharedStylesHost, DomSanitizerImpl as ɵDomSanitizerImpl };\n\n//# sourceMappingURL=/ivy-bundle-size/node_modules/@angular/platform-browser/fesm5/platform-browser.js.map","import * as ɵngcc0 from '@angular/core';\n/**\n * @license Angular v7.2.0\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { Identifiers, getUrlScheme, syntaxError, StaticSymbolCache, JitCompiler, ProviderMeta, I18NHtmlParser, ViewCompiler, CompileMetadataResolver, UrlResolver, TemplateParser, NgModuleCompiler, JitSummaryResolver, SummaryResolver, StyleCompiler, PipeResolver, ElementSchemaRegistry, DomElementSchemaRegistry, ResourceLoader, NgModuleResolver, HtmlParser, CompileReflector, CompilerConfig, DirectiveNormalizer, DirectiveResolver, Lexer, Parser } from '@angular/compiler';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, ChangeDetectionStrategy, ChangeDetectorRef, ComponentFactory, ComponentFactoryResolver, ComponentRef, ElementRef, Injector, LOCALE_ID, NgModuleFactory, NgModuleRef, QueryList, Renderer, Renderer2, SecurityContext, TRANSLATIONS_FORMAT, TemplateRef, ViewContainerRef, ViewEncapsulation, ɵCodegenComponentFactoryResolver, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵReflectionCapabilities, ɵand, ɵccf, ɵcmf, ɵcrt, ɵdid, ɵeld, ɵinlineInterpolate, ɵinterpolate, ɵmod, ɵmpd, ɵncd, ɵnov, ɵpad, ɵpid, ɵpod, ɵppd, ɵprd, ɵqud, ɵregisterModuleFactory, ɵstringify, ɵted, ɵunv, ɵvid, Compiler, Inject, InjectionToken, Optional, PACKAGE_ROOT_URL, TRANSLATIONS, isDevMode, ɵConsole, MissingTranslationStrategy, COMPILER_OPTIONS, CompilerFactory, createPlatformFactory, platformCore, Injectable, PLATFORM_ID, ɵglobal, Version } from '@angular/core';\nimport { __extends, __spread, __decorate } from 'tslib';\nimport { ɵPLATFORM_BROWSER_ID } from '@angular/common';\nimport { ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MODULE_SUFFIX = '';\nvar builtinExternalReferences = createBuiltinExternalReferencesMap();\nvar JitReflector = /** @class */ (function () {\n    function JitReflector() {\n        this.reflectionCapabilities = new ɵReflectionCapabilities();\n    }\n    JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) {\n        var moduleId = cmpMetadata.moduleId;\n        if (typeof moduleId === 'string') {\n            var scheme = getUrlScheme(moduleId);\n            return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n        }\n        else if (moduleId !== null && moduleId !== void 0) {\n            throw syntaxError(\"moduleId should be a string in \\\"\" + ɵstringify(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\" +\n                \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n        }\n        return \"./\" + ɵstringify(type);\n    };\n    JitReflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    JitReflector.prototype.tryAnnotations = function (typeOrFunc) { return this.annotations(typeOrFunc); };\n    JitReflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    JitReflector.prototype.shallowAnnotations = function (typeOrFunc) {\n        throw new Error('Not supported in JIT mode');\n    };\n    JitReflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    JitReflector.prototype.guards = function (type) { return this.reflectionCapabilities.guards(type); };\n    JitReflector.prototype.resolveExternalReference = function (ref) {\n        return builtinExternalReferences.get(ref) || ref.runtime;\n    };\n    return JitReflector;\n}());\nfunction createBuiltinExternalReferencesMap() {\n    var map = new Map();\n    map.set(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS, ANALYZE_FOR_ENTRY_COMPONENTS);\n    map.set(Identifiers.ElementRef, ElementRef);\n    map.set(Identifiers.NgModuleRef, NgModuleRef);\n    map.set(Identifiers.ViewContainerRef, ViewContainerRef);\n    map.set(Identifiers.ChangeDetectorRef, ChangeDetectorRef);\n    map.set(Identifiers.Renderer2, Renderer2);\n    map.set(Identifiers.QueryList, QueryList);\n    map.set(Identifiers.TemplateRef, TemplateRef);\n    map.set(Identifiers.CodegenComponentFactoryResolver, ɵCodegenComponentFactoryResolver);\n    map.set(Identifiers.ComponentFactoryResolver, ComponentFactoryResolver);\n    map.set(Identifiers.ComponentFactory, ComponentFactory);\n    map.set(Identifiers.ComponentRef, ComponentRef);\n    map.set(Identifiers.NgModuleFactory, NgModuleFactory);\n    map.set(Identifiers.createModuleFactory, ɵcmf);\n    map.set(Identifiers.moduleDef, ɵmod);\n    map.set(Identifiers.moduleProviderDef, ɵmpd);\n    map.set(Identifiers.RegisterModuleFactoryFn, ɵregisterModuleFactory);\n    map.set(Identifiers.Injector, Injector);\n    map.set(Identifiers.ViewEncapsulation, ViewEncapsulation);\n    map.set(Identifiers.ChangeDetectionStrategy, ChangeDetectionStrategy);\n    map.set(Identifiers.SecurityContext, SecurityContext);\n    map.set(Identifiers.LOCALE_ID, LOCALE_ID);\n    map.set(Identifiers.TRANSLATIONS_FORMAT, TRANSLATIONS_FORMAT);\n    map.set(Identifiers.inlineInterpolate, ɵinlineInterpolate);\n    map.set(Identifiers.interpolate, ɵinterpolate);\n    map.set(Identifiers.EMPTY_ARRAY, ɵEMPTY_ARRAY);\n    map.set(Identifiers.EMPTY_MAP, ɵEMPTY_MAP);\n    map.set(Identifiers.Renderer, Renderer);\n    map.set(Identifiers.viewDef, ɵvid);\n    map.set(Identifiers.elementDef, ɵeld);\n    map.set(Identifiers.anchorDef, ɵand);\n    map.set(Identifiers.textDef, ɵted);\n    map.set(Identifiers.directiveDef, ɵdid);\n    map.set(Identifiers.providerDef, ɵprd);\n    map.set(Identifiers.queryDef, ɵqud);\n    map.set(Identifiers.pureArrayDef, ɵpad);\n    map.set(Identifiers.pureObjectDef, ɵpod);\n    map.set(Identifiers.purePipeDef, ɵppd);\n    map.set(Identifiers.pipeDef, ɵpid);\n    map.set(Identifiers.nodeValue, ɵnov);\n    map.set(Identifiers.ngContentDef, ɵncd);\n    map.set(Identifiers.unwrapValue, ɵunv);\n    map.set(Identifiers.createRendererType2, ɵcrt);\n    map.set(Identifiers.createComponentFactory, ɵccf);\n    return map;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: PACKAGE_ROOT_URL,\n    useValue: '/'\n};\nvar _NO_RESOURCE_LOADER = {\n    get: function (url) {\n        throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n    }\n};\nvar baseHtmlParser = new InjectionToken('HtmlParser');\nvar CompilerImpl = /** @class */ (function () {\n    function CompilerImpl(injector, _metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, compilerConfig, console) {\n        this._metadataResolver = _metadataResolver;\n        this._delegate = new JitCompiler(_metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, compilerConfig, console, this.getExtraNgModuleProviders.bind(this));\n        this.injector = injector;\n    }\n    CompilerImpl.prototype.getExtraNgModuleProviders = function () {\n        return [this._metadataResolver.getProviderMetadata(new ProviderMeta(Compiler, { useValue: this }))];\n    };\n    CompilerImpl.prototype.compileModuleSync = function (moduleType) {\n        return this._delegate.compileModuleSync(moduleType);\n    };\n    CompilerImpl.prototype.compileModuleAsync = function (moduleType) {\n        return this._delegate.compileModuleAsync(moduleType);\n    };\n    CompilerImpl.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        var result = this._delegate.compileModuleAndAllComponentsSync(moduleType);\n        return {\n            ngModuleFactory: result.ngModuleFactory,\n            componentFactories: result.componentFactories,\n        };\n    };\n    CompilerImpl.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsAsync(moduleType)\n            .then(function (result) { return ({\n            ngModuleFactory: result.ngModuleFactory,\n            componentFactories: result.componentFactories,\n        }); });\n    };\n    CompilerImpl.prototype.loadAotSummaries = function (summaries) { this._delegate.loadAotSummaries(summaries); };\n    CompilerImpl.prototype.hasAotSummary = function (ref) { return this._delegate.hasAotSummary(ref); };\n    CompilerImpl.prototype.getComponentFactory = function (component) {\n        return this._delegate.getComponentFactory(component);\n    };\n    CompilerImpl.prototype.clearCache = function () { this._delegate.clearCache(); };\n    CompilerImpl.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n    CompilerImpl.prototype.getModuleId = function (moduleType) {\n        var meta = this._metadataResolver.getNgModuleMetadata(moduleType);\n        return meta && meta.id || undefined;\n    };\n    return CompilerImpl;\n}());\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nvar COMPILER_PROVIDERS = [\n    { provide: CompileReflector, useValue: new JitReflector() },\n    { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n    { provide: JitSummaryResolver, deps: [] },\n    { provide: SummaryResolver, useExisting: JitSummaryResolver },\n    { provide: ɵConsole, deps: [] },\n    { provide: Lexer, deps: [] },\n    { provide: Parser, deps: [Lexer] },\n    {\n        provide: baseHtmlParser,\n        useClass: HtmlParser,\n        deps: [],\n    },\n    {\n        provide: I18NHtmlParser,\n        useFactory: function (parser, translations, format, config, console) {\n            translations = translations || '';\n            var missingTranslation = translations ? config.missingTranslation : MissingTranslationStrategy.Ignore;\n            return new I18NHtmlParser(parser, translations, format, missingTranslation, console);\n        },\n        deps: [\n            baseHtmlParser,\n            [new Optional(), new Inject(TRANSLATIONS)],\n            [new Optional(), new Inject(TRANSLATIONS_FORMAT)],\n            [CompilerConfig],\n            [ɵConsole],\n        ]\n    },\n    {\n        provide: HtmlParser,\n        useExisting: I18NHtmlParser,\n    },\n    {\n        provide: TemplateParser, deps: [CompilerConfig, CompileReflector,\n            Parser, ElementSchemaRegistry,\n            I18NHtmlParser, ɵConsole]\n    },\n    { provide: DirectiveNormalizer, deps: [ResourceLoader, UrlResolver, HtmlParser, CompilerConfig] },\n    { provide: CompileMetadataResolver, deps: [CompilerConfig, HtmlParser, NgModuleResolver,\n            DirectiveResolver, PipeResolver,\n            SummaryResolver,\n            ElementSchemaRegistry,\n            DirectiveNormalizer, ɵConsole,\n            [Optional, StaticSymbolCache],\n            CompileReflector,\n            [Optional, ERROR_COLLECTOR_TOKEN]] },\n    DEFAULT_PACKAGE_URL_PROVIDER,\n    { provide: StyleCompiler, deps: [UrlResolver] },\n    { provide: ViewCompiler, deps: [CompileReflector] },\n    { provide: NgModuleCompiler, deps: [CompileReflector] },\n    { provide: CompilerConfig, useValue: new CompilerConfig() },\n    { provide: Compiler, useClass: CompilerImpl, deps: [Injector, CompileMetadataResolver,\n            TemplateParser, StyleCompiler,\n            ViewCompiler, NgModuleCompiler,\n            SummaryResolver, CompileReflector, CompilerConfig,\n            ɵConsole] },\n    { provide: DomElementSchemaRegistry, deps: [] },\n    { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n    { provide: UrlResolver, deps: [PACKAGE_ROOT_URL] },\n    { provide: DirectiveResolver, deps: [CompileReflector] },\n    { provide: PipeResolver, deps: [CompileReflector] },\n    { provide: NgModuleResolver, deps: [CompileReflector] },\n];\n/**\n * @publicApi\n */\nvar JitCompilerFactory = /** @class */ (function () {\n    /* @internal */\n    function JitCompilerFactory(defaultOptions) {\n        var compilerOptions = {\n            useJit: true,\n            defaultEncapsulation: ViewEncapsulation.Emulated,\n            missingTranslation: MissingTranslationStrategy.Warning,\n        };\n        this._defaultOptions = __spread([compilerOptions], defaultOptions);\n    }\n    JitCompilerFactory.prototype.createCompiler = function (options) {\n        if (options === void 0) { options = []; }\n        var opts = _mergeOptions(this._defaultOptions.concat(options));\n        var injector = Injector.create([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: function () {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        jitDevMode: isDevMode(),\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        preserveWhitespaces: opts.preserveWhitespaces,\n                    });\n                },\n                deps: []\n            },\n            opts.providers\n        ]);\n        return injector.get(Compiler);\n    };\n    return JitCompilerFactory;\n}());\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n        defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n        providers: _mergeArrays(optionsArr.map(function (options) { return options.providers; })),\n        missingTranslation: _lastDefined(optionsArr.map(function (options) { return options.missingTranslation; })),\n        preserveWhitespaces: _lastDefined(optionsArr.map(function (options) { return options.preserveWhitespaces; })),\n    };\n}\nfunction _lastDefined(args) {\n    for (var i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\nfunction _mergeArrays(parts) {\n    var result = [];\n    parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A platform that included corePlatform and the compiler.\n *\n * @publicApi\n */\nvar platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [\n    { provide: COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: CompilerFactory, useClass: JitCompilerFactory, deps: [COMPILER_OPTIONS] },\n]);\n\nvar ResourceLoaderImpl = /** @class */ (function (_super) {\n    __extends(ResourceLoaderImpl, _super);\n    function ResourceLoaderImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ResourceLoaderImpl.prototype.get = function (url) {\n        var resolve;\n        var reject;\n        var promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'text';\n        xhr.onload = function () {\n            // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n            // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n            // by IE10)\n            var response = xhr.response || xhr.responseText;\n            // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n            var status = xhr.status === 1223 ? 204 : xhr.status;\n            // fix status code when it is 0 (0 status is undocumented).\n            // Occurs when accessing file resources or on Android 4.1 stock browser\n            // while retrieving files from application cache.\n            if (status === 0) {\n                status = response ? 200 : 0;\n            }\n            if (200 <= status && status <= 300) {\n                resolve(response);\n            }\n            else {\n                reject(\"Failed to load \" + url);\n            }\n        };\n        xhr.onerror = function () { reject(\"Failed to load \" + url); };\n        xhr.send();\n        return promise;\n    };\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(ResourceLoaderImpl, [{\n        type: Injectable\n    }], function () { return []; }, { get: [] });\nResourceLoaderImpl.ngInjectableDef = ɵngcc0.defineInjectable({ token: ResourceLoaderImpl, factory: function ResourceLoaderImpl_Factory(t) { return new (t || ResourceLoaderImpl)(); }, providedIn: null });\n    return ResourceLoaderImpl;\n}(ResourceLoader));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [\n    ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS,\n    {\n        provide: COMPILER_OPTIONS,\n        useValue: { providers: [{ provide: ResourceLoader, useClass: ResourceLoaderImpl, deps: [] }] },\n        multi: true\n    },\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n *\n * @publicApi\n */\nvar CachedResourceLoader = /** @class */ (function (_super) {\n    __extends(CachedResourceLoader, _super);\n    function CachedResourceLoader() {\n        var _this = _super.call(this) || this;\n        _this._cache = ɵglobal.$templateCache;\n        if (_this._cache == null) {\n            throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n        }\n        return _this;\n    }\n    CachedResourceLoader.prototype.get = function (url) {\n        if (this._cache.hasOwnProperty(url)) {\n            return Promise.resolve(this._cache[url]);\n        }\n        else {\n            return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n        }\n    };\n    return CachedResourceLoader;\n}(ResourceLoader));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar VERSION = new Version('7.2.0');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar RESOURCE_CACHE_PROVIDER = [{ provide: ResourceLoader, useClass: CachedResourceLoader, deps: [] }];\n/**\n * @publicApi\n */\nvar platformBrowserDynamic = createPlatformFactory(platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CachedResourceLoader as ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a, RESOURCE_CACHE_PROVIDER, platformBrowserDynamic, VERSION, JitCompilerFactory, CompilerImpl as ɵCompilerImpl, platformCoreDynamic as ɵplatformCoreDynamic, INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS, ResourceLoaderImpl as ɵResourceLoaderImpl };\n\n//# sourceMappingURL=/ivy-bundle-size/node_modules/@angular/platform-browser-dynamic/fesm5/platform-browser-dynamic.js.map","import { Component, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@Component({ selector: 'hello-world', template: 'Hello World!' })\nexport class AppComponent { }\n\n@NgModule({ declarations: [AppComponent], imports: [BrowserModule], bootstrap: [AppComponent] })\nexport class AppModule { }\n","import { Component, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport * as i0 from \"@angular/core\";\nvar AppComponent = /** @class */ (function () {\n    function AppComponent() {\n    }\n    AppComponent.ngComponentDef = i0.ɵdefineComponent({ type: AppComponent, selectors: [[\"hello-world\"]], factory: function AppComponent_Factory(t) { return new (t || AppComponent)(); }, consts: 1, vars: 0, template: function AppComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵtext(0, \"Hello World!\");\n        } }, encapsulation: 2 });\n    return AppComponent;\n}());\nexport { AppComponent };\n/*@__PURE__*/ i0.ɵsetClassMetadata(AppComponent, [{\n        type: Component,\n        args: [{ selector: 'hello-world', template: 'Hello World!' }]\n    }], null, null);\nvar AppModule = /** @class */ (function () {\n    function AppModule() {\n    }\n    AppModule.ngModuleDef = i0.ɵdefineNgModule({ type: AppModule, bootstrap: [AppComponent], declarations: [AppComponent], imports: [BrowserModule], exports: [] });\n    AppModule.ngInjectorDef = i0.defineInjector({ factory: function AppModule_Factory(t) { return new (t || AppModule)(); }, providers: [], imports: [[BrowserModule]] });\n    return AppModule;\n}());\nexport { AppModule };\n/*@__PURE__*/ i0.ɵsetClassMetadata(AppModule, [{\n        type: NgModule,\n        args: [{ declarations: [AppComponent], imports: [BrowserModule], bootstrap: [AppComponent] }]\n    }], null, null);\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app.module';\n\nenableProdMode();\n\nplatformBrowserDynamic().bootstrapModule(AppModule).catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";"],"sourceRoot":""}