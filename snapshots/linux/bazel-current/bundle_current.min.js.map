{"version":3,"sources":["../../../../../../../../../external/npm/node_modules/tslib/tslib.es6.js","../../../../../../../external/angular/packages/core/src/util/property.ts","../../../../../../../external/angular/packages/core/src/render3/fields.ts","../../../../../../../external/angular/packages/core/src/di/defs.ts","../../../../../../../external/angular/packages/core/src/di/injection_token.ts","../../../../../../../external/angular/packages/core/src/util/decorators.ts","../../../../../../../external/angular/packages/core/src/metadata/di.ts","../../../../../../../external/angular/packages/core/src/util.ts","../../../../../../../external/angular/packages/core/src/di/forward_ref.ts","../../../../../../../external/angular/packages/core/src/metadata/view.ts","../../../../../../../external/angular/packages/core/src/di/injector_compatibility.ts","../../../../../../../external/angular/packages/core/src/di/metadata.ts","../../../../../../../external/angular/packages/core/src/util/ng_reflect.ts","../../../../../../../external/angular/packages/core/src/change_detection/change_detection_util.ts","../../../../../../../external/angular/packages/core/src/util/noop.ts","../../../../../../../external/angular/packages/core/src/di/injector.ts","../../../../../../../external/angular/packages/core/src/di/scope.ts","../../../../../../../external/angular/packages/core/src/linker/component_factory.ts","../../../../../../../external/angular/packages/core/src/linker/component_factory_resolver.ts","../../../../../../../external/angular/packages/core/src/linker/ng_module_factory.ts","../../../../../../../external/angular/packages/core/src/linker/element_ref.ts","../../../../../../../external/angular/packages/core/src/render/api.ts","../../../../../../../external/angular/packages/core/src/sanitization/security.ts","../../../../../../../external/angular/packages/core/src/version.ts","../../../../../../../external/angular/packages/core/src/is_dev_mode.ts","../../../../../../../external/angular/packages/core/src/sanitization/inert_body.ts","../../../../../../../external/angular/packages/core/src/sanitization/url_sanitizer.ts","../../../../../../../external/angular/packages/core/src/sanitization/html_sanitizer.ts","../../../../../external/rxjs/internal/util/isFunction.ts","../../../../../external/rxjs/internal/config.ts","../../../../../external/rxjs/internal/util/hostReportError.ts","../../../../../external/rxjs/internal/Observer.ts","../../../../../external/rxjs/internal/util/isArray.ts","../../../../../external/rxjs/internal/util/isObject.ts","../../../../../external/rxjs/internal/util/errorObject.ts","../../../../../external/rxjs/internal/util/tryCatch.ts","../../../../../external/rxjs/internal/util/UnsubscriptionError.ts","../../../../../external/rxjs/internal/Subscription.ts","../../../../../external/rxjs/internal/symbol/rxSubscriber.ts","../../../../../external/rxjs/internal/Subscriber.ts","../../../../../external/rxjs/internal/symbol/observable.ts","../../../../../external/rxjs/internal/util/noop.ts","../../../../../external/rxjs/internal/Observable.ts","../../../../../external/rxjs/internal/util/toSubscriber.ts","../../../../../external/rxjs/internal/util/canReportError.ts","../../../../../external/rxjs/internal/util/pipe.ts","../../../../../external/rxjs/internal/util/ObjectUnsubscribedError.ts","../../../../../external/rxjs/internal/SubjectSubscription.ts","../../../../../external/rxjs/internal/Subject.ts","../../../../../external/rxjs/internal/operators/refCount.ts","../../../../../external/rxjs/internal/observable/ConnectableObservable.ts","../../../../../external/rxjs/internal/util/subscribeToArray.ts","../../../../../external/rxjs/internal/observable/fromArray.ts","../../../../../external/rxjs/internal/util/identity.ts","../../../../../external/rxjs/internal/util/EmptyError.ts","../../../../../external/rxjs/internal/operators/map.ts","../../../../../external/rxjs/internal/OuterSubscriber.ts","../../../../../external/rxjs/internal/InnerSubscriber.ts","../../../../../external/rxjs/internal/util/subscribeToPromise.ts","../../../../../external/rxjs/internal/symbol/iterator.ts","../../../../../external/rxjs/internal/util/subscribeToIterable.ts","../../../../../external/rxjs/internal/util/subscribeToObservable.ts","../../../../../external/rxjs/internal/util/isArrayLike.ts","../../../../../external/rxjs/internal/util/isPromise.ts","../../../../../external/rxjs/internal/util/subscribeTo.ts","../../../../../external/rxjs/internal/operators/mergeMap.ts","../../../../../external/rxjs/internal/util/subscribeToResult.ts","../../../../../../../external/angular/packages/core/src/event_emitter.ts","../../../../../../../external/angular/packages/core/src/linker/template_ref.ts","../../../../../../../external/angular/packages/core/src/sanitization/style_sanitizer.ts","../../../../../../../external/angular/packages/core/src/type.ts","../../../../../../../external/angular/packages/core/src/reflection/reflection_capabilities.ts","../../../../../../../external/angular/packages/core/src/metadata/directives.ts","../../../../../../../external/angular/packages/core/src/di/util.ts","../../../../../../../external/angular/packages/core/src/metadata/ng_module.ts","../../../../../../../external/angular/packages/core/src/di/injectable.ts","../../../../../../../external/angular/packages/core/src/render3/jit/injectable.ts","../../../../../../../external/angular/packages/core/src/errors.ts","../../../../../../../external/angular/packages/core/src/error_handler.ts","../../../../../external/rxjs/internal/operators/multicast.ts","../../../../../external/rxjs/internal/operators/share.ts","../../../../../../../external/angular/packages/core/src/util/lang.ts","../../../../../../../external/angular/packages/core/src/application_init.ts","../../../../../../../external/angular/packages/core/src/application_tokens.ts","../../../../../../../external/angular/packages/core/src/console.ts","../../../../../../../external/angular/packages/core/src/linker/compiler.ts","../../../../../../../external/angular/packages/core/src/profile/wtf_impl.ts","../../../../../../../external/angular/packages/core/src/profile/profile.ts","../../../../../../../external/angular/packages/core/src/zone/ng_zone.ts","../../../../../../../external/angular/packages/core/src/application_ref.ts","../../../../../../../external/angular/packages/core/src/testability/testability.ts","../../../../../external/rxjs/internal/observable/merge.ts","../../../../../external/rxjs/internal/util/isScheduler.ts","../../../../../external/rxjs/internal/operators/mergeAll.ts","../../../../../external/rxjs/internal/observable/from.ts","../../../../../external/rxjs/internal/util/isInteropObservable.ts","../../../../../external/rxjs/internal/observable/fromObservable.ts","../../../../../external/rxjs/internal/observable/fromPromise.ts","../../../../../external/rxjs/internal/util/isIterable.ts","../../../../../external/rxjs/internal/observable/fromIterable.ts","../../../../../../../external/angular/packages/core/src/linker/query_list.ts","../../../../../../../external/angular/packages/core/src/linker/view_container_ref.ts","../../../../../../../external/angular/packages/core/src/change_detection/change_detector_ref.ts","../../../../../../../external/angular/packages/core/src/debug/debug_node.ts","../../../../../../../external/angular/packages/core/src/change_detection/differs/default_iterable_differ.ts","../../../../../../../external/angular/packages/core/src/change_detection/differs/default_keyvalue_differ.ts","../../../../../../../external/angular/packages/core/src/change_detection/differs/iterable_differs.ts","../../../../../../../external/angular/packages/core/src/change_detection/differs/keyvalue_differs.ts","../../../../../../../external/angular/packages/core/src/change_detection/change_detection.ts","../../../../../../../external/angular/packages/core/src/platform_core_providers.ts","../../../../../../../external/angular/packages/core/src/i18n/tokens.ts","../../../../../../../external/angular/packages/core/src/application_module.ts","../../../../../../../external/angular/packages/core/src/view/types.ts","../../../../../../../external/angular/packages/core/src/view/errors.ts","../../../../../../../external/angular/packages/core/src/view/util.ts","../../../../../../../external/angular/packages/core/src/view/element.ts","../../../../../../../external/angular/packages/core/src/view/ng_module.ts","../../../../../../../external/angular/packages/core/src/view/view_attach.ts","../../../../../../../external/angular/packages/core/src/view/refs.ts","../../../../../../../external/angular/packages/core/src/view/provider.ts","../../../../../../../external/angular/packages/core/src/view/query.ts","../../../../../../../external/angular/packages/core/src/view/ng_content.ts","../../../../../../../external/angular/packages/core/src/view/text.ts","../../../../../../../external/angular/packages/core/src/view/view.ts","../../../../../../../external/angular/packages/core/src/view/pure_expression.ts","../../../../../../../external/angular/packages/core/src/view/services.ts","../../../../../../../external/angular/packages/common/src/i18n/localization.ts","../../../../../../../external/angular/packages/core/src/view/entrypoint.ts","../../../../../../../external/angular/packages/common/src/location/platform_location.ts","../../../../../../../external/angular/packages/common/src/i18n/locale_en.ts","../../../../../../../external/angular/packages/common/src/i18n/locale_data.ts","../../../../../../../external/angular/packages/common/src/i18n/locale_data_api.ts","../../../../../../../external/angular/packages/common/src/common_module.ts","../../../../../../../external/angular/packages/common/src/dom_tokens.ts","../../../../../../../external/angular/packages/common/src/platform_id.ts","../../../../../../../external/angular/packages/platform-browser/src/dom/dom_adapter.ts","../../../../../../../external/angular/packages/platform-browser/src/browser/browser_adapter.ts","../../../../../../../external/angular/packages/common/src/cookie.ts","../../../../../../../external/angular/packages/platform-browser/src/browser/generic_browser_adapter.ts","../../../../../../../external/angular/packages/platform-browser/src/dom/dom_tokens.ts","../../../../../../../external/angular/packages/platform-browser/src/browser/location/history.ts","../../../../../../../external/angular/packages/platform-browser/src/browser/location/browser_platform_location.ts","../../../../../../../external/angular/packages/platform-browser/src/browser/server-transition.ts","../../../../../../../external/angular/packages/platform-browser/src/browser/testability.ts","../../../../../../../external/angular/packages/platform-browser/src/dom/util.ts","../../../../../../../external/angular/packages/platform-browser/src/dom/debug/ng_probe.ts","../../../../../../../external/angular/packages/platform-browser/src/dom/events/event_manager.ts","../../../../../../../external/angular/packages/platform-browser/src/dom/shared_styles_host.ts","../../../../../../../external/angular/packages/platform-browser/src/dom/dom_renderer.ts","../../../../../../../external/angular/packages/platform-browser/src/dom/events/dom_events.ts","../../../../../../../external/angular/packages/platform-browser/src/security/dom_sanitization_service.ts","../../../../../../../external/angular/packages/platform-browser/src/dom/events/hammer_gestures.ts","../../../../../../../external/angular/packages/platform-browser/src/dom/events/key_events.ts","../../../../../../../external/angular/packages/platform-browser/src/browser.ts","../../../../src/app.module.ts","../../../../src/app.module.ts.AppComponent.html","../../../../src/main.ngc.ts"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","NG_INJECTABLE_DEF","ngInjectableDef","defineInjectable","opts","providedIn","factory","undefined","getInjectableDef","type","InjectionToken","_desc","options","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","apply","annotationInstance","_a","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","__window","window","__self","self","WorkerGlobalScope","_global","global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","_injectImplementation","ViewEncapsulation","Inject","Optional","Self","SkipSelf","InjectFlags","_currentInjector","setCurrentInjector","injector","former","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","notFoundValue","injectableDef","get","injectArgs","types","arg","isArray","j","meta","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","slice","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","devModeEqual","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","obj","isJsObject","noop","SOURCE","_THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","providers","THROW_IF_NOT_FOUND","NULL","__NG_ELEMENT_ID__","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","NULL_INJECTOR$1","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","unshift","tokenPath","message","formatError","tokens","forEach","v","text","charAt","substr","context","parts","JSON","replace","APP_ROOT","ComponentRef","ComponentFactory","component","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","noComponentFactoryError","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","selector","ngContentSelectors","inputs","outputs","tslib_1.__extends","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","Renderer","RendererFactory2","RendererStyleFlags2","Renderer2","SWITCH_RENDERER2_FACTORY","SecurityContext","Sanitizer","VERSION","Version","full","major","split","minor","patch","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","tslib_1.__values","_c","merge","sets","sets_1","sets_1_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","element","tagName","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","getTemplateContent","isTemplateElement","content","isFunction","x","_enable_super_gross_mode_that_will_cause_bad_things","config","useDeprecatedSynchronousErrorHandling","hostReportError","err","setTimeout","empty","closed","complete","isObject","tryCatchTarget","errorObject","tryCatcher","tryCatch","UnsubscriptionErrorImpl","errors","UnsubscriptionError","Subscription","unsubscribe","_parents","_subscriptions","_unsubscribe","hasErrors","len","remove","flattenUnsubscriptionErrors","sub","add","teardown","subscription","_addParent","tmp","subscriptions","subscriptionIndex","splice","reduce","errs","rxSubscriber","Math","random","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","_parentSubscription","destination","emptyObserver","SafeSubscriber","rxSubscriberSymbol","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","observable","noop$1","Observable","subscribe","_isScalar","_subscribe","lift","operator","sink","toSubscriber","nextOrObserver","_trySubscribe","canReportError","observer","promiseCtor","getPromiseCtor","reject","Symbol_observable","pipe","operations","pipeFromArray","fns","piped","input","prev","toPromise","ObjectUnsubscribedErrorImpl","ObjectUnsubscribedError","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","AnonymousSubject","copy","asObservable","refCount","refCountOperatorFunction","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","connectableProto","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","ConnectableSubscriber","higherOrderRefCount","connectableObservableDescriptor","writable","subscribeToArray","array","fromArray","scheduler","schedule","identity","MapOperator","project","thisArg","MapSubscriber","count","result","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","InnerSubscriber","subscribeToPromise","getSymbolIterator$1","subscribeToIterable","iterable","Symbol_iterator","return","subscribeToObservable","obs","TypeError","isArrayLike","isPromise","subscribeTo","MergeMapOperator","concurrent","Number","POSITIVE_INFINITY","MergeMapSubscriber","hasCompleted","buffer","active","_tryNext","_innerSub","ish","innerSubscriber","subscribeToResult","outerSubscriber","shift","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","schedulerFn","errorFn","completeFn","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SAFE_STYLE_VALUE","RegExp","URL_RE","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","NgModule","SWITCH_COMPILE_NGMODULE","preR3NgModuleCompile","moduleType","imports","exports","ngInjectorDef","defineInjector","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","MulticastOperator","shareSubjectFactory","isPromise$1","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","runInitializers","asyncInitPromises","initResult","all","catch","tslib_1.__param","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","floor","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","Console","log","_throwError","trace","events","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","signature","wtfLeave","leave","scope","returnValue","leaveScope","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","noop$2","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","filter","updateCb","macroTasks","creationLocation","data","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","clear","getTestability","elem","getAllTestabilities","from","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","createPlatform","destroyed","PlatformRef","inits","init","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","onDestroy","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","destroy","module","listener","dst","objs","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","stableSub","unstableSub","merge$1","observables","last","isScheduler","mergeAll","mergeMap","resultSelector","isInteropObservable","fromObservable","fromPromise","isIterable","fromIterable","mapOperation","ii","share","multicast","subjectOrSubjectFactory","multicastOperatorFunction","componentOrFactory","componentFactory","compRef","_unloadComponent","location","_loadComponent","ApplicationRef_1","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","ngOnDestroy","list","QueryList$1","QueryList","dirty","_results","changes","find","some","toArray","reset","flatten$2","flat","flatItem","flatten","first","notifyOnChanges","setDirty","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","listeners","DebugElement__PRE_R3__","addChild","references","providerTokens","classes","styles","childNodes","child","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventName","eventObj","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","k","IterableDiffers","copied","extend","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","ApplicationModule","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","oldValue","currValue","isFirstCheck","msg","viewDebugError","_addDebugContext","logError","viewDestroyedError","action","NOOP","_tokenKeyCache","tokenKey","_renderCompCount","checkBinding","def","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","expressionChangedAfterItHasBeenCheckedError","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","queryId","valueType","filterQueryId","splitDepsDsl","sourceName","configurable","getParentRenderElement","renderHost","renderParent","componentRendererType","encapsulation","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","renderer","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","elDef","selectorOrNode","ns","createComment","parentEl","selectRootElement","ShadowDom","attrs","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","setElementAttribute","securityContext","renderValue","sanitizer","sanitize","setElementClass","addClass","removeClass","setElementStyle","STYLE","unit","suffix","setStyle","removeStyle","setElementProperty","setProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","moduleProvideDef","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_providers","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","viewIndex","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","arr","EMPTY_CONTEXT","ComponentFactory_","viewDefFactory","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","viewRef_","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","attachEmbeddedView","move","moveEmbeddedView","oldViewIndex","newViewIndex","viewData","detach","createChangeDetectorRef","_viewContainerRef","_appRef","rootRenderNodes","renderNodes","markForCheck","fs","rendererFactory","begin","end","reattach","vcRef","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","destroyNode","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Set","RendererV1TokenKey","RendererV1","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","_createProviderInstance$1","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","searchView","findCompView","createInjector","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","directChildFlags","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","id","getQueryValue","childMatchedQueries","embeddedView","dvc","projectedView","queryValueType","prefix","_addInterpolationPart","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","validateNode","isComponent","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","rendererType","createRenderer","nodeData","compViewDef","createTemplateData","appendNgContent","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","directive","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdatePureExpressionInline","transform","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","params","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","createProdRootView","elInjector","createRootData","debugCreateRootView","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","debugCreateEmbeddedView","debugCreateComponentView","viewDefOverrides","debugCreateNgModuleRef","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","debugOverrideProvider","debugOverrideComponentView","comp","compFactory","getComponentViewDefinitionFactory","debugClearOverrides","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","prodCheckAndUpdateNode","checkIndex","prodCheckNoChangesNode","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","_currentAction","_currentView","_currentNodeIndex","debugSetCurrentNode","debugHandleEvent","debugUpdateDirectives","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","debugUpdateRenderer","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","attr","DebugContext_","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","NgLocalization","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","initServicesIfNeeded","services","createDebugServices","createProdServices","cloneNgModuleDefinition","PlatformLocation","u","localeEn","plural","abs","LOCALE_DATA","Plural","DEPRECATED_PLURAL_FN","NgLocaleLocalization","deprecatedPluralFn","getPluralCategory","getLocalePluralCase","findLocaleData","normalizedLocale","parentLocale","Zero","One","Two","Few","Many","CommonModule","DOCUMENT","PLATFORM_SERVER_ID","_DOM","getDOM","nodeContains","_attrToPropMap","class","innerHtml","readonly","tabindex","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","_chromeNumKeyPadMap","A","B","C","D","E","F","G","H","I","J","K","M","N","O","`","","contains","urlParsingNode","BrowserDomAdapter","parse","templateHtml","makeCurrent","setRootDomAdapter","adapter","hasProperty","getProperty","logGroup","group","logGroupEnd","groupEnd","nodeA","nodeB","querySelectorAll","on","evt","addEventListener","onAndCancel","removeEventListener","createMouseEvent","eventType","getDefaultDocument","createEvent","initEvent","preventDefault","isPrevented","defaultPrevented","getInnerHTML","getOuterHTML","childNodesAsList","clearNodes","replaceChild","insertAllBefore","insertAfter","setInnerHTML","getText","textContent","getValue","getChecked","checked","setChecked","createTemplate","doc","createElementNS","createTextNode","createScriptTag","attrValue","createStyleElement","css","createShadowRoot","getShadowRoot","shadowRoot","getHost","host","clone","cloneNode","getElementsByClassName","getElementsByTagName","classList","hasClass","stylename","getStyle","hasStyle","attributeMap","attrib","hasAttribute","attribute","hasAttributeNS","getAttribute","getAttributeNS","setAttributeNS","removeAttributeNS","templateAwareRoot","createHtmlDocument","document","getBoundingClientRect","top","bottom","left","right","width","height","getTitle","title","setTitle","newTitle","elementMatches","isElementNode","msMatchesSelector","webkitMatchesSelector","isTextNode","isCommentNode","COMMENT_NODE","hasShadowRoot","HTMLElement","isShadowRoot","DocumentFragment","importIntoDoc","importNode","adoptNode","getHref","getEventKey","keyIdentifier","startsWith","parseInt","getGlobalEventTarget","getHistory","history","getLocation","getBaseHref","href","getBaseElementHref","baseElement","relativePath","pathname","resetBaseElement","getUserAgent","navigator","userAgent","setData","getData","getComputedStyle","supportsWebAnimation","Element","performanceNow","performance","now","Date","getTime","supportsCookies","getCookie","cookieStr","encodeURIComponent","cookie","eqIndex","_d","cookieValue","decodeURIComponent","parseCookieValue","setCookie","GenericBrowserDomAdapter","_animationPrefix","_transitionEnd","element_1","domPrefixes","transEndEventNames_1","WebkitTransition","MozTransition","OTransition","transition","getDistributedNodes","resolveAndSetHref","baseUrl","supportsDOMEvents","supportsNativeShadowDOM","getAnimationPrefix","getTransitionEnd","supportsAnimation","DomAdapter","resourceLoaderType","commonDOCUMENT","supportsState","pushState","BrowserPlatformLocation","_doc","_init","_history","getBaseHrefFromDOM","onPopState","onHashChange","newPath","search","hash","replaceState","forward","back","TRANSITION_ID","SERVER_TRANSITION_PROVIDERS","appInitializerFactory","transitionId","dom","BrowserGetTestability","setTestabilityGetter","testabilities","didWork","decrement","didWork_","exportNgVar","COMPILED","CORE_TOKENS","core.ApplicationRef","core.NgZone","inspectNativeElement","core.getDebugNode","EVENT_MANAGER_PLUGINS","EventManager","plugins","_eventNameToPlugin","manager","_plugins","reverse","handler","_findPluginFor","addGlobalEventListener","getZone","plugin","plugin_1","EventManagerPlugin","SharedStylesHost","_stylesSet","addStyles","additions","onStylesAdded","getAllStyles","DomSharedStylesHost","_hostNodes","_styleNodes","head","_addStylesToHost","styleEl","addHost","hostNode","removeHost","styleNode","NAMESPACE_URIS","svg","xhtml","xlink","xml","xmlns","COMPONENT_REGEX","HOST_ATTR","CONTENT_ATTR","flattenStyles","compId","decoratePreventDefault","eventHandler","DomRendererFactory2","eventManager","sharedStylesHost","rendererByCompId","defaultRenderer","DefaultDomRenderer2","Emulated","EmulatedEncapsulationDomRenderer2","applyToHost","ShadowDomRenderer","namespaceUri","DashCase","Important","removeProperty","checkNoSyntheticProp","AT_CHARCODE","nameKind","blackListedMap","contentAttr","shimContentAttribute","componentShortId","hostAttr","shimHostAttribute","hostEl","attachShadow","mode","nodeOrShadowRoot","__symbol__","ADD_EVENT_LISTENER","REMOVE_EVENT_LISTENER","symbolNames","stopSymbol","DomSanitizer","isBlackListedEvent","globalListener","symbolName","taskDatas","taskData","copiedTasks","DomEventsPlugin","platformId","isPlatformServer","patchEvent","Event","stopImmediatePropagation","globalListenerRegistered","callbackRegistered","underlyingRemove","found","EVENT_NAMES","pan","panstart","panmove","panend","pancancel","panleft","panright","panup","pandown","pinch","pinchstart","pinchmove","pinchend","pinchcancel","pinchin","pinchout","press","pressup","rotate","rotatestart","rotatemove","rotateend","rotatecancel","swipe","swipeleft","swiperight","swipeup","swipedown","tap","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","overrides","buildHammer","mc","Hammer","enable","HammerGesturesPlugin","_config","loader","isCustomEvent","cancelRegistration_1","deregister_1","off","MODIFIER_KEYS","MODIFIER_KEY_GETTERS","alt","altKey","control","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","KeyEventsPlugin_1","parseEventName","parsedEvent","outsideHandler","eventCallback","domEventName","_normalizeKey","fullKey","modifierName","getEventFullKey","modifierGetter","keyName","DomSanitizerImpl","ctx","NONE","HTML","SafeHtmlImpl","changingThisBreaksApplicationSecurity","checkNotSafeValue","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","SafeStyleImpl","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","SCRIPT","SafeScriptImpl","URL","SafeResourceUrlImpl","SafeUrlImpl","RESOURCE_URL","expectedType","SafeValueImpl","getTypeName","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","platformBrowser","initDomAdapter","_document","AppComponent","AppModule","BrowserModule","parentModule","withServerTransition","BrowserModule_1","appId","createNgModuleFactory","ngModuleType","defFactory","moduleDef","_createNgProbe","coreTokens","_ngProbeTokensToMap","createRendererType2","_l","staticText","textDef","createComponentFactory","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","name_1","outputDefs","_e","resolveRendererType2","isFilled","None","directiveDef","depDefs","enableProdMode","AppModuleNgFactory"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function getClosureSafeProperty<T>(objWithPropertyToExtract: T): string {\n  for (let key in objWithPropertyToExtract) {\n    if (objWithPropertyToExtract[key] === getClosureSafeProperty as any) {\n      return key;\n    }\n  }\n  throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param target The target to set properties on\n * @param source The source of the property keys and values to set\n */\nexport function fillProperties(target: {[key: string]: string}, source: {[key: string]: string}) {\n  for (const key in source) {\n    if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getClosureSafeProperty} from '../util/property';\n\nexport const NG_COMPONENT_DEF = getClosureSafeProperty({ngComponentDef: getClosureSafeProperty});\nexport const NG_DIRECTIVE_DEF = getClosureSafeProperty({ngDirectiveDef: getClosureSafeProperty});\nexport const NG_INJECTABLE_DEF = getClosureSafeProperty({ngInjectableDef: getClosureSafeProperty});\nexport const NG_INJECTOR_DEF = getClosureSafeProperty({ngInjectorDef: getClosureSafeProperty});\nexport const NG_PIPE_DEF = getClosureSafeProperty({ngPipeDef: getClosureSafeProperty});\nexport const NG_MODULE_DEF = getClosureSafeProperty({ngModuleDef: getClosureSafeProperty});\nexport const NG_BASE_DEF = getClosureSafeProperty({ngBaseDef: getClosureSafeProperty});\n\n/**\n * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nexport const NG_ELEMENT_ID = getClosureSafeProperty({__NG_ELEMENT_ID__: getClosureSafeProperty});\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NG_INJECTABLE_DEF, NG_INJECTOR_DEF} from '../render3/fields';\nimport {Type} from '../type';\n\nimport {ClassProvider, ClassSansProvider, ConstructorProvider, ConstructorSansProvider, ExistingProvider, ExistingSansProvider, FactoryProvider, FactorySansProvider, StaticClassProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from './provider';\n\n/**\n * Information about how a type or `InjectionToken` interfaces with the DI system.\n *\n * At a minimum, this includes a `factory` which defines how to create the given type `T`, possibly\n * requesting injection of other types if necessary.\n *\n * Optionally, a `providedIn` parameter specifies that the given type belongs to a particular\n * `InjectorDef`, `NgModule`, or a special scope (e.g. `'root'`). A value of `null` indicates\n * that the injectable does not belong to any scope.\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectableDef<T> {\n  /**\n   * Specifies that the given type belongs to a particular injector:\n   * - `InjectorType` such as `NgModule`,\n   * - `'root'` the root injector\n   * - `'any'` all injectors.\n   * - `null`, does not belong to any injector. Must be explicitly listed in the injector\n   *   `providers`.\n   */\n  providedIn: InjectorType<any>|'root'|'any'|null;\n\n  /**\n   * Factory method to execute to create an instance of the injectable.\n   */\n  factory: () => T;\n\n  /**\n   * In a case of no explicit injector, a location where the instance of the injectable is stored.\n   */\n  value: T|undefined;\n}\n\n/**\n * Information about the providers to be included in an `Injector` as well as how the given type\n * which carries the information should be created by the DI system.\n *\n * An `InjectorDef` can import other types which have `InjectorDefs`, forming a deep nested\n * structure of providers with a defined priority (identically to how `NgModule`s also have\n * an import/dependency structure).\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectorDef<T> {\n  factory: () => T;\n\n  // TODO(alxhub): Narrow down the type here once decorators properly change the return type of the\n  // class they are decorating (to add the ngInjectableDef property for example).\n  providers: (Type<any>|ValueProvider|ExistingProvider|FactoryProvider|ConstructorProvider|\n              StaticClassProvider|ClassProvider|any[])[];\n\n  imports: (InjectorType<any>|InjectorTypeWithProviders<any>)[];\n}\n\n/**\n * A `Type` which has an `InjectableDef` static field.\n *\n * `InjectableDefType`s contain their own Dependency Injection metadata and are usable in an\n * `InjectorDef`-based `StaticInjector.\n *\n * @publicApi\n */\nexport interface InjectableType<T> extends Type<T> {\n  /**\n   * Opaque type whose structure is highly version dependent. Do not rely on any properties.\n   */\n  ngInjectableDef: never;\n}\n\n/**\n * A type which has an `InjectorDef` static field.\n *\n * `InjectorDefTypes` can be used to configure a `StaticInjector`.\n *\n * @publicApi\n */\nexport interface InjectorType<T> extends Type<T> {\n  /**\n   * Opaque type whose structure is highly version dependent. Do not rely on any properties.\n   */\n  ngInjectorDef: never;\n}\n\n/**\n * Describes the `InjectorDef` equivalent of a `ModuleWithProviders`, an `InjectorDefType` with an\n * associated array of providers.\n *\n * Objects of this type can be listed in the imports section of an `InjectorDef`.\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectorTypeWithProviders<T> {\n  ngModule: InjectorType<T>;\n  providers?: (Type<any>|ValueProvider|ExistingProvider|FactoryProvider|ConstructorProvider|\n               StaticClassProvider|ClassProvider|any[])[];\n}\n\n\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @publicApi\n */\nexport function defineInjectable<T>(opts: {\n  providedIn?: Type<any>| 'root' | 'any' | null,\n  factory: () => T,\n}): never {\n  return ({\n    providedIn: opts.providedIn as any || null, factory: opts.factory, value: undefined,\n  } as InjectableDef<T>) as never;\n}\n\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @publicApi\n */\nexport function defineInjector(options: {factory: () => any, providers?: any[], imports?: any[]}):\n    never {\n  return ({\n    factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n  } as InjectorDef<any>) as never;\n}\n\n/**\n * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have `ngInjectableDef`\n */\nexport function getInjectableDef<T>(type: any): InjectableDef<T>|null {\n  return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? (type as any)[NG_INJECTABLE_DEF] : null;\n}\n\n/**\n * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have `ngInjectorDef`\n */\nexport function getInjectorDef<T>(type: any): InjectorDef<T>|null {\n  return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? (type as any)[NG_INJECTOR_DEF] : null;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n\nimport {defineInjectable} from './defs';\n\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Example\n *\n * ### Plain InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n *\n * @publicApi\n */\nexport class InjectionToken<T> {\n  /** @internal */\n  readonly ngMetadataName = 'InjectionToken';\n\n  readonly ngInjectableDef: never|undefined;\n\n  constructor(protected _desc: string, options?: {\n    providedIn?: Type<any>| 'root' | null,\n    factory: () => T\n  }) {\n    if (options !== undefined) {\n      this.ngInjectableDef = defineInjectable({\n        providedIn: options.providedIn || 'root',\n        factory: options.factory,\n      });\n    } else {\n      this.ngInjectableDef = undefined;\n    }\n  }\n\n  toString(): string { return `InjectionToken ${this._desc}`; }\n}\n\nexport interface InjectableDefToken<T> extends InjectionToken<T> { ngInjectableDef: never; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n *\n * @publicApi\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n}\n\nexport const ANNOTATIONS = '__annotations__';\nexport const PARAMETERS = '__parameters__';\nexport const PROP_METADATA = '__prop__metadata__';\n\n/**\n * @suppress {globalThis}\n */\nexport function makeDecorator<T>(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    additionalProcessing?: (type: Type<T>) => void,\n    typeFn?: (type: Type<T>, ...args: any[]) => void):\n    {new (...args: any[]): any; (...args: any[]): any; (...args: any[]): (cls: any) => any;} {\n  const metaCtor = makeMetadataCtor(props);\n\n  function DecoratorFactory(...args: any[]): (cls: Type<T>) => any {\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, ...args);\n      return this;\n    }\n\n    const annotationInstance = new (DecoratorFactory as any)(...args);\n    return function TypeDecorator(cls: Type<T>) {\n      if (typeFn) typeFn(cls, ...args);\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n          (cls as any)[ANNOTATIONS] :\n          Object.defineProperty(cls, ANNOTATIONS, {value: []})[ANNOTATIONS];\n      annotations.push(annotationInstance);\n\n\n      if (additionalProcessing) additionalProcessing(cls);\n\n      return cls;\n    };\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.ngMetadataName = name;\n  (DecoratorFactory as any).annotationCls = DecoratorFactory;\n  return DecoratorFactory as any;\n}\n\nfunction makeMetadataCtor(props?: (...args: any[]) => any): any {\n  return function ctor(...args: any[]) {\n    if (props) {\n      const values = props(...args);\n      for (const propName in values) {\n        this[propName] = values[propName];\n      }\n    }\n  };\n}\n\nexport function makeParamDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const metaCtor = makeMetadataCtor(props);\n  function ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const annotationInstance = new (<any>ParamDecoratorFactory)(...args);\n\n    (<any>ParamDecorator).annotation = annotationInstance;\n    return ParamDecorator;\n\n    function ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const parameters = cls.hasOwnProperty(PARAMETERS) ?\n          (cls as any)[PARAMETERS] :\n          Object.defineProperty(cls, PARAMETERS, {value: []})[PARAMETERS];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      (parameters[index] = parameters[index] || []).push(annotationInstance);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.ngMetadataName = name;\n  (<any>ParamDecoratorFactory).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n\nexport function makePropDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    additionalProcessing?: (target: any, name: string, ...args: any[]) => void): any {\n  const metaCtor = makeMetadataCtor(props);\n\n  function PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const decoratorInstance = new (<any>PropDecoratorFactory)(...args);\n\n    function PropDecorator(target: any, name: string) {\n      const constructor = target.constructor;\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const meta = constructor.hasOwnProperty(PROP_METADATA) ?\n          (constructor as any)[PROP_METADATA] :\n          Object.defineProperty(constructor, PROP_METADATA, {value: {}})[PROP_METADATA];\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n\n      if (additionalProcessing) additionalProcessing(target, name, ...args);\n    }\n\n    return PropDecorator;\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.ngMetadataName = name;\n  (<any>PropDecoratorFactory).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Type} from '../type';\nimport {makeParamDecorator, makePropDecorator} from '../util/decorators';\n\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * @usageNotes\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @publicApi\n */\nexport const ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken<any>('AnalyzeForEntryComponents');\n\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * @publicApi\n */\nexport interface AttributeDecorator {\n  /**\n   * Specifies that a constant attribute value should be injected.\n   *\n   * The directive can inject constant string literals of host element attributes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * Suppose we have an `<input>` element and want to know its `type`.\n   *\n   * ```html\n   * <input type=\"text\">\n   * ```\n   *\n   * A decorator can inject string literal `text` like so:\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeMetadata'}\n   *\n   * ### Example as TypeScript Decorator\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeFactory'}\n   *\n   * ### Example as ES5 annotation\n   *\n   * ```\n   * var MyComponent = function(title) {\n   *   ...\n   * };\n   *\n   * MyComponent.annotations = [\n   *   new ng.Component({...})\n   * ]\n   * MyComponent.parameters = [\n   *   [new ng.Attribute('title')]\n   * ]\n   * ```\n   *\n   * @publicApi\n   */\n  (name: string): any;\n  new (name: string): Attribute;\n}\n\n\n/**\n * Type of the Attribute metadata.\n *\n * @publicApi\n */\nexport interface Attribute { attributeName?: string; }\n\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Attribute: AttributeDecorator =\n    makeParamDecorator('Attribute', (attributeName?: string) => ({attributeName}));\n\n/**\n * Type of the Query metadata.\n *\n * @publicApi\n */\nexport interface Query {\n  descendants: boolean;\n  first: boolean;\n  read: any;\n  isViewQuery: boolean;\n  selector: any;\n}\n\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n *\n * @publicApi\n */\nexport abstract class Query {}\n\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * @see `ContentChildren`.\n * @publicApi\n */\nexport interface ContentChildrenDecorator {\n  /**\n   * Configures a content query.\n   *\n   * You can use ContentChildren to get the `QueryList` of elements or directives from the\n   * content DOM. Any time a child element is added, removed, or moved, the query list will be\n   * updated, and the changes observable of the query list will emit a new value.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **descendants** - include only direct children or all descendants.\n   * * **read** - read a different token from the queried elements.\n   *\n   * @usageNotes\n   * ### Basic Example\n   *\n   * Here is a simple demonstration of how the `ContentChildren` decorator can be used.\n   *\n   * {@example core/di/ts/contentChildren/content_children_howto.ts region='HowTo'}\n   *\n   * ### Tab-pane Example\n   *\n   * Here is a slightly more realistic example that shows how `ContentChildren` decorators\n   * can be used to implement a tab pane component.\n   *\n   * {@example core/di/ts/contentChildren/content_children_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query;\n}\n\n/**\n * Type of the ContentChildren metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nexport type ContentChildren = Query;\n\n/**\n * ContentChildren decorator and metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nexport const ContentChildren: ContentChildrenDecorator = makePropDecorator(\n    'ContentChildren',\n    (selector?: any, data: any = {}) =>\n        ({selector, first: false, isViewQuery: false, descendants: false, ...data}),\n    Query);\n\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n * @publicApi\n */\nexport interface ContentChildDecorator {\n  /**\n   * Configures a content query.\n   *\n   * You can use ContentChild to get the first element or the directive matching the selector from\n   * the content DOM. If the content DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried element.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ContentChild;\n}\n\n/**\n * Type of the ContentChild metadata.\n *\n * @see `ContentChild`.\n *\n * @publicApi\n */\nexport type ContentChild = Query;\n\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n *\n * @publicApi\n */\nexport const ContentChild: ContentChildDecorator = makePropDecorator(\n    'ContentChild', (selector?: any, data: any = {}) =>\n                        ({selector, first: true, isViewQuery: false, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * @see `ViewChildren`.\n *\n * @publicApi\n */\nexport interface ViewChildrenDecorator {\n  /**\n   * Configures a view query.\n   *\n   * You can use ViewChildren to get the `QueryList` of elements or directives from the\n   * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChildren;\n}\n\n/**\n * Type of the ViewChildren metadata.\n *\n * @publicApi\n */\nexport type ViewChildren = Query;\n\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const ViewChildren: ViewChildrenDecorator = makePropDecorator(\n    'ViewChildren', (selector?: any, data: any = {}) =>\n                        ({selector, first: false, isViewQuery: true, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * @see `ViewChild`.\n * @publicApi\n */\nexport interface ViewChildDecorator {\n  /**\n   * @description\n   * Property decorator that configures a view query.\n   * The change detector looks for the first element or the directive matching the selector\n   * in the view DOM. If the view DOM changes, and a new child matches the selector,\n   * the property is updated.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Supported selectors include:\n   *   * any class with the `@Component` or `@Directive` decorator\n   *   * a template reference variable as a string (e.g. query `<my-component #cmp></my-component>\n   * with `@ViewChild('cmp')`)\n   *   * any provider defined in the child component tree of the current component (e.g.\n   * `@ViewChild(SomeService) someService: SomeService`)\n   *   * any provider defined through a string token (e.g. `@ViewChild('someToken') someTokenVal:\n   * any`)\n   *   * a `TemplateRef` (e.g. query `<ng-template></ng-template>` with `@ViewChild(TemplateRef)\n   * template;`)\n   *\n   * @usageNotes\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChild/view_child_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChild;\n}\n\n/**\n * Type of the ViewChild metadata.\n *\n * @publicApi\n */\nexport type ViewChild = Query;\n\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const ViewChild: ViewChildDecorator = makePropDecorator(\n    'ViewChild', (selector: any, data: any) =>\n                     ({selector, first: true, isViewQuery: true, descendants: true, ...data}),\n    Query);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nconst _global: {[name: string]: any} = __global || __window || __self;\n\nconst promise: Promise<any> = Promise.resolve(0);\n/**\n * Attention: whenever providing a new value, be sure to add an\n * entry into the corresponding `....externs.js` file,\n * so that closure won't use that global for its purposes.\n */\nexport {_global as global};\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet _symbolIterator: any = null;\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            (Map as any).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n\nexport function scheduleMicroTask(fn: Function) {\n  if (typeof Zone === 'undefined') {\n    // use promise to schedule microTask instead of use Zone\n    promise.then(() => { fn && fn.apply(null, null); });\n  } else {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n  }\n}\n\n// JS has NaN !== NaN\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token instanceof Array) {\n    return '[' + token.map(stringify).join(', ') + ']';\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * Convince closure compiler that the wrapped function has no side-effects.\n *\n * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n * It is important that the return value for the `noSideEffects` function be assigned\n * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n * compiler.\n */\nexport function noSideEffects(fn: () => void): string {\n  return '' + {toString: fn};\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {getClosureSafeProperty} from '../util/property';\n\n\n\n/**\n * An interface that a function passed into {@link forwardRef} has to implement.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * @publicApi\n */\nexport interface ForwardRefFn { (): any; }\n\nconst __forward_ref__ = getClosureSafeProperty({__forward_ref__: getClosureSafeProperty});\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @publicApi\n */\nexport function forwardRef(forwardRefFn: ForwardRefFn): Type<any> {\n  (<any>forwardRefFn).__forward_ref__ = forwardRef;\n  (<any>forwardRefFn).toString = function() { return stringify(this()); };\n  return (<Type<any>><any>forwardRefFn);\n}\n\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @publicApi\n */\nexport function resolveForwardRef<T>(type: T): T {\n  const fn: any = type;\n  if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n      fn.__forward_ref__ === forwardRef) {\n    return fn();\n  } else {\n    return type;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/ts/metadata/encapsulation.ts region='longform'}\n *\n * @publicApi\n */\nexport enum ViewEncapsulation {\n  /**\n   * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n   * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n   * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n   * selectors.\n   *\n   * This is the default option.\n   */\n  Emulated = 0,\n  /**\n   * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n   * Use the native encapsulation mechanism of the renderer.\n   *\n   * For the DOM this means using the deprecated [Shadow DOM\n   * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * creating a ShadowRoot for Component's Host Element.\n   */\n  Native = 1,\n  /**\n   * Don't provide any template or style encapsulation.\n   */\n  None = 2,\n\n  /**\n   * Use Shadow DOM to encapsulate styles.\n   *\n   * For the DOM this means using modern [Shadow\n   * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * creating a ShadowRoot for Component's Host Element.\n   */\n  ShadowDom = 3\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {InjectableDef, getInjectableDef} from './defs';\nimport {InjectionToken} from './injection_token';\nimport {Injector} from './injector';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\n\n/**\n * Injection flags for DI.\n *\n * @publicApi\n */\nexport enum InjectFlags {\n  // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n\n  Default = 0b0000,\n\n  /**\n   * Specifies that an injector should retrieve a dependency from any injector until reaching the\n   * host element of the current component. (Only used with Element Injector)\n   */\n  Host = 0b0001,\n  /** Don't descend into ancestors of the node requesting injection. */\n  Self = 0b0010,\n  /** Skip the node that is requesting injection. */\n  SkipSelf = 0b0100,\n  /** Inject `defaultValue` instead if token not found. */\n  Optional = 0b1000,\n}\n\n\n\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nlet _currentInjector: Injector|undefined|null = undefined;\n\nexport function setCurrentInjector(injector: Injector | null | undefined): Injector|undefined|null {\n  const former = _currentInjector;\n  _currentInjector = injector;\n  return former;\n}\n\n/**\n * Current implementation of inject.\n *\n * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n * way for two reasons:\n *  1. `Injector` should not depend on ivy logic.\n *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n */\nlet _injectImplementation: (<T>(token: Type<T>| InjectionToken<T>, flags: InjectFlags) => T | null)|\n    undefined;\n\n/**\n * Sets the current inject implementation.\n */\nexport function setInjectImplementation(\n    impl: (<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags) => T | null) | undefined):\n    (<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags) => T | null)|undefined {\n  const previous = _injectImplementation;\n  _injectImplementation = impl;\n  return previous;\n}\n\nexport function injectInjectorOnly<T>(token: Type<T>| InjectionToken<T>): T;\nexport function injectInjectorOnly<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags): T|\n    null;\nexport function injectInjectorOnly<T>(\n    token: Type<T>| InjectionToken<T>, flags = InjectFlags.Default): T|null {\n  if (_currentInjector === undefined) {\n    throw new Error(`inject() must be called from an injection context`);\n  } else if (_currentInjector === null) {\n    return injectRootLimpMode(token, undefined, flags);\n  } else {\n    return _currentInjector.get(token, flags & InjectFlags.Optional ? null : undefined, flags);\n  }\n}\n\n/**\n * Injects a token from the currently active injector.\n *\n * This function must be used in the context of a factory function such as one defined for an\n * `InjectionToken`, and will throw an error if not called from such a context.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n *\n * Within such a factory function `inject` is utilized to request injection of a dependency, instead\n * of providing an additional array of dependencies as was common to do with `useFactory` providers.\n * `inject` is faster and more type-safe.\n *\n * @publicApi\n */\nexport function inject<T>(token: Type<T>| InjectionToken<T>): T;\nexport function inject<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags): T|null;\nexport function inject<T>(token: Type<T>| InjectionToken<T>, flags = InjectFlags.Default): T|null {\n  return (_injectImplementation || injectInjectorOnly)(token, flags);\n}\n\n/**\n * Injects `root` tokens in limp mode.\n *\n * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n * `InjectableDef`.\n */\nexport function injectRootLimpMode<T>(\n    token: Type<T>| InjectionToken<T>, notFoundValue: T | undefined, flags: InjectFlags): T|null {\n  const injectableDef: InjectableDef<T>|null = getInjectableDef(token);\n  if (injectableDef && injectableDef.providedIn == 'root') {\n    return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                                               injectableDef.value;\n  }\n  if (flags & InjectFlags.Optional) return null;\n  if (notFoundValue !== undefined) return notFoundValue;\n  throw new Error(`Injector: NOT_FOUND [${stringify(token)}]`);\n}\n\nexport function injectArgs(types: (Type<any>| InjectionToken<any>| any[])[]): any[] {\n  const args: any[] = [];\n  for (let i = 0; i < types.length; i++) {\n    const arg = types[i];\n    if (Array.isArray(arg)) {\n      if (arg.length === 0) {\n        throw new Error('Arguments array must have arguments.');\n      }\n      let type: Type<any>|undefined = undefined;\n      let flags: InjectFlags = InjectFlags.Default;\n\n      for (let j = 0; j < arg.length; j++) {\n        const meta = arg[j];\n        if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n          flags |= InjectFlags.Optional;\n        } else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n          flags |= InjectFlags.SkipSelf;\n        } else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n          flags |= InjectFlags.Self;\n        } else if (meta instanceof Inject) {\n          type = meta.token;\n        } else {\n          type = meta;\n        }\n      }\n\n      args.push(inject(type !, flags));\n    } else {\n      args.push(inject(arg));\n    }\n  }\n  return args;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ClassSansProvider, ConstructorProvider, ConstructorSansProvider, ExistingProvider, ExistingSansProvider, FactoryProvider, FactorySansProvider, StaticClassProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from '../di/provider';\nimport {ReflectionCapabilities} from '../reflection/reflection_capabilities';\nimport {Type} from '../type';\nimport {makeDecorator, makeParamDecorator} from '../util/decorators';\nimport {EMPTY_ARRAY} from '../view/util';\n\n\n/**\n * Type of the Inject decorator / constructor function.\n *\n * @publicApi\n */\nexport interface InjectDecorator {\n  /**\n   * A constructor parameter decorator that specifies a\n   * custom provider of a dependency.\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   * The following example shows a class constructor that specifies a\n   * custom provider of a dependency using the parameter decorator.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Inject'}\n   *\n   * When `@Inject()` is not present, the `Injector` uses the type annotation of the\n   * parameter as the provider.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectWithoutDecorator'}\n   */\n  (token: any): any;\n  new (token: any): Inject;\n}\n\n/**\n * Type of the Inject metadata.\n *\n * @publicApi\n */\nexport interface Inject {\n  /**\n   * Injector token that maps to the dependency to be injected.\n   */\n  token: any;\n}\n\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Inject: InjectDecorator = makeParamDecorator('Inject', (token: any) => ({token}));\n\n\n/**\n * Type of the Optional decorator / constructor function.\n *\n * @publicApi\n */\nexport interface OptionalDecorator {\n  /**\n   * A constructor parameter decorator that marks a dependency as optional.\n   *\n   * The DI framework provides null if the dependency is not found.\n   * For example, the following code allows the possibility of a null result:\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Optional'}\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   */\n  (): any;\n  new (): Optional;\n}\n\n/**\n * Type of the Optional metadata.\n *\n * @publicApi\n */\nexport interface Optional {}\n\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Optional: OptionalDecorator = makeParamDecorator('Optional');\n\n/**\n * Type of the Self decorator / constructor function.\n *\n * @publicApi\n */\nexport interface SelfDecorator {\n  /**\n   * A constructor parameter decorator that tells the DI framework\n   * to retrieve a dependency only from the local injector.\n   *\n   * In the following example, the dependency can be resolved\n   * by the local injector when instantiating the class itself, but not\n   * when instantiating a child.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Self'}\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   *\n   */\n  (): any;\n  new (): Self;\n}\n\n/**\n * Type of the Self metadata.\n *\n * @publicApi\n */\nexport interface Self {}\n\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Self: SelfDecorator = makeParamDecorator('Self');\n\n\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * @publicApi\n */\nexport interface SkipSelfDecorator {\n  /**\n   * A constructor parameter decorator that tells the DI framework\n   * that dependency resolution should start from the parent injector.\n   *\n   * In the following example, the dependency can be resolved when\n   * instantiating a child, but not when instantiating the class itself.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='SkipSelf'}\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   *\n   */\n  (): any;\n  new (): SkipSelf;\n}\n\n/**\n * Type of the SkipSelf metadata.\n *\n * @publicApi\n */\nexport interface SkipSelf {}\n\n/**\n * SkipSelf decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const SkipSelf: SkipSelfDecorator = makeParamDecorator('SkipSelf');\n\n/**\n * Type of the Host decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostDecorator {\n  /**\n   * A constructor parameter decorator that tells the DI framework\n   * to retrieve a dependency from any injector until\n   * reaching the host element of the current component.\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Host'}\n   */\n  (): any;\n  new (): Host;\n}\n\n/**\n * Type of the Host metadata.\n *\n * @publicApi\n */\nexport interface Host {}\n\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Host: HostDecorator = makeParamDecorator('Host');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\n\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n\nexport function normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value != null ? value.toString().slice(0, 30) : value;\n  } catch (e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getSymbolIterator, looseIdentical} from '../util';\n\nexport function devModeEqual(a: any, b: any): boolean {\n  const isListLikeIterableA = isListLikeIterable(a);\n  const isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n * @publicApi\n */\nexport class WrappedValue {\n  /** @deprecated from 5.3, use `unwrap()` instead - will switch to protected */\n  wrapped: any;\n\n  constructor(value: any) { this.wrapped = value; }\n\n  /** Creates a wrapped value. */\n  static wrap(value: any): WrappedValue { return new WrappedValue(value); }\n\n  /**\n   * Returns the underlying value of a wrapped value.\n   * Returns the given `value` when it is not wrapped.\n   **/\n  static unwrap(value: any): any { return WrappedValue.isWrapped(value) ? value.wrapped : value; }\n\n  /** Returns true if `value` is a wrapped value. */\n  static isWrapped(value: any): value is WrappedValue { return value instanceof WrappedValue; }\n}\n\n/**\n * Represents a basic change from a previous to a new value.\n *\n * @publicApi\n */\nexport class SimpleChange {\n  constructor(public previousValue: any, public currentValue: any, public firstChange: boolean) {}\n\n  /**\n   * Check whether the new value is the first value assigned.\n   */\n  isFirstChange(): boolean { return this.firstChange; }\n}\n\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const iterator1 = a[getSymbolIterator()]();\n  const iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const item1 = iterator1.next();\n    const item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const iterator = obj[getSymbolIterator()]();\n    let item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function noop(...args: any[]): any {\n  // Do nothing.\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {injectInjector} from '../render3/di';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {noop} from '../util/noop';\nimport {getClosureSafeProperty} from '../util/property';\n\nimport {defineInjectable} from './defs';\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {InjectFlags, inject} from './injector_compatibility';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ConstructorProvider, ExistingProvider, FactoryProvider, StaticClassProvider, StaticProvider, ValueProvider} from './provider';\n\nexport const SOURCE = '__source';\nconst _THROW_IF_NOT_FOUND = new Object();\nexport const THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @publicApi\n */\nexport const INJECTOR = new InjectionToken<Injector>('INJECTOR');\n\nexport class NullInjector implements Injector {\n  get(token: any, notFoundValue: any = _THROW_IF_NOT_FOUND): any {\n    if (notFoundValue === _THROW_IF_NOT_FOUND) {\n      // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n      // reason why correctly written application should cause this exception.\n      // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n      // if(ngDevMode) debugger;\n      throw new Error(`NullInjectorError: No provider for ${stringify(token)}!`);\n    }\n    return notFoundValue;\n  }\n}\n\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * @publicApi\n */\nexport abstract class Injector {\n  static THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n  static NULL: Injector = new NullInjector();\n\n  /**\n   * Retrieves an instance from the injector based on the provided token.\n   * @returns The instance from the injector if defined, otherwise the `notFoundValue`.\n   * @throws When the `notFoundValue` is `undefined` or `Injector.THROW_IF_NOT_FOUND`.\n   */\n  abstract get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  /**\n   * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n   * @suppress {duplicate}\n   */\n  abstract get(token: any, notFoundValue?: any): any;\n\n  /**\n   * @deprecated from v5 use the new signature Injector.create(options)\n   */\n  static create(providers: StaticProvider[], parent?: Injector): Injector;\n\n  static create(options: {providers: StaticProvider[], parent?: Injector, name?: string}): Injector;\n\n  /**\n   * Create a new Injector which is configure using `StaticProvider`s.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n   */\n  static create(\n      options: StaticProvider[]|{providers: StaticProvider[], parent?: Injector, name?: string},\n      parent?: Injector): Injector {\n    if (Array.isArray(options)) {\n      return new StaticInjector(options, parent);\n    } else {\n      return new StaticInjector(options.providers, options.parent, options.name || null);\n    }\n  }\n\n  /** @nocollapse */\n  static ngInjectableDef = defineInjectable({\n    providedIn: 'any' as any,\n    factory: () => inject(INJECTOR),\n  });\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => Injector = () => SWITCH_INJECTOR_FACTORY();\n}\n\nexport const SWITCH_INJECTOR_FACTORY__POST_R3__ = function() {\n  return injectInjector();\n};\nconst SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\nconst SWITCH_INJECTOR_FACTORY: typeof injectInjector = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n\n\nconst IDENT = function<T>(value: T): T {\n  return value;\n};\nconst EMPTY = <any[]>[];\nconst CIRCULAR = IDENT;\nconst MULTI_PROVIDER_FN = function(): any[] {\n  return Array.prototype.slice.call(arguments);\n};\nexport const USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\nconst NG_TOKEN_PATH = 'ngTokenPath';\nconst NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nconst enum OptionFlags {\n  Optional = 1 << 0,\n  CheckSelf = 1 << 1,\n  CheckParent = 1 << 2,\n  Default = CheckSelf | CheckParent\n}\nconst NULL_INJECTOR = Injector.NULL;\nconst NEW_LINE = /\\n/gm;\nconst NO_NEW_LINE = 'Éµ';\n\nexport class StaticInjector implements Injector {\n  readonly parent: Injector;\n  readonly source: string|null;\n\n  private _records: Map<any, Record>;\n\n  constructor(\n      providers: StaticProvider[], parent: Injector = NULL_INJECTOR, source: string|null = null) {\n    this.parent = parent;\n    this.source = source;\n    const records = this._records = new Map<any, Record>();\n    records.set(\n        Injector, <Record>{token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false});\n    records.set(\n        INJECTOR, <Record>{token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false});\n    recursivelyProcessProviders(records, providers);\n  }\n\n  get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any): any;\n  get(token: any, notFoundValue?: any, flags: InjectFlags = InjectFlags.Default): any {\n    const record = this._records.get(token);\n    try {\n      return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n    } catch (e) {\n      const tokenPath: any[] = e[NG_TEMP_TOKEN_PATH];\n      if (token[SOURCE]) {\n        tokenPath.unshift(token[SOURCE]);\n      }\n      e.message = formatError('\\n' + e.message, tokenPath, this.source);\n      e[NG_TOKEN_PATH] = tokenPath;\n      e[NG_TEMP_TOKEN_PATH] = null;\n      throw e;\n    }\n  }\n\n  toString() {\n    const tokens = <string[]>[], records = this._records;\n    records.forEach((v, token) => tokens.push(stringify(token)));\n    return `StaticInjector[${tokens.join(', ')}]`;\n  }\n}\n\ntype SupportedProvider =\n    ValueProvider | ExistingProvider | StaticClassProvider | ConstructorProvider | FactoryProvider;\n\ninterface Record {\n  fn: Function;\n  useNew: boolean;\n  deps: DependencyRecord[];\n  value: any;\n}\n\ninterface DependencyRecord {\n  token: any;\n  options: number;\n}\n\ntype TokenPath = Array<any>;\n\nfunction resolveProvider(provider: SupportedProvider): Record {\n  const deps = computeDeps(provider);\n  let fn: Function = IDENT;\n  let value: any = EMPTY;\n  let useNew: boolean = false;\n  let provide = resolveForwardRef(provider.provide);\n  if (USE_VALUE in provider) {\n    // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n    value = (provider as ValueProvider).useValue;\n  } else if ((provider as FactoryProvider).useFactory) {\n    fn = (provider as FactoryProvider).useFactory;\n  } else if ((provider as ExistingProvider).useExisting) {\n    // Just use IDENT\n  } else if ((provider as StaticClassProvider).useClass) {\n    useNew = true;\n    fn = resolveForwardRef((provider as StaticClassProvider).useClass);\n  } else if (typeof provide == 'function') {\n    useNew = true;\n    fn = provide;\n  } else {\n    throw staticError(\n        'StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable',\n        provider);\n  }\n  return {deps, fn, useNew, value};\n}\n\nfunction multiProviderMixError(token: any) {\n  return staticError('Cannot mix multi providers and regular providers', token);\n}\n\nfunction recursivelyProcessProviders(records: Map<any, Record>, provider: StaticProvider) {\n  if (provider) {\n    provider = resolveForwardRef(provider);\n    if (provider instanceof Array) {\n      // if we have an array recurse into the array\n      for (let i = 0; i < provider.length; i++) {\n        recursivelyProcessProviders(records, provider[i]);\n      }\n    } else if (typeof provider === 'function') {\n      // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n      // error messages\n      throw staticError('Function/Class not supported', provider);\n    } else if (provider && typeof provider === 'object' && provider.provide) {\n      // At this point we have what looks like a provider: {provide: ?, ....}\n      let token = resolveForwardRef(provider.provide);\n      const resolvedProvider = resolveProvider(provider);\n      if (provider.multi === true) {\n        // This is a multi provider.\n        let multiProvider: Record|undefined = records.get(token);\n        if (multiProvider) {\n          if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n            throw multiProviderMixError(token);\n          }\n        } else {\n          // Create a placeholder factory which will look up the constituents of the multi provider.\n          records.set(token, multiProvider = <Record>{\n            token: provider.provide,\n            deps: [],\n            useNew: false,\n            fn: MULTI_PROVIDER_FN,\n            value: EMPTY\n          });\n        }\n        // Treat the provider as the token.\n        token = provider;\n        multiProvider.deps.push({token, options: OptionFlags.Default});\n      }\n      const record = records.get(token);\n      if (record && record.fn == MULTI_PROVIDER_FN) {\n        throw multiProviderMixError(token);\n      }\n      records.set(token, resolvedProvider);\n    } else {\n      throw staticError('Unexpected provider', provider);\n    }\n  }\n}\n\nfunction tryResolveToken(\n    token: any, record: Record | undefined, records: Map<any, Record>, parent: Injector,\n    notFoundValue: any, flags: InjectFlags): any {\n  try {\n    return resolveToken(token, record, records, parent, notFoundValue, flags);\n  } catch (e) {\n    // ensure that 'e' is of type Error.\n    if (!(e instanceof Error)) {\n      e = new Error(e);\n    }\n    const path: any[] = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n    path.unshift(token);\n    if (record && record.value == CIRCULAR) {\n      // Reset the Circular flag.\n      record.value = EMPTY;\n    }\n    throw e;\n  }\n}\n\nfunction resolveToken(\n    token: any, record: Record | undefined, records: Map<any, Record>, parent: Injector,\n    notFoundValue: any, flags: InjectFlags): any {\n  let value;\n  if (record && !(flags & InjectFlags.SkipSelf)) {\n    // If we don't have a record, this implies that we don't own the provider hence don't know how\n    // to resolve it.\n    value = record.value;\n    if (value == CIRCULAR) {\n      throw Error(NO_NEW_LINE + 'Circular dependency');\n    } else if (value === EMPTY) {\n      record.value = CIRCULAR;\n      let obj = undefined;\n      let useNew = record.useNew;\n      let fn = record.fn;\n      let depRecords = record.deps;\n      let deps = EMPTY;\n      if (depRecords.length) {\n        deps = [];\n        for (let i = 0; i < depRecords.length; i++) {\n          const depRecord: DependencyRecord = depRecords[i];\n          const options = depRecord.options;\n          const childRecord =\n              options & OptionFlags.CheckSelf ? records.get(depRecord.token) : undefined;\n          deps.push(tryResolveToken(\n              // Current Token to resolve\n              depRecord.token,\n              // A record which describes how to resolve the token.\n              // If undefined, this means we don't have such a record\n              childRecord,\n              // Other records we know about.\n              records,\n              // If we don't know how to resolve dependency and we should not check parent for it,\n              // than pass in Null injector.\n              !childRecord && !(options & OptionFlags.CheckParent) ? NULL_INJECTOR : parent,\n              options & OptionFlags.Optional ? null : Injector.THROW_IF_NOT_FOUND,\n              InjectFlags.Default));\n        }\n      }\n      record.value = value = useNew ? new (fn as any)(...deps) : fn.apply(obj, deps);\n    }\n  } else if (!(flags & InjectFlags.Self)) {\n    value = parent.get(token, notFoundValue, InjectFlags.Default);\n  }\n  return value;\n}\n\nfunction computeDeps(provider: StaticProvider): DependencyRecord[] {\n  let deps: DependencyRecord[] = EMPTY;\n  const providerDeps: any[] =\n      (provider as ExistingProvider & StaticClassProvider & ConstructorProvider).deps;\n  if (providerDeps && providerDeps.length) {\n    deps = [];\n    for (let i = 0; i < providerDeps.length; i++) {\n      let options = OptionFlags.Default;\n      let token = resolveForwardRef(providerDeps[i]);\n      if (token instanceof Array) {\n        for (let j = 0, annotations = token; j < annotations.length; j++) {\n          const annotation = annotations[j];\n          if (annotation instanceof Optional || annotation == Optional) {\n            options = options | OptionFlags.Optional;\n          } else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n            options = options & ~OptionFlags.CheckSelf;\n          } else if (annotation instanceof Self || annotation == Self) {\n            options = options & ~OptionFlags.CheckParent;\n          } else if (annotation instanceof Inject) {\n            token = (annotation as Inject).token;\n          } else {\n            token = resolveForwardRef(annotation);\n          }\n        }\n      }\n      deps.push({token, options});\n    }\n  } else if ((provider as ExistingProvider).useExisting) {\n    const token = resolveForwardRef((provider as ExistingProvider).useExisting);\n    deps = [{token, options: OptionFlags.Default}];\n  } else if (!providerDeps && !(USE_VALUE in provider)) {\n    // useValue & useExisting are the only ones which are exempt from deps all others need it.\n    throw staticError('\\'deps\\' required', provider);\n  }\n  return deps;\n}\n\nfunction formatError(text: string, obj: any, source: string | null = null): string {\n  text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n  let context = stringify(obj);\n  if (obj instanceof Array) {\n    context = obj.map(stringify).join(' -> ');\n  } else if (typeof obj === 'object') {\n    let parts = <string[]>[];\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        let value = obj[key];\n        parts.push(\n            key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n      }\n    }\n    context = `{${parts.join(', ')}}`;\n  }\n  return `StaticInjectorError${source ? '(' + source + ')' : ''}[${context}]: ${text.replace(NEW_LINE, '\\n  ')}`;\n}\n\nfunction staticError(text: string, obj: any): Error {\n  return new Error(formatError(text, obj));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {InjectionToken} from './injection_token';\n\n\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nexport const APP_ROOT = new InjectionToken<boolean>(\n    'The presence of this token marks an injector as being the root injector.');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {ViewRef} from './view_ref';\n\n/**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * @publicApi\n */\nexport abstract class ComponentRef<C> {\n  /**\n   * The host or anchor [element](guide/glossary#element) for this component instance.\n   */\n  abstract get location(): ElementRef;\n\n  /**\n   * The [dependency injector](guide/glossary#injector) for this component instance.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * This component instance.\n   */\n  abstract get instance(): C;\n\n  /**\n   * The [host view](guide/glossary#view-tree) defined by the template\n   * for this component instance.\n   */\n  abstract get hostView(): ViewRef;\n\n  /**\n   * The change detector for this component instance.\n   */\n  abstract get changeDetectorRef(): ChangeDetectorRef;\n\n  /**\n   * The component type.\n   */\n  abstract get componentType(): Type<any>;\n\n  /**\n   * Destroys the component instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * A lifecycle hook that provides additional developer-defined cleanup\n   * functionality for the component.\n   * @param callback A handler function that cleans up developer-defined data\n   * associated with this component. Called when the `destroy()` method is invoked.\n   */\n  abstract onDestroy(callback: Function): void;\n}\n\n/**\n * @publicApi\n */\nexport abstract class ComponentFactory<C> {\n  /**\n   * The component's HTML selector.\n   */\n  abstract get selector(): string;\n  /**\n   * The component's type\n   */\n  abstract get componentType(): Type<any>;\n  /**\n   * Selector for all <ng-content> elements in the component.\n   */\n  abstract get ngContentSelectors(): string[];\n  /**\n   * The inputs of the component.\n   */\n  abstract get inputs(): {propName: string, templateName: string}[];\n  /**\n   * The outputs of the component.\n   */\n  abstract get outputs(): {propName: string, templateName: string}[];\n  /**\n   * Creates a new component.\n   */\n  abstract create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {NgModuleRef} from './ng_module_factory';\n\nexport function noComponentFactoryError(component: Function) {\n  const error = Error(\n      `No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  (error as any)[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst ERROR_COMPONENT = 'ngComponent';\n\nexport function getComponent(error: Error): Type<any> {\n  return (error as any)[ERROR_COMPONENT];\n}\n\n\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n  resolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n\n/**\n * @publicApi\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n  abstract resolveComponentFactory<T>(component: Type<T>): ComponentFactory<T>;\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\n  private _factories = new Map<any, ComponentFactory<any>>();\n\n  constructor(\n      factories: ComponentFactory<any>[], private _parent: ComponentFactoryResolver,\n      private _ngModule: NgModuleRef<any>) {\n    for (let i = 0; i < factories.length; i++) {\n      const factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n\n  resolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let factory = this._factories.get(component);\n    if (!factory && this._parent) {\n      factory = this._parent.resolveComponentFactory(component);\n    }\n    if (!factory) {\n      throw noComponentFactoryError(component);\n    }\n    return new ComponentFactoryBoundToModule(factory, this._ngModule);\n  }\n}\n\nexport class ComponentFactoryBoundToModule<C> extends ComponentFactory<C> {\n  readonly selector: string;\n  readonly componentType: Type<any>;\n  readonly ngContentSelectors: string[];\n  readonly inputs: {propName: string, templateName: string}[];\n  readonly outputs: {propName: string, templateName: string}[];\n\n  constructor(private factory: ComponentFactory<C>, private ngModule: NgModuleRef<any>) {\n    super();\n    this.selector = factory.selector;\n    this.componentType = factory.componentType;\n    this.ngContentSelectors = factory.ngContentSelectors;\n    this.inputs = factory.inputs;\n    this.outputs = factory.outputs;\n  }\n\n  create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C> {\n    return this.factory.create(\n        injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ComponentFactoryResolver} from './component_factory_resolver';\n\n\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * @publicApi\n */\nexport abstract class NgModuleRef<T> {\n  /**\n   * The injector that contains all of the providers of the NgModule.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * The ComponentFactoryResolver to get hold of the ComponentFactories\n   * declared in the `entryComponents` property of the module.\n   */\n  abstract get componentFactoryResolver(): ComponentFactoryResolver;\n\n  /**\n   * The NgModule instance.\n   */\n  abstract get instance(): T;\n\n  /**\n   * Destroys the module instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Allows to register a callback that will be called when the module is destroyed.\n   */\n  abstract onDestroy(callback: () => void): void;\n}\n\nexport interface InternalNgModuleRef<T> extends NgModuleRef<T> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _bootstrapComponents: Type<any>[];\n}\n\n/**\n * @publicApi\n */\nexport abstract class NgModuleFactory<T> {\n  abstract get moduleType(): Type<T>;\n  abstract create(parentInjector: Injector|null): NgModuleRef<T>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {injectElementRef as render3InjectElementRef} from '../render3/view_engine_compatibility';\nimport {noop} from '../util/noop';\n\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nexport class ElementRef<T = any> {\n  /**\n   * The underlying native element or `null` if direct access to native elements is not supported\n   * (e.g. when the application runs in a web worker).\n   *\n   * <div class=\"callout is-critical\">\n   *   <header>Use with caution</header>\n   *   <p>\n   *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n   *    data-binding provided by Angular instead. Alternatively you can take a look at {@link\n   * Renderer2}\n   *    which provides API that can safely be used even when direct access to native elements is not\n   *    supported.\n   *   </p>\n   *   <p>\n   *    Relying on direct DOM access creates tight coupling between your application and rendering\n   *    layers which will make it impossible to separate the two and deploy your application into a\n   *    web worker.\n   *   </p>\n   * </div>\n   *\n   */\n  public nativeElement: T;\n\n  constructor(nativeElement: T) { this.nativeElement = nativeElement; }\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => ElementRef = () => SWITCH_ELEMENT_REF_FACTORY(ElementRef);\n}\n\nexport const SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = render3InjectElementRef;\nconst SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\nconst SWITCH_ELEMENT_REF_FACTORY: typeof render3InjectElementRef =\n    SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Injector} from '../di/injector';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {injectRenderer2 as render3InjectRenderer2} from '../render3/view_engine_compatibility';\nimport {noop} from '../util/noop';\n\n\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n * @publicApi\n */\nexport class RenderComponentType {\n  constructor(\n      public id: string, public templateUrl: string, public slotCount: number,\n      public encapsulation: ViewEncapsulation, public styles: Array<string|any[]>,\n      public animations: any) {}\n}\n\n/**\n * @deprecated Debug info is handled internally in the view engine now.\n */\nexport abstract class RenderDebugInfo {\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get source(): string;\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nexport interface DirectRenderer {\n  remove(node: any): void;\n  appendChild(node: any, parent: any): void;\n  insertBefore(node: any, refNode: any): void;\n  nextSibling(node: any): any;\n  parentElement(node: any): any;\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @publicApi\n */\nexport abstract class Renderer {\n  abstract selectRootElement(selectorOrNode: string|any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createElement(parentElement: any, name: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract createViewRoot(hostElement: any): any;\n\n  abstract createTemplateAnchor(parentElement: any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createText(parentElement: any, value: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract projectNodes(parentElement: any, nodes: any[]): void;\n\n  abstract attachViewAfter(node: any, viewRootNodes: any[]): void;\n\n  abstract detachView(viewRootNodes: any[]): void;\n\n  abstract destroyView(hostElement: any, viewAllNodes: any[]): void;\n\n  abstract listen(renderElement: any, name: string, callback: Function): Function;\n\n  abstract listenGlobal(target: string, name: string, callback: Function): Function;\n\n  abstract setElementProperty(renderElement: any, propertyName: string, propertyValue: any): void;\n\n  abstract setElementAttribute(renderElement: any, attributeName: string, attributeValue?: string):\n      void;\n\n  /**\n   * Used only in debug mode to serialize property changes to dom nodes as attributes.\n   */\n  abstract setBindingDebugInfo(renderElement: any, propertyName: string, propertyValue: string):\n      void;\n\n  abstract setElementClass(renderElement: any, className: string, isAdd: boolean): void;\n\n  abstract setElementStyle(renderElement: any, styleName: string, styleValue?: string): void;\n\n  abstract invokeElementMethod(renderElement: any, methodName: string, args?: any[]): void;\n\n  abstract setText(renderNode: any, text: string): void;\n\n  abstract animate(\n      element: any, startingStyles: any, keyframes: any[], duration: number, delay: number,\n      easing: string, previousPlayers?: any[]): any;\n}\n\nexport const Renderer2Interceptor = new InjectionToken<Renderer2[]>('Renderer2Interceptor');\n\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @publicApi\n */\nexport abstract class RootRenderer {\n  abstract renderComponent(componentType: RenderComponentType): Renderer;\n}\n\n/**\n * Used by `RendererFactory2` to associate custom rendering data and styles\n * with a rendering implementation.\n *  @publicApi\n */\nexport interface RendererType2 {\n  /**\n   * A unique identifying string for the new renderer, used when creating\n   * unique styles for encapsulation.\n   */\n  id: string;\n  /**\n   * The view encapsulation type, which determines how styles are applied to\n   * DOM elements. One of\n   * - `Emulated` (default): Emulate native scoping of styles.\n   * - `Native`: Use the native encapsulation mechanism of the renderer.\n   * - `ShadowDom`: Use modern [Shadow\n   * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * create a ShadowRoot for component's host element.\n   * - `None`: Do not provide any template or style encapsulation.\n   */\n  encapsulation: ViewEncapsulation;\n  /**\n   * Defines CSS styles to be stored on a renderer instance.\n   */\n  styles: (string|any[])[];\n  /**\n   * Defines arbitrary developer-defined data to be stored on a renderer instance.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  data: {[kind: string]: any};\n}\n\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * @publicApi\n */\nexport abstract class RendererFactory2 {\n  /**\n   * Creates and initializes a custom renderer for a host DOM element.\n   * @param hostElement The element to render.\n   * @param type The base class to implement.\n   * @returns The new custom renderer instance.\n   */\n  abstract createRenderer(hostElement: any, type: RendererType2|null): Renderer2;\n  /**\n   * A callback invoked when rendering has begun.\n   */\n  abstract begin?(): void;\n  /**\n   * A callback invoked when rendering has completed.\n   */\n  abstract end?(): void;\n  /**\n   * Use with animations test-only mode. Notifies the test when rendering has completed.\n   * @returns The asynchronous result of the developer-defined function.\n   */\n  abstract whenRenderingDone?(): Promise<any>;\n}\n\n/**\n * Flags for renderer-specific style modifiers.\n * @publicApi\n */\nexport enum RendererStyleFlags2 {\n  /**\n   * Marks a style as important.\n   */\n  Important = 1 << 0,\n  /**\n   * Marks a style as using dash case naming (this-is-dash-case).\n   */\n  DashCase = 1 << 1\n}\n\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * @publicApi\n */\nexport abstract class Renderer2 {\n  /**\n   * Use to store arbitrary developer-defined data on a renderer instance,\n   * as an object containing key-value pairs.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  abstract get data(): {[key: string]: any};\n\n  /**\n   * Implement this callback to destroy the renderer or the host element.\n   */\n  abstract destroy(): void;\n  /**\n   * Implement this callback to create an instance of the host element.\n   * @param name An identifying name for the new element, unique within the namespace.\n   * @param namespace The namespace for the new element.\n   * @returns The new element.\n   */\n  abstract createElement(name: string, namespace?: string|null): any;\n  /**\n   * Implement this callback to add a comment to the DOM of the host element.\n   * @param value The comment text.\n   * @returns The modified element.\n   */\n  abstract createComment(value: string): any;\n\n  /**\n   * Implement this callback to add text to the DOM of the host element.\n   * @param value The text string.\n   * @returns The modified element.\n   */\n  abstract createText(value: string): any;\n  /**\n   * If null or undefined, the view engine won't call it.\n   * This is used as a performance optimization for production mode.\n   */\n  // TODO(issue/24571): remove '!'.\n  destroyNode !: ((node: any) => void) | null;\n  /**\n   * Appends a child to a given parent node in the host element DOM.\n   * @param parent The parent node.\n   * @param newChild The new child node.\n   */\n  abstract appendChild(parent: any, newChild: any): void;\n  /**\n   * Implement this callback to insert a child node at a given position in a parent node\n   * in the host element DOM.\n   * @param parent The parent node.\n   * @param newChild The new child nodes.\n   * @param refChild The existing child node that should precede the new node.\n   */\n  abstract insertBefore(parent: any, newChild: any, refChild: any): void;\n  /**\n   * Implement this callback to remove a child node from the host element's DOM.\n   * @param parent The parent node.\n   * @param oldChild The child node to remove.\n   */\n  abstract removeChild(parent: any, oldChild: any): void;\n  /**\n   * Implement this callback to prepare an element to be bootstrapped\n   * as a root element, and return the element instance.\n   * @param selectorOrNode The DOM element.\n   * @param preserveContent Whether the contents of the root element\n   * should be preserved, or cleared upon bootstrap (default behavior).\n   * Use with `ViewEncapsulation.ShadowDom` to allow simple native\n   * content projection via `<slot>` elements.\n   * @returns The root element.\n   */\n  abstract selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any;\n  /**\n   * Implement this callback to get the parent of a given node\n   * in the host element's DOM.\n   * @param node The child node to query.\n   * @returns The parent node, or null if there is no parent.\n   * For WebWorkers, always returns true.\n   * This is because the check is synchronous,\n   * and the caller can't rely on checking for null.\n   */\n  abstract parentNode(node: any): any;\n  /**\n   * Implement this callback to get the next sibling node of a given node\n   * in the host element's DOM.\n   * @returns The sibling node, or null if there is no sibling.\n   * For WebWorkers, always returns a value.\n   * This is because the check is synchronous,\n   * and the caller can't rely on checking for null.\n   */\n  abstract nextSibling(node: any): any;\n  /**\n   * Implement this callback to set an attribute value for an element in the DOM.\n   * @param el The element.\n   * @param name The attribute name.\n   * @param value The new value.\n   * @param namespace The namespace.\n   */\n  abstract setAttribute(el: any, name: string, value: string, namespace?: string|null): void;\n\n  /**\n   * Implement this callback to remove an attribute from an element in the DOM.\n   * @param el The element.\n   * @param name The attribute name.\n   * @param namespace The namespace.\n   */\n  abstract removeAttribute(el: any, name: string, namespace?: string|null): void;\n  /**\n   * Implement this callback to add a class to an element in the DOM.\n   * @param el The element.\n   * @param name The class name.\n   */\n  abstract addClass(el: any, name: string): void;\n\n  /**\n   * Implement this callback to remove a class from an element in the DOM.\n   * @param el The element.\n   * @param name The class name.\n   */\n  abstract removeClass(el: any, name: string): void;\n\n  /**\n   * Implement this callback to set a CSS style for an element in the DOM.\n   * @param el The element.\n   * @param style The name of the style.\n   * @param value The new value.\n   * @param flags Flags for style variations. No flags are set by default.\n   */\n  abstract setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void;\n\n  /**\n   * Implement this callback to remove the value from a CSS style for an element in the DOM.\n   * @param el The element.\n   * @param style The name of the style.\n   * @param flags Flags for style variations to remove, if set. ???\n   */\n  abstract removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void;\n\n  /**\n   * Implement this callback to set the value of a property of an element in the DOM.\n   * @param el The element.\n   * @param name The property name.\n   * @param value The new value.\n   */\n  abstract setProperty(el: any, name: string, value: any): void;\n\n  /**\n   * Implement this callback to set the value of a node in the host element.\n   * @param node The node.\n   * @param value The new value.\n   */\n  abstract setValue(node: any, value: string): void;\n\n  /**\n   * Implement this callback to start an event listener.\n   * @param target The context in which to listen for events. Can be\n   * the entire window or document, the body of the document, or a specific\n   * DOM element.\n   * @param eventName The event to listen for.\n   * @param callback A handler function to invoke when the event occurs.\n   * @returns An \"unlisten\" function for disposing of this handler.\n   */\n  abstract listen(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => boolean | void): () => void;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => Renderer2 = () => SWITCH_RENDERER2_FACTORY();\n}\n\n\nexport const SWITCH_RENDERER2_FACTORY__POST_R3__ = render3InjectRenderer2;\nconst SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\nconst SWITCH_RENDERER2_FACTORY: typeof render3InjectRenderer2 = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n * @publicApi\n */\nexport enum SecurityContext {\n  NONE = 0,\n  HTML = 1,\n  STYLE = 2,\n  SCRIPT = 3,\n  URL = 4,\n  RESOURCE_URL = 5,\n}\n\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * @publicApi\n */\nexport abstract class Sanitizer {\n  abstract sanitize(context: SecurityContext, value: {}|string|null): string|null;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description Represents the version of Angular\n *\n * @publicApi\n */\nexport class Version {\n  public readonly major: string;\n  public readonly minor: string;\n  public readonly patch: string;\n\n  constructor(public full: string) {\n    this.major = full.split('.')[0];\n    this.minor = full.split('.')[1];\n    this.patch = full.split('.').slice(2).join('.');\n  }\n}\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('0.0.0-PLACEHOLDER');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n *\n * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n * please see [BAZEL.md](./docs/BAZEL.md).\n */\n\nlet _devMode: boolean = true;\nlet _runModeLocked: boolean = false;\n\n\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @publicApi\n */\nexport function isDevMode(): boolean {\n  _runModeLocked = true;\n  return _devMode;\n}\n\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * @publicApi\n */\nexport function enableProdMode(): void {\n  if (_runModeLocked) {\n    throw new Error('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nexport class InertBodyHelper {\n  private inertBodyElement: HTMLElement;\n  private inertDocument: Document;\n\n  constructor(private defaultDoc: Document) {\n    this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n    this.inertBodyElement = this.inertDocument.body;\n\n    if (this.inertBodyElement == null) {\n      // usually there should be only one body element in the document, but IE doesn't have any, so\n      // we need to create one.\n      const inertHtml = this.inertDocument.createElement('html');\n      this.inertDocument.appendChild(inertHtml);\n      this.inertBodyElement = this.inertDocument.createElement('body');\n      inertHtml.appendChild(this.inertBodyElement);\n    }\n\n    this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n    if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n      // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n      // so use the XHR strategy.\n      this.getInertBodyElement = this.getInertBodyElement_XHR;\n      return;\n    }\n\n    this.inertBodyElement.innerHTML =\n        '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n    if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n      // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n      // so use the DOMParser strategy, if it is available.\n      // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n      // fall through to the default strategy below.\n      if (isDOMParserAvailable()) {\n        this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n        return;\n      }\n    }\n\n    // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n    this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n  }\n\n  /**\n   * Get an inert DOM element containing DOM created from the dirty HTML string provided.\n   * The implementation of this is determined in the constructor, when the class is instantiated.\n   */\n  getInertBodyElement: (html: string) => HTMLElement | null;\n\n  /**\n   * Use XHR to create and fill an inert body element (on Safari 10.1)\n   * See\n   * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n   */\n  private getInertBodyElement_XHR(html: string) {\n    // We add these extra elements to ensure that the rest of the content is parsed as expected\n    // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n    // `<head>` tag.\n    html = '<body><remove></remove>' + html + '</body>';\n    try {\n      html = encodeURI(html);\n    } catch {\n      return null;\n    }\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = 'document';\n    xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n    xhr.send(undefined);\n    const body: HTMLBodyElement = xhr.response.body;\n    body.removeChild(body.firstChild !);\n    return body;\n  }\n\n  /**\n   * Use DOMParser to create and fill an inert body element (on Firefox)\n   * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n   *\n   */\n  private getInertBodyElement_DOMParser(html: string) {\n    // We add these extra elements to ensure that the rest of the content is parsed as expected\n    // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n    // `<head>` tag.\n    html = '<body><remove></remove>' + html + '</body>';\n    try {\n      const body = new (window as any)\n                       .DOMParser()\n                       .parseFromString(html, 'text/html')\n                       .body as HTMLBodyElement;\n      body.removeChild(body.firstChild !);\n      return body;\n    } catch {\n      return null;\n    }\n  }\n\n  /**\n   * Use an HTML5 `template` element, if supported, or an inert body element created via\n   * `createHtmlDocument` to create and fill an inert DOM element.\n   * This is the default sane strategy to use if the browser does not require one of the specialised\n   * strategies above.\n   */\n  private getInertBodyElement_InertDocument(html: string) {\n    // Prefer using <template> element if supported.\n    const templateEl = this.inertDocument.createElement('template');\n    if ('content' in templateEl) {\n      templateEl.innerHTML = html;\n      return templateEl;\n    }\n\n    this.inertBodyElement.innerHTML = html;\n\n    // Support: IE 9-11 only\n    // strip custom-namespaced attributes on IE<=11\n    if ((this.defaultDoc as any).documentMode) {\n      this.stripCustomNsAttrs(this.inertBodyElement);\n    }\n\n    return this.inertBodyElement;\n  }\n\n  /**\n   * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n   * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n   * 'ns1:xlink:foo').\n   *\n   * This is undesirable since we don't want to allow any of these custom attributes. This method\n   * strips them all.\n   */\n  private stripCustomNsAttrs(el: Element) {\n    const elAttrs = el.attributes;\n    // loop backwards so that we can support removals.\n    for (let i = elAttrs.length - 1; 0 < i; i--) {\n      const attrib = elAttrs.item(i);\n      const attrName = attrib !.name;\n      if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n        el.removeAttribute(attrName);\n      }\n    }\n    let childNode = el.firstChild as Node | null;\n    while (childNode) {\n      if (childNode.nodeType === Node.ELEMENT_NODE) this.stripCustomNsAttrs(childNode as Element);\n      childNode = childNode.nextSibling;\n    }\n  }\n}\n\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n  try {\n    return !!(window as any).DOMParser;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../is_dev_mode';\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/* A pattern that matches safe srcset values */\nconst SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nconst DATA_URL_PATTERN =\n    /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n\nexport function _sanitizeUrl(url: string): string {\n  url = String(url);\n  if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN)) return url;\n\n  if (isDevMode()) {\n    console.warn(`WARNING: sanitizing unsafe URL value ${url} (see http://g.co/ng/security#xss)`);\n  }\n\n  return 'unsafe:' + url;\n}\n\nexport function sanitizeSrcset(srcset: string): string {\n  srcset = String(srcset);\n  return srcset.split(',').map((srcset) => _sanitizeUrl(srcset.trim())).join(', ');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../is_dev_mode';\nimport {InertBodyHelper} from './inert_body';\nimport {_sanitizeUrl, sanitizeSrcset} from './url_sanitizer';\n\nfunction tagSet(tags: string): {[k: string]: boolean} {\n  const res: {[k: string]: boolean} = {};\n  for (const t of tags.split(',')) res[t] = true;\n  return res;\n}\n\nfunction merge(...sets: {[k: string]: boolean}[]): {[k: string]: boolean} {\n  const res: {[k: string]: boolean} = {};\n  for (const s of sets) {\n    for (const v in s) {\n      if (s.hasOwnProperty(v)) res[v] = true;\n    }\n  }\n  return res;\n}\n\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nconst VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nconst OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nconst OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nconst OPTIONAL_END_TAG_ELEMENTS =\n    merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n\n// Safe Block Elements - HTML5\nconst BLOCK_ELEMENTS = merge(\n    OPTIONAL_END_TAG_BLOCK_ELEMENTS,\n    tagSet(\n        'address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n\n// Inline Elements - HTML5\nconst INLINE_ELEMENTS = merge(\n    OPTIONAL_END_TAG_INLINE_ELEMENTS,\n    tagSet(\n        'a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n\nexport const VALID_ELEMENTS =\n    merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n\n// Attributes that have href and hence need to be sanitized\nexport const URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n\n// Attributes that have special href set hence need to be sanitized\nexport const SRCSET_ATTRS = tagSet('srcset');\n\nconst HTML_ATTRS = tagSet(\n    'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\n\nexport const VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nclass SanitizingHtmlSerializer {\n  // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n  // because characters were re-encoded.\n  public sanitizedSomething = false;\n  private buf: string[] = [];\n\n  sanitizeChildren(el: Element): string {\n    // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n    // However this code never accesses properties off of `document` before deleting its contents\n    // again, so it shouldn't be vulnerable to DOM clobbering.\n    let current: Node = el.firstChild !;\n    let elementValid = true;\n    while (current) {\n      if (current.nodeType === Node.ELEMENT_NODE) {\n        elementValid = this.startElement(current as Element);\n      } else if (current.nodeType === Node.TEXT_NODE) {\n        this.chars(current.nodeValue !);\n      } else {\n        // Strip non-element, non-text nodes.\n        this.sanitizedSomething = true;\n      }\n      if (elementValid && current.firstChild) {\n        current = current.firstChild !;\n        continue;\n      }\n      while (current) {\n        // Leaving the element. Walk up and to the right, closing tags as we go.\n        if (current.nodeType === Node.ELEMENT_NODE) {\n          this.endElement(current as Element);\n        }\n\n        let next = this.checkClobberedElement(current, current.nextSibling !);\n\n        if (next) {\n          current = next;\n          break;\n        }\n\n        current = this.checkClobberedElement(current, current.parentNode !);\n      }\n    }\n    return this.buf.join('');\n  }\n\n  /**\n   * Outputs only valid Elements.\n   *\n   * Invalid elements are skipped.\n   *\n   * @param element element to sanitize\n   * Returns true if the element is valid.\n   */\n  private startElement(element: Element): boolean {\n    const tagName = element.nodeName.toLowerCase();\n    if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.sanitizedSomething = true;\n      return false;\n    }\n    this.buf.push('<');\n    this.buf.push(tagName);\n    const elAttrs = element.attributes;\n    for (let i = 0; i < elAttrs.length; i++) {\n      const elAttr = elAttrs.item(i);\n      const attrName = elAttr !.name;\n      const lower = attrName.toLowerCase();\n      if (!VALID_ATTRS.hasOwnProperty(lower)) {\n        this.sanitizedSomething = true;\n        continue;\n      }\n      let value = elAttr !.value;\n      // TODO(martinprobst): Special case image URIs for data:image/...\n      if (URI_ATTRS[lower]) value = _sanitizeUrl(value);\n      if (SRCSET_ATTRS[lower]) value = sanitizeSrcset(value);\n      this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n    }\n    this.buf.push('>');\n    return true;\n  }\n\n  private endElement(current: Element) {\n    const tagName = current.nodeName.toLowerCase();\n    if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.buf.push('</');\n      this.buf.push(tagName);\n      this.buf.push('>');\n    }\n  }\n\n  private chars(chars: string) { this.buf.push(encodeEntities(chars)); }\n\n  checkClobberedElement(node: Node, nextNode: Node): Node {\n    if (nextNode &&\n        (node.compareDocumentPosition(nextNode) &\n         Node.DOCUMENT_POSITION_CONTAINED_BY) ===Â Node.DOCUMENT_POSITION_CONTAINED_BY) {\n      throw new Error(\n          `Failed to sanitize html because the element is clobbered: ${(node as Element).outerHTML}`);\n    }\n    return nextNode;\n  }\n}\n\n// Regular Expressions for parsing tags and attributes\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value: string) {\n  return value.replace(/&/g, '&amp;')\n      .replace(\n          SURROGATE_PAIR_REGEXP,\n          function(match: string) {\n            const hi = match.charCodeAt(0);\n            const low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n          })\n      .replace(\n          NON_ALPHANUMERIC_REGEXP,\n          function(match: string) { return '&#' + match.charCodeAt(0) + ';'; })\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n}\n\nlet inertBodyHelper: InertBodyHelper;\n\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nexport function _sanitizeHtml(defaultDoc: any, unsafeHtmlInput: string): string {\n  let inertBodyElement: HTMLElement|null = null;\n  try {\n    inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n    // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n    let unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n    inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n\n    // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n    // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n    let mXSSAttempts = 5;\n    let parsedHtml = unsafeHtml;\n\n    do {\n      if (mXSSAttempts === 0) {\n        throw new Error('Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      unsafeHtml = parsedHtml;\n      parsedHtml = inertBodyElement !.innerHTML;\n      inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n    } while (unsafeHtml !== parsedHtml);\n\n    const sanitizer = new SanitizingHtmlSerializer();\n    const safeHtml = sanitizer.sanitizeChildren(\n        getTemplateContent(inertBodyElement !) as Element || inertBodyElement);\n    if (isDevMode() && sanitizer.sanitizedSomething) {\n      console.warn(\n          'WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n    }\n\n    return safeHtml;\n  } finally {\n    // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n    if (inertBodyElement) {\n      const parent = getTemplateContent(inertBodyElement) || inertBodyElement;\n      while (parent.firstChild) {\n        parent.removeChild(parent.firstChild);\n      }\n    }\n  }\n}\n\nexport function getTemplateContent(el: Node): Node|null {\n  return 'content' in (el as any /** Microsoft/TypeScript#21517 */) && isTemplateElement(el) ?\n      el.content :\n      null;\n}\nfunction isTemplateElement(el: Node): el is HTMLTemplateElement {\n  return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; });\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nfunction UnsubscriptionErrorImpl(this: any, errors: any[]) {\n  Error.call(this);\n  this.message = errors ?\n  `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n  this.name = 'UnsubscriptionError';\n  this.errors = errors;\n  return this;\n}\n\nUnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parent: Subscription = null;\n  /** @internal */\n  protected _parents: Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  /** @internal */\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber =\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  private _parentSubscription: Subscription | null = null;\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    this._parentSubscription = null;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { root } from '../util/root';\n\n/** Symbol.observable addition */\n/* Note: This will add Symbol.observable globally for all TypeScript users,\n  however, we are no longer polyfilling Symbol.observable */\ndeclare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\n\n/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```javascript\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```javascript\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```javascript\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```javascript\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","import { noop } from './noop';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nfunction ObjectUnsubscribedErrorImpl(this: any) {\n  Error.call(this);\n  this.message = 'object unsubscribed';\n  this.name = 'ObjectUnsubscribedError';\n  return this;\n}\n\nObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observables. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  if (!subscriber.closed) {\n    subscriber.complete();\n  }\n};\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      let i = 0;\n      sub.add(scheduler.schedule(function () {\n        if (i === input.length) {\n          subscriber.complete();\n          return;\n        }\n        subscriber.next(input[i++]);\n        if (!subscriber.closed) {\n          sub.add(this.schedule());\n        }\n      }));\n      return sub;\n    });\n  }\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nfunction EmptyErrorImpl(this: any) {\n  Error.call(this);\n  this.message = 'no elements in sequence';\n  this.name = 'EmptyError';\n  return this;\n}\n\nEmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","export function isPromise(value: any): value is PromiseLike<any> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>) => {\n  if (result instanceof Observable) {\n    return (subscriber: Subscriber<T>) => {\n        if (result._isScalar) {\n        subscriber.next((result as any).value);\n        subscriber.complete();\n        return undefined;\n      } else {\n        return result.subscribe(subscriber);\n      }\n    };\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, resultSelector: undefined, concurrent?: number): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```javascript\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, I|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    subscribeToResult<T, R>(this, ish, value, index, innerSubscriber);\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { ObservableInput } from '../types';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  destination?: Subscriber<any>\n): Subscription;\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | void {\n  if (destination.closed) {\n    return;\n  }\n  return subscribeTo(result)(destination);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Subject, Subscription} from 'rxjs';\n\n/**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * @usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * @publicApi\n */\nexport class EventEmitter<T> extends Subject<T> {\n  // TODO: mark this as internal once all the facades are gone\n  // we can't mark it as internal now because EventEmitter exported via @angular/core would not\n  // contain this property making it incompatible with all the code that uses EventEmitter via\n  // facades, which are local to the code and do not have this property stripped.\n  /**\n   * Internal\n   */\n  __isAsync: boolean;  // tslint:disable-line\n\n  /**\n   * Creates an instance of this class that can\n   * deliver events synchronously or asynchronously.\n   *\n   * @param isAsync When true, deliver events asynchronously.\n   *\n   */\n  constructor(isAsync: boolean = false) {\n    super();\n    this.__isAsync = isAsync;\n  }\n\n  /**\n   * Emits an event containing a given value.\n   * @param value The value to emit.\n   */\n  emit(value?: T) { super.next(value); }\n\n  /**\n   * Registers handlers for events emitted by this instance.\n   * @param generatorOrNext When supplied, a custom handler for emitted events.\n   * @param error When supplied, a custom handler for an error notification\n   * from this emitter.\n   * @param complete When supplied, a custom handler for a completion\n   * notification from this emitter.\n   */\n  subscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n    let schedulerFn: (t: any) => any;\n    let errorFn = (err: any): any => null;\n    let completeFn = (): any => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this.__isAsync ? (value: any) => {\n        setTimeout(() => generatorOrNext.next(value));\n      } : (value: any) => { generatorOrNext.next(value); };\n\n      if (generatorOrNext.error) {\n        errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                                   (err) => { generatorOrNext.error(err); };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                                      () => { generatorOrNext.complete(); };\n      }\n    } else {\n      schedulerFn = this.__isAsync ? (value: any) => { setTimeout(() => generatorOrNext(value)); } :\n                                     (value: any) => { generatorOrNext(value); };\n\n      if (error) {\n        errorFn =\n            this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n      }\n\n      if (complete) {\n        completeFn =\n            this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n      }\n    }\n\n    const sink = super.subscribe(schedulerFn, errorFn, completeFn);\n\n    if (generatorOrNext instanceof Subscription) {\n      generatorOrNext.add(sink);\n    }\n\n    return sink;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {injectTemplateRef as render3InjectTemplateRef} from '../render3/view_engine_compatibility';\nimport {noop} from '../util/noop';\n\nimport {ElementRef} from './element_ref';\nimport {EmbeddedViewRef} from './view_ref';\n\n\n/**\n * Represents an embedded template that can be used to instantiate embedded views.\n * To instantiate embedded views based on a template, use the `ViewContainerRef`\n * method `createEmbeddedView()`.\n *\n * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n * is injected into the constructor of the directive,\n * using the `TemplateRef` token.\n *\n * You can also use a `Query` to find a `TemplateRef` associated with\n * a component or a directive.\n *\n * @see `ViewContainerRef`\n * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n *\n * @publicApi\n */\nexport abstract class TemplateRef<C> {\n  /**\n   * The anchor element in the parent view for this embedded view.\n   *\n   * The data-binding and injection contexts of embedded views created from this `TemplateRef`\n   * inherit from the contexts of this location.\n   *\n   * Typically new embedded views are attached to the view container of this location, but in\n   * advanced use-cases, the view can be attached to a different container while keeping the\n   * data-binding and injection context from the original location.\n   *\n   */\n  // TODO(i): rename to anchor or location\n  abstract get elementRef(): ElementRef;\n\n  /**\n   * Creates a view object and attaches it to the view container of the parent view.\n   * @param context The context for the new view, inherited from the anchor element.\n   * @returns The new view object.\n   */\n  abstract createEmbeddedView(context: C): EmbeddedViewRef<C>;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__:\n      () => TemplateRef<any>| null = () => SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef)\n}\n\nexport const SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = render3InjectTemplateRef;\nconst SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\nconst SWITCH_TEMPLATE_REF_FACTORY: typeof render3InjectTemplateRef =\n    SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../is_dev_mode';\nimport {_sanitizeUrl} from './url_sanitizer';\n\n\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nconst VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nconst TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nconst COLOR_FNS = '(?:rgb|hsl)a?';\nconst GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nconst CSS3_FNS = '(?:calc|attr)';\nconst FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nconst SAFE_STYLE_VALUE = new RegExp(\n    `^(${VALUES}|` +\n        `(?:${TRANSFORMATION_FNS}|${COLOR_FNS}|${GRADIENTS}|${CSS3_FNS})` +\n        `${FN_ARGS})$`,\n    'g');\n\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nconst URL_RE = /^url\\(([^)]+)\\)$/;\n\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value: string) {\n  let outsideSingle = true;\n  let outsideDouble = true;\n  for (let i = 0; i < value.length; i++) {\n    const c = value.charAt(i);\n    if (c === '\\'' && outsideDouble) {\n      outsideSingle = !outsideSingle;\n    } else if (c === '\"' && outsideSingle) {\n      outsideDouble = !outsideDouble;\n    }\n  }\n  return outsideSingle && outsideDouble;\n}\n\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nexport function _sanitizeStyle(value: string): string {\n  value = String(value).trim();  // Make sure it's actually a string.\n  if (!value) return '';\n\n  // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n  // reasoning behind this.\n  const urlMatch = value.match(URL_RE);\n  if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n      value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n    return value;  // Safe style values.\n  }\n\n  if (isDevMode()) {\n    console.warn(\n        `WARNING: sanitizing unsafe style value ${value} (see http://g.co/ng/security#xss).`);\n  }\n\n  return 'unsafe';\n}\n\n\n/**\n * Used to intercept and sanitize style values before they are written to the renderer.\n *\n * This function is designed to be called in two modes. When a value is not provided\n * then the function will return a boolean whether a property will be sanitized later.\n * If a value is provided then the sanitized version of that will be returned.\n */\nexport interface StyleSanitizeFn {\n  /** This mode is designed to instruct whether the property will be used for sanitization\n   * at a later point */\n  (prop: string): boolean;\n  /** This mode is designed to sanitize the provided value */\n  (prop: string, value: string): string;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * @publicApi\n */\nexport const Type = Function;\n\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport interface Type<T> extends Function { new (...args: any[]): T; }\n\nexport type Mutable<T extends{[x: string]: any}, K extends string> = {\n  [P in K]: T[P];\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {ANNOTATIONS, PARAMETERS, PROP_METADATA} from '../util/decorators';\n\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\n\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nexport const DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nexport const INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\nexport const INHERITED_CLASS_WITH_CTOR =\n    /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\n  private _reflect: any;\n\n  constructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n\n  isReflectionEnabled(): boolean { return true; }\n\n  factory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n\n  /** @internal */\n  _zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n\n  private _ownParameters(type: Type<any>, parentCtor: any): any[][]|null {\n    const typeStr = type.toString();\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(typeStr) ||\n        (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if ((<any>type).parameters && (<any>type).parameters !== parentCtor.parameters) {\n      return (<any>type).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const tsickleCtorParams = (<any>type).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    const paramAnnotations = type.hasOwnProperty(PARAMETERS) && (type as any)[PARAMETERS];\n    const paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n        this._reflect.getOwnMetadata('design:paramtypes', type);\n    if (paramTypes || paramAnnotations) {\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array((<any>type.length)).fill(undefined);\n  }\n\n  parameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(type);\n    let parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n\n  private _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[]|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).annotations && (<any>typeOrFunc).annotations !== parentCtor.annotations) {\n      let annotations = (<any>typeOrFunc).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).decorators && (<any>typeOrFunc).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata((<any>typeOrFunc).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n      return (typeOrFunc as any)[ANNOTATIONS];\n    }\n    return null;\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n\n  private _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]}|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).propMetadata &&\n        (<any>typeOrFunc).propMetadata !== parentCtor.propMetadata) {\n      let propMetadata = (<any>typeOrFunc).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).propDecorators &&\n        (<any>typeOrFunc).propDecorators !== parentCtor.propDecorators) {\n      const propDecorators = (<any>typeOrFunc).propDecorators;\n      const propMetadata = <{[key: string]: any[]}>{};\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n      return (typeOrFunc as any)[PROP_METADATA];\n    }\n    return null;\n  }\n\n  propMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n\n  guards(type: any): {[key: string]: any} { return {}; }\n\n  getter(name: string): GetterFn { return <GetterFn>new Function('o', 'return o.' + name + ';'); }\n\n  setter(name: string): SetterFn {\n    return <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;');\n  }\n\n  method(name: string): MethodFn {\n    const functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return <MethodFn>new Function('o', 'args', functionBody);\n  }\n\n  // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n  importUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n\n  resourceUri(type: any): string { return `./${stringify(type)}`; }\n\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n  resolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const decoratorType = decoratorInvocation.type;\n    const annotationCls = decoratorType.annotationCls;\n    const annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n\nfunction getParentCtor(ctor: Function): Type<any> {\n  const parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n  const parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {Provider} from '../di';\nimport {NG_BASE_DEF} from '../render3/fields';\nimport {compileComponent as render3CompileComponent, compileDirective as render3CompileDirective} from '../render3/jit/directive';\nimport {compilePipe as render3CompilePipe} from '../render3/jit/pipe';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator, makePropDecorator} from '../util/decorators';\nimport {noop} from '../util/noop';\nimport {fillProperties} from '../util/property';\n\nimport {ViewEncapsulation} from './view';\n\n\n\n/**\n * Type of the Directive decorator / constructor function.\n * @publicApi\n */\nexport interface DirectiveDecorator {\n  /**\n   * Marks a class as an Angular directive. You can define your own\n   * directives to attach custom behavior to elements in the DOM.\n   * The options provide configuration metadata that determines\n   * how the directive should be processed, instantiated and used at\n   * runtime.\n   *\n   * Directive classes, like component classes, can implement\n   * [life-cycle hooks](guide/lifecycle-hooks) to influence their configuration and behavior.\n   *\n   *\n   * @usageNotes\n   * To define a directive, mark the class with the decorator and provide metadata.\n   *\n   * ```\n   * import {Directive} from '@angular/core';\n   *\n   * @Directive({\n   *   selector: 'my-directive',\n   * })\n   * export class MyDirective {\n   * ...\n   * }\n   * ```\n   *\n   * ### Declaring directives\n   *\n   * Directives are [declarables](guide/glossary#declarable).\n   * They must be declared by an NgModule\n   * in order to be usable in an app.\n   *\n   * A directive must belong to exactly one NgModule. Do not re-declare\n   * a directive imported from another module.\n   * List the directive class in the `declarations` field of an NgModule.\n   *\n   * ```\n   * declarations: [\n   *  AppComponent,\n   *  MyDirective\n   * ],\n   * ```\n   *\n   * @Annotation\n   */\n  (obj: Directive): TypeDecorator;\n\n  /**\n   * See the `Directive` decorator.\n   */\n  new (obj: Directive): Directive;\n}\n\n/**\n * Directive decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport interface Directive {\n  /**\n   * The CSS selector that identifies this directive in a template\n   * and triggers instantiation of the directive.\n   *\n   * Declare as one of the following:\n   *\n   * - `element-name`: Select by element name.\n   * - `.class`: Select by class name.\n   * - `[attribute]`: Select by attribute name.\n   * - `[attribute=value]`: Select by attribute name and value.\n   * - `:not(sub_selector)`: Select only if the element does not match the `sub_selector`.\n   * - `selector1, selector2`: Select if either `selector1` or `selector2` matches.\n   *\n   * Angular only allows directives to apply on CSS selectors that do not cross\n   * element boundaries.\n   *\n   * For the following template HTML, a directive with an `input[type=text]` selector,\n   * would be instantiated only on the `<input type=\"text\">` element.\n   *\n   * ```html\n   * <form>\n   *   <input type=\"text\">\n   *   <input type=\"radio\">\n   * <form>\n   * ```\n   *\n   */\n  selector?: string;\n\n  /**\n   * Enumerates the set of data-bound input properties for a directive\n   *\n   * Angular automatically updates input properties during change detection.\n   * The `inputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property where the value is written.\n   * - `bindingProperty` specifies the DOM property where the value is read from.\n   *\n   * When `bindingProperty` is not provided, it is assumed to be equal to `directiveProperty`.\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * The following example creates a component with two data-bound properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   inputs: ['bankName', 'id: account-id'],\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   bankName: string;\n   *   id: string;\n   *\n   * ```\n   *\n   */\n  inputs?: string[];\n\n  /**\n   * Enumerates the set of event-bound output properties.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * in the template is invoked.\n   *\n   * The `outputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property that emits events.\n   * - `bindingProperty` specifies the DOM property the event handler is attached to.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   * ```\n   *\n   */\n  outputs?: string[];\n\n  /**\n   * Configures the [injector](guide/glossary#injector) of this\n   * directive or component with a [token](guide/glossary#di-token)\n   * that maps to a [provider](guide/glossary#provider) of a dependency.\n   */\n  providers?: Provider[];\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * @usageNotes\n   *\n   * ### Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   * ```\n   *\n   */\n  exportAs?: string;\n\n  /**\n   * Configures the queries that will be injected into the directive.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * The following example shows how queries are defined\n   * and when their results are available in lifecycle hooks:\n   *\n   * ```\n   * @Component({\n   *   selector: 'someDir',\n   *   queries: {\n   *     contentChildren: new ContentChildren(ChildDirective),\n   *     viewChildren: new ViewChildren(ChildDirective)\n   *   },\n   *   template: '<child-directive></child-directive>'\n   * })\n   * class SomeDir {\n   *   contentChildren: QueryList<ChildDirective>,\n   *   viewChildren: QueryList<ChildDirective>\n   *\n   *   ngAfterContentInit() {\n   *     // contentChildren is set\n   *   }\n   *\n   *   ngAfterViewInit() {\n   *     // viewChildren is set\n   *   }\n   * }\n   * ```\n   *\n   * @Annotation\n   */\n  queries?: {[key: string]: any};\n\n  /**\n   * Maps class properties to host element bindings for properties,\n   * attributes, and events, using a set of key-value pairs.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, Angular updates the directive's host element.\n   *\n   * When the key is a property of the host element, the property value is\n   * the propagated to the specified DOM property.\n   *\n   * When the key is a static attribute in the DOM, the attribute value\n   * is propagated to the specified property in the host element.\n   *\n   * For event handling:\n   * - The key is the DOM event that the directive listens to.\n   * To listen to global events, add the target to the event name.\n   * The target can be `window`, `document` or `body`.\n   * - The value is the statement to execute when the event occurs. If the\n   * statement evalueates to `false`, then `preventDefault` is applied on the DOM\n   * event. A handler method can refer to the `$event` local variable.\n   *\n   */\n  host?: {[key: string]: string};\n\n  /**\n   * If true, this directive/component will be skipped by the AOT compiler and so will always be\n   * compiled using JIT.\n   *\n   * This exists to support future Ivy work and has no effect currently.\n   */\n  jit?: true;\n}\n\n/**\n * Type of the Directive metadata.\n *\n * @publicApi\n */\nexport const Directive: DirectiveDecorator = makeDecorator(\n    'Directive', (dir: Directive = {}) => dir, undefined, undefined,\n    (type: Type<any>, meta: Directive) => SWITCH_COMPILE_DIRECTIVE(type, meta));\n\n/**\n * Component decorator interface\n *\n * @publicApi\n */\nexport interface ComponentDecorator {\n  /**\n   * Decorator that marks a class as an Angular component and provides configuration\n   * metadata that determines how the component should be processed,\n   * instantiated, and used at runtime.\n   *\n   * Components are the most basic UI building block of an Angular app.\n   * An Angular app contains a tree of Angular components.\n   *\n   * Angular components are a subset of directives, always associated with a template.\n   * Unlike other directives, only one component can be instantiated per an element in a template.\n   *\n   * A component must belong to an NgModule in order for it to be available\n   * to another component or application. To make it a member of an NgModule,\n   * list it in the `declarations` field of the `@NgModule` metadata.\n   *\n   * Note that, in addition to these options for configuring a directive,\n   * you can control a component's runtime behavior by implementing\n   * life-cycle hooks. For more information, see the\n   * [Lifecycle Hooks](guide/lifecycle-hooks) guide.\n   *\n   * @usageNotes\n   *\n   * ### Setting component inputs\n   *\n   * The following example creates a component with two data-bound properties,\n   * specified by the `inputs` value.\n   *\n   * <code-example path=\"core/ts/metadata/directives.ts\" region=\"component-input\">\n   * </code-example>\n   *\n   *\n   * ### Setting component outputs\n   *\n   * The following example shows two event emitters that emit on an interval. One\n   * emits an output every second, while the other emits every five seconds.\n   *\n   * {@example core/ts/metadata/directives.ts region='component-output-interval'}\n   *\n   * ### Injecting a class with a view provider\n   *\n   * The following simple example injects a class into a component\n   * using the view provider specified in component metadata:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'needs-greeter'\n   * })\n   * class NeedsGreeter {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'greet',\n   *   viewProviders: [\n   *     Greeter\n   *   ],\n   *   template: `<needs-greeter></needs-greeter>`\n   * })\n   * class HelloWorld {\n   * }\n   *\n   * ```\n   *\n   * ### Preserving whitespace\n   *\n   * Removing whitespace can greatly reduce AOT-generated code size and speed up view creation.\n   * As of Angular 6, the default for `preserveWhitespaces` is false (whitespace is removed).\n   * To change the default setting for all components in your application, set\n   * the `preserveWhitespaces` option of the AOT compiler.\n   *\n   * By default, the AOT compiler removes whitespace characters as follows:\n   * * Trims all whitespaces at the beginning and the end of a template.\n   * * Removes whitespace-only text nodes. For example,\n   *\n   * ```\n   * <button>Action 1</button>  <button>Action 2</button>\n   * ```\n   *\n   * becomes:\n   *\n   * ```\n   * <button>Action 1</button><button>Action 2</button>\n   * ```\n   *\n   * * Replaces a series of whitespace characters in text nodes with a single space.\n   * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n   * * Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n   * where whitespace characters are significant.\n   *\n   * Note that these transformations can influence DOM nodes layout, although impact\n   * should be minimal.\n   *\n   * You can override the default behavior to preserve whitespace characters\n   * in certain fragments of a template. For example, you can exclude an entire\n   * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n   *\n   * ```html\n   * <div ngPreserveWhitespaces>\n   *     whitespaces are preserved here\n   *     <span>    and here </span>\n   * </div>\n   * ```\n   *\n   * You can force a single space to be preserved in a text node by using `&ngsp;`,\n   * which is replaced with a space character by Angular's template\n   * compiler:\n   *\n   * ```html\n   * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n   * <!-->compiled to be equivalent to:</>\n   *  <a>Spaces</a> <a>between</a> <a>links.</a>\n   * ```\n   *\n   * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n   * the `preserveWhitespaces` option is set to `false`.\n   *\n   * ```html\n   * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n   * <!-->compiled to be equivalent to:</>\n   *  <a>Spaces</a> <a>between</a> <a>links.</a>\n   * ```\n   *\n   * To preserve sequences of whitespace characters, use the\n   * `ngPreserveWhitespaces` attribute.\n   *\n   * @Annotation\n   */\n  (obj: Component): TypeDecorator;\n  /**\n   * See the `@Component` decorator.\n   */\n  new (obj: Component): Component;\n}\n\n/**\n * Supplies configuration metadata for an Angular component.\n *\n * @publicApi\n */\nexport interface Component extends Directive {\n  /**\n   * The change-detection strategy to use for this component.\n   *\n   * When a component is instantiated, Angular creates a change detector,\n   * which is responsible for propagating the component's bindings.\n   * The strategy is one of:\n   * - `ChangeDetectionStrategy#OnPush` sets the strategy to `CheckOnce` (on demand).\n   * - `ChangeDetectionStrategy#Default` sets the strategy to `CheckAlways`.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Defines the set of injectable objects that are visible to its view DOM children.\n   * See [example](#injecting-a-class-with-a-view-provider).\n   *\n   */\n  viewProviders?: Provider[];\n\n  /**\n   * The module ID of the module that contains the component.\n   * The component must be able to resolve relative URLs for templates and styles.\n   * SystemJS exposes the `__moduleName` variable within each module.\n   * In CommonJS, this can  be set to `module.id`.\n   *\n   */\n  moduleId?: string;\n\n  /**\n   * The URL of a template file for an Angular component. If provided,\n   * do not supply an inline template using `template`.\n   *\n   */\n  templateUrl?: string;\n\n  /**\n   * An inline template for an Angular component. If provided,\n   * do not supply a template file using `templateUrl`.\n   *\n   */\n  template?: string;\n\n  /**\n   * One or more URLs for files containing CSS stylesheets to use\n   * in this component.\n   */\n  styleUrls?: string[];\n\n  /**\n   * One or more inline CSS stylesheets to use\n   * in this component.\n   */\n  styles?: string[];\n\n  /**\n   * One or more animation `trigger()` calls, containing\n   * `state()` and `transition()` definitions.\n   * See the [Animations guide](/guide/animations) and animations API documentation.\n   *\n   */\n  animations?: any[];\n\n  /**\n   * An encapsulation policy for the template and CSS styles. One of:\n   * - `ViewEncapsulation.Native`: Use shadow roots. This works\n   * only if natively available on the platform.\n   * - `ViewEncapsulation.Emulated`: Use shimmed CSS that\n   * emulates the native behavior.\n   * - `ViewEncapsulation.None`: Use global CSS without any\n   * encapsulation.\n   *\n   * If not supplied, the value is taken from `CompilerOptions`. The default compiler option is\n   * `ViewEncapsulation.Emulated`.\n   *\n   * If the policy is set to `ViewEncapsulation.Emulated` and the component has no `styles`\n   * or `styleUrls` specified, the policy is automatically switched to `ViewEncapsulation.None`.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Overrides the default encapsulation start and end delimiters (`{{` and `}}`)\n   */\n  interpolation?: [string, string];\n\n  /**\n   * A set of components that should be compiled along with\n   * this component. For each component listed here,\n   * Angular creates a {@link ComponentFactory} and stores it in the\n   * {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * True to preserve or false to remove potentially superfluous whitespace characters\n   * from the compiled template. Whitespace characters are those matching the `\\s`\n   * character class in JavaScript regular expressions. Default is false, unless\n   * overridden in compiler options.\n   */\n  preserveWhitespaces?: boolean;\n}\n\n/**\n * Component decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Component: ComponentDecorator = makeDecorator(\n    'Component', (c: Component = {}) => ({changeDetection: ChangeDetectionStrategy.Default, ...c}),\n    Directive, undefined,\n    (type: Type<any>, meta: Component) => SWITCH_COMPILE_COMPONENT(type, meta));\n\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * @publicApi\n */\nexport interface PipeDecorator {\n  /**\n   * Declares a reusable pipe function, and supplies configuration metadata.\n   *\n   */\n  (obj: Pipe): TypeDecorator;\n\n  /**\n   * See the `Pipe` decorator.\n   */\n  new (obj: Pipe): Pipe;\n}\n\n/**\n * Type of the Pipe metadata.\n *\n * @publicApi\n */\nexport interface Pipe {\n  /**\n   * The pipe name to use in template bindings.\n   *\n   */\n  name: string;\n\n  /**\n   * When true, the pipe is pure, meaning that the\n   * `transform()` method is invoked only when its input arguments\n   * change. Pipes are pure by default.\n   *\n   * If the pipe has internal state (that is, the result\n   * depends on state other than its arguments), set `pure` to false.\n   * In this case, the pipe is invoked on each change-detection cycle,\n   * even if the arguments have not changed.\n   */\n  pure?: boolean;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Pipe: PipeDecorator = makeDecorator(\n    'Pipe', (p: Pipe) => ({pure: true, ...p}), undefined, undefined,\n    (type: Type<any>, meta: Pipe) => SWITCH_COMPILE_PIPE(type, meta));\n\n\n/**\n * @publicApi\n */\nexport interface InputDecorator {\n  /**\n   * Decorator that marks a class as pipe and supplies configuration metadata.\n   *\n   * A pipe class must implement the `PipeTransform` interface.\n   * For example, if the name is \"myPipe\", use a template binding expression\n   * such as the following:\n   *\n   * ```\n   * {{ exp | myPipe }}\n   * ```\n   *\n   * The result of the expression is passed to the pipe's `transform()` method.\n   *\n   * A pipe must belong to an NgModule in order for it to be available\n   * to a template. To make it a member of an NgModule,\n   * list it in the `declarations` field of the `@NgModule` metadata.\n   *\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of metadata for an `Input` property.\n *\n * @publicApi\n */\nexport interface Input {\n  /**\n   * Decorator that marks a class field as an input property and supplies configuration metadata.\n   * Declares a data-bound input property, which Angular automatically updates\n   * during change detection.\n   *\n   * @usageNotes\n   *\n   * You can supply an optional name to use in templates when the\n   * component is instantiated, that maps to the\n   * name of the bound property. By default, the original\n   * name of the bound property is used for input binding.\n   *\n   * The following example creates a component with two input properties,\n   * one of which is given a special binding name.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   // This property is bound using its original name.\n   *   @Input() bankName: string;\n   *   // this property value is bound to a different property name\n   *   // when this component is instantiated in a template.\n   *   @Input('account-id') id: string;\n   *\n   *   // this property is not bound, and is not automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bankName=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   *\n   * class App {}\n   * ```\n   *\n   */\n  bindingPropertyName?: string;\n}\n\nconst initializeBaseDef = (target: any): void => {\n  const constructor = target.constructor;\n  const inheritedBaseDef = constructor.ngBaseDef;\n\n  const baseDef = constructor.ngBaseDef = {\n    inputs: {},\n    outputs: {},\n    declaredInputs: {},\n  };\n\n  if (inheritedBaseDef) {\n    fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n    fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n    fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n  }\n};\n\n/**\n * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n * @param key \"inputs\" or \"outputs\"\n */\nconst updateBaseDefFromIOProp = (getProp: (baseDef: {inputs?: any, outputs?: any}) => any) =>\n    (target: any, name: string, ...args: any[]) => {\n      const constructor = target.constructor;\n\n      if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n        initializeBaseDef(target);\n      }\n\n      const baseDef = constructor.ngBaseDef;\n      const defProp = getProp(baseDef);\n      defProp[name] = args[0];\n    };\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Input: InputDecorator = makePropDecorator(\n    'Input', (bindingPropertyName?: string) => ({bindingPropertyName}), undefined,\n    updateBaseDefFromIOProp(baseDef => baseDef.inputs || {}));\n\n/**\n * Type of the Output decorator / constructor function.\n *\n * @publicApi\n */\nexport interface OutputDecorator {\n  /**\n  * Decorator that marks a class field as an output property and supplies configuration metadata.\n  * Declares a data-bound output property, which Angular automatically updates\n  * during change detection.\n  *\n  * @usageNotes\n  *\n  * You can supply an optional name to use in templates when the\n  * component is instantiated, that maps to the\n  * name of the bound property. By default, the original\n  * name of the bound property is used for output binding.\n  *\n  * See `@Input` decorator for an example of providing a binding name.\n  *\n  */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Output metadata.\n *\n * @publicApi\n */\nexport interface Output { bindingPropertyName?: string; }\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Output: OutputDecorator = makePropDecorator(\n    'Output', (bindingPropertyName?: string) => ({bindingPropertyName}), undefined,\n    updateBaseDefFromIOProp(baseDef => baseDef.outputs || {}));\n\n\n\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostBindingDecorator {\n  /**\n   * Decorator that marks a DOM property as a host-binding property and supplies configuration\n   * metadata.\n   * Angular automatically checks host property bindings during change detection, and\n   * if a binding changes it updates the host element of the directive.\n   *\n   * @usageNotes\n   *\n   * The following example creates a directive that sets the `valid` and `invalid`\n   * properties on the DOM element that has an `ngModel` directive on it.\n   *\n   * ```typescript\n   * @Directive({selector: '[ngModel]'})\n   * class NgModelStatus {\n   *   constructor(public control: NgModel) {}\n   *   @HostBinding('class.valid') get valid() { return this.control.valid; }\n   *   @HostBinding('class.invalid') get invalid() { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`,\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   *\n   */\n  (hostPropertyName?: string): any;\n  new (hostPropertyName?: string): any;\n}\n\n/**\n * Type of the HostBinding metadata.\n *\n * @publicApi\n */\nexport interface HostBinding { hostPropertyName?: string; }\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const HostBinding: HostBindingDecorator =\n    makePropDecorator('HostBinding', (hostPropertyName?: string) => ({hostPropertyName}));\n\n\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostListenerDecorator {\n  (eventName: string, args?: string[]): any;\n  new (eventName: string, args?: string[]): any;\n}\n\n/**\n * Type of the HostListener metadata.\n *\n * @publicApi\n */\nexport interface HostListener {\n  /**\n   * The CSS event to listen for.\n   */\n  eventName?: string;\n  /**\n   * A set of arguments to pass to the handler method when the event occurs.\n   */\n  args?: string[];\n}\n\n/**\n * Binds a CSS event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * @usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * @Annotation\n * @publicApi\n */\nexport const HostListener: HostListenerDecorator =\n    makePropDecorator('HostListener', (eventName?: string, args?: string[]) => ({eventName, args}));\n\n\n\nexport const SWITCH_COMPILE_COMPONENT__POST_R3__ = render3CompileComponent;\nexport const SWITCH_COMPILE_DIRECTIVE__POST_R3__ = render3CompileDirective;\nexport const SWITCH_COMPILE_PIPE__POST_R3__ = render3CompilePipe;\n\nconst SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\nconst SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\nconst SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n\nconst SWITCH_COMPILE_COMPONENT: typeof render3CompileComponent = SWITCH_COMPILE_COMPONENT__PRE_R3__;\nconst SWITCH_COMPILE_DIRECTIVE: typeof render3CompileDirective = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\nconst SWITCH_COMPILE_PIPE: typeof render3CompilePipe = SWITCH_COMPILE_PIPE__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ReflectionCapabilities} from '../reflection/reflection_capabilities';\nimport {Type} from '../type';\nimport {getClosureSafeProperty} from '../util/property';\n\nimport {inject, injectArgs} from './injector_compatibility';\nimport {ClassSansProvider, ConstructorSansProvider, ExistingSansProvider, FactorySansProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from './provider';\n\nconst USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\nconst EMPTY_ARRAY: any[] = [];\n\nexport function convertInjectableProviderToFactory(\n    type: Type<any>, provider?: ValueSansProvider | ExistingSansProvider | StaticClassSansProvider |\n        ConstructorSansProvider | FactorySansProvider | ClassSansProvider): () => any {\n  if (!provider) {\n    const reflectionCapabilities = new ReflectionCapabilities();\n    const deps = reflectionCapabilities.parameters(type);\n    // TODO - convert to flags.\n    return () => new type(...injectArgs(deps as any[]));\n  }\n\n  if (USE_VALUE in provider) {\n    const valueProvider = (provider as ValueSansProvider);\n    return () => valueProvider.useValue;\n  } else if ((provider as ExistingSansProvider).useExisting) {\n    const existingProvider = (provider as ExistingSansProvider);\n    return () => inject(existingProvider.useExisting);\n  } else if ((provider as FactorySansProvider).useFactory) {\n    const factoryProvider = (provider as FactorySansProvider);\n    return () => factoryProvider.useFactory(...injectArgs(factoryProvider.deps || EMPTY_ARRAY));\n  } else if ((provider as StaticClassSansProvider | ClassSansProvider).useClass) {\n    const classProvider = (provider as StaticClassSansProvider | ClassSansProvider);\n    let deps = (provider as StaticClassSansProvider).deps;\n    if (!deps) {\n      const reflectionCapabilities = new ReflectionCapabilities();\n      deps = reflectionCapabilities.parameters(type);\n    }\n    return () => new classProvider.useClass(...injectArgs(deps));\n  } else {\n    let deps = (provider as ConstructorSansProvider).deps;\n    if (!deps) {\n      const reflectionCapabilities = new ReflectionCapabilities();\n      deps = reflectionCapabilities.parameters(type);\n    }\n    return () => new type(...injectArgs(deps !));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {InjectorType, defineInjector} from '../di/defs';\nimport {Provider} from '../di/provider';\nimport {convertInjectableProviderToFactory} from '../di/util';\nimport {NgModuleType} from '../render3';\nimport {compileNgModule as render3CompileNgModule} from '../render3/jit/module';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator} from '../util/decorators';\n\n/**\n * Represents the expansion of an `NgModule` into its scopes.\n *\n * A scope is a set of directives and pipes that are visible in a particular context. Each\n * `NgModule` has two scopes. The `compilation` scope is the set of directives and pipes that will\n * be recognized in the templates of components declared by the module. The `exported` scope is the\n * set of directives and pipes exported by a module (that is, module B's exported scope gets added\n * to module A's compilation scope when module A imports B).\n */\nexport interface NgModuleTransitiveScopes {\n  compilation: {directives: Set<any>; pipes: Set<any>;};\n  exported: {directives: Set<any>; pipes: Set<any>;};\n}\n\nexport type NgModuleDefWithMeta<T, Declarations, Imports, Exports> = NgModuleDef<T>;\n\n/**\n * Runtime link information for NgModules.\n *\n * This is the internal data structure used by the runtime to assemble components, directives,\n * pipes, and injectors.\n *\n * NOTE: Always use `defineNgModule` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n */\nexport interface NgModuleDef<T> {\n  /** Token representing the module. Used by DI. */\n  type: T;\n\n  /** List of components to bootstrap. */\n  bootstrap: Type<any>[];\n\n  /** List of components, directives, and pipes declared by this module. */\n  declarations: Type<any>[];\n\n  /** List of modules or `ModuleWithProviders` imported by this module. */\n  imports: Type<any>[];\n\n  /**\n   * List of modules, `ModuleWithProviders`, components, directives, or pipes exported by this\n   * module.\n   */\n  exports: Type<any>[];\n\n  /**\n   * Cached value of computed `transitiveCompileScopes` for this module.\n   *\n   * This should never be read directly, but accessed via `transitiveScopesFor`.\n   */\n  transitiveCompileScopes: NgModuleTransitiveScopes|null;\n}\n\n/**\n * A wrapper around an NgModule that associates it with the providers.\n *\n * @param T the module type. In Ivy applications, this must be explicitly\n * provided.\n *\n * @publicApi\n */\nexport interface ModuleWithProviders<\n    T = any /** TODO(alxhub): remove default when callers pass explicit type param */> {\n  ngModule: Type<T>;\n  providers?: Provider[];\n}\n\n/**\n * A schema definition associated with an NgModule.\n *\n * @see `@NgModule`, `CUSTOM_ELEMENTS_SCHEMA`, `NO_ERRORS_SCHEMA`\n *\n * @param name The name of a defined schema.\n *\n * @publicApi\n */\nexport interface SchemaMetadata { name: string; }\n\n/**\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n * @publicApi\n */\nexport const CUSTOM_ELEMENTS_SCHEMA: SchemaMetadata = {\n  name: 'custom-elements'\n};\n\n/**\n * Defines a schema that allows any property on any element.\n *\n * @publicApi\n */\nexport const NO_ERRORS_SCHEMA: SchemaMetadata = {\n  name: 'no-errors-schema'\n};\n\n\n/**\n * Type of the NgModule decorator / constructor function.\n */\nexport interface NgModuleDecorator {\n  /**\n   * Marks a class as an NgModule and supplies configuration metadata.\n   */\n  (obj?: NgModule): TypeDecorator;\n  new (obj?: NgModule): NgModule;\n}\n\n/**\n * Type of the NgModule metadata.\n *\n * @publicApi\n */\nexport interface NgModule {\n  /**\n   * The set of injectable objects that are available in the injector\n   * of this module.\n   *\n   * @see [Dependency Injection guide](guide/dependency-injection)\n   * @see [NgModule guide](guide/providers)\n   *\n   * @usageNotes\n   *\n   * Dependencies whose providers are listed here become available for injection\n   * into any component, directive, pipe or service that is a child of this injector.\n   * The NgModule used for bootstrapping uses the root injector, and can provide dependencies\n   * to any part of the app.\n   *\n   * A lazy-loaded module has its own injector, typically a child of the app root injector.\n   * Lazy-loaded services are scoped to the lazy-loaded module's injector.\n   * If a lazy-loaded module also provides the `UserService`, any component created\n   * within that module's context (such as by router navigation) gets the local instance\n   * of the service, not the instance in the root injector.\n   * Components in external modules continue to receive the instance provided by their injectors.\n   *\n   * ### Example\n   *\n   * The following example defines a class that is injected in\n   * the HelloWorld NgModule:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @NgModule({\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * The set of components, directives, and pipes ([declarables](guide/glossary#declarable))\n   * that belong to this module.\n   *\n   * @usageNotes\n   *\n   * The set of selectors that are available to a template include those declared here, and\n   * those that are exported from imported NgModules.\n   *\n   * Declarables must belong to exactly one module.\n   * The compiler emits an error if you try to declare the same class in more than one module.\n   * Be careful not to declare a class that is imported from another module.\n   *\n   * ### Example\n   *\n   * The following example allows the CommonModule to use the `NgFor`\n   * directive.\n   *\n   * ```javascript\n   * @NgModule({\n   *   declarations: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  declarations?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of NgModules whose exported [declarables](guide/glossary#declarable)\n   * are available to templates in this module.\n   *\n   * @usageNotes\n   *\n   * A template can use exported declarables from any\n   * imported module, including those from modules that are imported indirectly\n   * and re-exported.\n   * For example, `ModuleA` imports `ModuleB`, and also exports\n   * it, which makes the declarables from `ModuleB` available\n   * wherever `ModuleA` is imported.\n   *\n   * ### Example\n   *\n   * The following example allows MainModule to use anthing exported by\n   * `CommonModule`:\n   *\n   * ```javascript\n   * @NgModule({\n   *   imports: [CommonModule]\n   * })\n   * class MainModule {\n   * }\n   * ```\n   *\n   */\n  imports?: Array<Type<any>|ModuleWithProviders<{}>|any[]>;\n\n  /**\n   * The set of components, directives, and pipes declared in this\n   * NgModule that can be used in the template of any component that is part of an\n   * NgModule that imports this NgModule. Exported declarations are the module's public API.\n   *\n   * A declarable belongs to one and only one NgModule.\n   * A module can list another module among its exports, in which case all of that module's\n   * public declaration are exported.\n   *\n   * @usageNotes\n   *\n   * Declarations are private by default.\n   * If this ModuleA does not export UserComponent, then only the components within this\n   * ModuleA can use UserComponent.\n   *\n   * ModuleA can import ModuleB and also export it, making exports from ModuleB\n   * available to an NgModule that imports ModuleA.\n   *\n   * ### Example\n   *\n   * The following example exports the `NgFor` directive from CommonModule.\n   *\n   * ```javascript\n   * @NgModule({\n   *   exports: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  exports?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of components to compile when this NgModule is defined,\n   * so that they can be dynamically loaded into the view.\n   *\n   * For each component listed here, Angular creates a `ComponentFactory`\n   * and stores it in the `ComponentFactoryResolver`.\n   *\n   * Angular automatically adds components in the module's bootstrap\n   * and route definitions into the `entryComponents` list. Use this\n   * option to add components that are bootstrapped\n   * using one of the imperative techniques, such as `ViewContainerRef.createComponent()`.\n   *\n   * @see [Entry Components](guide/entry-components)\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of components that are bootstrapped when\n   * this module is bootstrapped. The components listed here\n   * are automatically added to `entryComponents`.\n   */\n  bootstrap?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of schemas that declare elements to be allowed in the NgModule.\n   * Elements and properties that are neither Angular components nor directives\n   * must be declared in a schema.\n   *\n   * Allowed value are `NO_ERRORS_SCHEMA` and `CUSTOM_ELEMENTS_SCHEMA`.\n   *\n   * @security When using one of `NO_ERRORS_SCHEMA` or `CUSTOM_ELEMENTS_SCHEMA`\n   * you must ensure that allowed elements and properties securely escape inputs.\n   */\n  schemas?: Array<SchemaMetadata|any[]>;\n\n  /**\n   * A name or path that uniquely identifies this NgModule in `getModuleFactory`.\n   * If left `undefined`, the NgModule is not registered with\n   * `getModuleFactory`.\n   */\n  id?: string;\n\n  /**\n   * If true, this module will be skipped by the AOT compiler and so will always be compiled\n   * using JIT.\n   *\n   * This exists to support future Ivy work and has no effect currently.\n   */\n  jit?: true;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const NgModule: NgModuleDecorator = makeDecorator(\n    'NgModule', (ngModule: NgModule) => ngModule, undefined, undefined,\n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    (type: NgModuleType, meta: NgModule) => SWITCH_COMPILE_NGMODULE(type, meta));\n\n/**\n * @description\n * Hook for manual bootstrapping of the application instead of using bootstrap array in @NgModule\n * annotation.\n *\n * Reference to the current application is provided as a parameter.\n *\n * See [\"Bootstrapping\"](guide/bootstrapping) and [\"Entry components\"](guide/entry-components).\n *\n * @usageNotes\n * ```typescript\n * class AppModule implements DoBootstrap {\n *   ngDoBootstrap(appRef: ApplicationRef) {\n *     appRef.bootstrap(AppComponent); // Or some other component\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport interface DoBootstrap { ngDoBootstrap(appRef: ApplicationRef): void; }\n\nfunction preR3NgModuleCompile(moduleType: InjectorType<any>, metadata: NgModule): void {\n  let imports = (metadata && metadata.imports) || [];\n  if (metadata && metadata.exports) {\n    imports = [...imports, metadata.exports];\n  }\n\n  moduleType.ngInjectorDef = defineInjector({\n    factory: convertInjectableProviderToFactory(moduleType, {useClass: moduleType}),\n    providers: metadata && metadata.providers,\n    imports: imports,\n  });\n}\n\n\nexport const SWITCH_COMPILE_NGMODULE__POST_R3__ = render3CompileNgModule;\nconst SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\nconst SWITCH_COMPILE_NGMODULE: typeof render3CompileNgModule = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {compileInjectable as render3CompileInjectable} from '../render3/jit/injectable';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator} from '../util/decorators';\n\nimport {InjectableDef, InjectableType, defineInjectable, getInjectableDef} from './defs';\nimport {ClassSansProvider, ConstructorSansProvider, ExistingSansProvider, FactorySansProvider, StaticClassSansProvider, ValueSansProvider} from './provider';\nimport {convertInjectableProviderToFactory} from './util';\n\n\n/**\n * Injectable providers used in `@Injectable` decorator.\n *\n * @publicApi\n */\nexport type InjectableProvider = ValueSansProvider | ExistingSansProvider |\n    StaticClassSansProvider | ConstructorSansProvider | FactorySansProvider | ClassSansProvider;\n\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * @publicApi\n */\nexport interface InjectableDecorator {\n  /**\n   * A marker metadata that marks a class as available to `Injector` for creation.\n   *\n   * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Injectable'}\n   *\n   * `Injector` will throw an error when trying to instantiate a class that\n   * does not have `@Injectable` marker, as shown in the example below.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectableThrows'}\n   *\n   */\n  (): TypeDecorator;\n  (options?: {providedIn: Type<any>| 'root' | null}&InjectableProvider): TypeDecorator;\n  new (): Injectable;\n  new (options?: {providedIn: Type<any>| 'root' | null}&InjectableProvider): Injectable;\n}\n\n/**\n * Type of the Injectable metadata.\n *\n * @publicApi\n */\nexport interface Injectable { providedIn?: Type<any>|'root'|null; }\n\n/**\n * Injectable decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Injectable: InjectableDecorator = makeDecorator(\n    'Injectable', undefined, undefined, undefined,\n    (type: Type<any>, meta: Injectable) => SWITCH_COMPILE_INJECTABLE(type as any, meta));\n\n/**\n * Type representing injectable service.\n *\n * @publicApi\n */\nexport interface InjectableType<T> extends Type<T> { ngInjectableDef: InjectableDef<T>; }\n\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction render2CompileInjectable(\n    injectableType: InjectableType<any>,\n    options: {providedIn?: Type<any>| 'root' | null} & InjectableProvider): void {\n  if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n    injectableType.ngInjectableDef = defineInjectable({\n      providedIn: options.providedIn,\n      factory: convertInjectableProviderToFactory(injectableType, options),\n    });\n  }\n}\n\nexport const SWITCH_COMPILE_INJECTABLE__POST_R3__ = render3CompileInjectable;\nconst SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\nconst SWITCH_COMPILE_INJECTABLE: typeof render3CompileInjectable =\n    SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../../di/injectable';\nimport {ClassSansProvider, ExistingSansProvider, FactorySansProvider, ValueProvider, ValueSansProvider} from '../../di/provider';\nimport {Type} from '../../type';\nimport {getClosureSafeProperty} from '../../util/property';\nimport {NG_INJECTABLE_DEF} from '../fields';\n\nimport {R3InjectableMetadataFacade, getCompilerFacade} from './compiler_facade';\nimport {angularCoreEnv} from './environment';\nimport {convertDependencies, reflectDependencies} from './util';\n\n\n\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n */\nexport function compileInjectable(type: Type<any>, srcMeta?: Injectable): void {\n  let def: any = null;\n\n  // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n  if (type.hasOwnProperty(NG_INJECTABLE_DEF)) return;\n\n  Object.defineProperty(type, NG_INJECTABLE_DEF, {\n    get: () => {\n      if (def === null) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        const meta: Injectable = srcMeta || {providedIn: null};\n        const hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n            isUseValueProvider(meta) || isUseExistingProvider(meta);\n\n\n        const compilerMeta: R3InjectableMetadataFacade = {\n          name: type.name,\n          type: type,\n          typeArgumentCount: 0,\n          providedIn: meta.providedIn,\n          ctorDeps: reflectDependencies(type),\n          userDeps: undefined\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n          compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (!hasAProvider) {\n          // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n          // The deps will have been reflected above, causing the factory to create the class by\n          // calling\n          // its constructor with injected deps.\n          compilerMeta.useClass = type;\n        } else if (isUseClassProvider(meta)) {\n          // The user explicitly specified useClass, and may or may not have provided deps.\n          compilerMeta.useClass = meta.useClass;\n        } else if (isUseValueProvider(meta)) {\n          // The user explicitly specified useValue.\n          compilerMeta.useValue = meta.useValue;\n        } else if (isUseFactoryProvider(meta)) {\n          // The user explicitly specified useFactory.\n          compilerMeta.useFactory = meta.useFactory;\n        } else if (isUseExistingProvider(meta)) {\n          // The user explicitly specified useExisting.\n          compilerMeta.useExisting = meta.useExisting;\n        } else {\n          // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n          throw new Error(`Unreachable state.`);\n        }\n        def = getCompilerFacade().compileInjectable(\n            angularCoreEnv, `ng://${type.name}/ngInjectableDef.js`, compilerMeta);\n      }\n      return def;\n    },\n  });\n}\n\ntype UseClassProvider = Injectable & ClassSansProvider & {deps?: any[]};\n\nconst USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\n\nfunction isUseClassProvider(meta: Injectable): meta is UseClassProvider {\n  return (meta as UseClassProvider).useClass !== undefined;\n}\n\nfunction isUseValueProvider(meta: Injectable): meta is Injectable&ValueSansProvider {\n  return USE_VALUE in meta;\n}\n\nfunction isUseFactoryProvider(meta: Injectable): meta is Injectable&FactorySansProvider {\n  return (meta as FactorySansProvider).useFactory !== undefined;\n}\n\nfunction isUseExistingProvider(meta: Injectable): meta is Injectable&ExistingSansProvider {\n  return (meta as ExistingSansProvider).useExisting !== undefined;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugContext} from './view';\n\nexport const ERROR_TYPE = 'ngType';\nexport const ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nexport const ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nexport const ERROR_LOGGER = 'ngErrorLogger';\n\n\nexport function getType(error: Error): Function {\n  return (error as any)[ERROR_TYPE];\n}\n\nexport function getDebugContext(error: Error): DebugContext {\n  return (error as any)[ERROR_DEBUG_CONTEXT];\n}\n\nexport function getOriginalError(error: Error): Error {\n  return (error as any)[ERROR_ORIGINAL_ERROR];\n}\n\nexport function getErrorLogger(error: Error): (console: Console, ...values: any[]) => void {\n  return (error as any)[ERROR_LOGGER] || defaultErrorLogger;\n}\n\n\nfunction defaultErrorLogger(console: Console, ...values: any[]) {\n  (<any>console.error)(...values);\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError} from './errors';\n\n\n\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * @publicApi\n */\nexport class ErrorHandler {\n  /**\n   * @internal\n   */\n  _console: Console = console;\n\n  handleError(error: any): void {\n    const originalError = this._findOriginalError(error);\n    const context = this._findContext(error);\n    // Note: Browser consoles show the place from where console.error was called.\n    // We can use this to give users additional information about the error.\n    const errorLogger = getErrorLogger(error);\n\n    errorLogger(this._console, `ERROR`, error);\n    if (originalError) {\n      errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n    }\n    if (context) {\n      errorLogger(this._console, 'ERROR CONTEXT', context);\n    }\n  }\n\n  /** @internal */\n  _findContext(error: any): any {\n    if (error) {\n      return getDebugContext(error) ? getDebugContext(error) :\n                                      this._findContext(getOriginalError(error));\n    }\n\n    return null;\n  }\n\n  /** @internal */\n  _findOriginalError(error: Error): any {\n    let e = getOriginalError(error);\n    while (e && getOriginalError(e)) {\n      e = getOriginalError(e);\n    }\n\n    return e;\n  }\n}\n\nexport function wrappedError(message: string, originalError: any): Error {\n  const msg =\n      `${message} caused by: ${originalError instanceof Error ? originalError.message: originalError }`;\n  const error = Error(msg);\n  (error as any)[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { FactoryOrValue, MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subjectOrSubjectFactory: FactoryOrValue<Subject<T>>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<R>>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: OperatorFunction<T, R>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * ![](multicast.png)\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../types';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * ![](share.png)\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\n/**\n * Determine if the argument is shaped like a Promise\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n\n/**\n * Determine if the argument is an Observable\n */\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\n  // TODO: use isObservable once we update pass rxjs 6.1\n  // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n  return !!obj && typeof obj.subscribe === 'function';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPromise} from '../src/util/lang';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\n\n\n/**\n * A function that will be executed when an application is initialized.\n *\n * @publicApi\n */\nexport const APP_INITIALIZER = new InjectionToken<Array<() => void>>('Application Initializer');\n\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @publicApi\n */\n@Injectable()\nexport class ApplicationInitStatus {\n  // TODO(issue/24571): remove '!'.\n  private resolve !: Function;\n  // TODO(issue/24571): remove '!'.\n  private reject !: Function;\n  private initialized = false;\n  public readonly donePromise: Promise<any>;\n  public readonly done = false;\n\n  constructor(@Inject(APP_INITIALIZER) @Optional() private appInits: (() => any)[]) {\n    this.donePromise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n\n  /** @internal */\n  runInitializers() {\n    if (this.initialized) {\n      return;\n    }\n\n    const asyncInitPromises: Promise<any>[] = [];\n\n    const complete = () => {\n      (this as{done: boolean}).done = true;\n      this.resolve();\n    };\n\n    if (this.appInits) {\n      for (let i = 0; i < this.appInits.length; i++) {\n        const initResult = this.appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n\n    Promise.all(asyncInitPromises).then(() => { complete(); }).catch(e => { this.reject(e); });\n\n    if (asyncInitPromises.length === 0) {\n      complete();\n    }\n    this.initialized = true;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from './di';\nimport {ComponentRef} from './linker/component_factory';\n\n\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @publicApi\n */\nexport const APP_ID = new InjectionToken<string>('AppId');\n\nexport function _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @publicApi\n */\nexport const APP_ID_RANDOM_PROVIDER = {\n  provide: APP_ID,\n  useFactory: _appIdRandomProviderFactory,\n  deps: <any[]>[],\n};\n\nfunction _randomChar(): string {\n  return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n\n/**\n * A function that will be executed when a platform is initialized.\n * @publicApi\n */\nexport const PLATFORM_INITIALIZER = new InjectionToken<Array<() => void>>('Platform Initializer');\n\n/**\n * A token that indicates an opaque platform id.\n * @publicApi\n */\nexport const PLATFORM_ID = new InjectionToken<Object>('Platform ID');\n\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @publicApi\n */\nexport const APP_BOOTSTRAP_LISTENER =\n    new InjectionToken<Array<(compRef: ComponentRef<any>) => void>>('appBootstrapListener');\n\n/**\n * A token which indicates the root directory of the application\n * @publicApi\n */\nexport const PACKAGE_ROOT_URL = new InjectionToken<string>('Application Packages Root URL');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from './di';\n\n@Injectable()\nexport class Console {\n  log(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.log(message);\n  }\n  // Note: for reporting errors use `DOM.logError()` as it is platform specific\n  warn(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.warn(message);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../di/injectable';\nimport {InjectionToken} from '../di/injection_token';\nimport {StaticProvider} from '../di/provider';\nimport {MissingTranslationStrategy} from '../i18n/tokens';\nimport {ViewEncapsulation} from '../metadata';\nimport {NgModuleFactory as NgModuleFactoryR3} from '../render3/ng_module_ref';\nimport {Type} from '../type';\n\nimport {ComponentFactory} from './component_factory';\nimport {NgModuleFactory} from './ng_module_factory';\n\n\n\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @publicApi\n */\nexport class ModuleWithComponentFactories<T> {\n  constructor(\n      public ngModuleFactory: NgModuleFactory<T>,\n      public componentFactories: ComponentFactory<any>[]) {}\n}\n\n\nfunction _throwError() {\n  throw new Error(`Runtime compiler is not loaded`);\n}\n\nconst Compiler_compileModuleSync__PRE_R3__: <T>(moduleType: Type<T>) => NgModuleFactory<T> =\n    _throwError as any;\nexport const Compiler_compileModuleSync__POST_R3__: <T>(moduleType: Type<T>) =>\n    NgModuleFactory<T> = function<T>(moduleType: Type<T>): NgModuleFactory<T> {\n  return new NgModuleFactoryR3(moduleType);\n};\nconst Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n\nconst Compiler_compileModuleAsync__PRE_R3__: <T>(moduleType: Type<T>) =>\n    Promise<NgModuleFactory<T>> = _throwError as any;\nexport const Compiler_compileModuleAsync__POST_R3__: <T>(moduleType: Type<T>) =>\n    Promise<NgModuleFactory<T>> = function<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n  return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n};\nconst Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n\nconst Compiler_compileModuleAndAllComponentsSync__PRE_R3__: <T>(moduleType: Type<T>) =>\n    ModuleWithComponentFactories<T> = _throwError as any;\nexport const Compiler_compileModuleAndAllComponentsSync__POST_R3__: <T>(moduleType: Type<T>) =>\n    ModuleWithComponentFactories<T> = function<T>(moduleType: Type<T>):\n        ModuleWithComponentFactories<T> {\n  return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n};\nconst Compiler_compileModuleAndAllComponentsSync =\n    Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n\nconst Compiler_compileModuleAndAllComponentsAsync__PRE_R3__: <T>(moduleType: Type<T>) =>\n    Promise<ModuleWithComponentFactories<T>> = _throwError as any;\nexport const Compiler_compileModuleAndAllComponentsAsync__POST_R3__: <T>(moduleType: Type<T>) =>\n    Promise<ModuleWithComponentFactories<T>> = function<T>(moduleType: Type<T>):\n        Promise<ModuleWithComponentFactories<T>> {\n  return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n};\nconst Compiler_compileModuleAndAllComponentsAsync =\n    Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n * @publicApi\n */\n@Injectable()\nexport class Compiler {\n  /**\n   * Compiles the given NgModule and all of its components. All templates of the components listed\n   * in `entryComponents` have to be inlined.\n   */\n  compileModuleSync: <T>(moduleType: Type<T>) => NgModuleFactory<T> = Compiler_compileModuleSync;\n\n  /**\n   * Compiles the given NgModule and all of its components\n   */\n  compileModuleAsync:\n      <T>(moduleType: Type<T>) => Promise<NgModuleFactory<T>> = Compiler_compileModuleAsync;\n\n  /**\n   * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n   */\n  compileModuleAndAllComponentsSync: <T>(moduleType: Type<T>) => ModuleWithComponentFactories<T> =\n      Compiler_compileModuleAndAllComponentsSync;\n\n  /**\n   * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n   */\n  compileModuleAndAllComponentsAsync: <T>(moduleType: Type<T>) =>\n      Promise<ModuleWithComponentFactories<T>> = Compiler_compileModuleAndAllComponentsAsync;\n\n  /**\n   * Clears all caches.\n   */\n  clearCache(): void {}\n\n  /**\n   * Clears the cache for the given component/ngModule.\n   */\n  clearCacheFor(type: Type<any>) {}\n\n  /**\n   * Returns the id for a given NgModule, if one is defined and known to the compiler.\n   */\n  getModuleId(moduleType: Type<any>): string|undefined { return undefined; }\n}\n\n/**\n * Options for creating a compiler\n *\n * @publicApi\n */\nexport type CompilerOptions = {\n  useJit?: boolean,\n  defaultEncapsulation?: ViewEncapsulation,\n  providers?: StaticProvider[],\n  missingTranslation?: MissingTranslationStrategy,\n  preserveWhitespaces?: boolean,\n};\n\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @publicApi\n */\nexport const COMPILER_OPTIONS = new InjectionToken<CompilerOptions[]>('compilerOptions');\n\n/**\n * A factory for creating a Compiler\n *\n * @publicApi\n */\nexport abstract class CompilerFactory {\n  abstract createCompiler(options?: CompilerOptions[]): Compiler;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../util';\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @publicApi\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n\ninterface WTF {\n  trace: Trace;\n}\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n\nexport interface Range {}\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet trace: Trace;\nlet events: Events;\n\nexport function detectWTF(): boolean {\n  const wtf: WTF = (global as any /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n\nexport function leave<T>(scope: Scope): void;\nexport function leave<T>(scope: Scope, returnValue?: T): T;\nexport function leave<T>(scope: Scope, returnValue?: any): any {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WtfScopeFn, createScope, detectWTF, endTimeRange, leave, startTimeRange} from './wtf_impl';\n\nexport {WtfScopeFn} from './wtf_impl';\n\n\n/**\n * True if WTF is enabled.\n */\nexport const wtfEnabled = detectWTF();\n\nfunction noopScope(arg0?: any, arg1?: any): any {\n  return null;\n}\n\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @publicApi\n */\nexport const wtfCreateScope: (signature: string, flags?: any) => WtfScopeFn =\n    wtfEnabled ? createScope : (signature: string, flags?: any) => noopScope;\n\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @publicApi\n */\nexport const wtfLeave: <T>(scope: any, returnValue?: T) => T =\n    wtfEnabled ? leave : (s: any, r?: any) => r;\n\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @publicApi\n */\nexport const wtfStartTimeRange: (rangeType: string, action: string) => any =\n    wtfEnabled ? startTimeRange : (rangeType: string, action: string) => null;\n\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @publicApi\n */\nexport const wtfEndTimeRange: (range: any) => void = wtfEnabled ? endTimeRange : (r: any) => null;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter} from '../event_emitter';\n\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport class NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n\n  /**\n   * Whether there are no outstanding microtasks or macrotasks.\n   */\n  readonly isStable: boolean = true;\n\n  /**\n   * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n   */\n  readonly onUnstable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when there is no more microtasks enqueued in the current VM Turn.\n   * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n   * For this reason this event can fire multiple times per VM Turn.\n   */\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n   * implies we are about to relinquish VM turn.\n   * This event gets called just once.\n   */\n  readonly onStable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies that an error has been delivered.\n   */\n  readonly onError: EventEmitter<any> = new EventEmitter(false);\n\n  constructor({enableLongStackTrace = false}) {\n    if (typeof Zone == 'undefined') {\n      throw new Error(`In this configuration Angular requires Zone.js`);\n    }\n\n    Zone.assertZonePatched();\n    const self = this as any as NgZonePrivate;\n    self._nesting = 0;\n\n    self._outer = self._inner = Zone.current;\n\n    if ((Zone as any)['wtfZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['wtfZoneSpec']);\n    }\n\n    if ((Zone as any)['TaskTrackingZoneSpec']) {\n      self._inner = self._inner.fork(new ((Zone as any)['TaskTrackingZoneSpec'] as any));\n    }\n\n    if (enableLongStackTrace && (Zone as any)['longStackTraceZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['longStackTraceZoneSpec']);\n    }\n\n    forkInnerZoneWithAngularBehavior(self);\n  }\n\n  static isInAngularZone(): boolean { return Zone.current.get('isAngularZone') === true; }\n\n  static assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n\n  static assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n   * the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  run<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.run(fn, applyThis, applyArgs) as T;\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n   * returned by the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  runTask<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[], name?: string): T {\n    const zone = (this as any as NgZonePrivate)._inner;\n    const task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n    try {\n      return zone.runTask(task, applyThis, applyArgs) as T;\n    } finally {\n      zone.cancelTask(task);\n    }\n  }\n\n  /**\n   * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n   * rethrown.\n   */\n  runGuarded<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.runGuarded(fn, applyThis, applyArgs) as T;\n  }\n\n  /**\n   * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n   * the function.\n   *\n   * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n   * work that\n   * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * outside of the Angular zone.\n   *\n   * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n   */\n  runOutsideAngular<T>(fn: (...args: any[]) => T): T {\n    return (this as any as NgZonePrivate)._outer.run(fn) as T;\n  }\n}\n\nfunction noop() {}\nconst EMPTY_PAYLOAD = {};\n\n\ninterface NgZonePrivate extends NgZone {\n  _outer: Zone;\n  _inner: Zone;\n  _nesting: number;\n\n  hasPendingMicrotasks: boolean;\n  hasPendingMacrotasks: boolean;\n  isStable: boolean;\n}\n\nfunction checkStable(zone: NgZonePrivate) {\n  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n    try {\n      zone._nesting++;\n      zone.onMicrotaskEmpty.emit(null);\n    } finally {\n      zone._nesting--;\n      if (!zone.hasPendingMicrotasks) {\n        try {\n          zone.runOutsideAngular(() => zone.onStable.emit(null));\n        } finally {\n          zone.isStable = true;\n        }\n      }\n    }\n  }\n}\n\nfunction forkInnerZoneWithAngularBehavior(zone: NgZonePrivate) {\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: <any>{'isAngularZone': true},\n    onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task, applyThis: any,\n                   applyArgs: any): any => {\n      try {\n        onEnter(zone);\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n\n    onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function,\n               applyThis: any, applyArgs: any[], source: string): any => {\n      try {\n        onEnter(zone);\n        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n    onHasTask:\n        (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n          delegate.hasTask(target, hasTaskState);\n          if (current === target) {\n            // We are only interested in hasTask events which originate from our zone\n            // (A child hasTask event is not interesting to us)\n            if (hasTaskState.change == 'microTask') {\n              zone.hasPendingMicrotasks = hasTaskState.microTask;\n              checkStable(zone);\n            } else if (hasTaskState.change == 'macroTask') {\n              zone.hasPendingMacrotasks = hasTaskState.macroTask;\n            }\n          }\n        },\n\n    onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n      delegate.handleError(target, error);\n      zone.runOutsideAngular(() => zone.onError.emit(error));\n      return false;\n    }\n  });\n}\n\nfunction onEnter(zone: NgZonePrivate) {\n  zone._nesting++;\n  if (zone.isStable) {\n    zone.isStable = false;\n    zone.onUnstable.emit(null);\n  }\n}\n\nfunction onLeave(zone: NgZonePrivate) {\n  zone._nesting--;\n  checkStable(zone);\n}\n\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nexport class NoopNgZone implements NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n  readonly isStable: boolean = true;\n  readonly onUnstable: EventEmitter<any> = new EventEmitter();\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter();\n  readonly onStable: EventEmitter<any> = new EventEmitter();\n  readonly onError: EventEmitter<any> = new EventEmitter();\n\n  run(fn: () => any): any { return fn(); }\n\n  runGuarded(fn: () => any): any { return fn(); }\n\n  runOutsideAngular(fn: () => any): any { return fn(); }\n\n  runTask<T>(fn: () => any): any { return fn(); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable, Observer, Subscription, merge} from 'rxjs';\nimport {share} from 'rxjs/operators';\n\nimport {ApplicationInitStatus} from './application_init';\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {Console} from './console';\nimport {Injectable, InjectionToken, Injector, StaticProvider} from './di';\nimport {ErrorHandler} from './error_handler';\nimport {isDevMode} from './is_dev_mode';\nimport {CompilerFactory, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nimport {InternalViewRef, ViewRef} from './linker/view_ref';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from './profile/profile';\nimport {assertNgModuleType} from './render3/assert';\nimport {NgModuleFactory as R3NgModuleFactory} from './render3/ng_module_ref';\nimport {Testability, TestabilityRegistry} from './testability/testability';\nimport {Type} from './type';\nimport {scheduleMicroTask, stringify} from './util';\nimport {isPromise} from './util/lang';\nimport {NgZone, NoopNgZone} from './zone/ng_zone';\n\nlet _platform: PlatformRef;\n\nlet compileNgModuleFactory:\n    <M>(injector: Injector, options: CompilerOptions, moduleType: Type<M>) =>\n        Promise<NgModuleFactory<M>> = compileNgModuleFactory__PRE_R3__;\n\nfunction compileNgModuleFactory__PRE_R3__<M>(\n    injector: Injector, options: CompilerOptions,\n    moduleType: Type<M>): Promise<NgModuleFactory<M>> {\n  const compilerFactory: CompilerFactory = injector.get(CompilerFactory);\n  const compiler = compilerFactory.createCompiler([options]);\n  return compiler.compileModuleAsync(moduleType);\n}\n\nexport function compileNgModuleFactory__POST_R3__<M>(\n    injector: Injector, options: CompilerOptions,\n    moduleType: Type<M>): Promise<NgModuleFactory<M>> {\n  ngDevMode && assertNgModuleType(moduleType);\n  return Promise.resolve(new R3NgModuleFactory(moduleType));\n}\n\nexport const ALLOW_MULTIPLE_PLATFORMS = new InjectionToken<boolean>('AllowMultipleToken');\n\n\n\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @publicApi\n */\nexport class NgProbeToken {\n  constructor(public name: string, public token: any) {}\n}\n\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @publicApi\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (_platform && !_platform.destroyed &&\n      !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n    throw new Error(\n        'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const inits = injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) inits.forEach((init: any) => init());\n  return _platform;\n}\n\n/**\n * Creates a factory for a platform\n *\n * @publicApi\n */\nexport function createPlatformFactory(\n    parentPlatformFactory: ((extraProviders?: StaticProvider[]) => PlatformRef) | null,\n    name: string, providers: StaticProvider[] = []): (extraProviders?: StaticProvider[]) =>\n    PlatformRef {\n  const desc = `Platform: ${name}`;\n  const marker = new InjectionToken(desc);\n  return (extraProviders: StaticProvider[] = []) => {\n    let platform = getPlatform();\n    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n      if (parentPlatformFactory) {\n        parentPlatformFactory(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true}));\n      } else {\n        const injectedProviders: StaticProvider[] =\n            providers.concat(extraProviders).concat({provide: marker, useValue: true});\n        createPlatform(Injector.create({providers: injectedProviders, name: desc}));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @publicApi\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  const platform = getPlatform();\n\n  if (!platform) {\n    throw new Error('No platform exists!');\n  }\n\n  if (!platform.injector.get(requiredToken, null)) {\n    throw new Error(\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n\n  return platform;\n}\n\n/**\n * Destroy the existing platform.\n *\n * @publicApi\n */\nexport function destroyPlatform(): void {\n  if (_platform && !_platform.destroyed) {\n    _platform.destroy();\n  }\n}\n\n/**\n * Returns the current platform.\n *\n * @publicApi\n */\nexport function getPlatform(): PlatformRef|null {\n  return _platform && !_platform.destroyed ? _platform : null;\n}\n\n/**\n * Provides additional options to the bootstraping process.\n *\n *\n */\nexport interface BootstrapOptions {\n  /**\n   * Optionally specify which `NgZone` should be used.\n   *\n   * - Provide your own `NgZone` instance.\n   * - `zone.js` - Use default `NgZone` which requires `Zone.js`.\n   * - `noop` - Use `NoopNgZone` which does nothing.\n   */\n  ngZone?: NgZone|'zone.js'|'noop';\n}\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n *\n * @publicApi\n */\n@Injectable()\nexport class PlatformRef {\n  private _modules: NgModuleRef<any>[] = [];\n  private _destroyListeners: Function[] = [];\n  private _destroyed: boolean = false;\n\n  /** @internal */\n  constructor(private _injector: Injector) {}\n\n  /**\n   * Creates an instance of an `@NgModule` for the given platform\n   * for offline compilation.\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * ```typescript\n   * my_module.ts:\n   *\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * main.ts:\n   * import {MyModuleNgFactory} from './my_module.ngfactory';\n   * import {platformBrowser} from '@angular/platform-browser';\n   *\n   * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n   * ```\n   */\n  bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>, options?: BootstrapOptions):\n      Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    const ngZoneOption = options ? options.ngZone : undefined;\n    const ngZone = getNgZone(ngZoneOption);\n    const providers: StaticProvider[] = [{provide: NgZone, useValue: ngZone}];\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const ngZoneInjector = Injector.create(\n          {providers: providers, parent: this.injector, name: moduleFactory.moduleType.name});\n      const moduleRef = <InternalNgModuleRef<M>>moduleFactory.create(ngZoneInjector);\n      const exceptionHandler: ErrorHandler = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      moduleRef.onDestroy(() => remove(this._modules, moduleRef));\n      ngZone !.runOutsideAngular(\n          () => ngZone !.onError.subscribe(\n              {next: (error: any) => { exceptionHandler.handleError(error); }}));\n      return _callAndReportToErrorHandler(exceptionHandler, ngZone !, () => {\n        const initStatus: ApplicationInitStatus = moduleRef.injector.get(ApplicationInitStatus);\n        initStatus.runInitializers();\n        return initStatus.donePromise.then(() => {\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n\n  /**\n   * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * ```typescript\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n   * ```\n   *\n   */\n  bootstrapModule<M>(\n      moduleType: Type<M>, compilerOptions: (CompilerOptions&BootstrapOptions)|\n      Array<CompilerOptions&BootstrapOptions> = []): Promise<NgModuleRef<M>> {\n    const options = optionsReducer({}, compilerOptions);\n    return compileNgModuleFactory(this.injector, options, moduleType)\n        .then(moduleFactory => this.bootstrapModuleFactory(moduleFactory, options));\n  }\n\n  private _moduleDoBootstrap(moduleRef: InternalNgModuleRef<any>): void {\n    const appRef = moduleRef.injector.get(ApplicationRef) as ApplicationRef;\n    if (moduleRef._bootstrapComponents.length > 0) {\n      moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new Error(\n          `The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n          `Please define one of these.`);\n    }\n    this._modules.push(moduleRef);\n  }\n\n  /**\n   * Register a listener to be called when the platform is disposed.\n   */\n  onDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n\n  /**\n   * Retrieve the platform {@link Injector}, which is the parent injector for\n   * every Angular application on the page and provides singleton providers.\n   */\n  get injector(): Injector { return this._injector; }\n\n  /**\n   * Destroy the Angular platform and all Angular applications on the page.\n   */\n  destroy() {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\n\n  get destroyed() { return this._destroyed; }\n}\n\nfunction getNgZone(ngZoneOption?: NgZone | 'zone.js' | 'noop'): NgZone {\n  let ngZone: NgZone;\n\n  if (ngZoneOption === 'noop') {\n    ngZone = new NoopNgZone();\n  } else {\n    ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n        new NgZone({enableLongStackTrace: isDevMode()});\n  }\n  return ngZone;\n}\n\nfunction _callAndReportToErrorHandler(\n    errorHandler: ErrorHandler, ngZone: NgZone, callback: () => any): any {\n  try {\n    const result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n\n    return result;\n  } catch (e) {\n    ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n\nfunction optionsReducer<T extends Object>(dst: any, objs: T | T[]): T {\n  if (Array.isArray(objs)) {\n    dst = objs.reduce(optionsReducer, dst);\n  } else {\n    dst = {...dst, ...(objs as any)};\n  }\n  return dst;\n}\n\n/**\n * A reference to an Angular application running on a page.\n *\n * @publicApi\n */\n@Injectable()\nexport class ApplicationRef {\n  /** @internal */\n  static _tickScope: WtfScopeFn = wtfCreateScope('ApplicationRef#tick()');\n  private _bootstrapListeners: ((compRef: ComponentRef<any>) => void)[] = [];\n  private _views: InternalViewRef[] = [];\n  private _runningTick: boolean = false;\n  private _enforceNoNewChanges: boolean = false;\n  private _stable = true;\n\n  /**\n   * Get a list of component types registered to this application.\n   * This list is populated even before the component is created.\n   */\n  public readonly componentTypes: Type<any>[] = [];\n\n  /**\n   * Get a list of components registered to this application.\n   */\n  public readonly components: ComponentRef<any>[] = [];\n\n  /**\n   * Returns an Observable that indicates when the application is stable or unstable.\n   */\n  // TODO(issue/24571): remove '!'.\n  public readonly isStable !: Observable<boolean>;\n\n  /** @internal */\n  constructor(\n      private _zone: NgZone, private _console: Console, private _injector: Injector,\n      private _exceptionHandler: ErrorHandler,\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _initStatus: ApplicationInitStatus) {\n    this._enforceNoNewChanges = isDevMode();\n\n    this._zone.onMicrotaskEmpty.subscribe(\n        {next: () => { this._zone.run(() => { this.tick(); }); }});\n\n    const isCurrentlyStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n          !this._zone.hasPendingMicrotasks;\n      this._zone.runOutsideAngular(() => {\n        observer.next(this._stable);\n        observer.complete();\n      });\n    });\n\n    const isStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      // Create the subscription to onStable outside the Angular Zone so that\n      // the callback is run outside the Angular Zone.\n      let stableSub: Subscription;\n      this._zone.runOutsideAngular(() => {\n        stableSub = this._zone.onStable.subscribe(() => {\n          NgZone.assertNotInAngularZone();\n\n          // Check whether there are no pending macro/micro tasks in the next tick\n          // to allow for NgZone to update the state.\n          scheduleMicroTask(() => {\n            if (!this._stable && !this._zone.hasPendingMacrotasks &&\n                !this._zone.hasPendingMicrotasks) {\n              this._stable = true;\n              observer.next(true);\n            }\n          });\n        });\n      });\n\n      const unstableSub: Subscription = this._zone.onUnstable.subscribe(() => {\n        NgZone.assertInAngularZone();\n        if (this._stable) {\n          this._stable = false;\n          this._zone.runOutsideAngular(() => { observer.next(false); });\n        }\n      });\n\n      return () => {\n        stableSub.unsubscribe();\n        unstableSub.unsubscribe();\n      };\n    });\n\n    (this as{isStable: Observable<boolean>}).isStable =\n        merge(isCurrentlyStable, isStable.pipe(share()));\n  }\n\n  /**\n   * Bootstrap a new component at the root level of the application.\n   *\n   * @usageNotes\n   * ### Bootstrap process\n   *\n   * When bootstrapping a new root component into an application, Angular mounts the\n   * specified application component onto DOM elements identified by the componentType's\n   * selector and kicks off automatic change detection to finish initializing the component.\n   *\n   * Optionally, a component can be mounted onto a DOM element that does not match the\n   * componentType's selector.\n   *\n   * ### Example\n   * {@example core/ts/platform/platform.ts region='longform'}\n   */\n  bootstrap<C>(componentOrFactory: ComponentFactory<C>|Type<C>, rootSelectorOrNode?: string|any):\n      ComponentRef<C> {\n    if (!this._initStatus.done) {\n      throw new Error(\n          'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n    }\n    let componentFactory: ComponentFactory<C>;\n    if (componentOrFactory instanceof ComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      componentFactory =\n          this._componentFactoryResolver.resolveComponentFactory(componentOrFactory) !;\n    }\n    this.componentTypes.push(componentFactory.componentType);\n\n    // Create a factory associated with the current module if it's not bound to some other\n    const ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n        null :\n        this._injector.get(NgModuleRef);\n    const selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n    const compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n\n    compRef.onDestroy(() => { this._unloadComponent(compRef); });\n    const testability = compRef.injector.get(Testability, null);\n    if (testability) {\n      compRef.injector.get(TestabilityRegistry)\n          .registerApplication(compRef.location.nativeElement, testability);\n    }\n\n    this._loadComponent(compRef);\n    if (isDevMode()) {\n      this._console.log(\n          `Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n    }\n    return compRef;\n  }\n\n  /**\n   * Invoke this method to explicitly process change detection and its side-effects.\n   *\n   * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n   * further changes are detected. If additional changes are picked up during this second cycle,\n   * bindings in the app have side-effects that cannot be resolved in a single change detection\n   * pass.\n   * In this case, Angular throws an error, since an Angular application can only have one change\n   * detection pass during which all change detection must complete.\n   */\n  tick(): void {\n    if (this._runningTick) {\n      throw new Error('ApplicationRef.tick is called recursively');\n    }\n\n    const scope = ApplicationRef._tickScope();\n    try {\n      this._runningTick = true;\n      this._views.forEach((view) => view.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._views.forEach((view) => view.checkNoChanges());\n      }\n    } catch (e) {\n      // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n      this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n    } finally {\n      this._runningTick = false;\n      wtfLeave(scope);\n    }\n  }\n\n  /**\n   * Attaches a view so that it will be dirty checked.\n   * The view will be automatically detached when it is destroyed.\n   * This will throw if the view is already attached to a ViewContainer.\n   */\n  attachView(viewRef: ViewRef): void {\n    const view = (viewRef as InternalViewRef);\n    this._views.push(view);\n    view.attachToAppRef(this);\n  }\n\n  /**\n   * Detaches a view from dirty checking again.\n   */\n  detachView(viewRef: ViewRef): void {\n    const view = (viewRef as InternalViewRef);\n    remove(this._views, view);\n    view.detachFromAppRef();\n  }\n\n  private _loadComponent(componentRef: ComponentRef<any>): void {\n    this.attachView(componentRef.hostView);\n    this.tick();\n    this.components.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const listeners =\n        this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n    listeners.forEach((listener) => listener(componentRef));\n  }\n\n  private _unloadComponent(componentRef: ComponentRef<any>): void {\n    this.detachView(componentRef.hostView);\n    remove(this.components, componentRef);\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    // TODO(alxhub): Dispose of the NgZone.\n    this._views.slice().forEach((view) => view.destroy());\n  }\n\n  /**\n   * Returns the number of attached views.\n   */\n  get viewCount() { return this._views.length; }\n}\n\nfunction remove<T>(list: T[], el: T): void {\n  const index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../di';\nimport {scheduleMicroTask} from '../util';\nimport {NgZone} from '../zone/ng_zone';\n\n/**\n * Testability API.\n * `declare` keyword causes tsickle to generate externs, so these methods are\n * not renamed by Closure Compiler.\n * @publicApi\n */\nexport declare interface PublicTestability {\n  isStable(): boolean;\n  whenStable(callback: Function, timeout?: number, updateCallback?: Function): void;\n  findProviders(using: any, provider: string, exactMatch: boolean): any[];\n}\n\n// Angular internal, not intended for public API.\nexport interface PendingMacrotask {\n  source: string;\n  creationLocation: Error;\n  runCount?: number;\n  data: TaskData;\n}\n\nexport interface TaskData {\n  target?: XMLHttpRequest;\n  delay?: number;\n  isPeriodic?: boolean;\n}\n\n// Angular internal, not intended for public API.\nexport type DoneCallback = (didWork: boolean, tasks?: PendingMacrotask[]) => void;\nexport type UpdateCallback = (tasks: PendingMacrotask[]) => boolean;\n\ninterface WaitCallback {\n  // Needs to be 'any' - setTimeout returns a number according to ES6, but\n  // on NodeJS it returns a Timer.\n  timeoutId: any;\n  doneCb: DoneCallback;\n  updateCb?: UpdateCallback;\n}\n\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @publicApi\n */\n@Injectable()\nexport class Testability implements PublicTestability {\n  private _pendingCount: number = 0;\n  private _isZoneStable: boolean = true;\n  /**\n   * Whether any work was done since the last 'whenStable' callback. This is\n   * useful to detect if this could have potentially destabilized another\n   * component while it is stabilizing.\n   * @internal\n   */\n  private _didWork: boolean = false;\n  private _callbacks: WaitCallback[] = [];\n\n  private taskTrackingZone: {macroTasks: Task[]}|null = null;\n\n  constructor(private _ngZone: NgZone) {\n    this._watchAngularEvents();\n    _ngZone.run(() => {\n      this.taskTrackingZone =\n          typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n    });\n  }\n\n  private _watchAngularEvents(): void {\n    this._ngZone.onUnstable.subscribe({\n      next: () => {\n        this._didWork = true;\n        this._isZoneStable = false;\n      }\n    });\n\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.subscribe({\n        next: () => {\n          NgZone.assertNotInAngularZone();\n          scheduleMicroTask(() => {\n            this._isZoneStable = true;\n            this._runCallbacksIfReady();\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Increases the number of pending request\n   * @deprecated pending requests are now tracked with zones.\n   */\n  increasePendingRequestCount(): number {\n    this._pendingCount += 1;\n    this._didWork = true;\n    return this._pendingCount;\n  }\n\n  /**\n   * Decreases the number of pending request\n   * @deprecated pending requests are now tracked with zones\n   */\n  decreasePendingRequestCount(): number {\n    this._pendingCount -= 1;\n    if (this._pendingCount < 0) {\n      throw new Error('pending async requests below zero');\n    }\n    this._runCallbacksIfReady();\n    return this._pendingCount;\n  }\n\n  /**\n   * Whether an associated application is stable\n   */\n  isStable(): boolean {\n    return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n  }\n\n  private _runCallbacksIfReady(): void {\n    if (this.isStable()) {\n      // Schedules the call backs in a new frame so that it is always async.\n      scheduleMicroTask(() => {\n        while (this._callbacks.length !== 0) {\n          let cb = this._callbacks.pop() !;\n          clearTimeout(cb.timeoutId);\n          cb.doneCb(this._didWork);\n        }\n        this._didWork = false;\n      });\n    } else {\n      // Still not stable, send updates.\n      let pending = this.getPendingTasks();\n      this._callbacks = this._callbacks.filter((cb) => {\n        if (cb.updateCb && cb.updateCb(pending)) {\n          clearTimeout(cb.timeoutId);\n          return false;\n        }\n\n        return true;\n      });\n\n      this._didWork = true;\n    }\n  }\n\n  private getPendingTasks(): PendingMacrotask[] {\n    if (!this.taskTrackingZone) {\n      return [];\n    }\n\n    // Copy the tasks data so that we don't leak tasks.\n    return this.taskTrackingZone.macroTasks.map((t: Task) => {\n      return {\n        source: t.source,\n        // From TaskTrackingZone:\n        // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n        creationLocation: (t as any).creationLocation as Error,\n        data: t.data\n      };\n    });\n  }\n\n  private addCallback(cb: DoneCallback, timeout?: number, updateCb?: UpdateCallback) {\n    let timeoutId: any = -1;\n    if (timeout && timeout > 0) {\n      timeoutId = setTimeout(() => {\n        this._callbacks = this._callbacks.filter((cb) => cb.timeoutId !== timeoutId);\n        cb(this._didWork, this.getPendingTasks());\n      }, timeout);\n    }\n    this._callbacks.push(<WaitCallback>{doneCb: cb, timeoutId: timeoutId, updateCb: updateCb});\n  }\n\n  /**\n   * Wait for the application to be stable with a timeout. If the timeout is reached before that\n   * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n   *\n   * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n   *    whichever comes first.\n   * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n   *    specified, whenStable() will wait forever.\n   * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n   *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n   *    and no further updates will be issued.\n   */\n  whenStable(doneCb: Function, timeout?: number, updateCb?: Function): void {\n    if (updateCb && !this.taskTrackingZone) {\n      throw new Error(\n          'Task tracking zone is required when passing an update callback to ' +\n          'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n    }\n    // These arguments are 'Function' above to keep the public API simple.\n    this.addCallback(doneCb as DoneCallback, timeout, updateCb as UpdateCallback);\n    this._runCallbacksIfReady();\n  }\n\n  /**\n   * Get the number of pending requests\n   * @deprecated pending requests are now tracked with zones\n   */\n  getPendingRequestCount(): number { return this._pendingCount; }\n\n  /**\n   * Find providers by name\n   * @param using The root element to search from\n   * @param provider The name of binding variable\n   * @param exactMatch Whether using exactMatch\n   */\n  findProviders(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\n}\n\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @publicApi\n */\n@Injectable()\nexport class TestabilityRegistry {\n  /** @internal */\n  _applications = new Map<any, Testability>();\n\n  constructor() { _testabilityGetter.addToWindow(this); }\n\n  /**\n   * Registers an application with a testability hook so that it can be tracked\n   * @param token token of application, root element\n   * @param testability Testability hook\n   */\n  registerApplication(token: any, testability: Testability) {\n    this._applications.set(token, testability);\n  }\n\n  /**\n   * Unregisters an application.\n   * @param token token of application, root element\n   */\n  unregisterApplication(token: any) { this._applications.delete(token); }\n\n  /**\n   * Unregisters all applications\n   */\n  unregisterAllApplications() { this._applications.clear(); }\n\n  /**\n   * Get a testability hook associated with the application\n   * @param elem root element\n   */\n  getTestability(elem: any): Testability|null { return this._applications.get(elem) || null; }\n\n  /**\n   * Get all registered testabilities\n   */\n  getAllTestabilities(): Testability[] { return Array.from(this._applications.values()); }\n\n  /**\n   * Get all registered applications(root elements)\n   */\n  getAllRootElements(): any[] { return Array.from(this._applications.keys()); }\n\n  /**\n   * Find testability of a node in the Tree\n   * @param elem node\n   * @param findInAncestors whether finding testability in ancestors if testability was not found in\n   * current node\n   */\n  findTestabilityInTree(elem: Node, findInAncestors: boolean = true): Testability|null {\n    return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n  }\n}\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * @publicApi\n */\nexport interface GetTestability {\n  addToWindow(registry: TestabilityRegistry): void;\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null;\n}\n\nclass _NoopGetTestability implements GetTestability {\n  addToWindow(registry: TestabilityRegistry): void {}\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    return null;\n  }\n}\n\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @publicApi\n */\nexport function setTestabilityGetter(getter: GetTestability): void {\n  _testabilityGetter = getter;\n}\n\nlet _testabilityGetter: GetTestability = new _NoopGetTestability();\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(v1: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```javascript\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { MonoTypeOperatorFunction, OperatorFunction, ObservableInput } from '../types';\n\nexport function mergeAll<T>(concurrent?: number): OperatorFunction<ObservableInput<T>, T>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): MonoTypeOperatorFunction<T> {\n  return mergeMap<T, T>(identity as (value: T, index: number) => ObservableInput<T>, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isIterable } from '../util/isIterable';\nimport { fromArray } from './fromArray';\nimport { fromPromise } from './fromPromise';\nimport { fromIterable } from './fromIterable';\nimport { fromObservable } from './fromObservable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike } from '../types';\n\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function from<T>(input: ObservableInput<ObservableInput<T>>, scheduler?: SchedulerLike): Observable<Observable<T>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n * ### Converts an array to an Observable\n * ```javascript\n * import { from } from 'rxjs/observable/from';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10 20 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n * ```javascript\n * import { take } from 'rxjs/operators';\n * import { from } from 'rxjs/observable/from';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3 6 12 24 48 96 192 384 768 1536\n * ```\n *\n * ---\n *\n * ### with async scheduler\n * ```javascript\n * import { from } from 'rxjs/observable/from';\n * import { async } from 'rxjs/scheduler/async';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, async);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start end 10 20 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n * @see {@link fromPromise}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\n\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  }\n\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return fromPromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return fromArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return fromIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function fromObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToObservable(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => {\n        const observable: Subscribable<T> = input[Symbol_observable]();\n        sub.add(observable.subscribe({\n          next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n          error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n          complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n        }));\n      }));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\n\nexport function fromPromise<T>(input: PromiseLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToPromise(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => input.then(\n        value => {\n          sub.add(scheduler.schedule(() => {\n            subscriber.next(value);\n            sub.add(scheduler.schedule(() => subscriber.complete()));\n          }));\n        },\n        err => {\n          sub.add(scheduler.schedule(() => subscriber.error(err)));\n        }\n      )));\n      return sub;\n    });\n  }\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\n\nexport function fromIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  if (!scheduler) {\n    return new Observable<T>(subscribeToIterable(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      let iterator: Iterator<T>;\n      sub.add(() => {\n        // Finalize generators\n        if (iterator && typeof iterator.return === 'function') {\n          iterator.return();\n        }\n      });\n      sub.add(scheduler.schedule(() => {\n        iterator = input[Symbol_iterator]();\n        sub.add(scheduler.schedule(function () {\n          if (subscriber.closed) {\n            return;\n          }\n          let value: T;\n          let done: boolean;\n          try {\n            const result = iterator.next();\n            value = result.value;\n            done = result.done;\n          } catch (err) {\n            subscriber.error(err);\n            return;\n          }\n          if (done) {\n            subscriber.complete();\n          } else {\n            subscriber.next(value);\n            this.schedule();\n          }\n        }));\n      }));\n      return sub;\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\nimport {EventEmitter} from '../event_emitter';\nimport {getSymbolIterator} from '../util';\n\n\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n * @publicApi\n */\nexport class QueryList<T>/* implements Iterable<T> */ {\n  public readonly dirty = true;\n  private _results: Array<T> = [];\n  public readonly changes: Observable<any> = new EventEmitter();\n\n  readonly length: number = 0;\n  // TODO(issue/24571): remove '!'.\n  readonly first !: T;\n  // TODO(issue/24571): remove '!'.\n  readonly last !: T;\n\n  /**\n   * See\n   * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n   */\n  map<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._results.map(fn); }\n\n  /**\n   * See\n   * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n   */\n  filter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._results.filter(fn);\n  }\n\n  /**\n   * See\n   * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n   */\n  find(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._results.find(fn);\n  }\n\n  /**\n   * See\n   * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n   */\n  reduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._results.reduce(fn, init);\n  }\n\n  /**\n   * See\n   * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n   */\n  forEach(fn: (item: T, index: number, array: T[]) => void): void { this._results.forEach(fn); }\n\n  /**\n   * See\n   * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n   */\n  some(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._results.some(fn);\n  }\n\n  toArray(): T[] { return this._results.slice(); }\n\n  [getSymbolIterator()](): Iterator<T> { return (this._results as any)[getSymbolIterator()](); }\n\n  toString(): string { return this._results.toString(); }\n\n  reset(res: Array<T|any[]>): void {\n    this._results = flatten(res);\n    (this as{dirty: boolean}).dirty = false;\n    (this as{length: number}).length = this._results.length;\n    (this as{last: T}).last = this._results[this.length - 1];\n    (this as{first: T}).first = this._results[0];\n  }\n\n  notifyOnChanges(): void { (this.changes as EventEmitter<any>).emit(this); }\n\n  /** internal */\n  setDirty() { (this as{dirty: boolean}).dirty = true; }\n\n  /** internal */\n  destroy(): void {\n    (this.changes as EventEmitter<any>).complete();\n    (this.changes as EventEmitter<any>).unsubscribe();\n  }\n}\n\nfunction flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const flatItem = Array.isArray(item) ? flatten(item) : item;\n    return (<T[]>flat).concat(flatItem);\n  }, []);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {injectViewContainerRef as render3InjectViewContainerRef} from '../render3/view_engine_compatibility';\nimport {noop} from '../util/noop';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {TemplateRef} from './template_ref';\nimport {EmbeddedViewRef, ViewRef} from './view_ref';\n\n\n/**\n * Represents a container where one or more views can be attached to a component.\n *\n * Can contain *host views* (created by instantiating a\n * component with the `createComponent()` method), and *embedded views*\n * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n *\n * A view container instance can contain other view containers,\n * creating a [view hierarchy](guide/glossary#view-tree).\n *\n * @see `ComponentRef`\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nexport abstract class ViewContainerRef {\n  /**\n   * Anchor element that specifies the location of this container in the containing view.\n   * Each view container can have only one anchor element, and each anchor element\n   * can have only a single view container.\n   *\n   * Root elements of views attached to this container become siblings of the anchor element in\n   * the rendered view.\n   *\n   * Access the `ViewContainerRef` of an element by placing a `Directive` injected\n   * with `ViewContainerRef` on the element, or use a `ViewChild` query.\n   *\n   * <!-- TODO: rename to anchorElement -->\n   */\n  abstract get element(): ElementRef;\n\n  /**\n   * The [dependency injector](guide/glossary#injector) for this view container.\n   */\n  abstract get injector(): Injector;\n\n  /** @deprecated No replacement */\n  abstract get parentInjector(): Injector;\n\n  /**\n   * Destroys all views in this container.\n   */\n  abstract clear(): void;\n\n  /**\n   * Retrieves a view from this container.\n   * @param index The 0-based index of the view to retrieve.\n   * @returns The `ViewRef` instance, or null if the index is out of range.\n   */\n  abstract get(index: number): ViewRef|null;\n\n  /**\n   * Reports how many views are currently attached to this container.\n   * @returns The number of views.\n   */\n  abstract get length(): number;\n\n  /**\n   * Instantiates an embedded view and inserts it\n   * into this container.\n   * @param templateRef The HTML template that defines the view.\n   * @param index The 0-based index at which to insert the new view into this container.\n   * If not specified, appends the new view as the last entry.\n   *\n   * @returns The `ViewRef` instance for the newly created view.\n   */\n  abstract createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C>;\n\n  /**\n   * Instantiates a single component and inserts its host view into this container.\n   *\n   * @param componentFactory The factory to use.\n   * @param index The index at which to insert the new component's host view into this container.\n   * If not specified, appends the new view as the last entry.\n   * @param injector The injector to use as the parent for the new component.\n   * @param projectableNodes\n   * @param ngModule\n   *\n   * @returns The new component instance, containing the host view.\n   *\n   */\n  abstract createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModule?: NgModuleRef<any>): ComponentRef<C>;\n\n  /**\n   * Inserts a view into this container.\n   * @param viewRef The view to insert.\n   * @param index The 0-based index at which to insert the view.\n   * If not specified, appends the new view as the last entry.\n   * @returns The inserted `ViewRef` instance.\n   *\n   */\n  abstract insert(viewRef: ViewRef, index?: number): ViewRef;\n\n  /**\n   * Moves a view to a new location in this container.\n   * @param viewRef The view to move.\n   * @param index The 0-based index of the new location.\n   * @returns The moved `ViewRef` instance.\n   */\n  abstract move(viewRef: ViewRef, currentIndex: number): ViewRef;\n\n  /**\n   * Returns the index of a view within the current container.\n   * @param viewRef The view to query.\n   * @returns The 0-based index of the view's position in this container,\n   * or `-1` if this container doesn't contain the view.\n   */\n  abstract indexOf(viewRef: ViewRef): number;\n\n  /**\n   * Destroys a view attached to this container\n   * @param index The 0-based index of the view to destroy.\n   * If not specified, the last view in the container is removed.\n   */\n  abstract remove(index?: number): void;\n\n  /**\n   * Detaches a view from this container without destroying it.\n   * Use along with `insert()` to move a view within the current container.\n   * @param index The 0-based index of the view to detach.\n   * If not specified, the last view in the container is detached.\n   */\n  abstract detach(index?: number): ViewRef|null;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__:\n      () => ViewContainerRef = () => SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef)\n}\n\nexport const SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = render3InjectViewContainerRef;\nconst SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\nconst SWITCH_VIEW_CONTAINER_REF_FACTORY: typeof render3InjectViewContainerRef =\n    SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {injectChangeDetectorRef as render3InjectChangeDetectorRef} from '../render3/view_engine_compatibility';\n\n/**\n * Base class for Angular Views, provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n *\n * @usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n *\n * @publicApi\n */\nexport abstract class ChangeDetectorRef {\n  /**\n   * When a view uses the {@link ChangeDetectionStrategy#OnPush OnPush} (checkOnce)\n   * change detection strategy, explicitly marks the view as changed so that\n   * it can be checked again.\n   *\n   * Components are normally marked as dirty (in need of rerendering) when inputs\n   * have changed or events have fired in the view. Call this method to ensure that\n   * a component is checked even if these triggers have not occured.\n   *\n   * <!-- TODO: Add a link to a chapter on OnPush components -->\n   *\n   */\n  abstract markForCheck(): void;\n\n  /**\n   * Detaches this view from the change-detection tree.\n   * A detached view is  not checked until it is reattached.\n   * Use in combination with `detectChanges()` to implement local change detection checks.\n   *\n   * Detached views are not checked during change detection runs until they are\n   * re-attached, even if they are marked as dirty.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   */\n  abstract detach(): void;\n\n  /**\n   * Checks this view and its children. Use in combination with {@link ChangeDetectorRef#detach\n   * detach}\n   * to implement local change detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   */\n  abstract detectChanges(): void;\n\n  /**\n   * Checks the change detector and its children, and throws if any changes are detected.\n   *\n   * Use in development mode to verify that running change detection doesn't introduce\n   * other changes.\n   */\n  abstract checkNoChanges(): void;\n\n  /**\n   * Re-attaches the previously detached view to the change detection tree.\n   * Views are attached to the tree by default.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   *\n   */\n  abstract reattach(): void;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => ChangeDetectorRef = () => SWITCH_CHANGE_DETECTOR_REF_FACTORY();\n}\n\n\n\nexport const SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = render3InjectChangeDetectorRef;\nconst SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = (...args: any[]): any => {};\nconst SWITCH_CHANGE_DETECTOR_REF_FACTORY: typeof render3InjectChangeDetectorRef =\n    SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {assertDomNode} from '../render3/assert';\nimport {getComponent, getContext, getInjectionTokens, getInjector, getListeners, getLocalRefs, isBrowserEvents, loadLContext, loadLContextFromNode} from '../render3/discovery_utils';\nimport {TNode} from '../render3/interfaces/node';\nimport {StylingIndex} from '../render3/interfaces/styling';\nimport {TVIEW} from '../render3/interfaces/view';\nimport {getProp, getValue, isClassBasedValue} from '../render3/styling/class_and_style_bindings';\nimport {getStylingContext} from '../render3/styling/util';\nimport {DebugContext} from '../view/index';\n\nexport class EventListener {\n  constructor(public name: string, public callback: Function) {}\n}\n\n/**\n * @publicApi\n */\nexport interface DebugNode {\n  readonly listeners: EventListener[];\n  readonly parent: DebugElement|null;\n  readonly nativeNode: any;\n  readonly injector: Injector;\n  readonly componentInstance: any;\n  readonly context: any;\n  readonly references: {[key: string]: any};\n  readonly providerTokens: any[];\n}\nexport class DebugNode__PRE_R3__ {\n  readonly listeners: EventListener[] = [];\n  readonly parent: DebugElement|null = null;\n  readonly nativeNode: any;\n  private readonly _debugContext: DebugContext;\n\n  constructor(nativeNode: any, parent: DebugNode|null, _debugContext: DebugContext) {\n    this._debugContext = _debugContext;\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement__PRE_R3__) {\n      parent.addChild(this);\n    }\n  }\n\n  get injector(): Injector { return this._debugContext.injector; }\n\n  get componentInstance(): any { return this._debugContext.component; }\n\n  get context(): any { return this._debugContext.context; }\n\n  get references(): {[key: string]: any} { return this._debugContext.references; }\n\n  get providerTokens(): any[] { return this._debugContext.providerTokens; }\n}\n\n/**\n * @publicApi\n */\nexport interface DebugElement extends DebugNode {\n  readonly name: string;\n  readonly properties: {[key: string]: any};\n  readonly attributes: {[key: string]: string | null};\n  readonly classes: {[key: string]: boolean};\n  readonly styles: {[key: string]: string | null};\n  readonly childNodes: DebugNode[];\n  readonly nativeElement: any;\n  readonly children: DebugElement[];\n\n  query(predicate: Predicate<DebugElement>): DebugElement;\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[];\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[];\n  triggerEventHandler(eventName: string, eventObj: any): void;\n}\nexport class DebugElement__PRE_R3__ extends DebugNode__PRE_R3__ implements DebugElement {\n  readonly name !: string;\n  readonly properties: {[key: string]: any} = {};\n  readonly attributes: {[key: string]: string | null} = {};\n  readonly classes: {[key: string]: boolean} = {};\n  readonly styles: {[key: string]: string | null} = {};\n  readonly childNodes: DebugNode[] = [];\n  readonly nativeElement: any;\n\n  constructor(nativeNode: any, parent: any, _debugContext: DebugContext) {\n    super(nativeNode, parent, _debugContext);\n    this.nativeElement = nativeNode;\n  }\n\n  addChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      (child as{parent: DebugNode}).parent = this;\n    }\n  }\n\n  removeChild(child: DebugNode) {\n    const childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      (child as{parent: DebugNode | null}).parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n\n  insertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          (c.parent as DebugElement__PRE_R3__).removeChild(c);\n        }\n        (child as{parent: DebugNode}).parent = this;\n      });\n    }\n  }\n\n  insertBefore(refChild: DebugNode, newChild: DebugNode): void {\n    const refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        (newChild.parent as DebugElement__PRE_R3__).removeChild(newChild);\n      }\n      (newChild as{parent: DebugNode}).parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n\n  query(predicate: Predicate<DebugElement>): DebugElement {\n    const results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n\n  get children(): DebugElement[] {\n    return this\n        .childNodes  //\n        .filter((node) => node instanceof DebugElement__PRE_R3__) as DebugElement[];\n  }\n\n  triggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\n/**\n * @publicApi\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement__PRE_R3__) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement__PRE_R3__) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement__PRE_R3__) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\nfunction notImplemented(): Error {\n  throw new Error('Missing proper ivy implementation.');\n}\n\nclass DebugNode__POST_R3__ implements DebugNode {\n  readonly nativeNode: Node;\n\n  constructor(nativeNode: Node) { this.nativeNode = nativeNode; }\n\n  get parent(): DebugElement|null {\n    const parent = this.nativeNode.parentNode as Element;\n    return parent ? new DebugElement__POST_R3__(parent) : null;\n  }\n\n  get injector(): Injector { return getInjector(this.nativeNode); }\n\n  get componentInstance(): any {\n    const nativeElement = this.nativeNode;\n    return nativeElement && getComponent(nativeElement as Element);\n  }\n  get context(): any { return getContext(this.nativeNode as Element); }\n\n  get listeners(): EventListener[] {\n    return getListeners(this.nativeNode as Element).filter(isBrowserEvents);\n  }\n\n  get references(): {[key: string]: any;} { return getLocalRefs(this.nativeNode); }\n\n  get providerTokens(): any[] { return getInjectionTokens(this.nativeNode as Element); }\n}\n\nclass DebugElement__POST_R3__ extends DebugNode__POST_R3__ implements DebugElement {\n  constructor(nativeNode: Element) {\n    ngDevMode && assertDomNode(nativeNode);\n    super(nativeNode);\n  }\n\n  get nativeElement(): Element|null {\n    return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode as Element : null;\n  }\n\n  get name(): string { return this.nativeElement !.nodeName; }\n\n  get properties(): {[key: string]: any;} {\n    const context = loadLContext(this.nativeNode) !;\n    const lView = context.lView;\n    const tView = lView[TVIEW];\n    const tNode = tView.data[context.nodeIndex] as TNode;\n    const properties = {};\n    // TODO: https://angular-team.atlassian.net/browse/FW-681\n    // Missing implementation here...\n    return properties;\n  }\n\n  get attributes(): {[key: string]: string | null;} {\n    const attributes: {[key: string]: string | null;} = {};\n    const element = this.nativeElement;\n    if (element) {\n      const eAttrs = element.attributes;\n      for (let i = 0; i < eAttrs.length; i++) {\n        const attr = eAttrs[i];\n        attributes[attr.name] = attr.value;\n      }\n    }\n    return attributes;\n  }\n\n  get classes(): {[key: string]: boolean;} {\n    const classes: {[key: string]: boolean;} = {};\n    const element = this.nativeElement;\n    if (element) {\n      const lContext = loadLContextFromNode(element);\n      const lNode = lContext.lView[lContext.nodeIndex];\n      const stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n      if (stylingContext) {\n        for (let i = StylingIndex.SingleStylesStartPosition; i < lNode.length;\n             i += StylingIndex.Size) {\n          if (isClassBasedValue(lNode, i)) {\n            const className = getProp(lNode, i);\n            const value = getValue(lNode, i);\n            if (typeof value == 'boolean') {\n              // we want to ignore `null` since those don't overwrite the values.\n              classes[className] = value;\n            }\n          }\n        }\n      } else {\n        // Fallback, just read DOM.\n        const eClasses = element.classList;\n        for (let i = 0; i < eClasses.length; i++) {\n          classes[eClasses[i]] = true;\n        }\n      }\n    }\n    return classes;\n  }\n\n  get styles(): {[key: string]: string | null;} {\n    const styles: {[key: string]: string | null;} = {};\n    const element = this.nativeElement;\n    if (element) {\n      const lContext = loadLContextFromNode(element);\n      const lNode = lContext.lView[lContext.nodeIndex];\n      const stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n      if (stylingContext) {\n        for (let i = StylingIndex.SingleStylesStartPosition; i < lNode.length;\n             i += StylingIndex.Size) {\n          if (!isClassBasedValue(lNode, i)) {\n            const styleName = getProp(lNode, i);\n            const value = getValue(lNode, i) as string | null;\n            if (value !== null) {\n              // we want to ignore `null` since those don't overwrite the values.\n              styles[styleName] = value;\n            }\n          }\n        }\n      } else {\n        // Fallback, just read DOM.\n        const eStyles = (element as HTMLElement).style;\n        for (let i = 0; i < eStyles.length; i++) {\n          const name = eStyles.item(i);\n          styles[name] = eStyles.getPropertyValue(name);\n        }\n      }\n    }\n    return styles;\n  }\n\n  get childNodes(): DebugNode[] {\n    const childNodes = this.nativeNode.childNodes;\n    const children: DebugNode[] = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const element = childNodes[i];\n      children.push(getDebugNode__POST_R3__(element));\n    }\n    return children;\n  }\n\n  get children(): DebugElement[] {\n    const nativeElement = this.nativeElement;\n    if (!nativeElement) return [];\n    const childNodes = nativeElement.children;\n    const children: DebugElement[] = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const element = childNodes[i];\n      children.push(getDebugNode__POST_R3__(element));\n    }\n    return children;\n  }\n\n  query(predicate: Predicate<DebugElement>): DebugElement {\n    const results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const matches: DebugElement[] = [];\n    _queryNodeChildrenR3(this, predicate, matches, true);\n    return matches;\n  }\n\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const matches: DebugNode[] = [];\n    _queryNodeChildrenR3(this, predicate, matches, false);\n    return matches;\n  }\n\n  triggerEventHandler(eventName: string, eventObj: any): void {\n    this.listeners.forEach((listener) => {\n      if (listener.name === eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\nfunction _queryNodeChildrenR3(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[],\n    elementsOnly: boolean) {\n  if (parentNode instanceof DebugElement__POST_R3__) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement__POST_R3__) {\n        if (elementsOnly ? node.nativeElement : true) {\n          _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n        }\n      }\n    });\n  }\n}\n\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst _nativeNodeToDebugNode = new Map<any, DebugNode>();\n\nfunction getDebugNode__PRE_R3__(nativeNode: any): DebugNode|null {\n  return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nexport function getDebugNode__POST_R3__(nativeNode: Element): DebugElement__POST_R3__;\nexport function getDebugNode__POST_R3__(nativeNode: Node): DebugNode__POST_R3__;\nexport function getDebugNode__POST_R3__(nativeNode: null): null;\nexport function getDebugNode__POST_R3__(nativeNode: any): DebugNode|null {\n  if (nativeNode instanceof Node) {\n    return nativeNode.nodeType == Node.ELEMENT_NODE ?\n        new DebugElement__POST_R3__(nativeNode as Element) :\n        new DebugNode__POST_R3__(nativeNode);\n  }\n  return null;\n}\n\n/**\n * @publicApi\n */\nexport const getDebugNode: (nativeNode: any) => DebugNode | null = getDebugNode__PRE_R3__;\n\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * @publicApi\n */\nexport interface Predicate<T> { (value: T): boolean; }\n\n/**\n * @publicApi\n */\nexport const DebugNode: {new (...args: any[]): DebugNode} = DebugNode__PRE_R3__ as any;\n\n/**\n * @publicApi\n */\nexport const DebugElement: {new (...args: any[]): DebugElement} = DebugElement__PRE_R3__ as any;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isListLikeIterable, iterateListLike} from '../change_detection_util';\nimport {IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, NgIterable, TrackByFunction} from './iterable_differs';\n\n\nexport class DefaultIterableDifferFactory implements IterableDifferFactory {\n  constructor() {}\n  supports(obj: Object|null|undefined): boolean { return isListLikeIterable(obj); }\n\n  create<V>(trackByFn?: TrackByFunction<V>): DefaultIterableDiffer<V> {\n    return new DefaultIterableDiffer<V>(trackByFn);\n  }\n}\n\nconst trackByIdentity = (index: number, item: any) => item;\n\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * @publicApi\n */\nexport class DefaultIterableDiffer<V> implements IterableDiffer<V>, IterableChanges<V> {\n  public readonly length: number = 0;\n  // TODO(issue/24571): remove '!'.\n  public readonly collection !: V[] | Iterable<V>| null;\n  // Keeps track of the used records at any point in time (during & across `_check()` calls)\n  private _linkedRecords: _DuplicateMap<V>|null = null;\n  // Keeps track of the removed records at any point in time during `_check()` calls.\n  private _unlinkedRecords: _DuplicateMap<V>|null = null;\n  private _previousItHead: IterableChangeRecord_<V>|null = null;\n  private _itHead: IterableChangeRecord_<V>|null = null;\n  private _itTail: IterableChangeRecord_<V>|null = null;\n  private _additionsHead: IterableChangeRecord_<V>|null = null;\n  private _additionsTail: IterableChangeRecord_<V>|null = null;\n  private _movesHead: IterableChangeRecord_<V>|null = null;\n  private _movesTail: IterableChangeRecord_<V>|null = null;\n  private _removalsHead: IterableChangeRecord_<V>|null = null;\n  private _removalsTail: IterableChangeRecord_<V>|null = null;\n  // Keeps track of records where custom track by is the same, but item identity has changed\n  private _identityChangesHead: IterableChangeRecord_<V>|null = null;\n  private _identityChangesTail: IterableChangeRecord_<V>|null = null;\n  private _trackByFn: TrackByFunction<V>;\n\n  constructor(trackByFn?: TrackByFunction<V>) { this._trackByFn = trackByFn || trackByIdentity; }\n\n  forEachItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._itHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n\n  forEachOperation(\n      fn: (item: IterableChangeRecord<V>, previousIndex: number|null, currentIndex: number|null) =>\n          void) {\n    let nextIt = this._itHead;\n    let nextRemove = this._removalsHead;\n    let addRemoveOffset = 0;\n    let moveOffsets: number[]|null = null;\n    while (nextIt || nextRemove) {\n      // Figure out which is the next record to process\n      // Order: remove, add, move\n      const record: IterableChangeRecord<V> = !nextRemove ||\n              nextIt &&\n                  nextIt.currentIndex ! <\n                      getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n          nextIt ! :\n          nextRemove;\n      const adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n      const currentIndex = record.currentIndex;\n\n      // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n      if (record === nextRemove) {\n        addRemoveOffset--;\n        nextRemove = nextRemove._nextRemoved;\n      } else {\n        nextIt = nextIt !._next;\n        if (record.previousIndex == null) {\n          addRemoveOffset++;\n        } else {\n          // INVARIANT:  currentIndex < previousIndex\n          if (!moveOffsets) moveOffsets = [];\n          const localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n          const localCurrentIndex = currentIndex ! - addRemoveOffset;\n          if (localMovePreviousIndex != localCurrentIndex) {\n            for (let i = 0; i < localMovePreviousIndex; i++) {\n              const offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n              const index = offset + i;\n              if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                moveOffsets[i] = offset + 1;\n              }\n            }\n            const previousIndex = record.previousIndex;\n            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n          }\n        }\n      }\n\n      if (adjPreviousIndex !== currentIndex) {\n        fn(record, adjPreviousIndex, currentIndex);\n      }\n    }\n  }\n\n  forEachPreviousItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n\n  forEachAddedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n\n  forEachMovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      fn(record);\n    }\n  }\n\n  forEachRemovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n\n  forEachIdentityChange(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n      fn(record);\n    }\n  }\n\n  diff(collection: NgIterable<V>): DefaultIterableDiffer<V>|null {\n    if (collection == null) collection = [];\n    if (!isListLikeIterable(collection)) {\n      throw new Error(\n          `Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);\n    }\n\n    if (this.check(collection)) {\n      return this;\n    } else {\n      return null;\n    }\n  }\n\n  onDestroy() {}\n\n  check(collection: NgIterable<V>): boolean {\n    this._reset();\n\n    let record: IterableChangeRecord_<V>|null = this._itHead;\n    let mayBeDirty: boolean = false;\n    let index: number;\n    let item: V;\n    let itemTrackBy: any;\n    if (Array.isArray(collection)) {\n      (this as{length: number}).length = collection.length;\n\n      for (let index = 0; index < this.length; index++) {\n        item = collection[index];\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n\n        record = record._next;\n      }\n    } else {\n      index = 0;\n      iterateListLike(collection, (item: V) => {\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n        record = record._next;\n        index++;\n      });\n      (this as{length: number}).length = index;\n    }\n\n    this._truncate(record);\n    (this as{collection: V[] | Iterable<V>}).collection = collection;\n    return this.isDirty;\n  }\n\n  /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n   * changes.\n   */\n  get isDirty(): boolean {\n    return this._additionsHead !== null || this._movesHead !== null ||\n        this._removalsHead !== null || this._identityChangesHead !== null;\n  }\n\n  /**\n   * Reset the state of the change objects to show no changes. This means set previousKey to\n   * currentKey, and clear all of the queues (additions, moves, removals).\n   * Set the previousIndexes of moved and added items to their currentIndexes\n   * Reset the list of additions, moves and removals\n   *\n   * @internal\n   */\n  _reset() {\n    if (this.isDirty) {\n      let record: IterableChangeRecord_<V>|null;\n      let nextRecord: IterableChangeRecord_<V>|null;\n\n      for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._additionsHead = this._additionsTail = null;\n\n      for (record = this._movesHead; record !== null; record = nextRecord) {\n        record.previousIndex = record.currentIndex;\n        nextRecord = record._nextMoved;\n      }\n      this._movesHead = this._movesTail = null;\n      this._removalsHead = this._removalsTail = null;\n      this._identityChangesHead = this._identityChangesTail = null;\n\n      // TODO(vicb): when assert gets supported\n      // assert(!this.isDirty);\n    }\n  }\n\n  /**\n   * This is the core function which handles differences between collections.\n   *\n   * - `record` is the record which we saw at this position last time. If null then it is a new\n   *   item.\n   * - `item` is the current item in the collection\n   * - `index` is the position of the item in the collection\n   *\n   * @internal\n   */\n  _mismatch(record: IterableChangeRecord_<V>|null, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    // The previous record after which we will append the current one.\n    let previousRecord: IterableChangeRecord_<V>|null;\n\n    if (record === null) {\n      previousRecord = this._itTail;\n    } else {\n      previousRecord = record._prev;\n      // Remove the record from the collection since we know it does not match the item.\n      this._remove(record);\n    }\n\n    // Attempt to see if we have seen the item before.\n    record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n    if (record !== null) {\n      // We have seen this before, we need to move it forward in the collection.\n      // But first we need to check if identity changed, so we can update in view if necessary\n      if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n      this._moveAfter(record, previousRecord, index);\n    } else {\n      // Never seen it, check evicted list.\n      record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n      if (record !== null) {\n        // It is an item which we have evicted earlier: reinsert it back into the list.\n        // But first we need to check if identity changed, so we can update in view if necessary\n        if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n        this._reinsertAfter(record, previousRecord, index);\n      } else {\n        // It is a new item: add it.\n        record =\n            this._addAfter(new IterableChangeRecord_<V>(item, itemTrackBy), previousRecord, index);\n      }\n    }\n    return record;\n  }\n\n  /**\n   * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n   *\n   * Use case: `[a, a]` => `[b, a, a]`\n   *\n   * If we did not have this check then the insertion of `b` would:\n   *   1) evict first `a`\n   *   2) insert `b` at `0` index.\n   *   3) leave `a` at index `1` as is. <-- this is wrong!\n   *   3) reinsert `a` at index 2. <-- this is wrong!\n   *\n   * The correct behavior is:\n   *   1) evict first `a`\n   *   2) insert `b` at `0` index.\n   *   3) reinsert `a` at index 1.\n   *   3) move `a` at from `1` to `2`.\n   *\n   *\n   * Double check that we have not evicted a duplicate item. We need to check if the item type may\n   * have already been removed:\n   * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n   * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n   * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n   * at the end.\n   *\n   * @internal\n   */\n  _verifyReinsertion(record: IterableChangeRecord_<V>, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    let reinsertRecord: IterableChangeRecord_<V>|null =\n        this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n    if (reinsertRecord !== null) {\n      record = this._reinsertAfter(reinsertRecord, record._prev !, index);\n    } else if (record.currentIndex != index) {\n      record.currentIndex = index;\n      this._addToMoves(record, index);\n    }\n    return record;\n  }\n\n  /**\n   * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n   *\n   * - `record` The first excess {@link IterableChangeRecord_}.\n   *\n   * @internal\n   */\n  _truncate(record: IterableChangeRecord_<V>|null) {\n    // Anything after that needs to be removed;\n    while (record !== null) {\n      const nextRecord: IterableChangeRecord_<V>|null = record._next;\n      this._addToRemovals(this._unlink(record));\n      record = nextRecord;\n    }\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.clear();\n    }\n\n    if (this._additionsTail !== null) {\n      this._additionsTail._nextAdded = null;\n    }\n    if (this._movesTail !== null) {\n      this._movesTail._nextMoved = null;\n    }\n    if (this._itTail !== null) {\n      this._itTail._next = null;\n    }\n    if (this._removalsTail !== null) {\n      this._removalsTail._nextRemoved = null;\n    }\n    if (this._identityChangesTail !== null) {\n      this._identityChangesTail._nextIdentityChange = null;\n    }\n  }\n\n  /** @internal */\n  _reinsertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.remove(record);\n    }\n    const prev = record._prevRemoved;\n    const next = record._nextRemoved;\n\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n\n  /** @internal */\n  _moveAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._unlink(record);\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n\n  /** @internal */\n  _addAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._insertAfter(record, prevRecord, index);\n\n    if (this._additionsTail === null) {\n      // TODO(vicb):\n      // assert(this._additionsHead === null);\n      this._additionsTail = this._additionsHead = record;\n    } else {\n      // TODO(vicb):\n      // assert(_additionsTail._nextAdded === null);\n      // assert(record._nextAdded === null);\n      this._additionsTail = this._additionsTail._nextAdded = record;\n    }\n    return record;\n  }\n\n  /** @internal */\n  _insertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    // TODO(vicb):\n    // assert(record != prevRecord);\n    // assert(record._next === null);\n    // assert(record._prev === null);\n\n    const next: IterableChangeRecord_<V>|null =\n        prevRecord === null ? this._itHead : prevRecord._next;\n    // TODO(vicb):\n    // assert(next != record);\n    // assert(prevRecord != record);\n    record._next = next;\n    record._prev = prevRecord;\n    if (next === null) {\n      this._itTail = record;\n    } else {\n      next._prev = record;\n    }\n    if (prevRecord === null) {\n      this._itHead = record;\n    } else {\n      prevRecord._next = record;\n    }\n\n    if (this._linkedRecords === null) {\n      this._linkedRecords = new _DuplicateMap<V>();\n    }\n    this._linkedRecords.put(record);\n\n    record.currentIndex = index;\n    return record;\n  }\n\n  /** @internal */\n  _remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    return this._addToRemovals(this._unlink(record));\n  }\n\n  /** @internal */\n  _unlink(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._linkedRecords !== null) {\n      this._linkedRecords.remove(record);\n    }\n\n    const prev = record._prev;\n    const next = record._next;\n\n    // TODO(vicb):\n    // assert((record._prev = null) === null);\n    // assert((record._next = null) === null);\n\n    if (prev === null) {\n      this._itHead = next;\n    } else {\n      prev._next = next;\n    }\n    if (next === null) {\n      this._itTail = prev;\n    } else {\n      next._prev = prev;\n    }\n\n    return record;\n  }\n\n  /** @internal */\n  _addToMoves(record: IterableChangeRecord_<V>, toIndex: number): IterableChangeRecord_<V> {\n    // TODO(vicb):\n    // assert(record._nextMoved === null);\n\n    if (record.previousIndex === toIndex) {\n      return record;\n    }\n\n    if (this._movesTail === null) {\n      // TODO(vicb):\n      // assert(_movesHead === null);\n      this._movesTail = this._movesHead = record;\n    } else {\n      // TODO(vicb):\n      // assert(_movesTail._nextMoved === null);\n      this._movesTail = this._movesTail._nextMoved = record;\n    }\n\n    return record;\n  }\n\n  private _addToRemovals(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords === null) {\n      this._unlinkedRecords = new _DuplicateMap<V>();\n    }\n    this._unlinkedRecords.put(record);\n    record.currentIndex = null;\n    record._nextRemoved = null;\n\n    if (this._removalsTail === null) {\n      // TODO(vicb):\n      // assert(_removalsHead === null);\n      this._removalsTail = this._removalsHead = record;\n      record._prevRemoved = null;\n    } else {\n      // TODO(vicb):\n      // assert(_removalsTail._nextRemoved === null);\n      // assert(record._nextRemoved === null);\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = this._removalsTail._nextRemoved = record;\n    }\n    return record;\n  }\n\n  /** @internal */\n  _addIdentityChange(record: IterableChangeRecord_<V>, item: V) {\n    record.item = item;\n    if (this._identityChangesTail === null) {\n      this._identityChangesTail = this._identityChangesHead = record;\n    } else {\n      this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n    }\n    return record;\n  }\n}\n\nexport class IterableChangeRecord_<V> implements IterableChangeRecord<V> {\n  currentIndex: number|null = null;\n  previousIndex: number|null = null;\n\n  /** @internal */\n  _nextPrevious: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prev: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _next: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prevDup: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextDup: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prevRemoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextRemoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextAdded: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextMoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextIdentityChange: IterableChangeRecord_<V>|null = null;\n\n\n  constructor(public item: V, public trackById: any) {}\n}\n\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nclass _DuplicateItemRecordList<V> {\n  /** @internal */\n  _head: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _tail: IterableChangeRecord_<V>|null = null;\n\n  /**\n   * Append the record to the list of duplicates.\n   *\n   * Note: by design all records in the list of duplicates hold the same value in record.item.\n   */\n  add(record: IterableChangeRecord_<V>): void {\n    if (this._head === null) {\n      this._head = this._tail = record;\n      record._nextDup = null;\n      record._prevDup = null;\n    } else {\n      // TODO(vicb):\n      // assert(record.item ==  _head.item ||\n      //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n      this._tail !._nextDup = record;\n      record._prevDup = this._tail;\n      record._nextDup = null;\n      this._tail = record;\n    }\n  }\n\n  // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n  // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n  get(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._head; record !== null; record = record._nextDup) {\n      if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex !) &&\n          looseIdentical(record.trackById, trackById)) {\n        return record;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n   *\n   * Returns whether the list of duplicates is empty.\n   */\n  remove(record: IterableChangeRecord_<V>): boolean {\n    // TODO(vicb):\n    // assert(() {\n    //  // verify that the record being removed is in the list.\n    //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n    //    if (identical(cursor, record)) return true;\n    //  }\n    //  return false;\n    //});\n\n    const prev: IterableChangeRecord_<V>|null = record._prevDup;\n    const next: IterableChangeRecord_<V>|null = record._nextDup;\n    if (prev === null) {\n      this._head = next;\n    } else {\n      prev._nextDup = next;\n    }\n    if (next === null) {\n      this._tail = prev;\n    } else {\n      next._prevDup = prev;\n    }\n    return this._head === null;\n  }\n}\n\nclass _DuplicateMap<V> {\n  map = new Map<any, _DuplicateItemRecordList<V>>();\n\n  put(record: IterableChangeRecord_<V>) {\n    const key = record.trackById;\n\n    let duplicates = this.map.get(key);\n    if (!duplicates) {\n      duplicates = new _DuplicateItemRecordList<V>();\n      this.map.set(key, duplicates);\n    }\n    duplicates.add(record);\n  }\n\n  /**\n   * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n   * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n   *\n   * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n   * have any more `a`s needs to return the second `a`.\n   */\n  get(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    const key = trackById;\n    const recordList = this.map.get(key);\n    return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n  }\n\n  /**\n   * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n   *\n   * The list of duplicates also is removed from the map if it gets empty.\n   */\n  remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    const key = record.trackById;\n    const recordList: _DuplicateItemRecordList<V> = this.map.get(key) !;\n    // Remove the list of duplicates when it gets empty\n    if (recordList.remove(record)) {\n      this.map.delete(key);\n    }\n    return record;\n  }\n\n  get isEmpty(): boolean { return this.map.size === 0; }\n\n  clear() { this.map.clear(); }\n}\n\nfunction getPreviousIndex(\n    item: any, addRemoveOffset: number, moveOffsets: number[] | null): number {\n  const previousIndex = item.previousIndex;\n  if (previousIndex === null) return previousIndex;\n  let moveOffset = 0;\n  if (moveOffsets && previousIndex < moveOffsets.length) {\n    moveOffset = moveOffsets[previousIndex];\n  }\n  return previousIndex + addRemoveOffset + moveOffset;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isJsObject} from '../change_detection_util';\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\n\n\nexport class DefaultKeyValueDifferFactory<K, V> implements KeyValueDifferFactory {\n  constructor() {}\n  supports(obj: any): boolean { return obj instanceof Map || isJsObject(obj); }\n\n  create<K, V>(): KeyValueDiffer<K, V> { return new DefaultKeyValueDiffer<K, V>(); }\n}\n\nexport class DefaultKeyValueDiffer<K, V> implements KeyValueDiffer<K, V>, KeyValueChanges<K, V> {\n  private _records = new Map<K, KeyValueChangeRecord_<K, V>>();\n  private _mapHead: KeyValueChangeRecord_<K, V>|null = null;\n  // _appendAfter is used in the check loop\n  private _appendAfter: KeyValueChangeRecord_<K, V>|null = null;\n  private _previousMapHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _changesHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _changesTail: KeyValueChangeRecord_<K, V>|null = null;\n  private _additionsHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _additionsTail: KeyValueChangeRecord_<K, V>|null = null;\n  private _removalsHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _removalsTail: KeyValueChangeRecord_<K, V>|null = null;\n\n  get isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n\n  diff(map?: Map<any, any>|{[k: string]: any}|null): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(\n          `Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n\n  onDestroy() {}\n\n  /**\n   * Check the current state of the map vs the previous.\n   * The algorithm is optimised for when the keys do no change.\n   */\n  check(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n\n    let insertBefore = this._mapHead;\n    this._appendAfter = null;\n\n    this._forEach(map, (value: any, key: any) => {\n      if (insertBefore && insertBefore.key === key) {\n        this._maybeAddToChanges(insertBefore, value);\n        this._appendAfter = insertBefore;\n        insertBefore = insertBefore._next;\n      } else {\n        const record = this._getOrCreateRecordForKey(key, value);\n        insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n      }\n    });\n\n    // Items remaining at the end of the list have been deleted\n    if (insertBefore) {\n      if (insertBefore._prev) {\n        insertBefore._prev._next = null;\n      }\n\n      this._removalsHead = insertBefore;\n\n      for (let record: KeyValueChangeRecord_<K, V>|null = insertBefore; record !== null;\n           record = record._nextRemoved) {\n        if (record === this._mapHead) {\n          this._mapHead = null;\n        }\n        this._records.delete(record.key);\n        record._nextRemoved = record._next;\n        record.previousValue = record.currentValue;\n        record.currentValue = null;\n        record._prev = null;\n        record._next = null;\n      }\n    }\n\n    // Make sure tails have no next records from previous runs\n    if (this._changesTail) this._changesTail._nextChanged = null;\n    if (this._additionsTail) this._additionsTail._nextAdded = null;\n\n    return this.isDirty;\n  }\n\n  /**\n   * Inserts a record before `before` or append at the end of the list when `before` is null.\n   *\n   * Notes:\n   * - This method appends at `this._appendAfter`,\n   * - This method updates `this._appendAfter`,\n   * - The return value is the new value for the insertion pointer.\n   */\n  private _insertBeforeOrAppend(\n      before: KeyValueChangeRecord_<K, V>|null,\n      record: KeyValueChangeRecord_<K, V>): KeyValueChangeRecord_<K, V>|null {\n    if (before) {\n      const prev = before._prev;\n      record._next = before;\n      record._prev = prev;\n      before._prev = record;\n      if (prev) {\n        prev._next = record;\n      }\n      if (before === this._mapHead) {\n        this._mapHead = record;\n      }\n\n      this._appendAfter = before;\n      return before;\n    }\n\n    if (this._appendAfter) {\n      this._appendAfter._next = record;\n      record._prev = this._appendAfter;\n    } else {\n      this._mapHead = record;\n    }\n\n    this._appendAfter = record;\n    return null;\n  }\n\n  private _getOrCreateRecordForKey(key: K, value: V): KeyValueChangeRecord_<K, V> {\n    if (this._records.has(key)) {\n      const record = this._records.get(key) !;\n      this._maybeAddToChanges(record, value);\n      const prev = record._prev;\n      const next = record._next;\n      if (prev) {\n        prev._next = next;\n      }\n      if (next) {\n        next._prev = prev;\n      }\n      record._next = null;\n      record._prev = null;\n\n      return record;\n    }\n\n    const record = new KeyValueChangeRecord_<K, V>(key);\n    this._records.set(key, record);\n    record.currentValue = value;\n    this._addToAdditions(record);\n    return record;\n  }\n\n  /** @internal */\n  _reset() {\n    if (this.isDirty) {\n      let record: KeyValueChangeRecord_<K, V>|null;\n      // let `_previousMapHead` contain the state of the map before the changes\n      this._previousMapHead = this._mapHead;\n      for (record = this._previousMapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      // Update `record.previousValue` with the value of the item before the changes\n      // We need to update all changed items (that's those which have been added and changed)\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = null;\n    }\n  }\n\n  // Add the record or a given key to the list of changes only when the value has actually changed\n  private _maybeAddToChanges(record: KeyValueChangeRecord_<K, V>, newValue: any): void {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n\n  private _addToAdditions(record: KeyValueChangeRecord_<K, V>) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else {\n      this._additionsTail !._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n\n  private _addToChanges(record: KeyValueChangeRecord_<K, V>) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else {\n      this._changesTail !._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n\n  /** @internal */\n  private _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nclass KeyValueChangeRecord_<K, V> implements KeyValueChangeRecord<K, V> {\n  previousValue: V|null = null;\n  currentValue: V|null = null;\n\n  /** @internal */\n  _nextPrevious: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _next: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _prev: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextAdded: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextRemoved: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextChanged: KeyValueChangeRecord_<K, V>|null = null;\n\n  constructor(public key: K) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {defineInjectable} from '../../di/defs';\nimport {Optional, SkipSelf} from '../../di/metadata';\nimport {StaticProvider} from '../../di/provider';\nimport {DefaultIterableDifferFactory} from '../differs/default_iterable_differ';\n\n\n/**\n * A type describing supported iterable types.\n *\n * @publicApi\n */\nexport type NgIterable<T> = Array<T>| Iterable<T>;\n\n/**\n * A strategy for tracking changes over time to an iterable. Used by {@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * @publicApi\n */\nexport interface IterableDiffer<V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: NgIterable<V>): IterableChanges<V>|null;\n}\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * @publicApi\n */\nexport interface IterableChanges<V> {\n  /**\n   * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /**\n   * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n   * new `Iterable`.\n   *\n   * NOTE: These are not necessarily the actual operations which were applied to the original\n   * `Iterable`, rather these are a set of computed operations which may not be the same as the\n   * ones applied.\n   *\n   * @param record A change which needs to be applied\n   * @param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `previousIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   * @param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `currentIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   */\n  forEachOperation(\n      fn:\n          (record: IterableChangeRecord<V>, previousIndex: number|null,\n           currentIndex: number|null) => void): void;\n\n  /**\n   * Iterate over changes in the order of original `Iterable` showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all added items. */\n  forEachAddedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all moved items. */\n  forEachMovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all removed items. */\n  forEachRemovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all items which had their identity (as computed by the `TrackByFunction`)\n   * changed. */\n  forEachIdentityChange(fn: (record: IterableChangeRecord<V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @publicApi\n */\nexport interface IterableChangeRecord<V> {\n  /** Current index of the item in `Iterable` or null if removed. */\n  readonly currentIndex: number|null;\n\n  /** Previous index of the item in `Iterable` or null if added. */\n  readonly previousIndex: number|null;\n\n  /** The item. */\n  readonly item: V;\n\n  /** Track by identity as computed by the `TrackByFunction`. */\n  readonly trackById: any;\n}\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @publicApi\n */\nexport interface CollectionChangeRecord<V> extends IterableChangeRecord<V> {}\n\n/**\n * An optional function passed into {@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * @publicApi\n */\nexport interface TrackByFunction<T> { (index: number, item: T): any; }\n\n/**\n * Provides a factory for {@link IterableDiffer}.\n *\n * @publicApi\n */\nexport interface IterableDifferFactory {\n  supports(objects: any): boolean;\n  create<V>(trackByFn?: TrackByFunction<V>): IterableDiffer<V>;\n}\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n * @publicApi\n */\nexport class IterableDiffers {\n  /** @nocollapse */\n  static ngInjectableDef = defineInjectable({\n    providedIn: 'root',\n    factory: () => new IterableDiffers([new DefaultIterableDifferFactory()])\n  });\n\n  /**\n   * @deprecated v4.0.0 - Should be private\n   */\n  factories: IterableDifferFactory[];\n  constructor(factories: IterableDifferFactory[]) { this.factories = factories; }\n\n  static create(factories: IterableDifferFactory[], parent?: IterableDiffers): IterableDiffers {\n    if (parent != null) {\n      const copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n\n    return new IterableDiffers(factories);\n  }\n\n  /**\n   * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n   * inherited {@link IterableDiffers} instance with the provided factories and return a new\n   * {@link IterableDiffers} instance.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example shows how to extend an existing list of factories,\n   * which will only be applied to the injector for this component and its children.\n   * This step is all that's required to make a new {@link IterableDiffer} available.\n   *\n   * ```\n   * @Component({\n   *   viewProviders: [\n   *     IterableDiffers.extend([new ImmutableListDiffer()])\n   *   ]\n   * })\n   * ```\n   */\n  static extend(factories: IterableDifferFactory[]): StaticProvider {\n    return {\n      provide: IterableDiffers,\n      useFactory: (parent: IterableDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n          // to\n          // bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend IterableDiffers without a parent injector');\n        }\n        return IterableDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n\n  find(iterable: any): IterableDifferFactory {\n    const factory = this.factories.find(f => f.supports(iterable));\n    if (factory != null) {\n      return factory;\n    } else {\n      throw new Error(\n          `Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n    }\n  }\n}\n\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Optional, SkipSelf, StaticProvider, defineInjectable} from '../../di';\nimport {DefaultKeyValueDifferFactory} from './default_keyvalue_differ';\n\n\n/**\n * A differ that tracks changes made to an object over time.\n *\n * @publicApi\n */\nexport interface KeyValueDiffer<K, V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: Map<K, V>): KeyValueChanges<K, V>|null;\n\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: {[key: string]: V}): KeyValueChanges<string, V>|null;\n  // TODO(TS2.1): diff<KP extends string>(this: KeyValueDiffer<KP, V>, object: Record<KP, V>):\n  // KeyValueDiffer<KP, V>;\n}\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * @publicApi\n */\nexport interface KeyValueChanges<K, V> {\n  /**\n   * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over changes in the order of original Map showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all keys for which values have changed.\n   */\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all added items.\n   */\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all removed items.\n   */\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @publicApi\n */\nexport interface KeyValueChangeRecord<K, V> {\n  /**\n   * Current key in the Map.\n   */\n  readonly key: K;\n\n  /**\n   * Current value for the key or `null` if removed.\n   */\n  readonly currentValue: V|null;\n\n  /**\n   * Previous value for the key or `null` if added.\n   */\n  readonly previousValue: V|null;\n}\n\n/**\n * Provides a factory for {@link KeyValueDiffer}.\n *\n * @publicApi\n */\nexport interface KeyValueDifferFactory {\n  /**\n   * Test to see if the differ knows how to diff this kind of object.\n   */\n  supports(objects: any): boolean;\n\n  /**\n   * Create a `KeyValueDiffer`.\n   */\n  create<K, V>(): KeyValueDiffer<K, V>;\n}\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n * @publicApi\n */\nexport class KeyValueDiffers {\n  /** @nocollapse */\n  static ngInjectableDef = defineInjectable({\n    providedIn: 'root',\n    factory: () => new KeyValueDiffers([new DefaultKeyValueDifferFactory()])\n  });\n\n  /**\n   * @deprecated v4.0.0 - Should be private.\n   */\n  factories: KeyValueDifferFactory[];\n\n  constructor(factories: KeyValueDifferFactory[]) { this.factories = factories; }\n\n  static create<S>(factories: KeyValueDifferFactory[], parent?: KeyValueDiffers): KeyValueDiffers {\n    if (parent) {\n      const copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n    return new KeyValueDiffers(factories);\n  }\n\n  /**\n   * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n   * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n   * {@link KeyValueDiffers} instance.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example shows how to extend an existing list of factories,\n   * which will only be applied to the injector for this component and its children.\n   * This step is all that's required to make a new {@link KeyValueDiffer} available.\n   *\n   * ```\n   * @Component({\n   *   viewProviders: [\n   *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n   *   ]\n   * })\n   * ```\n   */\n  static extend<S>(factories: KeyValueDifferFactory[]): StaticProvider {\n    return {\n      provide: KeyValueDiffers,\n      useFactory: (parent: KeyValueDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n          // to bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n        }\n        return KeyValueDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n\n  find(kv: any): KeyValueDifferFactory {\n    const factory = this.factories.find(f => f.supports(kv));\n    if (factory) {\n      return factory;\n    }\n    throw new Error(`Cannot find a differ supporting object '${kv}'`);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChanges} from '../metadata/lifecycle_hooks';\nexport {SimpleChange, WrappedValue, devModeEqual} from './change_detection_util';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultIterableDiffer} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nexport {CollectionChangeRecord, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, NgIterable, TrackByFunction} from './differs/iterable_differs';\nexport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n\n\n\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformRef, createPlatformFactory} from './application_ref';\nimport {PLATFORM_ID} from './application_tokens';\nimport {Console} from './console';\nimport {Injector, StaticProvider} from './di';\nimport {TestabilityRegistry} from './testability/testability';\n\nconst _CORE_PLATFORM_PROVIDERS: StaticProvider[] = [\n  // Set a default platform name for platforms that don't set it explicitly.\n  {provide: PLATFORM_ID, useValue: 'unknown'},\n  {provide: PlatformRef, deps: [Injector]},\n  {provide: TestabilityRegistry, deps: []},\n  {provide: Console, deps: []},\n];\n\n/**\n * This platform has to be included in any other platform\n *\n * @publicApi\n */\nexport const platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\n\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @publicApi\n */\nexport const LOCALE_ID = new InjectionToken<string>('LocaleId');\n\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @publicApi\n */\nexport const TRANSLATIONS = new InjectionToken<string>('Translations');\n\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @publicApi\n */\nexport const TRANSLATIONS_FORMAT = new InjectionToken<string>('TranslationsFormat');\n\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the [i18n guide](guide/i18n#missing-translation) for more information.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @publicApi\n */\nexport enum MissingTranslationStrategy {\n  Error = 0,\n  Warning = 1,\n  Ignore = 2,\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_INITIALIZER, ApplicationInitStatus} from './application_init';\nimport {ApplicationRef} from './application_ref';\nimport {APP_ID_RANDOM_PROVIDER} from './application_tokens';\nimport {IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers} from './change_detection/change_detection';\nimport {Console} from './console';\nimport {InjectionToken, Injector, StaticProvider} from './di';\nimport {Inject, Optional, SkipSelf} from './di/metadata';\nimport {ErrorHandler} from './error_handler';\nimport {LOCALE_ID} from './i18n/tokens';\nimport {ComponentFactoryResolver} from './linker';\nimport {Compiler} from './linker/compiler';\nimport {NgModule} from './metadata';\nimport {NgZone} from './zone';\n\nexport function _iterableDiffersFactory() {\n  return defaultIterableDiffers;\n}\n\nexport function _keyValueDiffersFactory() {\n  return defaultKeyValueDiffers;\n}\n\nexport function _localeFactory(locale?: string): string {\n  return locale || 'en-US';\n}\n\n/**\n * A built-in [dependency injection token](guide/glossary#di-token)\n * that is used to configure the root injector for bootstrapping.\n */\nexport const APPLICATION_MODULE_PROVIDERS: StaticProvider[] = [\n  {\n    provide: ApplicationRef,\n    useClass: ApplicationRef,\n    deps:\n        [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n  },\n  {\n    provide: ApplicationInitStatus,\n    useClass: ApplicationInitStatus,\n    deps: [[new Optional(), APP_INITIALIZER]]\n  },\n  {provide: Compiler, useClass: Compiler, deps: []},\n  APP_ID_RANDOM_PROVIDER,\n  {provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: []},\n  {provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: []},\n  {\n    provide: LOCALE_ID,\n    useFactory: _localeFactory,\n    deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n  },\n];\n\n/**\n * Configures the root injector for an app with\n * providers of `@angular/core` dependencies that `ApplicationRef` needs\n * to bootstrap components.\n *\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * @publicApi\n */\n@NgModule({providers: APPLICATION_MODULE_PROVIDERS})\nexport class ApplicationModule {\n  // Inject ApplicationRef to make it eager...\n  constructor(appRef: ApplicationRef) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer2, RendererFactory2, RendererType2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../sanitization/security';\nimport {Type} from '../type';\n\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n */\nexport interface DefinitionFactory<D extends Definition<any>> { (logger: NodeLogger): D; }\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n */\nexport interface NodeLogger { (): () => void; }\n\nexport interface Definition<DF extends DefinitionFactory<any>> { factory: DF|null; }\n\nexport interface NgModuleDefinition extends Definition<NgModuleDefinitionFactory> {\n  providers: NgModuleProviderDef[];\n  providersByKey: {[tokenKey: string]: NgModuleProviderDef};\n  modules: any[];\n  isRoot: boolean;\n}\n\nexport interface NgModuleDefinitionFactory extends DefinitionFactory<NgModuleDefinition> {}\n\nexport interface ViewDefinition extends Definition<ViewDefinitionFactory> {\n  flags: ViewFlags;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  rootNodeFlags: NodeFlags;\n  lastRenderRootNode: NodeDef|null;\n  bindingCount: number;\n  outputCount: number;\n  /**\n   * Binary or of all query ids that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  nodeMatchedQueries: number;\n}\n\nexport interface ViewDefinitionFactory extends DefinitionFactory<ViewDefinition> {}\n\n\nexport interface ViewUpdateFn { (check: NodeCheckFn, view: ViewData): void; }\n\n// helper functions to create an overloaded function type.\nexport interface NodeCheckFn {\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n}\n\nexport const enum ArgumentType {Inline = 0, Dynamic = 1}\n\nexport interface ViewHandleEventFn {\n  (view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n}\n\n/**\n * Bitmask for ViewDefinition.flags.\n */\nexport const enum ViewFlags {\n  None = 0,\n  OnPush = 1 << 1,\n}\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  flags: NodeFlags;\n  // Index of the node in view data and view definition (those are the same)\n  nodeIndex: number;\n  // Index of the node in the check functions\n  // Differ from nodeIndex when nodes are added or removed at runtime (ie after compilation)\n  checkIndex: number;\n  parent: NodeDef|null;\n  renderParent: NodeDef|null;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number|null;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all transitive children (does not include self) **/\n  childFlags: NodeFlags;\n  /** aggregated NodeFlags for all direct children (does not include self) **/\n  directChildFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  bindingFlags: BindingFlags;\n  outputIndex: number;\n  outputs: OutputDef[];\n  /**\n   * references that the user placed on the element\n   */\n  references: {[refId: string]: QueryValueType};\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: number]: QueryValueType};\n  /** Binary or of all matched query ids of this node. */\n  matchedQueryIds: number;\n  /**\n   * Binary or of all query ids that are matched by one of the children.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  childMatchedQueries: number;\n  element: ElementDef|null;\n  provider: ProviderDef|null;\n  text: TextDef|null;\n  query: QueryDef|null;\n  ngContent: NgContentDef|null;\n}\n\n/**\n * Bitmask for NodeDef.flags.\n * Naming convention:\n * - `Type...`: flags that are mutually exclusive\n * - `Cat...`: union of multiple `Type...` (short for category).\n */\nexport const enum NodeFlags {\n  None = 0,\n  TypeElement = 1 << 0,\n  TypeText = 1 << 1,\n  ProjectedTemplate = 1 << 2,\n  CatRenderNode = TypeElement | TypeText,\n  TypeNgContent = 1 << 3,\n  TypePipe = 1 << 4,\n  TypePureArray = 1 << 5,\n  TypePureObject = 1 << 6,\n  TypePurePipe = 1 << 7,\n  CatPureExpression = TypePureArray | TypePureObject | TypePurePipe,\n  TypeValueProvider = 1 << 8,\n  TypeClassProvider = 1 << 9,\n  TypeFactoryProvider = 1 << 10,\n  TypeUseExistingProvider = 1 << 11,\n  LazyProvider = 1 << 12,\n  PrivateProvider = 1 << 13,\n  TypeDirective = 1 << 14,\n  Component = 1 << 15,\n  CatProviderNoDirective =\n      TypeValueProvider | TypeClassProvider | TypeFactoryProvider | TypeUseExistingProvider,\n  CatProvider = CatProviderNoDirective | TypeDirective,\n  OnInit = 1 << 16,\n  OnDestroy = 1 << 17,\n  DoCheck = 1 << 18,\n  OnChanges = 1 << 19,\n  AfterContentInit = 1 << 20,\n  AfterContentChecked = 1 << 21,\n  AfterViewInit = 1 << 22,\n  AfterViewChecked = 1 << 23,\n  EmbeddedViews = 1 << 24,\n  ComponentView = 1 << 25,\n  TypeContentQuery = 1 << 26,\n  TypeViewQuery = 1 << 27,\n  StaticQuery = 1 << 28,\n  DynamicQuery = 1 << 29,\n  TypeNgModule = 1 << 30,\n  CatQuery = TypeContentQuery | TypeViewQuery,\n\n  // mutually exclusive values...\n  Types = CatRenderNode | TypeNgContent | TypePipe | CatPureExpression | CatProvider | CatQuery\n}\n\nexport interface BindingDef {\n  flags: BindingFlags;\n  ns: string|null;\n  name: string|null;\n  nonMinifiedName: string|null;\n  securityContext: SecurityContext|null;\n  suffix: string|null;\n}\n\nexport const enum BindingFlags {\n  TypeElementAttribute = 1 << 0,\n  TypeElementClass = 1 << 1,\n  TypeElementStyle = 1 << 2,\n  TypeProperty = 1 << 3,\n  SyntheticProperty = 1 << 4,\n  SyntheticHostProperty = 1 << 5,\n  CatSyntheticProperty = SyntheticProperty | SyntheticHostProperty,\n\n  // mutually exclusive values...\n  Types = TypeElementAttribute | TypeElementClass | TypeElementStyle | TypeProperty\n}\n\nexport interface OutputDef {\n  type: OutputType;\n  target: 'window'|'document'|'body'|'component'|null;\n  eventName: string;\n  propName: string|null;\n}\n\nexport const enum OutputType {ElementOutput, DirectiveOutput}\n\nexport const enum QueryValueType {\n  ElementRef = 0,\n  RenderElement = 1,\n  TemplateRef = 2,\n  ViewContainerRef = 3,\n  Provider = 4\n}\n\nexport interface ElementDef {\n  // set to null for `<ng-container>`\n  name: string|null;\n  ns: string|null;\n  /** ns, name, value */\n  attrs: [string, string, string][]|null;\n  template: ViewDefinition|null;\n  componentProvider: NodeDef|null;\n  componentRendererType: RendererType2|null;\n  // closure to allow recursive components\n  componentView: ViewDefinitionFactory|null;\n  /**\n   * visible public providers for DI in the view,\n   * as see from this element. This does not include private providers.\n   */\n  publicProviders: {[tokenKey: string]: NodeDef}|null;\n  /**\n   * same as visiblePublicProviders, but also includes private providers\n   * that are located on this element.\n   */\n  allProviders: {[tokenKey: string]: NodeDef}|null;\n  handleEvent: ElementHandleEventFn|null;\n}\n\nexport interface ElementHandleEventFn { (view: ViewData, eventName: string, event: any): boolean; }\n\nexport interface ProviderDef {\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface NgModuleProviderDef {\n  flags: NodeFlags;\n  index: number;\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\n\n/**\n * Bitmask for DI flags\n */\nexport const enum DepFlags {\n  None = 0,\n  SkipSelf = 1 << 0,\n  Optional = 1 << 1,\n  Self = 1 << 2,\n  Value = 1 << 3,\n}\n\nexport interface TextDef { prefix: string; }\n\nexport interface QueryDef {\n  id: number;\n  // variant of the id that can be used to check against NodeDef.matchedQueryIds, ...\n  filterId: number;\n  bindings: QueryBindingDef[];\n}\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\n\nexport const enum QueryBindingType {First = 0, All = 1}\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\nexport interface NgModuleData extends Injector, NgModuleRef<any> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _def: NgModuleDefinition;\n  _parent: Injector;\n  _providers: any[];\n}\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  root: RootData;\n  renderer: Renderer2;\n  // index of component provider / anchor.\n  parentNodeDef: NodeDef|null;\n  parent: ViewData|null;\n  viewContainerParent: ViewData|null;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[]|null;\n  initIndex: number;\n}\n\n/**\n * Bitmask of states\n */\nexport const enum ViewState {\n  BeforeFirstCheck = 1 << 0,\n  FirstCheck = 1 << 1,\n  Attached = 1 << 2,\n  ChecksEnabled = 1 << 3,\n  IsProjectedView = 1 << 4,\n  CheckProjectedView = 1 << 5,\n  CheckProjectedViews = 1 << 6,\n  Destroyed = 1 << 7,\n\n  // InitState Uses 3 bits\n  InitState_Mask = 7 << 8,\n  InitState_BeforeInit = 0 << 8,\n  InitState_CallingOnInit = 1 << 8,\n  InitState_CallingAfterContentInit = 2 << 8,\n  InitState_CallingAfterViewInit = 3 << 8,\n  InitState_AfterInit = 4 << 8,\n\n  CatDetectChanges = Attached | ChecksEnabled,\n  CatInit = BeforeFirstCheck | CatDetectChanges | InitState_BeforeInit\n}\n\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nexport function shiftInitState(\n    view: ViewData, priorInitState: ViewState, newInitState: ViewState): boolean {\n  // Only update the InitState if we are currently in the prior state.\n  // For example, only move into CallingInit if we are in BeforeInit. Only\n  // move into CallingContentInit if we are in CallingInit. Normally this will\n  // always be true because of how checkCycle is called in checkAndUpdateView.\n  // However, if checkAndUpdateView is called recursively or if an exception is\n  // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n  // from the beginning. This ensures the state is monotonically increasing,\n  // terminating in the AfterInit state, which ensures the Init methods are called\n  // at least once and only once.\n  const state = view.state;\n  const initState = state & ViewState.InitState_Mask;\n  if (initState === priorInitState) {\n    view.state = (state & ~ViewState.InitState_Mask) | newInitState;\n    view.initIndex = -1;\n    return true;\n  }\n  return initState === newInitState;\n}\n\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nexport function shouldCallLifecycleInitHook(\n    view: ViewData, initState: ViewState, index: number): boolean {\n  if ((view.state & ViewState.InitState_Mask) === initState && view.initIndex <= index) {\n    view.initIndex = index + 1;\n    return true;\n  }\n  return false;\n}\n\nexport interface DisposableFn { (): void; }\n\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData { private __brand: any; }\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  componentView: ViewData;\n  viewContainer: ViewContainerData|null;\n  template: TemplateData;\n}\n\nexport interface ViewContainerData extends ViewContainerRef {\n  // Note: we are using the prefix _ as ViewContainerData is a ViewContainerRef and therefore\n  // directly\n  // exposed to the user.\n  _embeddedViews: ViewData[];\n}\n\nexport interface TemplateData extends TemplateRef<any> {\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  // Note: we are using the prefix _ as TemplateData is a TemplateRef and therefore directly\n  // exposed to the user.\n  _projectedViews: ViewData[];\n}\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData { instance: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData { value: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return <any>view.nodes[index];\n}\n\nexport interface RootData {\n  injector: Injector;\n  ngModule: NgModuleRef<any>;\n  projectableNodes: any[][];\n  selectorOrNode: any;\n  renderer: Renderer2;\n  rendererFactory: RendererFactory2;\n  errorHandler: ErrorHandler;\n  sanitizer: Sanitizer;\n}\n\nexport abstract class DebugContext {\n  abstract get view(): ViewData;\n  abstract get nodeIndex(): number|null;\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get componentRenderElement(): any;\n  abstract get renderNode(): any;\n  abstract logError(console: Console, ...values: any[]): void;\n}\n\n// -------------------------------------\n// Other\n// -------------------------------------\n\nexport const enum CheckType {CheckAndUpdate, CheckNoChanges}\n\nexport interface ProviderOverride {\n  token: any;\n  flags: NodeFlags;\n  value: any;\n  deps: ([DepFlags, any]|any)[];\n  deprecatedBehavior: boolean;\n}\n\nexport interface Services {\n  setCurrentNode(view: ViewData, nodeIndex: number): void;\n  createRootView(\n      injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string|any,\n      def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData;\n  createEmbeddedView(parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any):\n      ViewData;\n  createComponentView(\n      parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData;\n  createNgModuleRef(\n      moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n      def: NgModuleDefinition): NgModuleRef<any>;\n  overrideProvider(override: ProviderOverride): void;\n  overrideComponentView(compType: Type<any>, compFactory: ComponentFactory<any>): void;\n  clearOverrides(): void;\n  checkAndUpdateView(view: ViewData): void;\n  checkNoChangesView(view: ViewData): void;\n  destroyView(view: ViewData): void;\n  resolveDep(\n      view: ViewData, elDef: NodeDef|null, allowPrivateServices: boolean, depDef: DepDef,\n      notFoundValue?: any): any;\n  createDebugContext(view: ViewData, nodeIndex: number): DebugContext;\n  handleEvent: ViewHandleEventFn;\n  updateDirectives: (view: ViewData, checkType: CheckType) => void;\n  updateRenderer: (view: ViewData, checkType: CheckType) => void;\n  dirtyParentQueries: (view: ViewData) => void;\n}\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport const Services: Services = {\n  setCurrentNode: undefined !,\n  createRootView: undefined !,\n  createEmbeddedView: undefined !,\n  createComponentView: undefined !,\n  createNgModuleRef: undefined !,\n  overrideProvider: undefined !,\n  overrideComponentView: undefined !,\n  clearOverrides: undefined !,\n  checkAndUpdateView: undefined !,\n  checkNoChangesView: undefined !,\n  destroyView: undefined !,\n  resolveDep: undefined !,\n  createDebugContext: undefined !,\n  handleEvent: undefined !,\n  updateDirectives: undefined !,\n  updateRenderer: undefined !,\n  dirtyParentQueries: undefined !,\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext} from '../errors';\nimport {DebugContext, ViewState} from './types';\n\nexport function expressionChangedAfterItHasBeenCheckedError(\n    context: DebugContext, oldValue: any, currValue: any, isFirstCheck: boolean): Error {\n  let msg =\n      `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (isFirstCheck) {\n    msg +=\n        ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n        ` Has it been created in a change detection hook ?`;\n  }\n  return viewDebugError(msg, context);\n}\n\nexport function viewWrappedDebugError(err: any, context: DebugContext): Error {\n  if (!(err instanceof Error)) {\n    // errors that are not Error instances don't have a stack,\n    // so it is ok to wrap them into a new Error object...\n    err = new Error(err.toString());\n  }\n  _addDebugContext(err, context);\n  return err;\n}\n\nexport function viewDebugError(msg: string, context: DebugContext): Error {\n  const err = new Error(msg);\n  _addDebugContext(err, context);\n  return err;\n}\n\nfunction _addDebugContext(err: Error, context: DebugContext) {\n  (err as any)[ERROR_DEBUG_CONTEXT] = context;\n  (err as any)[ERROR_LOGGER] = context.logError.bind(context);\n}\n\nexport function isViewDebugError(err: Error): boolean {\n  return !!getDebugContext(err);\n}\n\nexport function viewDestroyedError(action: string): Error {\n  return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WrappedValue, devModeEqual} from '../change_detection/change_detection';\nimport {SOURCE} from '../di/injector';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {looseIdentical, stringify} from '../util';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {BindingDef, BindingFlags, Definition, DefinitionFactory, DepDef, DepFlags, ElementData, NodeDef, NodeFlags, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewState, asElementData, asTextData} from './types';\n\nexport const NOOP: any = () => {};\n\nconst _tokenKeyCache = new Map<any, string>();\n\nexport function tokenKey(token: any): string {\n  let key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n\nexport function unwrapValue(view: ViewData, nodeIdx: number, bindingIdx: number, value: any): any {\n  if (WrappedValue.isWrapped(value)) {\n    value = WrappedValue.unwrap(value);\n    const globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n    const oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n    view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n  }\n  return value;\n}\n\nconst UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nconst EMPTY_RENDERER_TYPE_ID = '$$empty';\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createRendererType2(values: {\n  styles: (string | any[])[],\n  encapsulation: ViewEncapsulation,\n  data: {[kind: string]: any[]}\n}): RendererType2 {\n  return {\n    id: UNDEFINED_RENDERER_TYPE_ID,\n    styles: values.styles,\n    encapsulation: values.encapsulation,\n    data: values.data\n  };\n}\n\nlet _renderCompCount = 0;\n\nexport function resolveRendererType2(type?: RendererType2 | null): RendererType2|null {\n  if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n    // first time we see this RendererType2. Initialize it...\n    const isFilled =\n        ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n         type.styles.length || Object.keys(type.data).length);\n    if (isFilled) {\n      type.id = `c${_renderCompCount++}`;\n    } else {\n      type.id = EMPTY_RENDERER_TYPE_ID;\n    }\n  }\n  if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n    type = null;\n  }\n  return type || null;\n}\n\nexport function checkBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  const oldValues = view.oldValues;\n  if ((view.state & ViewState.FirstCheck) ||\n      !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n    return true;\n  }\n  return false;\n}\n\nexport function checkAndUpdateBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  if (checkBinding(view, def, bindingIdx, value)) {\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return true;\n  }\n  return false;\n}\n\nexport function checkBindingNoChanges(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  const oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  if ((view.state & ViewState.BeforeFirstCheck) || !devModeEqual(oldValue, value)) {\n    const bindingName = def.bindings[bindingIdx].name;\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, def.nodeIndex), `${bindingName}: ${oldValue}`,\n        `${bindingName}: ${value}`, (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n\nexport function markParentViewsForCheck(view: ViewData) {\n  let currView: ViewData|null = view;\n  while (currView) {\n    if (currView.def.flags & ViewFlags.OnPush) {\n      currView.state |= ViewState.ChecksEnabled;\n    }\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n\nexport function markParentViewsForCheckProjectedViews(view: ViewData, endView: ViewData) {\n  let currView: ViewData|null = view;\n  while (currView && currView !== endView) {\n    currView.state |= ViewState.CheckProjectedViews;\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n\nexport function dispatchEvent(\n    view: ViewData, nodeIndex: number, eventName: string, event: any): boolean|undefined {\n  try {\n    const nodeDef = view.def.nodes[nodeIndex];\n    const startView = nodeDef.flags & NodeFlags.ComponentView ?\n        asElementData(view, nodeIndex).componentView :\n        view;\n    markParentViewsForCheck(startView);\n    return Services.handleEvent(view, nodeIndex, eventName, event);\n  } catch (e) {\n    // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n    view.root.errorHandler.handleError(e);\n  }\n}\n\nexport function declaredViewContainer(view: ViewData): ElementData|null {\n  if (view.parent) {\n    const parentView = view.parent;\n    return asElementData(parentView, view.parentNodeDef !.nodeIndex);\n  }\n  return null;\n}\n\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nexport function viewParentEl(view: ViewData): NodeDef|null {\n  const parentView = view.parent;\n  if (parentView) {\n    return view.parentNodeDef !.parent;\n  } else {\n    return null;\n  }\n}\n\nexport function renderNode(view: ViewData, def: NodeDef): any {\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return asElementData(view, def.nodeIndex).renderElement;\n    case NodeFlags.TypeText:\n      return asTextData(view, def.nodeIndex).renderText;\n  }\n}\n\nexport function elementEventFullName(target: string | null, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n\nexport function isComponentView(view: ViewData): boolean {\n  return !!view.parent && !!(view.parentNodeDef !.flags & NodeFlags.Component);\n}\n\nexport function isEmbeddedView(view: ViewData): boolean {\n  return !!view.parent && !(view.parentNodeDef !.flags & NodeFlags.Component);\n}\n\nexport function filterQueryId(queryId: number): number {\n  return 1 << (queryId % 32);\n}\n\nexport function splitMatchedQueriesDsl(\n    matchedQueriesDsl: [string | number, QueryValueType][] | null): {\n  matchedQueries: {[queryId: string]: QueryValueType},\n  references: {[refId: string]: QueryValueType},\n  matchedQueryIds: number\n} {\n  const matchedQueries: {[queryId: string]: QueryValueType} = {};\n  let matchedQueryIds = 0;\n  const references: {[refId: string]: QueryValueType} = {};\n  if (matchedQueriesDsl) {\n    matchedQueriesDsl.forEach(([queryId, valueType]) => {\n      if (typeof queryId === 'number') {\n        matchedQueries[queryId] = valueType;\n        matchedQueryIds |= filterQueryId(queryId);\n      } else {\n        references[queryId] = valueType;\n      }\n    });\n  }\n  return {matchedQueries, references, matchedQueryIds};\n}\n\nexport function splitDepsDsl(deps: ([DepFlags, any] | any)[], sourceName?: string): DepDef[] {\n  return deps.map(value => {\n    let token: any;\n    let flags: DepFlags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = DepFlags.None;\n      token = value;\n    }\n    if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n      Object.defineProperty(token, SOURCE, {value: sourceName, configurable: true});\n    }\n    return {flags, token, tokenKey: tokenKey(token)};\n  });\n}\n\nexport function getParentRenderElement(view: ViewData, renderHost: any, def: NodeDef): any {\n  let renderParent = def.renderParent;\n  if (renderParent) {\n    if ((renderParent.flags & NodeFlags.TypeElement) === 0 ||\n        (renderParent.flags & NodeFlags.ComponentView) === 0 ||\n        (renderParent.element !.componentRendererType &&\n         renderParent.element !.componentRendererType !.encapsulation ===\n             ViewEncapsulation.Native)) {\n      // only children of non components, or children of components with native encapsulation should\n      // be attached.\n      return asElementData(view, def.renderParent !.nodeIndex).renderElement;\n    }\n  } else {\n    return renderHost;\n  }\n}\n\nconst DEFINITION_CACHE = new WeakMap<any, Definition<any>>();\n\nexport function resolveDefinition<D extends Definition<any>>(factory: DefinitionFactory<D>): D {\n  let value = DEFINITION_CACHE.get(factory) !as D;\n  if (!value) {\n    value = factory(() => NOOP);\n    value.factory = factory;\n    DEFINITION_CACHE.set(factory, value);\n  }\n  return value;\n}\n\nexport function rootRenderNodes(view: ViewData): any[] {\n  const renderNodes: any[] = [];\n  visitRootRenderNodes(view, RenderNodeAction.Collect, undefined, undefined, renderNodes);\n  return renderNodes;\n}\n\nexport const enum RenderNodeAction {Collect, AppendChild, InsertBefore, RemoveChild}\n\nexport function visitRootRenderNodes(\n    view: ViewData, action: RenderNodeAction, parentNode: any, nextSibling: any, target?: any[]) {\n  // We need to re-compute the parent node in case the nodes have been moved around manually\n  if (action === RenderNodeAction.RemoveChild) {\n    parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode !));\n  }\n  visitSiblingRenderNodes(\n      view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n\nexport function visitSiblingRenderNodes(\n    view: ViewData, action: RenderNodeAction, startIndex: number, endIndex: number, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & (NodeFlags.TypeElement | NodeFlags.TypeText | NodeFlags.TypeNgContent)) {\n      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n}\n\nexport function visitProjectedRenderNodes(\n    view: ViewData, ngContentIndex: number, action: RenderNodeAction, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  let compView: ViewData|null = view;\n  while (compView && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  const hostView = compView !.parent;\n  const hostElDef = viewParentEl(compView !);\n  const startIndex = hostElDef !.nodeIndex + 1;\n  const endIndex = hostElDef !.nodeIndex + hostElDef !.childCount;\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = hostView !.def.nodes[i];\n    if (nodeDef.ngContentIndex === ngContentIndex) {\n      visitRenderNode(hostView !, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n  if (!hostView !.parent) {\n    // a root view\n    const projectedNodes = view.root.projectableNodes[ngContentIndex];\n    if (projectedNodes) {\n      for (let i = 0; i < projectedNodes.length; i++) {\n        execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n      }\n    }\n  }\n}\n\nfunction visitRenderNode(\n    view: ViewData, nodeDef: NodeDef, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  if (nodeDef.flags & NodeFlags.TypeNgContent) {\n    visitProjectedRenderNodes(\n        view, nodeDef.ngContent !.index, action, parentNode, nextSibling, target);\n  } else {\n    const rn = renderNode(view, nodeDef);\n    if (action === RenderNodeAction.RemoveChild && (nodeDef.flags & NodeFlags.ComponentView) &&\n        (nodeDef.bindingFlags & BindingFlags.CatSyntheticProperty)) {\n      // Note: we might need to do both actions.\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticProperty)) {\n        execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n      }\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticHostProperty)) {\n        const compView = asElementData(view, nodeDef.nodeIndex).componentView;\n        execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n      }\n    } else {\n      execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n    }\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      const embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer !._embeddedViews;\n      for (let k = 0; k < embeddedViews.length; k++) {\n        visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n      }\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && !nodeDef.element !.name) {\n      visitSiblingRenderNodes(\n          view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode,\n          nextSibling, target);\n    }\n  }\n}\n\nfunction execRenderNodeAction(\n    view: ViewData, renderNode: any, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  const renderer = view.renderer;\n  switch (action) {\n    case RenderNodeAction.AppendChild:\n      renderer.appendChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.InsertBefore:\n      renderer.insertBefore(parentNode, renderNode, nextSibling);\n      break;\n    case RenderNodeAction.RemoveChild:\n      renderer.removeChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.Collect:\n      target !.push(renderNode);\n      break;\n  }\n}\n\nconst NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n\nexport function splitNamespace(name: string): string[] {\n  if (name[0] === ':') {\n    const match = name.match(NS_PREFIX_RE) !;\n    return [match[1], match[2]];\n  }\n  return ['', name];\n}\n\nexport function calcBindingFlags(bindings: BindingDef[]): BindingFlags {\n  let flags = 0;\n  for (let i = 0; i < bindings.length; i++) {\n    flags |= bindings[i].flags;\n  }\n  return flags;\n}\n\nexport function interpolate(valueCount: number, constAndInterp: string[]): string {\n  let result = '';\n  for (let i = 0; i < valueCount * 2; i = i + 2) {\n    result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n  }\n  return result + constAndInterp[valueCount * 2];\n}\n\nexport function inlineInterpolate(\n    valueCount: number, c0: string, a1: any, c1: string, a2?: any, c2?: string, a3?: any,\n    c3?: string, a4?: any, c4?: string, a5?: any, c5?: string, a6?: any, c6?: string, a7?: any,\n    c7?: string, a8?: any, c8?: string, a9?: any, c9?: string): string {\n  switch (valueCount) {\n    case 1:\n      return c0 + _toStringWithNull(a1) + c1;\n    case 2:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n    case 3:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3;\n    case 4:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4;\n    case 5:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n    case 6:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n    case 7:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7;\n    case 8:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n    case 9:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n    default:\n      throw new Error(`Does not support more than 9 expressions`);\n  }\n}\n\nfunction _toStringWithNull(v: any): string {\n  return v != null ? v.toString() : '';\n}\n\nexport const EMPTY_ARRAY: any[] = [];\nexport const EMPTY_MAP: {[key: string]: any} = {};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {SecurityContext} from '../sanitization/security';\n\nimport {BindingDef, BindingFlags, ElementData, ElementHandleEventFn, NodeDef, NodeFlags, OutputDef, OutputType, QueryValueType, ViewData, ViewDefinitionFactory, asElementData} from './types';\nimport {NOOP, calcBindingFlags, checkAndUpdateBinding, dispatchEvent, elementEventFullName, getParentRenderElement, resolveDefinition, resolveRendererType2, splitMatchedQueriesDsl, splitNamespace} from './util';\n\nexport function anchorDef(\n    flags: NodeFlags, matchedQueriesDsl: null | [string | number, QueryValueType][],\n    ngContentIndex: null | number, childCount: number, handleEvent?: null | ElementHandleEventFn,\n    templateFactory?: ViewDefinitionFactory): NodeDef {\n  flags |= NodeFlags.TypeElement;\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  const template = templateFactory ? resolveDefinition(templateFactory) : null;\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    checkIndex: -1,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: {\n      ns: null,\n      name: null,\n      attrs: null, template,\n      componentProvider: null,\n      componentView: null,\n      componentRendererType: null,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function elementDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: null | [string | number, QueryValueType][], ngContentIndex: null | number,\n    childCount: number, namespaceAndName: string | null, fixedAttrs: null | [string, string][] = [],\n    bindings?: null | [BindingFlags, string, string | SecurityContext | null][],\n    outputs?: null | ([string, string])[], handleEvent?: null | ElementHandleEventFn,\n    componentView?: null | ViewDefinitionFactory,\n    componentRendererType?: RendererType2 | null): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  let ns: string = null !;\n  let name: string = null !;\n  if (namespaceAndName) {\n    [ns, name] = splitNamespace(namespaceAndName);\n  }\n  bindings = bindings || [];\n  const bindingDefs: BindingDef[] = new Array(bindings.length);\n  for (let i = 0; i < bindings.length; i++) {\n    const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n\n    const [ns, name] = splitNamespace(namespaceAndName);\n    let securityContext: SecurityContext = undefined !;\n    let suffix: string = undefined !;\n    switch (bindingFlags & BindingFlags.Types) {\n      case BindingFlags.TypeElementStyle:\n        suffix = <string>suffixOrSecurityContext;\n        break;\n      case BindingFlags.TypeElementAttribute:\n      case BindingFlags.TypeProperty:\n        securityContext = <SecurityContext>suffixOrSecurityContext;\n        break;\n    }\n    bindingDefs[i] =\n        {flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix};\n  }\n  outputs = outputs || [];\n  const outputDefs: OutputDef[] = new Array(outputs.length);\n  for (let i = 0; i < outputs.length; i++) {\n    const [target, eventName] = outputs[i];\n    outputDefs[i] = {\n      type: OutputType.ElementOutput,\n      target: <any>target, eventName,\n      propName: null\n    };\n  }\n  fixedAttrs = fixedAttrs || [];\n  const attrs = <[string, string, string][]>fixedAttrs.map(([namespaceAndName, value]) => {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    return [ns, name, value];\n  });\n  componentRendererType = resolveRendererType2(componentRendererType);\n  if (componentView) {\n    flags |= NodeFlags.ComponentView;\n  }\n  flags |= NodeFlags.TypeElement;\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: bindingDefs,\n    bindingFlags: calcBindingFlags(bindingDefs),\n    outputs: outputDefs,\n    element: {\n      ns,\n      name,\n      attrs,\n      template: null,\n      // will bet set by the view definition\n      componentProvider: null,\n      componentView: componentView || null,\n      componentRendererType: componentRendererType,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP,\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createElement(view: ViewData, renderHost: any, def: NodeDef): ElementData {\n  const elDef = def.element !;\n  const rootSelectorOrNode = view.root.selectorOrNode;\n  const renderer = view.renderer;\n  let el: any;\n  if (view.parent || !rootSelectorOrNode) {\n    if (elDef.name) {\n      el = renderer.createElement(elDef.name, elDef.ns);\n    } else {\n      el = renderer.createComment('');\n    }\n    const parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n      renderer.appendChild(parentEl, el);\n    }\n  } else {\n    // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n    const preserveContent =\n        (!!elDef.componentRendererType &&\n         elDef.componentRendererType.encapsulation === ViewEncapsulation.ShadowDom);\n    el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n  }\n  if (elDef.attrs) {\n    for (let i = 0; i < elDef.attrs.length; i++) {\n      const [ns, name, value] = elDef.attrs[i];\n      renderer.setAttribute(el, name, value, ns);\n    }\n  }\n  return el;\n}\n\nexport function listenToElementOutputs(view: ViewData, compView: ViewData, def: NodeDef, el: any) {\n  for (let i = 0; i < def.outputs.length; i++) {\n    const output = def.outputs[i];\n    const handleEventClosure = renderEventHandlerClosure(\n        view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n    let listenTarget: 'window'|'document'|'body'|'component'|null = output.target;\n    let listenerView = view;\n    if (output.target === 'component') {\n      listenTarget = null;\n      listenerView = compView;\n    }\n    const disposable =\n        <any>listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n    view.disposables ![def.outputIndex + i] = disposable;\n  }\n}\n\nfunction renderEventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n\n\nexport function checkAndUpdateElementInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const bindLen = def.bindings.length;\n  let changed = false;\n  if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9)) changed = true;\n  return changed;\n}\n\nexport function checkAndUpdateElementDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    if (checkAndUpdateElementValue(view, def, i, values[i])) changed = true;\n  }\n  return changed;\n}\n\nfunction checkAndUpdateElementValue(view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n    return false;\n  }\n  const binding = def.bindings[bindingIdx];\n  const elData = asElementData(view, def.nodeIndex);\n  const renderNode = elData.renderElement;\n  const name = binding.name !;\n  switch (binding.flags & BindingFlags.Types) {\n    case BindingFlags.TypeElementAttribute:\n      setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n      break;\n    case BindingFlags.TypeElementClass:\n      setElementClass(view, renderNode, name, value);\n      break;\n    case BindingFlags.TypeElementStyle:\n      setElementStyle(view, binding, renderNode, name, value);\n      break;\n    case BindingFlags.TypeProperty:\n      const bindView = (def.flags & NodeFlags.ComponentView &&\n                        binding.flags & BindingFlags.SyntheticHostProperty) ?\n          elData.componentView :\n          view;\n      setElementProperty(bindView, binding, renderNode, name, value);\n      break;\n  }\n  return true;\n}\n\nfunction setElementAttribute(\n    view: ViewData, binding: BindingDef, renderNode: any, ns: string | null, name: string,\n    value: any) {\n  const securityContext = binding.securityContext;\n  let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  renderValue = renderValue != null ? renderValue.toString() : null;\n  const renderer = view.renderer;\n  if (value != null) {\n    renderer.setAttribute(renderNode, name, renderValue, ns);\n  } else {\n    renderer.removeAttribute(renderNode, name, ns);\n  }\n}\n\nfunction setElementClass(view: ViewData, renderNode: any, name: string, value: boolean) {\n  const renderer = view.renderer;\n  if (value) {\n    renderer.addClass(renderNode, name);\n  } else {\n    renderer.removeClass(renderNode, name);\n  }\n}\n\nfunction setElementStyle(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  let renderValue: string|null =\n      view.root.sanitizer.sanitize(SecurityContext.STYLE, value as{} | string);\n  if (renderValue != null) {\n    renderValue = renderValue.toString();\n    const unit = binding.suffix;\n    if (unit != null) {\n      renderValue = renderValue + unit;\n    }\n  } else {\n    renderValue = null;\n  }\n  const renderer = view.renderer;\n  if (renderValue != null) {\n    renderer.setStyle(renderNode, name, renderValue);\n  } else {\n    renderer.removeStyle(renderNode, name);\n  }\n}\n\nfunction setElementProperty(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  const securityContext = binding.securityContext;\n  let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  view.renderer.setProperty(renderNode, name, renderValue);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectableDef, getInjectableDef} from '../di/defs';\nimport {resolveForwardRef} from '../di/forward_ref';\nimport {INJECTOR, Injector} from '../di/injector';\nimport {setCurrentInjector} from '../di/injector_compatibility';\nimport {APP_ROOT} from '../di/scope';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {stringify} from '../util';\n\nimport {DepDef, DepFlags, NgModuleData, NgModuleDefinition, NgModuleProviderDef, NodeFlags} from './types';\nimport {splitDepsDsl, tokenKey} from './util';\n\nconst UNDEFINED_VALUE = new Object();\n\nconst InjectorRefTokenKey = tokenKey(Injector);\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\nconst NgModuleRefTokenKey = tokenKey(NgModuleRef);\n\nexport function moduleProvideDef(\n    flags: NodeFlags, token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NgModuleProviderDef {\n  // Need to resolve forwardRefs as e.g. for `useValue` we\n  // lowered the expression and then stopped evaluating it,\n  // i.e. also didn't unwrap it.\n  value = resolveForwardRef(value);\n  const depDefs = splitDepsDsl(deps, stringify(token));\n  return {\n    // will bet set by the module definition\n    index: -1,\n    deps: depDefs, flags, token, value\n  };\n}\n\nexport function moduleDef(providers: NgModuleProviderDef[]): NgModuleDefinition {\n  const providersByKey: {[key: string]: NgModuleProviderDef} = {};\n  const modules = [];\n  let isRoot: boolean = false;\n  for (let i = 0; i < providers.length; i++) {\n    const provider = providers[i];\n    if (provider.token === APP_ROOT && provider.value === true) {\n      isRoot = true;\n    }\n    if (provider.flags & NodeFlags.TypeNgModule) {\n      modules.push(provider.token);\n    }\n    provider.index = i;\n    providersByKey[tokenKey(provider.token)] = provider;\n  }\n  return {\n    // Will be filled later...\n    factory: null,\n    providersByKey,\n    providers,\n    modules,\n    isRoot,\n  };\n}\n\nexport function initNgModule(data: NgModuleData) {\n  const def = data._def;\n  const providers = data._providers = new Array(def.providers.length);\n  for (let i = 0; i < def.providers.length; i++) {\n    const provDef = def.providers[i];\n    if (!(provDef.flags & NodeFlags.LazyProvider)) {\n      // Make sure the provider has not been already initialized outside this loop.\n      if (providers[i] === undefined) {\n        providers[i] = _createProviderInstance(data, provDef);\n      }\n    }\n  }\n}\n\nexport function resolveNgModuleDep(\n    data: NgModuleData, depDef: DepDef, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  const former = setCurrentInjector(data);\n  try {\n    if (depDef.flags & DepFlags.Value) {\n      return depDef.token;\n    }\n    if (depDef.flags & DepFlags.Optional) {\n      notFoundValue = null;\n    }\n    if (depDef.flags & DepFlags.SkipSelf) {\n      return data._parent.get(depDef.token, notFoundValue);\n    }\n    const tokenKey = depDef.tokenKey;\n    switch (tokenKey) {\n      case InjectorRefTokenKey:\n      case INJECTORRefTokenKey:\n      case NgModuleRefTokenKey:\n        return data;\n    }\n    const providerDef = data._def.providersByKey[tokenKey];\n    let injectableDef: InjectableDef<any>|null;\n    if (providerDef) {\n      let providerInstance = data._providers[providerDef.index];\n      if (providerInstance === undefined) {\n        providerInstance = data._providers[providerDef.index] =\n            _createProviderInstance(data, providerDef);\n      }\n      return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    } else if (\n        (injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n      const index = data._providers.length;\n      data._def.providersByKey[depDef.tokenKey] = {\n        flags: NodeFlags.TypeFactoryProvider | NodeFlags.LazyProvider,\n        value: injectableDef.factory,\n        deps: [], index,\n        token: depDef.token,\n      };\n      data._providers[index] = UNDEFINED_VALUE;\n      return (\n          data._providers[index] =\n              _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n    } else if (depDef.flags & DepFlags.Self) {\n      return notFoundValue;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n  } finally {\n    setCurrentInjector(former);\n  }\n}\n\nfunction moduleTransitivelyPresent(ngModule: NgModuleData, scope: any): boolean {\n  return ngModule._def.modules.indexOf(scope) > -1;\n}\n\nfunction targetsModule(ngModule: NgModuleData, def: InjectableDef<any>): boolean {\n  return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n                                    def.providedIn === 'root' && ngModule._def.isRoot);\n}\n\nfunction _createProviderInstance(ngModule: NgModuleData, providerDef: NgModuleProviderDef): any {\n  let injectable: any;\n  switch (providerDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = providerDef.value;\n      break;\n  }\n\n  // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n  // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n  // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n  // set (ngOnDestroy was detected statically).\n  if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n      !(providerDef.flags & NodeFlags.OnDestroy) && typeof injectable.ngOnDestroy === 'function') {\n    providerDef.flags |= NodeFlags.OnDestroy;\n  }\n  return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n\nfunction _createClass(ngModule: NgModuleData, ctor: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return new ctor(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const depValues = new Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n\nfunction _callFactory(ngModule: NgModuleData, factory: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return factory(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const depValues = Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n\nexport function callNgModuleLifecycle(ngModule: NgModuleData, lifecycles: NodeFlags) {\n  const def = ngModule._def;\n  const destroyed = new Set<any>();\n  for (let i = 0; i < def.providers.length; i++) {\n    const provDef = def.providers[i];\n    if (provDef.flags & NodeFlags.OnDestroy) {\n      const instance = ngModule._providers[i];\n      if (instance && instance !== UNDEFINED_VALUE) {\n        const onDestroy: Function|undefined = instance.ngOnDestroy;\n        if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n          onDestroy.apply(instance);\n          destroyed.add(instance);\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementData, NodeDef, NodeFlags, Services, ViewData, ViewDefinition, ViewState} from './types';\nimport {RenderNodeAction, declaredViewContainer, isComponentView, renderNode, visitRootRenderNodes} from './util';\n\nexport function attachEmbeddedView(\n    parentView: ViewData, elementData: ElementData, viewIndex: number | undefined | null,\n    view: ViewData) {\n  let embeddedViews = elementData.viewContainer !._embeddedViews;\n  if (viewIndex === null || viewIndex === undefined) {\n    viewIndex = embeddedViews.length;\n  }\n  view.viewContainerParent = parentView;\n  addToArray(embeddedViews, viewIndex !, view);\n  attachProjectedView(elementData, view);\n\n  Services.dirtyParentQueries(view);\n\n  const prevView = viewIndex ! > 0 ? embeddedViews[viewIndex ! - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n\nfunction attachProjectedView(vcElementData: ElementData, view: ViewData) {\n  const dvcElementData = declaredViewContainer(view);\n  if (!dvcElementData || dvcElementData === vcElementData ||\n      view.state & ViewState.IsProjectedView) {\n    return;\n  }\n  // Note: For performance reasons, we\n  // - add a view to template._projectedViews only 1x throughout its lifetime,\n  //   and remove it not until the view is destroyed.\n  //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n  //    nested projected views as well, even across component boundaries).\n  // - don't track the insertion order of views in the projected views array\n  //   (hard, as when the views of the same template are inserted different view containers)\n  view.state |= ViewState.IsProjectedView;\n  let projectedViews = dvcElementData.template._projectedViews;\n  if (!projectedViews) {\n    projectedViews = dvcElementData.template._projectedViews = [];\n  }\n  projectedViews.push(view);\n  // Note: we are changing the NodeDef here as we cannot calculate\n  // the fact whether a template is used for projection during compilation.\n  markNodeAsProjectedTemplate(view.parent !.def, view.parentNodeDef !);\n}\n\nfunction markNodeAsProjectedTemplate(viewDef: ViewDefinition, nodeDef: NodeDef) {\n  if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n    return;\n  }\n  viewDef.nodeFlags |= NodeFlags.ProjectedTemplate;\n  nodeDef.flags |= NodeFlags.ProjectedTemplate;\n  let parentNodeDef = nodeDef.parent;\n  while (parentNodeDef) {\n    parentNodeDef.childFlags |= NodeFlags.ProjectedTemplate;\n    parentNodeDef = parentNodeDef.parent;\n  }\n}\n\nexport function detachEmbeddedView(elementData: ElementData, viewIndex?: number): ViewData|null {\n  const embeddedViews = elementData.viewContainer !._embeddedViews;\n  if (viewIndex == null || viewIndex >= embeddedViews.length) {\n    viewIndex = embeddedViews.length - 1;\n  }\n  if (viewIndex < 0) {\n    return null;\n  }\n  const view = embeddedViews[viewIndex];\n  view.viewContainerParent = null;\n  removeFromArray(embeddedViews, viewIndex);\n\n  // See attachProjectedView for why we don't update projectedViews here.\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n\n  return view;\n}\n\nexport function detachProjectedView(view: ViewData) {\n  if (!(view.state & ViewState.IsProjectedView)) {\n    return;\n  }\n  const dvcElementData = declaredViewContainer(view);\n  if (dvcElementData) {\n    const projectedViews = dvcElementData.template._projectedViews;\n    if (projectedViews) {\n      removeFromArray(projectedViews, projectedViews.indexOf(view));\n      Services.dirtyParentQueries(view);\n    }\n  }\n}\n\nexport function moveEmbeddedView(\n    elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData {\n  const embeddedViews = elementData.viewContainer !._embeddedViews;\n  const view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n  const prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n\n  return view;\n}\n\nfunction renderAttachEmbeddedView(\n    elementData: ElementData, prevView: ViewData | null, view: ViewData) {\n  const prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode !) :\n                                    elementData.renderElement;\n  const parentNode = view.renderer.parentNode(prevRenderNode);\n  const nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n\nexport function renderDetachView(view: ViewData) {\n  visitRootRenderNodes(view, RenderNodeAction.RemoveChild, null, null, undefined);\n}\n\nfunction addToArray(arr: any[], index: number, value: any) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n\nfunction removeFromArray(arr: any[], index: number) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {InjectFlags} from '../di/injector_compatibility';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {ElementRef} from '../linker/element_ref';\nimport {InternalNgModuleRef, NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {VERSION} from '../version';\n\nimport {callNgModuleLifecycle, initNgModule, resolveNgModuleDep} from './ng_module';\nimport {DepFlags, ElementData, NgModuleData, NgModuleDefinition, NodeDef, NodeFlags, Services, TemplateData, ViewContainerData, ViewData, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView} from './view_attach';\n\nconst EMPTY_CONTEXT = new Object();\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>, viewDefFactory: ViewDefinitionFactory,\n    inputs: {[propName: string]: string} | null, outputs: {[propName: string]: string},\n    ngContentSelectors: string[]): ComponentFactory<any> {\n  return new ComponentFactory_(\n      selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n\nexport function getComponentViewDefinitionFactory(componentFactory: ComponentFactory<any>):\n    ViewDefinitionFactory {\n  return (componentFactory as ComponentFactory_).viewDefFactory;\n}\n\nclass ComponentFactory_ extends ComponentFactory<any> {\n  /**\n   * @internal\n   */\n  viewDefFactory: ViewDefinitionFactory;\n\n  constructor(\n      public selector: string, public componentType: Type<any>,\n      viewDefFactory: ViewDefinitionFactory, private _inputs: {[propName: string]: string}|null,\n      private _outputs: {[propName: string]: string}, public ngContentSelectors: string[]) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.viewDefFactory = viewDefFactory;\n  }\n\n  get inputs() {\n    const inputsArr: {propName: string, templateName: string}[] = [];\n    const inputs = this._inputs !;\n    for (let propName in inputs) {\n      const templateName = inputs[propName];\n      inputsArr.push({propName, templateName});\n    }\n    return inputsArr;\n  }\n\n  get outputs() {\n    const outputsArr: {propName: string, templateName: string}[] = [];\n    for (let propName in this._outputs) {\n      const templateName = this._outputs[propName];\n      outputsArr.push({propName, templateName});\n    }\n    return outputsArr;\n  }\n\n  /**\n   * Creates a new component.\n   */\n  create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<any> {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const viewDef = resolveDefinition(this.viewDefFactory);\n    const componentNodeIndex = viewDef.nodes[0].element !.componentProvider !.nodeIndex;\n    const view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const component = asProviderData(view, componentNodeIndex).instance;\n    if (rootSelectorOrNode) {\n      view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n    }\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nclass ComponentRef_ extends ComponentRef<any> {\n  public readonly hostView: ViewRef;\n  public readonly instance: any;\n  public readonly changeDetectorRef: ChangeDetectorRef;\n  private _elDef: NodeDef;\n  constructor(private _view: ViewData, private _viewRef: ViewRef, private _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n    this.hostView = _viewRef;\n    this.changeDetectorRef = _viewRef;\n    this.instance = _component;\n  }\n  get location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n  }\n  get injector(): Injector { return new Injector_(this._view, this._elDef); }\n  get componentType(): Type<any> { return <any>this._component.constructor; }\n\n  destroy(): void { this._viewRef.destroy(); }\n  onDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nexport function createViewContainerData(\n    view: ViewData, elDef: NodeDef, elData: ElementData): ViewContainerData {\n  return new ViewContainerRef_(view, elDef, elData);\n}\n\nclass ViewContainerRef_ implements ViewContainerData {\n  /**\n   * @internal\n   */\n  _embeddedViews: ViewData[] = [];\n  constructor(private _view: ViewData, private _elDef: NodeDef, private _data: ElementData) {}\n\n  get element(): ElementRef { return new ElementRef(this._data.renderElement); }\n\n  get injector(): Injector { return new Injector_(this._view, this._elDef); }\n\n  /** @deprecated No replacement */\n  get parentInjector(): Injector {\n    let view = this._view;\n    let elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = view.parent !;\n    }\n\n    return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n  }\n\n  clear(): void {\n    const len = this._embeddedViews.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const view = detachEmbeddedView(this._data, i) !;\n      Services.destroyView(view);\n    }\n  }\n\n  get(index: number): ViewRef|null {\n    const view = this._embeddedViews[index];\n    if (view) {\n      const ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n\n  get length(): number { return this._embeddedViews.length; }\n\n  createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const viewRef = templateRef.createEmbeddedView(context || <any>{});\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n\n  createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModuleRef?: NgModuleRef<any>): ComponentRef<C> {\n    const contextInjector = injector || this.parentInjector;\n    if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n      ngModuleRef = contextInjector.get(NgModuleRef);\n    }\n    const componentRef =\n        componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n\n  insert(viewRef: ViewRef, index?: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n    }\n    const viewRef_ = <ViewRef_>viewRef;\n    const viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n\n  move(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot move a destroyed View in a ViewContainer!');\n    }\n    const previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n\n  indexOf(viewRef: ViewRef): number {\n    return this._embeddedViews.indexOf((<ViewRef_>viewRef)._view);\n  }\n\n  remove(index?: number): void {\n    const viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n\n  detach(index?: number): ViewRef|null {\n    const view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\n\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n  /** @internal */\n  _view: ViewData;\n  private _viewContainerRef: ViewContainerRef|null;\n  private _appRef: ApplicationRef|null;\n\n  constructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n\n  get rootNodes(): any[] { return rootRenderNodes(this._view); }\n\n  get context() { return this._view.context; }\n\n  get destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n\n  markForCheck(): void { markParentViewsForCheck(this._view); }\n  detach(): void { this._view.state &= ~ViewState.Attached; }\n  detectChanges(): void {\n    const fs = this._view.root.rendererFactory;\n    if (fs.begin) {\n      fs.begin();\n    }\n    try {\n      Services.checkAndUpdateView(this._view);\n    } finally {\n      if (fs.end) {\n        fs.end();\n      }\n    }\n  }\n  checkNoChanges(): void { Services.checkNoChangesView(this._view); }\n\n  reattach(): void { this._view.state |= ViewState.Attached; }\n  onDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push(<any>callback);\n  }\n\n  destroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n\n  detachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n\n  attachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n\n  attachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nexport function createTemplateData(view: ViewData, def: NodeDef): TemplateData {\n  return new TemplateRef_(view, def);\n}\n\nclass TemplateRef_ extends TemplateRef<any> implements TemplateData {\n  /**\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _projectedViews !: ViewData[];\n\n  constructor(private _parentView: ViewData, private _def: NodeDef) { super(); }\n\n  createEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(\n        this._parentView, this._def, this._def.element !.template !, context));\n  }\n\n  get elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n  }\n}\n\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\n\nclass Injector_ implements Injector {\n  constructor(private view: ViewData, private elDef: NodeDef|null) {}\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const allowPrivateServices =\n        this.elDef ? (this.elDef.flags & NodeFlags.ComponentView) !== 0 : false;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nexport function nodeValue(view: ViewData, index: number): any {\n  const def = view.def.nodes[index];\n  if (def.flags & NodeFlags.TypeElement) {\n    const elData = asElementData(view, def.nodeIndex);\n    return def.element !.template ? elData.template : elData.renderElement;\n  } else if (def.flags & NodeFlags.TypeText) {\n    return asTextData(view, def.nodeIndex).renderText;\n  } else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n    return asProviderData(view, def.nodeIndex).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\n\nclass RendererAdapter implements RendererV1 {\n  constructor(private delegate: Renderer2) {}\n  selectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n\n  createElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n\n  createViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n\n  createTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n\n  createText(parentElement: Element|DocumentFragment, value: string): any {\n    const node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n\n  projectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n\n  attachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const parentElement = this.delegate.parentNode(node);\n    const nextSibling = this.delegate.nextSibling(node);\n    for (let i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n\n  detachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let i = 0; i < viewRootNodes.length; i++) {\n      const node = viewRootNodes[i];\n      const parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n\n  destroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let i = 0; i < viewAllNodes.length; i++) {\n      this.delegate.destroyNode !(viewAllNodes[i]);\n    }\n  }\n\n  listen(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, <any>callback);\n  }\n\n  listenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, <any>callback);\n  }\n\n  setElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n\n  setElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue?: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n\n  setBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n\n  setElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n\n  setElementStyle(renderElement: HTMLElement, styleName: string, styleValue?: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n\n  invokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    (renderElement as any)[methodName].apply(renderElement, args);\n  }\n\n  setText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n\n  animate(): any { throw new Error('Renderer.animate is no longer supported!'); }\n}\n\n\nexport function createNgModuleRef(\n    moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\n\nclass NgModuleRef_ implements NgModuleData, InternalNgModuleRef<any> {\n  private _destroyListeners: (() => void)[] = [];\n  private _destroyed: boolean = false;\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _providers !: any[];\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _modules !: any[];\n\n  readonly injector: Injector = this;\n\n  constructor(\n      private _moduleType: Type<any>, public _parent: Injector,\n      public _bootstrapComponents: Type<any>[], public _def: NgModuleDefinition) {\n    initNgModule(this);\n  }\n\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND,\n      injectFlags: InjectFlags = InjectFlags.Default): any {\n    let flags = DepFlags.None;\n    if (injectFlags & InjectFlags.SkipSelf) {\n      flags |= DepFlags.SkipSelf;\n    } else if (injectFlags & InjectFlags.Self) {\n      flags |= DepFlags.Self;\n    }\n    return resolveNgModuleDep(\n        this, {token: token, tokenKey: tokenKey(token), flags: flags}, notFoundValue);\n  }\n\n  get instance() { return this.get(this._moduleType); }\n\n  get componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n\n  destroy(): void {\n    if (this._destroyed) {\n      throw new Error(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    callNgModuleLifecycle(this, NodeFlags.OnDestroy);\n    this._destroyListeners.forEach((listener) => listener());\n  }\n\n  onDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, SimpleChange, SimpleChanges, WrappedValue} from '../change_detection/change_detection';\nimport {INJECTOR, Injector, resolveForwardRef} from '../di';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {stringify} from '../util';\nimport {isObservable} from '../util/lang';\n\nimport {createChangeDetectorRef, createInjector, createRendererV1} from './refs';\nimport {BindingDef, BindingFlags, DepDef, DepFlags, NodeDef, NodeFlags, OutputDef, OutputType, ProviderData, QueryValueType, Services, ViewData, ViewFlags, ViewState, asElementData, asProviderData, shouldCallLifecycleInitHook} from './types';\nimport {calcBindingFlags, checkBinding, dispatchEvent, isComponentView, splitDepsDsl, splitMatchedQueriesDsl, tokenKey, viewParentEl} from './util';\n\nconst RendererV1TokenKey = tokenKey(RendererV1);\nconst Renderer2TokenKey = tokenKey(Renderer2);\nconst ElementRefTokenKey = tokenKey(ElementRef);\nconst ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst TemplateRefTokenKey = tokenKey(TemplateRef);\nconst ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst InjectorRefTokenKey = tokenKey(Injector);\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\n\nexport function directiveDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueries: null | [string | number, QueryValueType][], childCount: number, ctor: any,\n    deps: ([DepFlags, any] | any)[], props?: null | {[name: string]: [number, string]},\n    outputs?: null | {[name: string]: string}): NodeDef {\n  const bindings: BindingDef[] = [];\n  if (props) {\n    for (let prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        flags: BindingFlags.TypeProperty,\n        name: prop, nonMinifiedName,\n        ns: null,\n        securityContext: null,\n        suffix: null\n      };\n    }\n  }\n  const outputDefs: OutputDef[] = [];\n  if (outputs) {\n    for (let propName in outputs) {\n      outputDefs.push(\n          {type: OutputType.DirectiveOutput, propName, target: null, eventName: outputs[propName]});\n    }\n  }\n  flags |= NodeFlags.TypeDirective;\n  return _def(\n      checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n\nexport function pipeDef(flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  flags |= NodeFlags.TypePipe;\n  return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n\nexport function providerDef(\n    flags: NodeFlags, matchedQueries: null | [string | number, QueryValueType][], token: any,\n    value: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n\nexport function _def(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: [string | number, QueryValueType][] | null, childCount: number, token: any,\n    value: any, deps: ([DepFlags, any] | any)[], bindings?: BindingDef[],\n    outputs?: OutputDef[]): NodeDef {\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  if (!outputs) {\n    outputs = [];\n  }\n  if (!bindings) {\n    bindings = [];\n  }\n  // Need to resolve forwardRefs as e.g. for `useValue` we\n  // lowered the expression and then stopped evaluating it,\n  // i.e. also didn't unwrap it.\n  value = resolveForwardRef(value);\n\n  const depDefs = splitDepsDsl(deps, stringify(token));\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n    ngContentIndex: -1, childCount, bindings,\n    bindingFlags: calcBindingFlags(bindings), outputs,\n    element: null,\n    provider: {token, value, deps: depDefs},\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createProviderInstance(view: ViewData, def: NodeDef): any {\n  return _createProviderInstance(view, def);\n}\n\nexport function createPipeInstance(view: ViewData, def: NodeDef): any {\n  // deps are looked up from component.\n  let compView = view;\n  while (compView.parent && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  // pipes can see the private services of the component\n  const allowPrivateServices = true;\n  // pipes are always eager and classes!\n  return createClass(\n      compView.parent !, viewParentEl(compView) !, allowPrivateServices, def.provider !.value,\n      def.provider !.deps);\n}\n\nexport function createDirectiveInstance(view: ViewData, def: NodeDef): any {\n  // components can see other private services, other directives can't.\n  const allowPrivateServices = (def.flags & NodeFlags.Component) > 0;\n  // directives are always eager and classes!\n  const instance = createClass(\n      view, def.parent !, allowPrivateServices, def.provider !.value, def.provider !.deps);\n  if (def.outputs.length) {\n    for (let i = 0; i < def.outputs.length; i++) {\n      const output = def.outputs[i];\n      const outputObservable = instance[output.propName !];\n      if (isObservable(outputObservable)) {\n        const subscription = outputObservable.subscribe(\n            eventHandlerClosure(view, def.parent !.nodeIndex, output.eventName));\n        view.disposables ![def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n      } else {\n        throw new Error(\n            `@Output ${output.propName} not initialized in '${instance.constructor.name}'.`);\n      }\n    }\n  }\n  return instance;\n}\n\nfunction eventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n\nexport function checkAndUpdateDirectiveInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const providerData = asProviderData(view, def.nodeIndex);\n  const directive = providerData.instance;\n  let changed = false;\n  let changes: SimpleChanges = undefined !;\n  const bindLen = def.bindings.length;\n  if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 0, v0, changes);\n  }\n  if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 1, v1, changes);\n  }\n  if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 2, v2, changes);\n  }\n  if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 3, v3, changes);\n  }\n  if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 4, v4, changes);\n  }\n  if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 5, v5, changes);\n  }\n  if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 6, v6, changes);\n  }\n  if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 7, v7, changes);\n  }\n  if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 8, v8, changes);\n  }\n  if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 9, v9, changes);\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((def.flags & NodeFlags.OnInit) &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingOnInit, def.nodeIndex)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n\nexport function checkAndUpdateDirectiveDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const providerData = asProviderData(view, def.nodeIndex);\n  const directive = providerData.instance;\n  let changed = false;\n  let changes: SimpleChanges = undefined !;\n  for (let i = 0; i < values.length; i++) {\n    if (checkBinding(view, def, i, values[i])) {\n      changed = true;\n      changes = updateProp(view, providerData, def, i, values[i], changes);\n    }\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((def.flags & NodeFlags.OnInit) &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingOnInit, def.nodeIndex)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n\nfunction _createProviderInstance(view: ViewData, def: NodeDef): any {\n  // private services can see other private services\n  const allowPrivateServices = (def.flags & NodeFlags.PrivateProvider) > 0;\n  const providerDef = def.provider;\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      return createClass(\n          view, def.parent !, allowPrivateServices, providerDef !.value, providerDef !.deps);\n    case NodeFlags.TypeFactoryProvider:\n      return callFactory(\n          view, def.parent !, allowPrivateServices, providerDef !.value, providerDef !.deps);\n    case NodeFlags.TypeUseExistingProvider:\n      return resolveDep(view, def.parent !, allowPrivateServices, providerDef !.deps[0]);\n    case NodeFlags.TypeValueProvider:\n      return providerDef !.value;\n  }\n}\n\nfunction createClass(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, ctor: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const depValues = new Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n\nfunction callFactory(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, factory: any,\n    deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const depValues = Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nexport const NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n\nexport function resolveDep(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n    notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  const startView = view;\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  const tokenKey = depDef.tokenKey;\n\n  if (tokenKey === ChangeDetectorRefTokenKey) {\n    // directives on the same element as a component should be able to control the change detector\n    // of that component as well.\n    allowPrivateServices = !!(elDef && elDef.element !.componentView);\n  }\n\n  if (elDef && (depDef.flags & DepFlags.SkipSelf)) {\n    allowPrivateServices = false;\n    elDef = elDef.parent !;\n  }\n\n  let searchView: ViewData|null = view;\n  while (searchView) {\n    if (elDef) {\n      switch (tokenKey) {\n        case RendererV1TokenKey: {\n          const compView = findCompView(searchView, elDef, allowPrivateServices);\n          return createRendererV1(compView);\n        }\n        case Renderer2TokenKey: {\n          const compView = findCompView(searchView, elDef, allowPrivateServices);\n          return compView.renderer;\n        }\n        case ElementRefTokenKey:\n          return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n        case ViewContainerRefTokenKey:\n          return asElementData(searchView, elDef.nodeIndex).viewContainer;\n        case TemplateRefTokenKey: {\n          if (elDef.element !.template) {\n            return asElementData(searchView, elDef.nodeIndex).template;\n          }\n          break;\n        }\n        case ChangeDetectorRefTokenKey: {\n          let cdView = findCompView(searchView, elDef, allowPrivateServices);\n          return createChangeDetectorRef(cdView);\n        }\n        case InjectorRefTokenKey:\n        case INJECTORRefTokenKey:\n          return createInjector(searchView, elDef);\n        default:\n          const providerDef =\n              (allowPrivateServices ? elDef.element !.allProviders :\n                                      elDef.element !.publicProviders) ![tokenKey];\n          if (providerDef) {\n            let providerData = asProviderData(searchView, providerDef.nodeIndex);\n            if (!providerData) {\n              providerData = {instance: _createProviderInstance(searchView, providerDef)};\n              searchView.nodes[providerDef.nodeIndex] = providerData as any;\n            }\n            return providerData.instance;\n          }\n      }\n    }\n\n    allowPrivateServices = isComponentView(searchView);\n    elDef = viewParentEl(searchView) !;\n    searchView = searchView.parent !;\n\n    if (depDef.flags & DepFlags.Self) {\n      searchView = null;\n    }\n  }\n\n  const value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n\n  if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n      notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n    // Return the value from the root element injector when\n    // - it provides it\n    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    // - the module injector should not be checked\n    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    return value;\n  }\n\n  return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n\nfunction findCompView(view: ViewData, elDef: NodeDef, allowPrivateServices: boolean) {\n  let compView: ViewData;\n  if (allowPrivateServices) {\n    compView = asElementData(view, elDef.nodeIndex).componentView;\n  } else {\n    compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n      compView = compView.parent;\n    }\n  }\n  return compView;\n}\n\nfunction updateProp(\n    view: ViewData, providerData: ProviderData, def: NodeDef, bindingIdx: number, value: any,\n    changes: SimpleChanges): SimpleChanges {\n  if (def.flags & NodeFlags.Component) {\n    const compView = asElementData(view, def.parent !.nodeIndex).componentView;\n    if (compView.def.flags & ViewFlags.OnPush) {\n      compView.state |= ViewState.ChecksEnabled;\n    }\n  }\n  const binding = def.bindings[bindingIdx];\n  const propName = binding.name !;\n  // Note: This is still safe with Closure Compiler as\n  // the user passed in the property name as an object has to `providerDef`,\n  // so Closure Compiler will have renamed the property correctly already.\n  providerData.instance[propName] = value;\n  if (def.flags & NodeFlags.OnChanges) {\n    changes = changes || {};\n    const oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n    const binding = def.bindings[bindingIdx];\n    changes[binding.nonMinifiedName !] =\n        new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0);\n  }\n  view.oldValues[def.bindingIndex + bindingIdx] = value;\n  return changes;\n}\n\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nexport function callLifecycleHooksChildrenFirst(view: ViewData, lifecycles: NodeFlags) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const nodes = view.def.nodes;\n  let initIndex = 0;\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeDef = nodes[i];\n    let parent = nodeDef.parent;\n    if (!parent && nodeDef.flags & lifecycles) {\n      // matching root node (e.g. a pipe)\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n    }\n    if ((nodeDef.childFlags & lifecycles) === 0) {\n      // no child matches one of the lifecycles\n      i += nodeDef.childCount;\n    }\n    while (parent && (parent.flags & NodeFlags.TypeElement) &&\n           i === parent.nodeIndex + parent.childCount) {\n      // last child of an element\n      if (parent.directChildFlags & lifecycles) {\n        initIndex = callElementProvidersLifecycles(view, parent, lifecycles, initIndex);\n      }\n      parent = parent.parent;\n    }\n  }\n}\n\nfunction callElementProvidersLifecycles(\n    view: ViewData, elDef: NodeDef, lifecycles: NodeFlags, initIndex: number): number {\n  for (let i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & lifecycles) {\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n    }\n    // only visit direct children\n    i += nodeDef.childCount;\n  }\n  return initIndex;\n}\n\nfunction callProviderLifecycles(\n    view: ViewData, index: number, lifecycles: NodeFlags, initIndex: number) {\n  const providerData = asProviderData(view, index);\n  if (!providerData) {\n    return;\n  }\n  const provider = providerData.instance;\n  if (!provider) {\n    return;\n  }\n  Services.setCurrentNode(view, index);\n  if (lifecycles & NodeFlags.AfterContentInit &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingAfterContentInit, initIndex)) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & NodeFlags.AfterContentChecked) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & NodeFlags.AfterViewInit &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingAfterViewInit, initIndex)) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & NodeFlags.AfterViewChecked) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & NodeFlags.OnDestroy) {\n    provider.ngOnDestroy();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\n\nimport {NodeDef, NodeFlags, QueryBindingDef, QueryBindingType, QueryDef, QueryValueType, ViewData, asElementData, asProviderData, asQueryList} from './types';\nimport {declaredViewContainer, filterQueryId, isEmbeddedView} from './util';\n\nexport function queryDef(\n    flags: NodeFlags, id: number, bindings: {[propName: string]: QueryBindingType}): NodeDef {\n  let bindingDefs: QueryBindingDef[] = [];\n  for (let propName in bindings) {\n    const bindingType = bindings[propName];\n    bindingDefs.push({propName, bindingType});\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    // TODO(vicb): check\n    checkIndex: -1, flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    ngContentIndex: -1,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: {id, filterId: filterQueryId(id), bindings: bindingDefs},\n    ngContent: null\n  };\n}\n\nexport function createQuery(): QueryList<any> {\n  return new QueryList();\n}\n\nexport function dirtyParentQueries(view: ViewData) {\n  const queryIds = view.def.nodeMatchedQueries;\n  while (view.parent && isEmbeddedView(view)) {\n    let tplDef = view.parentNodeDef !;\n    view = view.parent;\n    // content queries\n    const end = tplDef.nodeIndex + tplDef.childCount;\n    for (let i = 0; i <= end; i++) {\n      const nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeContentQuery) &&\n          (nodeDef.flags & NodeFlags.DynamicQuery) &&\n          (nodeDef.query !.filterId & queryIds) === nodeDef.query !.filterId) {\n        asQueryList(view, i).setDirty();\n      }\n      if ((nodeDef.flags & NodeFlags.TypeElement && i + nodeDef.childCount < tplDef.nodeIndex) ||\n          !(nodeDef.childFlags & NodeFlags.TypeContentQuery) ||\n          !(nodeDef.childFlags & NodeFlags.DynamicQuery)) {\n        // skip elements that don't contain the template element or no query.\n        i += nodeDef.childCount;\n      }\n    }\n  }\n\n  // view queries\n  if (view.def.nodeFlags & NodeFlags.TypeViewQuery) {\n    for (let i = 0; i < view.def.nodes.length; i++) {\n      const nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeViewQuery) && (nodeDef.flags & NodeFlags.DynamicQuery)) {\n        asQueryList(view, i).setDirty();\n      }\n      // only visit the root nodes\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nexport function checkAndUpdateQuery(view: ViewData, nodeDef: NodeDef) {\n  const queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (!queryList.dirty) {\n    return;\n  }\n  let directiveInstance: any;\n  let newValues: any[] = undefined !;\n  if (nodeDef.flags & NodeFlags.TypeContentQuery) {\n    const elementDef = nodeDef.parent !.parent !;\n    newValues = calcQueryValues(\n        view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query !,\n        []);\n    directiveInstance = asProviderData(view, nodeDef.parent !.nodeIndex).instance;\n  } else if (nodeDef.flags & NodeFlags.TypeViewQuery) {\n    newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query !, []);\n    directiveInstance = view.component;\n  }\n  queryList.reset(newValues);\n  const bindings = nodeDef.query !.bindings;\n  let notify = false;\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n    let boundValue: any;\n    switch (binding.bindingType) {\n      case QueryBindingType.First:\n        boundValue = queryList.first;\n        break;\n      case QueryBindingType.All:\n        boundValue = queryList;\n        notify = true;\n        break;\n    }\n    directiveInstance[binding.propName] = boundValue;\n  }\n  if (notify) {\n    queryList.notifyOnChanges();\n  }\n}\n\nfunction calcQueryValues(\n    view: ViewData, startIndex: number, endIndex: number, queryDef: QueryDef,\n    values: any[]): any[] {\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = view.def.nodes[i];\n    const valueType = nodeDef.matchedQueries[queryDef.id];\n    if (valueType != null) {\n      values.push(getQueryValue(view, nodeDef, valueType));\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && nodeDef.element !.template &&\n        (nodeDef.element !.template !.nodeMatchedQueries & queryDef.filterId) ===\n            queryDef.filterId) {\n      const elementData = asElementData(view, i);\n      // check embedded views that were attached at the place of their template,\n      // but process child nodes first if some match the query (see issue #16568)\n      if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n        calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n        i += nodeDef.childCount;\n      }\n      if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n        const embeddedViews = elementData.viewContainer !._embeddedViews;\n        for (let k = 0; k < embeddedViews.length; k++) {\n          const embeddedView = embeddedViews[k];\n          const dvc = declaredViewContainer(embeddedView);\n          if (dvc && dvc === elementData) {\n            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n          }\n        }\n      }\n      const projectedViews = elementData.template._projectedViews;\n      if (projectedViews) {\n        for (let k = 0; k < projectedViews.length; k++) {\n          const projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n        }\n      }\n    }\n    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n      // if no child matches the query, skip the children.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n\nexport function getQueryValue(\n    view: ViewData, nodeDef: NodeDef, queryValueType: QueryValueType): any {\n  if (queryValueType != null) {\n    // a match\n    switch (queryValueType) {\n      case QueryValueType.RenderElement:\n        return asElementData(view, nodeDef.nodeIndex).renderElement;\n      case QueryValueType.ElementRef:\n        return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n      case QueryValueType.TemplateRef:\n        return asElementData(view, nodeDef.nodeIndex).template;\n      case QueryValueType.ViewContainerRef:\n        return asElementData(view, nodeDef.nodeIndex).viewContainer;\n      case QueryValueType.Provider:\n        return asProviderData(view, nodeDef.nodeIndex).instance;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NodeDef, NodeFlags, ViewData} from './types';\nimport {RenderNodeAction, getParentRenderElement, visitProjectedRenderNodes} from './util';\n\nexport function ngContentDef(ngContentIndex: null | number, index: number): NodeDef {\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex: -1,\n    flags: NodeFlags.TypeNgContent,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: {index}\n  };\n}\n\nexport function appendNgContent(view: ViewData, renderHost: any, def: NodeDef) {\n  const parentEl = getParentRenderElement(view, renderHost, def);\n  if (!parentEl) {\n    // Nothing to do if there is no parent element.\n    return;\n  }\n  const ngContentIndex = def.ngContent !.index;\n  visitProjectedRenderNodes(\n      view, ngContentIndex, RenderNodeAction.AppendChild, parentEl, null, undefined);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, TextData, ViewData, asTextData} from './types';\nimport {checkAndUpdateBinding, getParentRenderElement} from './util';\n\nexport function textDef(\n    checkIndex: number, ngContentIndex: number | null, staticText: string[]): NodeDef {\n  const bindings: BindingDef[] = new Array(staticText.length - 1);\n  for (let i = 1; i < staticText.length; i++) {\n    bindings[i - 1] = {\n      flags: BindingFlags.TypeProperty,\n      name: null,\n      ns: null,\n      nonMinifiedName: null,\n      securityContext: null,\n      suffix: staticText[i],\n    };\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags: NodeFlags.TypeText,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0, bindings,\n    bindingFlags: BindingFlags.TypeProperty,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: {prefix: staticText[0]},\n    query: null,\n    ngContent: null,\n  };\n}\n\nexport function createText(view: ViewData, renderHost: any, def: NodeDef): TextData {\n  let renderNode: any;\n  const renderer = view.renderer;\n  renderNode = renderer.createText(def.text !.prefix);\n  const parentEl = getParentRenderElement(view, renderHost, def);\n  if (parentEl) {\n    renderer.appendChild(parentEl, renderNode);\n  }\n  return {renderText: renderNode};\n}\n\nexport function checkAndUpdateTextInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  let changed = false;\n  const bindings = def.bindings;\n  const bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    let value = def.text !.prefix;\n    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);\n    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);\n    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);\n    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);\n    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);\n    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);\n    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);\n    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);\n    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);\n    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);\n    const renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n\nexport function checkAndUpdateTextDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    let value = '';\n    for (let i = 0; i < values.length; i++) {\n      value = value + _addInterpolationPart(values[i], bindings[i]);\n    }\n    value = def.text !.prefix + value;\n    const renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n\nfunction _addInterpolationPart(value: any, binding: BindingDef): string {\n  const valueStr = value != null ? value.toString() : '';\n  return valueStr + binding.suffix;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Renderer2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery} from './query';\nimport {createTemplateData, createViewContainerData} from './refs';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, CheckType, ElementData, NodeData, NodeDef, NodeFlags, ProviderData, RootData, Services, ViewData, ViewDefinition, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asQueryList, asTextData, shiftInitState} from './types';\nimport {NOOP, checkBindingNoChanges, isComponentView, markParentViewsForCheckProjectedViews, resolveDefinition, tokenKey} from './util';\nimport {detachProjectedView} from './view_attach';\n\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: null | ViewUpdateFn,\n    updateRenderer?: null | ViewUpdateFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  let viewBindingCount = 0;\n  let viewDisposableCount = 0;\n  let viewNodeFlags = 0;\n  let viewRootNodeFlags = 0;\n  let viewMatchedQueries = 0;\n  let currentParent: NodeDef|null = null;\n  let currentRenderParent: NodeDef|null = null;\n  let currentElementHasPublicProviders = false;\n  let currentElementHasPrivateProviders = false;\n  let lastRenderRootNode: NodeDef|null = null;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    node.nodeIndex = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.outputIndex = viewDisposableCount;\n    node.renderParent = currentRenderParent;\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n\n    if (node.element) {\n      const elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? currentParent.element !.publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n\n      if (node.element.template) {\n        viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    }\n    validateNode(currentParent, node, nodes.length);\n\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.outputs.length;\n\n    if (!currentRenderParent && (node.flags & NodeFlags.CatRenderNode)) {\n      lastRenderRootNode = node;\n    }\n\n    if (node.flags & NodeFlags.CatProvider) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true;\n        // Use prototypical inheritance to not get O(n^2) complexity...\n        currentParent !.element !.publicProviders =\n            Object.create(currentParent !.element !.publicProviders);\n        currentParent !.element !.allProviders = currentParent !.element !.publicProviders;\n      }\n      const isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const isComponent = (node.flags & NodeFlags.Component) !== 0;\n      if (!isPrivateService || isComponent) {\n        currentParent !.element !.publicProviders ![tokenKey(node.provider !.token)] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true;\n          // Use prototypical inheritance to not get O(n^2) complexity...\n          currentParent !.element !.allProviders =\n              Object.create(currentParent !.element !.publicProviders);\n        }\n        currentParent !.element !.allProviders ![tokenKey(node.provider !.token)] = node;\n      }\n      if (isComponent) {\n        currentParent !.element !.componentProvider = node;\n      }\n    }\n\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.directChildFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    } else {\n      viewRootNodeFlags |= node.flags;\n    }\n\n    if (node.childCount > 0) {\n      currentParent = node;\n\n      if (!isNgContainer(node)) {\n        currentRenderParent = node;\n      }\n    } else {\n      // When the current node has no children, check if it is the last children of its parent.\n      // When it is, propagate the flags up.\n      // The loop is required because an element could be the last transitive children of several\n      // elements. We loop to either the root or the highest opened element (= with remaining\n      // children)\n      while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n        const newParent: NodeDef|null = currentParent.parent;\n        if (newParent) {\n          newParent.childFlags |= currentParent.childFlags;\n          newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n        }\n        currentParent = newParent;\n        // We also need to update the render parent & account for ng-container\n        if (currentParent && isNgContainer(currentParent)) {\n          currentRenderParent = currentParent.renderParent;\n        } else {\n          currentRenderParent = currentParent;\n        }\n      }\n    }\n  }\n\n  const handleEvent: ViewHandleEventFn = (view, nodeIndex, eventName, event) =>\n      nodes[nodeIndex].element !.handleEvent !(view, eventName, event);\n\n  return {\n    // Will be filled later...\n    factory: null,\n    nodeFlags: viewNodeFlags,\n    rootNodeFlags: viewRootNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP, handleEvent,\n    bindingCount: viewBindingCount,\n    outputCount: viewDisposableCount, lastRenderRootNode\n  };\n}\n\nfunction isNgContainer(node: NodeDef): boolean {\n  return (node.flags & NodeFlags.TypeElement) !== 0 && node.element !.name === null;\n}\n\nfunction validateNode(parent: NodeDef | null, node: NodeDef, nodeCount: number) {\n  const template = node.element && node.element.template;\n  if (template) {\n    if (!template.lastRenderRootNode) {\n      throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n    }\n    if (template.lastRenderRootNode &&\n        template.lastRenderRootNode.flags & NodeFlags.EmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.flags & NodeFlags.CatProvider) {\n    const parentFlags = parent ? parent.flags : 0;\n    if ((parentFlags & NodeFlags.TypeElement) === 0) {\n      throw new Error(\n          `Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.TypeContentQuery &&\n        (!parent || (parent.flags & NodeFlags.TypeDirective) === 0)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.nodeIndex}!`);\n    }\n    if (node.flags & NodeFlags.TypeViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.childCount) {\n    const parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n    if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.nodeIndex}!`);\n    }\n  }\n}\n\nexport function createEmbeddedView(\n    parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n\nexport function createComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const rendererType = nodeDef.element !.componentRendererType;\n  let compRenderer: Renderer2;\n  if (!rendererType) {\n    compRenderer = parentView.root.renderer;\n  } else {\n    compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n  }\n  return createView(\n      parentView.root, compRenderer, parentView, nodeDef.element !.componentProvider, viewDef);\n}\n\nfunction createView(\n    root: RootData, renderer: Renderer2, parent: ViewData | null, parentNodeDef: NodeDef | null,\n    def: ViewDefinition): ViewData {\n  const nodes: NodeData[] = new Array(def.nodes.length);\n  const disposables = def.outputCount ? new Array(def.outputCount) : null;\n  const view: ViewData = {\n    def,\n    parent,\n    viewContainerParent: null, parentNodeDef,\n    context: null,\n    component: null, nodes,\n    state: ViewState.CatInit, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables,\n    initIndex: -1\n  };\n  return view;\n}\n\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n\nfunction createViewNodes(view: ViewData) {\n  let renderHost: any;\n  if (isComponentView(view)) {\n    const hostDef = view.parentNodeDef;\n    renderHost = asElementData(view.parent !, hostDef !.parent !.nodeIndex).renderElement;\n  }\n  const def = view.def;\n  const nodes = view.nodes;\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    let nodeData: any;\n    switch (nodeDef.flags & NodeFlags.Types) {\n      case NodeFlags.TypeElement:\n        const el = createElement(view, renderHost, nodeDef) as any;\n        let componentView: ViewData = undefined !;\n        if (nodeDef.flags & NodeFlags.ComponentView) {\n          const compViewDef = resolveDefinition(nodeDef.element !.componentView !);\n          componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n        }\n        listenToElementOutputs(view, componentView, nodeDef, el);\n        nodeData = <ElementData>{\n          renderElement: el,\n          componentView,\n          viewContainer: null,\n          template: nodeDef.element !.template ? createTemplateData(view, nodeDef) : undefined\n        };\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n          nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n        }\n        break;\n      case NodeFlags.TypeText:\n        nodeData = createText(view, renderHost, nodeDef) as any;\n        break;\n      case NodeFlags.TypeClassProvider:\n      case NodeFlags.TypeFactoryProvider:\n      case NodeFlags.TypeUseExistingProvider:\n      case NodeFlags.TypeValueProvider: {\n        nodeData = nodes[i];\n        if (!nodeData && !(nodeDef.flags & NodeFlags.LazyProvider)) {\n          const instance = createProviderInstance(view, nodeDef);\n          nodeData = <ProviderData>{instance};\n        }\n        break;\n      }\n      case NodeFlags.TypePipe: {\n        const instance = createPipeInstance(view, nodeDef);\n        nodeData = <ProviderData>{instance};\n        break;\n      }\n      case NodeFlags.TypeDirective: {\n        nodeData = nodes[i];\n        if (!nodeData) {\n          const instance = createDirectiveInstance(view, nodeDef);\n          nodeData = <ProviderData>{instance};\n        }\n        if (nodeDef.flags & NodeFlags.Component) {\n          const compView = asElementData(view, nodeDef.parent !.nodeIndex).componentView;\n          initView(compView, nodeData.instance, nodeData.instance);\n        }\n        break;\n      }\n      case NodeFlags.TypePureArray:\n      case NodeFlags.TypePureObject:\n      case NodeFlags.TypePurePipe:\n        nodeData = createPureExpression(view, nodeDef) as any;\n        break;\n      case NodeFlags.TypeContentQuery:\n      case NodeFlags.TypeViewQuery:\n        nodeData = createQuery() as any;\n        break;\n      case NodeFlags.TypeNgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodeData = undefined;\n        break;\n    }\n    nodes[i] = nodeData;\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery | NodeFlags.TypeViewQuery, NodeFlags.StaticQuery,\n      CheckType.CheckAndUpdate);\n}\n\nexport function checkNoChangesView(view: ViewData) {\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckNoChanges);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  Services.updateRenderer(view, CheckType.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  // Note: We don't check queries for changes as we didn't do this in v2.x.\n  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n\nexport function checkAndUpdateView(view: ViewData) {\n  if (view.state & ViewState.BeforeFirstCheck) {\n    view.state &= ~ViewState.BeforeFirstCheck;\n    view.state |= ViewState.FirstCheck;\n  } else {\n    view.state &= ~ViewState.FirstCheck;\n  }\n  shiftInitState(view, ViewState.InitState_BeforeInit, ViewState.InitState_CallingOnInit);\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckAndUpdate);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  let callInit = shiftInitState(\n      view, ViewState.InitState_CallingOnInit, ViewState.InitState_CallingAfterContentInit);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked | (callInit ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(view, CheckType.CheckAndUpdate);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeViewQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  callInit = shiftInitState(\n      view, ViewState.InitState_CallingAfterContentInit, ViewState.InitState_CallingAfterViewInit);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked | (callInit ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n  shiftInitState(view, ViewState.InitState_CallingAfterViewInit, ViewState.InitState_AfterInit);\n}\n\nexport function checkAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n  }\n}\n\nfunction markProjectedViewsForCheck(view: ViewData) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ProjectedTemplate)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n      const projectedViews = asElementData(view, i).template._projectedViews;\n      if (projectedViews) {\n        for (let i = 0; i < projectedViews.length; i++) {\n          const projectedView = projectedViews[i];\n          projectedView.state |= ViewState.CheckProjectedView;\n          markParentViewsForCheckProjectedViews(projectedView, view);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.ProjectedTemplate) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionInline(\n          view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    default:\n      throw 'unreachable';\n  }\n}\n\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementDynamic(view, nodeDef, values);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextDynamic(view, nodeDef, values);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n    default:\n      throw 'unreachable';\n  }\n}\n\nexport function checkNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    checkNoChangesNodeDynamic(view, nodeDef, v0);\n  }\n  // Returning false is ok here as we would have thrown in case of a change.\n  return false;\n}\n\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): void {\n  const bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): void {\n  for (let i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.nodeIndex),\n        `Query ${nodeDef.query!.id} not dirty`, `Query ${nodeDef.query!.id} dirty`,\n        (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n\nexport function destroyView(view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  detachProjectedView(view);\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (isComponentView(view)) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n\nfunction destroyViewNodes(view: ViewData) {\n  const len = view.def.nodes.length;\n  for (let i = 0; i < len; i++) {\n    const def = view.def.nodes[i];\n    if (def.flags & NodeFlags.TypeElement) {\n      view.renderer.destroyNode !(asElementData(view, i).renderElement);\n    } else if (def.flags & NodeFlags.TypeText) {\n      view.renderer.destroyNode !(asTextData(view, i).renderText);\n    } else if (def.flags & NodeFlags.TypeContentQuery || def.flags & NodeFlags.TypeViewQuery) {\n      asQueryList(view, i).destroy();\n    }\n  }\n}\n\nenum ViewAction {\n  CreateViewNodes,\n  CheckNoChanges,\n  CheckNoChangesProjectedViews,\n  CheckAndUpdate,\n  CheckAndUpdateProjectedViews,\n  Destroy\n}\n\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ComponentView)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ComponentView) {\n      // a leaf\n      callViewAction(asElementData(view, i).componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.ComponentView) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.EmbeddedViews)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      // a leaf\n      const embeddedViews = asElementData(view, i).viewContainer !._embeddedViews;\n      for (let k = 0; k < embeddedViews.length; k++) {\n        callViewAction(embeddedViews[k], action);\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.EmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckNoChangesProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdateProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.Destroy:\n      // Note: destroyView recurses over all views,\n      // so we don't need to special case projected views here.\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\n\nfunction execProjectedViewsAction(view: ViewData, action: ViewAction) {\n  execEmbeddedViewsAction(view, action);\n  execComponentViewsAction(view, action);\n}\n\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags,\n    checkType: CheckType) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const nodeCount = view.def.nodes.length;\n  for (let i = 0; i < nodeCount; i++) {\n    const nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.nodeIndex);\n      switch (checkType) {\n        case CheckType.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case CheckType.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, PureExpressionData, ViewData, asPureExpressionData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding} from './util';\n\nexport function purePipeDef(checkIndex: number, argCount: number): NodeDef {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(NodeFlags.TypePurePipe, checkIndex, new Array(argCount + 1));\n}\n\nexport function pureArrayDef(checkIndex: number, argCount: number): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureArray, checkIndex, new Array(argCount));\n}\n\nexport function pureObjectDef(checkIndex: number, propToIndex: {[p: string]: number}): NodeDef {\n  const keys = Object.keys(propToIndex);\n  const nbKeys = keys.length;\n  const propertyNames = new Array(nbKeys);\n  for (let i = 0; i < nbKeys; i++) {\n    const key = keys[i];\n    const index = propToIndex[key];\n    propertyNames[index] = key;\n  }\n\n  return _pureExpressionDef(NodeFlags.TypePureObject, checkIndex, propertyNames);\n}\n\nfunction _pureExpressionDef(\n    flags: NodeFlags, checkIndex: number, propertyNames: string[]): NodeDef {\n  const bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let i = 0; i < propertyNames.length; i++) {\n    const prop = propertyNames[i];\n    bindings[i] = {\n      flags: BindingFlags.TypeProperty,\n      name: prop,\n      ns: null,\n      nonMinifiedName: prop,\n      securityContext: null,\n      suffix: null\n    };\n  }\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: -1,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  return {value: undefined};\n}\n\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  const bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    const data = asPureExpressionData(view, def.nodeIndex);\n    let value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = new Array(bindings.length);\n        if (bindLen > 0) value[0] = v0;\n        if (bindLen > 1) value[1] = v1;\n        if (bindLen > 2) value[2] = v2;\n        if (bindLen > 3) value[3] = v3;\n        if (bindLen > 4) value[4] = v4;\n        if (bindLen > 5) value[5] = v5;\n        if (bindLen > 6) value[6] = v6;\n        if (bindLen > 7) value[7] = v7;\n        if (bindLen > 8) value[8] = v8;\n        if (bindLen > 9) value[9] = v9;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        if (bindLen > 0) value[bindings[0].name !] = v0;\n        if (bindLen > 1) value[bindings[1].name !] = v1;\n        if (bindLen > 2) value[bindings[2].name !] = v2;\n        if (bindLen > 3) value[bindings[3].name !] = v3;\n        if (bindLen > 4) value[bindings[4].name !] = v4;\n        if (bindLen > 5) value[bindings[5].name !] = v5;\n        if (bindLen > 6) value[bindings[6].name !] = v6;\n        if (bindLen > 7) value[bindings[7].name !] = v7;\n        if (bindLen > 8) value[bindings[8].name !] = v8;\n        if (bindLen > 9) value[bindings[9].name !] = v9;\n        break;\n      case NodeFlags.TypePurePipe:\n        const pipe = v0;\n        switch (bindLen) {\n          case 1:\n            value = pipe.transform(v0);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n\nexport function checkAndUpdatePureExpressionDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const data = asPureExpressionData(view, def.nodeIndex);\n    let value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = values;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        for (let i = 0; i < values.length; i++) {\n          value[bindings[i].name !] = values[i];\n        }\n        break;\n      case NodeFlags.TypePurePipe:\n        const pipe = values[0];\n        const params = values.slice(1);\n        value = (<any>pipe.transform)(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugElement__PRE_R3__, DebugNode__PRE_R3__, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {InjectableDef, getInjectableDef} from '../di/defs';\nimport {InjectableType} from '../di/injectable';\nimport {ErrorHandler} from '../error_handler';\nimport {isDevMode} from '../is_dev_mode';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '../render/api';\nimport {Sanitizer} from '../sanitization/security';\nimport {Type} from '../type';\nimport {normalizeDebugBindingName, normalizeDebugBindingValue} from '../util/ng_reflect';\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {dirtyParentQueries, getQueryValue} from './query';\nimport {createInjector, createNgModuleRef, getComponentViewDefinitionFactory} from './refs';\nimport {ArgumentType, BindingFlags, CheckType, DebugContext, ElementData, NgModuleDefinition, NodeDef, NodeFlags, NodeLogger, ProviderOverride, RootData, Services, ViewData, ViewDefinition, ViewState, asElementData, asPureExpressionData} from './types';\nimport {NOOP, isComponentView, renderNode, resolveDefinition, splitDepsDsl, tokenKey, viewParentEl} from './util';\nimport {checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView} from './view';\n\n\nlet initialized = false;\n\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.createComponentView = services.createComponentView;\n  Services.createNgModuleRef = services.createNgModuleRef;\n  Services.overrideProvider = services.overrideProvider;\n  Services.overrideComponentView = services.overrideComponentView;\n  Services.clearOverrides = services.clearOverrides;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    createComponentView: createComponentView,\n    createNgModuleRef: createNgModuleRef,\n    overrideProvider: NOOP,\n    overrideComponentView: NOOP,\n    clearOverrides: NOOP,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view: ViewData, checkType: CheckType) => view.def.updateDirectives(\n                          checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                   prodCheckNoChangesNode,\n                          view),\n    updateRenderer: (view: ViewData, checkType: CheckType) => view.def.updateRenderer(\n                        checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                 prodCheckNoChangesNode,\n                        view),\n  };\n}\n\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    createComponentView: debugCreateComponentView,\n    createNgModuleRef: debugCreateNgModuleRef,\n    overrideProvider: debugOverrideProvider,\n    overrideComponentView: debugOverrideComponentView,\n    clearOverrides: debugClearOverrides,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer,\n  };\n}\n\nfunction createProdRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  return createRootView(\n      createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode),\n      def, context);\n}\n\nfunction debugCreateRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  const root = createRootData(\n      elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes,\n      rootSelectorOrNode);\n  const defWithOverride = applyProviderOverridesToView(def);\n  return callWithDebugContext(\n      DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n\nfunction createRootData(\n    elInjector: Injector, ngModule: NgModuleRef<any>, rendererFactory: RendererFactory2,\n    projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const sanitizer = ngModule.injector.get(Sanitizer);\n  const errorHandler = ngModule.injector.get(ErrorHandler);\n  const renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector, projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n  };\n}\n\nfunction debugCreateEmbeddedView(\n    parentView: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  const defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null,\n      [parentView, anchorDef, defWithOverride, context]);\n}\n\nfunction debugCreateComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const overrideComponentView =\n      viewDefOverrides.get(nodeDef.element !.componentProvider !.provider !.token);\n  if (overrideComponentView) {\n    viewDef = overrideComponentView;\n  } else {\n    viewDef = applyProviderOverridesToView(viewDef);\n  }\n  return callWithDebugContext(\n      DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n}\n\nfunction debugCreateNgModuleRef(\n    moduleType: Type<any>, parentInjector: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  const defWithOverride = applyProviderOverridesToNgModule(def);\n  return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n\nconst providerOverrides = new Map<any, ProviderOverride>();\nconst providerOverridesWithScope = new Map<InjectableType<any>, ProviderOverride>();\nconst viewDefOverrides = new Map<any, ViewDefinition>();\n\nfunction debugOverrideProvider(override: ProviderOverride) {\n  providerOverrides.set(override.token, override);\n  let injectableDef: InjectableDef<any>|null;\n  if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n      typeof injectableDef.providedIn === 'function') {\n    providerOverridesWithScope.set(override.token as InjectableType<any>, override);\n  }\n}\n\nfunction debugOverrideComponentView(comp: any, compFactory: ComponentFactory<any>) {\n  const hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n  const compViewDef = resolveDefinition(hostViewDef.nodes[0].element !.componentView !);\n  viewDefOverrides.set(comp, compViewDef);\n}\n\nfunction debugClearOverrides() {\n  providerOverrides.clear();\n  providerOverridesWithScope.clear();\n  viewDefOverrides.clear();\n}\n\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def: ViewDefinition): ViewDefinition {\n  if (providerOverrides.size === 0) {\n    return def;\n  }\n  const elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n  if (elementIndicesWithOverwrittenProviders.length === 0) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory !(() => NOOP);\n  for (let i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n    applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n  }\n  return def;\n\n  function findElementIndicesWithOverwrittenProviders(def: ViewDefinition): number[] {\n    const elIndicesWithOverwrittenProviders: number[] = [];\n    let lastElementDef: NodeDef|null = null;\n    for (let i = 0; i < def.nodes.length; i++) {\n      const nodeDef = def.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        lastElementDef = nodeDef;\n      }\n      if (lastElementDef && nodeDef.flags & NodeFlags.CatProviderNoDirective &&\n          providerOverrides.has(nodeDef.provider !.token)) {\n        elIndicesWithOverwrittenProviders.push(lastElementDef !.nodeIndex);\n        lastElementDef = null;\n      }\n    }\n    return elIndicesWithOverwrittenProviders;\n  }\n\n  function applyProviderOverridesToElement(viewDef: ViewDefinition, elIndex: number) {\n    for (let i = elIndex + 1; i < viewDef.nodes.length; i++) {\n      const nodeDef = viewDef.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        // stop at the next element\n        return;\n      }\n      if (nodeDef.flags & NodeFlags.CatProviderNoDirective) {\n        const provider = nodeDef.provider !;\n        const override = providerOverrides.get(provider.token);\n        if (override) {\n          nodeDef.flags = (nodeDef.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n          provider.deps = splitDepsDsl(override.deps);\n          provider.value = override.value;\n        }\n      }\n    }\n  }\n}\n\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def: NgModuleDefinition): NgModuleDefinition {\n  const {hasOverrides, hasDeprecatedOverrides} = calcHasOverrides(def);\n  if (!hasOverrides) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory !(() => NOOP);\n  applyProviderOverrides(def);\n  return def;\n\n  function calcHasOverrides(def: NgModuleDefinition):\n      {hasOverrides: boolean, hasDeprecatedOverrides: boolean} {\n    let hasOverrides = false;\n    let hasDeprecatedOverrides = false;\n    if (providerOverrides.size === 0) {\n      return {hasOverrides, hasDeprecatedOverrides};\n    }\n    def.providers.forEach(node => {\n      const override = providerOverrides.get(node.token);\n      if ((node.flags & NodeFlags.CatProviderNoDirective) && override) {\n        hasOverrides = true;\n        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n      }\n    });\n    def.modules.forEach(module => {\n      providerOverridesWithScope.forEach((override, token) => {\n        if (getInjectableDef(token) !.providedIn === module) {\n          hasOverrides = true;\n          hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n        }\n      });\n    });\n    return {hasOverrides, hasDeprecatedOverrides};\n  }\n\n  function applyProviderOverrides(def: NgModuleDefinition) {\n    for (let i = 0; i < def.providers.length; i++) {\n      const provider = def.providers[i];\n      if (hasDeprecatedOverrides) {\n        // We had a bug where me made\n        // all providers lazy. Keep this logic behind a flag\n        // for migrating existing users.\n        provider.flags |= NodeFlags.LazyProvider;\n      }\n      const override = providerOverrides.get(provider.token);\n      if (override) {\n        provider.flags = (provider.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n        provider.deps = splitDepsDsl(override.deps);\n        provider.value = override.value;\n      }\n    }\n    if (providerOverridesWithScope.size > 0) {\n      let moduleSet = new Set<any>(def.modules);\n      providerOverridesWithScope.forEach((override, token) => {\n        if (moduleSet.has(getInjectableDef(token) !.providedIn)) {\n          let provider = {\n            token: token,\n            flags:\n                override.flags | (hasDeprecatedOverrides ? NodeFlags.LazyProvider : NodeFlags.None),\n            deps: splitDepsDsl(override.deps),\n            value: override.value,\n            index: def.providers.length,\n          };\n          def.providers.push(provider);\n          def.providersByKey[tokenKey(token)] = provider;\n        }\n      });\n    }\n  }\n}\n\nfunction prodCheckAndUpdateNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const nodeDef = view.def.nodes[checkIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n\nfunction prodCheckNoChangesNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const nodeDef = view.def.nodes[checkIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n\nenum DebugAction {\n  create,\n  detectChanges,\n  checkNoChanges,\n  destroy,\n  handleEvent\n}\n\nlet _currentAction: DebugAction;\nlet _currentView: ViewData;\nlet _currentNodeIndex: number|null;\n\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number | null) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n\nfunction debugUpdateDirectives(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n\n  function debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n\nfunction debugUpdateRenderer(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n\n  function debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n\nfunction debugCheckAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, givenValues: any[]): void {\n  const changed = (<any>checkAndUpdateNode)(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      const bindingValues: {[key: string]: string} = {};\n      for (let i = 0; i < nodeDef.bindings.length; i++) {\n        const binding = nodeDef.bindings[i];\n        const value = values[i];\n        if (binding.flags & BindingFlags.TypeProperty) {\n          bindingValues[normalizeDebugBindingName(binding.nonMinifiedName !)] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const elDef = nodeDef.parent !;\n      const el = asElementData(view, elDef.nodeIndex).renderElement;\n      if (!elDef.element !.name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let attr in bindingValues) {\n          const value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction debugCheckNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, values: any[]): void {\n  (<any>checkNoChangesNode)(view, nodeDef, argStyle, ...values);\n}\n\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n    const nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n\nclass DebugContext_ implements DebugContext {\n  private nodeDef: NodeDef;\n  private elView: ViewData;\n  private elDef: NodeDef;\n\n  constructor(public view: ViewData, public nodeIndex: number|null) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let elDef = this.nodeDef;\n    let elView = view;\n    while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n      elDef = elDef.parent !;\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = viewParentEl(elView) !;\n        elView = elView.parent !;\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n\n  private get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n  }\n\n  get injector(): Injector { return createInjector(this.elView, this.elDef); }\n\n  get component(): any { return this.elOrCompView.component; }\n\n  get context(): any { return this.elOrCompView.context; }\n\n  get providerTokens(): any[] {\n    const tokens: any[] = [];\n    if (this.elDef) {\n      for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          tokens.push(childDef.provider !.token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n\n  get references(): {[key: string]: any} {\n    const references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n\n  get componentRenderElement() {\n    const elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n\n  get renderNode(): any {\n    return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                                                     renderNode(this.elView, this.elDef);\n  }\n\n  logError(console: Console, ...values: any[]) {\n    let logViewDef: ViewDefinition;\n    let logNodeIndex: number;\n    if (this.nodeDef.flags & NodeFlags.TypeText) {\n      logViewDef = this.view.def;\n      logNodeIndex = this.nodeDef.nodeIndex;\n    } else {\n      logViewDef = this.elView.def;\n      logNodeIndex = this.elDef.nodeIndex;\n    }\n    // Note: we only generate a log function for text and element nodes\n    // to make the generated code as small as possible.\n    const renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n    let currRenderNodeIndex = -1;\n    let nodeLogger: NodeLogger = () => {\n      currRenderNodeIndex++;\n      if (currRenderNodeIndex === renderNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    };\n    logViewDef.factory !(nodeLogger);\n    if (currRenderNodeIndex < renderNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      (<any>console.error)(...values);\n    }\n  }\n}\n\nfunction getRenderNodeIndex(viewDef: ViewDefinition, nodeIndex: number): number {\n  let renderNodeIndex = -1;\n  for (let i = 0; i <= nodeIndex; i++) {\n    const nodeDef = viewDef.nodes[i];\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      renderNodeIndex++;\n    }\n  }\n  return renderNodeIndex;\n}\n\nfunction findHostElement(view: ViewData): ElementData|null {\n  while (view && !isComponentView(view)) {\n    view = view.parent !;\n  }\n  if (view.parent) {\n    return asElementData(view.parent, viewParentEl(view) !.nodeIndex);\n  }\n  return null;\n}\n\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const oldAction = _currentAction;\n  const oldView = _currentView;\n  const oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch (e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    throw viewWrappedDebugError(e, getCurrentDebugContext() !);\n  }\n}\n\nexport function getCurrentDebugContext(): DebugContext|null {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\n\nexport class DebugRendererFactory2 implements RendererFactory2 {\n  constructor(private delegate: RendererFactory2) {}\n\n  createRenderer(element: any, renderData: RendererType2|null): Renderer2 {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n\n  begin() {\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n  end() {\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n\n  whenRenderingDone(): Promise<any> {\n    if (this.delegate.whenRenderingDone) {\n      return this.delegate.whenRenderingDone();\n    }\n    return Promise.resolve(null);\n  }\n}\n\nexport class DebugRenderer2 implements Renderer2 {\n  readonly data: {[key: string]: any};\n\n  private createDebugContext(nativeElement: any) { return this.debugContextFactory(nativeElement); }\n\n  /**\n   * Factory function used to create a `DebugContext` when a node is created.\n   *\n   * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n   *\n   * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n   * or a Render context.\n   */\n  debugContextFactory: (nativeElement?: any) => DebugContext | null = getCurrentDebugContext;\n\n  constructor(private delegate: Renderer2) { this.data = this.delegate.data; }\n\n  destroyNode(node: any) {\n    removeDebugNodeFromIndex(getDebugNode(node) !);\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n\n  destroy() { this.delegate.destroy(); }\n\n  createElement(name: string, namespace?: string): any {\n    const el = this.delegate.createElement(name, namespace);\n    const debugCtx = this.createDebugContext(el);\n    if (debugCtx) {\n      const debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n      (debugEl as{name: string}).name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n\n  createComment(value: string): any {\n    const comment = this.delegate.createComment(value);\n    const debugCtx = this.createDebugContext(comment);\n    if (debugCtx) {\n      indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n    }\n    return comment;\n  }\n\n  createText(value: string): any {\n    const text = this.delegate.createText(value);\n    const debugCtx = this.createDebugContext(text);\n    if (debugCtx) {\n      indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n    }\n    return text;\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(newChild);\n    const debugRefEl = getDebugNode(refChild) !;\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n\n  selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any {\n    const el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n    const debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n    }\n    return el;\n  }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      const fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      const fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n\n  addClass(el: any, name: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n\n  removeClass(el: any, name: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n\n  listen(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n\n  parentNode(node: any): any { return this.delegate.parentNode(node); }\n  nextSibling(node: any): any { return this.delegate.nextSibling(node); }\n  setValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, InjectionToken, LOCALE_ID, Optional} from '@angular/core';\nimport {Plural, getLocalePluralCase} from './locale_data_api';\n\n\n/**\n * @deprecated from v5\n */\nexport const DEPRECATED_PLURAL_FN = new InjectionToken<boolean>('UseV4Plurals');\n\n/**\n * @publicApi\n */\nexport abstract class NgLocalization {\n  abstract getPluralCategory(value: any, locale?: string): string;\n}\n\n\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n */\nexport function getPluralCategory(\n    value: number, cases: string[], ngLocalization: NgLocalization, locale?: string): string {\n  let key = `=${value}`;\n\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n\n  key = ngLocalization.getPluralCategory(value, locale);\n\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n\n  if (cases.indexOf('other') > -1) {\n    return 'other';\n  }\n\n  throw new Error(`No plural message found for value \"${value}\"`);\n}\n\n/**\n * Returns the plural case based on the locale\n *\n * @publicApi\n */\n@Injectable()\nexport class NgLocaleLocalization extends NgLocalization {\n  constructor(\n      @Inject(LOCALE_ID) protected locale: string,\n      /** @deprecated from v5 */\n      @Optional() @Inject(DEPRECATED_PLURAL_FN) protected deprecatedPluralFn?:\n          ((locale: string, value: number|string) => Plural)|null) {\n    super();\n  }\n\n  getPluralCategory(value: any, locale?: string): string {\n    const plural = this.deprecatedPluralFn ? this.deprecatedPluralFn(locale || this.locale, value) :\n                                             getLocalePluralCase(locale || this.locale)(value);\n\n    switch (plural) {\n      case Plural.Zero:\n        return 'zero';\n      case Plural.One:\n        return 'one';\n      case Plural.Two:\n        return 'two';\n      case Plural.Few:\n        return 'few';\n      case Plural.Many:\n        return 'many';\n      default:\n        return 'other';\n    }\n  }\n}\n\n/**\n * Returns the plural case based on the locale\n *\n * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n * @publicApi\n */\nexport function getPluralCase(locale: string, nLike: number | string): Plural {\n  // TODO(vicb): lazy compute\n  if (typeof nLike === 'string') {\n    nLike = parseInt(<string>nLike, 10);\n  }\n  const n: number = nLike as number;\n  const nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n  const i = Math.floor(Math.abs(n));\n  const v = nDecimal.length;\n  const f = parseInt(nDecimal, 10);\n  const t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n\n  const lang = locale.split('-')[0].toLowerCase();\n\n  switch (lang) {\n    case 'af':\n    case 'asa':\n    case 'az':\n    case 'bem':\n    case 'bez':\n    case 'bg':\n    case 'brx':\n    case 'ce':\n    case 'cgg':\n    case 'chr':\n    case 'ckb':\n    case 'ee':\n    case 'el':\n    case 'eo':\n    case 'es':\n    case 'eu':\n    case 'fo':\n    case 'fur':\n    case 'gsw':\n    case 'ha':\n    case 'haw':\n    case 'hu':\n    case 'jgo':\n    case 'jmc':\n    case 'ka':\n    case 'kk':\n    case 'kkj':\n    case 'kl':\n    case 'ks':\n    case 'ksb':\n    case 'ky':\n    case 'lb':\n    case 'lg':\n    case 'mas':\n    case 'mgo':\n    case 'ml':\n    case 'mn':\n    case 'nb':\n    case 'nd':\n    case 'ne':\n    case 'nn':\n    case 'nnh':\n    case 'nyn':\n    case 'om':\n    case 'or':\n    case 'os':\n    case 'ps':\n    case 'rm':\n    case 'rof':\n    case 'rwk':\n    case 'saq':\n    case 'seh':\n    case 'sn':\n    case 'so':\n    case 'sq':\n    case 'ta':\n    case 'te':\n    case 'teo':\n    case 'tk':\n    case 'tr':\n    case 'ug':\n    case 'uz':\n    case 'vo':\n    case 'vun':\n    case 'wae':\n    case 'xog':\n      if (n === 1) return Plural.One;\n      return Plural.Other;\n    case 'ak':\n    case 'ln':\n    case 'mg':\n    case 'pa':\n    case 'ti':\n      if (n === Math.floor(n) && n >= 0 && n <= 1) return Plural.One;\n      return Plural.Other;\n    case 'am':\n    case 'as':\n    case 'bn':\n    case 'fa':\n    case 'gu':\n    case 'hi':\n    case 'kn':\n    case 'mr':\n    case 'zu':\n      if (i === 0 || n === 1) return Plural.One;\n      return Plural.Other;\n    case 'ar':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10) return Plural.Few;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99) return Plural.Many;\n      return Plural.Other;\n    case 'ast':\n    case 'ca':\n    case 'de':\n    case 'en':\n    case 'et':\n    case 'fi':\n    case 'fy':\n    case 'gl':\n    case 'it':\n    case 'nl':\n    case 'sv':\n    case 'sw':\n    case 'ur':\n    case 'yi':\n      if (i === 1 && v === 0) return Plural.One;\n      return Plural.Other;\n    case 'be':\n      if (n % 10 === 1 && !(n % 100 === 11)) return Plural.One;\n      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n          !(n % 100 >= 12 && n % 100 <= 14))\n        return Plural.Few;\n      if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n          n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'br':\n      if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91)) return Plural.One;\n      if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92)) return Plural.Two;\n      if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n          !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n            n % 100 >= 90 && n % 100 <= 99))\n        return Plural.Few;\n      if (!(n === 0) && n % 1e6 === 0) return Plural.Many;\n      return Plural.Other;\n    case 'bs':\n    case 'hr':\n    case 'sr':\n      if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n        return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n              !(i % 100 >= 12 && i % 100 <= 14) ||\n          f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n              !(f % 100 >= 12 && f % 100 <= 14))\n        return Plural.Few;\n      return Plural.Other;\n    case 'cs':\n    case 'sk':\n      if (i === 1 && v === 0) return Plural.One;\n      if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0) return Plural.Few;\n      if (!(v === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'cy':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n === 3) return Plural.Few;\n      if (n === 6) return Plural.Many;\n      return Plural.Other;\n    case 'da':\n      if (n === 1 || !(t === 0) && (i === 0 || i === 1)) return Plural.One;\n      return Plural.Other;\n    case 'dsb':\n    case 'hsb':\n      if (v === 0 && i % 100 === 1 || f % 100 === 1) return Plural.One;\n      if (v === 0 && i % 100 === 2 || f % 100 === 2) return Plural.Two;\n      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n          f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n        return Plural.Few;\n      return Plural.Other;\n    case 'ff':\n    case 'fr':\n    case 'hy':\n    case 'kab':\n      if (i === 0 || i === 1) return Plural.One;\n      return Plural.Other;\n    case 'fil':\n      if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n          v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n          !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n        return Plural.One;\n      return Plural.Other;\n    case 'ga':\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n === Math.floor(n) && n >= 3 && n <= 6) return Plural.Few;\n      if (n === Math.floor(n) && n >= 7 && n <= 10) return Plural.Many;\n      return Plural.Other;\n    case 'gd':\n      if (n === 1 || n === 11) return Plural.One;\n      if (n === 2 || n === 12) return Plural.Two;\n      if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19)) return Plural.Few;\n      return Plural.Other;\n    case 'gv':\n      if (v === 0 && i % 10 === 1) return Plural.One;\n      if (v === 0 && i % 10 === 2) return Plural.Two;\n      if (v === 0 &&\n          (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n        return Plural.Few;\n      if (!(v === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'he':\n      if (i === 1 && v === 0) return Plural.One;\n      if (i === 2 && v === 0) return Plural.Two;\n      if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0) return Plural.Many;\n      return Plural.Other;\n    case 'is':\n      if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0)) return Plural.One;\n      return Plural.Other;\n    case 'ksh':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      return Plural.Other;\n    case 'kw':\n    case 'naq':\n    case 'se':\n    case 'smn':\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      return Plural.Other;\n    case 'lag':\n      if (n === 0) return Plural.Zero;\n      if ((i === 0 || i === 1) && !(n === 0)) return Plural.One;\n      return Plural.Other;\n    case 'lt':\n      if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19)) return Plural.One;\n      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n          !(n % 100 >= 11 && n % 100 <= 19))\n        return Plural.Few;\n      if (!(f === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'lv':\n    case 'prg':\n      if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n          v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n        return Plural.Zero;\n      if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n          !(v === 2) && f % 10 === 1)\n        return Plural.One;\n      return Plural.Other;\n    case 'mk':\n      if (v === 0 && i % 10 === 1 || f % 10 === 1) return Plural.One;\n      return Plural.Other;\n    case 'mt':\n      if (n === 1) return Plural.One;\n      if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n        return Plural.Few;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19) return Plural.Many;\n      return Plural.Other;\n    case 'pl':\n      if (i === 1 && v === 0) return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n          !(i % 100 >= 12 && i % 100 <= 14))\n        return Plural.Few;\n      if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n          v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n          v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'pt':\n      if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2)) return Plural.One;\n      return Plural.Other;\n    case 'ro':\n      if (i === 1 && v === 0) return Plural.One;\n      if (!(v === 0) || n === 0 ||\n          !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n        return Plural.Few;\n      return Plural.Other;\n    case 'ru':\n    case 'uk':\n      if (v === 0 && i % 10 === 1 && !(i % 100 === 11)) return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n          !(i % 100 >= 12 && i % 100 <= 14))\n        return Plural.Few;\n      if (v === 0 && i % 10 === 0 ||\n          v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n          v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'shi':\n      if (i === 0 || n === 1) return Plural.One;\n      if (n === Math.floor(n) && n >= 2 && n <= 10) return Plural.Few;\n      return Plural.Other;\n    case 'si':\n      if (n === 0 || n === 1 || i === 0 && f === 1) return Plural.One;\n      return Plural.Other;\n    case 'sl':\n      if (v === 0 && i % 100 === 1) return Plural.One;\n      if (v === 0 && i % 100 === 2) return Plural.Two;\n      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n        return Plural.Few;\n      return Plural.Other;\n    case 'tzm':\n      if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n        return Plural.One;\n      return Plural.Other;\n    // When there is no specification, the default is always \"other\"\n    // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n    // > other (requiredâgeneral plural form â also used if the language only has a single form)\n    default:\n      return Plural.Other;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleFactory, NgModuleRef} from '../linker/ng_module_factory';\nimport {Type} from '../type';\n\nimport {initServicesIfNeeded} from './services';\nimport {NgModuleDefinition, NgModuleDefinitionFactory, NgModuleProviderDef, ProviderOverride, Services, ViewDefinition} from './types';\nimport {resolveDefinition} from './util';\n\nexport function overrideProvider(override: ProviderOverride) {\n  initServicesIfNeeded();\n  return Services.overrideProvider(override);\n}\n\nexport function overrideComponentView(comp: Type<any>, componentFactory: ComponentFactory<any>) {\n  initServicesIfNeeded();\n  return Services.overrideComponentView(comp, componentFactory);\n}\n\nexport function clearOverrides() {\n  initServicesIfNeeded();\n  return Services.clearOverrides();\n}\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createNgModuleFactory(\n    ngModuleType: Type<any>, bootstrapComponents: Type<any>[],\n    defFactory: NgModuleDefinitionFactory): NgModuleFactory<any> {\n  return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\n\nfunction cloneNgModuleDefinition(def: NgModuleDefinition): NgModuleDefinition {\n  const providers = Array.from(def.providers);\n  const modules = Array.from(def.modules);\n  const providersByKey: {[tokenKey: string]: NgModuleProviderDef} = {};\n  for (const key in def.providersByKey) {\n    providersByKey[key] = def.providersByKey[key];\n  }\n\n  return {\n    factory: def.factory,\n    isRoot: def.isRoot, providers, modules, providersByKey,\n  };\n}\n\nclass NgModuleFactory_ extends NgModuleFactory<any> {\n  constructor(\n      public readonly moduleType: Type<any>, private _bootstrapComponents: Type<any>[],\n      private _ngModuleDefFactory: NgModuleDefinitionFactory) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n  }\n\n  create(parentInjector: Injector|null): NgModuleRef<any> {\n    initServicesIfNeeded();\n    // Clone the NgModuleDefinition so that any tree shakeable provider definition\n    // added to this instance of the NgModuleRef doesn't affect the cached copy.\n    // See https://github.com/angular/angular/issues/25018.\n    const def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n    return Services.createNgModuleRef(\n        this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n *\n * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n * agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms that angular supports. For example, `@angular/platform-browser` provides an\n * implementation specific to the browser environment, while `@angular/platform-webworker` provides\n * one suitable for use with web workers.\n *\n * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n * when they need to interact with the DOM apis like pushState, popState, etc...\n *\n * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n * by the {@link Router} in order to navigate between routes. Since all interactions between {@link\n * Router} /\n * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n * class they are all platform independent.\n *\n * @publicApi\n */\nexport abstract class PlatformLocation {\n  abstract getBaseHrefFromDOM(): string;\n  abstract onPopState(fn: LocationChangeListener): void;\n  abstract onHashChange(fn: LocationChangeListener): void;\n\n  abstract get pathname(): string;\n  abstract get search(): string;\n  abstract get hash(): string;\n\n  abstract replaceState(state: any, title: string, url: string): void;\n\n  abstract pushState(state: any, title: string, url: string): void;\n\n  abstract forward(): void;\n\n  abstract back(): void;\n}\n\n/**\n * @description\n * Indicates when a location is initialized.\n *\n * @publicApi\n */\nexport const LOCATION_INITIALIZED = new InjectionToken<Promise<any>>('Location Initialized');\n\n/**\n * @description\n * A serializable version of the event from `onPopState` or `onHashChange`\n *\n * @publicApi\n */\nexport interface LocationChangeEvent {\n  type: string;\n  state: any;\n}\n\n/**\n * @publicApi\n */\nexport interface LocationChangeListener { (event: LocationChangeEvent): any; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// THIS CODE IS GENERATED - DO NOT MODIFY\n// See angular/tools/gulp-tasks/cldr/extract.js\n\nconst u = undefined;\n\nfunction plural(n: number): number {\n  let i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n  if (i === 1 && v === 0) return 1;\n  return 5;\n}\n\nexport default [\n  'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n  [\n    ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n  ],\n  u,\n  [\n    ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n    ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n      'October', 'November', 'December'\n    ]\n  ],\n  u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n  ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n  ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n  ['.', ',', ';', '%', '+', '-', 'E', 'Ã', 'â°', 'â', 'NaN', ':'],\n  ['#,##0.###', '#,##0%', 'Â¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\nexport const LOCALE_DATA: {[localeId: string]: any} = {};\n\n/**\n * Register global data to be used internally by Angular. See the\n * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n *\n * @publicApi\n */\n// The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1\nexport function registerLocaleData(data: any, localeId?: string | any, extraData?: any): void {\n  if (typeof localeId !== 'string') {\n    extraData = localeId;\n    localeId = data[LocaleDataIndex.LocaleId];\n  }\n\n  localeId = localeId.toLowerCase().replace(/_/g, '-');\n\n  LOCALE_DATA[localeId] = data;\n\n  if (extraData) {\n    LOCALE_DATA[localeId][LocaleDataIndex.ExtraData] = extraData;\n  }\n}\n\n/**\n * Index of each type of locale data from the locale data array\n */\nexport const enum LocaleDataIndex {\n  LocaleId = 0,\n  DayPeriodsFormat,\n  DayPeriodsStandalone,\n  DaysFormat,\n  DaysStandalone,\n  MonthsFormat,\n  MonthsStandalone,\n  Eras,\n  FirstDayOfWeek,\n  WeekendRange,\n  DateFormat,\n  TimeFormat,\n  DateTimeFormat,\n  NumberSymbols,\n  NumberFormats,\n  CurrencySymbol,\n  CurrencyName,\n  Currencies,\n  PluralCase,\n  ExtraData\n}\n\n/**\n * Index of each type of locale data from the extra locale data array\n */\nexport const enum ExtraLocaleDataIndex {\n  ExtraDayPeriodFormats = 0,\n  ExtraDayPeriodStandalone,\n  ExtraDayPeriodsRules\n}\n\n/**\n * Index of each value in currency data (used to describe CURRENCIES_EN in currencies.ts)\n */\nexport const enum CurrencyIndex {Symbol = 0, SymbolNarrow, NbOfDigits}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport localeEn from './locale_en';\nimport {LOCALE_DATA, LocaleDataIndex, ExtraLocaleDataIndex, CurrencyIndex} from './locale_data';\nimport {CURRENCIES_EN, CurrenciesSymbols} from './currencies';\n\n/**\n * The different format styles that can be used to represent numbers.\n * Used by the function {@link getLocaleNumberFormat}.\n *\n * @publicApi\n */\nexport enum NumberFormatStyle {\n  Decimal,\n  Percent,\n  Currency,\n  Scientific\n}\n\n/** @publicApi */\nexport enum Plural {\n  Zero = 0,\n  One = 1,\n  Two = 2,\n  Few = 3,\n  Many = 4,\n  Other = 5,\n}\n\n/**\n * Some languages use two different forms of strings (standalone and format) depending on the\n * context.\n * Typically the standalone version is the nominative form of the word, and the format version is in\n * the genitive.\n * See [the CLDR website](http://cldr.unicode.org/translation/date-time) for more information.\n *\n * @publicApi\n */\nexport enum FormStyle {\n  Format,\n  Standalone\n}\n\n/**\n * Multiple widths are available for translations: narrow (1 character), abbreviated (3 characters),\n * wide (full length), and short (2 characters, only for days).\n *\n * For example the day `Sunday` will be:\n * - Narrow: `S`\n * - Short: `Su`\n * - Abbreviated: `Sun`\n * - Wide: `Sunday`\n *\n * @publicApi\n */\nexport enum TranslationWidth {\n  Narrow,\n  Abbreviated,\n  Wide,\n  Short\n}\n\n/**\n * Multiple widths are available for formats: short (minimal amount of data), medium (small amount\n * of data), long (complete amount of data), full (complete amount of data and extra information).\n *\n * For example the date-time formats for the english locale will be:\n *  - `'short'`: `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`)\n *  - `'medium'`: `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`)\n *  - `'long'`: `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM GMT+1`)\n *  - `'full'`: `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at\n * 9:03:01 AM GMT+01:00`)\n *\n * @publicApi\n */\nexport enum FormatWidth {\n  Short,\n  Medium,\n  Long,\n  Full\n}\n\n/**\n * Number symbol that can be used to replace placeholders in number patterns.\n * The placeholders are based on english values:\n *\n * | Name                   | Example for en-US | Meaning                                     |\n * |------------------------|-------------------|---------------------------------------------|\n * | decimal                | 2,345`.`67        | decimal separator                           |\n * | group                  | 2`,`345.67        | grouping separator, typically for thousands |\n * | plusSign               | `+`23             | the plus sign used with numbers             |\n * | minusSign              | `-`23             | the minus sign used with numbers            |\n * | percentSign            | 23.4`%`           | the percent sign (out of 100)               |\n * | perMille               | 234`â°`            | the permille sign (out of 1000)             |\n * | exponential            | 1.2`E`3           | used in computers for 1.2Ã10Â³.              |\n * | superscriptingExponent | 1.2`Ã`103         | human-readable format of exponential        |\n * | infinity               | `â`               | used in +â and -â.                          |\n * | nan                    | `NaN`             | \"not a number\".                             |\n * | timeSeparator          | 10`:`52           | symbol used between time units              |\n * | currencyDecimal        | $2,345`.`67       | decimal separator, fallback to \"decimal\"    |\n * | currencyGroup          | $2`,`345.67       | grouping separator, fallback to \"group\"     |\n *\n * @publicApi\n */\nexport enum NumberSymbol {\n  Decimal,\n  Group,\n  List,\n  PercentSign,\n  PlusSign,\n  MinusSign,\n  Exponential,\n  SuperscriptingExponent,\n  PerMille,\n  Infinity,\n  NaN,\n  TimeSeparator,\n  CurrencyDecimal,\n  CurrencyGroup\n}\n\n/**\n * The value for each day of the week, based on the en-US locale\n *\n * @publicApi\n */\nexport enum WeekDay {\n  Sunday = 0,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday\n}\n\n/**\n * The locale id for the chosen locale (e.g `en-GB`).\n *\n * @publicApi\n */\nexport function getLocaleId(locale: string): string {\n  return findLocaleData(locale)[LocaleDataIndex.LocaleId];\n}\n\n/**\n * Periods of the day (e.g. `[AM, PM]` for en-US).\n *\n * @publicApi\n */\nexport function getLocaleDayPeriods(\n    locale: string, formStyle: FormStyle, width: TranslationWidth): [string, string] {\n  const data = findLocaleData(locale);\n  const amPmData = <[\n    string, string\n  ][][]>[data[LocaleDataIndex.DayPeriodsFormat], data[LocaleDataIndex.DayPeriodsStandalone]];\n  const amPm = getLastDefinedValue(amPmData, formStyle);\n  return getLastDefinedValue(amPm, width);\n}\n\n/**\n * Days of the week for the Gregorian calendar (e.g. `[Sunday, Monday, ... Saturday]` for en-US).\n *\n * @publicApi\n */\nexport function getLocaleDayNames(\n    locale: string, formStyle: FormStyle, width: TranslationWidth): string[] {\n  const data = findLocaleData(locale);\n  const daysData =\n      <string[][][]>[data[LocaleDataIndex.DaysFormat], data[LocaleDataIndex.DaysStandalone]];\n  const days = getLastDefinedValue(daysData, formStyle);\n  return getLastDefinedValue(days, width);\n}\n\n/**\n * Months of the year for the Gregorian calendar (e.g. `[January, February, ...]` for en-US).\n *\n * @publicApi\n */\nexport function getLocaleMonthNames(\n    locale: string, formStyle: FormStyle, width: TranslationWidth): string[] {\n  const data = findLocaleData(locale);\n  const monthsData =\n      <string[][][]>[data[LocaleDataIndex.MonthsFormat], data[LocaleDataIndex.MonthsStandalone]];\n  const months = getLastDefinedValue(monthsData, formStyle);\n  return getLastDefinedValue(months, width);\n}\n\n/**\n * Eras for the Gregorian calendar (e.g. AD/BC).\n *\n * @publicApi\n */\nexport function getLocaleEraNames(locale: string, width: TranslationWidth): [string, string] {\n  const data = findLocaleData(locale);\n  const erasData = <[string, string][]>data[LocaleDataIndex.Eras];\n  return getLastDefinedValue(erasData, width);\n}\n\n/**\n * First day of the week for this locale, based on english days (Sunday = 0, Monday = 1, ...).\n * For example in french the value would be 1 because the first day of the week is Monday.\n *\n * @publicApi\n */\nexport function getLocaleFirstDayOfWeek(locale: string): WeekDay {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.FirstDayOfWeek];\n}\n\n/**\n * Range of days in the week that represent the week-end for this locale, based on english days\n * (Sunday = 0, Monday = 1, ...).\n * For example in english the value would be [6,0] for Saturday to Sunday.\n *\n * @publicApi\n */\nexport function getLocaleWeekEndRange(locale: string): [WeekDay, WeekDay] {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.WeekendRange];\n}\n\n/**\n * Date format that depends on the locale.\n *\n * There are four basic date formats:\n * - `full` should contain long-weekday (EEEE), year (y), long-month (MMMM), day (d).\n *\n *  For example, English uses `EEEE, MMMM d, y`, corresponding to a date like\n *  \"Tuesday, September 14, 1999\".\n *\n * - `long` should contain year, long-month, day.\n *\n *  For example, `MMMM d, y`, corresponding to a date like \"September 14, 1999\".\n *\n * - `medium` should contain year, abbreviated-month (MMM), day.\n *\n *  For example, `MMM d, y`, corresponding to a date like \"Sep 14, 1999\".\n *  For languages that do not use abbreviated months, use the numeric month (MM/M). For example,\n *  `y/MM/dd`, corresponding to a date like \"1999/09/14\".\n *\n * - `short` should contain year, numeric-month (MM/M), and day.\n *\n *  For example, `M/d/yy`, corresponding to a date like \"9/14/99\".\n *\n * @publicApi\n */\nexport function getLocaleDateFormat(locale: string, width: FormatWidth): string {\n  const data = findLocaleData(locale);\n  return getLastDefinedValue(data[LocaleDataIndex.DateFormat], width);\n}\n\n/**\n * Time format that depends on the locale.\n *\n * The standard formats include four basic time formats:\n * - `full` should contain hour (h/H), minute (mm), second (ss), and zone (zzzz).\n * - `long` should contain hour, minute, second, and zone (z)\n * - `medium` should contain hour, minute, second.\n * - `short` should contain hour, minute.\n *\n * Note: The patterns depend on whether the main country using your language uses 12-hour time or\n * not:\n * - For 12-hour time, use a pattern like `hh:mm a` using h to mean a 12-hour clock cycle running\n * 1 through 12 (midnight plus 1 minute is 12:01), or using K to mean a 12-hour clock cycle\n * running 0 through 11 (midnight plus 1 minute is 0:01).\n * - For 24-hour time, use a pattern like `HH:mm` using H to mean a 24-hour clock cycle running 0\n * through 23 (midnight plus 1 minute is 0:01), or using k to mean a 24-hour clock cycle running\n * 1 through 24 (midnight plus 1 minute is 24:01).\n *\n * @publicApi\n */\nexport function getLocaleTimeFormat(locale: string, width: FormatWidth): string {\n  const data = findLocaleData(locale);\n  return getLastDefinedValue(data[LocaleDataIndex.TimeFormat], width);\n}\n\n/**\n * Date-time format that depends on the locale.\n *\n * The date-time pattern shows how to combine separate patterns for date (represented by {1})\n * and time (represented by {0}) into a single pattern. It usually doesn't need to be changed.\n * What you want to pay attention to are:\n * - possibly removing a space for languages that don't use it, such as many East Asian languages\n * - possibly adding a comma, other punctuation, or a combining word\n *\n * For example:\n * - English uses `{1} 'at' {0}` or `{1}, {0}` (depending on date style), while Japanese uses\n *  `{1}{0}`.\n * - An English formatted date-time using the combining pattern `{1}, {0}` could be\n *  `Dec 10, 2010, 3:59:49 PM`. Notice the comma and space between the date portion and the time\n *  portion.\n *\n * There are four formats (`full`, `long`, `medium`, `short`); the determination of which to use\n * is normally based on the date style. For example, if the date has a full month and weekday\n * name, the full combining pattern will be used to combine that with a time. If the date has\n * numeric month, the short version of the combining pattern will be used to combine that with a\n * time. English uses `{1} 'at' {0}` for full and long styles, and `{1}, {0}` for medium and short\n * styles.\n *\n * @publicApi\n */\nexport function getLocaleDateTimeFormat(locale: string, width: FormatWidth): string {\n  const data = findLocaleData(locale);\n  const dateTimeFormatData = <string[]>data[LocaleDataIndex.DateTimeFormat];\n  return getLastDefinedValue(dateTimeFormatData, width);\n}\n\n/**\n * Number symbol that can be used to replace placeholders in number formats.\n * See {@link NumberSymbol} for more information.\n *\n * @publicApi\n */\nexport function getLocaleNumberSymbol(locale: string, symbol: NumberSymbol): string {\n  const data = findLocaleData(locale);\n  const res = data[LocaleDataIndex.NumberSymbols][symbol];\n  if (typeof res === 'undefined') {\n    if (symbol === NumberSymbol.CurrencyDecimal) {\n      return data[LocaleDataIndex.NumberSymbols][NumberSymbol.Decimal];\n    } else if (symbol === NumberSymbol.CurrencyGroup) {\n      return data[LocaleDataIndex.NumberSymbols][NumberSymbol.Group];\n    }\n  }\n  return res;\n}\n\n/**\n * Number format that depends on the locale.\n *\n * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`\n * when used to format the number 12345.678 could result in \"12'345,67\". That would happen if the\n * grouping separator for your language is an apostrophe, and the decimal separator is a comma.\n *\n * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders;\n * they stand for the decimal separator, and so on, and are NOT real characters.\n * You must NOT \"translate\" the placeholders; for example, don't change `.` to `,` even though in\n * your language the decimal point is written with a comma. The symbols should be replaced by the\n * local equivalents, using the Number Symbols for your language.\n *\n * Here are the special characters used in number patterns:\n *\n * | Symbol | Meaning |\n * |--------|---------|\n * | . | Replaced automatically by the character used for the decimal point. |\n * | , | Replaced by the \"grouping\" (thousands) separator. |\n * | 0 | Replaced by a digit (or zero if there aren't enough digits). |\n * | # | Replaced by a digit (or nothing if there aren't enough). |\n * | Â¤ | This will be replaced by a currency symbol, such as $ or USD. |\n * | % | This marks a percent format. The % symbol may change position, but must be retained. |\n * | E | This marks a scientific format. The E symbol may change position, but must be retained. |\n * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |\n *\n * You can find more information\n * [on the CLDR website](http://cldr.unicode.org/translation/number-patterns)\n *\n * @publicApi\n */\nexport function getLocaleNumberFormat(locale: string, type: NumberFormatStyle): string {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.NumberFormats][type];\n}\n\n/**\n * The symbol used to represent the currency for the main country using this locale (e.g. $ for\n * the locale en-US).\n * The symbol will be `null` if the main country cannot be determined.\n *\n * @publicApi\n */\nexport function getLocaleCurrencySymbol(locale: string): string|null {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.CurrencySymbol] || null;\n}\n\n/**\n * The name of the currency for the main country using this locale (e.g. 'US Dollar' for the locale\n * en-US).\n * The name will be `null` if the main country cannot be determined.\n *\n * @publicApi\n */\nexport function getLocaleCurrencyName(locale: string): string|null {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.CurrencyName] || null;\n}\n\n/**\n * Returns the currency values for the locale\n */\nfunction getLocaleCurrencies(locale: string): {[code: string]: CurrenciesSymbols} {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.Currencies];\n}\n\n/**\n * The locale plural function used by ICU expressions to determine the plural case to use.\n * See {@link NgPlural} for more information.\n *\n * @publicApi\n */\nexport function getLocalePluralCase(locale: string): (value: number) => Plural {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.PluralCase];\n}\n\nfunction checkFullData(data: any) {\n  if (!data[LocaleDataIndex.ExtraData]) {\n    throw new Error(\n        `Missing extra locale data for the locale \"${data[LocaleDataIndex.LocaleId]}\". Use \"registerLocaleData\" to load new data. See the \"I18n guide\" on angular.io to know more.`);\n  }\n}\n\n/**\n * Rules used to determine which day period to use (See `dayPeriods` below).\n * The rules can either be an array or a single value. If it's an array, consider it as \"from\"\n * and \"to\". If it's a single value then it means that the period is only valid at this exact\n * value.\n * There is always the same number of rules as the number of day periods, which means that the\n * first rule is applied to the first day period and so on.\n * You should fallback to AM/PM when there are no rules available.\n *\n * Note: this is only available if you load the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale\n * data.\n *\n * @publicApi\n */\nexport function getLocaleExtraDayPeriodRules(locale: string): (Time | [Time, Time])[] {\n  const data = findLocaleData(locale);\n  checkFullData(data);\n  const rules = data[LocaleDataIndex.ExtraData][ExtraLocaleDataIndex.ExtraDayPeriodsRules] || [];\n  return rules.map((rule: string | [string, string]) => {\n    if (typeof rule === 'string') {\n      return extractTime(rule);\n    }\n    return [extractTime(rule[0]), extractTime(rule[1])];\n  });\n}\n\n/**\n * Day Periods indicate roughly how the day is broken up in different languages (e.g. morning,\n * noon, afternoon, midnight, ...).\n * You should use the function {@link getLocaleExtraDayPeriodRules} to determine which period to\n * use.\n * You should fallback to AM/PM when there are no day periods available.\n *\n * Note: this is only available if you load the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale\n * data.\n *\n * @publicApi\n */\nexport function getLocaleExtraDayPeriods(\n    locale: string, formStyle: FormStyle, width: TranslationWidth): string[] {\n  const data = findLocaleData(locale);\n  checkFullData(data);\n  const dayPeriodsData = <string[][][]>[\n    data[LocaleDataIndex.ExtraData][ExtraLocaleDataIndex.ExtraDayPeriodFormats],\n    data[LocaleDataIndex.ExtraData][ExtraLocaleDataIndex.ExtraDayPeriodStandalone]\n  ];\n  const dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\n  return getLastDefinedValue(dayPeriods, width) || [];\n}\n\n/**\n * Returns the first value that is defined in an array, going backwards.\n *\n * To avoid repeating the same data (e.g. when \"format\" and \"standalone\" are the same) we only\n * add the first one to the locale data arrays, the other ones are only defined when different.\n * We use this function to retrieve the first defined value.\n *\n * @publicApi\n */\nfunction getLastDefinedValue<T>(data: T[], index: number): T {\n  for (let i = index; i > -1; i--) {\n    if (typeof data[i] !== 'undefined') {\n      return data[i];\n    }\n  }\n  throw new Error('Locale data API: locale data undefined');\n}\n\n/**\n * A representation of the time with hours and minutes\n *\n * @publicApi\n */\nexport type Time = {\n  hours: number,\n  minutes: number\n};\n\n/**\n * Extract the hours and minutes from a string like \"15:45\"\n */\nfunction extractTime(time: string): Time {\n  const [h, m] = time.split(':');\n  return {hours: +h, minutes: +m};\n}\n\n/**\n * Finds the locale data for a locale id\n *\n * @publicApi\n */\nexport function findLocaleData(locale: string): any {\n  const normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n\n  let match = LOCALE_DATA[normalizedLocale];\n  if (match) {\n    return match;\n  }\n\n  // let's try to find a parent locale\n  const parentLocale = normalizedLocale.split('-')[0];\n  match = LOCALE_DATA[parentLocale];\n\n  if (match) {\n    return match;\n  }\n\n  if (parentLocale === 'en') {\n    return localeEn;\n  }\n\n  throw new Error(`Missing locale data for the locale \"${locale}\".`);\n}\n\n/**\n * Returns the currency symbol for a given currency code, or the code if no symbol available\n * (e.g.: format narrow = $, format wide = US$, code = USD)\n * If no locale is provided, it uses the locale \"en\" by default\n *\n * @publicApi\n */\nexport function getCurrencySymbol(code: string, format: 'wide' | 'narrow', locale = 'en'): string {\n  const currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];\n  const symbolNarrow = currency[CurrencyIndex.SymbolNarrow];\n\n  if (format === 'narrow' && typeof symbolNarrow === 'string') {\n    return symbolNarrow;\n  }\n\n  return currency[CurrencyIndex.Symbol] || code;\n}\n\n// Most currencies have cents, that's why the default is 2\nconst DEFAULT_NB_OF_CURRENCY_DIGITS = 2;\n\n/**\n * Returns the number of decimal digits for the given currency.\n * Its value depends upon the presence of cents in that particular currency.\n *\n * @publicApi\n */\nexport function getNumberOfCurrencyDigits(code: string): number {\n  let digits;\n  const currency = CURRENCIES_EN[code];\n  if (currency) {\n    digits = currency[CurrencyIndex.NbOfDigits];\n  }\n  return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {COMMON_DIRECTIVES} from './directives/index';\nimport {DEPRECATED_PLURAL_FN, NgLocaleLocalization, NgLocalization, getPluralCase} from './i18n/localization';\nimport {COMMON_DEPRECATED_I18N_PIPES} from './pipes/deprecated/index';\nimport {COMMON_PIPES} from './pipes/index';\n\n\n// Note: This does not contain the location providers,\n// as they need some platform specific implementations to work.\n/**\n * Exports all the basic Angular directives and pipes,\n * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * * The `providers` options configure the NgModule's injector to provide\n * localization dependencies to members.\n * * The `exports` options make the declared directives and pipes available for import\n * by other NgModules.\n *\n * @publicApi\n */\n@NgModule({\n  declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n  exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n  providers: [\n    {provide: NgLocalization, useClass: NgLocaleLocalization},\n  ],\n})\nexport class CommonModule {\n}\n\n/**\n * A module that contains the deprecated i18n pipes.\n *\n * @deprecated from v5\n * @publicApi\n */\n@NgModule({\n  declarations: [COMMON_DEPRECATED_I18N_PIPES],\n  exports: [COMMON_DEPRECATED_I18N_PIPES],\n  providers: [{provide: DEPRECATED_PLURAL_FN, useValue: getPluralCase}],\n})\nexport class DeprecatedI18NPipesModule {\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @publicApi\n */\nexport const DOCUMENT = new InjectionToken<Document>('DocumentToken');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const PLATFORM_BROWSER_ID = 'browser';\nexport const PLATFORM_SERVER_ID = 'server';\nexport const PLATFORM_WORKER_APP_ID = 'browserWorkerApp';\nexport const PLATFORM_WORKER_UI_ID = 'browserWorkerUi';\n\n/**\n * Returns whether a platform id represents a browser platform.\n * @publicApi\n */\nexport function isPlatformBrowser(platformId: Object): boolean {\n  return platformId === PLATFORM_BROWSER_ID;\n}\n\n/**\n * Returns whether a platform id represents a server platform.\n * @publicApi\n */\nexport function isPlatformServer(platformId: Object): boolean {\n  return platformId === PLATFORM_SERVER_ID;\n}\n\n/**\n * Returns whether a platform id represents a web worker app platform.\n * @publicApi\n */\nexport function isPlatformWorkerApp(platformId: Object): boolean {\n  return platformId === PLATFORM_WORKER_APP_ID;\n}\n\n/**\n * Returns whether a platform id represents a web worker UI platform.\n * @publicApi\n */\nexport function isPlatformWorkerUi(platformId: Object): boolean {\n  return platformId === PLATFORM_WORKER_UI_ID;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '@angular/core';\n\nlet _DOM: DomAdapter = null !;\n\nexport function getDOM() {\n  return _DOM;\n}\n\nexport function setDOM(adapter: DomAdapter) {\n  _DOM = adapter;\n}\n\nexport function setRootDomAdapter(adapter: DomAdapter) {\n  if (!_DOM) {\n    _DOM = adapter;\n  }\n}\n\n/* tslint:disable:requireParameterType */\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport abstract class DomAdapter {\n  public resourceLoaderType: Type<any> = null !;\n  abstract hasProperty(element: any, name: string): boolean;\n  abstract setProperty(el: Element, name: string, value: any): any;\n  abstract getProperty(el: Element, name: string): any;\n  abstract invoke(el: Element, methodName: string, args: any[]): any;\n\n  abstract logError(error: any): any;\n  abstract log(error: any): any;\n  abstract logGroup(error: any): any;\n  abstract logGroupEnd(): any;\n\n  /**\n   * Maps attribute names to their corresponding property names for cases\n   * where attribute name doesn't match property name.\n   */\n  get attrToPropMap(): {[key: string]: string} { return this._attrToPropMap; }\n  set attrToPropMap(value: {[key: string]: string}) { this._attrToPropMap = value; }\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _attrToPropMap !: {[key: string]: string};\n\n  abstract contains(nodeA: any, nodeB: any): boolean;\n  abstract parse(templateHtml: string): any;\n  abstract querySelector(el: any, selector: string): any;\n  abstract querySelectorAll(el: any, selector: string): any[];\n  abstract on(el: any, evt: any, listener: any): any;\n  abstract onAndCancel(el: any, evt: any, listener: any): Function;\n  abstract dispatchEvent(el: any, evt: any): any;\n  abstract createMouseEvent(eventType: any): any;\n  abstract createEvent(eventType: string): any;\n  abstract preventDefault(evt: any): any;\n  abstract isPrevented(evt: any): boolean;\n  abstract getInnerHTML(el: any): string;\n  /** Returns content if el is a <template> element, null otherwise. */\n  abstract getTemplateContent(el: any): any;\n  abstract getOuterHTML(el: any): string;\n  abstract nodeName(node: any): string;\n  abstract nodeValue(node: any): string|null;\n  abstract type(node: any): string;\n  abstract content(node: any): any;\n  abstract firstChild(el: any): Node|null;\n  abstract nextSibling(el: any): Node|null;\n  abstract parentElement(el: any): Node|null;\n  abstract childNodes(el: any): Node[];\n  abstract childNodesAsList(el: any): Node[];\n  abstract clearNodes(el: any): any;\n  abstract appendChild(el: any, node: any): any;\n  abstract removeChild(el: any, node: any): any;\n  abstract replaceChild(el: any, newNode: any, oldNode: any): any;\n  abstract remove(el: any): Node;\n  abstract insertBefore(parent: any, ref: any, node: any): any;\n  abstract insertAllBefore(parent: any, ref: any, nodes: any): any;\n  abstract insertAfter(parent: any, el: any, node: any): any;\n  abstract setInnerHTML(el: any, value: any): any;\n  abstract getText(el: any): string|null;\n  abstract setText(el: any, value: string): any;\n  abstract getValue(el: any): string;\n  abstract setValue(el: any, value: string): any;\n  abstract getChecked(el: any): boolean;\n  abstract setChecked(el: any, value: boolean): any;\n  abstract createComment(text: string): any;\n  abstract createTemplate(html: any): HTMLElement;\n  abstract createElement(tagName: any, doc?: any): HTMLElement;\n  abstract createElementNS(ns: string, tagName: string, doc?: any): Element;\n  abstract createTextNode(text: string, doc?: any): Text;\n  abstract createScriptTag(attrName: string, attrValue: string, doc?: any): HTMLElement;\n  abstract createStyleElement(css: string, doc?: any): HTMLStyleElement;\n  abstract createShadowRoot(el: any): any;\n  abstract getShadowRoot(el: any): any;\n  abstract getHost(el: any): any;\n  abstract getDistributedNodes(el: any): Node[];\n  abstract clone /*<T extends Node>*/ (node: Node /*T*/): Node /*T*/;\n  abstract getElementsByClassName(element: any, name: string): HTMLElement[];\n  abstract getElementsByTagName(element: any, name: string): HTMLElement[];\n  abstract classList(element: any): any[];\n  abstract addClass(element: any, className: string): any;\n  abstract removeClass(element: any, className: string): any;\n  abstract hasClass(element: any, className: string): boolean;\n  abstract setStyle(element: any, styleName: string, styleValue: string): any;\n  abstract removeStyle(element: any, styleName: string): any;\n  abstract getStyle(element: any, styleName: string): string;\n  abstract hasStyle(element: any, styleName: string, styleValue?: string): boolean;\n  abstract tagName(element: any): string;\n  abstract attributeMap(element: any): Map<string, string>;\n  abstract hasAttribute(element: any, attribute: string): boolean;\n  abstract hasAttributeNS(element: any, ns: string, attribute: string): boolean;\n  abstract getAttribute(element: any, attribute: string): string|null;\n  abstract getAttributeNS(element: any, ns: string, attribute: string): string|null;\n  abstract setAttribute(element: any, name: string, value: string): any;\n  abstract setAttributeNS(element: any, ns: string, name: string, value: string): any;\n  abstract removeAttribute(element: any, attribute: string): any;\n  abstract removeAttributeNS(element: any, ns: string, attribute: string): any;\n  abstract templateAwareRoot(el: any): any;\n  abstract createHtmlDocument(): HTMLDocument;\n  abstract getDefaultDocument(): Document;\n  abstract getBoundingClientRect(el: any): any;\n  abstract getTitle(doc: Document): string;\n  abstract setTitle(doc: Document, newTitle: string): any;\n  abstract elementMatches(n: any, selector: string): boolean;\n  abstract isTemplateElement(el: any): boolean;\n  abstract isTextNode(node: any): boolean;\n  abstract isCommentNode(node: any): boolean;\n  abstract isElementNode(node: any): boolean;\n  abstract hasShadowRoot(node: any): boolean;\n  abstract isShadowRoot(node: any): boolean;\n  abstract importIntoDoc /*<T extends Node>*/ (node: Node /*T*/): Node /*T*/;\n  abstract adoptNode /*<T extends Node>*/ (node: Node /*T*/): Node /*T*/;\n  abstract getHref(element: any): string;\n  abstract getEventKey(event: any): string;\n  abstract resolveAndSetHref(element: any, baseUrl: string, href: string): any;\n  abstract supportsDOMEvents(): boolean;\n  abstract supportsNativeShadowDOM(): boolean;\n  abstract getGlobalEventTarget(doc: Document, target: string): any;\n  abstract getHistory(): History;\n  abstract getLocation(): Location;\n  abstract getBaseHref(doc: Document): string|null;\n  abstract resetBaseElement(): void;\n  abstract getUserAgent(): string;\n  abstract setData(element: any, name: string, value: string): any;\n  abstract getComputedStyle(element: any): any;\n  abstract getData(element: any, name: string): string|null;\n  abstract supportsWebAnimation(): boolean;\n  abstract performanceNow(): number;\n  abstract getAnimationPrefix(): string;\n  abstract getTransitionEnd(): string;\n  abstract supportsAnimation(): boolean;\n\n  abstract supportsCookies(): boolean;\n  abstract getCookie(name: string): string|null;\n  abstract setCookie(name: string, value: string): any;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ÉµparseCookieValue as parseCookieValue} from '@angular/common';\nimport {Éµglobal as global} from '@angular/core';\n\nimport {setRootDomAdapter} from '../dom/dom_adapter';\n\nimport {GenericBrowserDomAdapter} from './generic_browser_adapter';\n\nconst _attrToPropMap = {\n  'class': 'className',\n  'innerHtml': 'innerHTML',\n  'readonly': 'readOnly',\n  'tabindex': 'tabIndex',\n};\n\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap: {[k: string]: string} = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\nlet nodeContains: (a: any, b: any) => boolean;\n\nif (global['Node']) {\n  nodeContains = global['Node'].prototype.contains || function(node) {\n    return !!(this.compareDocumentPosition(node) & 16);\n  };\n}\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nexport class BrowserDomAdapter extends GenericBrowserDomAdapter {\n  parse(templateHtml: string) { throw new Error('parse not implemented'); }\n  static makeCurrent() { setRootDomAdapter(new BrowserDomAdapter()); }\n  hasProperty(element: Node, name: string): boolean { return name in element; }\n  setProperty(el: Node, name: string, value: any) { (<any>el)[name] = value; }\n  getProperty(el: Node, name: string): any { return (<any>el)[name]; }\n  invoke(el: Node, methodName: string, args: any[]): any { (<any>el)[methodName](...args); }\n\n  // TODO(tbosch): move this into a separate environment class once we have it\n  logError(error: string): void {\n    if (window.console) {\n      if (console.error) {\n        console.error(error);\n      } else {\n        console.log(error);\n      }\n    }\n  }\n\n  log(error: string): void {\n    if (window.console) {\n      window.console.log && window.console.log(error);\n    }\n  }\n\n  logGroup(error: string): void {\n    if (window.console) {\n      window.console.group && window.console.group(error);\n    }\n  }\n\n  logGroupEnd(): void {\n    if (window.console) {\n      window.console.groupEnd && window.console.groupEnd();\n    }\n  }\n\n  get attrToPropMap(): any { return _attrToPropMap; }\n\n  contains(nodeA: any, nodeB: any): boolean { return nodeContains.call(nodeA, nodeB); }\n  querySelector(el: HTMLElement, selector: string): any { return el.querySelector(selector); }\n  querySelectorAll(el: any, selector: string): any[] { return el.querySelectorAll(selector); }\n  on(el: Node, evt: any, listener: any) { el.addEventListener(evt, listener, false); }\n  onAndCancel(el: Node, evt: any, listener: any): Function {\n    el.addEventListener(evt, listener, false);\n    // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n    return () => { el.removeEventListener(evt, listener, false); };\n  }\n  dispatchEvent(el: Node, evt: any) { el.dispatchEvent(evt); }\n  createMouseEvent(eventType: string): MouseEvent {\n    const evt: MouseEvent = this.getDefaultDocument().createEvent('MouseEvent');\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n  createEvent(eventType: any): Event {\n    const evt: Event = this.getDefaultDocument().createEvent('Event');\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n  preventDefault(evt: Event) {\n    evt.preventDefault();\n    evt.returnValue = false;\n  }\n  isPrevented(evt: Event): boolean {\n    return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\n  }\n  getInnerHTML(el: HTMLElement): string { return el.innerHTML; }\n  getTemplateContent(el: Node): Node|null {\n    return 'content' in el && this.isTemplateElement(el) ? (<any>el).content : null;\n  }\n  getOuterHTML(el: HTMLElement): string { return el.outerHTML; }\n  nodeName(node: Node): string { return node.nodeName; }\n  nodeValue(node: Node): string|null { return node.nodeValue; }\n  type(node: HTMLInputElement): string { return node.type; }\n  content(node: Node): Node {\n    if (this.hasProperty(node, 'content')) {\n      return (<any>node).content;\n    } else {\n      return node;\n    }\n  }\n  firstChild(el: Node): Node|null { return el.firstChild; }\n  nextSibling(el: Node): Node|null { return el.nextSibling; }\n  parentElement(el: Node): Node|null { return el.parentNode; }\n  childNodes(el: any): Node[] { return el.childNodes; }\n  childNodesAsList(el: Node): any[] {\n    const childNodes = el.childNodes;\n    const res = new Array(childNodes.length);\n    for (let i = 0; i < childNodes.length; i++) {\n      res[i] = childNodes[i];\n    }\n    return res;\n  }\n  clearNodes(el: Node) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n  }\n  appendChild(el: Node, node: Node) { el.appendChild(node); }\n  removeChild(el: Node, node: Node) { el.removeChild(node); }\n  replaceChild(el: Node, newChild: Node, oldChild: Node) { el.replaceChild(newChild, oldChild); }\n  remove(node: Node): Node {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n    return node;\n  }\n  insertBefore(parent: Node, ref: Node, node: Node) { parent.insertBefore(node, ref); }\n  insertAllBefore(parent: Node, ref: Node, nodes: Node[]) {\n    nodes.forEach((n: any) => parent.insertBefore(n, ref));\n  }\n  insertAfter(parent: Node, ref: Node, node: any) { parent.insertBefore(node, ref.nextSibling); }\n  setInnerHTML(el: Element, value: string) { el.innerHTML = value; }\n  getText(el: Node): string|null { return el.textContent; }\n  setText(el: Node, value: string) { el.textContent = value; }\n  getValue(el: any): string { return el.value; }\n  setValue(el: any, value: string) { el.value = value; }\n  getChecked(el: any): boolean { return el.checked; }\n  setChecked(el: any, value: boolean) { el.checked = value; }\n  createComment(text: string): Comment { return this.getDefaultDocument().createComment(text); }\n  createTemplate(html: any): HTMLElement {\n    const t = this.getDefaultDocument().createElement('template');\n    t.innerHTML = html;\n    return t;\n  }\n  createElement(tagName: string, doc?: Document): HTMLElement {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createElementNS(ns: string, tagName: string, doc?: Document): Element {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElementNS(ns, tagName);\n  }\n  createTextNode(text: string, doc?: Document): Text {\n    doc = doc || this.getDefaultDocument();\n    return doc.createTextNode(text);\n  }\n  createScriptTag(attrName: string, attrValue: string, doc?: Document): HTMLScriptElement {\n    doc = doc || this.getDefaultDocument();\n    const el = <HTMLScriptElement>doc.createElement('SCRIPT');\n    el.setAttribute(attrName, attrValue);\n    return el;\n  }\n  createStyleElement(css: string, doc?: Document): HTMLStyleElement {\n    doc = doc || this.getDefaultDocument();\n    const style = <HTMLStyleElement>doc.createElement('style');\n    this.appendChild(style, this.createTextNode(css, doc));\n    return style;\n  }\n  createShadowRoot(el: HTMLElement): DocumentFragment { return (<any>el).createShadowRoot(); }\n  getShadowRoot(el: HTMLElement): DocumentFragment { return (<any>el).shadowRoot; }\n  getHost(el: HTMLElement): HTMLElement { return (<any>el).host; }\n  clone(node: Node): Node { return node.cloneNode(true); }\n  getElementsByClassName(element: any, name: string): HTMLElement[] {\n    return element.getElementsByClassName(name);\n  }\n  getElementsByTagName(element: any, name: string): HTMLElement[] {\n    return element.getElementsByTagName(name);\n  }\n  classList(element: any): any[] { return Array.prototype.slice.call(element.classList, 0); }\n  addClass(element: any, className: string) { element.classList.add(className); }\n  removeClass(element: any, className: string) { element.classList.remove(className); }\n  hasClass(element: any, className: string): boolean {\n    return element.classList.contains(className);\n  }\n  setStyle(element: any, styleName: string, styleValue: string) {\n    element.style[styleName] = styleValue;\n  }\n  removeStyle(element: any, stylename: string) {\n    // IE requires '' instead of null\n    // see https://github.com/angular/angular/issues/7916\n    element.style[stylename] = '';\n  }\n  getStyle(element: any, stylename: string): string { return element.style[stylename]; }\n  hasStyle(element: any, styleName: string, styleValue?: string|null): boolean {\n    const value = this.getStyle(element, styleName) || '';\n    return styleValue ? value == styleValue : value.length > 0;\n  }\n  tagName(element: any): string { return element.tagName; }\n  attributeMap(element: any): Map<string, string> {\n    const res = new Map<string, string>();\n    const elAttrs = element.attributes;\n    for (let i = 0; i < elAttrs.length; i++) {\n      const attrib = elAttrs.item(i);\n      res.set(attrib.name, attrib.value);\n    }\n    return res;\n  }\n  hasAttribute(element: Element, attribute: string): boolean {\n    return element.hasAttribute(attribute);\n  }\n  hasAttributeNS(element: Element, ns: string, attribute: string): boolean {\n    return element.hasAttributeNS(ns, attribute);\n  }\n  getAttribute(element: Element, attribute: string): string|null {\n    return element.getAttribute(attribute);\n  }\n  getAttributeNS(element: Element, ns: string, name: string): string|null {\n    return element.getAttributeNS(ns, name);\n  }\n  setAttribute(element: Element, name: string, value: string) { element.setAttribute(name, value); }\n  setAttributeNS(element: Element, ns: string, name: string, value: string) {\n    element.setAttributeNS(ns, name, value);\n  }\n  removeAttribute(element: Element, attribute: string) { element.removeAttribute(attribute); }\n  removeAttributeNS(element: Element, ns: string, name: string) {\n    element.removeAttributeNS(ns, name);\n  }\n  templateAwareRoot(el: Node): any { return this.isTemplateElement(el) ? this.content(el) : el; }\n  createHtmlDocument(): HTMLDocument {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument(): Document { return document; }\n  getBoundingClientRect(el: Element): any {\n    try {\n      return el.getBoundingClientRect();\n    } catch {\n      return {top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0};\n    }\n  }\n  getTitle(doc: Document): string { return doc.title; }\n  setTitle(doc: Document, newTitle: string) { doc.title = newTitle || ''; }\n  elementMatches(n: any, selector: string): boolean {\n    if (this.isElementNode(n)) {\n      return n.matches && n.matches(selector) ||\n          n.msMatchesSelector && n.msMatchesSelector(selector) ||\n          n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n\n    return false;\n  }\n  isTemplateElement(el: Node): boolean {\n    return this.isElementNode(el) && el.nodeName === 'TEMPLATE';\n  }\n  isTextNode(node: Node): boolean { return node.nodeType === Node.TEXT_NODE; }\n  isCommentNode(node: Node): boolean { return node.nodeType === Node.COMMENT_NODE; }\n  isElementNode(node: Node): boolean { return node.nodeType === Node.ELEMENT_NODE; }\n  hasShadowRoot(node: any): boolean {\n    return node.shadowRoot != null && node instanceof HTMLElement;\n  }\n  isShadowRoot(node: any): boolean { return node instanceof DocumentFragment; }\n  importIntoDoc(node: Node): any { return document.importNode(this.templateAwareRoot(node), true); }\n  adoptNode(node: Node): any { return document.adoptNode(node); }\n  getHref(el: Element): string { return el.getAttribute('href') !; }\n\n  getEventKey(event: any): string {\n    let key = event.key;\n    if (key == null) {\n      key = event.keyIdentifier;\n      // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n      // Safari cf\n      // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n      if (key == null) {\n        return 'Unidentified';\n      }\n      if (key.startsWith('U+')) {\n        key = String.fromCharCode(parseInt(key.substring(2), 16));\n        if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n          // There is a bug in Chrome for numeric keypad keys:\n          // https://code.google.com/p/chromium/issues/detail?id=155654\n          // 1, 2, 3 ... are reported as A, B, C ...\n          key = (_chromeNumKeyPadMap as any)[key];\n        }\n      }\n    }\n\n    return _keyMap[key] || key;\n  }\n  getGlobalEventTarget(doc: Document, target: string): EventTarget|null {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getHistory(): History { return window.history; }\n  getLocation(): Location { return window.location; }\n  getBaseHref(doc: Document): string|null {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement(): void { baseElement = null; }\n  getUserAgent(): string { return window.navigator.userAgent; }\n  setData(element: Element, name: string, value: string) {\n    this.setAttribute(element, 'data-' + name, value);\n  }\n  getData(element: Element, name: string): string|null {\n    return this.getAttribute(element, 'data-' + name);\n  }\n  getComputedStyle(element: any): any { return getComputedStyle(element); }\n  // TODO(tbosch): move this into a separate environment class once we have it\n  supportsWebAnimation(): boolean {\n    return typeof(<any>Element).prototype['animate'] === 'function';\n  }\n  performanceNow(): number {\n    // performance.now() is not available in all browsers, see\n    // http://caniuse.com/#search=performance.now\n    return window.performance && window.performance.now ? window.performance.now() :\n                                                          new Date().getTime();\n  }\n\n  supportsCookies(): boolean { return true; }\n\n  getCookie(name: string): string|null { return parseCookieValue(document.cookie, name); }\n\n  setCookie(name: string, value: string) {\n    // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n    // not clear other cookies.\n    document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n  }\n}\n\nlet baseElement: HTMLElement|null = null;\nfunction getBaseElementHref(): string|null {\n  if (!baseElement) {\n    baseElement = document.querySelector('base') !;\n    if (!baseElement) {\n      return null;\n    }\n  }\n  return baseElement.getAttribute('href');\n}\n\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode: any;\nfunction relativePath(url: any): string {\n  if (!urlParsingNode) {\n    urlParsingNode = document.createElement('a');\n  }\n  urlParsingNode.setAttribute('href', url);\n  return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n                                                       '/' + urlParsingNode.pathname;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function parseCookieValue(cookieStr: string, name: string): string|null {\n  name = encodeURIComponent(name);\n  for (const cookie of cookieStr.split(';')) {\n    const eqIndex = cookie.indexOf('=');\n    const [cookieName, cookieValue]: string[] =\n        eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)];\n    if (cookieName.trim() === name) {\n      return decodeURIComponent(cookieValue);\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DomAdapter} from '../dom/dom_adapter';\n\n\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport abstract class GenericBrowserDomAdapter extends DomAdapter {\n  private _animationPrefix: string|null = null;\n  private _transitionEnd: string|null = null;\n  constructor() {\n    super();\n    try {\n      const element = this.createElement('div', document);\n      if (this.getStyle(element, 'animationName') != null) {\n        this._animationPrefix = '';\n      } else {\n        const domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n\n        for (let i = 0; i < domPrefixes.length; i++) {\n          if (this.getStyle(element, domPrefixes[i] + 'AnimationName') != null) {\n            this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n            break;\n          }\n        }\n      }\n\n      const transEndEventNames: {[key: string]: string} = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend'\n      };\n\n      Object.keys(transEndEventNames).forEach((key: string) => {\n        if (this.getStyle(element, key) != null) {\n          this._transitionEnd = transEndEventNames[key];\n        }\n      });\n    } catch {\n      this._animationPrefix = null;\n      this._transitionEnd = null;\n    }\n  }\n\n  getDistributedNodes(el: HTMLElement): Node[] { return (<any>el).getDistributedNodes(); }\n  resolveAndSetHref(el: HTMLAnchorElement, baseUrl: string, href: string) {\n    el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n  }\n  supportsDOMEvents(): boolean { return true; }\n  supportsNativeShadowDOM(): boolean {\n    return typeof(<any>document.body).createShadowRoot === 'function';\n  }\n  getAnimationPrefix(): string { return this._animationPrefix ? this._animationPrefix : ''; }\n  getTransitionEnd(): string { return this._transitionEnd ? this._transitionEnd : ''; }\n  supportsAnimation(): boolean {\n    return this._animationPrefix != null && this._transitionEnd != null;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT as commonDOCUMENT} from '@angular/common';\nimport {InjectionToken} from '@angular/core';\n\n\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @deprecated import from `@angular/common` instead.\n * @publicApi\n */\nexport const DOCUMENT = commonDOCUMENT;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function supportsState(): boolean {\n  return !!window.history.pushState;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nimport {getDOM} from '../../dom/dom_adapter';\nimport {DOCUMENT} from '../../dom/dom_tokens';\n\nimport {supportsState} from './history';\n\n\n\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n */\n@Injectable()\nexport class BrowserPlatformLocation extends PlatformLocation {\n  // TODO(issue/24571): remove '!'.\n  public readonly location !: Location;\n  // TODO(issue/24571): remove '!'.\n  private _history !: History;\n\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._init();\n  }\n\n  // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n  /** @internal */\n  _init() {\n    (this as{location: Location}).location = getDOM().getLocation();\n    this._history = getDOM().getHistory();\n  }\n\n  getBaseHrefFromDOM(): string { return getDOM().getBaseHref(this._doc) !; }\n\n  onPopState(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n  }\n\n  onHashChange(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n  }\n\n  get pathname(): string { return this.location.pathname; }\n  get search(): string { return this.location.search; }\n  get hash(): string { return this.location.hash; }\n  set pathname(newPath: string) { this.location.pathname = newPath; }\n\n  pushState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.pushState(state, title, url);\n    } else {\n      this.location.hash = url;\n    }\n  }\n\n  replaceState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.replaceState(state, title, url);\n    } else {\n      this.location.hash = url;\n    }\n  }\n\n  forward(): void { this._history.forward(); }\n\n  back(): void { this._history.back(); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_INITIALIZER, ApplicationInitStatus, Inject, InjectionToken, Injector, StaticProvider} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\nimport {DOCUMENT} from '../dom/dom_tokens';\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nexport const TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n\nexport function appInitializerFactory(transitionId: string, document: any, injector: Injector) {\n  return () => {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(() => {\n      const dom = getDOM();\n      const styles: any[] =\n          Array.prototype.slice.apply(dom.querySelectorAll(document, `style[ng-transition]`));\n      styles.filter(el => dom.getAttribute(el, 'ng-transition') === transitionId)\n          .forEach(el => dom.remove(el));\n    });\n  };\n}\n\nexport const SERVER_TRANSITION_PROVIDERS: StaticProvider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: appInitializerFactory,\n    deps: [TRANSITION_ID, DOCUMENT, Injector],\n    multi: true\n  },\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {GetTestability, Testability, TestabilityRegistry, setTestabilityGetter, Éµglobal as global} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\n\nexport class BrowserGetTestability implements GetTestability {\n  static init() { setTestabilityGetter(new BrowserGetTestability()); }\n\n  addToWindow(registry: TestabilityRegistry): void {\n    global['getAngularTestability'] = (elem: any, findInAncestors: boolean = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return testability;\n    };\n\n    global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const whenAllStable = (callback: any /** TODO #9100 */) => {\n      const testabilities = global['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      let didWork = false;\n      const decrement = function(didWork_: any /** TODO #9100 */) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach(function(testability: any /** TODO #9100 */) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!global['frameworkStabilizers']) {\n      global['frameworkStabilizers'] = [];\n    }\n    global['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (getDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n    }\n    return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Éµglobal as global} from '@angular/core';\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\n\n\nexport function camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: string[]) => '-' + m[1].toLowerCase());\n}\n\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: string[]) => m[1].toUpperCase());\n}\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nexport function exportNgVar(name: string, value: any): void {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = global['ng'] = (global['ng'] as{[key: string]: any} | undefined) || {};\n    ng[name] = value;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as core from '@angular/core';\nimport {exportNgVar} from '../util';\n\nconst CORE_TOKENS = {\n  'ApplicationRef': core.ApplicationRef,\n  'NgZone': core.NgZone,\n};\n\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nexport function inspectNativeElement(element: any): core.DebugNode|null {\n  return core.getDebugNode(element);\n}\n\nexport function _createNgProbe(coreTokens: core.NgProbeToken[]): any {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, {...CORE_TOKENS, ..._ngProbeTokensToMap(coreTokens || [])});\n  return () => inspectNativeElement;\n}\n\nfunction _ngProbeTokensToMap(tokens: core.NgProbeToken[]): {[name: string]: any} {\n  return tokens.reduce((prev: any, t: any) => (prev[t.name] = t.token, prev), {});\n}\n\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const ELEMENT_PROBE_PROVIDERS: core.Provider[] = [\n  {\n    provide: core.APP_INITIALIZER,\n    useFactory: _createNgProbe,\n    deps: [\n      [core.NgProbeToken, new core.Optional()],\n    ],\n    multi: true,\n  },\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, InjectionToken, NgZone} from '@angular/core';\n\nimport {getDOM} from '../dom_adapter';\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nexport const EVENT_MANAGER_PLUGINS =\n    new InjectionToken<EventManagerPlugin[]>('EventManagerPlugins');\n\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n@Injectable()\nexport class EventManager {\n  private _plugins: EventManagerPlugin[];\n  private _eventNameToPlugin = new Map<string, EventManagerPlugin>();\n\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(@Inject(EVENT_MANAGER_PLUGINS) plugins: EventManagerPlugin[], private _zone: NgZone) {\n    plugins.forEach(p => p.manager = this);\n    this._plugins = plugins.slice().reverse();\n  }\n\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n\n  /**\n   * Registers a global handler for an event in a target view.\n   *\n   * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns A callback function that can be used to remove the handler.\n   */\n  addGlobalEventListener(target: string, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n  getZone(): NgZone { return this._zone; }\n\n  /** @internal */\n  _findPluginFor(eventName: string): EventManagerPlugin {\n    const plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n\n    const plugins = this._plugins;\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n      if (plugin.supports(eventName)) {\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n      }\n    }\n    throw new Error(`No event manager plugin found for event ${eventName}`);\n  }\n}\n\nexport abstract class EventManagerPlugin {\n  constructor(private _doc: any) {}\n\n  // TODO(issue/24571): remove '!'.\n  manager !: EventManager;\n\n  abstract supports(eventName: string): boolean;\n\n  abstract addEventListener(element: HTMLElement, eventName: string, handler: Function): Function;\n\n  addGlobalEventListener(element: string, eventName: string, handler: Function): Function {\n    const target: HTMLElement = getDOM().getGlobalEventTarget(this._doc, element);\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n    return this.addEventListener(target, eventName, handler);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {getDOM} from './dom_adapter';\nimport {DOCUMENT} from './dom_tokens';\n\n@Injectable()\nexport class SharedStylesHost {\n  /** @internal */\n  protected _stylesSet = new Set<string>();\n\n  addStyles(styles: string[]): void {\n    const additions = new Set<string>();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n\n  onStylesAdded(additions: Set<string>): void {}\n\n  getAllStyles(): string[] { return Array.from(this._stylesSet); }\n}\n\n@Injectable()\nexport class DomSharedStylesHost extends SharedStylesHost implements OnDestroy {\n  private _hostNodes = new Set<Node>();\n  private _styleNodes = new Set<Node>();\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._hostNodes.add(_doc.head);\n  }\n\n  private _addStylesToHost(styles: Set<string>, host: Node): void {\n    styles.forEach((style: string) => {\n      const styleEl = this._doc.createElement('style');\n      styleEl.textContent = style;\n      this._styleNodes.add(host.appendChild(styleEl));\n    });\n  }\n\n  addHost(hostNode: Node): void {\n    this._addStylesToHost(this._stylesSet, hostNode);\n    this._hostNodes.add(hostNode);\n  }\n\n  removeHost(hostNode: Node): void { this._hostNodes.delete(hostNode); }\n\n  onStylesAdded(additions: Set<string>): void {\n    this._hostNodes.forEach(hostNode => this._addStylesToHost(additions, hostNode));\n  }\n\n  ngOnDestroy(): void { this._styleNodes.forEach(styleNode => getDOM().remove(styleNode)); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, ViewEncapsulation} from '@angular/core';\n\nimport {EventManager} from './events/event_manager';\nimport {DomSharedStylesHost} from './shared_styles_host';\n\nexport const NAMESPACE_URIS: {[ns: string]: string} = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\n\nconst COMPONENT_REGEX = /%COMP%/g;\nexport const COMPONENT_VARIABLE = '%COMP%';\nexport const HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\nexport function shimContentAttribute(componentShortId: string): string {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function shimHostAttribute(componentShortId: string): string {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function flattenStyles(\n    compId: string, styles: Array<any|any[]>, target: string[]): string[] {\n  for (let i = 0; i < styles.length; i++) {\n    let style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n  return target;\n}\n\nfunction decoratePreventDefault(eventHandler: Function): Function {\n  return (event: any) => {\n    const allowDefaultBehavior = eventHandler(event);\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n  };\n}\n\n@Injectable()\nexport class DomRendererFactory2 implements RendererFactory2 {\n  private rendererByCompId = new Map<string, Renderer2>();\n  private defaultRenderer: Renderer2;\n\n  constructor(private eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost) {\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n\n  createRenderer(element: any, type: RendererType2|null): Renderer2 {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated: {\n        let renderer = this.rendererByCompId.get(type.id);\n        if (!renderer) {\n          renderer =\n              new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type);\n          this.rendererByCompId.set(type.id, renderer);\n        }\n        (<EmulatedEncapsulationDomRenderer2>renderer).applyToHost(element);\n        return renderer;\n      }\n      case ViewEncapsulation.Native:\n      case ViewEncapsulation.ShadowDom:\n        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n      default: {\n        if (!this.rendererByCompId.has(type.id)) {\n          const styles = flattenStyles(type.id, type.styles, []);\n          this.sharedStylesHost.addStyles(styles);\n          this.rendererByCompId.set(type.id, this.defaultRenderer);\n        }\n        return this.defaultRenderer;\n      }\n    }\n  }\n\n  begin() {}\n  end() {}\n}\n\nclass DefaultDomRenderer2 implements Renderer2 {\n  data: {[key: string]: any} = Object.create(null);\n\n  constructor(private eventManager: EventManager) {}\n\n  destroy(): void {}\n\n  destroyNode: null;\n\n  createElement(name: string, namespace?: string): any {\n    if (namespace) {\n      return document.createElementNS(NAMESPACE_URIS[namespace], name);\n    }\n\n    return document.createElement(name);\n  }\n\n  createComment(value: string): any { return document.createComment(value); }\n\n  createText(value: string): any { return document.createTextNode(value); }\n\n  appendChild(parent: any, newChild: any): void { parent.appendChild(newChild); }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    if (parent) {\n      parent.insertBefore(newChild, refChild);\n    }\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n\n  selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any {\n    let el: any = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n                                                       selectorOrNode;\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n\n  parentNode(node: any): any { return node.parentNode; }\n\n  nextSibling(node: any): any { return node.nextSibling; }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (namespace) {\n      name = `${namespace}:${name}`;\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    if (namespace) {\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n\n  addClass(el: any, name: string): void { el.classList.add(name); }\n\n  removeClass(el: any, name: string): void { el.classList.remove(name); }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.setProperty(\n          style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      el.style[style] = '';\n    }\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n\n  setValue(node: any, value: string): void { node.nodeValue = value; }\n\n  listen(target: 'window'|'document'|'body'|any, event: string, callback: (event: any) => boolean):\n      () => void {\n    checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      return <() => void>this.eventManager.addGlobalEventListener(\n          target, event, decoratePreventDefault(callback));\n    }\n    return <() => void>this.eventManager.addEventListener(\n               target, event, decoratePreventDefault(callback)) as() => void;\n  }\n}\n\nconst AT_CHARCODE = '@'.charCodeAt(0);\nfunction checkNoSyntheticProp(name: string, nameKind: string) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\n        `Found the synthetic ${nameKind} ${name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n  }\n}\n\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n  private contentAttr: string;\n  private hostAttr: string;\n\n  constructor(\n      eventManager: EventManager, sharedStylesHost: DomSharedStylesHost,\n      private component: RendererType2) {\n    super(eventManager);\n    const styles = flattenStyles(component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n\n    this.contentAttr = shimContentAttribute(component.id);\n    this.hostAttr = shimHostAttribute(component.id);\n  }\n\n  applyToHost(element: any) { super.setAttribute(element, this.hostAttr, ''); }\n\n  createElement(parent: any, name: string): Element {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  private shadowRoot: any;\n\n  constructor(\n      eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost,\n      private hostEl: any, private component: RendererType2) {\n    super(eventManager);\n    if (component.encapsulation === ViewEncapsulation.ShadowDom) {\n      this.shadowRoot = (hostEl as any).attachShadow({mode: 'open'});\n    } else {\n      this.shadowRoot = (hostEl as any).createShadowRoot();\n    }\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = flattenStyles(component.id, component.styles, []);\n    for (let i = 0; i < styles.length; i++) {\n      const styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n\n  private nodeOrShadowRoot(node: any): any { return node === this.hostEl ? this.shadowRoot : node; }\n\n  destroy() { this.sharedStylesHost.removeHost(this.shadowRoot); }\n\n  appendChild(parent: any, newChild: any): void {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  removeChild(parent: any, oldChild: any): void {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n  parentNode(node: any): any {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPlatformServer} from '@angular/common';\nimport {Inject, Injectable, NgZone, Optional, PLATFORM_ID} from '@angular/core';\n\n\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'\n * since Angular can do much more\n * efficient bookkeeping than Zone can, because we have additional information. This speeds up\n * addEventListener by 3x.\n */\nconst __symbol__ =\n    (typeof Zone !== 'undefined') && (Zone as any)['__symbol__'] || function(v: string): string {\n      return '__zone_symbol__' + v;\n    };\nconst ADD_EVENT_LISTENER: 'addEventListener' = __symbol__('addEventListener');\nconst REMOVE_EVENT_LISTENER: 'removeEventListener' = __symbol__('removeEventListener');\n\nconst symbolNames: {[key: string]: string} = {};\n\nconst FALSE = 'FALSE';\nconst ANGULAR = 'ANGULAR';\nconst NATIVE_ADD_LISTENER = 'addEventListener';\nconst NATIVE_REMOVE_LISTENER = 'removeEventListener';\n\n// use the same symbol string which is used in zone.js\nconst stopSymbol = '__zone_symbol__propagationStopped';\nconst stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';\n\nconst blackListedEvents: string[] =\n    (typeof Zone !== 'undefined') && (Zone as any)[__symbol__('BLACK_LISTED_EVENTS')];\nlet blackListedMap: {[eventName: string]: string};\nif (blackListedEvents) {\n  blackListedMap = {};\n  blackListedEvents.forEach(eventName => { blackListedMap[eventName] = eventName; });\n}\n\nconst isBlackListedEvent = function(eventName: string) {\n  if (!blackListedMap) {\n    return false;\n  }\n  return blackListedMap.hasOwnProperty(eventName);\n};\n\ninterface TaskData {\n  zone: any;\n  handler: Function;\n}\n\n// a global listener to handle all dom event,\n// so we do not need to create a closure every time\nconst globalListener = function(event: Event) {\n  const symbolName = symbolNames[event.type];\n  if (!symbolName) {\n    return;\n  }\n  const taskDatas: TaskData[] = this[symbolName];\n  if (!taskDatas) {\n    return;\n  }\n  const args: any = [event];\n  if (taskDatas.length === 1) {\n    // if taskDatas only have one element, just invoke it\n    const taskData = taskDatas[0];\n    if (taskData.zone !== Zone.current) {\n      // only use Zone.run when Zone.current not equals to stored zone\n      return taskData.zone.run(taskData.handler, this, args);\n    } else {\n      return taskData.handler.apply(this, args);\n    }\n  } else {\n    // copy tasks as a snapshot to avoid event handlers remove\n    // itself or others\n    const copiedTasks = taskDatas.slice();\n    for (let i = 0; i < copiedTasks.length; i++) {\n      // if other listener call event.stopImmediatePropagation\n      // just break\n      if ((event as any)[stopSymbol] === true) {\n        break;\n      }\n      const taskData = copiedTasks[i];\n      if (taskData.zone !== Zone.current) {\n        // only use Zone.run when Zone.current not equals to stored zone\n        taskData.zone.run(taskData.handler, this, args);\n      } else {\n        taskData.handler.apply(this, args);\n      }\n    }\n  }\n};\n\n@Injectable()\nexport class DomEventsPlugin extends EventManagerPlugin {\n  constructor(\n      @Inject(DOCUMENT) doc: any, private ngZone: NgZone,\n      @Optional() @Inject(PLATFORM_ID) platformId: {}|null) {\n    super(doc);\n\n    if (!platformId || !isPlatformServer(platformId)) {\n      this.patchEvent();\n    }\n  }\n\n  private patchEvent() {\n    if (typeof Event === 'undefined' || !Event || !Event.prototype) {\n      return;\n    }\n    if ((Event.prototype as any)[stopMethodSymbol]) {\n      // already patched by zone.js\n      return;\n    }\n    const delegate = (Event.prototype as any)[stopMethodSymbol] =\n        Event.prototype.stopImmediatePropagation;\n    Event.prototype.stopImmediatePropagation = function() {\n      if (this) {\n        this[stopSymbol] = true;\n      }\n\n      // should call native delegate in case\n      // in some environment part of the application\n      // will not use the patched Event\n      delegate && delegate.apply(this, arguments);\n    };\n  }\n\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName: string): boolean { return true; }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    /**\n     * This code is about to add a listener to the DOM. If Zone.js is present, than\n     * `addEventListener` has been patched. The patched code adds overhead in both\n     * memory and speed (3x slower) than native. For this reason if we detect that\n     * Zone.js is present we use a simple version of zone aware addEventListener instead.\n     * The result is faster registration and the zone will be restored.\n     * But ZoneSpec.onScheduleTask, ZoneSpec.onInvokeTask, ZoneSpec.onCancelTask\n     * will not be invoked\n     * We also do manual zone restoration in element.ts renderEventHandlerClosure method.\n     *\n     * NOTE: it is possible that the element is from different iframe, and so we\n     * have to check before we execute the method.\n     */\n    const self = this;\n    const zoneJsLoaded = element[ADD_EVENT_LISTENER];\n    let callback: EventListener = handler as EventListener;\n    // if zonejs is loaded and current zone is not ngZone\n    // we keep Zone.current on target for later restoration.\n    if (zoneJsLoaded && (!NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {\n      let symbolName = symbolNames[eventName];\n      if (!symbolName) {\n        symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);\n      }\n      let taskDatas: TaskData[] = (element as any)[symbolName];\n      const globalListenerRegistered = taskDatas && taskDatas.length > 0;\n      if (!taskDatas) {\n        taskDatas = (element as any)[symbolName] = [];\n      }\n\n      const zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;\n      if (taskDatas.length === 0) {\n        taskDatas.push({zone: zone, handler: callback});\n      } else {\n        let callbackRegistered = false;\n        for (let i = 0; i < taskDatas.length; i++) {\n          if (taskDatas[i].handler === callback) {\n            callbackRegistered = true;\n            break;\n          }\n        }\n        if (!callbackRegistered) {\n          taskDatas.push({zone: zone, handler: callback});\n        }\n      }\n\n      if (!globalListenerRegistered) {\n        element[ADD_EVENT_LISTENER](eventName, globalListener, false);\n      }\n    } else {\n      element[NATIVE_ADD_LISTENER](eventName, callback, false);\n    }\n    return () => this.removeEventListener(element, eventName, callback);\n  }\n\n  removeEventListener(target: any, eventName: string, callback: Function): void {\n    let underlyingRemove = target[REMOVE_EVENT_LISTENER];\n    // zone.js not loaded, use native removeEventListener\n    if (!underlyingRemove) {\n      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n    let symbolName = symbolNames[eventName];\n    let taskDatas: TaskData[] = symbolName && target[symbolName];\n    if (!taskDatas) {\n      // addEventListener not using patched version\n      // just call native removeEventListener\n      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n    // fix issue 20532, should be able to remove\n    // listener which was added inside of ngZone\n    let found = false;\n    for (let i = 0; i < taskDatas.length; i++) {\n      // remove listener from taskDatas if the callback equals\n      if (taskDatas[i].handler === callback) {\n        found = true;\n        taskDatas.splice(i, 1);\n        break;\n      }\n    }\n    if (found) {\n      if (taskDatas.length === 0) {\n        // all listeners are removed, we can remove the globalListener from target\n        underlyingRemove.apply(target, [eventName, globalListener, false]);\n      }\n    } else {\n      // not found in taskDatas, the callback may be added inside of ngZone\n      // use native remove listener to remove the callback\n      target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Sanitizer, SecurityContext, Éµ_sanitizeHtml as _sanitizeHtml, Éµ_sanitizeStyle as _sanitizeStyle, Éµ_sanitizeUrl as _sanitizeUrl} from '@angular/core';\n\nimport {DOCUMENT} from '../dom/dom_tokens';\n\nexport {SecurityContext};\n\n\n\n/**\n * Marker interface for a value that's safe to use in a particular context.\n *\n * @publicApi\n */\nexport interface SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as HTML.\n *\n * @publicApi\n */\nexport interface SafeHtml extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as style (CSS).\n *\n * @publicApi\n */\nexport interface SafeStyle extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as JavaScript.\n *\n * @publicApi\n */\nexport interface SafeScript extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL linking to a document.\n *\n * @publicApi\n */\nexport interface SafeUrl extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL to load executable code from.\n *\n * @publicApi\n */\nexport interface SafeResourceUrl extends SafeValue {}\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\nexport abstract class DomSanitizer implements Sanitizer {\n  /**\n   * Sanitizes a value for use in the given SecurityContext.\n   *\n   * If value is trusted for the context, this method will unwrap the contained safe value and use\n   * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n   * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n   * is responsible to make sure that the value can definitely be safely used in the given context.\n   */\n  abstract sanitize(context: SecurityContext, value: SafeValue|string|null): string|null;\n\n  /**\n   * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n   * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n   * leave safe HTML intact, so in most situations this method should not be used.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustHtml(value: string): SafeHtml;\n\n  /**\n   * Bypass security and trust the given value to be safe style value (CSS).\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustStyle(value: string): SafeStyle;\n\n  /**\n   * Bypass security and trust the given value to be safe JavaScript.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustScript(value: string): SafeScript;\n\n  /**\n   * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n   * in hyperlinks or `<img src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustUrl(value: string): SafeUrl;\n\n  /**\n   * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n   * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl;\n}\n\n\n@Injectable()\nexport class DomSanitizerImpl extends DomSanitizer {\n  constructor(@Inject(DOCUMENT) private _doc: any) { super(); }\n\n  sanitize(ctx: SecurityContext, value: SafeValue|string|null): string|null {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value as string;\n      case SecurityContext.HTML:\n        if (value instanceof SafeHtmlImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'HTML');\n        return _sanitizeHtml(this._doc, String(value));\n      case SecurityContext.STYLE:\n        if (value instanceof SafeStyleImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'Style');\n        return _sanitizeStyle(value as string);\n      case SecurityContext.SCRIPT:\n        if (value instanceof SafeScriptImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'Script');\n        throw new Error('unsafe value used in a script context');\n      case SecurityContext.URL:\n        if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n          // Allow resource URLs in URL contexts, they are strictly more trusted.\n          return value.changingThisBreaksApplicationSecurity;\n        }\n        this.checkNotSafeValue(value, 'URL');\n        return _sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (value instanceof SafeResourceUrlImpl) {\n          return value.changingThisBreaksApplicationSecurity;\n        }\n        this.checkNotSafeValue(value, 'ResourceURL');\n        throw new Error(\n            'unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n      default:\n        throw new Error(`Unexpected SecurityContext ${ctx} (see http://g.co/ng/security#xss)`);\n    }\n  }\n\n  private checkNotSafeValue(value: any, expectedType: string) {\n    if (value instanceof SafeValueImpl) {\n      throw new Error(\n          `Required a safe ${expectedType}, got a ${value.getTypeName()} ` +\n          `(see http://g.co/ng/security#xss)`);\n    }\n  }\n\n  bypassSecurityTrustHtml(value: string): SafeHtml { return new SafeHtmlImpl(value); }\n  bypassSecurityTrustStyle(value: string): SafeStyle { return new SafeStyleImpl(value); }\n  bypassSecurityTrustScript(value: string): SafeScript { return new SafeScriptImpl(value); }\n  bypassSecurityTrustUrl(value: string): SafeUrl { return new SafeUrlImpl(value); }\n  bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl {\n    return new SafeResourceUrlImpl(value);\n  }\n}\n\nabstract class SafeValueImpl implements SafeValue {\n  constructor(public changingThisBreaksApplicationSecurity: string) {\n    // empty\n  }\n\n  abstract getTypeName(): string;\n\n  toString() {\n    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity}` +\n        ` (see http://g.co/ng/security#xss)`;\n  }\n}\n\nclass SafeHtmlImpl extends SafeValueImpl implements SafeHtml {\n  getTypeName() { return 'HTML'; }\n}\nclass SafeStyleImpl extends SafeValueImpl implements SafeStyle {\n  getTypeName() { return 'Style'; }\n}\nclass SafeScriptImpl extends SafeValueImpl implements SafeScript {\n  getTypeName() { return 'Script'; }\n}\nclass SafeUrlImpl extends SafeValueImpl implements SafeUrl {\n  getTypeName() { return 'URL'; }\n}\nclass SafeResourceUrlImpl extends SafeValueImpl implements SafeResourceUrl {\n  getTypeName() { return 'ResourceURL'; }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, InjectionToken, Optional, ÉµConsole as Console} from '@angular/core';\n\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n};\n\n/**\n * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @publicApi\n */\nexport const HAMMER_GESTURE_CONFIG = new InjectionToken<HammerGestureConfig>('HammerGestureConfig');\n\n\n/**\n * Function that loads HammerJS, returning a promise that is resolved once HammerJs is loaded.\n *\n * @publicApi\n */\nexport type HammerLoader = () => Promise<void>;\n\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nexport const HAMMER_LOADER = new InjectionToken<HammerLoader>('HammerLoader');\n\nexport interface HammerInstance {\n  on(eventName: string, callback?: Function): void;\n  off(eventName: string, callback?: Function): void;\n  destroy?(): void;\n}\n\n/**\n * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n@Injectable()\nexport class HammerGestureConfig {\n  /**\n   * A set of supported event names for gestures to be used in Angular.\n   * Angular supports all built-in recognizers, as listed in\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   */\n  events: string[] = [];\n\n  /**\n  * Maps gesture event names to a set of configuration options\n  * that specify overrides to the default values for specific properties.\n  *\n  * The key is a supported event name to be configured,\n  * and the options object contains a set of properties, with override values\n  * to be applied to the named recognizer event.\n  * For example, to disable recognition of the rotate event, specify\n  *  `{\"rotate\": {\"enable\": false}}`.\n  *\n  * Properties that are not present take the HammerJS default values.\n  * For information about which properties are supported for which events,\n  * and their allowed and default values, see\n  * [HammerJS documentation](http://hammerjs.github.io/).\n  *\n  */\n  overrides: {[key: string]: Object} = {};\n\n  /**\n   * Properties whose default values can be overridden for a given event.\n   * Different sets of properties apply to different events.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   */\n  options?: {\n    cssProps?: any; domEvents?: boolean; enable?: boolean | ((manager: any) => boolean);\n    preset?: any[];\n    touchAction?: string;\n    recognizers?: any[];\n    inputClass?: any;\n    inputTarget?: EventTarget;\n  };\n\n  /**\n   * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const mc = new Hammer !(element, this.options);\n\n    mc.get('pinch').set({enable: true});\n    mc.get('rotate').set({enable: true});\n\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\n}\n\n@Injectable()\nexport class HammerGesturesPlugin extends EventManagerPlugin {\n  constructor(\n      @Inject(DOCUMENT) doc: any,\n      @Inject(HAMMER_GESTURE_CONFIG) private _config: HammerGestureConfig, private console: Console,\n      @Optional() @Inject(HAMMER_LOADER) private loader?: HammerLoader|null) {\n    super(doc);\n  }\n\n  supports(eventName: string): boolean {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!(window as any).Hammer && !this.loader) {\n      this.console.warn(\n          `The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n          `loaded and no custom loader has been specified.`);\n      return false;\n    }\n\n    return true;\n  }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n\n    // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n    if (!(window as any).Hammer && this.loader) {\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n      let cancelRegistration = false;\n      let deregister: Function = () => { cancelRegistration = true; };\n\n      this.loader()\n          .then(() => {\n            // If Hammer isn't actually loaded when the custom loader resolves, give up.\n            if (!(window as any).Hammer) {\n              this.console.warn(\n                  `The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n              deregister = () => {};\n              return;\n            }\n\n            if (!cancelRegistration) {\n              // Now that Hammer is loaded and the listener is being loaded for real,\n              // the deregistration function changes from canceling registration to removal.\n              deregister = this.addEventListener(element, eventName, handler);\n            }\n          })\n          .catch(() => {\n            this.console.warn(\n                `The \"${eventName}\" event cannot be bound because the custom ` +\n                `Hammer.JS loader failed.`);\n            deregister = () => {};\n          });\n\n      // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n      return () => { deregister(); };\n    }\n\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n      const callback = function(eventObj: HammerInput) {\n        zone.runGuarded(function() { handler(eventObj); });\n      };\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback);\n        // destroy mc to prevent memory leak\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n\n  isCustomEvent(eventName: string): boolean { return this._config.events.indexOf(eventName) > -1; }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, NgZone} from '@angular/core';\n\nimport {getDOM} from '../dom_adapter';\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS: {[key: string]: (event: KeyboardEvent) => boolean} = {\n  'alt': (event: KeyboardEvent) => event.altKey,\n  'control': (event: KeyboardEvent) => event.ctrlKey,\n  'meta': (event: KeyboardEvent) => event.metaKey,\n  'shift': (event: KeyboardEvent) => event.shiftKey\n};\n\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n@Injectable()\nexport class KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(@Inject(DOCUMENT) doc: any) { super(doc); }\n\n  /**\n    * Reports whether a named key event is supported.\n    * @param eventName The event name to query.\n    * @return True if the named key event is supported.\n   */\n  supports(eventName: string): boolean { return KeyEventsPlugin.parseEventName(eventName) != null; }\n\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n  */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName) !;\n\n    const outsideHandler =\n        KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n\n    return this.manager.getZone().runOutsideAngular(() => {\n      return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n\n  static parseEventName(eventName: string): {[key: string]: string}|null {\n    const parts: string[] = eventName.toLowerCase().split('.');\n\n    const domEventName = parts.shift();\n    if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const key = KeyEventsPlugin._normalizeKey(parts.pop() !);\n\n    let fullKey = '';\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index: number = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n\n    const result: {[k: string]: string} = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n\n  static getEventFullKey(event: KeyboardEvent): string {\n    let fullKey = '';\n    let key = getDOM().getEventKey(event);\n    key = key.toLowerCase();\n    if (key === ' ') {\n      key = 'space';  // for readability\n    } else if (key === '.') {\n      key = 'dot';  // because '.' is used as a separator in event names\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName != key) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          fullKey += modifierName + '.';\n        }\n      }\n    });\n    fullKey += key;\n    return fullKey;\n  }\n\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n  static eventCallback(fullKey: any, handler: Function, zone: NgZone): Function {\n    return (event: any /** TODO #9100 */) => {\n      if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n\n  /** @internal */\n  static _normalizeKey(keyName: string): string {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n      default:\n        return keyName;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, PlatformLocation, ÉµPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {APP_ID, ApplicationModule, ErrorHandler, Inject, ModuleWithProviders, NgModule, NgZone, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, RendererFactory2, Sanitizer, SkipSelf, StaticProvider, Testability, createPlatformFactory, platformCore, ÉµAPP_ROOT as APP_ROOT, ÉµConsole as Console} from '@angular/core';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nimport {SERVER_TRANSITION_PROVIDERS, TRANSITION_ID} from './browser/server-transition';\nimport {BrowserGetTestability} from './browser/testability';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {DomRendererFactory2} from './dom/dom_renderer';\nimport {DOCUMENT} from './dom/dom_tokens';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerGesturesPlugin} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {DomSanitizer, DomSanitizerImpl} from './security/dom_sanitization_service';\n\nexport const INTERNAL_BROWSER_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: PlatformLocation, useClass: BrowserPlatformLocation, deps: [DOCUMENT]},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * @publicApi\n */\nexport const BROWSER_SANITIZATION_PROVIDERS: StaticProvider[] = [\n  {provide: Sanitizer, useExisting: DomSanitizer},\n  {provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT]},\n];\n\n/**\n * @publicApi\n */\nexport const platformBrowser: (extraProviders?: StaticProvider[]) => PlatformRef =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n\nexport function _document(): any {\n  return document;\n}\n\nexport const BROWSER_MODULE_PROVIDERS: StaticProvider[] = [\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: APP_ROOT, useValue: true},\n  {provide: ErrorHandler, useFactory: errorHandler, deps: []},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    multi: true,\n    deps: [DOCUMENT, NgZone, PLATFORM_ID]\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT]},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    multi: true,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Console, [new Optional(), HAMMER_LOADER]]\n  },\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n  {\n    provide: DomRendererFactory2,\n    useClass: DomRendererFactory2,\n    deps: [EventManager, DomSharedStylesHost]\n  },\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT]},\n  {provide: Testability, useClass: Testability, deps: [NgZone]},\n  {provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone]},\n  ELEMENT_PROBE_PROVIDERS,\n];\n\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by defaults in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n@NgModule({providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule]})\nexport class BrowserModule {\n  constructor(@Optional() @SkipSelf() @Inject(BrowserModule) parentModule: BrowserModule|null) {\n    if (parentModule) {\n      throw new Error(\n          `BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n  static withServerTransition(params: {appId: string}): ModuleWithProviders<BrowserModule> {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n        {provide: TRANSITION_ID, useExisting: APP_ID},\n        SERVER_TRANSITION_PROVIDERS,\n      ],\n    };\n  }\n}\n","import { Component, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@Component({ selector: 'hello-world', template: 'Hello World!' })\nexport class AppComponent { }\n\n@NgModule({ declarations: [AppComponent], imports: [BrowserModule], bootstrap: [AppComponent] })\nexport class AppModule { }\n","Hello World!","import { enableProdMode } from '@angular/core';\nimport { platformBrowser } from '@angular/platform-browser';\nimport { AppModuleNgFactory } from './app.module.ngfactory';\n\nenableProdMode();\n\nplatformBrowser().bootstrapModuleFactory(AppModuleNgFactory).catch(err => console.error(err));\n"]}